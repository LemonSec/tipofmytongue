1
00:00:00,000 --> 00:00:04,890
good afternoon everybody and welcome to

2
00:00:02,460 --> 00:00:07,080
adventures in the Underland the CQ

3
00:00:04,890 --> 00:00:09,989
forensic toolkit as a unique weapon

4
00:00:07,080 --> 00:00:11,940
against hackers you are in Laguna JKL

5
00:00:09,990 --> 00:00:13,830
right now and today Palo

6
00:00:11,940 --> 00:00:15,899
Janusz kovitch will be delivering this

7
00:00:13,830 --> 00:00:17,760
talk to you just a couple of comments

8
00:00:15,900 --> 00:00:19,320
before we get started don't forget to

9
00:00:17,760 --> 00:00:21,750
stop by the business hall it's located

10
00:00:19,320 --> 00:00:24,090
in Mandalay Bay Oceanside and shoreline

11
00:00:21,750 --> 00:00:26,310
ballrooms also the black matte but

12
00:00:24,090 --> 00:00:29,189
blackhat Arsenal is in the business hall

13
00:00:26,310 --> 00:00:31,169
in Oceanside and one last reminder to

14
00:00:29,189 --> 00:00:34,550
make sure to silence your phones and

15
00:00:31,170 --> 00:00:36,980
with that Paula take away yes lovely

16
00:00:34,550 --> 00:00:39,149
[Applause]

17
00:00:36,980 --> 00:00:43,260
good afternoon everyone how is everybody

18
00:00:39,149 --> 00:00:46,170
doing good yes good to hear that okay so

19
00:00:43,260 --> 00:00:47,610
as you see I'm Paula J and they're just

20
00:00:46,170 --> 00:00:48,780
a couple of words for the introduction

21
00:00:47,610 --> 00:00:50,700
and then we're going to get immediately

22
00:00:48,780 --> 00:00:54,149
to the subject we've got 50 intense

23
00:00:50,700 --> 00:00:56,579
minutes about forensics so basically I'm

24
00:00:54,149 --> 00:00:58,980
the CEO of secure so it's a company that

25
00:00:56,579 --> 00:01:01,829
I've established 11 years ago we are

26
00:00:58,980 --> 00:01:05,099
right now in New York Dubai Switzerland

27
00:01:01,829 --> 00:01:06,869
and Poland performing penetration tests

28
00:01:05,099 --> 00:01:09,929
forensic investigations and also

29
00:01:06,869 --> 00:01:12,119
education and myself even though you've

30
00:01:09,930 --> 00:01:13,770
got this funky roll over there Microsoft

31
00:01:12,119 --> 00:01:15,840
Regional Director you might be wondering

32
00:01:13,770 --> 00:01:18,720
am I actually working for Microsoft and

33
00:01:15,840 --> 00:01:20,880
I'm not so why this is over that it's

34
00:01:18,720 --> 00:01:24,320
just like I'm not Microsoft I'm not even

35
00:01:20,880 --> 00:01:27,000
a directory so am i regional then yes

36
00:01:24,320 --> 00:01:29,939
this is actually the role of someone

37
00:01:27,000 --> 00:01:32,640
that Microsoft gifts including actually

38
00:01:29,939 --> 00:01:34,139
access to the source code of Windows to

39
00:01:32,640 --> 00:01:37,549
someone that does something innovative

40
00:01:34,140 --> 00:01:39,930
in technology so apparently this is it

41
00:01:37,549 --> 00:01:43,619
but my background is very

42
00:01:39,930 --> 00:01:45,750
straightforward enjoying my consultants

43
00:01:43,619 --> 00:01:48,869
life and this is basically my background

44
00:01:45,750 --> 00:01:52,200
visiting customers and figuring out if

45
00:01:48,869 --> 00:01:54,000
it's possible to get inside my team as

46
00:01:52,200 --> 00:01:55,770
well as lots of research so that's

47
00:01:54,000 --> 00:01:57,299
pretty much what this also session is

48
00:01:55,770 --> 00:01:59,670
going to be about so we're going to be

49
00:01:57,299 --> 00:02:02,280
discussing the C key forensic tool kit

50
00:01:59,670 --> 00:02:04,259
it's different types of tools that

51
00:02:02,280 --> 00:02:05,939
within our team we use them for

52
00:02:04,259 --> 00:02:07,860
forensics we share them with you for

53
00:02:05,939 --> 00:02:09,989
free so that's very important to mention

54
00:02:07,860 --> 00:02:12,030
and you are able to download them from

55
00:02:09,989 --> 00:02:14,730
our blog secure academy

56
00:02:12,030 --> 00:02:17,010
home slash blog and these are the tools

57
00:02:14,730 --> 00:02:19,350
that eventually we figured that we need

58
00:02:17,010 --> 00:02:21,690
to have them because during the projects

59
00:02:19,350 --> 00:02:24,090
we simply needed them and this is how

60
00:02:21,690 --> 00:02:26,400
they were created so we hope and I hope

61
00:02:24,090 --> 00:02:28,410
that this session and this is my

62
00:02:26,400 --> 00:02:30,510
personal golfer today it's gonna bring

63
00:02:28,410 --> 00:02:31,859
your forensics if you're doing the one

64
00:02:30,510 --> 00:02:33,750
to the next level

65
00:02:31,860 --> 00:02:35,760
we're gonna be discussing today things

66
00:02:33,750 --> 00:02:37,830
like data protection API because our

67
00:02:35,760 --> 00:02:39,899
team fully reverse engineer the whole

68
00:02:37,830 --> 00:02:41,880
crypto platform in Windows and we shared

69
00:02:39,900 --> 00:02:43,530
lots of different tools about that so

70
00:02:41,880 --> 00:02:45,269
it's gonna be able about this it's gonna

71
00:02:43,530 --> 00:02:47,160
be all about information instruction

72
00:02:45,269 --> 00:02:50,670
from Windows so this is what's gonna

73
00:02:47,160 --> 00:02:52,470
happen in this 50 minutes I'm also on

74
00:02:50,670 --> 00:02:54,329
Twitter sharing different types of

75
00:02:52,470 --> 00:02:59,220
information there so feel free to check

76
00:02:54,330 --> 00:03:01,019
and we are good to go if it's about of

77
00:02:59,220 --> 00:03:02,819
course my engagements with in the

78
00:03:01,019 --> 00:03:04,319
different types of events and if you

79
00:03:02,819 --> 00:03:07,470
will be searching for more information

80
00:03:04,319 --> 00:03:09,780
absolutely please do that within our

81
00:03:07,470 --> 00:03:11,760
team it's not only myself speaking from

82
00:03:09,780 --> 00:03:13,260
our team you are able to find lots of

83
00:03:11,760 --> 00:03:15,870
different types of tools written by our

84
00:03:13,260 --> 00:03:18,060
team members out there yes so that would

85
00:03:15,870 --> 00:03:21,360
be a bit for the introduction let's have

86
00:03:18,060 --> 00:03:23,250
a look at the whole context so before we

87
00:03:21,360 --> 00:03:25,380
actually start at the presentation I

88
00:03:23,250 --> 00:03:27,450
would like to share with you one of my

89
00:03:25,380 --> 00:03:29,579
favorite stories and this is my favorite

90
00:03:27,450 --> 00:03:31,920
story because it shows different kinds

91
00:03:29,579 --> 00:03:33,870
of looks on cybersecurity that we've got

92
00:03:31,920 --> 00:03:36,119
it doesn't have to be only a technology

93
00:03:33,870 --> 00:03:38,310
can be also something else and the story

94
00:03:36,120 --> 00:03:40,739
is related with our customer in

95
00:03:38,310 --> 00:03:43,470
Switzerland when I was supposed to do

96
00:03:40,739 --> 00:03:45,630
that social engineering project and they

97
00:03:43,470 --> 00:03:47,850
are supposed to do the whole analysis

98
00:03:45,630 --> 00:03:50,070
that were related with it so long story

99
00:03:47,850 --> 00:03:52,829
short my job was to get inside the

100
00:03:50,070 --> 00:03:55,920
building and still some data whatever

101
00:03:52,829 --> 00:03:57,570
that way would be right so I do start

102
00:03:55,920 --> 00:03:59,940
the project like this that I'm like

103
00:03:57,570 --> 00:04:01,829
seeing the customer building there is

104
00:03:59,940 --> 00:04:05,519
like the entrance so you are able

105
00:04:01,829 --> 00:04:07,440
basically to either like use the card to

106
00:04:05,519 --> 00:04:09,660
eat and the door will open or you can

107
00:04:07,440 --> 00:04:11,730
type the pin but I don't have either of

108
00:04:09,660 --> 00:04:13,320
those or you can call them there's like

109
00:04:11,730 --> 00:04:15,119
this big boba camera and they're gonna

110
00:04:13,320 --> 00:04:16,620
see you which if you want to do a social

111
00:04:15,120 --> 00:04:19,269
engineering this is probably the last

112
00:04:16,620 --> 00:04:22,000
choice that you would pick right

113
00:04:19,269 --> 00:04:23,470
so at the end what I did there was just

114
00:04:22,000 --> 00:04:25,960
this door at the very beginning to the

115
00:04:23,470 --> 00:04:28,599
elevator area I stick to some nice guys

116
00:04:25,960 --> 00:04:29,919
back and don't get me wrong I'm gonna be

117
00:04:28,599 --> 00:04:32,740
very open with you sorry about that

118
00:04:29,919 --> 00:04:35,590
being a woman in a guy's industry helps

119
00:04:32,740 --> 00:04:38,199
a little bit and blonde also adds a

120
00:04:35,590 --> 00:04:40,750
little bit of that so I like to talk

121
00:04:38,199 --> 00:04:43,870
really with everybody everywhere in the

122
00:04:40,750 --> 00:04:46,960
elevator especially I like to meet

123
00:04:43,870 --> 00:04:48,220
people so this is very nice and social

124
00:04:46,960 --> 00:04:50,440
engineering project is something that I

125
00:04:48,220 --> 00:04:52,389
also doing that within our team so this

126
00:04:50,440 --> 00:04:55,539
is a little bit of a funky combination

127
00:04:52,389 --> 00:04:57,009
that allows me to get inside it organ to

128
00:04:55,539 --> 00:04:59,500
get into different types of situations

129
00:04:57,009 --> 00:05:01,090
right so anyway I'm in the elevator area

130
00:04:59,500 --> 00:05:04,690
because I did something that we call

131
00:05:01,090 --> 00:05:06,669
tailgating just in case this guy turns

132
00:05:04,690 --> 00:05:09,729
back or something I could always smile

133
00:05:06,669 --> 00:05:12,430
her stupidly and he's gonna believe it

134
00:05:09,729 --> 00:05:15,068
right so this is this is the situation

135
00:05:12,430 --> 00:05:17,229
now I mean the elevators area yeah and

136
00:05:15,069 --> 00:05:20,199
the situation is that we've got an

137
00:05:17,229 --> 00:05:22,930
elevator a and D and in between those

138
00:05:20,199 --> 00:05:25,539
you've got a pod and you are able to

139
00:05:22,930 --> 00:05:27,370
type like the just to press the floor

140
00:05:25,539 --> 00:05:29,289
number that you want to go to so this

141
00:05:27,370 --> 00:05:32,259
particular customer was spread it across

142
00:05:29,289 --> 00:05:35,020
three floors six seven or eight so I'm

143
00:05:32,259 --> 00:05:37,090
waiting for someone to actually press

144
00:05:35,020 --> 00:05:38,590
four six or seven because I know that on

145
00:05:37,090 --> 00:05:40,150
the floor eight that was that reception

146
00:05:38,590 --> 00:05:42,580
and I don't want to be seen over there

147
00:05:40,150 --> 00:05:44,380
so I'm leveraging a bit of a surreal

148
00:05:42,580 --> 00:05:46,870
type of a girl

149
00:05:44,380 --> 00:05:49,029
we've got always like big bags with like

150
00:05:46,870 --> 00:05:51,130
lots of things inside again I mean it

151
00:05:49,029 --> 00:05:53,380
fits in the thing to the stereotype some

152
00:05:51,130 --> 00:05:55,900
kind of using it and I'm observing at

153
00:05:53,380 --> 00:05:57,940
the same time is there someone pressing

154
00:05:55,900 --> 00:06:02,529
the floor six or seven and there is this

155
00:05:57,940 --> 00:06:04,210
guy again it's a it's a real story so

156
00:06:02,529 --> 00:06:06,610
I'm oh I was enjoying it this project

157
00:06:04,210 --> 00:06:10,270
actually so there's this guy and he's

158
00:06:06,610 --> 00:06:12,789
actually quite handsome score so he

159
00:06:10,270 --> 00:06:16,120
presses the floor six door is opening

160
00:06:12,789 --> 00:06:18,219
what I'm doing I'm jumping to the back

161
00:06:16,120 --> 00:06:21,159
side of the elevator quite quickly and

162
00:06:18,219 --> 00:06:22,779
immediately and door closes we are

163
00:06:21,159 --> 00:06:25,750
together in the elevator of this guy and

164
00:06:22,779 --> 00:06:27,279
the question to you guys is why did I

165
00:06:25,750 --> 00:06:30,729
jump to the back side of the elevator

166
00:06:27,279 --> 00:06:31,810
what do you think let's pick out some

167
00:06:30,729 --> 00:06:36,400
suggestions

168
00:06:31,810 --> 00:06:38,530
put yourself in a yeah he might not

169
00:06:36,400 --> 00:06:40,450
notice me right so I can be like how do

170
00:06:38,530 --> 00:06:42,669
I want to be noticed but okay that could

171
00:06:40,450 --> 00:06:48,610
be actually one of the situations right

172
00:06:42,670 --> 00:06:52,030
he might not notice me what else make

173
00:06:48,610 --> 00:06:53,980
him Luke oh so that he's kind of natural

174
00:06:52,030 --> 00:06:56,320
yet could be I could be pretending that

175
00:06:53,980 --> 00:06:57,550
I'm supposed to beat her yeah it's a

176
00:06:56,320 --> 00:06:59,920
couple of other things I could read his

177
00:06:57,550 --> 00:07:01,510
mobile phone and so on totally yes but

178
00:06:59,920 --> 00:07:03,100
what happened is that when the door

179
00:07:01,510 --> 00:07:05,409
closed we started this conversation

180
00:07:03,100 --> 00:07:07,360
right and the conversation was

181
00:07:05,410 --> 00:07:09,760
I'm just asking me a question how are

182
00:07:07,360 --> 00:07:12,040
you doing and I'm smiling you know like

183
00:07:09,760 --> 00:07:15,400
you know that encourages people to smile

184
00:07:12,040 --> 00:07:18,250
back so he smiles back and he's like I'm

185
00:07:15,400 --> 00:07:19,150
fine how are you doing and I'm making a

186
00:07:18,250 --> 00:07:22,030
little bit of a poser

187
00:07:19,150 --> 00:07:23,890
because poser makes people to expect you

188
00:07:22,030 --> 00:07:26,799
some that you're gonna say something so

189
00:07:23,890 --> 00:07:29,260
it's like this tension is increasing so

190
00:07:26,800 --> 00:07:32,500
I'm waiting and smiling and looking and

191
00:07:29,260 --> 00:07:40,140
I'm saying nice to see you again

192
00:07:32,500 --> 00:07:42,340
- and he's like again so basically

193
00:07:40,140 --> 00:07:45,520
whenever we are thinking about the whole

194
00:07:42,340 --> 00:07:48,849
concept yeah he's feeling that we've

195
00:07:45,520 --> 00:07:51,340
even known each other before yeah so at

196
00:07:48,850 --> 00:07:53,290
the end whenever we are just continuing

197
00:07:51,340 --> 00:07:55,330
this conversation I decided to bring the

198
00:07:53,290 --> 00:07:58,770
conversation to the next level and I

199
00:07:55,330 --> 00:08:01,450
said you know what you smell very well

200
00:07:58,770 --> 00:08:03,789
yeah it's kind of over think right and

201
00:08:01,450 --> 00:08:06,450
then he's like and then he's like do you

202
00:08:03,790 --> 00:08:09,550
think so I'm like mm-hmm

203
00:08:06,450 --> 00:08:11,650
why did I do that to make him feel good

204
00:08:09,550 --> 00:08:14,169
hey sorry this is brutal

205
00:08:11,650 --> 00:08:16,870
I know but who cares about that it's a

206
00:08:14,169 --> 00:08:19,120
project to be done right so second part

207
00:08:16,870 --> 00:08:21,760
is that he wants to show off a little

208
00:08:19,120 --> 00:08:24,130
bit so when we go to the floor and the

209
00:08:21,760 --> 00:08:25,780
door opened he took his card he came out

210
00:08:24,130 --> 00:08:27,640
first that's why I was second an

211
00:08:25,780 --> 00:08:29,229
elevator he did the TIC he opened the

212
00:08:27,640 --> 00:08:31,080
door and he sat with the lowered voice

213
00:08:29,229 --> 00:08:34,780
ladies first

214
00:08:31,080 --> 00:08:38,169
Sumeet again yeah and my job is to steal

215
00:08:34,780 --> 00:08:40,299
data so long story short what was quite

216
00:08:38,169 --> 00:08:43,490
interesting I was just going around and

217
00:08:40,299 --> 00:08:45,319
I was wondering where am I able to

218
00:08:43,490 --> 00:08:46,370
down and get the data out of someone's

219
00:08:45,320 --> 00:08:48,980
computer and because this was a

220
00:08:46,370 --> 00:08:51,529
financial organization there was like

221
00:08:48,980 --> 00:08:53,300
traders floors so team of traders they

222
00:08:51,529 --> 00:08:54,950
stood up and they left the room without

223
00:08:53,300 --> 00:08:57,620
locking their desktops tons of the

224
00:08:54,950 --> 00:08:59,360
boring but I decided to steal the data

225
00:08:57,620 --> 00:09:01,339
so you plug in whatever you is Vista

226
00:08:59,360 --> 00:09:03,050
kiff they're allowed not allowed in this

227
00:09:01,339 --> 00:09:05,360
case they were allowed I copied some

228
00:09:03,050 --> 00:09:09,620
data around some code and I'm done with

229
00:09:05,360 --> 00:09:12,320
my job so later on their job was to

230
00:09:09,620 --> 00:09:14,360
figure out actually what happened and in

231
00:09:12,320 --> 00:09:16,520
general my point for everything is that

232
00:09:14,360 --> 00:09:17,750
there are so many aspects to take into

233
00:09:16,520 --> 00:09:19,399
consideration when we are doing the

234
00:09:17,750 --> 00:09:21,709
forensic investigation as we all know

235
00:09:19,399 --> 00:09:24,560
but the question is as well do we have

236
00:09:21,709 --> 00:09:26,329
good tools to investigate what actually

237
00:09:24,560 --> 00:09:28,310
happened and this is what this session

238
00:09:26,330 --> 00:09:31,070
is about about all these details

239
00:09:28,310 --> 00:09:33,319
interesting places interesting ways of

240
00:09:31,070 --> 00:09:35,540
extracting data that will allow us to

241
00:09:33,320 --> 00:09:38,870
bring the investigation to the next

242
00:09:35,540 --> 00:09:42,020
level now we're gonna start with a very

243
00:09:38,870 --> 00:09:44,240
interesting tool because we're in our

244
00:09:42,020 --> 00:09:47,209
projects as I mentioned we do a lots of

245
00:09:44,240 --> 00:09:48,709
different types of analysis and that

246
00:09:47,209 --> 00:09:51,380
interesting tool is going to be related

247
00:09:48,709 --> 00:09:53,660
with extracting of the EVT X files from

248
00:09:51,380 --> 00:09:56,209
the memory so we were in the need at the

249
00:09:53,660 --> 00:09:58,339
customer site to actually perform the

250
00:09:56,209 --> 00:10:00,290
memory dam perform the disk dump but

251
00:09:58,339 --> 00:10:03,290
when we were wondering how and what type

252
00:10:00,290 --> 00:10:05,209
of information s else is actually in the

253
00:10:03,290 --> 00:10:07,339
memory dump and one of the things that

254
00:10:05,209 --> 00:10:09,859
our team did it took us over six months

255
00:10:07,339 --> 00:10:12,320
to do it we have reverse-engineered EVT

256
00:10:09,860 --> 00:10:14,480
x format so the even log format which

257
00:10:12,320 --> 00:10:16,520
sounds very easy because it's like XML

258
00:10:14,480 --> 00:10:19,579
kind of but eventually it's not easy

259
00:10:16,520 --> 00:10:21,860
because in the XML in the EVD experiment

260
00:10:19,579 --> 00:10:23,959
you've got a lots of different types of

261
00:10:21,860 --> 00:10:26,600
chunks that are digitally signed and the

262
00:10:23,959 --> 00:10:28,579
big chunks are also digitally signed so

263
00:10:26,600 --> 00:10:31,279
when you're a small thing being changed

264
00:10:28,579 --> 00:10:33,199
and then the file is corrupted so we

265
00:10:31,279 --> 00:10:35,660
technically wrote a tool that not only

266
00:10:33,200 --> 00:10:37,730
makes your files fixed so if you get a

267
00:10:35,660 --> 00:10:40,040
corrupted EVT X then we can fix it for

268
00:10:37,730 --> 00:10:41,959
you and that's a and B we are able to

269
00:10:40,040 --> 00:10:45,199
extract from the memory of the operating

270
00:10:41,959 --> 00:10:49,339
system that even log part that is not

271
00:10:45,200 --> 00:10:51,589
yet written into the EVT X file so if

272
00:10:49,339 --> 00:10:53,420
there is even generated we are able to

273
00:10:51,589 --> 00:10:56,660
make a snapshot of it and then

274
00:10:53,420 --> 00:10:58,370
build a consistent EVT X file on the top

275
00:10:56,660 --> 00:11:00,949
of that let me show you it's actually

276
00:10:58,370 --> 00:11:04,070
very easy to do and I would like to show

277
00:11:00,950 --> 00:11:07,370
you that extraction on the live dump so

278
00:11:04,070 --> 00:11:09,620
that at the end you are able to do the

279
00:11:07,370 --> 00:11:12,050
same story when you perform your memory

280
00:11:09,620 --> 00:11:14,120
dump so have a look first command that I

281
00:11:12,050 --> 00:11:17,959
ran over here it's that I'm using

282
00:11:14,120 --> 00:11:19,640
volatility from the analyze analyze DMP

283
00:11:17,960 --> 00:11:22,070
let me just change this particular file

284
00:11:19,640 --> 00:11:27,530
over here so we're gonna have to analyze

285
00:11:22,070 --> 00:11:31,100
TMP to get information to that dll list

286
00:11:27,530 --> 00:11:33,740
dot txt and within the DLL list dot txt

287
00:11:31,100 --> 00:11:35,630
I will be able to see as you see this is

288
00:11:33,740 --> 00:11:38,660
that this is the case different type of

289
00:11:35,630 --> 00:11:40,880
output and I already have the file where

290
00:11:38,660 --> 00:11:42,650
we are able to see different types of

291
00:11:40,880 --> 00:11:44,930
dll's loaded within the dump

292
00:11:42,650 --> 00:11:47,870
why am i doing this because if I would

293
00:11:44,930 --> 00:11:50,900
like to extract a VTX files that are

294
00:11:47,870 --> 00:11:53,390
managed by the even block service then

295
00:11:50,900 --> 00:11:55,939
even lock service is actually nothing

296
00:11:53,390 --> 00:11:58,490
but the SVC host and you've got one you

297
00:11:55,940 --> 00:12:00,710
got a memory dump as you've got many SVC

298
00:11:58,490 --> 00:12:03,890
holes so how do you know which SVC hose

299
00:12:00,710 --> 00:12:06,020
hosts windows even lock service by the

300
00:12:03,890 --> 00:12:08,090
DLL loaded in it right so we're going to

301
00:12:06,020 --> 00:12:14,060
be searching in this particular dump

302
00:12:08,090 --> 00:12:16,430
that DLL that is representing our win in

303
00:12:14,060 --> 00:12:20,900
Windows even lock service so I got that

304
00:12:16,430 --> 00:12:23,420
thing so I got here 848 this is the SVC

305
00:12:20,900 --> 00:12:25,430
host protis ID why this is interesting

306
00:12:23,420 --> 00:12:29,180
for me because I've got over here

307
00:12:25,430 --> 00:12:31,819
wev T SVC in it so this is how you

308
00:12:29,180 --> 00:12:33,739
recognize appropriate windows even block

309
00:12:31,820 --> 00:12:37,370
fine now what we're gonna do we're going

310
00:12:33,740 --> 00:12:40,820
to extract data from the handles that

311
00:12:37,370 --> 00:12:42,950
this particular SVC host is pointing to

312
00:12:40,820 --> 00:12:45,470
so let's do that and we're gonna run

313
00:12:42,950 --> 00:12:47,900
that by leveraging another command so

314
00:12:45,470 --> 00:12:50,150
let's just let's just do that so we've

315
00:12:47,900 --> 00:12:52,209
got here analyze the empty profile and

316
00:12:50,150 --> 00:12:56,689
then we're going to do you dump files

317
00:12:52,210 --> 00:12:58,730
dump files and we're going to do you -

318
00:12:56,690 --> 00:13:02,810
and to preserve the names we're going to

319
00:12:58,730 --> 00:13:06,439
do - protists ID 848 it was and then

320
00:13:02,810 --> 00:13:08,478
we're going to do - capital D hand

321
00:13:06,439 --> 00:13:10,608
and folder and this is a place where

322
00:13:08,479 --> 00:13:13,129
you're going to be extracting files to

323
00:13:10,609 --> 00:13:15,679
which SDC host and also and that's going

324
00:13:13,129 --> 00:13:18,319
to be the base for us to work to extract

325
00:13:15,679 --> 00:13:21,439
data from EVT x funds

326
00:13:18,319 --> 00:13:23,179
now these EVT X files are not consistent

327
00:13:21,439 --> 00:13:25,399
alright and this is what I would like to

328
00:13:23,179 --> 00:13:27,769
show you basically so what we're gonna

329
00:13:25,399 --> 00:13:30,410
do over here this is this folder and as

330
00:13:27,769 --> 00:13:32,059
you see we are getting the data in the

331
00:13:30,410 --> 00:13:33,949
folder so we don't need more because

332
00:13:32,059 --> 00:13:36,319
it's already it's already what we need

333
00:13:33,949 --> 00:13:40,008
so what am i searching for over here

334
00:13:36,319 --> 00:13:41,779
it's simply application log and we're

335
00:13:40,009 --> 00:13:43,249
gonna find this this guy why this one

336
00:13:41,779 --> 00:13:45,499
because it's big and it would be nice

337
00:13:43,249 --> 00:13:47,660
that you guys can see that that's what

338
00:13:45,499 --> 00:13:50,269
we are able to recover what is this this

339
00:13:47,660 --> 00:13:52,728
is a part of an Eevee TX found that was

340
00:13:50,269 --> 00:13:54,979
actually in the operating systems memory

341
00:13:52,729 --> 00:13:57,079
and that's quite cool I'm gonna take

342
00:13:54,979 --> 00:14:00,439
this file and what I'm gonna do I'm

343
00:13:57,079 --> 00:14:03,319
gonna paste it into my arm tool over

344
00:14:00,439 --> 00:14:06,199
here so that at the end we are able to

345
00:14:03,319 --> 00:14:08,449
see how we are able to of course recover

346
00:14:06,199 --> 00:14:11,449
this type of data so let me show you the

347
00:14:08,449 --> 00:14:14,269
whole structure of the demonstration

348
00:14:11,449 --> 00:14:16,998
right so I'm pasting this particular

349
00:14:14,269 --> 00:14:19,100
application a log file over here so this

350
00:14:16,999 --> 00:14:20,959
is this one I'm gonna show it in GUI

351
00:14:19,100 --> 00:14:23,149
because at the very beginning it's gonna

352
00:14:20,959 --> 00:14:25,459
be a little bit more convenient just to

353
00:14:23,149 --> 00:14:28,159
show that this file does not actually

354
00:14:25,459 --> 00:14:30,679
open yeah so I'm just gonna press enter

355
00:14:28,159 --> 00:14:32,509
on it and in the meantime I'm gonna see

356
00:14:30,679 --> 00:14:34,339
on my screen so let me just move it that

357
00:14:32,509 --> 00:14:37,100
this one says that the even log file is

358
00:14:34,339 --> 00:14:39,559
corrupted yes because that's pretty much

359
00:14:37,100 --> 00:14:41,119
how they are they're very sensitive so

360
00:14:39,559 --> 00:14:42,769
I'm going to just gonna say okay fine

361
00:14:41,119 --> 00:14:45,559
and I in this folder

362
00:14:42,769 --> 00:14:48,109
I've got also folder out which is empty

363
00:14:45,559 --> 00:14:51,769
and this particular folder will contain

364
00:14:48,109 --> 00:14:54,679
our fixed AVG X so let's just have a

365
00:14:51,769 --> 00:14:57,529
look how simple our tool is at the end

366
00:14:54,679 --> 00:15:00,108
in order to fix this type of a situation

367
00:14:57,529 --> 00:15:02,929
so I'm gonna get into this particular

368
00:15:00,109 --> 00:15:05,989
tool and the tool works like this cqe

369
00:15:02,929 --> 00:15:08,238
VTX recovery dot exe and we specify on

370
00:15:05,989 --> 00:15:11,239
the input folder with the broken data

371
00:15:08,239 --> 00:15:13,249
and we specify output folder here we go

372
00:15:11,239 --> 00:15:13,930
where the data should be stored so in in

373
00:15:13,249 --> 00:15:16,540
out

374
00:15:13,930 --> 00:15:19,209
enter and then it tells me that it

375
00:15:16,540 --> 00:15:22,180
successfully recovered 17 records yeah

376
00:15:19,210 --> 00:15:23,790
and in this particular out folder we are

377
00:15:22,180 --> 00:15:26,819
able to see that this is this

378
00:15:23,790 --> 00:15:30,490
application file and this application

379
00:15:26,820 --> 00:15:32,380
file we will be able to open basically

380
00:15:30,490 --> 00:15:35,800
in our even lock it just takes a little

381
00:15:32,380 --> 00:15:37,420
bit of time so it's just loading it so

382
00:15:35,800 --> 00:15:40,120
in a moment I will show you and then

383
00:15:37,420 --> 00:15:41,920
eventually we'll be able to read of what

384
00:15:40,120 --> 00:15:44,050
was what was happening with this

385
00:15:41,920 --> 00:15:46,050
particular file yeah so this is our

386
00:15:44,050 --> 00:15:49,120
application lock that we are able to

387
00:15:46,050 --> 00:15:51,430
technically get access to here we go not

388
00:15:49,120 --> 00:15:53,410
this one this one here we go so here we

389
00:15:51,430 --> 00:15:55,479
go so we've got here that information

390
00:15:53,410 --> 00:15:58,000
meaning records because they are like

391
00:15:55,480 --> 00:16:00,700
chunks of data so this these are the

392
00:15:58,000 --> 00:16:02,890
events that application log a contained

393
00:16:00,700 --> 00:16:05,020
before actually flashing them to the

394
00:16:02,890 --> 00:16:07,360
drive just to make sure you don't miss

395
00:16:05,020 --> 00:16:09,490
out maybe there is something important

396
00:16:07,360 --> 00:16:12,010
maybe not but lots of files like that

397
00:16:09,490 --> 00:16:14,710
may contain some useful useful

398
00:16:12,010 --> 00:16:17,470
information ok guys so what we are

399
00:16:14,710 --> 00:16:19,810
discussing that is there any other tool

400
00:16:17,470 --> 00:16:21,940
is there any other place that could help

401
00:16:19,810 --> 00:16:24,069
us out to get more information about

402
00:16:21,940 --> 00:16:26,410
what's going on yeah if someone gives

403
00:16:24,070 --> 00:16:28,600
you a disk for forensics we are

404
00:16:26,410 --> 00:16:30,069
wondering ok like now state is yours

405
00:16:28,600 --> 00:16:32,620
what type of information we're gonna be

406
00:16:30,070 --> 00:16:34,930
extracting us on Journal of course we're

407
00:16:32,620 --> 00:16:36,460
gonna be getting into prefetch which

408
00:16:34,930 --> 00:16:38,530
I'll show you in a moment we're going to

409
00:16:36,460 --> 00:16:41,200
be getting into impossibly hashes of the

410
00:16:38,530 --> 00:16:43,390
users profile related information so the

411
00:16:41,200 --> 00:16:45,730
list is big but there are a couple of

412
00:16:43,390 --> 00:16:47,710
places that are quite unusual to search

413
00:16:45,730 --> 00:16:49,810
and this is something that I would like

414
00:16:47,710 --> 00:16:51,180
to I would like to show you one of the

415
00:16:49,810 --> 00:16:54,130
first things that we're gonna get to

416
00:16:51,180 --> 00:16:56,770
it's one of our favorite tools which is

417
00:16:54,130 --> 00:16:58,750
related with extracting the passwords

418
00:16:56,770 --> 00:17:00,310
from these service accounts and this is

419
00:16:58,750 --> 00:17:03,130
something that we're going to be getting

420
00:17:00,310 --> 00:17:05,889
to if within the services you will find

421
00:17:03,130 --> 00:17:07,930
out in a security hive in the registry

422
00:17:05,890 --> 00:17:11,080
of that machine that you've got some

423
00:17:07,930 --> 00:17:13,930
secrets in the registry hive that is

424
00:17:11,079 --> 00:17:16,689
basically security then we get into

425
00:17:13,930 --> 00:17:19,870
policy secrets and then we are able to

426
00:17:16,690 --> 00:17:22,600
see basically if there are some secrets

427
00:17:19,869 --> 00:17:24,760
stored so you can simply see that then

428
00:17:22,599 --> 00:17:25,659
our job is going to be to extract maybe

429
00:17:24,760 --> 00:17:27,879
some

430
00:17:25,660 --> 00:17:29,320
then chose of that particular user so

431
00:17:27,880 --> 00:17:31,570
let me show you what do we mean by this

432
00:17:29,320 --> 00:17:34,360
yeah so and what kind of secrets we are

433
00:17:31,570 --> 00:17:37,120
referring to if we do Rech edit here we

434
00:17:34,360 --> 00:17:39,600
go and we are right now in this path

435
00:17:37,120 --> 00:17:42,969
that I was mentioning so we are in the

436
00:17:39,600 --> 00:17:45,370
security hive right now and we are in a

437
00:17:42,970 --> 00:17:47,830
policy and then there is this folder

438
00:17:45,370 --> 00:17:50,080
that is actually called secrets I wonder

439
00:17:47,830 --> 00:17:51,550
what it contains and we are able to see

440
00:17:50,080 --> 00:17:54,070
here that there is lots of data

441
00:17:51,550 --> 00:17:56,470
prediction API secrets but then there is

442
00:17:54,070 --> 00:17:58,120
also or could be a secret that is

443
00:17:56,470 --> 00:18:00,040
related with the particular service

444
00:17:58,120 --> 00:18:01,959
account yes and what do we mean by this

445
00:18:00,040 --> 00:18:05,350
so let's let's have a look and so this

446
00:18:01,960 --> 00:18:07,810
is basically the entrance if we do have

447
00:18:05,350 --> 00:18:10,209
a look at the service accounts so we get

448
00:18:07,810 --> 00:18:12,129
into the services.msc yeah and I find

449
00:18:10,210 --> 00:18:14,770
over here some kind of a service so

450
00:18:12,130 --> 00:18:16,660
we've got a pool of service logon and I

451
00:18:14,770 --> 00:18:18,760
will just to create some kind of the

452
00:18:16,660 --> 00:18:19,900
secrets over here it doesn't matter

453
00:18:18,760 --> 00:18:22,540
which account we are using I'm just

454
00:18:19,900 --> 00:18:25,810
typing something it could be whatever we

455
00:18:22,540 --> 00:18:28,659
type in over here fantastic then if we

456
00:18:25,810 --> 00:18:31,149
do refresh this yeah then basically

457
00:18:28,660 --> 00:18:33,130
we're gonna see over here that there is

458
00:18:31,150 --> 00:18:35,890
actually a secret and this is how you

459
00:18:33,130 --> 00:18:38,710
recognize it that is called pj service

460
00:18:35,890 --> 00:18:41,170
and from that secret offline we are able

461
00:18:38,710 --> 00:18:42,820
to extract the password for the service

462
00:18:41,170 --> 00:18:46,000
accounts so quite a straightforward

463
00:18:42,820 --> 00:18:48,850
operation and we do it basically like

464
00:18:46,000 --> 00:18:51,010
this so we go to the secu secret dumper

465
00:18:48,850 --> 00:18:53,350
and then you just specify the service

466
00:18:51,010 --> 00:18:54,940
name and in this case plus a pj service

467
00:18:53,350 --> 00:18:56,770
and then you were able to see the

468
00:18:54,940 --> 00:18:59,680
password coming out it might be a useful

469
00:18:56,770 --> 00:19:01,930
information yeah so it is actually a

470
00:18:59,680 --> 00:19:03,670
tool that our customers are also using

471
00:19:01,930 --> 00:19:05,350
just to figure out what are the

472
00:19:03,670 --> 00:19:07,600
passwords for the service accounts but

473
00:19:05,350 --> 00:19:10,899
it also could be used for that reason

474
00:19:07,600 --> 00:19:14,199
yeah okay so what else do we have we are

475
00:19:10,900 --> 00:19:16,270
we have as well one interesting tool and

476
00:19:14,200 --> 00:19:18,370
let's just show it but eventually it is

477
00:19:16,270 --> 00:19:20,500
actually quite a lightweight tool which

478
00:19:18,370 --> 00:19:23,169
is related with extracting information

479
00:19:20,500 --> 00:19:25,210
from the windows prefetch so let's have

480
00:19:23,170 --> 00:19:28,840
a look guys like how this particular

481
00:19:25,210 --> 00:19:31,780
tool will work out so if we have a look

482
00:19:28,840 --> 00:19:34,149
at the operating system in Windows we've

483
00:19:31,780 --> 00:19:36,700
got something like prefetch prefetch

484
00:19:34,150 --> 00:19:37,740
when its own contains information about

485
00:19:36,700 --> 00:19:40,920
what

486
00:19:37,740 --> 00:19:43,440
ever executed in our books yes so it

487
00:19:40,920 --> 00:19:46,020
clutters history about whatever was

488
00:19:43,440 --> 00:19:48,360
executed so if you did not delete it it

489
00:19:46,020 --> 00:19:50,129
will contain the whole history since you

490
00:19:48,360 --> 00:19:51,809
pretty much installed Windows you are

491
00:19:50,130 --> 00:19:53,820
able to see over here that you had

492
00:19:51,809 --> 00:19:56,970
certain type of executive all that

493
00:19:53,820 --> 00:19:59,070
executed that many times at that time

494
00:19:56,970 --> 00:20:01,050
and it contained different types of

495
00:19:59,070 --> 00:20:03,480
dll's loaded let me show you basically

496
00:20:01,050 --> 00:20:06,210
how we are able to extract information

497
00:20:03,480 --> 00:20:09,360
from this PF files and actually make it

498
00:20:06,210 --> 00:20:11,309
useful so when you wondered how do I

499
00:20:09,360 --> 00:20:12,120
know that our infrastructure has been

500
00:20:11,309 --> 00:20:13,860
compromised

501
00:20:12,120 --> 00:20:16,889
let's have a look at the prefetch could

502
00:20:13,860 --> 00:20:19,770
hacker delete a prefetch of course that

503
00:20:16,890 --> 00:20:23,100
could be always some kind of a fun done

504
00:20:19,770 --> 00:20:25,139
around all this evidence everything VTX

505
00:20:23,100 --> 00:20:26,250
though it's very hard to play with you

506
00:20:25,140 --> 00:20:29,040
can always delete it though

507
00:20:26,250 --> 00:20:31,800
but prefetch is quite straightforward to

508
00:20:29,040 --> 00:20:33,659
edit but hopefully this wasn't changed

509
00:20:31,800 --> 00:20:35,850
which maybe you can change in a check in

510
00:20:33,660 --> 00:20:38,100
aus and journal to let's have a look at

511
00:20:35,850 --> 00:20:41,399
one executive all this the cool bit is

512
00:20:38,100 --> 00:20:43,919
and I'm gonna do over here shift right

513
00:20:41,400 --> 00:20:46,470
click and then we're gonna do copy as

514
00:20:43,920 --> 00:20:48,750
path and within our toolkit we've got a

515
00:20:46,470 --> 00:20:50,790
simple tool which is called CQ prefetch

516
00:20:48,750 --> 00:20:53,040
parser that I'm pretty sure you guys

517
00:20:50,790 --> 00:20:55,649
might enjoy it because the only thing we

518
00:20:53,040 --> 00:20:58,590
specify over here it's the - F file and

519
00:20:55,650 --> 00:21:01,950
then we do - a for analysis and this

520
00:20:58,590 --> 00:21:03,360
shows us fully not only the list of the

521
00:21:01,950 --> 00:21:05,690
modules so dll's

522
00:21:03,360 --> 00:21:09,750
and some other files loaded in that

523
00:21:05,690 --> 00:21:12,150
ended process but also how many times

524
00:21:09,750 --> 00:21:13,980
someone has been running it so in this

525
00:21:12,150 --> 00:21:16,559
case you're able to see that it has been

526
00:21:13,980 --> 00:21:18,720
six to eight times plus these are the

527
00:21:16,559 --> 00:21:20,940
times that this file has been actually

528
00:21:18,720 --> 00:21:23,280
running so it's quite nice because it

529
00:21:20,940 --> 00:21:25,860
shows you the history of particular

530
00:21:23,280 --> 00:21:29,190
executables in operating system now this

531
00:21:25,860 --> 00:21:30,780
is fun but at the end what if for

532
00:21:29,190 --> 00:21:33,330
example we're gonna have run count one

533
00:21:30,780 --> 00:21:35,910
and this is what we are looking for so

534
00:21:33,330 --> 00:21:37,740
it could be called notepad which by name

535
00:21:35,910 --> 00:21:39,720
because it doesn't have a digital

536
00:21:37,740 --> 00:21:43,470
signature it doesn't sounds very juicy

537
00:21:39,720 --> 00:21:45,870
but if you see that run count for note

538
00:21:43,470 --> 00:21:48,179
but is one that's already suspicious and

539
00:21:45,870 --> 00:21:50,040
you might have a look father maybe in

540
00:21:48,179 --> 00:21:50,700
Windows indexing service maybe newest

541
00:21:50,040 --> 00:21:53,039
and journal

542
00:21:50,700 --> 00:21:55,379
maybe in a cache of compatibility and a

543
00:21:53,039 --> 00:21:57,629
couple of other places if this file has

544
00:21:55,379 --> 00:22:00,678
been actually there what does it do etc

545
00:21:57,629 --> 00:22:03,330
so quite an interesting perspective now

546
00:22:00,679 --> 00:22:06,450
whenever we are thinking about all this

547
00:22:03,330 --> 00:22:09,809
data the prefetch is quite popular but

548
00:22:06,450 --> 00:22:12,989
is there something unusual that can

549
00:22:09,809 --> 00:22:15,480
contain useful information that might be

550
00:22:12,989 --> 00:22:17,609
a might be containing something that

551
00:22:15,480 --> 00:22:19,019
could indicate that something happened

552
00:22:17,609 --> 00:22:20,730
in this box yes

553
00:22:19,019 --> 00:22:24,269
one of the interesting things that we've

554
00:22:20,730 --> 00:22:28,169
been looking at is actually related with

555
00:22:24,269 --> 00:22:31,619
extracting data from the remote desktop

556
00:22:28,169 --> 00:22:33,779
cache and in order to extract data from

557
00:22:31,619 --> 00:22:36,570
the remote desktop cache what you need

558
00:22:33,779 --> 00:22:39,899
to do is to get first cache file of

559
00:22:36,570 --> 00:22:41,759
course and then have a tool that will

560
00:22:39,899 --> 00:22:44,008
allow you to work on this particular

561
00:22:41,759 --> 00:22:46,019
cache file and that is something that

562
00:22:44,009 --> 00:22:48,419
we've written probably this is the most

563
00:22:46,019 --> 00:22:50,789
ugly tool that you were ever see from us

564
00:22:48,419 --> 00:22:52,649
because the GUI is literally

565
00:22:50,789 --> 00:22:56,190
non-existent and the tool itself is

566
00:22:52,649 --> 00:22:58,859
actually quite quite funny but what is

567
00:22:56,190 --> 00:23:02,309
the beauty of the tool is that remote

568
00:22:58,859 --> 00:23:05,070
desktop in general it's a it's a

569
00:23:02,309 --> 00:23:08,158
protocol that is relying on the grid so

570
00:23:05,070 --> 00:23:11,789
when you connect for example remotely to

571
00:23:08,159 --> 00:23:13,169
the server using the RDP you download

572
00:23:11,789 --> 00:23:15,809
and they get different grids and you

573
00:23:13,169 --> 00:23:17,700
kind of stuck it on the top of the cache

574
00:23:15,809 --> 00:23:20,609
file and this is something that I would

575
00:23:17,700 --> 00:23:23,129
like to show you guys so what do we do

576
00:23:20,609 --> 00:23:26,129
to get this particular cache so let's

577
00:23:23,129 --> 00:23:28,439
have a look our tools name if we have a

578
00:23:26,129 --> 00:23:31,590
look over here it's called actually a

579
00:23:28,440 --> 00:23:35,970
security cache and within the security

580
00:23:31,590 --> 00:23:38,609
cache you are able to load this one this

581
00:23:35,970 --> 00:23:42,269
is for hiding files we've got this one

582
00:23:38,609 --> 00:23:44,609
and we just do load and over here I'm

583
00:23:42,269 --> 00:23:47,009
loading the cache from sample user

584
00:23:44,609 --> 00:23:49,619
administrator update I look on Microsoft

585
00:23:47,009 --> 00:23:52,559
Terminal Server client cache we do open

586
00:23:49,619 --> 00:23:54,539
here we go and we can do the code now

587
00:23:52,559 --> 00:23:56,730
depending on the remote desktop clients

588
00:23:54,539 --> 00:23:59,009
version that agreed might have a

589
00:23:56,730 --> 00:24:02,220
different size so this one we are

590
00:23:59,009 --> 00:24:03,700
specifying on 32 so it's gonna be a 64

591
00:24:02,220 --> 00:24:05,710
size

592
00:24:03,700 --> 00:24:07,570
and then we do their coat and that looks

593
00:24:05,710 --> 00:24:12,159
a little bit better and a question to

594
00:24:07,570 --> 00:24:17,049
you guys is what did someone see what is

595
00:24:12,159 --> 00:24:19,179
this yeah it is well it's not a snapshot

596
00:24:17,049 --> 00:24:21,879
it's like degree that we have stucked in

597
00:24:19,179 --> 00:24:23,620
but of course it's not a puzzle it's so

598
00:24:21,880 --> 00:24:25,809
you cannot build logic on the top of

599
00:24:23,620 --> 00:24:27,668
that because it's just stuck so if

600
00:24:25,809 --> 00:24:29,590
someone moves window around women

601
00:24:27,669 --> 00:24:32,260
already pee it's gonna be just like in

602
00:24:29,590 --> 00:24:34,149
this weird way putting the grete that

603
00:24:32,260 --> 00:24:38,379
the squares on the top of the log house

604
00:24:34,149 --> 00:24:41,678
so what did someone see what is this

605
00:24:38,380 --> 00:24:43,330
what is this console about is exactly

606
00:24:41,679 --> 00:24:45,970
thank you yeah so we were able to see

607
00:24:43,330 --> 00:24:48,789
that someone could see IAS and this file

608
00:24:45,970 --> 00:24:51,880
is big so you can move in in kind of

609
00:24:48,789 --> 00:24:54,370
snapshots yeah in the file to observe

610
00:24:51,880 --> 00:24:56,799
how what was actually happening within

611
00:24:54,370 --> 00:24:58,928
the remote desktop session so this is a

612
00:24:56,799 --> 00:25:00,639
whole history of ever happens whatever

613
00:24:58,929 --> 00:25:02,860
happens within the remote desktop

614
00:25:00,639 --> 00:25:04,809
session yes so it's somewhat like

615
00:25:02,860 --> 00:25:07,209
recording but you were able to see that

616
00:25:04,809 --> 00:25:09,970
by the square little pictures yeah so a

617
00:25:07,210 --> 00:25:13,120
little bit of that now whenever we are

618
00:25:09,970 --> 00:25:15,070
thinking of course about different types

619
00:25:13,120 --> 00:25:17,139
of files being deleted because maybe

620
00:25:15,070 --> 00:25:20,110
someone could delete this file is it

621
00:25:17,139 --> 00:25:23,229
possible in an easy way to recover files

622
00:25:20,110 --> 00:25:25,719
yes we actually got a tool that is

623
00:25:23,230 --> 00:25:28,480
called CQ undelete that i would like to

624
00:25:25,720 --> 00:25:29,950
show you because there's a couple of

625
00:25:28,480 --> 00:25:32,230
ways how we are able to delete the files

626
00:25:29,950 --> 00:25:34,990
but the funky part about the tool is

627
00:25:32,230 --> 00:25:38,470
that with the super-easy perspective it

628
00:25:34,990 --> 00:25:43,419
allows us to recover files also from the

629
00:25:38,470 --> 00:25:46,090
MFT and small files up to approximately

630
00:25:43,419 --> 00:25:47,380
700 bytes when you delete them and even

631
00:25:46,090 --> 00:25:49,539
though when you do it with shift and

632
00:25:47,380 --> 00:25:52,059
even though when you overwrite the disk

633
00:25:49,539 --> 00:25:55,330
there will be still stored in a clear

634
00:25:52,059 --> 00:25:57,639
text in MFT and our tool allows you to

635
00:25:55,330 --> 00:25:59,110
recover that kind of data yeah so this

636
00:25:57,639 --> 00:26:01,059
is basically what I would like to show

637
00:25:59,110 --> 00:26:03,969
you so let's have a look at that after

638
00:26:01,059 --> 00:26:07,480
at this situation right so I've got over

639
00:26:03,970 --> 00:26:09,669
here a certain certain of type of a

640
00:26:07,480 --> 00:26:11,590
partition so let me just mount it within

641
00:26:09,669 --> 00:26:13,809
the powershell so that you can see that

642
00:26:11,590 --> 00:26:14,320
we are doing it in a fresh way so this

643
00:26:13,809 --> 00:26:16,950
is it

644
00:26:14,320 --> 00:26:18,928
so we've got a certain path where

645
00:26:16,950 --> 00:26:21,570
mounting the partition here we go and

646
00:26:18,929 --> 00:26:23,940
then this is our X Drive over here so

647
00:26:21,570 --> 00:26:25,889
let me take this and what we're going to

648
00:26:23,940 --> 00:26:27,539
do over here in the moment so this is

649
00:26:25,889 --> 00:26:29,939
also our power shell case I'm going to

650
00:26:27,539 --> 00:26:32,029
create on this particular partition lots

651
00:26:29,940 --> 00:26:34,590
of different types of files that

652
00:26:32,029 --> 00:26:36,360
eventually I'm going to delete and so

653
00:26:34,590 --> 00:26:39,209
this is their this is the demonstration

654
00:26:36,360 --> 00:26:40,590
let me just pull it out yes so I have

655
00:26:39,210 --> 00:26:42,659
created these files so we've got a wipe

656
00:26:40,590 --> 00:26:44,730
me wipe me out me so what I'm gonna do

657
00:26:42,659 --> 00:26:47,700
shift right-click so I'm just gonna

658
00:26:44,730 --> 00:26:51,539
select all these files shits right-click

659
00:26:47,700 --> 00:26:54,059
and we're gonna do delete fantastic yes

660
00:26:51,539 --> 00:26:57,059
we got it so fast are deleted what else

661
00:26:54,059 --> 00:27:00,750
I'm gonna do I'm gonna overwrite yeah

662
00:26:57,059 --> 00:27:02,519
here that particular partition so just

663
00:27:00,750 --> 00:27:06,480
to make sure the data isn't there etc

664
00:27:02,519 --> 00:27:09,750
and then with our toe I'm gonna list all

665
00:27:06,480 --> 00:27:13,139
the possibilities of what eventually we

666
00:27:09,750 --> 00:27:15,990
are able to recover so even though this

667
00:27:13,139 --> 00:27:18,209
data has been deleted and overwritten we

668
00:27:15,990 --> 00:27:21,950
are still able to do a little bit more

669
00:27:18,210 --> 00:27:24,210
about about that that's recovery and

670
00:27:21,950 --> 00:27:26,580
basically when we have a look at the

671
00:27:24,210 --> 00:27:29,070
whole concept is it possible to recover

672
00:27:26,580 --> 00:27:31,139
a file I've got here another command

673
00:27:29,070 --> 00:27:33,570
with the C key undelete or from the

674
00:27:31,139 --> 00:27:36,840
volume X when we are under leting the

675
00:27:33,570 --> 00:27:39,480
file that is called wipe me 8 txt and we

676
00:27:36,840 --> 00:27:42,510
are doing the output into the wipe me a

677
00:27:39,480 --> 00:27:43,830
txt let's have a look I got a file

678
00:27:42,510 --> 00:27:45,929
already like this because I've been

679
00:27:43,830 --> 00:27:47,189
practicing before the demonstration so

680
00:27:45,929 --> 00:27:48,929
let's delete it which would be even

681
00:27:47,190 --> 00:27:52,169
better because we'll be able to see that

682
00:27:48,929 --> 00:27:53,730
it actually worked out here we go or we

683
00:27:52,169 --> 00:27:54,179
can change the output name that's fine

684
00:27:53,730 --> 00:27:57,659
too

685
00:27:54,179 --> 00:28:00,539
here we go and then our wipe me txt is

686
00:27:57,659 --> 00:28:03,149
actually the file that contains the

687
00:28:00,539 --> 00:28:06,330
certain type of the content yeah so very

688
00:28:03,149 --> 00:28:08,699
easy way to undelete files not only the

689
00:28:06,330 --> 00:28:10,710
ones that are stored inside the MFT but

690
00:28:08,700 --> 00:28:13,799
also the fan that has been just deleted

691
00:28:10,710 --> 00:28:15,779
yeah so quite an easy tool but very very

692
00:28:13,799 --> 00:28:17,820
handy especially even for your private

693
00:28:15,779 --> 00:28:20,909
use when you are deleting the file that

694
00:28:17,820 --> 00:28:23,158
you would like to get access to back ok

695
00:28:20,909 --> 00:28:25,260
fantastic so what else is interesting

696
00:28:23,159 --> 00:28:27,720
now we're going to get into the subject

697
00:28:25,260 --> 00:28:30,450
that is absolutely exciting because

698
00:28:27,720 --> 00:28:32,489
there are plenty of places that contain

699
00:28:30,450 --> 00:28:34,499
information but what is the most

700
00:28:32,489 --> 00:28:37,289
difficult part of that it's a data

701
00:28:34,499 --> 00:28:40,080
protection API and our team has fully

702
00:28:37,289 --> 00:28:42,509
reversed data protection API so full

703
00:28:40,080 --> 00:28:44,070
crypto platform in Windows and we've got

704
00:28:42,509 --> 00:28:46,139
all of that different have the tools

705
00:28:44,070 --> 00:28:48,259
over actually 40 tools that are

706
00:28:46,139 --> 00:28:50,639
cooperating with data protection API

707
00:28:48,259 --> 00:28:52,859
forensically to give you the data back

708
00:28:50,639 --> 00:28:56,008
so what I would like to present to you

709
00:28:52,859 --> 00:28:58,649
today it's an interesting scenario where

710
00:28:56,009 --> 00:29:02,399
our job is going to be to get access to

711
00:28:58,649 --> 00:29:06,719
the information that is stored by the

712
00:29:02,399 --> 00:29:09,149
user in an encrypted way and our job is

713
00:29:06,720 --> 00:29:10,489
going to be to decrypt it and get access

714
00:29:09,149 --> 00:29:14,158
to the users secrets

715
00:29:10,489 --> 00:29:16,230
so which scenario does this apply to all

716
00:29:14,159 --> 00:29:18,330
of the scenarios where user is stirring

717
00:29:16,230 --> 00:29:20,970
password in the browser storing

718
00:29:18,330 --> 00:29:24,689
passwords in Outlook storing private

719
00:29:20,970 --> 00:29:27,179
keys storing for example passwords were

720
00:29:24,690 --> 00:29:29,669
in keep us if the key pass is relying on

721
00:29:27,179 --> 00:29:32,399
the Data Protection API remote desktop

722
00:29:29,669 --> 00:29:33,869
connection manager and any other lead to

723
00:29:32,399 --> 00:29:35,939
the application that uses data

724
00:29:33,869 --> 00:29:37,918
protection API and there's a plenty of

725
00:29:35,940 --> 00:29:40,049
those so let's have a look because this

726
00:29:37,919 --> 00:29:41,879
scenario it's not only important

727
00:29:40,049 --> 00:29:44,549
forensically but it's also important for

728
00:29:41,879 --> 00:29:46,799
ourselves if you ever wondered if I do

729
00:29:44,549 --> 00:29:49,440
store some kind of a secret in my laptop

730
00:29:46,799 --> 00:29:52,559
is it safe and let's answer that

731
00:29:49,440 --> 00:29:55,980
question if you don't mind so what we're

732
00:29:52,559 --> 00:29:59,129
gonna do here we got a user that is

733
00:29:55,980 --> 00:30:01,710
actually Windows 10 let's just use that

734
00:29:59,129 --> 00:30:05,719
and I'm gonna log on to the Windows 10

735
00:30:01,710 --> 00:30:07,950
box let's have a look as Freddie and

736
00:30:05,720 --> 00:30:09,840
bring it on we're gonna log on as

737
00:30:07,950 --> 00:30:11,759
Freddie using the password password

738
00:30:09,840 --> 00:30:13,379
yeah I'm showing you this because it's

739
00:30:11,759 --> 00:30:16,049
gonna be quite important information

740
00:30:13,379 --> 00:30:17,580
let's do that so we got it we can just

741
00:30:16,049 --> 00:30:19,350
minimize that I have no access to the

742
00:30:17,580 --> 00:30:21,269
internet with this machine there's no

743
00:30:19,350 --> 00:30:23,248
vulnerability that we are overusing over

744
00:30:21,269 --> 00:30:25,080
here that's how it works and this is how

745
00:30:23,249 --> 00:30:27,330
it has been working for all time our

746
00:30:25,080 --> 00:30:28,769
team has reverse engineers so that we

747
00:30:27,330 --> 00:30:30,570
are able to decrypt everything that

748
00:30:28,769 --> 00:30:33,119
moves pretty much that belongs to the

749
00:30:30,570 --> 00:30:34,918
user let's see this is called data

750
00:30:33,119 --> 00:30:36,480
prediction API classic what we're going

751
00:30:34,919 --> 00:30:38,039
to pre be presenting because an

752
00:30:36,480 --> 00:30:40,649
alternative for that it's a data

753
00:30:38,039 --> 00:30:42,330
prediction API and G which we can also

754
00:30:40,649 --> 00:30:44,158
touch the base on while we are for

755
00:30:42,330 --> 00:30:47,009
example trying to recover

756
00:30:44,159 --> 00:30:49,789
thus it protected pfx files which are

757
00:30:47,009 --> 00:30:52,590
available since Windows Server 2012 r2

758
00:30:49,789 --> 00:30:54,899
so let's have a look so we've got the

759
00:30:52,590 --> 00:30:57,418
following situation yeah let's go to the

760
00:30:54,899 --> 00:31:01,080
scenario first we've got Freddie Freddie

761
00:30:57,419 --> 00:31:03,570
being a user stored passwords in Chrome

762
00:31:01,080 --> 00:31:05,639
yeah we might disagree if it's good or

763
00:31:03,570 --> 00:31:07,918
bad it doesn't matter because chrome is

764
00:31:05,639 --> 00:31:09,689
also leveraging the P API and this is

765
00:31:07,919 --> 00:31:12,239
the prediction API secrets of the user

766
00:31:09,690 --> 00:31:14,100
bank what do we see over here and I'm

767
00:31:12,239 --> 00:31:16,440
using the use of tool chrome pass for

768
00:31:14,100 --> 00:31:18,299
that and that's okay is a password

769
00:31:16,440 --> 00:31:20,279
password yeah so this is a password

770
00:31:18,299 --> 00:31:24,119
stored in a browser not a rocket science

771
00:31:20,279 --> 00:31:26,879
no what our job is gonna be is to get

772
00:31:24,119 --> 00:31:30,238
access to this password but as an

773
00:31:26,879 --> 00:31:32,908
outsider and let me explain first if you

774
00:31:30,239 --> 00:31:35,879
don't mind how data prediction API works

775
00:31:32,909 --> 00:31:38,820
in order to basically get this

776
00:31:35,879 --> 00:31:41,519
particular data out first of all data

777
00:31:38,820 --> 00:31:43,439
prediction API in general allows us to

778
00:31:41,519 --> 00:31:47,070
encrypt data in windows and that's a

779
00:31:43,440 --> 00:31:48,570
fact now it is used by many many

780
00:31:47,070 --> 00:31:50,879
different types of applications in a

781
00:31:48,570 --> 00:31:53,009
different way and in order to be able to

782
00:31:50,879 --> 00:31:56,309
get access to the data protection API

783
00:31:53,009 --> 00:31:59,190
secrets you have to do it in two ways

784
00:31:56,309 --> 00:32:01,289
and one way it's if you are a local user

785
00:31:59,190 --> 00:32:04,320
and another way if you are in a domain

786
00:32:01,289 --> 00:32:06,809
user now this might not be super clearly

787
00:32:04,320 --> 00:32:09,119
readable but absolutely have a look but

788
00:32:06,809 --> 00:32:11,549
I would like to use my artistic skills

789
00:32:09,119 --> 00:32:14,099
so that you can guys see by the picture

790
00:32:11,549 --> 00:32:15,658
and I'm gonna paint with my finger what

791
00:32:14,099 --> 00:32:19,200
is the difference in between local user

792
00:32:15,659 --> 00:32:19,649
and the domain user let's do that here

793
00:32:19,200 --> 00:32:22,049
we go

794
00:32:19,649 --> 00:32:24,268
so story goes like this we've got over

795
00:32:22,049 --> 00:32:25,590
here local user and we've got over here

796
00:32:24,269 --> 00:32:28,710
domain user

797
00:32:25,590 --> 00:32:30,359
yeah now I'm gonna be obvious for the

798
00:32:28,710 --> 00:32:32,729
moment just for the purpose of

799
00:32:30,359 --> 00:32:34,710
explanation of this we've got a user

800
00:32:32,729 --> 00:32:36,749
that logged on with the username and the

801
00:32:34,710 --> 00:32:39,899
password and if it's a local user of

802
00:32:36,749 --> 00:32:42,090
course we are calculating md4 on the top

803
00:32:39,899 --> 00:32:44,939
of that which we compare with the some

804
00:32:42,090 --> 00:32:48,059
database this is clear now here's funky

805
00:32:44,940 --> 00:32:51,749
part password we are calculating on the

806
00:32:48,059 --> 00:32:55,620
top of the password choix one and that

807
00:32:51,749 --> 00:32:57,900
schewe one is used to encrypt master key

808
00:32:55,620 --> 00:33:01,110
that we store in the master key

809
00:32:57,900 --> 00:33:03,809
container and that master key indirectly

810
00:33:01,110 --> 00:33:07,110
but still this is quite linear situation

811
00:33:03,809 --> 00:33:09,210
is used to encrypt or decrypt our secret

812
00:33:07,110 --> 00:33:11,549
our secret let's say could the chrome

813
00:33:09,210 --> 00:33:14,010
password or Outlook password doesn't

814
00:33:11,549 --> 00:33:16,049
really matter so we can easily get into

815
00:33:14,010 --> 00:33:19,650
the conclusion that our secrets

816
00:33:16,049 --> 00:33:23,730
if we are a local user are as safe as

817
00:33:19,650 --> 00:33:24,179
our password strength is yeah so that's

818
00:33:23,730 --> 00:33:26,669
it

819
00:33:24,179 --> 00:33:29,610
because data prediction API being a good

820
00:33:26,669 --> 00:33:32,130
mechanism in this case relies on our

821
00:33:29,610 --> 00:33:34,020
password strength M now whenever we are

822
00:33:32,130 --> 00:33:37,409
thinking about the domain user though

823
00:33:34,020 --> 00:33:39,510
let's change the perspective here it is

824
00:33:37,409 --> 00:33:42,090
working in an interesting way because

825
00:33:39,510 --> 00:33:44,610
we've got over here a username and the

826
00:33:42,090 --> 00:33:46,379
password and I'm gonna shorten of course

827
00:33:44,610 --> 00:33:47,729
the whole authentication process because

828
00:33:46,380 --> 00:33:50,279
it's not important right now

829
00:33:47,730 --> 00:33:54,059
so when the user logs on we've got of

830
00:33:50,279 --> 00:33:56,370
course calculated md4 on the top of that

831
00:33:54,059 --> 00:33:59,250
eventually we authenticate to the domain

832
00:33:56,370 --> 00:34:03,779
and that nd4 so there is a difference

833
00:33:59,250 --> 00:34:07,409
it's used to encrypt master key 1 from

834
00:34:03,779 --> 00:34:10,949
the master key container that is used to

835
00:34:07,409 --> 00:34:14,700
encrypt a secret that's fine but what

836
00:34:10,949 --> 00:34:17,609
else it's you over here so master key -

837
00:34:14,699 --> 00:34:19,199
it's something that we call in general

838
00:34:17,609 --> 00:34:21,629
at the key that is used within the

839
00:34:19,199 --> 00:34:23,009
domain and the master key - it's the

840
00:34:21,629 --> 00:34:25,799
same there

841
00:34:23,010 --> 00:34:29,450
equal that is also used to encrypt the

842
00:34:25,800 --> 00:34:35,070
secret but master key - it's encrypted

843
00:34:29,449 --> 00:34:35,810
by the public key of the domain here we

844
00:34:35,070 --> 00:34:39,359
go

845
00:34:35,810 --> 00:34:41,429
so master key 1 by our password hash

846
00:34:39,359 --> 00:34:43,319
master key - by the public here the

847
00:34:41,429 --> 00:34:46,770
domain what is the question that we need

848
00:34:43,320 --> 00:34:50,609
to ask over here in order to get access

849
00:34:46,770 --> 00:34:53,629
to the master key - where is the private

850
00:34:50,609 --> 00:34:56,489
key who stores the private key and

851
00:34:53,629 --> 00:34:59,130
there's good news and bad news well

852
00:34:56,489 --> 00:35:02,069
actually both news or bad but eventually

853
00:34:59,130 --> 00:35:05,839
one is better than the other so bad news

854
00:35:02,070 --> 00:35:08,329
is that there is only one public key

855
00:35:05,839 --> 00:35:10,470
across the whole

856
00:35:08,329 --> 00:35:13,650
so if you are working in a hundred

857
00:35:10,470 --> 00:35:15,959
thousand people company public key its

858
00:35:13,650 --> 00:35:18,630
encrypting master key to for every

859
00:35:15,960 --> 00:35:20,819
single user being a domain member what

860
00:35:18,630 --> 00:35:23,280
does it mean it means that whoever has

861
00:35:20,819 --> 00:35:27,720
access to the private key is actually

862
00:35:23,280 --> 00:35:28,950
able to eventually decrypt all of the

863
00:35:27,720 --> 00:35:32,189
people's secrets

864
00:35:28,950 --> 00:35:35,520
stored in their profiles so being that

865
00:35:32,190 --> 00:35:37,859
person it's a bit of a powerful role

866
00:35:35,520 --> 00:35:40,950
isn't it so let's play this role for the

867
00:35:37,859 --> 00:35:43,290
moment to learn what our toolkit can

868
00:35:40,950 --> 00:35:46,529
help you with but at the same time it

869
00:35:43,290 --> 00:35:49,200
could be also dangerous depends on who's

870
00:35:46,530 --> 00:35:51,450
who is actually using it so what we're

871
00:35:49,200 --> 00:35:53,939
gonna do we're gonna do this scenario

872
00:35:51,450 --> 00:35:56,848
like that so I'm gonna be back to the

873
00:35:53,940 --> 00:35:59,880
Windows 10 client box and in order to

874
00:35:56,849 --> 00:36:02,280
keep this demo linear I'm gonna allow

875
00:35:59,880 --> 00:36:04,770
myself to use offline access just to

876
00:36:02,280 --> 00:36:06,180
keep it straight but we can do it both

877
00:36:04,770 --> 00:36:09,480
online and offline

878
00:36:06,180 --> 00:36:11,160
to edit different types of data that I'm

879
00:36:09,480 --> 00:36:12,630
gonna be editing over here so I'm just

880
00:36:11,160 --> 00:36:14,790
gonna do it like this because it's quite

881
00:36:12,630 --> 00:36:18,000
straightforward so let me restart this

882
00:36:14,790 --> 00:36:20,790
box because what we're gonna do we're

883
00:36:18,000 --> 00:36:22,200
gonna overwrite cache logon data so

884
00:36:20,790 --> 00:36:23,970
something that people call cache

885
00:36:22,200 --> 00:36:26,910
credentials but I have nothing to do

886
00:36:23,970 --> 00:36:29,939
with credentials and we're gonna log on

887
00:36:26,910 --> 00:36:31,200
to this box with a different password so

888
00:36:29,940 --> 00:36:34,349
that we've got a different passwords

889
00:36:31,200 --> 00:36:37,290
hash so that first you guys can see that

890
00:36:34,349 --> 00:36:39,240
if we are using a different password we

891
00:36:37,290 --> 00:36:41,849
are not able to get access to the users

892
00:36:39,240 --> 00:36:43,919
data and that's positive but of course

893
00:36:41,849 --> 00:36:45,869
we would not be on a black hat if it

894
00:36:43,920 --> 00:36:47,940
ended up like that so let's continue

895
00:36:45,869 --> 00:36:48,720
this scenario of something a little bit

896
00:36:47,940 --> 00:36:51,540
more dramatic

897
00:36:48,720 --> 00:36:53,009
so let's overwrite cache logon data

898
00:36:51,540 --> 00:36:55,529
first we're gonna go repair your

899
00:36:53,010 --> 00:36:59,310
computer here we go

900
00:36:55,530 --> 00:37:01,619
and then we're gonna get into a scenario

901
00:36:59,310 --> 00:37:03,990
where we're gonna do troubleshoot common

902
00:37:01,619 --> 00:37:05,819
prompt and then we've got our common

903
00:37:03,990 --> 00:37:07,618
problem let me just quickly increase the

904
00:37:05,819 --> 00:37:12,270
font so that the guys in the back can

905
00:37:07,619 --> 00:37:14,609
see - bang and let's get into C key

906
00:37:12,270 --> 00:37:17,310
tools over here and let's get into that

907
00:37:14,609 --> 00:37:17,940
key we secure Edition and let's go to

908
00:37:17,310 --> 00:37:20,400
the

909
00:37:17,940 --> 00:37:21,450
because of the Benjamin sitting over

910
00:37:20,400 --> 00:37:24,300
here there you go

911
00:37:21,450 --> 00:37:26,759
but this is our secure additional swell

912
00:37:24,300 --> 00:37:28,890
so if you drop it to the virustotal it's

913
00:37:26,760 --> 00:37:30,839
not recognized by antivirus by the way

914
00:37:28,890 --> 00:37:34,980
and we're gonna do like this and let's

915
00:37:30,839 --> 00:37:38,790
say dump cache and we are overriding

916
00:37:34,980 --> 00:37:42,140
cache logon data so we do D windows

917
00:37:38,790 --> 00:37:45,210
system32 config and we are right now

918
00:37:42,140 --> 00:37:46,379
System overriding a cache loggin data so

919
00:37:45,210 --> 00:37:48,960
that we can log on with a different

920
00:37:46,380 --> 00:37:51,450
password eventually different passwords

921
00:37:48,960 --> 00:37:54,119
hash so that we will try to get access

922
00:37:51,450 --> 00:37:55,859
to our secrets stored in Chrome but we

923
00:37:54,119 --> 00:37:58,079
won't be able to well let's have a look

924
00:37:55,859 --> 00:38:01,250
so we've got a system 32 and we're gonna

925
00:37:58,079 --> 00:38:05,220
do security and then we're gonna do QE

926
00:38:01,250 --> 00:38:08,069
to override cache load on data bank now

927
00:38:05,220 --> 00:38:11,430
every let's see what we got system 32 oh

928
00:38:08,069 --> 00:38:13,470
my bad convict of course this is what's

929
00:38:11,430 --> 00:38:15,450
missing so I made a small typo come on

930
00:38:13,470 --> 00:38:18,149
but let's correct ourselves it's not

931
00:38:15,450 --> 00:38:21,480
security but it's still config and then

932
00:38:18,150 --> 00:38:23,099
we've got security that works fantastic

933
00:38:21,480 --> 00:38:25,410
now in order to be able to log on with

934
00:38:23,099 --> 00:38:27,660
the cache logon data what we need to do

935
00:38:25,410 --> 00:38:30,569
is to disconnect ourselves from the

936
00:38:27,660 --> 00:38:33,060
network so this is also simulation of a

937
00:38:30,569 --> 00:38:35,400
forensic activity when someone gives you

938
00:38:33,060 --> 00:38:38,910
the drive and you are supposed to

939
00:38:35,400 --> 00:38:42,750
analyze that data offline so let's take

940
00:38:38,910 --> 00:38:44,879
this off and right now I'm on the client

941
00:38:42,750 --> 00:38:47,640
machine I'm not booting it from any CD

942
00:38:44,880 --> 00:38:48,960
DVD which is gonna log on as Freddie but

943
00:38:47,640 --> 00:38:51,839
we're gonna log on with a different

944
00:38:48,960 --> 00:38:55,980
password by knowing how cache logon data

945
00:38:51,839 --> 00:38:58,589
works and the cache logon data allows us

946
00:38:55,980 --> 00:39:01,319
eventually to log on to this particular

947
00:38:58,589 --> 00:39:02,970
box with a different password just for

948
00:39:01,319 --> 00:39:05,369
the reference if someone is interested

949
00:39:02,970 --> 00:39:07,799
what we actually did underneath we have

950
00:39:05,369 --> 00:39:10,530
overeaten cache Logan data by leveraging

951
00:39:07,800 --> 00:39:13,109
the knowledge about the Microsoft's

952
00:39:10,530 --> 00:39:15,230
implementation of the msec to where you

953
00:39:13,109 --> 00:39:18,210
were actually using the function pbkdf2

954
00:39:15,230 --> 00:39:19,380
that takes a bunch of parameters yes one

955
00:39:18,210 --> 00:39:22,020
is the H mark Schwahn

956
00:39:19,380 --> 00:39:24,450
so let's say somewhat random value this

957
00:39:22,020 --> 00:39:27,750
is c1 which is nothing but a username

958
00:39:24,450 --> 00:39:29,250
stick to users passwords hash so user

959
00:39:27,750 --> 00:39:30,510
name MD for

960
00:39:29,250 --> 00:39:33,180
so passwords hash

961
00:39:30,510 --> 00:39:36,630
and on the top of that we calculate md4

962
00:39:33,180 --> 00:39:39,990
and that is what DC c1 is and then we've

963
00:39:36,630 --> 00:39:42,510
got a username 10240 iterations on the

964
00:39:39,990 --> 00:39:44,040
16 blocks so this is what the cash flow

965
00:39:42,510 --> 00:39:47,190
con data was we didn't break it

966
00:39:44,040 --> 00:39:50,670
we just overwritten it that's it so once

967
00:39:47,190 --> 00:39:53,300
we are on our client box again now try

968
00:39:50,670 --> 00:39:58,500
to log on with the password password

969
00:39:53,300 --> 00:40:01,650
here we go and Bank as you see does not

970
00:39:58,500 --> 00:40:04,200
work out and our password is gonna be

971
00:40:01,650 --> 00:40:06,990
this time me me guts so let's just to

972
00:40:04,200 --> 00:40:09,509
enter and then basically we are able to

973
00:40:06,990 --> 00:40:11,970
log on to the Freddy Krueger's box let's

974
00:40:09,510 --> 00:40:14,010
have a look immediately into the secret

975
00:40:11,970 --> 00:40:16,410
tools if we are able to get access to

976
00:40:14,010 --> 00:40:18,420
this chrome pass and we are firing up

977
00:40:16,410 --> 00:40:20,339
this right now in order to see if we are

978
00:40:18,420 --> 00:40:23,010
able to get access to that user secret

979
00:40:20,340 --> 00:40:25,020
and that takes time why because we are

980
00:40:23,010 --> 00:40:26,730
using master keys we are trying to

981
00:40:25,020 --> 00:40:29,220
decrypt master keys with the current

982
00:40:26,730 --> 00:40:31,080
password hash and we cannot do that and

983
00:40:29,220 --> 00:40:34,230
unfortunately that takes time but

984
00:40:31,080 --> 00:40:35,610
eventually we can see that unfortunately

985
00:40:34,230 --> 00:40:37,680
were not able to get access to the users

986
00:40:35,610 --> 00:40:41,790
passwords because the current password

987
00:40:37,680 --> 00:40:45,569
hash did not decrypt master key 1 right

988
00:40:41,790 --> 00:40:48,150
okay let's start fun so I would like to

989
00:40:45,570 --> 00:40:49,410
get access to the secret remotes more I

990
00:40:48,150 --> 00:40:51,300
would like to get access to the secret

991
00:40:49,410 --> 00:40:53,069
of every single person working in this

992
00:40:51,300 --> 00:40:55,860
company so what do I do

993
00:40:53,070 --> 00:40:57,420
so I do the following first of all yeah

994
00:40:55,860 --> 00:40:59,570
I have no access to this into the

995
00:40:57,420 --> 00:41:04,280
internet here so let's just take it out

996
00:40:59,570 --> 00:41:09,630
first of all what we do we get into a DC

997
00:41:04,280 --> 00:41:12,090
this is the guy where we extract the

998
00:41:09,630 --> 00:41:14,690
something that our team has called a

999
00:41:12,090 --> 00:41:17,520
gold certificate or master certificate

1000
00:41:14,690 --> 00:41:22,460
that protected particular certificate is

1001
00:41:17,520 --> 00:41:24,870
actually stored in the NTDs toadette and

1002
00:41:22,460 --> 00:41:26,760
you are not able to find it in the

1003
00:41:24,870 --> 00:41:29,279
regular certificate store of the server

1004
00:41:26,760 --> 00:41:31,860
and that particular certificate in order

1005
00:41:29,280 --> 00:41:34,980
to be extracted and let's have a look at

1006
00:41:31,860 --> 00:41:37,560
this one we need to have appropriate

1007
00:41:34,980 --> 00:41:40,290
tool for that so we've got a cql so

1008
00:41:37,560 --> 00:41:43,610
secrets dumper and CQ also secrets

1009
00:41:40,290 --> 00:41:47,390
dumper allows us to specify it simply as

1010
00:41:43,610 --> 00:41:50,390
parameter a file and we do exported pfx

1011
00:41:47,390 --> 00:41:53,810
where we are able to get this private

1012
00:41:50,390 --> 00:41:57,950
key out now who can get access to this

1013
00:41:53,810 --> 00:41:59,810
key anybody who is domain admin okay so

1014
00:41:57,950 --> 00:42:02,120
it could be a case of a domain admin

1015
00:41:59,810 --> 00:42:04,430
that you don't trust that basically

1016
00:42:02,120 --> 00:42:06,020
extract that it could be also extracted

1017
00:42:04,430 --> 00:42:09,819
in an attack but that's a different

1018
00:42:06,020 --> 00:42:12,920
story and anybody who has privilege of

1019
00:42:09,820 --> 00:42:16,070
replicating directory changes all and

1020
00:42:12,920 --> 00:42:19,130
that is quite interesting because in the

1021
00:42:16,070 --> 00:42:21,170
time of a sharepoint 2003 there was

1022
00:42:19,130 --> 00:42:23,150
actually a book release that contained a

1023
00:42:21,170 --> 00:42:25,660
mistake which was recommending

1024
00:42:23,150 --> 00:42:29,780
administrators of sharepoint for the

1025
00:42:25,660 --> 00:42:32,899
prove the profile replication accounts

1026
00:42:29,780 --> 00:42:35,360
to give this particular privilege so

1027
00:42:32,900 --> 00:42:37,070
that eventually sharepoint accounts even

1028
00:42:35,360 --> 00:42:38,540
they could be at regular domain users

1029
00:42:37,070 --> 00:42:41,060
this is something that i personally

1030
00:42:38,540 --> 00:42:43,550
looking for in the infrastructure to

1031
00:42:41,060 --> 00:42:46,720
verify if i'm able from this particular

1032
00:42:43,550 --> 00:42:50,510
account to replicate the data to myself

1033
00:42:46,720 --> 00:42:52,700
yeah now all these attacks DC sync dis

1034
00:42:50,510 --> 00:42:55,160
shud this is shadow and so on they also

1035
00:42:52,700 --> 00:42:58,850
allow allowing us to get this particular

1036
00:42:55,160 --> 00:43:02,000
key so let's get to see what this key is

1037
00:42:58,850 --> 00:43:04,250
about exported pfx next next and next

1038
00:43:02,000 --> 00:43:06,680
and here it asks you to provide the

1039
00:43:04,250 --> 00:43:09,170
password password is secure so our

1040
00:43:06,680 --> 00:43:11,540
team's name and then we move forward and

1041
00:43:09,170 --> 00:43:14,810
then if we do have a look here and if we

1042
00:43:11,540 --> 00:43:18,259
do cert MGR dot MSC we are able to see

1043
00:43:14,810 --> 00:43:22,130
in personal certificates and this that

1044
00:43:18,260 --> 00:43:25,570
we've got a certificate that is very

1045
00:43:22,130 --> 00:43:29,660
useful for someone who is about to

1046
00:43:25,570 --> 00:43:31,760
recover data from the users profiles but

1047
00:43:29,660 --> 00:43:35,029
it's kind of funny too because we've got

1048
00:43:31,760 --> 00:43:38,510
issued to nobody issued to by by nobody

1049
00:43:35,030 --> 00:43:40,970
it's only valid for a year so if you for

1050
00:43:38,510 --> 00:43:43,640
example change your domain upgrade or if

1051
00:43:40,970 --> 00:43:46,189
you do whatever this certificate does

1052
00:43:43,640 --> 00:43:47,900
not get renewed when you get a Kerberos

1053
00:43:46,190 --> 00:43:50,690
stick as you can reset them every night

1054
00:43:47,900 --> 00:43:53,090
but not that certificate and that's a

1055
00:43:50,690 --> 00:43:55,140
bit of a problem so technically if you

1056
00:43:53,090 --> 00:43:58,529
had set up your domain

1057
00:43:55,140 --> 00:44:01,618
in 2003 and even though you did a bunch

1058
00:43:58,529 --> 00:44:04,440
of upgrades this certificate is dated to

1059
00:44:01,619 --> 00:44:05,849
down to 2003 and what's kind of funny is

1060
00:44:04,440 --> 00:44:07,890
that if you have a look at the

1061
00:44:05,849 --> 00:44:10,680
parameters of that certificate just to

1062
00:44:07,890 --> 00:44:13,589
be absolutely fair yeah this is this is

1063
00:44:10,680 --> 00:44:16,140
a 2048-bit ski that is used over there

1064
00:44:13,589 --> 00:44:19,078
including so on which is kind of sad but

1065
00:44:16,140 --> 00:44:20,759
that's the reality so you like it or not

1066
00:44:19,079 --> 00:44:22,829
that's the fact

1067
00:44:20,759 --> 00:44:25,619
so that's certificate each of you have

1068
00:44:22,829 --> 00:44:27,539
now that certificate can be used by

1069
00:44:25,619 --> 00:44:31,170
someone and I would like to show you how

1070
00:44:27,539 --> 00:44:33,390
in order to get access to the users

1071
00:44:31,170 --> 00:44:36,089
personal data let's start this process

1072
00:44:33,390 --> 00:44:38,640
so right now I'm back on the client

1073
00:44:36,089 --> 00:44:40,769
machine and I'm gonna start up a common

1074
00:44:38,640 --> 00:44:42,480
prompt as a regular user we don't need

1075
00:44:40,769 --> 00:44:45,209
any be you we don't need any particular

1076
00:44:42,480 --> 00:44:48,269
privileges here and in order to be able

1077
00:44:45,210 --> 00:44:51,119
to learn which master key is actually

1078
00:44:48,269 --> 00:44:53,430
used for Chrome I'm gonna use one

1079
00:44:51,119 --> 00:44:54,989
forensic tool that we've written but

1080
00:44:53,430 --> 00:44:57,598
first let me give you a little bit of a

1081
00:44:54,989 --> 00:45:00,749
background so that we all are on the

1082
00:44:57,599 --> 00:45:04,499
same page in the data protection API so

1083
00:45:00,749 --> 00:45:06,899
master keys are stored for everybody in

1084
00:45:04,499 --> 00:45:10,890
the same folder they are stored in the

1085
00:45:06,900 --> 00:45:13,349
Freddie in the users Freddy's folder

1086
00:45:10,890 --> 00:45:16,348
we've got up data roaming

1087
00:45:13,349 --> 00:45:20,009
we've got Microsoft and then we've got

1088
00:45:16,349 --> 00:45:21,869
protect and then we've got Sid and then

1089
00:45:20,009 --> 00:45:23,579
we've got master keys stored over here

1090
00:45:21,869 --> 00:45:26,519
now which of those is to use for a

1091
00:45:23,579 --> 00:45:29,700
chrome I have no idea but we know how to

1092
00:45:26,519 --> 00:45:31,488
check okay so how do we check for that

1093
00:45:29,700 --> 00:45:34,618
and this is by the way my little

1094
00:45:31,489 --> 00:45:36,480
favorite tool that we got because it

1095
00:45:34,619 --> 00:45:38,999
shows you a lot forensically

1096
00:45:36,480 --> 00:45:41,249
I love it let me show you so here we go

1097
00:45:38,999 --> 00:45:46,259
we got it like this if we get into the

1098
00:45:41,249 --> 00:45:50,730
CQ tools we've got a 2 DP API that is

1099
00:45:46,259 --> 00:45:53,640
called CQ DP API block searcher and CQ

1100
00:45:50,730 --> 00:45:56,099
DP API block searcher it's just a simple

1101
00:45:53,640 --> 00:45:58,109
no very useful searcher across the data

1102
00:45:56,099 --> 00:45:59,999
prediction API blobs so if you ever

1103
00:45:58,109 --> 00:46:01,710
wondered do I have any secrets in my

1104
00:45:59,999 --> 00:46:04,238
laptop that I that I don't know about

1105
00:46:01,710 --> 00:46:05,559
that our DP API that would too

1106
00:46:04,239 --> 00:46:08,109
will tell you this and you can always

1107
00:46:05,559 --> 00:46:12,279
maybe delete that yeah so here we go

1108
00:46:08,109 --> 00:46:15,759
we've got parameters - f - R that I'm

1109
00:46:12,279 --> 00:46:17,889
gonna - D for folder - R - oh so let's

1110
00:46:15,759 --> 00:46:21,159
use this yes as simple as it could be so

1111
00:46:17,889 --> 00:46:24,089
we've got a - D where the chrome data is

1112
00:46:21,159 --> 00:46:27,069
stored in the users Freddie up data

1113
00:46:24,089 --> 00:46:29,919
local here we go and then we've got

1114
00:46:27,069 --> 00:46:33,189
Google and then we got Chrome bang and

1115
00:46:29,919 --> 00:46:35,049
we've got another one which is our four

1116
00:46:33,189 --> 00:46:37,479
recursive and then we've got all four

1117
00:46:35,049 --> 00:46:39,729
output where we specify our secu tools

1118
00:46:37,479 --> 00:46:42,848
and that's it and I'm gonna string the

1119
00:46:39,729 --> 00:46:45,158
output into DP txt it's gonna take a

1120
00:46:42,849 --> 00:46:47,019
couple of seconds and I'm looking in the

1121
00:46:45,159 --> 00:46:49,389
Google Chrome folder for all the

1122
00:46:47,019 --> 00:46:51,459
identifiers of the data protection API

1123
00:46:49,389 --> 00:46:53,229
blobs so that I can get the master key

1124
00:46:51,459 --> 00:46:55,989
out so that I can decrypt the user

1125
00:46:53,229 --> 00:46:58,959
secret let's have a look we've got a DP

1126
00:46:55,989 --> 00:47:00,489
txt it's a little small but let me

1127
00:46:58,959 --> 00:47:02,709
enlarge it and I already see the key

1128
00:47:00,489 --> 00:47:06,309
that we are interested in bring it on

1129
00:47:02,709 --> 00:47:09,129
that's this b55 yeah and we can see that

1130
00:47:06,309 --> 00:47:11,159
this identifier master key guiit it's

1131
00:47:09,129 --> 00:47:13,419
actually the one that is used by chrome

1132
00:47:11,159 --> 00:47:14,469
including using Schwann and Triple DES

1133
00:47:13,419 --> 00:47:18,578
that's a different story

1134
00:47:14,469 --> 00:47:20,709
okay let's move forward so we've got b55

1135
00:47:18,579 --> 00:47:23,499
nice good to know some let me minimize

1136
00:47:20,709 --> 00:47:26,799
that and I'm gonna go over here to this

1137
00:47:23,499 --> 00:47:28,959
folder to search for B 55 and I found it

1138
00:47:26,799 --> 00:47:31,719
that's this guy so what I'm gonna do I'm

1139
00:47:28,959 --> 00:47:34,779
gonna work on it shift right click copy

1140
00:47:31,719 --> 00:47:36,549
as path lovely so let's get into the

1141
00:47:34,779 --> 00:47:39,249
console first of all what I'm gonna do

1142
00:47:36,549 --> 00:47:42,819
here is to generate my current password

1143
00:47:39,249 --> 00:47:45,129
hash and my current password is mimikatz

1144
00:47:42,819 --> 00:47:49,179
and my current password hash will be

1145
00:47:45,129 --> 00:47:51,699
used to encrypt back master key so that

1146
00:47:49,179 --> 00:47:53,889
I can use it life alright we're going to

1147
00:47:51,699 --> 00:47:55,779
decrypt it with the pfx and encrypted

1148
00:47:53,889 --> 00:47:58,719
back with our current password hash

1149
00:47:55,779 --> 00:48:01,059
simple operation so let's do that we're

1150
00:47:58,719 --> 00:48:04,089
gonna be using for that secure another

1151
00:48:01,059 --> 00:48:07,509
tool master key ID absolutely nice tool

1152
00:48:04,089 --> 00:48:10,899
that allows us to specify a master key

1153
00:48:07,509 --> 00:48:13,619
that we are working on pfx that we've

1154
00:48:10,899 --> 00:48:16,400
got from the domain and then new hash

1155
00:48:13,619 --> 00:48:19,039
that we are actually getting from the

1156
00:48:16,400 --> 00:48:21,109
simple calculation over here let's get

1157
00:48:19,039 --> 00:48:23,859
that here we go

1158
00:48:21,109 --> 00:48:27,980
enter and then we've got over here

1159
00:48:23,859 --> 00:48:30,020
created a new key ad modified this one

1160
00:48:27,980 --> 00:48:32,750
ad modified is encrypted with our

1161
00:48:30,020 --> 00:48:35,150
current password hash so this guy we can

1162
00:48:32,750 --> 00:48:37,670
name good because eventually we did not

1163
00:48:35,150 --> 00:48:39,589
have access to it but this one we should

1164
00:48:37,670 --> 00:48:42,230
have access to it because we have

1165
00:48:39,589 --> 00:48:44,210
decrypted it with the pfx and encrypt it

1166
00:48:42,230 --> 00:48:46,400
with the current password hash there's

1167
00:48:44,210 --> 00:48:49,339
one more thing guys that I have to do I

1168
00:48:46,400 --> 00:48:51,859
have to use the a trip command to

1169
00:48:49,339 --> 00:48:54,529
actually set it to system and hidden

1170
00:48:51,859 --> 00:48:57,799
bank and eventually what we're getting

1171
00:48:54,529 --> 00:49:03,250
over here f5 it's the password of the

1172
00:48:57,799 --> 00:49:03,250
user so thank you thank you

1173
00:49:05,470 --> 00:49:10,788
thanks a lot so basically this is

1174
00:49:07,940 --> 00:49:12,380
something that you can do 200,000

1175
00:49:10,789 --> 00:49:14,240
peoples that might be working for you

1176
00:49:12,380 --> 00:49:17,000
because there's only one key that

1177
00:49:14,240 --> 00:49:18,589
everything relies on and can you tell

1178
00:49:17,000 --> 00:49:20,690
that your users in the company are not

1179
00:49:18,589 --> 00:49:22,759
storing passwords in a browser and if

1180
00:49:20,690 --> 00:49:24,349
you say no then there is still old book

1181
00:49:22,760 --> 00:49:26,359
there is still private key there's still

1182
00:49:24,349 --> 00:49:28,630
applications so all the different types

1183
00:49:26,359 --> 00:49:32,630
of secret that we got like this now

1184
00:49:28,630 --> 00:49:34,970
cherry on the top is if you've got any

1185
00:49:32,630 --> 00:49:37,940
type of other type of data like this

1186
00:49:34,970 --> 00:49:40,640
like for example it could be a coupie

1187
00:49:37,940 --> 00:49:41,990
things like key pass and so on what I

1188
00:49:40,640 --> 00:49:45,799
would like to show you is that

1189
00:49:41,990 --> 00:49:47,450
eventually you are able to pull any type

1190
00:49:45,799 --> 00:49:50,270
of application and if it uses data

1191
00:49:47,450 --> 00:49:52,700
protection API as well you are able to

1192
00:49:50,270 --> 00:49:56,059
get access to these types of Secrets too

1193
00:49:52,700 --> 00:49:59,288
so once we've got this reversed then you

1194
00:49:56,059 --> 00:50:02,450
are able to move forward and eventually

1195
00:49:59,289 --> 00:50:05,480
decrypt that type of data so please have

1196
00:50:02,450 --> 00:50:07,250
a look what I'm gonna do here so here

1197
00:50:05,480 --> 00:50:09,289
I've got the following situation I've

1198
00:50:07,250 --> 00:50:11,990
got to keep us we can just close it they

1199
00:50:09,289 --> 00:50:14,329
keep us from here here we go let's do it

1200
00:50:11,990 --> 00:50:16,220
and I got the following keep us here

1201
00:50:14,329 --> 00:50:17,450
yeah so this is basically what we're

1202
00:50:16,220 --> 00:50:19,910
gonna be getting to I'm gonna delete

1203
00:50:17,450 --> 00:50:23,210
this file so we've got a C Q base and

1204
00:50:19,910 --> 00:50:25,069
this is the file that if I do type a

1205
00:50:23,210 --> 00:50:28,320
secure over here which is the password

1206
00:50:25,069 --> 00:50:31,620
that we are using and I do ok this

1207
00:50:28,320 --> 00:50:33,300
password doesn't work right so funny

1208
00:50:31,620 --> 00:50:35,400
part we would like to get access to the

1209
00:50:33,300 --> 00:50:37,350
key bus so what do we do when we were

1210
00:50:35,400 --> 00:50:41,040
decrypting this master key of the user

1211
00:50:37,350 --> 00:50:43,170
we are also able with our toolkit to put

1212
00:50:41,040 --> 00:50:44,880
it in a clear text eventually it has to

1213
00:50:43,170 --> 00:50:47,040
be in a clear text to be encrypted the

1214
00:50:44,880 --> 00:50:49,440
back of our password hush so what I'm

1215
00:50:47,040 --> 00:50:52,320
doing over here have a look I'm actually

1216
00:50:49,440 --> 00:50:55,230
using the entropy of the key bus which

1217
00:50:52,320 --> 00:50:57,090
is the same for wall to keep us then I'm

1218
00:50:55,230 --> 00:50:58,590
using blob that I'm gonna be working on

1219
00:50:57,090 --> 00:51:00,960
so this is for the keep us protected

1220
00:50:58,590 --> 00:51:02,460
user key bin so it's a file that is

1221
00:51:00,960 --> 00:51:04,770
actually protecting the key past

1222
00:51:02,460 --> 00:51:08,070
database and then I'm using the master

1223
00:51:04,770 --> 00:51:11,250
key which you can extract as we

1224
00:51:08,070 --> 00:51:13,080
mentioned from basically our toolkit so

1225
00:51:11,250 --> 00:51:15,090
that this is this master key that we've

1226
00:51:13,080 --> 00:51:18,000
been talking about so master key one for

1227
00:51:15,090 --> 00:51:20,910
example so once we got that we are able

1228
00:51:18,000 --> 00:51:23,490
to get the key over here that is purely

1229
00:51:20,910 --> 00:51:24,509
used to decrypt the key past database

1230
00:51:23,490 --> 00:51:25,649
have a look guys

1231
00:51:24,510 --> 00:51:27,990
that's going to be super quick

1232
00:51:25,650 --> 00:51:30,420
demonstration our toolkit over here

1233
00:51:27,990 --> 00:51:32,970
which has a lovely name of a seek UDP

1234
00:51:30,420 --> 00:51:38,220
API key pass davidic Ripper so is it you

1235
00:51:32,970 --> 00:51:40,859
remember it has two values K and F let's

1236
00:51:38,220 --> 00:51:43,290
clear it out and let's use it so we're

1237
00:51:40,860 --> 00:51:45,150
gonna be using K and that's this key

1238
00:51:43,290 --> 00:51:49,230
that I have decrypted and we're going to

1239
00:51:45,150 --> 00:51:51,780
be using f4 see analysis CQ base that we

1240
00:51:49,230 --> 00:51:54,600
could not get access to enter what it

1241
00:51:51,780 --> 00:51:57,240
says successfully savory encrypted file

1242
00:51:54,600 --> 00:51:59,670
to that CQ base and let's have a look so

1243
00:51:57,240 --> 00:52:03,209
that's basically this file here and I'm

1244
00:51:59,670 --> 00:52:05,550
gonna open it up double click let's just

1245
00:52:03,210 --> 00:52:08,550
close this keeper that we got there we

1246
00:52:05,550 --> 00:52:09,960
go and then this guy comes a place we

1247
00:52:08,550 --> 00:52:12,000
are this stung specifically is

1248
00:52:09,960 --> 00:52:14,670
specifying the password secure because

1249
00:52:12,000 --> 00:52:17,130
by Rhian crypting it we are able to do

1250
00:52:14,670 --> 00:52:18,690
that and then ok and this is how you

1251
00:52:17,130 --> 00:52:22,560
managed to get access to the key path

1252
00:52:18,690 --> 00:52:24,870
database so so that's what you got when

1253
00:52:22,560 --> 00:52:28,080
you are able to reverse data protection

1254
00:52:24,870 --> 00:52:31,830
API and within our team we're providing

1255
00:52:28,080 --> 00:52:35,670
full toolkit to decrypt data the data

1256
00:52:31,830 --> 00:52:37,470
protection API secrets that you guys

1257
00:52:35,670 --> 00:52:38,570
might find during your forensic

1258
00:52:37,470 --> 00:52:40,549
investigation

1259
00:52:38,570 --> 00:52:42,290
that's what I mean by bringing friends

1260
00:52:40,550 --> 00:52:44,450
and investigation to the next level

1261
00:52:42,290 --> 00:52:47,570
you're working with the data blobs that

1262
00:52:44,450 --> 00:52:49,399
you can identify as a DP API secrets and

1263
00:52:47,570 --> 00:52:51,440
then what's next and this is exactly

1264
00:52:49,400 --> 00:52:54,110
what we are referring to so this is a

1265
00:52:51,440 --> 00:52:56,540
toolkit that is related to the DP API

1266
00:52:54,110 --> 00:52:58,820
major token there is much much more than

1267
00:52:56,540 --> 00:53:01,220
that and this is also part of our

1268
00:52:58,820 --> 00:53:04,580
forensic tool kits that you guys may

1269
00:53:01,220 --> 00:53:07,279
want to have a look at so as you see and

1270
00:53:04,580 --> 00:53:10,310
let's get into the summary we were able

1271
00:53:07,280 --> 00:53:13,220
to decrypt different types of data by

1272
00:53:10,310 --> 00:53:15,170
leveraging our toolkits hopefully you

1273
00:53:13,220 --> 00:53:17,450
guys maybe it will be able to download

1274
00:53:15,170 --> 00:53:19,580
it we are sharing all the tools and

1275
00:53:17,450 --> 00:53:22,640
knowledge for free so we've got a C Q

1276
00:53:19,580 --> 00:53:25,279
dot r e forensic tool kit so make sure

1277
00:53:22,640 --> 00:53:27,980
that you will not miss out after the

1278
00:53:25,280 --> 00:53:30,230
black hat and at the end of course I

1279
00:53:27,980 --> 00:53:33,950
would like to invite you to our team

1280
00:53:30,230 --> 00:53:36,050
squeeze our team is absolutely loving to

1281
00:53:33,950 --> 00:53:38,210
know more and if you want to know more

1282
00:53:36,050 --> 00:53:40,400
there's no registration over here this

1283
00:53:38,210 --> 00:53:41,900
is the quiz when you learn so you answer

1284
00:53:40,400 --> 00:53:43,700
questions and if you answer it wrongly

1285
00:53:41,900 --> 00:53:46,430
we tell you immediately what's wrong

1286
00:53:43,700 --> 00:53:48,950
this is a cybersecurity quiz our 4.0

1287
00:53:46,430 --> 00:53:51,049
release that we release pretty much

1288
00:53:48,950 --> 00:53:53,419
every year for everybody that like

1289
00:53:51,050 --> 00:53:56,330
cybersecurity if you want to have more

1290
00:53:53,420 --> 00:54:01,070
information of course at the end we've

1291
00:53:56,330 --> 00:54:03,259
got our block and this is a secure

1292
00:54:01,070 --> 00:54:05,570
academy.com which you can see on the

1293
00:54:03,260 --> 00:54:07,730
right side where we also share the tools

1294
00:54:05,570 --> 00:54:11,830
and this presentation thank you so much

1295
00:54:07,730 --> 00:54:11,830
for coming I hope it was useful for you

