1
00:00:00,030 --> 00:00:05,700
this talk is defense against rapidly

2
00:00:02,340 --> 00:00:09,469
morphine DDoS with Mikhail Fedorov and

3
00:00:05,700 --> 00:00:09,470
muta Tyagi yes

4
00:00:09,929 --> 00:00:18,090
it's an honor to be here thank you very

5
00:00:12,389 --> 00:00:22,740
much for being with us let me just begin

6
00:00:18,090 --> 00:00:25,289
with the the acknowledgement that young

7
00:00:22,740 --> 00:00:29,189
people the younger generation is very

8
00:00:25,289 --> 00:00:32,640
very sharp they're very smart they

9
00:00:29,189 --> 00:00:36,180
figured out how to take over IOT devices

10
00:00:32,640 --> 00:00:38,879
and make botnets and they're selling

11
00:00:36,180 --> 00:00:42,540
DDoS services this is an ad from paste

12
00:00:38,879 --> 00:00:45,539
bin and if you notice for 10 bucks you

13
00:00:42,540 --> 00:00:47,190
can get 500 second attacks with

14
00:00:45,539 --> 00:00:50,629
60-second cooldowns

15
00:00:47,190 --> 00:00:53,070
right for 10 bucks that's cheaper than

16
00:00:50,629 --> 00:00:58,320
pizza in New York City probably here

17
00:00:53,070 --> 00:01:01,769
also here in Vegas right so all of us

18
00:00:58,320 --> 00:01:05,970
need to be ready to deal with DDoS

19
00:01:01,770 --> 00:01:09,600
attacks the what do you do to get ready

20
00:01:05,970 --> 00:01:13,229
well we should be testing our DDoS

21
00:01:09,600 --> 00:01:16,408
posture and we should be running Red

22
00:01:13,229 --> 00:01:19,500
Team Blue Team games to make sure that

23
00:01:16,409 --> 00:01:23,130
we are absolutely prepared when doss

24
00:01:19,500 --> 00:01:28,890
hits us right now if you get ddosed who

25
00:01:23,130 --> 00:01:32,880
do you call those busters so I used to I

26
00:01:28,890 --> 00:01:34,770
mu de t oggi architected f5 networks and

27
00:01:32,880 --> 00:01:38,009
that's how I used to look when I was

28
00:01:34,770 --> 00:01:40,350
younger my name is Michaela fedora

29
00:01:38,009 --> 00:01:42,270
I'm engineer at f5 networks and the

30
00:01:40,350 --> 00:01:45,059
Academy Harris before started to fight

31
00:01:42,270 --> 00:01:48,949
those attacks yes fighting DDoS you lose

32
00:01:45,060 --> 00:01:52,259
your hair so the you now know who we are

33
00:01:48,950 --> 00:01:56,700
how many of you hands please how many of

34
00:01:52,259 --> 00:01:58,110
you recognize this character ok good now

35
00:01:56,700 --> 00:02:01,619
please help me out here I'm a bit

36
00:01:58,110 --> 00:02:05,640
nervous so help me out why is it so

37
00:02:01,619 --> 00:02:08,910
difficult to fight this guy why is it so

38
00:02:05,640 --> 00:02:12,560
hard to defend against moral t1000

39
00:02:08,910 --> 00:02:12,560
what's so special about him

40
00:02:13,810 --> 00:02:19,240
liquid-liquid he can change his form he

41
00:02:16,580 --> 00:02:21,470
can morph one moment he looks like a cop

42
00:02:19,240 --> 00:02:24,770
another moment he looks like Sarah

43
00:02:21,470 --> 00:02:27,590
Connor right and just when you think

44
00:02:24,770 --> 00:02:31,220
that you figured out all his shapes he

45
00:02:27,590 --> 00:02:34,880
moves again he can even become a tile in

46
00:02:31,220 --> 00:02:37,250
a hallway in a building right so very

47
00:02:34,880 --> 00:02:38,810
difficult to figure him out because he

48
00:02:37,250 --> 00:02:41,900
can just continuously keep morphing

49
00:02:38,810 --> 00:02:45,140
right now this is exactly what happened

50
00:02:41,900 --> 00:02:49,040
to our friends at proton mill in June

51
00:02:45,140 --> 00:02:53,630
2018 they were hit by sustained DDoS

52
00:02:49,040 --> 00:02:55,220
attacks the vectors that got got used in

53
00:02:53,630 --> 00:02:57,950
these attacks they were run-of-the-mill

54
00:02:55,220 --> 00:03:00,109
vectors you know UDP floods syn floods

55
00:02:57,950 --> 00:03:04,250
etc nothing too special about the

56
00:03:00,110 --> 00:03:07,250
vectors but what made the attack so

57
00:03:04,250 --> 00:03:09,140
complex to defend against is that the

58
00:03:07,250 --> 00:03:11,630
attacker kept on changing the attack

59
00:03:09,140 --> 00:03:15,649
they kept on morphing the hf attack

60
00:03:11,630 --> 00:03:17,510
right so as the salt deftly would go and

61
00:03:15,650 --> 00:03:20,000
figure out what's a good mitigation for

62
00:03:17,510 --> 00:03:23,780
the attack and place that mitigation in

63
00:03:20,000 --> 00:03:26,120
in in mitigation mode in some device the

64
00:03:23,780 --> 00:03:28,310
attackers would simply morph the attack

65
00:03:26,120 --> 00:03:31,070
change the attack so the mitigation that

66
00:03:28,310 --> 00:03:32,990
got placed in order to defend against

67
00:03:31,070 --> 00:03:37,130
the attack was no longer useful

68
00:03:32,990 --> 00:03:39,590
now protonmail we are huge fans of

69
00:03:37,130 --> 00:03:42,410
proton mail we truly appreciate what

70
00:03:39,590 --> 00:03:45,470
they do for the community so for us for

71
00:03:42,410 --> 00:03:47,930
me shine me when protonmail got attacked

72
00:03:45,470 --> 00:03:50,780
we took it as an attack on the community

73
00:03:47,930 --> 00:03:54,050
on ourselves and we said alright let's

74
00:03:50,780 --> 00:03:56,930
figure out how to defend against these

75
00:03:54,050 --> 00:04:00,020
attacks what do we do to catch the

76
00:03:56,930 --> 00:04:02,540
morphing attacks and just you and defeat

77
00:04:00,020 --> 00:04:04,520
them right the other thing I would say

78
00:04:02,540 --> 00:04:06,769
about protonmail that we really truly

79
00:04:04,520 --> 00:04:09,350
appreciate is that that they were

80
00:04:06,770 --> 00:04:12,440
actually transparent about the nature of

81
00:04:09,350 --> 00:04:15,350
the attack so researchers like us could

82
00:04:12,440 --> 00:04:16,910
actually study the attack and figure out

83
00:04:15,350 --> 00:04:20,600
ways to defend against it

84
00:04:16,910 --> 00:04:24,260
now when you begin to research the first

85
00:04:20,600 --> 00:04:25,610
thing we needed was a tool that could

86
00:04:24,260 --> 00:04:28,490
actually stimuli

87
00:04:25,610 --> 00:04:31,490
morphing attacks and so we looked around

88
00:04:28,490 --> 00:04:34,400
and we didn't find any good tools so we

89
00:04:31,490 --> 00:04:36,620
had to write one so Misha wrote a tool

90
00:04:34,400 --> 00:04:40,010
be sure you want to take it up and

91
00:04:36,620 --> 00:04:41,690
describe the tool you wrote right so we

92
00:04:40,010 --> 00:04:44,539
are sure that everyone in this audience

93
00:04:41,690 --> 00:04:47,960
is smart to write your own to to launch

94
00:04:44,540 --> 00:04:53,000
more in flux but we decided to save you

95
00:04:47,960 --> 00:04:55,909
some time and Road soda so soda is able

96
00:04:53,000 --> 00:04:57,919
to launch those plugs on them on the

97
00:04:55,910 --> 00:05:01,100
various levels on the network level and

98
00:04:57,919 --> 00:05:03,770
application layer it uses the existing

99
00:05:01,100 --> 00:05:05,750
tools to generate traffic but scale them

100
00:05:03,770 --> 00:05:08,479
to the multiple cores in order to

101
00:05:05,750 --> 00:05:10,820
increase traffic volume and of course it

102
00:05:08,480 --> 00:05:14,300
allows you to morph attack pattern

103
00:05:10,820 --> 00:05:16,250
continuously so so that can be used in

104
00:05:14,300 --> 00:05:19,070
order to put down any part of your

105
00:05:16,250 --> 00:05:22,130
infrastructure firewall application

106
00:05:19,070 --> 00:05:24,800
services everything so so there is a

107
00:05:22,130 --> 00:05:27,469
tool for a red team right so soda is a

108
00:05:24,800 --> 00:05:30,890
tool for the red team for the blue team

109
00:05:27,470 --> 00:05:32,600
what we did is we came up with an

110
00:05:30,890 --> 00:05:35,630
environment we were just talking to

111
00:05:32,600 --> 00:05:37,669
Nathan who who's discussing with us that

112
00:05:35,630 --> 00:05:39,950
you know he has to do some DDoS testing

113
00:05:37,669 --> 00:05:42,830
and doing DDoS testing can be complex

114
00:05:39,950 --> 00:05:44,780
because even DDoS in your dev

115
00:05:42,830 --> 00:05:49,130
environment touches your network right

116
00:05:44,780 --> 00:05:52,640
so you need a safe environment where you

117
00:05:49,130 --> 00:05:56,690
can do your your testing against DDoS so

118
00:05:52,640 --> 00:05:59,030
we put this together and the the

119
00:05:56,690 --> 00:06:01,340
blueprint that we show you here you can

120
00:05:59,030 --> 00:06:04,940
use it as is or you can customize it

121
00:06:01,340 --> 00:06:07,280
further now let me explain the blueprint

122
00:06:04,940 --> 00:06:09,919
to you a little bit so we've got clients

123
00:06:07,280 --> 00:06:11,960
which are running as docker containers

124
00:06:09,919 --> 00:06:14,659
you need those because you want to see

125
00:06:11,960 --> 00:06:18,140
what the end users experience looks like

126
00:06:14,660 --> 00:06:20,810
when soda begins to attack and then on

127
00:06:18,140 --> 00:06:23,479
the very right hand side you've got the

128
00:06:20,810 --> 00:06:26,660
dam vulnerable web application running

129
00:06:23,479 --> 00:06:28,880
in containers that's the target and then

130
00:06:26,660 --> 00:06:31,250
you've got pfsense which is an open

131
00:06:28,880 --> 00:06:32,900
source fireball we wanted to create an

132
00:06:31,250 --> 00:06:35,000
environment that looks like your network

133
00:06:32,900 --> 00:06:37,219
so typically you're defending the edge

134
00:06:35,000 --> 00:06:39,140
of your network with a firewall so we

135
00:06:37,220 --> 00:06:43,910
picked an open source firewall

136
00:06:39,140 --> 00:06:46,849
now it's all of these elements the the

137
00:06:43,910 --> 00:06:49,630
client containers the dvwa containers

138
00:06:46,850 --> 00:06:51,950
pfSense they're all instrumented with

139
00:06:49,630 --> 00:06:54,020
Telegraph if you don't know what

140
00:06:51,950 --> 00:06:58,190
Telegraph is it

141
00:06:54,020 --> 00:07:02,180
it can Telegraph metrics wherever

142
00:06:58,190 --> 00:07:04,700
whichever host it is instrumenting

143
00:07:02,180 --> 00:07:08,270
instrumented on so it's sending

144
00:07:04,700 --> 00:07:10,099
real-time metrics into in flux DB which

145
00:07:08,270 --> 00:07:12,770
is collecting these metrics and then

146
00:07:10,100 --> 00:07:15,350
with Griffin ah we can show dashboards

147
00:07:12,770 --> 00:07:18,620
you need all this because you want to be

148
00:07:15,350 --> 00:07:20,900
able to see what is happening to my

149
00:07:18,620 --> 00:07:23,300
clients what is happening to my servers

150
00:07:20,900 --> 00:07:25,880
and what is the state of my firewall as

151
00:07:23,300 --> 00:07:29,240
soda attacks so we put all this together

152
00:07:25,880 --> 00:07:32,810
and now what you can do is stick your

153
00:07:29,240 --> 00:07:35,720
ddos defensive mechanism just before the

154
00:07:32,810 --> 00:07:38,720
firewall keep in mind a DDoS device is a

155
00:07:35,720 --> 00:07:40,850
default open device unlike a firewall

156
00:07:38,720 --> 00:07:43,850
which is a default deny device and you

157
00:07:40,850 --> 00:07:45,980
open a pinhole DDoS device is a default

158
00:07:43,850 --> 00:07:48,230
open device it's got the hardest job in

159
00:07:45,980 --> 00:07:51,040
the world it's got to let everything

160
00:07:48,230 --> 00:07:54,200
through right do not drop anything

161
00:07:51,040 --> 00:07:58,370
unless there's an attack and then only

162
00:07:54,200 --> 00:08:01,400
drop the bad packets and today the

163
00:07:58,370 --> 00:08:04,340
biggest challenge that DDoS defense

164
00:08:01,400 --> 00:08:06,530
faces is they're open to many false

165
00:08:04,340 --> 00:08:10,070
positives so what happens is people

166
00:08:06,530 --> 00:08:12,979
create they use what we call static

167
00:08:10,070 --> 00:08:16,630
vectors and set thresholds for them so

168
00:08:12,980 --> 00:08:20,360
for example they'll say I'll only allow

169
00:08:16,630 --> 00:08:23,060
10,000 20,000 UDP packets per second my

170
00:08:20,360 --> 00:08:25,010
normal load is 10,000 my firewall can

171
00:08:23,060 --> 00:08:28,490
take 30 South thousand so I'm gonna

172
00:08:25,010 --> 00:08:31,789
allow 20,000 UDP packets per second when

173
00:08:28,490 --> 00:08:34,340
the attack comes you might see 200,000

174
00:08:31,790 --> 00:08:36,470
UDP packets per second right and you're

175
00:08:34,340 --> 00:08:39,200
gonna have to drop most of those because

176
00:08:36,470 --> 00:08:40,880
you set a threshold at 20,000 so you're

177
00:08:39,200 --> 00:08:43,760
dropping a hundred and eighty thousand

178
00:08:40,880 --> 00:08:47,050
UDP packets and the chances are the

179
00:08:43,760 --> 00:08:49,790
10,000 good ones are part of those

180
00:08:47,050 --> 00:08:52,170
180,000 that you're dropping so you end

181
00:08:49,790 --> 00:08:55,620
up causing a lot of false positives

182
00:08:52,170 --> 00:08:57,810
now thus the sake analysts were

183
00:08:55,620 --> 00:09:00,839
experienced they know this so what they

184
00:08:57,810 --> 00:09:02,939
do is you know they're put systems in

185
00:09:00,839 --> 00:09:04,470
place and best practices in place they

186
00:09:02,940 --> 00:09:07,070
look at packet captures and other

187
00:09:04,470 --> 00:09:10,380
indicators and try to find very specific

188
00:09:07,070 --> 00:09:13,160
characteristics of the attack back 'its

189
00:09:10,380 --> 00:09:15,750
and then make a regular expression and

190
00:09:13,160 --> 00:09:19,380
program that in some mitigation device

191
00:09:15,750 --> 00:09:22,199
and and try to be very specific about

192
00:09:19,380 --> 00:09:24,990
what they draw but this takes time and

193
00:09:22,199 --> 00:09:28,019
doesn't work or morphing attacks by the

194
00:09:24,990 --> 00:09:29,820
time you figure all this out your

195
00:09:28,019 --> 00:09:32,370
mitigation is no longer useful because

196
00:09:29,820 --> 00:09:33,329
the attack is already morphed so what we

197
00:09:32,370 --> 00:09:36,329
figured is okay

198
00:09:33,329 --> 00:09:38,430
a machine is coming at us so we got a

199
00:09:36,329 --> 00:09:40,319
defend with the machine so we

200
00:09:38,430 --> 00:09:45,269
investigated some machine learning

201
00:09:40,320 --> 00:09:49,320
algorithms the algorithm that we tested

202
00:09:45,269 --> 00:09:51,360
it baselines the the traffic and then

203
00:09:49,320 --> 00:09:53,670
when it detects an anomaly triggers on

204
00:09:51,360 --> 00:09:57,449
that anomaly and it begins to mitigate

205
00:09:53,670 --> 00:09:59,819
whoa careful because what if your

206
00:09:57,449 --> 00:10:02,880
marketing team there's a massive

207
00:09:59,820 --> 00:10:05,040
wonderful campaign and drives a whole

208
00:10:02,880 --> 00:10:07,560
bunch of new traffic to your site and

209
00:10:05,040 --> 00:10:10,469
your infrastructure team does a great

210
00:10:07,560 --> 00:10:12,810
job and prepares for that new traffic

211
00:10:10,470 --> 00:10:15,240
right nothing is going to go wrong but

212
00:10:12,810 --> 00:10:18,149
the anomaly detector is going to see

213
00:10:15,240 --> 00:10:20,120
anomaly and start dropping you don't

214
00:10:18,149 --> 00:10:22,350
want that you just spent all this money

215
00:10:20,120 --> 00:10:24,810
driving traffic to your site

216
00:10:22,350 --> 00:10:27,060
so you don't just want to drop because

217
00:10:24,810 --> 00:10:29,310
the anomaly detector is unhappy right

218
00:10:27,060 --> 00:10:32,219
another example you have a store

219
00:10:29,310 --> 00:10:34,739
developer and you know your your

220
00:10:32,220 --> 00:10:38,130
customers want a brand new feature so

221
00:10:34,740 --> 00:10:41,550
she codes rapidly checks it into github

222
00:10:38,130 --> 00:10:43,890
she then pushes it out through CI CD the

223
00:10:41,550 --> 00:10:45,510
code is in production the applications

224
00:10:43,890 --> 00:10:47,310
nature has changed a little bit

225
00:10:45,510 --> 00:10:49,529
traffic patterns have changed a little

226
00:10:47,310 --> 00:10:52,800
bit whoa the anomaly detector says

227
00:10:49,529 --> 00:10:54,720
attack right and you don't want that you

228
00:10:52,800 --> 00:10:57,000
want your users to be able to use the

229
00:10:54,720 --> 00:10:59,550
new features so what we discovered is

230
00:10:57,000 --> 00:11:02,399
that you need a second mechanism a

231
00:10:59,550 --> 00:11:05,930
second machine learning mechanism which

232
00:11:02,399 --> 00:11:08,390
is watching the state of the service

233
00:11:05,930 --> 00:11:10,310
so is the service degraded or is the

234
00:11:08,390 --> 00:11:12,590
service doing well that's what this

235
00:11:10,310 --> 00:11:17,000
second algorithm is watching and it's

236
00:11:12,590 --> 00:11:19,610
supervising the first one so if if if

237
00:11:17,000 --> 00:11:21,800
the end-user experience is good the

238
00:11:19,610 --> 00:11:25,070
service is doing well it tells the

239
00:11:21,800 --> 00:11:28,040
anomaly detector don't do anything just

240
00:11:25,070 --> 00:11:30,440
keep learning and as soon as it sees

241
00:11:28,040 --> 00:11:32,689
that the service degrades the end users

242
00:11:30,440 --> 00:11:35,240
are unhappy then it tells the anomaly

243
00:11:32,690 --> 00:11:37,280
detector find the anomaly start the

244
00:11:35,240 --> 00:11:40,370
mitigation and then it keeps on checking

245
00:11:37,280 --> 00:11:44,390
how effective is that mitigation so if

246
00:11:40,370 --> 00:11:46,460
after mitigation is deployed the service

247
00:11:44,390 --> 00:11:48,410
becomes better and better and better the

248
00:11:46,460 --> 00:11:50,480
user experience goes back up to normal

249
00:11:48,410 --> 00:11:54,380
it will say great we found the right

250
00:11:50,480 --> 00:11:56,060
signature but if it sees that after

251
00:11:54,380 --> 00:11:59,000
application of the mitigation the

252
00:11:56,060 --> 00:12:01,250
service is degrading even more it's not

253
00:11:59,000 --> 00:12:03,890
helping it will tell the anomaly

254
00:12:01,250 --> 00:12:06,530
detector you found the wrong thing drop

255
00:12:03,890 --> 00:12:08,120
this one and look for another anomaly so

256
00:12:06,530 --> 00:12:11,990
when you have these two things working

257
00:12:08,120 --> 00:12:15,050
together you have the anomaly and proof

258
00:12:11,990 --> 00:12:17,390
of harm together when these two things

259
00:12:15,050 --> 00:12:19,699
happen together then there's a great

260
00:12:17,390 --> 00:12:21,890
chance that the two are correlated we

261
00:12:19,700 --> 00:12:24,320
found this approach to be the most

262
00:12:21,890 --> 00:12:26,480
effective approach Misha ran a lot of

263
00:12:24,320 --> 00:12:30,500
tests with soda and he's now going to

264
00:12:26,480 --> 00:12:32,510
discuss the results Thank You mood so

265
00:12:30,500 --> 00:12:34,660
the main goal of our experiments was to

266
00:12:32,510 --> 00:12:38,830
check how good machine learning add

267
00:12:34,660 --> 00:12:41,089
mitigation of more hand or splats

268
00:12:38,830 --> 00:12:42,980
as you all know there are two main

269
00:12:41,090 --> 00:12:45,290
victims in your network which can die

270
00:12:42,980 --> 00:12:47,360
when those who has come it's your

271
00:12:45,290 --> 00:12:49,699
infrastructure and your application

272
00:12:47,360 --> 00:12:51,920
services your infrastructure usually

273
00:12:49,700 --> 00:12:53,600
dies when network layer flood comes to

274
00:12:51,920 --> 00:12:56,060
the network and bring a huge amount of

275
00:12:53,600 --> 00:12:57,700
traffic and your application service is

276
00:12:56,060 --> 00:13:01,400
usually bad and usual day when

277
00:12:57,700 --> 00:13:03,770
application layer that comes it's

278
00:13:01,400 --> 00:13:06,199
important to note that we've used two

279
00:13:03,770 --> 00:13:10,160
kinds of anomaly detection mechanisms in

280
00:13:06,200 --> 00:13:13,750
order to find the unnormal E and install

281
00:13:10,160 --> 00:13:16,969
it and main difference between them is

282
00:13:13,750 --> 00:13:18,600
subset of beta kids they use in order to

283
00:13:16,970 --> 00:13:21,750
identify an anomaly

284
00:13:18,600 --> 00:13:24,420
and build this signature the first one

285
00:13:21,750 --> 00:13:28,199
uses all available fields in the packet

286
00:13:24,420 --> 00:13:30,930
to build anomaly pattern and the second

287
00:13:28,199 --> 00:13:33,660
one uses application payload in our case

288
00:13:30,930 --> 00:13:36,620
it was HTTP in order to extract

289
00:13:33,660 --> 00:13:41,930
predicates from and build the signature

290
00:13:36,620 --> 00:13:45,720
the way we run our experiments was busy

291
00:13:41,930 --> 00:13:49,649
attackers and clients on the left then

292
00:13:45,720 --> 00:13:54,509
those protection device then firewall

293
00:13:49,649 --> 00:13:56,100
and then application services and I

294
00:13:54,509 --> 00:13:58,110
would like to cover two experiments

295
00:13:56,100 --> 00:14:02,610
first one how does machine learning

296
00:13:58,110 --> 00:14:04,709
defense against network level floods so

297
00:14:02,610 --> 00:14:07,740
this is a peacetime and the user is

298
00:14:04,709 --> 00:14:11,130
happy the latency jumps between I mean

299
00:14:07,740 --> 00:14:13,500
near zero there is no attack traffic now

300
00:14:11,130 --> 00:14:17,519
just 20 packets per second from attacker

301
00:14:13,500 --> 00:14:19,019
machine firewall doing well it doesn't

302
00:14:17,519 --> 00:14:21,180
see much traffic because legitimate

303
00:14:19,019 --> 00:14:24,810
traffic usually much less than firewall

304
00:14:21,180 --> 00:14:27,870
can do back and CPUs are relaxed and

305
00:14:24,810 --> 00:14:31,310
they happily handle all legitimate

306
00:14:27,870 --> 00:14:34,829
requests which come to them then BOOM

307
00:14:31,310 --> 00:14:39,180
solar started to launch Network level

308
00:14:34,829 --> 00:14:42,300
floods and you can see that level attack

309
00:14:39,180 --> 00:14:44,819
pattern changes every two Millions there

310
00:14:42,300 --> 00:14:49,680
is a syn flood UDP flood NDP flop and so

311
00:14:44,819 --> 00:14:52,620
on and firewall CPU is so busy dropping

312
00:14:49,680 --> 00:14:54,689
this traffic it is not even able to pass

313
00:14:52,620 --> 00:14:58,139
the geometric quests towards the

314
00:14:54,689 --> 00:15:03,209
backends so backends don't see traffic

315
00:14:58,139 --> 00:15:05,939
at all you see this amount of traffic is

316
00:15:03,209 --> 00:15:06,689
near zero and this is complete disaster

317
00:15:05,939 --> 00:15:09,029
for a user

318
00:15:06,689 --> 00:15:13,019
these are barely able to access the

319
00:15:09,029 --> 00:15:16,649
service this is a mostly outage what do

320
00:15:13,019 --> 00:15:17,839
we do we apply network level anomaly

321
00:15:16,649 --> 00:15:20,519
detection

322
00:15:17,839 --> 00:15:23,699
what happens here so that keeps more

323
00:15:20,519 --> 00:15:25,649
than attack water but now where was if

324
00:15:23,699 --> 00:15:28,199
you has enough power to handle all the

325
00:15:25,649 --> 00:15:29,480
traffic which comes to the firewall so

326
00:15:28,199 --> 00:15:31,219
the backends

327
00:15:29,480 --> 00:15:34,190
handling the same amount of legitimate

328
00:15:31,220 --> 00:15:35,690
traffic as they did before and most

329
00:15:34,190 --> 00:15:38,510
interesting graph on this slide is a

330
00:15:35,690 --> 00:15:40,579
huge user latency graph as you can see

331
00:15:38,510 --> 00:15:42,380
at the beginning of every single

332
00:15:40,579 --> 00:15:45,109
interval there is a small spike in the

333
00:15:42,380 --> 00:15:47,180
utilization this is the only amount of

334
00:15:45,110 --> 00:15:49,880
time which machine learning takes in

335
00:15:47,180 --> 00:15:54,170
order to identify an anomaly and apply

336
00:15:49,880 --> 00:15:57,260
mitigation so few seconds I believe is

337
00:15:54,170 --> 00:16:01,069
unreachable result for a human human

338
00:15:57,260 --> 00:16:02,350
cannot compete ok this is a case we'll

339
00:16:01,070 --> 00:16:04,730
never clear all floods

340
00:16:02,350 --> 00:16:09,290
what happens if application layer

341
00:16:04,730 --> 00:16:13,070
attacks come to the network in this case

342
00:16:09,290 --> 00:16:16,370
amount of traffic is much less than 4

343
00:16:13,070 --> 00:16:21,110
never flood and fire will easily handle

344
00:16:16,370 --> 00:16:24,290
all this traffic but the back end cpu go

345
00:16:21,110 --> 00:16:27,199
crazy they're overloaded and the amount

346
00:16:24,290 --> 00:16:30,949
of requests is much more than we saw

347
00:16:27,199 --> 00:16:33,079
before and this is also disaster for a

348
00:16:30,949 --> 00:16:35,660
user so now latency jumps between 2 and

349
00:16:33,079 --> 00:16:39,050
4 seconds this is an acceptable quality

350
00:16:35,660 --> 00:16:42,139
of service now let's take a look what if

351
00:16:39,050 --> 00:16:46,339
we leave only network layer anomaly

352
00:16:42,139 --> 00:16:49,310
detection on the church in this case

353
00:16:46,339 --> 00:16:54,050
amount of legitimate requests which can

354
00:16:49,310 --> 00:16:57,018
two backends reduces so back and CPU

355
00:16:54,050 --> 00:16:58,819
feels more relaxed and from socket the

356
00:16:57,019 --> 00:17:02,180
rater point of view everything

357
00:16:58,819 --> 00:17:04,809
everything becomes fine but attacker is

358
00:17:02,180 --> 00:17:08,780
also happy and the reason for that is

359
00:17:04,809 --> 00:17:10,760
user traffic is also affected this

360
00:17:08,780 --> 00:17:13,939
happens because on the network level

361
00:17:10,760 --> 00:17:16,250
good packets and bad packets too similar

362
00:17:13,939 --> 00:17:20,360
there is no way to differentiate between

363
00:17:16,250 --> 00:17:22,819
them so that's why network level anomaly

364
00:17:20,359 --> 00:17:26,540
detection generates false positives for

365
00:17:22,819 --> 00:17:29,049
application layer attacks what do we do

366
00:17:26,540 --> 00:17:31,280
in this case in this case we can apply

367
00:17:29,049 --> 00:17:33,320
anomaly detection on the application

368
00:17:31,280 --> 00:17:35,210
layer to use application pillow to

369
00:17:33,320 --> 00:17:38,800
extract predicates and build an anomaly

370
00:17:35,210 --> 00:17:41,410
pattern if we do that

371
00:17:38,800 --> 00:17:45,580
so so that keeps morph in the

372
00:17:41,410 --> 00:17:49,120
application layer attack but the amount

373
00:17:45,580 --> 00:17:50,770
of I mean CPUs sake cycles comes back to

374
00:17:49,120 --> 00:17:53,379
normal pretty quickly just after a few

375
00:17:50,770 --> 00:17:56,710
seconds the same and well about the

376
00:17:53,380 --> 00:18:00,460
about of amount of legitimate requests

377
00:17:56,710 --> 00:18:02,440
and the user latency graph is exactly

378
00:18:00,460 --> 00:18:04,660
the same as we saw for Network level

379
00:18:02,440 --> 00:18:07,270
flus there is a small spike at the

380
00:18:04,660 --> 00:18:09,160
beginning of every interval and it takes

381
00:18:07,270 --> 00:18:11,470
just few seconds for machine learning on

382
00:18:09,160 --> 00:18:12,750
application layer to detect an anomaly

383
00:18:11,470 --> 00:18:16,120
and stop it

384
00:18:12,750 --> 00:18:18,070
excellent so thank you Misha so I just

385
00:18:16,120 --> 00:18:20,830
want to point out to the audience in

386
00:18:18,070 --> 00:18:23,770
somewhat of a more animated fashion is

387
00:18:20,830 --> 00:18:25,480
look attacker attacks I find the

388
00:18:23,770 --> 00:18:27,100
signature attacker attacks I find the

389
00:18:25,480 --> 00:18:29,230
signature hacker attacks I find the

390
00:18:27,100 --> 00:18:34,770
signature morph all you want I'm gonna

391
00:18:29,230 --> 00:18:37,420
catch you right so Misha we now know

392
00:18:34,770 --> 00:18:41,620
that if the re people in the audience

393
00:18:37,420 --> 00:18:45,190
use soda and they can beat soda right

394
00:18:41,620 --> 00:18:48,219
there DDoS defensive mechanisms can beat

395
00:18:45,190 --> 00:18:51,610
so that they're doing well but what what

396
00:18:48,220 --> 00:18:53,590
is one piece of advice that you want to

397
00:18:51,610 --> 00:18:56,229
give to the audience what do you want to

398
00:18:53,590 --> 00:18:59,020
remind them of you know an important

399
00:18:56,230 --> 00:19:04,390
point of course we have more than one

400
00:18:59,020 --> 00:19:07,180
piece of advice so the first one is the

401
00:19:04,390 --> 00:19:11,590
first one so more can do squats are now

402
00:19:07,180 --> 00:19:13,600
the keys protonmail kiss showed us so we

403
00:19:11,590 --> 00:19:16,030
should check our DOS posture against

404
00:19:13,600 --> 00:19:19,659
Morgan those Plus this is only how we

405
00:19:16,030 --> 00:19:23,170
can say we are protected Misha we talked

406
00:19:19,660 --> 00:19:25,330
about layer 3 layer 4 attacks layer 7

407
00:19:23,170 --> 00:19:28,900
attacks getting all which together and

408
00:19:25,330 --> 00:19:32,830
coming at you right so what should we

409
00:19:28,900 --> 00:19:34,750
remember to do in this case right so

410
00:19:32,830 --> 00:19:37,629
anomaly detection mechanism on the

411
00:19:34,750 --> 00:19:39,910
network level is not accurate enough to

412
00:19:37,630 --> 00:19:42,730
stop application layer attacks without

413
00:19:39,910 --> 00:19:45,460
creating false positives so in order to

414
00:19:42,730 --> 00:19:48,460
block anomaly at application layer

415
00:19:45,460 --> 00:19:51,070
attacks you have to use a normal

416
00:19:48,460 --> 00:19:52,210
detection on the application layer so

417
00:19:51,070 --> 00:19:54,570
Misha and now

418
00:19:52,210 --> 00:19:58,600
detection can also cause false positives

419
00:19:54,570 --> 00:20:01,179
what should we do about this issue right

420
00:19:58,600 --> 00:20:03,939
so traffic volume does not always mean

421
00:20:01,180 --> 00:20:06,250
an attack so those devices should only

422
00:20:03,940 --> 00:20:09,850
go mitigate when there is a stress on

423
00:20:06,250 --> 00:20:12,130
your back end so there is one more

424
00:20:09,850 --> 00:20:16,959
mechanisms required to supervise a

425
00:20:12,130 --> 00:20:18,640
normal detection so move it you've been

426
00:20:16,960 --> 00:20:21,760
doing those fighting for for a while

427
00:20:18,640 --> 00:20:23,470
I've been what the best practices you

428
00:20:21,760 --> 00:20:25,629
would like to share with community look

429
00:20:23,470 --> 00:20:27,670
I would like to leave room for questions

430
00:20:25,630 --> 00:20:30,400
but here's what I would want the

431
00:20:27,670 --> 00:20:33,240
audience to just memorize when you think

432
00:20:30,400 --> 00:20:36,640
about DDoS attacks you have to focus on

433
00:20:33,240 --> 00:20:39,130
intelligent mitigation the job of the

434
00:20:36,640 --> 00:20:41,290
DDoS device if you look at the graphic

435
00:20:39,130 --> 00:20:43,750
there red packets are bad the blue

436
00:20:41,290 --> 00:20:46,780
packets are good the job of the DDoS

437
00:20:43,750 --> 00:20:49,150
devices drop the red packets and let the

438
00:20:46,780 --> 00:20:53,110
blue packets go through you cannot just

439
00:20:49,150 --> 00:20:55,300
say I'm going to set a threshold and you

440
00:20:53,110 --> 00:20:57,459
know and and just only allow so many

441
00:20:55,300 --> 00:20:59,800
packets per second because that

442
00:20:57,460 --> 00:21:01,840
mechanism is also going to drop the blue

443
00:20:59,800 --> 00:21:05,230
ones right so you gotta be intelligent

444
00:21:01,840 --> 00:21:08,199
about your mitigation and of course you

445
00:21:05,230 --> 00:21:10,510
see there the t1000 cannot hide the

446
00:21:08,200 --> 00:21:15,460
machine learning mechanisms we can catch

447
00:21:10,510 --> 00:21:19,320
all his forms right but here's if you

448
00:21:15,460 --> 00:21:22,060
can somehow without dropping any packets

449
00:21:19,320 --> 00:21:24,669
drive off the attack that's the best

450
00:21:22,060 --> 00:21:27,040
policy so the first thing we should try

451
00:21:24,670 --> 00:21:29,200
is just tell all the clients that are

452
00:21:27,040 --> 00:21:31,780
coming to your service slow down a

453
00:21:29,200 --> 00:21:34,450
little bit so each user is not going to

454
00:21:31,780 --> 00:21:37,149
feel that but the collective impact of

455
00:21:34,450 --> 00:21:38,830
everybody slowing down could take some

456
00:21:37,150 --> 00:21:41,250
load off on the infrastructure in the

457
00:21:38,830 --> 00:21:43,449
backends not easy to do but

458
00:21:41,250 --> 00:21:46,300
theoretically speaking that's the first

459
00:21:43,450 --> 00:21:48,490
thing we should attempt only after that

460
00:21:46,300 --> 00:21:51,190
fails should be getting to the business

461
00:21:48,490 --> 00:21:54,070
of dropping and when we drop we should

462
00:21:51,190 --> 00:21:57,700
use these very precise signatures that

463
00:21:54,070 --> 00:22:00,879
the machine can figure out so that only

464
00:21:57,700 --> 00:22:02,860
the bad packets are being dropped right

465
00:22:00,880 --> 00:22:04,930
and do it only when you have proof of

466
00:22:02,860 --> 00:22:05,979
harm so that you don't cause false

467
00:22:04,930 --> 00:22:09,220
positives

468
00:22:05,980 --> 00:22:12,100
and if you are still struggling then you

469
00:22:09,220 --> 00:22:14,919
can start doing you know heavier things

470
00:22:12,100 --> 00:22:16,959
like let the humans through drop the

471
00:22:14,919 --> 00:22:19,149
bots but be careful because there's a

472
00:22:16,960 --> 00:22:22,299
lot of legitimate machine to machine

473
00:22:19,149 --> 00:22:24,158
communication nowadays right so if you

474
00:22:22,299 --> 00:22:28,539
if you break that you might break your

475
00:22:24,159 --> 00:22:31,289
end users experience and after that what

476
00:22:28,539 --> 00:22:33,940
you might think of doing is look at

477
00:22:31,289 --> 00:22:36,700
special connections that are indicative

478
00:22:33,940 --> 00:22:38,289
of attack slow connections someone might

479
00:22:36,700 --> 00:22:41,919
be hitting you with a variant of slow

480
00:22:38,289 --> 00:22:44,320
read slow loris etc right or someone

481
00:22:41,919 --> 00:22:46,600
might be hitting your heavy URL the URL

482
00:22:44,320 --> 00:22:50,168
that does a lot of computation in the

483
00:22:46,600 --> 00:22:53,019
back end and when this doesn't work now

484
00:22:50,169 --> 00:22:55,389
you drop the hammer so now you start

485
00:22:53,019 --> 00:22:57,820
doing your rate limiting even this you

486
00:22:55,389 --> 00:23:00,699
have to do carefully if you rate limit

487
00:22:57,820 --> 00:23:04,389
based on source IP the most active

488
00:23:00,700 --> 00:23:06,730
source IP careful it could be a mega

489
00:23:04,389 --> 00:23:10,750
proxy and you might be killing a lot of

490
00:23:06,730 --> 00:23:13,059
good users behind that mega proxy if you

491
00:23:10,750 --> 00:23:15,309
rate limit your most heavily used your i

492
00:23:13,059 --> 00:23:19,840
well that's what people are coming to

493
00:23:15,309 --> 00:23:21,789
you for anyway and finally if you if you

494
00:23:19,840 --> 00:23:23,949
raid limit based on packets per second

495
00:23:21,789 --> 00:23:26,529
it will there's no intelligence there so

496
00:23:23,950 --> 00:23:28,870
really you want to achieve intelligent

497
00:23:26,529 --> 00:23:32,380
mitigation and your strategy should be

498
00:23:28,870 --> 00:23:34,449
something in that order with this i want

499
00:23:32,380 --> 00:23:37,600
to thank people who helped us out mark

500
00:23:34,450 --> 00:23:39,659
Campbell Rachel Sarah and Lydia they

501
00:23:37,600 --> 00:23:43,480
helped us practice and prepare for this

502
00:23:39,659 --> 00:23:45,970
we want to take questions and as we take

503
00:23:43,480 --> 00:23:49,779
questions we want to tell you that you

504
00:23:45,970 --> 00:23:52,870
can download soda and here is sort of

505
00:23:49,779 --> 00:23:55,210
doing its magic you see the soda is

506
00:23:52,870 --> 00:23:58,090
creating the attacks this is a live demo

507
00:23:55,210 --> 00:24:01,240
while we recorded it so it's not live it

508
00:23:58,090 --> 00:24:03,340
was live but we were recording it of war

509
00:24:01,240 --> 00:24:05,380
of soda attacking and the machine

510
00:24:03,340 --> 00:24:07,990
learning catching the attack

511
00:24:05,380 --> 00:24:12,909
so with that questions there are mics at

512
00:24:07,990 --> 00:24:14,860
the edge this is the last session so we

513
00:24:12,909 --> 00:24:17,570
are happy to stay here but we don't want

514
00:24:14,860 --> 00:24:20,399
to keep you from your beer

515
00:24:17,570 --> 00:24:22,409
any questions question yes sir

516
00:24:20,400 --> 00:24:24,450
yeah you guys didn't really discuss like

517
00:24:22,410 --> 00:24:27,300
which machine learning models you use

518
00:24:24,450 --> 00:24:30,390
gas is what you used for speed and if

519
00:24:27,300 --> 00:24:32,040
you'll be open sourcing any of this if

520
00:24:30,390 --> 00:24:33,600
you'll be open-source again in this code

521
00:24:32,040 --> 00:24:37,170
are you gonna hold it back for your f5

522
00:24:33,600 --> 00:24:39,659
products or and how did you come up with

523
00:24:37,170 --> 00:24:41,040
the signatures for the attack yes yes so

524
00:24:39,660 --> 00:24:42,720
the question is we did not really

525
00:24:41,040 --> 00:24:45,450
discuss the machine learning models

526
00:24:42,720 --> 00:24:50,520
which is true but let me give you an

527
00:24:45,450 --> 00:24:51,900
idea of how they might work right so and

528
00:24:50,520 --> 00:24:53,100
we don't want to really talk about

529
00:24:51,900 --> 00:24:57,420
products we just want to talk about

530
00:24:53,100 --> 00:25:00,480
research so the the you can imagine at

531
00:24:57,420 --> 00:25:02,550
layer 3 layer 4 Mitch I mentioned layer

532
00:25:00,480 --> 00:25:05,780
3 layer 4 predicates so you can imagine

533
00:25:02,550 --> 00:25:08,730
you know an IP packet and it has all its

534
00:25:05,780 --> 00:25:11,670
you know headers options source IP DES

535
00:25:08,730 --> 00:25:14,730
type e TTL checksum etc etc in the

536
00:25:11,670 --> 00:25:18,600
payload you have your UDP Datagram in

537
00:25:14,730 --> 00:25:21,780
your TCP data gram and they have their

538
00:25:18,600 --> 00:25:23,879
own fields so every single field that

539
00:25:21,780 --> 00:25:27,290
you can imagine that that's present in

540
00:25:23,880 --> 00:25:30,600
this in this IP packet TCP UDP payload

541
00:25:27,290 --> 00:25:34,139
it has a universe of possible values so

542
00:25:30,600 --> 00:25:36,179
take TTL one to 255 easy one so what we

543
00:25:34,140 --> 00:25:38,970
do is we're looking at all the packets

544
00:25:36,180 --> 00:25:40,980
that are coming in on the fly and we see

545
00:25:38,970 --> 00:25:43,400
how many of them are TTL - how many of

546
00:25:40,980 --> 00:25:47,210
them are TTL 3 so we're building a

547
00:25:43,400 --> 00:25:48,780
frequency distribution a histogram now

548
00:25:47,210 --> 00:25:51,240
TTL is easy

549
00:25:48,780 --> 00:25:53,520
what about source IP so the you you have

550
00:25:51,240 --> 00:25:56,760
a lot of source IPS so we hashed them

551
00:25:53,520 --> 00:25:59,160
into segments and then we build a

552
00:25:56,760 --> 00:26:01,490
histogram against each one how many

553
00:25:59,160 --> 00:26:03,870
packets are hitting which segment right

554
00:26:01,490 --> 00:26:06,180
keep in mind that we don't have the

555
00:26:03,870 --> 00:26:08,820
luxury of storing these packets and then

556
00:26:06,180 --> 00:26:11,490
running models on them so our analysis

557
00:26:08,820 --> 00:26:13,590
is a lot more statistical we have to do

558
00:26:11,490 --> 00:26:16,350
this in situ as packets are flying

559
00:26:13,590 --> 00:26:19,139
through we have to figure out is the

560
00:26:16,350 --> 00:26:21,959
next one which we see good or bad is

561
00:26:19,140 --> 00:26:24,240
that anomaly or not anomaly right so we

562
00:26:21,960 --> 00:26:26,550
build these histograms during the

563
00:26:24,240 --> 00:26:28,700
baselining phase and you need that

564
00:26:26,550 --> 00:26:31,879
second algorithm which is you

565
00:26:28,700 --> 00:26:34,400
implemented using various techniques you

566
00:26:31,880 --> 00:26:37,970
can say I'm gonna monitor my synthetic

567
00:26:34,400 --> 00:26:39,680
clients latency and based on that I'm

568
00:26:37,970 --> 00:26:42,260
going to declare a my under attack or

569
00:26:39,680 --> 00:26:45,200
not you can say I'm gonna monitor on the

570
00:26:42,260 --> 00:26:47,210
DDoS device what the round-trip times

571
00:26:45,200 --> 00:26:49,040
are from the server is the server

572
00:26:47,210 --> 00:26:50,600
slowing down and based on that I'm gonna

573
00:26:49,040 --> 00:26:53,570
declare whether I'm under attack or not

574
00:26:50,600 --> 00:26:56,750
so they're different mechanisms but you

575
00:26:53,570 --> 00:26:58,669
need it because in these statistical

576
00:26:56,750 --> 00:27:00,890
methods you can have false positives you

577
00:26:58,670 --> 00:27:04,780
canyou we will absolutely detect any

578
00:27:00,890 --> 00:27:07,360
change in the current network pattern

579
00:27:04,780 --> 00:27:10,580
compared to what we saw in the past

580
00:27:07,360 --> 00:27:13,879
absolutely we will detect that but is it

581
00:27:10,580 --> 00:27:17,090
a normal change or not you need another

582
00:27:13,880 --> 00:27:21,110
mechanism to inform the anomaly detector

583
00:27:17,090 --> 00:27:25,100
to consider it in anomaly or just keep

584
00:27:21,110 --> 00:27:28,219
learning it so so we use statistical

585
00:27:25,100 --> 00:27:31,730
methods we don't end up using the the

586
00:27:28,220 --> 00:27:33,920
typical models that you run on data that

587
00:27:31,730 --> 00:27:40,640
you have the luxury to store we got to

588
00:27:33,920 --> 00:27:43,100
do this in flight and we're not going to

589
00:27:40,640 --> 00:27:47,450
open-source the statistical methods

590
00:27:43,100 --> 00:27:49,280
there are lots of papers yes they may

591
00:27:47,450 --> 00:27:52,340
show up in products etc but we are

592
00:27:49,280 --> 00:27:56,570
absolutely open sourcing soda so you can

593
00:27:52,340 --> 00:27:59,300
download the kit and also our friend Ken

594
00:27:56,570 --> 00:28:01,870
is busily writing down as we speak here

595
00:27:59,300 --> 00:28:05,090
the instructions for putting together

596
00:28:01,870 --> 00:28:08,389
the the rest of the lab environment so

597
00:28:05,090 --> 00:28:10,490
you can test your DDoS mechanism

598
00:28:08,390 --> 00:28:12,560
whatever it is in your case you will

599
00:28:10,490 --> 00:28:15,320
still have the clients instrumented with

600
00:28:12,560 --> 00:28:18,110
Telegraph servers the pfsense firewalls

601
00:28:15,320 --> 00:28:20,990
take your own DDoS device in your own

602
00:28:18,110 --> 00:28:23,600
DDoS mechanism and test so all that

603
00:28:20,990 --> 00:28:27,500
we're going to open source any other

604
00:28:23,600 --> 00:28:29,659
questions I have one yes so we've been

605
00:28:27,500 --> 00:28:33,050
talking a lot about layer 7 or

606
00:28:29,660 --> 00:28:35,180
application attacks and early on there

607
00:28:33,050 --> 00:28:38,210
was discussion about volumetric attacks

608
00:28:35,180 --> 00:28:39,490
which are typically asymmetrical so my

609
00:28:38,210 --> 00:28:43,330
question is is where

610
00:28:39,490 --> 00:28:47,409
would the mitigation actually be placed

611
00:28:43,330 --> 00:28:50,830
in the network infrastructure yeah so

612
00:28:47,409 --> 00:28:53,860
that's a good question so and it's it's

613
00:28:50,830 --> 00:28:55,240
a I can go on and on answering that

614
00:28:53,860 --> 00:29:01,559
question because you bring up several

615
00:28:55,240 --> 00:29:04,630
points right so if I'm seeing attacks

616
00:29:01,559 --> 00:29:07,500
that are stateful right so I'm seeing a

617
00:29:04,630 --> 00:29:10,450
request I'm seeing a response going back

618
00:29:07,500 --> 00:29:14,490
it's useful for me to see both the

619
00:29:10,450 --> 00:29:17,770
requested the response so that my my

620
00:29:14,490 --> 00:29:20,289
mechanisms can be precise in discovering

621
00:29:17,770 --> 00:29:22,500
anomalies and my mechanisms can be

622
00:29:20,289 --> 00:29:25,840
precise and discovering attack condition

623
00:29:22,500 --> 00:29:28,779
you can do that at layer seven and you

624
00:29:25,840 --> 00:29:31,870
can for HTTP and you can also do that at

625
00:29:28,779 --> 00:29:34,960
layer 3 layer 4 if you know if you

626
00:29:31,870 --> 00:29:36,330
cannot see the HTTP traffic if all

627
00:29:34,960 --> 00:29:41,770
you're allowed to see is layer 3 layer 4

628
00:29:36,330 --> 00:29:44,110
now typically if if the DDoS defensive

629
00:29:41,770 --> 00:29:46,690
mechanism is placed at the edge of the

630
00:29:44,110 --> 00:29:49,029
network you only see the layer 3 layer 4

631
00:29:46,690 --> 00:29:52,330
predicates you don't end up seeing the

632
00:29:49,029 --> 00:29:55,330
layer 7 predicates and if the DDoS the

633
00:29:52,330 --> 00:29:58,000
mechanism is also placed near the

634
00:29:55,330 --> 00:29:59,678
servers in often at the data centers you

635
00:29:58,000 --> 00:30:01,840
know there's not a lot of depth in the

636
00:29:59,679 --> 00:30:03,990
network you come to the edge and you go

637
00:30:01,840 --> 00:30:07,750
straight to your application servers

638
00:30:03,990 --> 00:30:11,140
then you will end up seeing the layer 7

639
00:30:07,750 --> 00:30:14,860
predicates if the traffic is asymmetric

640
00:30:11,140 --> 00:30:17,799
the mechanisms will still work but the

641
00:30:14,860 --> 00:30:20,860
precision of the signatures will go down

642
00:30:17,799 --> 00:30:22,480
a little bit I want to show you you know

643
00:30:20,860 --> 00:30:24,520
that's an example of a signature that's

644
00:30:22,480 --> 00:30:26,620
a layer 3 layer 4 signature that you're

645
00:30:24,520 --> 00:30:29,139
seeing there so you see it we're looking

646
00:30:26,620 --> 00:30:32,168
at the IP header size flags proto source

647
00:30:29,140 --> 00:30:34,990
IP TCP flags DES type e et cetera and

648
00:30:32,169 --> 00:30:37,570
here's an example of a layer 7 signature

649
00:30:34,990 --> 00:30:43,230
right so you you're seeing now you're

650
00:30:37,570 --> 00:30:43,230
seeing HTTP payload level information so

651
00:30:44,309 --> 00:30:50,918
asymmetry makes the fidelity of the

652
00:30:48,039 --> 00:30:53,110
signature a little bit less strong but

653
00:30:50,919 --> 00:30:55,690
the mechanism will still work

654
00:30:53,110 --> 00:30:58,330
right the maths but this this

655
00:30:55,690 --> 00:31:03,430
statistical model doesn't change and

656
00:30:58,330 --> 00:31:05,919
typically you place the DDoS defense you

657
00:31:03,430 --> 00:31:08,350
know if you're an enterprise you get the

658
00:31:05,920 --> 00:31:10,390
ISP routers giving you a handoff to the

659
00:31:08,350 --> 00:31:12,639
enterprise routers which then go to your

660
00:31:10,390 --> 00:31:14,530
firewall you can be in that in between

661
00:31:12,640 --> 00:31:17,320
the ISP routers and the enterprise

662
00:31:14,530 --> 00:31:19,270
router so the edge of the network or you

663
00:31:17,320 --> 00:31:21,040
could go just in front of the firewall

664
00:31:19,270 --> 00:31:22,870
which is what I'm starting to recommend

665
00:31:21,040 --> 00:31:24,460
because if you're just in front of the

666
00:31:22,870 --> 00:31:26,949
firewall between the enterprise router

667
00:31:24,460 --> 00:31:30,190
in the firewall you are more likely to

668
00:31:26,950 --> 00:31:32,080
see both the forward flow in the reverse

669
00:31:30,190 --> 00:31:35,680
flow of the session because firewalls

670
00:31:32,080 --> 00:31:38,139
are often stateful yeah that makes sense

671
00:31:35,680 --> 00:31:40,150
for the application layer attacks right

672
00:31:38,140 --> 00:31:41,830
can you hear me yeah it makes sense for

673
00:31:40,150 --> 00:31:43,930
the application layer attacks to be

674
00:31:41,830 --> 00:31:46,419
close to the servers and in fact in

675
00:31:43,930 --> 00:31:51,000
front of the firewall but for volumetric

676
00:31:46,420 --> 00:31:53,620
attacks you'd still be overwhelming your

677
00:31:51,000 --> 00:31:56,260
last mile from your provider edge or

678
00:31:53,620 --> 00:31:58,810
router yeah yeah look if the pipe is

679
00:31:56,260 --> 00:32:00,670
completely filled right if it's a

680
00:31:58,810 --> 00:32:02,320
volumetric and so volumetric attack what

681
00:32:00,670 --> 00:32:05,460
does it contain it contains a whole

682
00:32:02,320 --> 00:32:10,179
bunch of bad packets right and

683
00:32:05,460 --> 00:32:15,190
potentially you're really truly clarify

684
00:32:10,180 --> 00:32:18,210
you can have a scale a volume of the

685
00:32:15,190 --> 00:32:21,880
volumetric attack which is so high that

686
00:32:18,210 --> 00:32:23,320
the pipe that that you have from the

687
00:32:21,880 --> 00:32:26,440
service provider just getting billed

688
00:32:23,320 --> 00:32:28,060
right and and no no I can't fit another

689
00:32:26,440 --> 00:32:30,640
packet in there because the pipe is

690
00:32:28,060 --> 00:32:33,129
built right so now my details device

691
00:32:30,640 --> 00:32:34,810
which is sitting right at the edge what

692
00:32:33,130 --> 00:32:38,380
it's going to do is it's going to stop

693
00:32:34,810 --> 00:32:40,929
this traffic from making it into the the

694
00:32:38,380 --> 00:32:43,930
enterprise but it can't do anything

695
00:32:40,930 --> 00:32:46,120
about the pipe the pipe comes before the

696
00:32:43,930 --> 00:32:48,940
DDoS device so in this case what you

697
00:32:46,120 --> 00:32:52,750
have to do is call a cloud scrubber and

698
00:32:48,940 --> 00:32:55,660
have the ISP transfer your traffic to

699
00:32:52,750 --> 00:32:58,270
the cloud scrubber so that you get

700
00:32:55,660 --> 00:33:01,360
appropriate amount of volume that your

701
00:32:58,270 --> 00:33:04,600
pipe can handle now if the case is

702
00:33:01,360 --> 00:33:07,000
slightly different where the pipe is not

703
00:33:04,600 --> 00:33:10,209
completely filled so your pipe gets

704
00:33:07,000 --> 00:33:12,670
we'll take another few gigs but the

705
00:33:10,210 --> 00:33:15,640
volume of traffic is much larger than

706
00:33:12,670 --> 00:33:18,760
normal normally what you used to see I

707
00:33:15,640 --> 00:33:21,280
can handle that on premises now this

708
00:33:18,760 --> 00:33:23,940
device the one of the examples which I

709
00:33:21,280 --> 00:33:27,850
showed you is the layer three layer four

710
00:33:23,940 --> 00:33:30,220
signatures so in that volume I don't

711
00:33:27,850 --> 00:33:33,909
need to look inside the payload I will

712
00:33:30,220 --> 00:33:35,620
figure out what the bad packets are just

713
00:33:33,910 --> 00:33:39,520
by looking at the layer 3 layer 4

714
00:33:35,620 --> 00:33:40,479
predicates thank you yeah but thank you

715
00:33:39,520 --> 00:33:44,260
for asking the question

716
00:33:40,480 --> 00:33:45,850
and I think oh there's more questions

717
00:33:44,260 --> 00:33:47,530
yeah hi

718
00:33:45,850 --> 00:33:50,770
so the story that you guys have pulled

719
00:33:47,530 --> 00:33:53,110
here is really compelling I've heard it

720
00:33:50,770 --> 00:33:56,250
from some other from some some DDoS

721
00:33:53,110 --> 00:33:59,469
defense appliance vendors have you guys

722
00:33:56,250 --> 00:34:01,450
done any kind of bake-off in your lab to

723
00:33:59,470 --> 00:34:03,490
look at performance for your solution

724
00:34:01,450 --> 00:34:04,750
versus their solution I mean I I know

725
00:34:03,490 --> 00:34:06,160
you guys are still in sort of research

726
00:34:04,750 --> 00:34:08,199
and exploration and that sort of thing

727
00:34:06,160 --> 00:34:09,700
so but just curious to hear if there's

728
00:34:08,199 --> 00:34:12,129
any anecdotes about how you're doing

729
00:34:09,699 --> 00:34:15,279
versus what you might see on like a

730
00:34:12,129 --> 00:34:16,918
defense Pro for exam yeah yeah no we

731
00:34:15,280 --> 00:34:19,720
haven't done any bake-offs

732
00:34:16,918 --> 00:34:22,299
but you know you now have soda you do

733
00:34:19,719 --> 00:34:25,029
the bake-off right you do the bear you

734
00:34:22,300 --> 00:34:28,030
we'll help you set up soda it's for it

735
00:34:25,030 --> 00:34:32,530
this is you know look we don't care what

736
00:34:28,030 --> 00:34:39,610
you use protonmail got attacked and we

737
00:34:32,530 --> 00:34:41,560
got really charged right and we want the

738
00:34:39,610 --> 00:34:44,200
community to be able to defend against

739
00:34:41,560 --> 00:34:45,759
these types of attacks and you know the

740
00:34:44,199 --> 00:34:47,589
the strategies that I showed you

741
00:34:45,760 --> 00:34:50,290
regarding intelligent mitigation they

742
00:34:47,590 --> 00:34:52,929
don't change whatever bender you use you

743
00:34:50,290 --> 00:34:56,340
write your own code that's fine too but

744
00:34:52,929 --> 00:35:00,040
you know focus on intelligent mitigation

745
00:34:56,340 --> 00:35:01,540
a/b tests your posture and and we

746
00:35:00,040 --> 00:35:03,810
understand that testing your posture is

747
00:35:01,540 --> 00:35:06,550
difficult therefore we give you the kit

748
00:35:03,810 --> 00:35:08,950
use the kit test your posture in a safe

749
00:35:06,550 --> 00:35:10,590
environment and then you know if we can

750
00:35:08,950 --> 00:35:13,419
help you happy to help you as

751
00:35:10,590 --> 00:35:15,070
researchers right and if you want to

752
00:35:13,420 --> 00:35:16,930
call the vendors go ahead and call them

753
00:35:15,070 --> 00:35:20,470
but if you can't want to call me Kyle

754
00:35:16,930 --> 00:35:21,118
and with it you know let's let's flash

755
00:35:20,470 --> 00:35:27,729
our

756
00:35:21,119 --> 00:35:30,969
call us there oh yeah it's my f5 email

757
00:35:27,729 --> 00:35:32,618
so he doesn't get help right he doesn't

758
00:35:30,969 --> 00:35:34,569
get up sounds good thanks guys I'd

759
00:35:32,619 --> 00:35:36,700
probably let me all sad so the idea

760
00:35:34,569 --> 00:35:39,430
behind open source in the solar that we

761
00:35:36,700 --> 00:35:42,968
will have a tool the standard tool to

762
00:35:39,430 --> 00:35:45,940
test the dust protection so everyone

763
00:35:42,969 --> 00:35:47,829
will do will do the same tests and this

764
00:35:45,940 --> 00:35:51,219
is how we can compare who is doing good

765
00:35:47,829 --> 00:35:53,680
who is doing back let's lay it behind

766
00:35:51,219 --> 00:35:56,499
the soda sounds good thank you guys

767
00:35:53,680 --> 00:35:58,808
other questions I think that we're

768
00:35:56,499 --> 00:36:00,729
supposed to yeah we're way over there's

769
00:35:58,809 --> 00:36:02,440
gonna be a rap room over there for

770
00:36:00,729 --> 00:36:04,109
additional questions yeah we're gonna go

771
00:36:02,440 --> 00:36:07,989
to the rap room and drink of water and

772
00:36:04,109 --> 00:36:10,119
take a sigh of relief and so you know

773
00:36:07,989 --> 00:36:11,530
happy to answer questions there thank

774
00:36:10,119 --> 00:36:17,249
you and thank you for letting us go

775
00:36:11,530 --> 00:36:17,249
[Applause]

