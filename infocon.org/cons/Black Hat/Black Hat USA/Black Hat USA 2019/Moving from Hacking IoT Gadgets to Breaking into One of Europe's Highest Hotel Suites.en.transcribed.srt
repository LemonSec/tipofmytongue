1
00:00:00,060 --> 00:00:09,120
welcome to the last talk of the day in

2
00:00:03,710 --> 00:00:11,670
Islander ofg you are about to see and

3
00:00:09,120 --> 00:00:14,370
listen to moving from hacking IOT

4
00:00:11,670 --> 00:00:17,730
gadgets to breaking into one of Europe's

5
00:00:14,370 --> 00:00:21,869
highest hotel suites with Ray and

6
00:00:17,730 --> 00:00:24,000
Michael Hubler if you have questions

7
00:00:21,869 --> 00:00:26,670
afterwards they do have some time for

8
00:00:24,000 --> 00:00:29,519
some Q&A there are three microphones

9
00:00:26,670 --> 00:00:31,740
throughout the room so we are recording

10
00:00:29,519 --> 00:00:33,629
this please step up to the microphone so

11
00:00:31,740 --> 00:00:38,809
that everyone can hear your question and

12
00:00:33,630 --> 00:00:38,809
it can be recorded thank you very much

13
00:00:46,270 --> 00:00:52,090
hi okay so welcome to the ending of this

14
00:00:50,110 --> 00:00:55,210
conference I hope you enjoyed blackhead

15
00:00:52,090 --> 00:00:57,790
so far as much admitted and are ready

16
00:00:55,210 --> 00:01:01,030
for the grand finale our presentation

17
00:00:57,790 --> 00:01:03,250
about hacking IOT gadgets up to hotel

18
00:01:01,030 --> 00:01:06,040
suites so who are we

19
00:01:03,250 --> 00:01:07,930
I'm ray an active member of the German

20
00:01:06,040 --> 00:01:10,750
heckler Association Chaos Computer Club

21
00:01:07,930 --> 00:01:12,550
for like 20 years or so I've been

22
00:01:10,750 --> 00:01:15,520
researching lock-picking I mean

23
00:01:12,550 --> 00:01:18,130
technology enthusiasts and by work I

24
00:01:15,520 --> 00:01:19,780
happen to sleep a lot in hotels so

25
00:01:18,130 --> 00:01:24,820
that's what brought me into researching

26
00:01:19,780 --> 00:01:27,400
this topic hello

27
00:01:24,820 --> 00:01:32,380
I basically have been playing with locks

28
00:01:27,400 --> 00:01:33,940
all my years all my life about 40 years

29
00:01:32,380 --> 00:01:36,520
ago they were on mechanicals of course

30
00:01:33,940 --> 00:01:38,520
and I got into lock-picking and

31
00:01:36,520 --> 00:01:41,619
competitive lock-picking and lot sports

32
00:01:38,520 --> 00:01:43,210
but then electronic lock started I

33
00:01:41,619 --> 00:01:45,250
became an electronic engineer I

34
00:01:43,210 --> 00:01:47,320
continued to do that a few years ago

35
00:01:45,250 --> 00:01:50,170
Bluetooth Low Energy came in to all the

36
00:01:47,320 --> 00:01:53,220
locks and that we looked into these and

37
00:01:50,170 --> 00:01:53,220
that's what led to this presentation

38
00:01:54,060 --> 00:01:58,590
okay so what we're going to talk about

39
00:01:56,619 --> 00:02:01,060
we're going to talk about smart devices

40
00:01:58,590 --> 00:02:03,009
so the devices using Bluetooth Low

41
00:02:01,060 --> 00:02:05,560
Energy connected usually to a smart

42
00:02:03,009 --> 00:02:07,780
phone and of course you will learn how

43
00:02:05,560 --> 00:02:09,820
to analyze and probably hack cell

44
00:02:07,780 --> 00:02:12,760
systems or if you're on the other side

45
00:02:09,820 --> 00:02:15,220
of this business how to improve lease or

46
00:02:12,760 --> 00:02:19,840
build better ones and of course we show

47
00:02:15,220 --> 00:02:21,550
how we applied those methods to various

48
00:02:19,840 --> 00:02:24,190
products and the vulnerabilities we

49
00:02:21,550 --> 00:02:25,960
found in that from cheap padlocks to

50
00:02:24,190 --> 00:02:28,569
hotel door systems out of curiosity

51
00:02:25,960 --> 00:02:30,520
array of hands who of you has used the

52
00:02:28,569 --> 00:02:34,839
mobile key system offered here in the

53
00:02:30,520 --> 00:02:36,700
Mandalay Bay Hotel ok so I see you

54
00:02:34,840 --> 00:02:38,980
wanted to free first this presentation

55
00:02:36,700 --> 00:02:41,380
which is very good but to make sure to

56
00:02:38,980 --> 00:02:44,519
clear the Mandalay if not see hotel we

57
00:02:41,380 --> 00:02:48,519
successfully attacked so you might well

58
00:02:44,520 --> 00:02:51,580
have good we're using it so the agenda

59
00:02:48,520 --> 00:02:54,700
today is bluetooth LE eco system so

60
00:02:51,580 --> 00:02:57,280
what's in such a system involved because

61
00:02:54,700 --> 00:03:00,429
it's hot at reduction to bill itself

62
00:02:57,280 --> 00:03:03,490
how to analyze such ble systems then

63
00:03:00,430 --> 00:03:05,950
Asset tell you of the vulnerabilities we

64
00:03:03,490 --> 00:03:08,650
found in our prior work and then what we

65
00:03:05,950 --> 00:03:10,709
recently searched in billy hotel keys

66
00:03:08,650 --> 00:03:13,020
and the one system that we broke and

67
00:03:10,709 --> 00:03:14,980
also talked a little about the

68
00:03:13,020 --> 00:03:16,989
responsibilities close the process we

69
00:03:14,980 --> 00:03:20,200
had this avenger and the challenges

70
00:03:16,989 --> 00:03:22,959
involved the such disclosure in a real

71
00:03:20,200 --> 00:03:26,619
life systems as has real impact in the

72
00:03:22,959 --> 00:03:29,170
real world so as a billy ecosystem what

73
00:03:26,620 --> 00:03:31,540
you usually have our examples are mostly

74
00:03:29,170 --> 00:03:34,480
locked so we have a smart lock or

75
00:03:31,540 --> 00:03:37,120
so-called smart lock connecting using

76
00:03:34,480 --> 00:03:39,250
billy to a smartphone app which is

77
00:03:37,120 --> 00:03:42,280
connecting over the internet to a

78
00:03:39,250 --> 00:03:44,170
back-end API servers so if you have such

79
00:03:42,280 --> 00:03:46,720
an ecosystem there's a lot of attack

80
00:03:44,170 --> 00:03:49,869
vectors one on this side of the

81
00:03:46,720 --> 00:03:51,880
electronic log you can read out probably

82
00:03:49,870 --> 00:03:54,280
firmware or other secrets from the chip

83
00:03:51,880 --> 00:03:57,700
you have side channel attacks like power

84
00:03:54,280 --> 00:03:59,560
attacks to get out keys you can insert

85
00:03:57,700 --> 00:04:02,140
the wires into the device and get to

86
00:03:59,560 --> 00:04:04,360
debug ports power a motor activated some

87
00:04:02,140 --> 00:04:06,730
way in a way that wasn't intended and

88
00:04:04,360 --> 00:04:10,810
also the mechanical attacks like

89
00:04:06,730 --> 00:04:13,750
vibration or hammering to it or magnets

90
00:04:10,810 --> 00:04:16,478
who manipulates interactors to defeat

91
00:04:13,750 --> 00:04:18,668
the lock on a mechanical array on the

92
00:04:16,478 --> 00:04:19,839
smartphone of course things like malware

93
00:04:18,668 --> 00:04:23,620
stealing secrets

94
00:04:19,839 --> 00:04:25,179
so probably don't use a mobile phone he

95
00:04:23,620 --> 00:04:27,850
if you have malware on your phone and

96
00:04:25,180 --> 00:04:29,919
there's also possibilities to relay

97
00:04:27,850 --> 00:04:31,750
which is called distance short so you're

98
00:04:29,919 --> 00:04:33,700
not at your device but somebody relays

99
00:04:31,750 --> 00:04:36,220
the data and still uses your phone to

100
00:04:33,700 --> 00:04:37,750
open your device then there's the

101
00:04:36,220 --> 00:04:39,700
internet and as we all know this

102
00:04:37,750 --> 00:04:42,070
back-end web services they have

103
00:04:39,700 --> 00:04:44,710
vulnerabilities so this is not the main

104
00:04:42,070 --> 00:04:46,750
focus on our talk but they have been

105
00:04:44,710 --> 00:04:49,359
multiple found in this field or server

106
00:04:46,750 --> 00:04:51,280
systems had flaws and the backend for

107
00:04:49,360 --> 00:04:53,890
will be looking at first is the

108
00:04:51,280 --> 00:04:56,200
connections involved so between the lock

109
00:04:53,890 --> 00:04:58,330
and the smartphone and between the

110
00:04:56,200 --> 00:05:00,550
smartphone and the Internet there are

111
00:04:58,330 --> 00:05:02,800
connections where you can sniff the data

112
00:05:00,550 --> 00:05:05,080
you can man in the middle and you can

113
00:05:02,800 --> 00:05:07,450
impersonate one of the two sides if

114
00:05:05,080 --> 00:05:09,430
there's no verification so altogether

115
00:05:07,450 --> 00:05:11,128
there's quite a lot of attack vectors

116
00:05:09,430 --> 00:05:13,770
you will learn about

117
00:05:11,129 --> 00:05:15,989
today but to understand that first

118
00:05:13,770 --> 00:05:18,529
introduction to Bill II so that the link

119
00:05:15,989 --> 00:05:22,018
between the lock and the smartphone app

120
00:05:18,529 --> 00:05:23,639
so bill is Bluetooth Low Energy it was

121
00:05:22,019 --> 00:05:25,830
designed as a cheap low-power

122
00:05:23,639 --> 00:05:27,479
alternative to classical Bluetooth so

123
00:05:25,830 --> 00:05:29,909
that things that run on a battery can

124
00:05:27,479 --> 00:05:32,519
used for a longer time it is part of the

125
00:05:29,909 --> 00:05:34,469
BT for the DOE specification so it has

126
00:05:32,519 --> 00:05:36,119
been out for quite a while already and

127
00:05:34,469 --> 00:05:37,889
it's quite different from classical

128
00:05:36,119 --> 00:05:41,369
Bluetooth so if you know that some

129
00:05:37,889 --> 00:05:44,369
things may be different it's mainly used

130
00:05:41,369 --> 00:05:46,199
for these so-called IOT devices those

131
00:05:44,369 --> 00:05:48,059
are usually not in some cell phones

132
00:05:46,199 --> 00:05:50,490
internet but using B and E connect to

133
00:05:48,059 --> 00:05:51,990
something that is online so it's

134
00:05:50,490 --> 00:05:54,479
communication between the device and

135
00:05:51,990 --> 00:05:56,219
your smartphone and there's lots of

136
00:05:54,479 --> 00:05:59,039
things like locks what we talked about

137
00:05:56,219 --> 00:06:01,069
but also light bulbs even sex toys heart

138
00:05:59,039 --> 00:06:04,610
rate sensors all of these things

139
00:06:01,069 --> 00:06:07,169
connecting using B and E to a smartphone

140
00:06:04,610 --> 00:06:08,519
so what's the security of groups of low

141
00:06:07,169 --> 00:06:11,579
energies there has been a very good

142
00:06:08,519 --> 00:06:13,889
presentation already in 2013 on the good

143
00:06:11,579 --> 00:06:16,169
conference this low energy comes low

144
00:06:13,889 --> 00:06:18,360
security and what the basically showed

145
00:06:16,169 --> 00:06:21,240
is that it's very easy to listen to

146
00:06:18,360 --> 00:06:23,279
build connections and we somehow have

147
00:06:21,240 --> 00:06:24,899
sometimes the impression not everybody

148
00:06:23,279 --> 00:06:27,779
implementing this stuff is aware of that

149
00:06:24,899 --> 00:06:30,119
there are secure options to make secure

150
00:06:27,779 --> 00:06:32,189
Billy communications like out-of-band

151
00:06:30,119 --> 00:06:34,169
he pairing where you have to provide a

152
00:06:32,189 --> 00:06:36,809
key on both devices in an other manner

153
00:06:34,169 --> 00:06:39,389
or for point to elliptic curve

154
00:06:36,809 --> 00:06:41,550
cryptography but those are very uncommon

155
00:06:39,389 --> 00:06:44,579
ly used in those devices for various

156
00:06:41,550 --> 00:06:46,919
reasons so what you'll usually find is

157
00:06:44,579 --> 00:06:49,379
an unencrypted link layer and the

158
00:06:46,919 --> 00:06:52,019
application layer has to make sure to

159
00:06:49,379 --> 00:06:53,999
provide the security and if that doesn't

160
00:06:52,019 --> 00:06:57,419
work you find the things that we are

161
00:06:53,999 --> 00:07:00,689
going to talk about so how actually to

162
00:06:57,419 --> 00:07:02,429
analyze this ely layer if you want to

163
00:07:00,689 --> 00:07:04,019
analyze an app you're doing it usually

164
00:07:02,429 --> 00:07:05,938
on your own device so is there you have

165
00:07:04,019 --> 00:07:08,369
control over the data going in and out

166
00:07:05,939 --> 00:07:10,309
so the easiest way is on an android

167
00:07:08,369 --> 00:07:13,259
phone to enable the debug mode and

168
00:07:10,309 --> 00:07:15,779
activate the so-called HCI snoop lock

169
00:07:13,259 --> 00:07:18,209
that makes your phone record all the

170
00:07:15,779 --> 00:07:20,308
data coming in and out on real e so you

171
00:07:18,209 --> 00:07:23,529
can later analyze it the same as

172
00:07:20,309 --> 00:07:24,909
possible on iOS so you install the F

173
00:07:23,529 --> 00:07:26,379
Bluetooth debug certificate you can

174
00:07:24,909 --> 00:07:29,139
download it from Apple and for a few

175
00:07:26,379 --> 00:07:31,209
days you have like a debug functionality

176
00:07:29,139 --> 00:07:34,359
giving you the ability to dump the data

177
00:07:31,209 --> 00:07:36,099
your own communicated verbally it's a

178
00:07:34,359 --> 00:07:37,269
little more complicated way so we would

179
00:07:36,099 --> 00:07:41,529
recommend if you have an Android phone

180
00:07:37,269 --> 00:07:43,479
you can use for try this first so if you

181
00:07:41,529 --> 00:07:47,558
have done that just use the app as

182
00:07:43,479 --> 00:07:50,289
normal what we have found out useful is

183
00:07:47,559 --> 00:07:52,269
to make timestamp so note down at this

184
00:07:50,289 --> 00:07:54,429
point in time I open the lock at this

185
00:07:52,269 --> 00:07:56,829
point of time that and that happened so

186
00:07:54,429 --> 00:08:00,159
later if we analyze your data you know

187
00:07:56,829 --> 00:08:02,379
what what we what was which action then

188
00:08:00,159 --> 00:08:04,479
download the lock from the phone and you

189
00:08:02,379 --> 00:08:06,759
can analyze it with very common analyzer

190
00:08:04,479 --> 00:08:09,068
tool like for example Wireshark it's a

191
00:08:06,759 --> 00:08:10,629
pcap file so I'm not sure if everybody

192
00:08:09,069 --> 00:08:12,939
here knows why a sharper to the network

193
00:08:10,629 --> 00:08:14,409
and others tool and it gives you a ways

194
00:08:12,939 --> 00:08:15,999
to look into such a dump

195
00:08:14,409 --> 00:08:18,339
so you see here it's a search

196
00:08:15,999 --> 00:08:20,439
communication is a destination in this

197
00:08:18,339 --> 00:08:22,509
way local house always is your phone and

198
00:08:20,439 --> 00:08:24,909
the other thing is here in this case and

199
00:08:22,509 --> 00:08:27,729
Texas Instruments device so an IOT

200
00:08:24,909 --> 00:08:29,769
device using nti chip it also will

201
00:08:27,729 --> 00:08:31,479
decode the Bluetooth protocol

202
00:08:29,769 --> 00:08:34,000
information for you so various shark is

203
00:08:31,479 --> 00:08:35,558
aware of ble and knows which kind of

204
00:08:34,000 --> 00:08:37,299
packets that are and will show you what

205
00:08:35,558 --> 00:08:38,919
kind of package you're looking at you

206
00:08:37,299 --> 00:08:41,019
usually will at the filter to find the

207
00:08:38,919 --> 00:08:42,639
patterns you want to look at mostly it's

208
00:08:41,019 --> 00:08:44,949
writing or reading from so called

209
00:08:42,639 --> 00:08:47,350
handles and at the bottom of here you

210
00:08:44,949 --> 00:08:48,790
see the value that is actually the date

211
00:08:47,350 --> 00:08:50,290
have written and most of the things

212
00:08:48,790 --> 00:08:52,990
you're looking for so you're trying to

213
00:08:50,290 --> 00:08:55,029
look into the data so this is if you

214
00:08:52,990 --> 00:08:57,370
want to analyze a protocol for attacking

215
00:08:55,029 --> 00:09:00,399
a real system you have to sniff the bill

216
00:08:57,370 --> 00:09:03,670
from the air so there's basically three

217
00:09:00,399 --> 00:09:05,620
channels device advertisers on and you

218
00:09:03,670 --> 00:09:08,079
have to listen to the right one to catch

219
00:09:05,620 --> 00:09:10,179
a connection but those cheap sniffers

220
00:09:08,079 --> 00:09:12,339
who can do that or listen to touch a

221
00:09:10,179 --> 00:09:14,019
channel and get your connection the

222
00:09:12,339 --> 00:09:16,540
classical tools for that are the other

223
00:09:14,019 --> 00:09:18,189
food bluefruit le sniffer or the uber

224
00:09:16,540 --> 00:09:20,230
tooth one there's lots of presentations

225
00:09:18,189 --> 00:09:22,389
about these they can easily bought like

226
00:09:20,230 --> 00:09:25,089
on every online shop you'll find in this

227
00:09:22,389 --> 00:09:26,949
field and they support live feed in to

228
00:09:25,089 --> 00:09:28,779
Wireshark so like you have Wireshark

229
00:09:26,949 --> 00:09:31,120
running on Ethernet you then have by a

230
00:09:28,779 --> 00:09:32,860
shark running on a bill a link so

231
00:09:31,120 --> 00:09:35,350
disadvantage of those devices is they

232
00:09:32,860 --> 00:09:36,520
sniff only one channel at a time so if

233
00:09:35,350 --> 00:09:38,730
you device pops

234
00:09:36,520 --> 00:09:40,930
sequence you don't know it works

235
00:09:38,730 --> 00:09:43,180
approximately a short of the time so

236
00:09:40,930 --> 00:09:45,849
it's okay for proof of concept but it's

237
00:09:43,180 --> 00:09:48,459
not reliable for a real-life attack so

238
00:09:45,850 --> 00:09:50,170
our favorite tool is the called little

239
00:09:48,460 --> 00:09:52,810
Jack by Damien cock Willis has been

240
00:09:50,170 --> 00:09:55,030
released at black addressing and it

241
00:09:52,810 --> 00:09:57,010
supports a firmware for cheap devices

242
00:09:55,030 --> 00:09:59,709
you can buy like the BBC micro bit death

243
00:09:57,010 --> 00:10:02,500
port you can buy for $15 from Fry's or

244
00:09:59,710 --> 00:10:04,330
whatever we only 400 the other food

245
00:10:02,500 --> 00:10:05,410
sniffers so your flash firmware or

246
00:10:04,330 --> 00:10:07,570
actually the tool will flash the

247
00:10:05,410 --> 00:10:10,870
firmware for you and then you can use

248
00:10:07,570 --> 00:10:12,520
three devices at a time and watch them

249
00:10:10,870 --> 00:10:14,440
in parallel and it's much more than

250
00:10:12,520 --> 00:10:16,569
sniffing the options are men the middle

251
00:10:14,440 --> 00:10:19,120
and lots more so if you build such a

252
00:10:16,570 --> 00:10:21,880
setup I did it by putting together a few

253
00:10:19,120 --> 00:10:24,040
creative comments some duct tape so that

254
00:10:21,880 --> 00:10:27,070
was my first working sniffing setup

255
00:10:24,040 --> 00:10:29,560
Michaels and might a little nicer set up

256
00:10:27,070 --> 00:10:30,790
with a Raspberry Pi so that's a compact

257
00:10:29,560 --> 00:10:33,670
set up running on the battery pack

258
00:10:30,790 --> 00:10:35,589
sniffing Billy on all three channels you

259
00:10:33,670 --> 00:10:37,270
would probably even be able to fit

260
00:10:35,590 --> 00:10:40,720
through a smoke detector or deposited

261
00:10:37,270 --> 00:10:42,400
somewhere hidden to record data so

262
00:10:40,720 --> 00:10:44,850
that's how to get the data from the

263
00:10:42,400 --> 00:10:47,439
gling between the device and the phone

264
00:10:44,850 --> 00:10:51,120
now we also have to look at the link

265
00:10:47,440 --> 00:10:56,920
between the phone and the back end and

266
00:10:51,120 --> 00:10:59,530
this is usually HTTP or HTTPS only very

267
00:10:56,920 --> 00:11:01,180
few apps today use HTTP we actually

268
00:10:59,530 --> 00:11:04,780
encountered one so it still happens

269
00:11:01,180 --> 00:11:06,880
today but usually it's hdds so if you

270
00:11:04,780 --> 00:11:09,370
want to man the middle of that you have

271
00:11:06,880 --> 00:11:11,710
to install a fake root CA to intercept

272
00:11:09,370 --> 00:11:13,720
the traffic but that's possible there's

273
00:11:11,710 --> 00:11:17,050
tools doing it basically automatically

274
00:11:13,720 --> 00:11:19,300
for you they created fake CA and this is

275
00:11:17,050 --> 00:11:21,370
something not to break TLS for other

276
00:11:19,300 --> 00:11:23,589
people but to analyze your own traffic

277
00:11:21,370 --> 00:11:25,900
there's not an attack on TLS it's

278
00:11:23,590 --> 00:11:27,790
something everybody knows you can do so

279
00:11:25,900 --> 00:11:32,230
you analyze again the traffic of your

280
00:11:27,790 --> 00:11:34,540
device so on iOS it's easy the middle

281
00:11:32,230 --> 00:11:36,820
middle tool creates a certificate of CA

282
00:11:34,540 --> 00:11:39,699
for you and you just declare that

283
00:11:36,820 --> 00:11:42,700
attracted that was also possible in

284
00:11:39,700 --> 00:11:45,340
Android up to version sixth on X the

285
00:11:42,700 --> 00:11:47,080
sixth of X in newer Android versions you

286
00:11:45,340 --> 00:11:50,089
need a rooted device because you have to

287
00:11:47,080 --> 00:11:51,980
hard code it change the

288
00:11:50,089 --> 00:11:54,410
in certificate store otherwise it won't

289
00:11:51,980 --> 00:11:56,629
accept your certificates if you can't

290
00:11:54,410 --> 00:11:59,360
use the route of such a device there is

291
00:11:56,629 --> 00:12:02,329
an option to modify a specific app you

292
00:11:59,360 --> 00:12:04,550
want to analyze by changing the manifest

293
00:12:02,329 --> 00:12:06,769
in the apks or stocks on that online

294
00:12:04,550 --> 00:12:08,359
that we have linked in the slides there

295
00:12:06,769 --> 00:12:10,009
are lots of links in our slides so be

296
00:12:08,360 --> 00:12:11,870
sure to download them after the

297
00:12:10,009 --> 00:12:13,309
conference and check out the link that

298
00:12:11,870 --> 00:12:15,259
will give you lots of information about

299
00:12:13,309 --> 00:12:17,509
the topics we're covering here in a very

300
00:12:15,259 --> 00:12:19,819
short time but this way you can change

301
00:12:17,509 --> 00:12:22,519
the manifest and change the network

302
00:12:19,819 --> 00:12:24,920
security convict so it trusts also the

303
00:12:22,519 --> 00:12:27,139
user store so even if non-rooted device

304
00:12:24,920 --> 00:12:29,209
if you modify the app which is not a

305
00:12:27,139 --> 00:12:33,110
very complicated thing to do

306
00:12:29,209 --> 00:12:35,719
you can get the CA to trust and to amend

307
00:12:33,110 --> 00:12:37,399
the middle your data the only thing is

308
00:12:35,720 --> 00:12:39,499
there are some apps who have

309
00:12:37,399 --> 00:12:42,790
countermeasures and Micra will tell a

310
00:12:39,499 --> 00:12:42,790
little about what you can do then

311
00:12:43,120 --> 00:12:47,779
sometimes the application itself wants

312
00:12:45,529 --> 00:12:50,749
to protect the user as well from a rogue

313
00:12:47,779 --> 00:12:53,480
CA which is a good thing in this case

314
00:12:50,749 --> 00:12:54,189
sometimes the apps even tell you what

315
00:12:53,480 --> 00:12:59,259
they are doing

316
00:12:54,189 --> 00:13:04,219
sometimes they just stop working but

317
00:12:59,259 --> 00:13:05,540
what can you do then there's a few basic

318
00:13:04,220 --> 00:13:07,220
ideas

319
00:13:05,540 --> 00:13:11,899
the first one is rather trivial but

320
00:13:07,220 --> 00:13:14,029
helps quite a lot of did help often

321
00:13:11,899 --> 00:13:16,429
usually there's more than one app

322
00:13:14,029 --> 00:13:18,670
there's an older version potentially for

323
00:13:16,429 --> 00:13:21,290
Android or there is an iOS version

324
00:13:18,670 --> 00:13:21,860
basically sometimes only one of the app

325
00:13:21,290 --> 00:13:25,519
testers

326
00:13:21,860 --> 00:13:27,429
that's this it slightly more involved

327
00:13:25,519 --> 00:13:31,459
would be the second option you can

328
00:13:27,429 --> 00:13:33,230
modify the application that's of course

329
00:13:31,459 --> 00:13:34,489
you have to find out how to modify and

330
00:13:33,230 --> 00:13:38,389
so on there are some tutorials on the

331
00:13:34,490 --> 00:13:41,689
internet for that the third one is very

332
00:13:38,389 --> 00:13:43,639
powerful tool what we called the tools

333
00:13:41,689 --> 00:13:46,550
called Frida and there's a framework or

334
00:13:43,639 --> 00:13:48,889
objection this is extremely powerful you

335
00:13:46,550 --> 00:13:53,269
can do a lot of things with that you can

336
00:13:48,889 --> 00:13:55,129
modify all the calls within the app it's

337
00:13:53,269 --> 00:13:56,899
beyond the scope of this 50 minute

338
00:13:55,129 --> 00:13:59,209
presentation to go through all of that

339
00:13:56,899 --> 00:14:01,339
so we just look quickly through this you

340
00:13:59,209 --> 00:14:04,430
would run and for example in the case of

341
00:14:01,339 --> 00:14:08,720
a rooted android device you would run

342
00:14:04,430 --> 00:14:10,579
server there if you get lucky you can

343
00:14:08,720 --> 00:14:13,190
then just run this objective framework

344
00:14:10,580 --> 00:14:15,170
and there's pee defying commands like

345
00:14:13,190 --> 00:14:19,190
this Android as ascertaining disabled

346
00:14:15,170 --> 00:14:21,740
this will try to disable some known as

347
00:14:19,190 --> 00:14:23,570
its opening frameworks and again if

348
00:14:21,740 --> 00:14:26,630
you're lucky then the app will work

349
00:14:23,570 --> 00:14:27,950
afterwards if that doesn't work it's a

350
00:14:26,630 --> 00:14:29,209
little bit more complicated but again

351
00:14:27,950 --> 00:14:31,670
you'll find good tutorials you would

352
00:14:29,209 --> 00:14:36,099
have to write a JavaScript file for

353
00:14:31,670 --> 00:14:38,719
freedom that can basically change or a

354
00:14:36,100 --> 00:14:41,029
lot of things within the app and in this

355
00:14:38,720 --> 00:14:43,730
case it would just return the

356
00:14:41,029 --> 00:14:45,950
certificate which you run this and then

357
00:14:43,730 --> 00:14:51,500
the bottom you see a screenshot this

358
00:14:45,950 --> 00:14:54,670
time of another two and this shows that

359
00:14:51,500 --> 00:14:59,959
in this case T is opening TLS pinning is

360
00:14:54,670 --> 00:15:00,829
disabled so our advice for vendors is

361
00:14:59,959 --> 00:15:03,859
yes

362
00:15:00,830 --> 00:15:06,920
TLS certificate pinning is a measure to

363
00:15:03,860 --> 00:15:08,029
protect your users from rope CAS but it

364
00:15:06,920 --> 00:15:10,729
doesn't protect your traffic from

365
00:15:08,029 --> 00:15:12,490
analysis by hackers so do not rely on

366
00:15:10,730 --> 00:15:15,890
that

367
00:15:12,490 --> 00:15:19,370
okay the tools that we then can use to

368
00:15:15,890 --> 00:15:22,520
analyze the traffic on UNIX command line

369
00:15:19,370 --> 00:15:24,650
we use mitten proxy if you want to have

370
00:15:22,520 --> 00:15:26,600
nice user interface you cannot use other

371
00:15:24,650 --> 00:15:29,839
tools like the charts proxy there is

372
00:15:26,600 --> 00:15:31,370
also the pursuit of fiddler available it

373
00:15:29,839 --> 00:15:35,089
will take this on the command line you

374
00:15:31,370 --> 00:15:38,300
get a lock of all the transactions you

375
00:15:35,089 --> 00:15:41,330
can zoom in to one of them and in this

376
00:15:38,300 --> 00:15:43,040
example and you get already one of the

377
00:15:41,330 --> 00:15:46,900
piece we wanted to extract from the

378
00:15:43,040 --> 00:15:51,860
traffic a nicely printed out chasing

379
00:15:46,900 --> 00:15:53,930
file right so our advice to use this

380
00:15:51,860 --> 00:15:57,200
would be do it right from the start

381
00:15:53,930 --> 00:16:00,380
because sometimes you get a system that

382
00:15:57,200 --> 00:16:02,029
updates itself immediately and you would

383
00:16:00,380 --> 00:16:06,040
obviously miss this and would be

384
00:16:02,029 --> 00:16:09,820
difficult to get back to the old stage

385
00:16:06,040 --> 00:16:12,650
yeah and it is very useful to have

386
00:16:09,820 --> 00:16:15,260
dedicated rooted device like all the

387
00:16:12,650 --> 00:16:17,930
Android devices also expensive to do

388
00:16:15,260 --> 00:16:21,050
this okay

389
00:16:17,930 --> 00:16:22,719
then now that we talked about how to

390
00:16:21,050 --> 00:16:25,640
collect the data on these two interfaces

391
00:16:22,720 --> 00:16:31,610
let's have a look into real world

392
00:16:25,640 --> 00:16:35,960
example how to analyze this data this is

393
00:16:31,610 --> 00:16:39,020
a easy example it's like a nice puzzle

394
00:16:35,960 --> 00:16:42,220
you can do like on an evening or weekend

395
00:16:39,020 --> 00:16:46,220
it's a small really padlock one of the

396
00:16:42,220 --> 00:16:47,470
really cheap ones we should note this is

397
00:16:46,220 --> 00:16:50,350
research from last year

398
00:16:47,470 --> 00:16:54,790
meanwhile the manufacturer has improved

399
00:16:50,350 --> 00:16:57,050
the system but in 2018 it was like this

400
00:16:54,790 --> 00:16:59,420
the first one is we wanted to analyze

401
00:16:57,050 --> 00:17:03,439
the backend connection turns out we

402
00:16:59,420 --> 00:17:05,720
don't need any rogue CA for this because

403
00:17:03,440 --> 00:17:09,380
it just used HTTP traffic you can see

404
00:17:05,720 --> 00:17:14,390
the password right there you can also

405
00:17:09,380 --> 00:17:17,630
see a 16 byte array called lock key so

406
00:17:14,390 --> 00:17:21,860
that was in this case you but maybe

407
00:17:17,630 --> 00:17:23,900
could assume it's a s 128 and basically

408
00:17:21,859 --> 00:17:26,149
when we decrypted the Bluetooth traffic

409
00:17:23,900 --> 00:17:29,780
that's the link between the app and the

410
00:17:26,150 --> 00:17:32,450
lock again it was random look really

411
00:17:29,780 --> 00:17:35,360
random so we just took a chance and

412
00:17:32,450 --> 00:17:36,620
decrypted it using AES 128 and it

413
00:17:35,360 --> 00:17:39,370
doesn't work on diem anymore as you can

414
00:17:36,620 --> 00:17:44,389
see there's a lots of zeros and

415
00:17:39,370 --> 00:17:45,590
obviously this is properly decrypted the

416
00:17:44,390 --> 00:17:47,750
next thing you will do is you look for

417
00:17:45,590 --> 00:17:50,480
patterns compare several sessions you'll

418
00:17:47,750 --> 00:17:53,840
see things that are the same in this

419
00:17:50,480 --> 00:17:55,790
traffic and from a few sessions then you

420
00:17:53,840 --> 00:17:57,760
can use the protocol you see there is

421
00:17:55,790 --> 00:17:59,990
like session IDs and things like that

422
00:17:57,760 --> 00:18:04,160
apparently there's a replay protection

423
00:17:59,990 --> 00:18:06,860
implemented by a session ID but you then

424
00:18:04,160 --> 00:18:11,480
can do what we actually did is verify

425
00:18:06,860 --> 00:18:13,760
this look for weaknesses so one of the

426
00:18:11,480 --> 00:18:16,730
approaches we do in this case is the

427
00:18:13,760 --> 00:18:20,450
writer script using loop I also this

428
00:18:16,730 --> 00:18:22,220
other food library and mimic the

429
00:18:20,450 --> 00:18:24,890
application and then talk to the lock

430
00:18:22,220 --> 00:18:27,160
and explore the protocol use parsing

431
00:18:24,890 --> 00:18:30,300
techniques yeah so that's the usual

432
00:18:27,160 --> 00:18:32,700
approach how to to look at this

433
00:18:30,300 --> 00:18:34,230
this was the spot a call was not so

434
00:18:32,700 --> 00:18:36,330
difficult as I said the nice puzzle for

435
00:18:34,230 --> 00:18:38,429
an evening something like that what if

436
00:18:36,330 --> 00:18:40,350
it's not that easy to understand

437
00:18:38,429 --> 00:18:42,480
you just get encrypted traffic it's all

438
00:18:40,350 --> 00:18:46,080
random you don't understand what it's

439
00:18:42,480 --> 00:18:48,330
doing there then it makes sense to look

440
00:18:46,080 --> 00:18:50,270
at the thing in the middle what

441
00:18:48,330 --> 00:18:53,250
smartphone application yeah that's

442
00:18:50,270 --> 00:18:58,290
obviously something that holds all the

443
00:18:53,250 --> 00:19:02,070
information how the system works we just

444
00:18:58,290 --> 00:19:04,889
wanted to note that some legislations

445
00:19:02,070 --> 00:19:06,860
prohibit decompiling applications except

446
00:19:04,890 --> 00:19:11,390
for specific reasons so please check

447
00:19:06,860 --> 00:19:11,389
local legislation before you do that

448
00:19:12,080 --> 00:19:19,949
okay there is two systems and use today

449
00:19:15,990 --> 00:19:22,650
Android and iOS for Android it's not

450
00:19:19,950 --> 00:19:25,559
that difficult to obtain readable source

451
00:19:22,650 --> 00:19:27,630
code because the applications are

452
00:19:25,559 --> 00:19:29,730
typically written in Java and that's

453
00:19:27,630 --> 00:19:31,920
compared to bytecode you can recompile

454
00:19:29,730 --> 00:19:35,100
it back to Java using tools that are

455
00:19:31,920 --> 00:19:37,890
available online as well sometimes you

456
00:19:35,100 --> 00:19:40,469
get compiled C++ code you need different

457
00:19:37,890 --> 00:19:42,270
tools for that like for example at NSA

458
00:19:40,470 --> 00:19:46,950
either up what we heard about today or

459
00:19:42,270 --> 00:19:48,150
of course EDA for iOS it's typically a

460
00:19:46,950 --> 00:19:50,240
little bit more difficult but also

461
00:19:48,150 --> 00:19:53,520
possible you have to get the decrypted

462
00:19:50,240 --> 00:19:55,350
application file first these days you

463
00:19:53,520 --> 00:19:58,650
would need some jailbroken device for

464
00:19:55,350 --> 00:20:00,990
that but then you get armed binaries and

465
00:19:58,650 --> 00:20:06,059
there's also choose to decompile this

466
00:20:00,990 --> 00:20:10,830
like again vida or copper and so on once

467
00:20:06,059 --> 00:20:12,750
you did that it's typically a good idea

468
00:20:10,830 --> 00:20:14,850
to look for what does the application

469
00:20:12,750 --> 00:20:18,600
with Bluetooth like you have search for

470
00:20:14,850 --> 00:20:22,080
a term like Android Bluetooth or AES or

471
00:20:18,600 --> 00:20:24,030
crypt and the first example you see that

472
00:20:22,080 --> 00:20:26,580
that's yeah you find the place where

473
00:20:24,030 --> 00:20:28,350
it's actually talking to the lock the

474
00:20:26,580 --> 00:20:31,340
second part is an example where we found

475
00:20:28,350 --> 00:20:33,959
a key and an application and

476
00:20:31,340 --> 00:20:37,860
yeah the key was one two three four five

477
00:20:33,960 --> 00:20:39,559
six seven eight and so on so basically

478
00:20:37,860 --> 00:20:43,020
if you see something like this you think

479
00:20:39,559 --> 00:20:45,149
ok maybe let's look at this a little bit

480
00:20:43,020 --> 00:20:50,690
or there could be other vulnerabilities

481
00:20:45,150 --> 00:20:53,190
in there one more point regarding

482
00:20:50,690 --> 00:20:56,450
looking at applications specifically

483
00:20:53,190 --> 00:20:59,940
also Android code is really nice that

484
00:20:56,450 --> 00:21:02,580
you can decompile it to Java but often

485
00:20:59,940 --> 00:21:05,160
it's obfuscated that means area the

486
00:21:02,580 --> 00:21:06,960
symbols are readable but you don't can't

487
00:21:05,160 --> 00:21:09,800
make any sense of it it's really hard to

488
00:21:06,960 --> 00:21:13,230
read so there's for example

489
00:21:09,800 --> 00:21:17,940
yeah it's called be err something by

490
00:21:13,230 --> 00:21:20,340
Terry for then again if you see like a

491
00:21:17,940 --> 00:21:23,490
string that's not obfuscated access key

492
00:21:20,340 --> 00:21:25,350
data is no and yeah just replace it

493
00:21:23,490 --> 00:21:29,190
using refactoring tools like another

494
00:21:25,350 --> 00:21:33,320
studio and you get there we have a very

495
00:21:29,190 --> 00:21:36,120
strong opinion on application we we say

496
00:21:33,320 --> 00:21:37,020
obfuscation makes analysis harder but

497
00:21:36,120 --> 00:21:41,760
it's not impossible

498
00:21:37,020 --> 00:21:43,860
so it slows down us we cannot help you

499
00:21:41,760 --> 00:21:45,510
as a vendor then it does not stop

500
00:21:43,860 --> 00:21:48,240
criminals that will attack you and your

501
00:21:45,510 --> 00:21:50,160
customers so don't do it instead these

502
00:21:48,240 --> 00:21:52,790
are new protocols in a way which is

503
00:21:50,160 --> 00:21:58,260
secure even and they are known right

504
00:21:52,790 --> 00:22:00,090
well yeah so now let's look at few

505
00:21:58,260 --> 00:22:02,790
things that we found us using these

506
00:22:00,090 --> 00:22:04,770
methods as promised we will show you a

507
00:22:02,790 --> 00:22:07,590
few examples of vulnerabilities that we

508
00:22:04,770 --> 00:22:09,570
actually can find in IOT devices using

509
00:22:07,590 --> 00:22:11,459
the message you just have shown you and

510
00:22:09,570 --> 00:22:14,010
you hopefully will apply in your

511
00:22:11,460 --> 00:22:16,740
research in the future so first what we

512
00:22:14,010 --> 00:22:19,830
looked at is a typical cheap padlock

513
00:22:16,740 --> 00:22:22,380
which are around on Alibaba on various

514
00:22:19,830 --> 00:22:24,240
sites blew a bill a padlock Bluetooth

515
00:22:22,380 --> 00:22:26,970
padlock if you look for those those

516
00:22:24,240 --> 00:22:29,610
might show up so they have a sim proof

517
00:22:26,970 --> 00:22:31,440
mechanic so they are better than most of

518
00:22:29,610 --> 00:22:34,020
the cheap locks to get at home deeper or

519
00:22:31,440 --> 00:22:37,050
something but it's transmitted pass code

520
00:22:34,020 --> 00:22:39,270
in clear text over-the-air and for this

521
00:22:37,050 --> 00:22:40,710
lock to our knowledge disclaimer we

522
00:22:39,270 --> 00:22:43,050
haven't bought it last week or something

523
00:22:40,710 --> 00:22:46,170
this is still unfixed so we considered

524
00:22:43,050 --> 00:22:48,360
O'Day but on the other hand the vendor

525
00:22:46,170 --> 00:22:50,430
for sure knows he didn't put any equip

526
00:22:48,360 --> 00:22:52,050
chain in there so that's nothing like we

527
00:22:50,430 --> 00:22:54,410
could disclose to him he already knows

528
00:22:52,050 --> 00:22:57,080
he just didn't care obviously but it's

529
00:22:54,410 --> 00:22:59,120
but so if we have such a look you look

530
00:22:57,080 --> 00:23:00,470
at the traffic we find this one Roderick

531
00:22:59,120 --> 00:23:02,389
fest it's basically the one we showed

532
00:23:00,470 --> 00:23:05,810
you earlier and if you look in that we

533
00:23:02,390 --> 00:23:07,460
find an asserted to a bit 16-bit hex

534
00:23:05,810 --> 00:23:10,159
string here which we convert to decimal

535
00:23:07,460 --> 00:23:12,800
and it turned out that's exactly the key

536
00:23:10,160 --> 00:23:15,170
he sat in the app on the lock so oh one

537
00:23:12,800 --> 00:23:17,240
or two or three was a key I said on the

538
00:23:15,170 --> 00:23:19,580
lock so when I sniff it on the air with

539
00:23:17,240 --> 00:23:22,370
some vanilla says look I can just use

540
00:23:19,580 --> 00:23:25,040
this he enter it to my app and without

541
00:23:22,370 --> 00:23:26,959
any hacker tools open his lock using the

542
00:23:25,040 --> 00:23:30,470
code I sniff on the air so this is

543
00:23:26,960 --> 00:23:32,750
really just a poem system by design so

544
00:23:30,470 --> 00:23:34,370
it's not the only locks at way already

545
00:23:32,750 --> 00:23:36,110
two years ago at Def Con there was a

546
00:23:34,370 --> 00:23:39,530
nice presentation by rose and Ramsay

547
00:23:36,110 --> 00:23:42,350
they tested a broad range of Bluetooth

548
00:23:39,530 --> 00:23:45,410
locks for this simple vulnerabilities so

549
00:23:42,350 --> 00:23:47,810
12 of 16 locks imagine that they tested

550
00:23:45,410 --> 00:23:50,210
had simple vulnerabilities like replay

551
00:23:47,810 --> 00:23:51,620
like getting the key like fasten them

552
00:23:50,210 --> 00:23:54,380
and getting them open and stuff like

553
00:23:51,620 --> 00:23:56,449
that two of the padlocks they tested

554
00:23:54,380 --> 00:23:59,390
remained unbroken as they said all there

555
00:23:56,450 --> 00:24:03,170
might be a little better so accidentally

556
00:23:59,390 --> 00:24:05,750
or independently from those locks at one

557
00:24:03,170 --> 00:24:08,830
of these locks the master lock bluetooth

558
00:24:05,750 --> 00:24:11,960
padlock is like in 60 to 80 dollar lock

559
00:24:08,830 --> 00:24:15,320
we figured you could attack mechanically

560
00:24:11,960 --> 00:24:17,300
so this lock now locks you basically

561
00:24:15,320 --> 00:24:19,820
it's locked and instead of using the app

562
00:24:17,300 --> 00:24:22,580
we now use a high tech hacker tool

563
00:24:19,820 --> 00:24:24,350
called a magnet and we attach it from

564
00:24:22,580 --> 00:24:26,300
the back and by this movement from

565
00:24:24,350 --> 00:24:28,280
moving it over the side and turning the

566
00:24:26,300 --> 00:24:31,700
polarity from time to time he actually

567
00:24:28,280 --> 00:24:33,110
turned the motor inside the lock so what

568
00:24:31,700 --> 00:24:35,300
usually you would have been activated by

569
00:24:33,110 --> 00:24:38,169
the electronics now are stand by the

570
00:24:35,300 --> 00:24:43,200
magnet and the lock opens

571
00:24:38,170 --> 00:24:43,200
[Laughter]

572
00:24:44,410 --> 00:24:49,700
so actually we disclose that to

573
00:24:47,240 --> 00:24:51,380
masterlock right on DEFCON because in

574
00:24:49,700 --> 00:24:52,850
the Q&A I mentioned it and someone

575
00:24:51,380 --> 00:24:55,130
approached me hey I'm with master lock

576
00:24:52,850 --> 00:24:56,929
and showed it to him basically on the

577
00:24:55,130 --> 00:24:58,370
conference so there hopefully did

578
00:24:56,930 --> 00:25:00,290
something about it but we never had

579
00:24:58,370 --> 00:25:01,639
contact I'm not sure if they if they

580
00:25:00,290 --> 00:25:03,500
changed it or not they have a bigger

581
00:25:01,640 --> 00:25:05,660
Locker it's not said easy but probably

582
00:25:03,500 --> 00:25:07,610
they did something I don't know so the

583
00:25:05,660 --> 00:25:09,830
other locks that remained unbroken by

584
00:25:07,610 --> 00:25:12,080
the erosion tremors research foreseen no

585
00:25:09,830 --> 00:25:14,629
keypad lock and that's actually one of

586
00:25:12,080 --> 00:25:17,720
the first peony padlocks ever created it

587
00:25:14,630 --> 00:25:19,550
was a Kickstarter campaign in 2014 which

588
00:25:17,720 --> 00:25:21,320
raised much more money than they

589
00:25:19,550 --> 00:25:23,180
expected so a typical thing going

590
00:25:21,320 --> 00:25:26,179
through the roof so they had quite some

591
00:25:23,180 --> 00:25:29,480
money to to develop and the note here

592
00:25:26,180 --> 00:25:31,270
the research I am now showing you is for

593
00:25:29,480 --> 00:25:34,760
the original firmware which was in place

594
00:25:31,270 --> 00:25:37,610
2015 to 2017 and our responsible

595
00:25:34,760 --> 00:25:39,500
disclosure process in 2016 after quite a

596
00:25:37,610 --> 00:25:42,320
while I must say led to a firmware

597
00:25:39,500 --> 00:25:43,760
update in 2017 fixing this to a new

598
00:25:42,320 --> 00:25:47,030
protocol which we haven't looked deeper

599
00:25:43,760 --> 00:25:49,129
into but the note security wasn't as bad

600
00:25:47,030 --> 00:25:50,570
as a lock we shot before it must be a

601
00:25:49,130 --> 00:25:53,950
reason that Ross and Ramsey didn't find

602
00:25:50,570 --> 00:25:56,389
it it uses actual AES 128 bit encryption

603
00:25:53,950 --> 00:25:59,030
using the reference implementation so

604
00:25:56,390 --> 00:26:01,040
that something would say okay it also

605
00:25:59,030 --> 00:26:03,230
uses different secrets for the owner of

606
00:26:01,040 --> 00:26:04,820
the lock and friends new share as a lock

607
00:26:03,230 --> 00:26:06,710
- so it's not like your friends could

608
00:26:04,820 --> 00:26:08,990
use a key to change your lock or

609
00:26:06,710 --> 00:26:11,150
something what we find out very early by

610
00:26:08,990 --> 00:26:12,980
analyzing the backend traffic is the

611
00:26:11,150 --> 00:26:14,810
time restrictions were enforced in the

612
00:26:12,980 --> 00:26:16,880
app which of course is not the best

613
00:26:14,810 --> 00:26:18,440
thing to do you could just many put it's

614
00:26:16,880 --> 00:26:20,210
a back-end traffic and circumvent the

615
00:26:18,440 --> 00:26:22,940
time restrictions basically if you share

616
00:26:20,210 --> 00:26:24,920
this lock you could open it any time but

617
00:26:22,940 --> 00:26:25,940
the main vulnerability so that's a real

618
00:26:24,920 --> 00:26:30,170
thing you had to disclose

619
00:26:25,940 --> 00:26:32,480
what's the secret transmission of C of C

620
00:26:30,170 --> 00:26:35,210
code to the lock it was transmitted

621
00:26:32,480 --> 00:26:37,460
using individual AES session key 4 for

622
00:26:35,210 --> 00:26:39,830
each session and new key was generated

623
00:26:37,460 --> 00:26:41,930
so that's also good but the session key

624
00:26:39,830 --> 00:26:44,120
generation was done in a secret

625
00:26:41,930 --> 00:26:46,730
handshake so something like Oh nobody

626
00:26:44,120 --> 00:26:48,679
knows how we do it so it's secure using

627
00:26:46,730 --> 00:26:49,130
the hard-coded AES key that we saw

628
00:26:48,680 --> 00:26:51,560
before

629
00:26:49,130 --> 00:26:53,210
one two three four five six but that's

630
00:26:51,560 --> 00:26:55,340
not the problem every hard coded key

631
00:26:53,210 --> 00:26:57,110
would be as bad as it is

632
00:26:55,340 --> 00:26:59,090
so it basically was security by

633
00:26:57,110 --> 00:27:00,979
obscurity as long as it didn't know the

634
00:26:59,090 --> 00:27:03,379
protocol how they exchanged a session

635
00:27:00,980 --> 00:27:05,809
key it's okay but if some evil hacker

636
00:27:03,379 --> 00:27:07,340
comes and uses a disassembler he can

637
00:27:05,809 --> 00:27:09,379
find this part of code which actually

638
00:27:07,340 --> 00:27:11,360
does the calculation of the session key

639
00:27:09,379 --> 00:27:13,490
so we looked a little bit into it

640
00:27:11,360 --> 00:27:15,439
finally this was actually in the binary

641
00:27:13,490 --> 00:27:16,690
as alpha so we really had to disassemble

642
00:27:15,440 --> 00:27:19,580
we couldn't use the java decompiler

643
00:27:16,690 --> 00:27:22,100
shown earlier but once you understand it

644
00:27:19,580 --> 00:27:24,590
you saw it's a very simple principle the

645
00:27:22,100 --> 00:27:27,740
app sends none so number used ones of

646
00:27:24,590 --> 00:27:29,959
32-bit to the lock the locks sends the

647
00:27:27,740 --> 00:27:33,289
second number back to the app so now

648
00:27:29,960 --> 00:27:35,360
both parties Nobel Mouse numbers say X

649
00:27:33,289 --> 00:27:37,580
or these numbers together so they get

650
00:27:35,360 --> 00:27:39,889
this first value here in the red corner

651
00:27:37,580 --> 00:27:42,799
it's a certain bit to value which is

652
00:27:39,889 --> 00:27:46,279
added to the pre shared key so we

653
00:27:42,799 --> 00:27:48,200
changed shirted to bit in an 128-bit key

654
00:27:46,279 --> 00:27:50,659
I'm not sure what that's supposed to do

655
00:27:48,200 --> 00:27:52,490
in security and then we get a new key by

656
00:27:50,659 --> 00:27:54,980
adding it up to the center of it and

657
00:27:52,490 --> 00:27:57,470
this new session key which you could

658
00:27:54,980 --> 00:28:00,490
derive from Catholic you just sniff was

659
00:27:57,470 --> 00:28:02,869
used for all further communication so

660
00:28:00,490 --> 00:28:05,299
let's thought about cryptography but did

661
00:28:02,869 --> 00:28:08,480
it wrong so if it is closest like the

662
00:28:05,299 --> 00:28:10,668
end of two thousand dollars in the

663
00:28:08,480 --> 00:28:13,970
beginning 2016 at the end vida de for

664
00:28:10,669 --> 00:28:16,340
disclosure and in 2007 17 they finally

665
00:28:13,970 --> 00:28:18,110
fixed it but so this shows also

666
00:28:16,340 --> 00:28:20,779
something important even if a vendor

667
00:28:18,110 --> 00:28:23,029
claims to use AES that doesn't mean it's

668
00:28:20,779 --> 00:28:25,789
secure it's probably better than viewing

669
00:28:23,029 --> 00:28:27,470
home build protocols but still look for

670
00:28:25,789 --> 00:28:29,570
vulnerabilities look for key exchanges

671
00:28:27,470 --> 00:28:31,190
there might be things like that so

672
00:28:29,570 --> 00:28:33,980
that's the previous things what we are

673
00:28:31,190 --> 00:28:36,259
going want them to hear is ble hotel

674
00:28:33,980 --> 00:28:39,169
keys so what we're looking here at is

675
00:28:36,259 --> 00:28:42,769
the ble layer and T back-end so but

676
00:28:39,169 --> 00:28:44,179
let's first ask why BL e for hotels so

677
00:28:42,769 --> 00:28:46,159
this is really a clever idea to have a

678
00:28:44,179 --> 00:28:48,470
very less outer key the main purpose of

679
00:28:46,159 --> 00:28:49,549
course the self check-in you don't need

680
00:28:48,470 --> 00:28:52,220
a key card anymore

681
00:28:49,549 --> 00:28:54,320
your mobile phone is a key for the hotel

682
00:28:52,220 --> 00:28:56,320
that means they can probably do staff or

683
00:28:54,320 --> 00:28:58,759
UC staff at more valuable locations and

684
00:28:56,320 --> 00:29:00,710
everybody of you who stood in line at

685
00:28:58,759 --> 00:29:02,990
the Mandalay at a high traffic volume

686
00:29:00,710 --> 00:29:04,460
will appreciate the ability to check in

687
00:29:02,990 --> 00:29:06,679
yourself with your phone and skip that

688
00:29:04,460 --> 00:29:07,730
line right so it could looks kind of

689
00:29:06,679 --> 00:29:09,950
attractive

690
00:29:07,730 --> 00:29:11,960
but the challenge is such a system poses

691
00:29:09,950 --> 00:29:14,120
is that sexual pairing unlike in the

692
00:29:11,960 --> 00:29:16,039
device you own where you could like pair

693
00:29:14,120 --> 00:29:18,379
from accuAir code you get as a package

694
00:29:16,039 --> 00:29:19,490
or something is hard to do here you walk

695
00:29:18,380 --> 00:29:22,039
to the door and you want to communicate

696
00:29:19,490 --> 00:29:24,169
pairing know then they have usually

697
00:29:22,039 --> 00:29:25,908
deployed see hardware in the hotels for

698
00:29:24,169 --> 00:29:28,549
quite a while so they have a retrofit

699
00:29:25,909 --> 00:29:30,289
probably old hardware with new modules

700
00:29:28,549 --> 00:29:32,809
and not have the most recent

701
00:29:30,289 --> 00:29:35,330
cryptographic chips in there and then

702
00:29:32,809 --> 00:29:37,428
it's a complex ecosystem of a hotel

703
00:29:35,330 --> 00:29:39,379
chain somebody building their app

704
00:29:37,429 --> 00:29:41,960
somebody building their lot probably a

705
00:29:39,380 --> 00:29:44,510
short party integrating the SDK from the

706
00:29:41,960 --> 00:29:47,389
lock vendor to the hotel app so it's

707
00:29:44,510 --> 00:29:49,269
many people do have to work together but

708
00:29:47,389 --> 00:29:52,100
if it all works how does it work out I

709
00:29:49,269 --> 00:29:53,450
have a booking somewhere and I have the

710
00:29:52,100 --> 00:29:55,100
app and an account in the app and

711
00:29:53,450 --> 00:29:56,899
somehow I have to get the booking into

712
00:29:55,100 --> 00:29:59,689
the death so that actually might be the

713
00:29:56,899 --> 00:30:01,939
first weak spot here because in the

714
00:29:59,690 --> 00:30:04,190
system we had a look at you could add

715
00:30:01,940 --> 00:30:06,500
the booking by things like your booking

716
00:30:04,190 --> 00:30:08,450
number your beginning end and stay and

717
00:30:06,500 --> 00:30:10,309
your name so that's not something

718
00:30:08,450 --> 00:30:12,470
everybody knows but this is data

719
00:30:10,309 --> 00:30:15,200
somebody could get by social engineering

720
00:30:12,470 --> 00:30:17,539
and if he manages to do that he can get

721
00:30:15,200 --> 00:30:19,010
your key on his app so that's the first

722
00:30:17,539 --> 00:30:20,990
point where there might be a weakness

723
00:30:19,010 --> 00:30:22,700
that you could think about but things

724
00:30:20,990 --> 00:30:23,870
like this I've found lots of in hotel

725
00:30:22,700 --> 00:30:25,760
systems if you have good social

726
00:30:23,870 --> 00:30:28,010
engineering skills you'd probably get

727
00:30:25,760 --> 00:30:29,870
into hotel room anyway then you do an

728
00:30:28,010 --> 00:30:32,179
outer hatch online check-in in your app

729
00:30:29,870 --> 00:30:34,489
and the mobile key is transferred to

730
00:30:32,179 --> 00:30:36,620
your app so what you do now is here we

731
00:30:34,490 --> 00:30:38,360
showing example actually if you're

732
00:30:36,620 --> 00:30:40,639
wondering vibrate in the black hat hotel

733
00:30:38,360 --> 00:30:42,559
this was man in the middle replaced by

734
00:30:40,639 --> 00:30:44,510
our proxy we started to funny to replace

735
00:30:42,559 --> 00:30:46,549
the company logo by man the middle

736
00:30:44,510 --> 00:30:49,490
replacement and then you can use these

737
00:30:46,549 --> 00:30:51,049
the app to approach the lock say

738
00:30:49,490 --> 00:30:53,059
unlock you see it's communicating now

739
00:30:51,049 --> 00:30:55,789
the lock is blinking yellow green and

740
00:30:53,059 --> 00:30:58,158
your hotel door is open so that's a

741
00:30:55,789 --> 00:30:59,960
normal use case so this is how something

742
00:30:58,159 --> 00:31:02,120
like that would work we looked at two

743
00:30:59,960 --> 00:31:04,460
different systems the first one we're

744
00:31:02,120 --> 00:31:06,529
looking at is not the one we bro we call

745
00:31:04,460 --> 00:31:08,600
it the hotel age so because we don't

746
00:31:06,529 --> 00:31:11,570
have to name here hotels we didn't break

747
00:31:08,600 --> 00:31:15,080
and it worked after figuring out in that

748
00:31:11,570 --> 00:31:16,939
way the back end to the app sends a key

749
00:31:15,080 --> 00:31:20,080
so there's a little bit complicated here

750
00:31:16,940 --> 00:31:23,309
a key K as well as an encrypted

751
00:31:20,080 --> 00:31:27,580
version of this key which we call K star

752
00:31:23,309 --> 00:31:30,730
only an K star is encrypted version of K

753
00:31:27,580 --> 00:31:32,889
by the key KS only he back-end which is

754
00:31:30,730 --> 00:31:35,350
under control of cylinder and the lock

755
00:31:32,890 --> 00:31:38,740
which is under control of cylinder noses

756
00:31:35,350 --> 00:31:41,649
he KS so your app doesn't know it the

757
00:31:38,740 --> 00:31:42,299
app sends now the encrypted key to the

758
00:31:41,649 --> 00:31:45,610
llama

759
00:31:42,299 --> 00:31:49,570
so the lock knowing the key KS can

760
00:31:45,610 --> 00:31:52,240
derive the unencrypted key k and now the

761
00:31:49,570 --> 00:31:55,269
lock and your F can communicate using K

762
00:31:52,240 --> 00:31:58,240
but you haven't you as a user don't have

763
00:31:55,269 --> 00:32:00,309
to know KS so now the bill it traffic is

764
00:31:58,240 --> 00:32:02,799
encrypted with an AES key that the

765
00:32:00,309 --> 00:32:04,240
passive eavesdropper doesn't know so

766
00:32:02,799 --> 00:32:05,799
there's actually a good twist a good

767
00:32:04,240 --> 00:32:07,990
thing so we didn't find an obvious

768
00:32:05,799 --> 00:32:10,840
attack vector on that except if you

769
00:32:07,990 --> 00:32:12,909
manage to obtain KS so you could

770
00:32:10,840 --> 00:32:14,559
probably do it by taking a Part C lock

771
00:32:12,909 --> 00:32:17,529
and finding vulnerability in the chip

772
00:32:14,559 --> 00:32:19,600
user but steps of pass we don't got into

773
00:32:17,529 --> 00:32:22,090
because we don't take apart other people

774
00:32:19,600 --> 00:32:23,830
lock for research at least that not if

775
00:32:22,090 --> 00:32:25,240
we're not allowed to do so we do it of

776
00:32:23,830 --> 00:32:26,830
course with locks we own but in this

777
00:32:25,240 --> 00:32:30,159
case we didn't research his father and

778
00:32:26,830 --> 00:32:31,750
also with when we tried to do more dumps

779
00:32:30,159 --> 00:32:35,039
and everything like that the system was

780
00:32:31,750 --> 00:32:37,149
down so first arsenal ok this hotel

781
00:32:35,039 --> 00:32:38,289
probably in the early stage we don't

782
00:32:37,149 --> 00:32:40,539
research it anymore

783
00:32:38,289 --> 00:32:42,399
so we came to a second system as a

784
00:32:40,539 --> 00:32:45,669
manufacturer we call em like

785
00:32:42,399 --> 00:32:49,629
manufacturer and that we found in a

786
00:32:45,669 --> 00:32:53,399
system in early 2019 and acquired upper

787
00:32:49,630 --> 00:32:55,600
class hotel I happened to to live in and

788
00:32:53,399 --> 00:32:58,178
the lower key is used to basically

789
00:32:55,600 --> 00:33:00,279
everywhere instead of the normal human

790
00:32:58,179 --> 00:33:02,590
you can use it like in the elevator in

791
00:33:00,279 --> 00:33:04,899
your rooms in the fitness center so we

792
00:33:02,590 --> 00:33:06,580
got the mobile key and analyze the TNS

793
00:33:04,899 --> 00:33:09,189
and being in traffic as we have shown

794
00:33:06,580 --> 00:33:11,769
before in various cases so here's a dump

795
00:33:09,190 --> 00:33:13,809
from the mitten proxy tool and you can

796
00:33:11,769 --> 00:33:16,630
see there's something called a mobile

797
00:33:13,809 --> 00:33:18,668
key insulation data and it starts this

798
00:33:16,630 --> 00:33:20,649
DT and Zander some bytes this is only

799
00:33:18,669 --> 00:33:24,190
the beginnings of like 40 bytes of this

800
00:33:20,649 --> 00:33:26,139
following and when we compared the key

801
00:33:24,190 --> 00:33:28,840
we received from the back end in this DT

802
00:33:26,139 --> 00:33:32,269
field but the key we saw on the area

803
00:33:28,840 --> 00:33:33,859
immediately noticed oh it's the same key

804
00:33:32,269 --> 00:33:35,809
so would it be that simple that it just

805
00:33:33,859 --> 00:33:37,249
sends the key over-the-air so you could

806
00:33:35,809 --> 00:33:39,469
replay so we looked at the full

807
00:33:37,249 --> 00:33:41,179
recording and realized no there's much

808
00:33:39,469 --> 00:33:43,219
more going on so in the middle of

809
00:33:41,179 --> 00:33:45,289
actually the full key we got from the

810
00:33:43,219 --> 00:33:48,379
back end so that of course was an

811
00:33:45,289 --> 00:33:50,869
indicator this will be fishy there is

812
00:33:48,379 --> 00:33:53,330
something not so good if the only secret

813
00:33:50,869 --> 00:33:55,789
the app has is going over the air there

814
00:33:53,330 --> 00:33:57,649
must be a way to break it but looking at

815
00:33:55,789 --> 00:33:59,330
the rest we saw there's lots of data we

816
00:33:57,649 --> 00:34:00,978
don't understand so we had to look into

817
00:33:59,330 --> 00:34:05,239
that further my career tell about you

818
00:34:00,979 --> 00:34:07,789
how we did it yeah exactly so um there

819
00:34:05,239 --> 00:34:12,109
seem to be some we play protection in

820
00:34:07,789 --> 00:34:15,829
the protocol as well as you can see here

821
00:34:12,109 --> 00:34:17,598
there's that seem to be some kind of

822
00:34:15,829 --> 00:34:21,859
checksum there was also the MAC address

823
00:34:17,599 --> 00:34:23,690
of the lock transmitted and some values

824
00:34:21,859 --> 00:34:25,730
have changed all the time

825
00:34:23,690 --> 00:34:28,279
at that time we assume there will be

826
00:34:25,730 --> 00:34:32,799
announced and the CRC or some type of

827
00:34:28,279 --> 00:34:37,879
checksum or an edge mac maybe but yeah

828
00:34:32,799 --> 00:34:39,739
we tried COCs if you want to do this

829
00:34:37,879 --> 00:34:40,399
there's some tools available on the

830
00:34:39,739 --> 00:34:43,118
Internet

831
00:34:40,399 --> 00:34:47,328
for example this CSE reverse engineering

832
00:34:43,119 --> 00:34:50,389
tool we just used a custom Python script

833
00:34:47,329 --> 00:34:53,649
and then we assumed that 16 bits may be

834
00:34:50,389 --> 00:34:57,950
the nulls and 16 bits maybe ECOC

835
00:34:53,649 --> 00:35:00,140
have a script that matches that searches

836
00:34:57,950 --> 00:35:03,259
for match and at least two of the

837
00:35:00,140 --> 00:35:04,578
messages we got yes and basically it was

838
00:35:03,260 --> 00:35:10,779
exactly like this

839
00:35:04,579 --> 00:35:15,440
we found the Panola polynomial we also

840
00:35:10,779 --> 00:35:16,670
saw that seat value the seat value

841
00:35:15,440 --> 00:35:19,910
that's the initial value when you

842
00:35:16,670 --> 00:35:22,970
calculate a CSE that was something that

843
00:35:19,910 --> 00:35:26,480
was transmitted over the TLS session and

844
00:35:22,970 --> 00:35:28,339
that's something that's constant within

845
00:35:26,480 --> 00:35:31,220
the hotel's called SCE think it's

846
00:35:28,339 --> 00:35:33,619
something like system code for the next

847
00:35:31,220 --> 00:35:37,939
CSEE on the other hand they use the

848
00:35:33,619 --> 00:35:43,250
previous value as a seat so we were able

849
00:35:37,940 --> 00:35:46,040
to transmit the first packets but then

850
00:35:43,250 --> 00:35:48,940
there's the packet that contains the key

851
00:35:46,040 --> 00:35:52,790
and that was a little bit more difficult

852
00:35:48,940 --> 00:35:55,340
we did not initially find the two bytes

853
00:35:52,790 --> 00:35:57,230
that are the correct two values for

854
00:35:55,340 --> 00:36:02,690
these two bytes to transmit this key

855
00:35:57,230 --> 00:36:04,880
correctly basically we had one block

856
00:36:02,690 --> 00:36:07,700
where the CSE was obviously not at the

857
00:36:04,880 --> 00:36:10,460
end some constant bytes some some zero

858
00:36:07,700 --> 00:36:12,470
bytes and three previous year C values

859
00:36:10,460 --> 00:36:14,870
and yeah that was a little bit of a

860
00:36:12,470 --> 00:36:17,810
puzzle but basically it's not that

861
00:36:14,870 --> 00:36:20,600
difficult they use the previous values

862
00:36:17,810 --> 00:36:24,410
and calculated again at the same

863
00:36:20,600 --> 00:36:28,250
algorithm as you see and over wrote this

864
00:36:24,410 --> 00:36:30,259
with zeros so yeah now we knew how to

865
00:36:28,250 --> 00:36:32,390
create this credential packet we could

866
00:36:30,260 --> 00:36:37,460
verify that with a lot of choices we had

867
00:36:32,390 --> 00:36:41,690
taken before again we created a Python

868
00:36:37,460 --> 00:36:43,730
script to send this I put just take the

869
00:36:41,690 --> 00:36:45,320
device name it would take these

870
00:36:43,730 --> 00:36:47,900
credential bytes that we could sniff out

871
00:36:45,320 --> 00:36:51,590
of the air and I calculate the CC and

872
00:36:47,900 --> 00:36:56,380
using Boop I go talk to the lock we

873
00:36:51,590 --> 00:36:59,960
tried this this shows how we actually

874
00:36:56,380 --> 00:37:03,920
got the key out of the air so I was

875
00:36:59,960 --> 00:37:07,040
nothing set up you see the three surfing

876
00:37:03,920 --> 00:37:08,630
boards and in this case I simulated

877
00:37:07,040 --> 00:37:10,360
customer purse on the inside of the door

878
00:37:08,630 --> 00:37:14,810
because that's a little bit suspicious

879
00:37:10,360 --> 00:37:17,600
if you set this up in the hotel floor

880
00:37:14,810 --> 00:37:21,740
and outside in the hall but anyway yeah

881
00:37:17,600 --> 00:37:26,660
you can see we we got the bites our skip

882
00:37:21,740 --> 00:37:30,259
would take these bytes then we tried it

883
00:37:26,660 --> 00:37:31,910
we like yes so we had put sea bytes we

884
00:37:30,260 --> 00:37:33,710
sniffed on the air into our tool and

885
00:37:31,910 --> 00:37:34,190
then we thought okay let's step out of

886
00:37:33,710 --> 00:37:37,160
the room

887
00:37:34,190 --> 00:37:40,190
take our laptop and try to run our

888
00:37:37,160 --> 00:37:42,350
script against the real thing this is

889
00:37:40,190 --> 00:37:44,210
actually real our Python script running

890
00:37:42,350 --> 00:37:46,190
on the laptop and the actual hotel door

891
00:37:44,210 --> 00:37:48,260
person mates not getting too suspicious

892
00:37:46,190 --> 00:37:51,290
because we are in very quickly as you

893
00:37:48,260 --> 00:37:54,860
can see and it turned out oh we actually

894
00:37:51,290 --> 00:37:58,070
reached quite a nice acceptable 37th

895
00:37:54,860 --> 00:37:59,579
floor 500 dollar hotel suite with our

896
00:37:58,070 --> 00:38:01,890
CSC

897
00:37:59,579 --> 00:38:07,319
to attack so this system basically must

898
00:38:01,890 --> 00:38:10,229
pound by reversing CICS and this again

899
00:38:07,319 --> 00:38:12,839
is showing that security by obscurity is

900
00:38:10,229 --> 00:38:16,169
not the way to go for these kinds of

901
00:38:12,839 --> 00:38:17,849
things so once we have this running we

902
00:38:16,170 --> 00:38:20,640
sort out let's analyze a little bit more

903
00:38:17,849 --> 00:38:22,890
go deeper into it and we did again what

904
00:38:20,640 --> 00:38:25,019
we did earlier write a Python script as

905
00:38:22,890 --> 00:38:26,609
a test target so instead we're having a

906
00:38:25,019 --> 00:38:29,069
script now to open the lock we also

907
00:38:26,609 --> 00:38:30,900
build a script to emulate the lock so

908
00:38:29,069 --> 00:38:33,690
with this script we could play with some

909
00:38:30,900 --> 00:38:36,569
real app and our simulation now at home

910
00:38:33,690 --> 00:38:39,839
and analyze this version so we wanted to

911
00:38:36,569 --> 00:38:41,969
know how big is this problem so it's a

912
00:38:39,839 --> 00:38:43,739
such this one hotel that we found out is

913
00:38:41,969 --> 00:38:46,170
it more so with some digging around he

914
00:38:43,739 --> 00:38:47,999
found us a few more hotel change which

915
00:38:46,170 --> 00:38:49,829
were starting to deploy this product

916
00:38:47,999 --> 00:38:51,598
because we always has to see this is

917
00:38:49,829 --> 00:38:53,549
very new we're very lucky that we got

918
00:38:51,599 --> 00:38:55,319
set this early because it wasn't

919
00:38:53,549 --> 00:38:57,450
deployed like in a thousand hotels so

920
00:38:55,319 --> 00:38:59,880
far sorry for that if you expected that

921
00:38:57,450 --> 00:39:01,979
but it's very emerging technology one

922
00:38:59,880 --> 00:39:04,650
thing was very funny or interesting for

923
00:39:01,979 --> 00:39:06,660
us is that you could actually see it by

924
00:39:04,650 --> 00:39:10,140
the names of the locks the locks

925
00:39:06,660 --> 00:39:12,598
announced the 60 base 64 names that you

926
00:39:10,140 --> 00:39:13,949
could decode to binary and then found a

927
00:39:12,599 --> 00:39:17,039
certain pattern so we could actually

928
00:39:13,949 --> 00:39:19,589
from the outside check if a hotel uses

929
00:39:17,039 --> 00:39:21,329
the vulnerable system or not so imagine

930
00:39:19,589 --> 00:39:24,269
us for going around with Bluetooth

931
00:39:21,329 --> 00:39:27,059
sniffers and checking hotels for for the

932
00:39:24,269 --> 00:39:28,529
system and we found actually a few human

933
00:39:27,059 --> 00:39:30,329
rooms and then we booked one of the

934
00:39:28,529 --> 00:39:33,059
rooms in one of the hotels we identified

935
00:39:30,329 --> 00:39:34,920
as also vulnerable and found an even

936
00:39:33,059 --> 00:39:36,989
simpler variation of the protocol which

937
00:39:34,920 --> 00:39:39,749
did the first handshake and not this

938
00:39:36,989 --> 00:39:41,099
last CSC variation so there's variations

939
00:39:39,749 --> 00:39:43,589
of that and at that time we also

940
00:39:41,099 --> 00:39:45,719
realized the manufacturer which actually

941
00:39:43,589 --> 00:39:48,529
is a company messerschmitt in Germany

942
00:39:45,719 --> 00:39:50,789
and say so there are no wrong

943
00:39:48,529 --> 00:39:53,160
expectations that they have like 2000

944
00:39:50,789 --> 00:39:55,349
hotels that apply locks to but they're

945
00:39:53,160 --> 00:39:57,180
also going for quite upper-class hotels

946
00:39:55,349 --> 00:39:59,190
and those upper-class hotels are not so

947
00:39:57,180 --> 00:40:01,769
much interested in Bluetooth locks they

948
00:39:59,190 --> 00:40:05,819
want the customers to comes on the desks

949
00:40:01,769 --> 00:40:07,828
so it's in the lower level change or mid

950
00:40:05,819 --> 00:40:09,660
class change because they don't really

951
00:40:07,829 --> 00:40:11,489
provide lower level so in those mid

952
00:40:09,660 --> 00:40:13,230
class change the beginning to roll it

953
00:40:11,489 --> 00:40:16,050
out so

954
00:40:13,230 --> 00:40:18,990
it's not so many hotels currently and

955
00:40:16,050 --> 00:40:21,240
luckily we informed them but we thought

956
00:40:18,990 --> 00:40:22,979
about okay is this real real problem can

957
00:40:21,240 --> 00:40:25,919
you really do this in in real life so we

958
00:40:22,980 --> 00:40:28,950
tried about how would that look in real

959
00:40:25,920 --> 00:40:30,480
life doing an exploitation of course one

960
00:40:28,950 --> 00:40:32,759
thing you don't have to do is to sniffs

961
00:40:30,480 --> 00:40:35,280
the key using the bill ejects at work

962
00:40:32,760 --> 00:40:36,480
try to find an hour in room setup it's

963
00:40:35,280 --> 00:40:38,640
the only thing you have to know in

964
00:40:36,480 --> 00:40:40,680
advance is the Bluetooth address of the

965
00:40:38,640 --> 00:40:42,900
lock you want to sniff so you have to go

966
00:40:40,680 --> 00:40:44,609
to the lock before identify this lock

967
00:40:42,900 --> 00:40:46,470
I'm going to sniff so probably if you

968
00:40:44,609 --> 00:40:47,700
follow someone to his room that wouldn't

969
00:40:46,470 --> 00:40:49,709
be so good you would have to know all

970
00:40:47,700 --> 00:40:51,180
the MAC addresses of all rooms so we

971
00:40:49,710 --> 00:40:52,170
start about other places where you could

972
00:40:51,180 --> 00:40:54,180
sniffing if you thought about the

973
00:40:52,170 --> 00:40:57,210
fitness center if people go to the gym

974
00:40:54,180 --> 00:40:59,368
and then we start oh there might be

975
00:40:57,210 --> 00:41:00,810
options to hide a hider sniffing device

976
00:40:59,369 --> 00:41:03,090
somewhere you see a lot of options there

977
00:41:00,810 --> 00:41:05,250
we went for something quite near to the

978
00:41:03,090 --> 00:41:07,020
door there's a plastic trash can liner

979
00:41:05,250 --> 00:41:09,690
and you couldn't put a sniffer set up

980
00:41:07,020 --> 00:41:12,359
right to the bottom of it so we thought

981
00:41:09,690 --> 00:41:14,369
okay let's put it there go to the other

982
00:41:12,359 --> 00:41:17,009
wise other side of the store and try

983
00:41:14,369 --> 00:41:19,980
this out and we figured the fitness

984
00:41:17,010 --> 00:41:21,840
center does not support ble we later

985
00:41:19,980 --> 00:41:23,310
found out in communication we see hotel

986
00:41:21,840 --> 00:41:25,140
which was very good by the way thank you

987
00:41:23,310 --> 00:41:27,750
for the general manager who we've

988
00:41:25,140 --> 00:41:29,368
replied good to our research it was

989
00:41:27,750 --> 00:41:31,050
vandalized for some reason it was out of

990
00:41:29,369 --> 00:41:33,660
service right when we wanted to try it

991
00:41:31,050 --> 00:41:35,430
oh my god so we were where else could we

992
00:41:33,660 --> 00:41:36,990
do it oh that's the elevator everybody

993
00:41:35,430 --> 00:41:39,089
who lives in a hotel like you all

994
00:41:36,990 --> 00:41:40,680
currently do knows if you go to an

995
00:41:39,090 --> 00:41:43,080
elevator you have to activate the

996
00:41:40,680 --> 00:41:46,529
elevator so people will do this visitor

997
00:41:43,080 --> 00:41:48,210
app of course and unlike a rumor fitness

998
00:41:46,530 --> 00:41:50,580
center if there's someone standing next

999
00:41:48,210 --> 00:41:52,230
to you in the elevator having a backpack

1000
00:41:50,580 --> 00:41:54,750
you wouldn't think he's currently

1001
00:41:52,230 --> 00:41:57,180
stealing your key so that's very like in

1002
00:41:54,750 --> 00:42:00,270
a possible attack and one thing we even

1003
00:41:57,180 --> 00:42:03,210
found out we realized this if we use our

1004
00:42:00,270 --> 00:42:05,970
simulator which imposes as a lock in the

1005
00:42:03,210 --> 00:42:08,700
elevator and just by heavenly Bluetooth

1006
00:42:05,970 --> 00:42:11,759
advertising the app of a user would

1007
00:42:08,700 --> 00:42:13,919
probably connect to our a paisa script

1008
00:42:11,760 --> 00:42:15,780
instead of the real lock so this attack

1009
00:42:13,920 --> 00:42:18,540
actually could be carried out without

1010
00:42:15,780 --> 00:42:20,400
any special hardware at all you just

1011
00:42:18,540 --> 00:42:22,560
need a standard Linux laptop or other

1012
00:42:20,400 --> 00:42:25,260
laptop with Bluetooth capabilities runs

1013
00:42:22,560 --> 00:42:26,880
a person script on it so here we run our

1014
00:42:25,260 --> 00:42:29,730
person simulator script tell him

1015
00:42:26,880 --> 00:42:32,040
imposed this lock and it really happy me

1016
00:42:29,730 --> 00:42:34,080
record as it seems the bottom the key

1017
00:42:32,040 --> 00:42:36,240
for us so this key again then can be

1018
00:42:34,080 --> 00:42:37,830
used to break into the room so that was

1019
00:42:36,240 --> 00:42:40,080
the point we said okay this is a real

1020
00:42:37,830 --> 00:42:42,420
thing we have to do a responsible

1021
00:42:40,080 --> 00:42:44,190
disclosure process because it could

1022
00:42:42,420 --> 00:42:48,270
actually harm people if it's getting in

1023
00:42:44,190 --> 00:42:50,910
a wider use so like in early April or

1024
00:42:48,270 --> 00:42:53,370
mid of April we contacted the vendor and

1025
00:42:50,910 --> 00:42:55,190
we have to say very luckily he directly

1026
00:42:53,370 --> 00:42:57,420
responded we know people who had other

1027
00:42:55,190 --> 00:42:59,430
communication with disclosure he had

1028
00:42:57,420 --> 00:43:00,840
really immediate response we put some

1029
00:42:59,430 --> 00:43:03,450
research into finding the right person

1030
00:43:00,840 --> 00:43:04,920
who to contact but he said yeah I'm the

1031
00:43:03,450 --> 00:43:07,259
right person please tell me more

1032
00:43:04,920 --> 00:43:09,480
we sent technical details to them they

1033
00:43:07,260 --> 00:43:11,430
thought about it said our technician

1034
00:43:09,480 --> 00:43:13,050
says that can't really works that way

1035
00:43:11,430 --> 00:43:16,200
but he somehow understand what we're

1036
00:43:13,050 --> 00:43:18,060
doing so we said ok believe me we did

1037
00:43:16,200 --> 00:43:20,220
within the real hotel it's not

1038
00:43:18,060 --> 00:43:22,920
theoretical and we sent our proof of

1039
00:43:20,220 --> 00:43:24,899
concept code so then he said ok obvious

1040
00:43:22,920 --> 00:43:27,660
a real Singh and started very well with

1041
00:43:24,900 --> 00:43:29,700
us beginning to discuss how do we work

1042
00:43:27,660 --> 00:43:32,069
on that and we really thankful he never

1043
00:43:29,700 --> 00:43:34,109
tried to prevent this closure and even

1044
00:43:32,070 --> 00:43:37,680
so this vulnerability currently is

1045
00:43:34,110 --> 00:43:39,810
unfixed so this is real all day here we

1046
00:43:37,680 --> 00:43:41,730
think it's not so dangerous because the

1047
00:43:39,810 --> 00:43:44,400
real user base as we have shown in a

1048
00:43:41,730 --> 00:43:46,530
show of hands is not so big so the real

1049
00:43:44,400 --> 00:43:49,140
danger is not here yet because they got

1050
00:43:46,530 --> 00:43:51,300
it very early so we can still discloses

1051
00:43:49,140 --> 00:43:53,009
here and the fixing is on the way I

1052
00:43:51,300 --> 00:43:55,350
think in the running of this month

1053
00:43:53,010 --> 00:43:57,080
probably hotels we have been in will be

1054
00:43:55,350 --> 00:44:00,029
fixed because the vendor very well

1055
00:43:57,080 --> 00:44:02,370
reacting to our disclosure but it's not

1056
00:44:00,030 --> 00:44:04,230
that easy the locks in the first hotel

1057
00:44:02,370 --> 00:44:06,230
we have been in there can be updated

1058
00:44:04,230 --> 00:44:09,840
online because of the very modern

1059
00:44:06,230 --> 00:44:12,270
high-rise hotels where a 6000 rooms or

1060
00:44:09,840 --> 00:44:14,610
something so they are online and can be

1061
00:44:12,270 --> 00:44:16,050
updated remotely it's a smaller hotel it

1062
00:44:14,610 --> 00:44:17,580
was like here's the hotel locks are

1063
00:44:16,050 --> 00:44:20,070
individually in the door they are not

1064
00:44:17,580 --> 00:44:22,529
connected so someone has to go from door

1065
00:44:20,070 --> 00:44:24,360
to door to door to upgrade them and that

1066
00:44:22,530 --> 00:44:25,950
only can start after the fix is

1067
00:44:24,360 --> 00:44:27,810
developed so this will take a little bit

1068
00:44:25,950 --> 00:44:29,970
more time and of course as we said

1069
00:44:27,810 --> 00:44:32,400
earlier there's multiple app vendors who

1070
00:44:29,970 --> 00:44:33,990
have to integrate this SDK it's not such

1071
00:44:32,400 --> 00:44:36,450
a vendor who's building the apps as

1072
00:44:33,990 --> 00:44:38,160
multiple parties involved so one lesson

1073
00:44:36,450 --> 00:44:39,549
we learned from the responsible

1074
00:44:38,160 --> 00:44:41,770
disclosure

1075
00:44:39,550 --> 00:44:44,440
and that is really important is that you

1076
00:44:41,770 --> 00:44:46,720
have not to only identify the vendor but

1077
00:44:44,440 --> 00:44:49,570
only see who is else involved in the

1078
00:44:46,720 --> 00:44:52,299
thing we found out there's multiple

1079
00:44:49,570 --> 00:44:54,520
parties building the apps there is

1080
00:44:52,300 --> 00:44:56,710
multiple hotel chains those hotel chains

1081
00:44:54,520 --> 00:44:58,360
around the hotel groups and our

1082
00:44:56,710 --> 00:45:02,070
responsibilities closure to the vendor

1083
00:44:58,360 --> 00:45:06,370
didn't immediately react in all of them

1084
00:45:02,070 --> 00:45:09,040
identifying those other parties actually

1085
00:45:06,370 --> 00:45:11,200
there we found out just last week that

1086
00:45:09,040 --> 00:45:13,480
there's another vendor who built

1087
00:45:11,200 --> 00:45:15,850
basically on the original design of the

1088
00:45:13,480 --> 00:45:19,150
sing another lock so they got a quite

1089
00:45:15,850 --> 00:45:22,620
short notice now but as we said it's an

1090
00:45:19,150 --> 00:45:24,670
early early stage of development so

1091
00:45:22,620 --> 00:45:26,400
that's really the lesson learned through

1092
00:45:24,670 --> 00:45:30,400
this communication do the research and

1093
00:45:26,400 --> 00:45:32,470
so our I would takeaways for this event

1094
00:45:30,400 --> 00:45:35,170
here is you should really know the Billy

1095
00:45:32,470 --> 00:45:38,410
link layer can be smooth reliable with

1096
00:45:35,170 --> 00:45:40,270
cheap tools so I'm not sure if the

1097
00:45:38,410 --> 00:45:42,730
people who design such protocol knew but

1098
00:45:40,270 --> 00:45:44,440
many probably did not really consider

1099
00:45:42,730 --> 00:45:46,450
this Bruce is really a saying to

1100
00:45:44,440 --> 00:45:49,030
consider it can be Smith don't rely on

1101
00:45:46,450 --> 00:45:51,580
the link layer do application crypto the

1102
00:45:49,030 --> 00:45:55,900
other thing is don't hide any secrets in

1103
00:45:51,580 --> 00:45:58,630
your app neither the algorithm nor keys

1104
00:45:55,900 --> 00:46:01,390
or anything like that if it's in the app

1105
00:45:58,630 --> 00:46:03,940
people can get it out you earlier seen

1106
00:46:01,390 --> 00:46:07,060
our reverse engineering possibilities

1107
00:46:03,940 --> 00:46:09,280
so whatever clicked try to build it in a

1108
00:46:07,060 --> 00:46:11,500
way you could publish everything just

1109
00:46:09,280 --> 00:46:14,110
the secrets key which I only notice the

1110
00:46:11,500 --> 00:46:17,500
user should secure it and to sing for

1111
00:46:14,110 --> 00:46:21,220
the research community or whatever also

1112
00:46:17,500 --> 00:46:23,770
as a security into this year being e is

1113
00:46:21,220 --> 00:46:25,839
not just padlocks or Chinese toys it's

1114
00:46:23,770 --> 00:46:28,240
more and more used in real world

1115
00:46:25,840 --> 00:46:30,250
applications and all of you and

1116
00:46:28,240 --> 00:46:32,740
hopefully you now can with following our

1117
00:46:30,250 --> 00:46:35,230
presentation should audit these things

1118
00:46:32,740 --> 00:46:36,790
that look into this more and I can just

1119
00:46:35,230 --> 00:46:39,850
say it again the slides will be online

1120
00:46:36,790 --> 00:46:41,440
there's lots of links in it so if you

1121
00:46:39,850 --> 00:46:43,900
couldn't follow everything now in this

1122
00:46:41,440 --> 00:46:46,210
very short runs through lots of various

1123
00:46:43,900 --> 00:46:48,700
concept look up the flights look up the

1124
00:46:46,210 --> 00:46:50,740
methods it's really not so hard to get

1125
00:46:48,700 --> 00:46:52,939
into we have multiple ways to attack sis

1126
00:46:50,740 --> 00:46:55,310
multiple layers you can go there

1127
00:46:52,940 --> 00:46:57,320
so it's really worth doing it and we

1128
00:46:55,310 --> 00:47:00,290
hope you enjoyed it and are going to

1129
00:46:57,320 --> 00:47:09,710
have fun with blue and P elements and

1130
00:47:00,290 --> 00:47:11,600
that our presentation so he actually

1131
00:47:09,710 --> 00:47:13,820
have like three minutes for questions so

1132
00:47:11,600 --> 00:47:15,890
please the people leaving now be quiet

1133
00:47:13,820 --> 00:47:17,210
so people wanting to ask questions can

1134
00:47:15,890 --> 00:47:20,180
go to the mics they have three minutes

1135
00:47:17,210 --> 00:47:22,880
for questions please feel free to cancel

1136
00:47:20,180 --> 00:47:24,859
or contractors yeah you have an email

1137
00:47:22,880 --> 00:47:27,500
letter C so if you're involved with any

1138
00:47:24,860 --> 00:47:29,270
vendor or anything if you worried so

1139
00:47:27,500 --> 00:47:31,190
just email to us this address probably

1140
00:47:29,270 --> 00:47:33,590
the next date or a Def Con so don't

1141
00:47:31,190 --> 00:47:35,270
expect an immediate answer but first the

1142
00:47:33,590 --> 00:47:41,680
direct option would be to go to the mics

1143
00:47:35,270 --> 00:47:50,330
and ask some questions it's hard to see

1144
00:47:41,680 --> 00:47:52,430
but just open slots so think we

1145
00:47:50,330 --> 00:47:55,220
overloaded you all at end of blackhead

1146
00:47:52,430 --> 00:48:00,080
here but it's the last slot so probably

1147
00:47:55,220 --> 00:48:01,700
that's acceptable or you couldn't also

1148
00:48:00,080 --> 00:48:04,250
just free close this here come to the

1149
00:48:01,700 --> 00:48:05,480
stage and we walk over to the developer

1150
00:48:04,250 --> 00:48:08,660
room where we can do some private

1151
00:48:05,480 --> 00:48:12,040
conversations okay thank you everyone

1152
00:48:08,660 --> 00:48:12,040
but some more questions

