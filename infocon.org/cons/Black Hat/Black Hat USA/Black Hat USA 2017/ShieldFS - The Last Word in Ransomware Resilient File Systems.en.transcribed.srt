1
00:00:00,030 --> 00:00:04,830
thank you for coming to our<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> we</font>

2
00:00:01,650 --> 00:00:07,589
really appreciate that<font color="#CCCCCC"> so if you're in</font>

3
00:00:04,830 --> 00:00:10,379
this<font color="#E5E5E5"> room</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> of you I think wouldn't</font>

4
00:00:07,589 --> 00:00:12,210
<font color="#E5E5E5">be surprised to</font><font color="#CCCCCC"> see this you've seen</font><font color="#E5E5E5"> it</font>

5
00:00:10,380 --> 00:00:14,099
in<font color="#E5E5E5"> the headlines that I mean this year</font>

6
00:00:12,210 --> 00:00:16,049
<font color="#E5E5E5">has been</font><font color="#CCCCCC"> pretty hot in terms of</font>

7
00:00:14,099 --> 00:00:18,448
<font color="#CCCCCC">ransomware right</font><font color="#E5E5E5"> so we've seen several</font>

8
00:00:16,049 --> 00:00:23,460
new families we've seen many campaigns

9
00:00:18,449 --> 00:00:24,930
very disruptive<font color="#E5E5E5"> so I hope you</font><font color="#CCCCCC"> agree with</font>

10
00:00:23,460 --> 00:00:27,689
me that this<font color="#E5E5E5"> has been</font><font color="#CCCCCC"> actually the year</font>

11
00:00:24,930 --> 00:00:32,189
of<font color="#E5E5E5"> exit of extortion right yeah so not</font>

12
00:00:27,689 --> 00:00:34,770
<font color="#CCCCCC">no sharks</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> also this might not come</font>

13
00:00:32,189 --> 00:00:38,340
<font color="#CCCCCC">as a surprise I mean</font><font color="#E5E5E5"> we have seen this</font>

14
00:00:34,770 --> 00:00:40,559
<font color="#E5E5E5">hopefully not on our laptops but in case</font>

15
00:00:38,340 --> 00:00:43,530
you had seen it<font color="#E5E5E5"> on your laptop</font><font color="#CCCCCC"> I hope</font>

16
00:00:40,559 --> 00:00:46,260
you hadn't cried too much<font color="#CCCCCC"> but in case</font>

17
00:00:43,530 --> 00:00:49,219
you had cried<font color="#E5E5E5"> please cry no more because</font>

18
00:00:46,260 --> 00:00:52,820
with this talk we're going to<font color="#E5E5E5"> show you a</font>

19
00:00:49,219 --> 00:00:56,309
<font color="#CCCCCC">anonymity</font><font color="#E5E5E5"> methodology that we have</font>

20
00:00:52,820 --> 00:00:58,579
prototyped<font color="#E5E5E5"> that will allow for you know</font>

21
00:00:56,309 --> 00:01:03,149
a better world<font color="#E5E5E5"> hopefully with less</font>

22
00:00:58,579 --> 00:01:08,070
successful infections<font color="#CCCCCC"> we've tested</font>

23
00:01:03,149 --> 00:01:10,200
<font color="#E5E5E5">shield FS on</font><font color="#CCCCCC"> wanna cry of course we</font>

24
00:01:08,070 --> 00:01:11,548
haven't<font color="#E5E5E5"> tested only on wanna cry</font><font color="#CCCCCC"> and one</font>

25
00:01:10,200 --> 00:01:13,350
<font color="#E5E5E5">of the things that we want</font><font color="#CCCCCC"> to point out</font>

26
00:01:11,549 --> 00:01:18,210
since<font color="#CCCCCC"> the beginning is that</font><font color="#E5E5E5"> there where</font>

27
00:01:13,350 --> 00:01:21,000
<font color="#E5E5E5">some files where when a cry succeeded so</font>

28
00:01:18,210 --> 00:01:23,429
in this<font color="#CCCCCC"> specific example</font><font color="#E5E5E5"> it managed</font><font color="#CCCCCC"> to</font>

29
00:01:21,000 --> 00:01:26,640
encrypt something<font color="#CCCCCC"> like two 200</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> so</font>

30
00:01:23,430 --> 00:01:28,290
<font color="#E5E5E5">it can change but anyways</font><font color="#CCCCCC"> so this is</font>

31
00:01:26,640 --> 00:01:30,960
<font color="#E5E5E5">okay I mean we embrace it</font>

32
00:01:28,290 --> 00:01:33,540
we accept<font color="#E5E5E5"> limitations of detection based</font>

33
00:01:30,960 --> 00:01:36,899
approaches and we go one<font color="#CCCCCC"> step one step</font>

34
00:01:33,540 --> 00:01:38,939
beyond and<font color="#CCCCCC"> we put a safe net another</font>

35
00:01:36,900 --> 00:01:42,030
another additional layer<font color="#CCCCCC"> of protection</font>

36
00:01:38,939 --> 00:01:44,309
that<font color="#E5E5E5"> was allowed to prevent all</font><font color="#CCCCCC"> of these</font>

37
00:01:42,030 --> 00:01:47,210
files to be lost forever<font color="#CCCCCC"> and that's</font>

38
00:01:44,310 --> 00:01:51,170
where that's why you see zero file loss

39
00:01:47,210 --> 00:01:53,339
<font color="#E5E5E5">no file were lost at the end of the day</font>

40
00:01:51,170 --> 00:01:55,560
<font color="#E5E5E5">we also tested of course on other</font>

41
00:01:53,340 --> 00:01:57,840
families<font color="#CCCCCC"> as I was saying</font><font color="#E5E5E5"> we tested it on</font>

42
00:01:55,560 --> 00:02:00,689
<font color="#E5E5E5">the major ones including one a cry yes</font>

43
00:01:57,840 --> 00:02:03,090
of course<font color="#E5E5E5"> and in most of the cases we</font>

44
00:02:00,689 --> 00:02:06,119
<font color="#CCCCCC">have successful detection in some cases</font>

45
00:02:03,090 --> 00:02:09,780
we hadn't but still we managed<font color="#CCCCCC"> to reach</font>

46
00:02:06,119 --> 00:02:11,690
<font color="#E5E5E5">0% file loss this is pretty exciting I</font>

47
00:02:09,780 --> 00:02:14,060
mean I'm really excited to present this

48
00:02:11,690 --> 00:02:16,609
<font color="#E5E5E5">because of this</font>

49
00:02:14,060 --> 00:02:19,280
so at this point I<font color="#E5E5E5"> guess that in your</font>

50
00:02:16,610 --> 00:02:21,349
mind there is one question<font color="#E5E5E5"> why is Shield</font>

51
00:02:19,280 --> 00:02:23,420
<font color="#E5E5E5">FS why this guy is telling as the shield</font>

52
00:02:21,349 --> 00:02:26,119
<font color="#CCCCCC">FS is so different</font><font color="#E5E5E5"> why is it making</font>

53
00:02:23,420 --> 00:02:31,010
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that maybe other other other</font>

54
00:02:26,120 --> 00:02:35,300
system<font color="#CCCCCC"> was</font><font color="#E5E5E5"> not able to do so</font><font color="#CCCCCC"> we've</font>

55
00:02:31,010 --> 00:02:37,910
started something like 11.5 years ago in

56
00:02:35,300 --> 00:02:41,150
this<font color="#E5E5E5"> research</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> there were already</font>

57
00:02:37,910 --> 00:02:43,459
other researchers observing how

58
00:02:41,150 --> 00:02:46,640
ransomware was interacting with<font color="#CCCCCC"> a file</font>

59
00:02:43,459 --> 00:02:49,160
system<font color="#CCCCCC"> and</font><font color="#E5E5E5"> one of the things that was</font>

60
00:02:46,640 --> 00:02:50,869
remarkable is that<font color="#E5E5E5"> ransomware was</font>

61
00:02:49,160 --> 00:02:53,540
interacting<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> file system</font><font color="#CCCCCC"> in a</font>

62
00:02:50,870 --> 00:02:56,120
<font color="#E5E5E5">pretty you know evident way so the file</font>

63
00:02:53,540 --> 00:02:58,720
system looked like the<font color="#CCCCCC"> perfect place to</font>

64
00:02:56,120 --> 00:03:01,459
<font color="#E5E5E5">observe ransomware behavior</font>

65
00:02:58,720 --> 00:03:05,000
we<font color="#E5E5E5"> went a little bit further than</font><font color="#CCCCCC"> that</font>

66
00:03:01,459 --> 00:03:07,130
<font color="#E5E5E5">and we observed that not only ransomware</font>

67
00:03:05,000 --> 00:03:09,620
is remarkable in the way it interacts

68
00:03:07,130 --> 00:03:11,810
with<font color="#CCCCCC"> the file system but also it</font><font color="#E5E5E5"> is</font>

69
00:03:09,620 --> 00:03:13,400
completely<font color="#CCCCCC"> different from how benign</font>

70
00:03:11,810 --> 00:03:17,900
<font color="#E5E5E5">application interacts with</font><font color="#CCCCCC"> the file</font>

71
00:03:13,400 --> 00:03:20,359
system<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> base this approach we base</font>

72
00:03:17,900 --> 00:03:22,130
<font color="#E5E5E5">this approach on this observation</font><font color="#CCCCCC"> base</font>

73
00:03:20,359 --> 00:03:25,700
files we base shield<font color="#E5E5E5"> FS on this</font>

74
00:03:22,130 --> 00:03:30,230
observation<font color="#CCCCCC"> and we exploit this idea in</font>

75
00:03:25,700 --> 00:03:32,839
two ways first for<font color="#E5E5E5"> detection we use this</font>

76
00:03:30,230 --> 00:03:35,420
criterion this observation to<font color="#E5E5E5"> discern</font>

77
00:03:32,840 --> 00:03:39,200
benign from when ransomware like

78
00:03:35,420 --> 00:03:41,899
processes in an<font color="#E5E5E5"> operating system we also</font>

79
00:03:39,200 --> 00:03:44,030
of course<font color="#CCCCCC"> inspect the memory of the</font>

80
00:03:41,900 --> 00:03:45,320
process<font color="#E5E5E5"> is to look for crypto primitives</font>

81
00:03:44,030 --> 00:03:47,320
just in case there<font color="#E5E5E5"> is some crypto</font>

82
00:03:45,320 --> 00:03:50,600
material in there is a further

83
00:03:47,320 --> 00:03:53,239
<font color="#E5E5E5">confirmation that it's it's a ransom or</font>

84
00:03:50,600 --> 00:03:56,569
like<font color="#E5E5E5"> behavior and then we exploit it for</font>

85
00:03:53,239 --> 00:04:00,019
the second part of our approach<font color="#E5E5E5"> that is</font>

86
00:03:56,569 --> 00:04:01,488
for<font color="#E5E5E5"> protection inside</font><font color="#CCCCCC"> our file system</font>

87
00:04:00,019 --> 00:04:03,739
<font color="#E5E5E5">because she'll the first you might have</font>

88
00:04:01,489 --> 00:04:05,989
<font color="#E5E5E5">understood from from</font><font color="#CCCCCC"> from now on that</font>

89
00:04:03,739 --> 00:04:09,290
it's actually a file system<font color="#E5E5E5"> from this</font>

90
00:04:05,989 --> 00:04:11,120
point on we also do protection embedded

91
00:04:09,290 --> 00:04:13,730
in the file system<font color="#E5E5E5"> in the sense that</font>

92
00:04:11,120 --> 00:04:17,168
whenever<font color="#E5E5E5"> our file system detects that</font>

93
00:04:13,730 --> 00:04:20,630
<font color="#E5E5E5">something is you know suspicious or</font>

94
00:04:17,168 --> 00:04:22,370
remarkably malicious<font color="#E5E5E5"> we do take an</font>

95
00:04:20,630 --> 00:04:24,530
additional protection in<font color="#E5E5E5"> order to save</font>

96
00:04:22,370 --> 00:04:26,390
those files<font color="#E5E5E5"> of course</font><font color="#CCCCCC"> now it</font><font color="#E5E5E5"> might look</font>

97
00:04:24,530 --> 00:04:27,760
a<font color="#CCCCCC"> little bit vague but</font><font color="#E5E5E5"> please bear with</font>

98
00:04:26,390 --> 00:04:33,860
us

99
00:04:27,760 --> 00:04:35,270
so great<font color="#E5E5E5"> now let's let me go you</font><font color="#CCCCCC"> two to</font>

100
00:04:33,860 --> 00:04:38,360
the first part of our<font color="#E5E5E5"> story that</font><font color="#CCCCCC"> is</font>

101
00:04:35,270 --> 00:04:41,719
where do we start<font color="#E5E5E5"> from to design</font><font color="#CCCCCC"> shield</font>

102
00:04:38,360 --> 00:04:43,550
<font color="#CCCCCC">FS so we started</font><font color="#E5E5E5"> from collecting from</font>

103
00:04:41,720 --> 00:04:46,250
collecting data<font color="#E5E5E5"> and the first</font><font color="#CCCCCC"> question</font>

104
00:04:43,550 --> 00:04:49,450
is where do we where do we look<font color="#CCCCCC"> where do</font>

105
00:04:46,250 --> 00:04:52,910
<font color="#E5E5E5">we observe our our traffic so to speak</font>

106
00:04:49,450 --> 00:04:55,550
<font color="#E5E5E5">our traffic is</font><font color="#CCCCCC"> actually a</font><font color="#E5E5E5"> file system</font><font color="#CCCCCC"> IO</font>

107
00:04:52,910 --> 00:04:58,010
<font color="#CCCCCC">so you can imagine</font><font color="#E5E5E5"> you can abstract the</font>

108
00:04:55,550 --> 00:05:01,850
file system<font color="#E5E5E5"> from from the bottom of the</font>

109
00:04:58,010 --> 00:05:04,640
<font color="#CCCCCC">user land as a basically a flow of IO</font>

110
00:05:01,850 --> 00:05:07,340
packet<font color="#E5E5E5"> request</font><font color="#CCCCCC"> I your request</font><font color="#E5E5E5"> packet</font>

111
00:05:04,640 --> 00:05:10,969
<font color="#E5E5E5">sorry or IRP and those are the the</font>

112
00:05:07,340 --> 00:05:14,150
smallest atomic units of<font color="#E5E5E5"> IO within the</font>

113
00:05:10,970 --> 00:05:17,060
windows file system<font color="#E5E5E5"> and there's actually</font>

114
00:05:14,150 --> 00:05:19,099
a pretty nice interface<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you're if you</font>

115
00:05:17,060 --> 00:05:22,010
want to develop a driver<font color="#E5E5E5"> that allows you</font>

116
00:05:19,100 --> 00:05:24,620
<font color="#E5E5E5">to hook up very well into that into that</font>

117
00:05:22,010 --> 00:05:27,020
<font color="#CCCCCC">position</font><font color="#E5E5E5"> that is called the mini driver</font>

118
00:05:24,620 --> 00:05:28,850
<font color="#CCCCCC">mini filter driver and that allows you</font>

119
00:05:27,020 --> 00:05:31,039
<font color="#CCCCCC">to see</font><font color="#E5E5E5"> basically everything and to</font>

120
00:05:28,850 --> 00:05:34,340
register callbacks for every event<font color="#E5E5E5"> that</font>

121
00:05:31,040 --> 00:05:36,140
you like for<font color="#CCCCCC"> example here you see the</font>

122
00:05:34,340 --> 00:05:39,320
<font color="#E5E5E5">the basic data structure that allows you</font>

123
00:05:36,140 --> 00:05:42,200
to<font color="#E5E5E5"> register callbacks for like before a</font>

124
00:05:39,320 --> 00:05:44,770
certain<font color="#CCCCCC"> event</font><font color="#E5E5E5"> before a certain</font><font color="#CCCCCC"> IO</font><font color="#E5E5E5"> after</font>

125
00:05:42,200 --> 00:05:48,349
certain<font color="#E5E5E5"> IO for example when a file is</font>

126
00:05:44,770 --> 00:05:50,359
created or when a file<font color="#CCCCCC"> is read</font><font color="#E5E5E5"> you can</font>

127
00:05:48,350 --> 00:05:52,850
you can use this kind of<font color="#E5E5E5"> callbacks in</font>

128
00:05:50,360 --> 00:05:54,920
<font color="#E5E5E5">order to</font><font color="#CCCCCC"> register and take action right</font>

129
00:05:52,850 --> 00:05:57,620
so you can do that<font color="#E5E5E5"> before</font><font color="#CCCCCC"> you see an</font><font color="#E5E5E5"> IO</font>

130
00:05:54,920 --> 00:06:00,620
or<font color="#E5E5E5"> after the IO goes down to the actual</font>

131
00:05:57,620 --> 00:06:03,260
file system for<font color="#CCCCCC"> example you can use</font><font color="#E5E5E5"> this</font>

132
00:06:00,620 --> 00:06:04,670
interface<font color="#E5E5E5"> to create to log the activity</font>

133
00:06:03,260 --> 00:06:07,390
on the<font color="#E5E5E5"> file system what you see on this</font>

134
00:06:04,670 --> 00:06:10,070
table from your left<font color="#E5E5E5"> to your right is</font>

135
00:06:07,390 --> 00:06:11,659
what you can register as an example<font color="#E5E5E5"> you</font>

136
00:06:10,070 --> 00:06:13,880
<font color="#E5E5E5">can register the</font><font color="#CCCCCC"> timestamp you</font><font color="#E5E5E5"> can</font>

137
00:06:11,660 --> 00:06:17,000
register the process ID you<font color="#CCCCCC"> can register</font>

138
00:06:13,880 --> 00:06:19,130
the process name any anything<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

139
00:06:17,000 --> 00:06:22,090
see flowing flowing down to the file

140
00:06:19,130 --> 00:06:27,110
system<font color="#CCCCCC"> the last one is the file path</font>

141
00:06:22,090 --> 00:06:29,869
<font color="#CCCCCC">just</font><font color="#E5E5E5"> one note one read operation or</font>

142
00:06:27,110 --> 00:06:31,970
write operation<font color="#E5E5E5"> can result in hundreds</font>

143
00:06:29,870 --> 00:06:34,220
or thousands of these<font color="#CCCCCC"> at your</font><font color="#E5E5E5"> pocket</font>

144
00:06:31,970 --> 00:06:35,720
<font color="#E5E5E5">request so if you if you're writing a</font>

145
00:06:34,220 --> 00:06:40,080
giant file you're<font color="#CCCCCC"> going to see many</font><font color="#E5E5E5"> of</font>

146
00:06:35,720 --> 00:06:42,919
<font color="#E5E5E5">this requests</font><font color="#CCCCCC"> so we start</font>

147
00:06:40,080 --> 00:06:47,789
with this tool set<font color="#E5E5E5"> in in our hands and</font>

148
00:06:42,919 --> 00:06:51,120
we<font color="#E5E5E5"> install such a logging agent into</font>

149
00:06:47,789 --> 00:06:53,729
clean machines<font color="#E5E5E5"> we had</font><font color="#CCCCCC"> 11 volunteers</font><font color="#E5E5E5"> that</font>

150
00:06:51,120 --> 00:06:57,180
allowed<font color="#E5E5E5"> us</font><font color="#CCCCCC"> to install</font><font color="#E5E5E5"> this agent on</font>

151
00:06:53,729 --> 00:06:59,580
their everyday machines<font color="#E5E5E5"> so this was not</font>

152
00:06:57,180 --> 00:07:01,710
a lab<font color="#E5E5E5"> experiment it was you know on real</font>

153
00:06:59,580 --> 00:07:05,099
machines that<font color="#E5E5E5"> people were</font><font color="#CCCCCC"> using for</font>

154
00:07:01,710 --> 00:07:08,190
their real activities every day<font color="#CCCCCC"> and we</font>

155
00:07:05,099 --> 00:07:12,120
ended up having<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> 2,000</font>

156
00:07:08,190 --> 00:07:14,340
worth of application data<font color="#CCCCCC"> these these</font>

157
00:07:12,120 --> 00:07:17,060
<font color="#E5E5E5">people were using collectively two</font>

158
00:07:14,340 --> 00:07:20,340
<font color="#E5E5E5">thousand and something more applications</font>

159
00:07:17,060 --> 00:07:23,310
<font color="#CCCCCC">as you can see from the</font><font color="#E5E5E5"> left column the</font>

160
00:07:20,340 --> 00:07:26,128
profiles of<font color="#E5E5E5"> the user were various we had</font>

161
00:07:23,310 --> 00:07:29,909
some developers and power<font color="#E5E5E5"> users some</font>

162
00:07:26,129 --> 00:07:32,219
office users<font color="#E5E5E5"> some home users</font><font color="#CCCCCC"> so a</font><font color="#E5E5E5"> good</font>

163
00:07:29,909 --> 00:07:35,940
variety we believe this resulted<font color="#E5E5E5"> in</font>

164
00:07:32,219 --> 00:07:38,669
something<font color="#E5E5E5"> like 1.7 billion euro packet</font>

165
00:07:35,940 --> 00:07:43,560
<font color="#E5E5E5">requests so a pretty juicy data set to</font>

166
00:07:38,669 --> 00:07:45,289
begin<font color="#E5E5E5"> secondly as I told we wanted to</font>

167
00:07:43,560 --> 00:07:47,940
understand also how ransomware

168
00:07:45,289 --> 00:07:50,009
<font color="#E5E5E5">interacted with the file system</font><font color="#CCCCCC"> so we</font>

169
00:07:47,940 --> 00:07:52,259
repeated the same experiment<font color="#E5E5E5"> this time</font>

170
00:07:50,009 --> 00:07:54,990
<font color="#CCCCCC">in a controlled environment because we</font>

171
00:07:52,259 --> 00:07:58,469
wanted<font color="#E5E5E5"> to control</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> infection</font><font color="#CCCCCC"> and so</font>

172
00:07:54,990 --> 00:08:01,169
we had<font color="#CCCCCC"> to use virtual machines</font><font color="#E5E5E5"> for this</font>

173
00:07:58,469 --> 00:08:03,690
we explore we<font color="#E5E5E5"> we use a cuckoo just</font>

174
00:08:01,169 --> 00:08:07,020
because it's very<font color="#E5E5E5"> nice for automation</font><font color="#CCCCCC"> so</font>

175
00:08:03,690 --> 00:08:10,529
we use<font color="#CCCCCC"> reduced</font><font color="#E5E5E5"> that and we installed I</font>

176
00:08:07,020 --> 00:08:12,719
think was<font color="#E5E5E5"> two years ago</font><font color="#CCCCCC"> so 2015 I mean</font>

177
00:08:10,529 --> 00:08:15,330
those<font color="#E5E5E5"> were the most prevalent</font><font color="#CCCCCC"> families</font>

178
00:08:12,719 --> 00:08:18,960
so that's what we used for for

179
00:08:15,330 --> 00:08:21,628
collecting data<font color="#CCCCCC"> an interesting point</font>

180
00:08:18,960 --> 00:08:24,359
<font color="#CCCCCC">here is that</font><font color="#E5E5E5"> well of course we are</font><font color="#CCCCCC"> all</font>

181
00:08:21,629 --> 00:08:27,659
<font color="#E5E5E5">aware that modern malware can evade</font>

182
00:08:24,360 --> 00:08:30,240
<font color="#E5E5E5">virtual machines</font><font color="#CCCCCC"> so we adopted all the</font>

183
00:08:27,659 --> 00:08:32,849
possible countermeasure for<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but on</font>

184
00:08:30,240 --> 00:08:35,820
top of that<font color="#E5E5E5"> ransomware poses a specific</font>

185
00:08:32,849 --> 00:08:39,209
<font color="#CCCCCC">challenge to this because it needs</font><font color="#E5E5E5"> to</font>

186
00:08:35,820 --> 00:08:42,329
have certain content on the machine<font color="#E5E5E5"> so</font>

187
00:08:39,208 --> 00:08:45,420
we put real files<font color="#CCCCCC"> I mean realistically</font>

188
00:08:42,328 --> 00:08:48,660
looking files we emulated the same

189
00:08:45,420 --> 00:08:50,880
directory tree<font color="#E5E5E5"> that we found on the 11</font>

190
00:08:48,660 --> 00:08:53,250
clean machines<font color="#E5E5E5"> so we kind of replicated</font>

191
00:08:50,880 --> 00:08:55,620
the environment of a real user we

192
00:08:53,250 --> 00:08:57,720
install browser extensions we<font color="#E5E5E5"> browse</font>

193
00:08:55,620 --> 00:08:59,760
<font color="#E5E5E5">through website in order</font><font color="#CCCCCC"> to collect</font><font color="#E5E5E5"> the</font>

194
00:08:57,720 --> 00:09:03,030
history<font color="#E5E5E5"> so we tried to make a</font>

195
00:08:59,760 --> 00:09:05,850
realistically looking<font color="#E5E5E5"> machine so</font><font color="#CCCCCC"> that</font>

196
00:09:03,030 --> 00:09:10,470
rain summer had triggers and then you

197
00:09:05,850 --> 00:09:15,200
know honey files<font color="#E5E5E5"> to to start great so at</font>

198
00:09:10,470 --> 00:09:17,430
this point we have clean traffic and

199
00:09:15,200 --> 00:09:19,740
brainstorm<font color="#E5E5E5"> or traffic I call it traffic</font>

200
00:09:17,430 --> 00:09:21,089
<font color="#E5E5E5">which it's actually traffic so now the</font>

201
00:09:19,740 --> 00:09:27,450
question<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how do we distinguish</font>

202
00:09:21,090 --> 00:09:29,580
between<font color="#CCCCCC"> R and summer-like or benign the</font>

203
00:09:27,450 --> 00:09:32,520
original<font color="#E5E5E5"> title of our work when we</font>

204
00:09:29,580 --> 00:09:35,580
conceived it was a self-healing

205
00:09:32,520 --> 00:09:37,710
ransomware<font color="#E5E5E5"> where a file system so before</font>

206
00:09:35,580 --> 00:09:39,690
<font color="#E5E5E5">going to the self-healing part</font><font color="#CCCCCC"> I want to</font>

207
00:09:37,710 --> 00:09:41,460
go to the ransomware<font color="#CCCCCC"> aware part so how</font>

208
00:09:39,690 --> 00:09:45,120
do<font color="#E5E5E5"> we make our file system ransomware</font>

209
00:09:41,460 --> 00:09:48,180
<font color="#E5E5E5">aware I'm gonna be showing</font><font color="#CCCCCC"> you a few of</font>

210
00:09:45,120 --> 00:09:51,000
these plots<font color="#CCCCCC"> so just to give</font><font color="#E5E5E5"> you a guide</font>

211
00:09:48,180 --> 00:09:52,829
to read them on the<font color="#CCCCCC"> horizontal axis you</font>

212
00:09:51,000 --> 00:09:55,920
see<font color="#E5E5E5"> a quantity it's going to be a</font>

213
00:09:52,830 --> 00:09:58,080
variable<font color="#E5E5E5"> from</font><font color="#CCCCCC"> 0 to 1</font><font color="#E5E5E5"> and on the</font><font color="#CCCCCC"> vertical</font>

214
00:09:55,920 --> 00:10:00,719
axis you're gonna see a frequency so how

215
00:09:58,080 --> 00:10:04,140
many<font color="#E5E5E5"> times how much how popular that</font>

216
00:10:00,720 --> 00:10:06,480
value is in our data set<font color="#E5E5E5"> so for</font><font color="#CCCCCC"> example</font>

217
00:10:04,140 --> 00:10:08,850
if you look here<font color="#E5E5E5"> we can divide it into</font>

218
00:10:06,480 --> 00:10:11,640
two quadrants<font color="#E5E5E5"> on the on the top right</font>

219
00:10:08,850 --> 00:10:14,790
you see<font color="#CCCCCC"> that many times</font><font color="#E5E5E5"> we see a high</font>

220
00:10:11,640 --> 00:10:18,150
value on the bottom left<font color="#E5E5E5"> few few times</font>

221
00:10:14,790 --> 00:10:21,900
we see a low value<font color="#E5E5E5"> and and the same for</font>

222
00:10:18,150 --> 00:10:24,420
the other two quadrants<font color="#CCCCCC"> the variables</font>

223
00:10:21,900 --> 00:10:27,600
that we<font color="#CCCCCC"> were</font><font color="#E5E5E5"> looking at for</font><font color="#CCCCCC"> example</font>

224
00:10:24,420 --> 00:10:29,819
where something like folder listing

225
00:10:27,600 --> 00:10:33,210
operations<font color="#E5E5E5"> so how</font><font color="#CCCCCC"> many times we have</font>

226
00:10:29,820 --> 00:10:35,910
<font color="#CCCCCC">seen in</font><font color="#E5E5E5"> our two data set a process doing</font>

227
00:10:33,210 --> 00:10:38,010
<font color="#E5E5E5">file a for the folder listing operations</font>

228
00:10:35,910 --> 00:10:40,770
<font color="#E5E5E5">and as you can</font><font color="#CCCCCC"> see the red the red</font>

229
00:10:38,010 --> 00:10:43,890
distribution<font color="#CCCCCC"> is shifted</font><font color="#E5E5E5"> towards higher</font>

230
00:10:40,770 --> 00:10:45,960
<font color="#CCCCCC">values that is an indication that</font>

231
00:10:43,890 --> 00:10:48,510
actually is an evidence that<font color="#E5E5E5"> says that</font>

232
00:10:45,960 --> 00:10:49,980
<font color="#E5E5E5">ransomware is doing harvesting this is</font>

233
00:10:48,510 --> 00:10:52,800
something that ransomware has to do

234
00:10:49,980 --> 00:10:55,530
before<font color="#E5E5E5"> starting to encrypt it has to</font>

235
00:10:52,800 --> 00:10:58,530
harvest the<font color="#CCCCCC"> fat of the</font><font color="#E5E5E5"> system right</font>

236
00:10:55,530 --> 00:11:01,079
similarly ransomware tends<font color="#E5E5E5"> to do more</font>

237
00:10:58,530 --> 00:11:02,970
reading operations<font color="#E5E5E5"> because it has to of</font>

238
00:11:01,080 --> 00:11:04,950
<font color="#E5E5E5">course read the files and then do</font>

239
00:11:02,970 --> 00:11:07,020
something<font color="#CCCCCC"> and then rewrite them back</font>

240
00:11:04,950 --> 00:11:09,120
that's<font color="#E5E5E5"> why we also see a</font>

241
00:11:07,020 --> 00:11:11,100
<font color="#CCCCCC">a change sorry another change with</font><font color="#E5E5E5"> a</font>

242
00:11:09,120 --> 00:11:15,210
difference in the<font color="#E5E5E5"> amount of</font><font color="#CCCCCC"> write</font>

243
00:11:11,100 --> 00:11:19,230
operations<font color="#CCCCCC"> in case</font><font color="#E5E5E5"> of rain summer versus</font>

244
00:11:15,210 --> 00:11:23,520
benign<font color="#CCCCCC"> where also</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> when</font>

245
00:11:19,230 --> 00:11:26,010
summer has a remarkable amount of file

246
00:11:23,520 --> 00:11:28,620
renaming operations<font color="#E5E5E5"> even</font><font color="#CCCCCC"> though this is</font>

247
00:11:26,010 --> 00:11:30,270
<font color="#CCCCCC">not required</font><font color="#E5E5E5"> for a ransom</font><font color="#CCCCCC"> er</font><font color="#E5E5E5"> the ransom</font>

248
00:11:28,620 --> 00:11:32,670
I<font color="#CCCCCC"> can get through this and obtain</font><font color="#E5E5E5"> the</font>

249
00:11:30,270 --> 00:11:34,140
same behavior<font color="#E5E5E5"> we have seen that in the</font>

250
00:11:32,670 --> 00:11:38,490
samples that we have<font color="#CCCCCC"> analyzed there is a</font>

251
00:11:34,140 --> 00:11:41,880
<font color="#E5E5E5">prevalence of renaming operations file</font>

252
00:11:38,490 --> 00:11:45,840
type coverage<font color="#E5E5E5"> has to do with how many</font>

253
00:11:41,880 --> 00:11:48,620
<font color="#E5E5E5">different file types</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> process is is</font>

254
00:11:45,840 --> 00:11:52,410
interacting with<font color="#E5E5E5"> if you take for example</font>

255
00:11:48,620 --> 00:11:53,880
<font color="#E5E5E5">word or I don't know</font><font color="#CCCCCC"> Photoshop they're</font>

256
00:11:52,410 --> 00:11:56,490
going to interact<font color="#E5E5E5"> with a very limited</font>

257
00:11:53,880 --> 00:11:58,980
amount<font color="#E5E5E5"> of file types right</font>

258
00:11:56,490 --> 00:12:01,470
whereas ransomware<font color="#CCCCCC"> as we know we have</font>

259
00:11:58,980 --> 00:12:03,840
there is<font color="#CCCCCC"> a long list</font><font color="#E5E5E5"> of files that is</font>

260
00:12:01,470 --> 00:12:06,540
targeting so if we look at the<font color="#CCCCCC"> diversity</font>

261
00:12:03,840 --> 00:12:08,880
of the file types that<font color="#E5E5E5"> are ransomware is</font>

262
00:12:06,540 --> 00:12:10,860
targeting we see that it's shifted

263
00:12:08,880 --> 00:12:13,020
towards higher value with<font color="#CCCCCC"> respect to a</font>

264
00:12:10,860 --> 00:12:17,000
typical benign application that only

265
00:12:13,020 --> 00:12:20,100
<font color="#E5E5E5">targets a few types of files file</font>

266
00:12:17,000 --> 00:12:22,680
<font color="#CCCCCC">entropy so</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> story right</font><font color="#E5E5E5"> entropy that</font>

267
00:12:20,100 --> 00:12:24,870
<font color="#CCCCCC">is the entropy of the content written</font><font color="#E5E5E5"> is</font>

268
00:12:22,680 --> 00:12:26,430
not<font color="#CCCCCC"> that remarkable if you think</font><font color="#E5E5E5"> I mean</font>

269
00:12:24,870 --> 00:12:27,990
if you look<font color="#E5E5E5"> at this it's</font><font color="#CCCCCC"> not as</font>

270
00:12:26,430 --> 00:12:30,199
remarkable as the previous ones there is

271
00:12:27,990 --> 00:12:32,940
<font color="#CCCCCC">no such</font><font color="#E5E5E5"> as such a huge difference</font><font color="#CCCCCC"> so</font>

272
00:12:30,200 --> 00:12:34,740
this one should<font color="#CCCCCC"> not be used alone like</font>

273
00:12:32,940 --> 00:12:35,880
if you look<font color="#E5E5E5"> at the entropy alone you're</font>

274
00:12:34,740 --> 00:12:40,020
<font color="#E5E5E5">gonna have a lot</font><font color="#CCCCCC"> of false positives</font>

275
00:12:35,880 --> 00:12:42,270
<font color="#E5E5E5">probably right</font><font color="#CCCCCC"> great</font><font color="#E5E5E5"> so now we have</font>

276
00:12:40,020 --> 00:12:45,060
about<font color="#CCCCCC"> 6 features actually 6</font><font color="#E5E5E5"> features</font>

277
00:12:42,270 --> 00:12:48,500
that we can<font color="#E5E5E5"> look at to tell to tell</font>

278
00:12:45,060 --> 00:12:51,180
apart<font color="#E5E5E5"> benign and malicious processes</font>

279
00:12:48,500 --> 00:12:53,010
great so what do<font color="#E5E5E5"> we do with this</font>

280
00:12:51,180 --> 00:12:54,569
of course this is<font color="#CCCCCC"> the era</font><font color="#E5E5E5"> of machine</font>

281
00:12:53,010 --> 00:12:57,660
learning<font color="#CCCCCC"> so why not using machine</font>

282
00:12:54,570 --> 00:13:02,400
learning<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a just a joke but we use</font>

283
00:12:57,660 --> 00:13:05,010
we<font color="#CCCCCC"> use machine</font><font color="#E5E5E5"> learning</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we train a</font>

284
00:13:02,400 --> 00:13:06,660
series of classifiers<font color="#CCCCCC"> they are custom</font>

285
00:13:05,010 --> 00:13:09,240
classifiers<font color="#CCCCCC"> in the sense that we</font><font color="#E5E5E5"> don't</font>

286
00:13:06,660 --> 00:13:12,719
use off-the-shelf classifiers we<font color="#E5E5E5"> combine</font>

287
00:13:09,240 --> 00:13:15,270
them in a<font color="#E5E5E5"> fairly complex way in order to</font>

288
00:13:12,720 --> 00:13:19,140
<font color="#E5E5E5">tell based on the traffic that we have</font>

289
00:13:15,270 --> 00:13:20,250
just<font color="#CCCCCC"> used whether there is indication</font><font color="#E5E5E5"> of</font>

290
00:13:19,140 --> 00:13:24,000
<font color="#E5E5E5">rain</font>

291
00:13:20,250 --> 00:13:25,920
somewhere or non<font color="#CCCCCC"> rent somewhere</font><font color="#E5E5E5"> so now</font>

292
00:13:24,000 --> 00:13:29,040
you have at least a<font color="#CCCCCC"> high-level view of</font>

293
00:13:25,920 --> 00:13:32,670
<font color="#E5E5E5">what the</font><font color="#CCCCCC"> rent somewhere</font><font color="#E5E5E5"> aware part of</font>

294
00:13:29,040 --> 00:13:35,030
shield<font color="#E5E5E5"> FS is now let's give you</font><font color="#CCCCCC"> a still</font>

295
00:13:32,670 --> 00:13:39,569
high level overview<font color="#CCCCCC"> of what we mean by</font>

296
00:13:35,030 --> 00:13:42,240
<font color="#E5E5E5">self-healing normally when you are</font>

297
00:13:39,570 --> 00:13:44,760
interacting with a normal system<font color="#CCCCCC"> without</font>

298
00:13:42,240 --> 00:13:47,010
shield FS installed<font color="#CCCCCC"> with</font><font color="#E5E5E5"> with no</font>

299
00:13:44,760 --> 00:13:50,010
protections installed<font color="#CCCCCC"> what happens is</font>

300
00:13:47,010 --> 00:13:53,970
when a<font color="#E5E5E5"> ransom or application encrypts or</font>

301
00:13:50,010 --> 00:13:56,819
damages or<font color="#CCCCCC"> offends</font><font color="#E5E5E5"> in a generic way a</font>

302
00:13:53,970 --> 00:13:59,730
file any other processes<font color="#CCCCCC"> that tries to</font>

303
00:13:56,820 --> 00:14:02,180
<font color="#CCCCCC">interact with</font><font color="#E5E5E5"> that file afterward it</font>

304
00:13:59,730 --> 00:14:06,090
will find of<font color="#E5E5E5"> course the encrypted file</font>

305
00:14:02,180 --> 00:14:08,699
<font color="#CCCCCC">if you instead look at the system where</font>

306
00:14:06,090 --> 00:14:13,910
<font color="#CCCCCC">shield the fess or equivalent is</font>

307
00:14:08,700 --> 00:14:18,360
installed<font color="#CCCCCC"> what we do is anytime</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> see a</font>

308
00:14:13,910 --> 00:14:21,240
write<font color="#CCCCCC"> operation on a file from</font><font color="#E5E5E5"> the first</font>

309
00:14:18,360 --> 00:14:24,839
time from a process that has not been

310
00:14:21,240 --> 00:14:27,450
cleared we save that<font color="#CCCCCC"> file</font><font color="#E5E5E5"> so every time</font>

311
00:14:24,839 --> 00:14:31,260
a<font color="#CCCCCC"> process which we don't know yet if</font>

312
00:14:27,450 --> 00:14:32,970
it's<font color="#CCCCCC"> malicious or</font><font color="#E5E5E5"> not it tries to issues</font>

313
00:14:31,260 --> 00:14:35,730
a write<font color="#CCCCCC"> operation which can possibly</font>

314
00:14:32,970 --> 00:14:38,940
<font color="#E5E5E5">change completely the file we save that</font>

315
00:14:35,730 --> 00:14:40,950
<font color="#E5E5E5">file before go before letting the</font><font color="#CCCCCC"> right</font>

316
00:14:38,940 --> 00:14:43,320
<font color="#CCCCCC">operation</font><font color="#E5E5E5"> through and this we can do it</font>

317
00:14:40,950 --> 00:14:44,910
thanks to<font color="#E5E5E5"> the mini filter API we save</font>

318
00:14:43,320 --> 00:14:48,270
<font color="#CCCCCC">that file and</font><font color="#E5E5E5"> then we let the operation</font>

319
00:14:44,910 --> 00:14:50,640
<font color="#CCCCCC">through so in case</font><font color="#E5E5E5"> we have a fresh and</font>

320
00:14:48,270 --> 00:14:53,790
you<font color="#E5E5E5"> know freshly made backup of that</font>

321
00:14:50,640 --> 00:14:56,520
<font color="#E5E5E5">file</font><font color="#CCCCCC"> I mean given like that is not you</font>

322
00:14:53,790 --> 00:14:59,069
know<font color="#E5E5E5"> super clear but now we say it's</font>

323
00:14:56,520 --> 00:15:00,600
<font color="#E5E5E5">time for digging int digging into this</font>

324
00:14:59,070 --> 00:15:03,450
<font color="#E5E5E5">and there is the main author of this</font>

325
00:15:00,600 --> 00:15:09,420
research so be very welcome<font color="#E5E5E5"> to swap</font>

326
00:15:03,450 --> 00:15:13,500
ourself<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> Thank You fati</font><font color="#E5E5E5"> for the</font>

327
00:15:09,420 --> 00:15:16,079
wonderful animation<font color="#E5E5E5"> no worries so now</font>

328
00:15:13,500 --> 00:15:19,800
we're going to work into<font color="#E5E5E5"> the details of</font>

329
00:15:16,080 --> 00:15:23,220
<font color="#E5E5E5">the internals of shield FS and let's</font>

330
00:15:19,800 --> 00:15:26,880
start from the detector component so as

331
00:15:23,220 --> 00:15:29,160
Federico briefly mentioned we use<font color="#CCCCCC"> the</font>

332
00:15:26,880 --> 00:15:33,240
set of detection<font color="#CCCCCC"> models that we obtain</font>

333
00:15:29,160 --> 00:15:36,089
by<font color="#E5E5E5"> training some custom classifiers</font>

334
00:15:33,240 --> 00:15:38,490
and we<font color="#E5E5E5"> train these classifiers starting</font>

335
00:15:36,089 --> 00:15:41,339
from the persistent features that

336
00:15:38,490 --> 00:15:45,180
political showed you and in particular

337
00:15:41,339 --> 00:15:47,970
we have two types of<font color="#E5E5E5"> models we have</font><font color="#CCCCCC"> a</font>

338
00:15:45,180 --> 00:15:50,910
<font color="#E5E5E5">first set of models</font><font color="#CCCCCC"> that we call process</font>

339
00:15:47,970 --> 00:15:53,720
centric ones that have<font color="#E5E5E5"> been trained by</font>

340
00:15:50,910 --> 00:15:57,540
looking at each process individually

341
00:15:53,720 --> 00:15:59,550
then instead we have another kind<font color="#E5E5E5"> of</font>

342
00:15:57,540 --> 00:16:02,390
model<font color="#CCCCCC"> that we call system centric one</font>

343
00:15:59,550 --> 00:16:04,890
that is that it<font color="#E5E5E5"> has been trained by</font>

344
00:16:02,390 --> 00:16:07,380
considering all the data<font color="#E5E5E5"> as coming from</font>

345
00:16:04,890 --> 00:16:10,709
<font color="#E5E5E5">a single large process that is actually</font>

346
00:16:07,380 --> 00:16:14,040
the<font color="#E5E5E5"> entire system</font><font color="#CCCCCC"> so this model in</font>

347
00:16:10,709 --> 00:16:16,469
comparison<font color="#CCCCCC"> to the other</font><font color="#E5E5E5"> one provides a</font>

348
00:16:14,040 --> 00:16:19,110
big<font color="#E5E5E5"> picture of the entire state</font><font color="#CCCCCC"> of the</font>

349
00:16:16,470 --> 00:16:24,240
system<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> is useful</font><font color="#CCCCCC"> for example in</font>

350
00:16:19,110 --> 00:16:26,010
<font color="#CCCCCC">cases of</font><font color="#E5E5E5"> multiple small work on the</font>

351
00:16:24,240 --> 00:16:30,029
other hand the system<font color="#CCCCCC"> CENTAC model can</font>

352
00:16:26,010 --> 00:16:33,510
have sat on higher false positive rate

353
00:16:30,029 --> 00:16:35,670
<font color="#E5E5E5">so we'll see in a bit</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> we combine</font>

354
00:16:33,510 --> 00:16:38,660
<font color="#CCCCCC">this model in a in a way that actually</font>

355
00:16:35,670 --> 00:16:41,459
<font color="#E5E5E5">can can make it more effective</font><font color="#CCCCCC"> and</font>

356
00:16:38,660 --> 00:16:44,160
<font color="#CCCCCC">another interesting peculiarities about</font>

357
00:16:41,459 --> 00:16:46,199
<font color="#E5E5E5">this detection</font><font color="#CCCCCC"> models is that we</font><font color="#E5E5E5"> don't</font>

358
00:16:44,160 --> 00:16:49,290
have<font color="#E5E5E5"> just a single model but we train</font>

359
00:16:46,200 --> 00:16:51,570
multiple classifiers<font color="#CCCCCC"> so as shown in this</font>

360
00:16:49,290 --> 00:16:54,180
picture<font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> training our</font>

361
00:16:51,570 --> 00:16:56,670
classifiers using the entire data that

362
00:16:54,180 --> 00:16:59,910
we collected we<font color="#E5E5E5"> splitted the data in</font>

363
00:16:56,670 --> 00:17:04,050
<font color="#CCCCCC">ticks</font><font color="#E5E5E5"> or intervals that are defined by</font>

364
00:16:59,910 --> 00:17:07,770
the percentage of accessed files<font color="#E5E5E5"> and for</font>

365
00:17:04,050 --> 00:17:11,520
each tick<font color="#E5E5E5"> we train different classifiers</font>

366
00:17:07,770 --> 00:17:13,349
<font color="#CCCCCC">and we</font><font color="#E5E5E5"> organize these models as shown in</font>

367
00:17:11,520 --> 00:17:17,819
<font color="#E5E5E5">this picture in what we call the multi</font>

368
00:17:13,349 --> 00:17:21,510
tire<font color="#E5E5E5"> incremental approach and this</font>

369
00:17:17,819 --> 00:17:26,369
organization<font color="#E5E5E5"> in this approach has mainly</font>

370
00:17:21,510 --> 00:17:29,160
two advantages first we have it can

371
00:17:26,369 --> 00:17:31,649
speed<font color="#CCCCCC"> up the detection</font><font color="#E5E5E5"> process this is</font>

372
00:17:29,160 --> 00:17:33,840
done because we have specialized

373
00:17:31,650 --> 00:17:37,080
classifiers<font color="#CCCCCC"> that are as I said</font>

374
00:17:33,840 --> 00:17:37,889
specialized for capturing the<font color="#CCCCCC"> behavior</font>

375
00:17:37,080 --> 00:17:41,820
of the<font color="#CCCCCC"> rancher</font>

376
00:17:37,890 --> 00:17:44,700
during a certain phase and also this is

377
00:17:41,820 --> 00:17:47,159
<font color="#E5E5E5">really effective in cases of code</font>

378
00:17:44,700 --> 00:17:50,100
injection<font color="#CCCCCC"> we know</font><font color="#E5E5E5"> that malware</font>

379
00:17:47,160 --> 00:17:52,560
<font color="#E5E5E5">they use such technique to inject</font>

380
00:17:50,100 --> 00:17:55,439
malicious code<font color="#E5E5E5"> into other processes so</font>

381
00:17:52,560 --> 00:17:58,040
we<font color="#CCCCCC"> have that</font><font color="#E5E5E5"> a process that has been</font>

382
00:17:55,440 --> 00:18:00,090
benign in the past may tend<font color="#E5E5E5"> to be</font>

383
00:17:58,040 --> 00:18:01,710
malicious in the future because a<font color="#CCCCCC"> run</font>

384
00:18:00,090 --> 00:18:05,520
<font color="#CCCCCC">swimmer inject malicious code into</font><font color="#E5E5E5"> it</font>

385
00:18:01,710 --> 00:18:08,460
<font color="#E5E5E5">and these</font><font color="#CCCCCC"> models are effective in this</font>

386
00:18:05,520 --> 00:18:10,710
in this<font color="#CCCCCC"> scenario</font><font color="#E5E5E5"> because they take into</font>

387
00:18:08,460 --> 00:18:14,030
account different different<font color="#CCCCCC"> arisin</font><font color="#E5E5E5"> in</font>

388
00:18:10,710 --> 00:18:16,740
the lifetime of<font color="#E5E5E5"> a process so we have</font>

389
00:18:14,030 --> 00:18:19,590
<font color="#CCCCCC">shorter model</font><font color="#E5E5E5"> like in this feature model</font>

390
00:18:16,740 --> 00:18:23,070
<font color="#E5E5E5">one</font><font color="#CCCCCC"> that takes into account only</font><font color="#E5E5E5"> the</font>

391
00:18:19,590 --> 00:18:25,290
recent<font color="#E5E5E5"> history of the process while we</font>

392
00:18:23,070 --> 00:18:27,030
have a global<font color="#E5E5E5"> model on the other hand</font>

393
00:18:25,290 --> 00:18:31,530
that instead taking<font color="#E5E5E5"> takes into account</font>

394
00:18:27,030 --> 00:18:33,450
<font color="#E5E5E5">the entire history of</font><font color="#CCCCCC"> our process so the</font>

395
00:18:31,530 --> 00:18:35,300
question is how frequently<font color="#CCCCCC"> we</font><font color="#E5E5E5"> ask these</font>

396
00:18:33,450 --> 00:18:40,020
<font color="#E5E5E5">classifiers for an answer</font>

397
00:18:35,300 --> 00:18:43,740
<font color="#E5E5E5">so during each tick we</font><font color="#CCCCCC"> Qui</font>

398
00:18:40,020 --> 00:18:45,720
these classifiers<font color="#E5E5E5"> simultaneously and the</font>

399
00:18:43,740 --> 00:18:49,920
difference is<font color="#CCCCCC"> that during the time when</font>

400
00:18:45,720 --> 00:18:51,780
<font color="#CCCCCC">ticks go on we reset</font><font color="#E5E5E5"> some of these</font>

401
00:18:49,920 --> 00:18:55,560
models<font color="#CCCCCC"> so in this case you can see</font><font color="#E5E5E5"> that</font>

402
00:18:51,780 --> 00:18:59,760
a tick one<font color="#E5E5E5"> model one just look at the</font>

403
00:18:55,560 --> 00:19:02,490
<font color="#E5E5E5">recent activity in</font><font color="#CCCCCC"> the lifetime of over</font>

404
00:18:59,760 --> 00:19:07,470
<font color="#E5E5E5">process and this of course goes on also</font>

405
00:19:02,490 --> 00:19:10,140
<font color="#E5E5E5">with the with the</font><font color="#CCCCCC"> other models</font><font color="#E5E5E5"> and at a</font>

406
00:19:07,470 --> 00:19:13,590
certain<font color="#CCCCCC"> point</font><font color="#E5E5E5"> we may end up in a</font>

407
00:19:10,140 --> 00:19:15,330
<font color="#CCCCCC">situation like</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> one in</font><font color="#E5E5E5"> which all</font><font color="#CCCCCC"> our</font>

408
00:19:13,590 --> 00:19:17,250
<font color="#CCCCCC">models says that a</font><font color="#E5E5E5"> process is malicious</font>

409
00:19:15,330 --> 00:19:21,179
we are pretty<font color="#E5E5E5"> sure</font><font color="#CCCCCC"> about it we can say</font>

410
00:19:17,250 --> 00:19:22,800
<font color="#CCCCCC">ok this this is</font><font color="#E5E5E5"> a run somewhere on the</font>

411
00:19:21,180 --> 00:19:27,180
other<font color="#E5E5E5"> hand we can have a</font><font color="#CCCCCC"> situation</font><font color="#E5E5E5"> like</font>

412
00:19:22,800 --> 00:19:29,399
this one where instead<font color="#E5E5E5"> all our detection</font>

413
00:19:27,180 --> 00:19:33,180
<font color="#E5E5E5">models agreed in saying that</font><font color="#CCCCCC"> approach</font><font color="#E5E5E5"> is</font>

414
00:19:29,400 --> 00:19:36,330
actually<font color="#E5E5E5"> benign but we can also have</font>

415
00:19:33,180 --> 00:19:40,470
instead<font color="#E5E5E5"> a situation in</font><font color="#CCCCCC"> which we are</font><font color="#E5E5E5"> a</font>

416
00:19:36,330 --> 00:19:42,629
bit confused<font color="#E5E5E5"> so our our classifiers are</font>

417
00:19:40,470 --> 00:19:45,390
not<font color="#E5E5E5"> pretty sure about the outcome of the</font>

418
00:19:42,630 --> 00:19:47,790
detection so what we can<font color="#E5E5E5"> do in in this</font>

419
00:19:45,390 --> 00:19:50,520
case we have a state in which we are we

420
00:19:47,790 --> 00:19:53,850
say that a process is suspicious and in

421
00:19:50,520 --> 00:19:57,389
this case we leverage the system centric

422
00:19:53,850 --> 00:19:59,909
model that I described before<font color="#E5E5E5"> so in this</font>

423
00:19:57,390 --> 00:20:00,840
case we<font color="#CCCCCC"> look at the big picture of the</font>

424
00:19:59,910 --> 00:20:03,659
<font color="#CCCCCC">system in</font>

425
00:20:00,840 --> 00:20:06,270
to have more<font color="#E5E5E5"> information about the</font>

426
00:20:03,659 --> 00:20:09,600
<font color="#E5E5E5">current state of the of the</font><font color="#CCCCCC"> protected</font>

427
00:20:06,270 --> 00:20:12,918
system and we<font color="#E5E5E5"> can also do something more</font>

428
00:20:09,600 --> 00:20:16,350
what we do is we look for<font color="#CCCCCC"> traces of</font>

429
00:20:12,919 --> 00:20:20,250
<font color="#CCCCCC">Krita functions used by bayi by the</font>

430
00:20:16,350 --> 00:20:24,178
process so<font color="#E5E5E5"> just a brief recap</font><font color="#CCCCCC"> we know</font>

431
00:20:20,250 --> 00:20:28,409
that most of run to<font color="#E5E5E5"> my families</font><font color="#CCCCCC"> nowadays</font>

432
00:20:24,179 --> 00:20:31,830
<font color="#E5E5E5">use block cipher block ciphers</font><font color="#CCCCCC"> they do</font>

433
00:20:28,409 --> 00:20:33,690
it because<font color="#CCCCCC"> they are fast</font><font color="#E5E5E5"> and the goal of</font>

434
00:20:31,830 --> 00:20:36,840
ransomware is to encrypt<font color="#E5E5E5"> all the files</font>

435
00:20:33,690 --> 00:20:38,789
of<font color="#E5E5E5"> the user as soon as possible because</font>

436
00:20:36,840 --> 00:20:42,809
they don't want to<font color="#E5E5E5"> then want the user to</font>

437
00:20:38,789 --> 00:20:48,000
notice that<font color="#CCCCCC"> their file are slowly being</font>

438
00:20:42,809 --> 00:20:51,240
encrypted<font color="#E5E5E5"> and block cipher block ciphers</font>

439
00:20:48,000 --> 00:20:54,330
work<font color="#CCCCCC"> in an iterative</font><font color="#E5E5E5"> way so they perform</font>

440
00:20:51,240 --> 00:20:56,760
<font color="#CCCCCC">different rounds of encryption</font><font color="#E5E5E5"> and for</font>

441
00:20:54,330 --> 00:20:59,639
each<font color="#E5E5E5"> round they need the key</font><font color="#CCCCCC"> to perform</font>

442
00:20:56,760 --> 00:21:03,330
the round encryption<font color="#E5E5E5"> so this means that</font>

443
00:20:59,640 --> 00:21:07,169
<font color="#E5E5E5">there</font><font color="#CCCCCC"> is a process that is</font><font color="#E5E5E5"> called</font><font color="#CCCCCC"> key</font>

444
00:21:03,330 --> 00:21:09,029
schedule that takes an input the user

445
00:21:07,169 --> 00:21:12,690
key so that<font color="#CCCCCC"> the key that</font><font color="#E5E5E5"> the user or the</font>

446
00:21:09,029 --> 00:21:15,840
developer provided the cipher<font color="#CCCCCC"> and from</font>

447
00:21:12,690 --> 00:21:18,480
that key there eat the rise<font color="#E5E5E5"> a set of sub</font>

448
00:21:15,840 --> 00:21:20,539
keys that<font color="#CCCCCC"> are used</font><font color="#E5E5E5"> each of</font><font color="#CCCCCC"> them unit in</font>

449
00:21:18,480 --> 00:21:24,059
a different round<font color="#CCCCCC"> during the encryption</font>

450
00:21:20,539 --> 00:21:29,270
and<font color="#CCCCCC"> these sub keys that</font><font color="#E5E5E5"> are generated</font>

451
00:21:24,059 --> 00:21:32,010
during<font color="#CCCCCC"> the key schedule are let's say</font>

452
00:21:29,270 --> 00:21:34,889
respect a mathematical relationship so

453
00:21:32,010 --> 00:21:37,049
the way these sub keys are<font color="#CCCCCC"> generated is</font>

454
00:21:34,890 --> 00:21:38,460
known<font color="#E5E5E5"> in deterministic of course it</font>

455
00:21:37,049 --> 00:21:40,408
depends on the<font color="#E5E5E5"> file on</font><font color="#CCCCCC"> the site</font><font color="#E5E5E5"> we are</font>

456
00:21:38,460 --> 00:21:42,350
using but there is a<font color="#E5E5E5"> mathematical</font>

457
00:21:40,409 --> 00:21:45,270
relationship<font color="#E5E5E5"> between these values and</font>

458
00:21:42,350 --> 00:21:48,270
these values<font color="#CCCCCC"> are</font><font color="#E5E5E5"> stored sequentially</font>

459
00:21:45,270 --> 00:21:51,870
memory for performing issues performance

460
00:21:48,270 --> 00:21:54,658
<font color="#E5E5E5">issues sorry</font><font color="#CCCCCC"> so what we can</font><font color="#E5E5E5"> do this is</font>

461
00:21:51,870 --> 00:21:58,350
the situation in which<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> we</font>

462
00:21:54,659 --> 00:22:01,470
can<font color="#CCCCCC"> find in memory all these values that</font>

463
00:21:58,350 --> 00:22:04,439
<font color="#E5E5E5">are related to to the different rounds</font>

464
00:22:01,470 --> 00:22:07,350
of encryption<font color="#CCCCCC"> and we can do what we can</font>

465
00:22:04,440 --> 00:22:09,780
do is look in<font color="#E5E5E5"> the memory of a process if</font>

466
00:22:07,350 --> 00:22:12,629
there is a sequence<font color="#CCCCCC"> of bytes</font><font color="#E5E5E5"> that</font>

467
00:22:09,780 --> 00:22:14,649
<font color="#E5E5E5">actually match the mathematical</font>

468
00:22:12,630 --> 00:22:16,600
relationship of the his schedule

469
00:22:14,650 --> 00:22:18,400
if we find<font color="#CCCCCC"> the</font><font color="#E5E5E5"> sequence of bytes we can</font>

470
00:22:16,600 --> 00:22:21,159
say okay this<font color="#CCCCCC"> is like</font><font color="#E5E5E5"> a schedule so it</font>

471
00:22:18,400 --> 00:22:23,080
means<font color="#CCCCCC"> that this process is using</font><font color="#E5E5E5"> a block</font>

472
00:22:21,160 --> 00:22:26,470
cipher<font color="#E5E5E5"> is using</font><font color="#CCCCCC"> it's performing</font>

473
00:22:23,080 --> 00:22:29,439
encryption so now you may<font color="#E5E5E5"> wonder yeah</font>

474
00:22:26,470 --> 00:22:33,160
but what about<font color="#E5E5E5"> you find randomly some</font>

475
00:22:29,440 --> 00:22:37,690
bytes that<font color="#E5E5E5"> match this</font><font color="#CCCCCC"> relationship well</font>

476
00:22:33,160 --> 00:22:41,460
the<font color="#E5E5E5"> probability of finding this scenario</font>

477
00:22:37,690 --> 00:22:46,570
is it's really really really low<font color="#E5E5E5"> for AES</font>

478
00:22:41,460 --> 00:22:48,220
<font color="#E5E5E5">that is the most spread block cipher</font><font color="#CCCCCC"> we</font>

479
00:22:46,570 --> 00:22:50,169
have that in the worst case the

480
00:22:48,220 --> 00:22:55,210
probability<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> false positive is</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> to</font>

481
00:22:50,170 --> 00:22:57,280
the<font color="#CCCCCC"> minus</font><font color="#E5E5E5"> 1344 so we can definitely say</font>

482
00:22:55,210 --> 00:23:00,730
that<font color="#E5E5E5"> this is impractical impractical</font>

483
00:22:57,280 --> 00:23:06,610
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> infeasible and it</font><font color="#E5E5E5"> probably will</font>

484
00:23:00,730 --> 00:23:10,090
<font color="#E5E5E5">never happen</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> now let's look how</font>

485
00:23:06,610 --> 00:23:13,540
all these components<font color="#E5E5E5"> are organized into</font>

486
00:23:10,090 --> 00:23:16,360
<font color="#E5E5E5">the architecture of shield FS here we</font>

487
00:23:13,540 --> 00:23:19,570
have our processes running in user space

488
00:23:16,360 --> 00:23:21,729
<font color="#E5E5E5">and we have the i/o manager provided by</font>

489
00:23:19,570 --> 00:23:23,950
the operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> that allows</font>

490
00:23:21,730 --> 00:23:26,740
processes to communicate with the<font color="#E5E5E5"> file</font>

491
00:23:23,950 --> 00:23:29,380
<font color="#CCCCCC">system and perform action on on the file</font>

492
00:23:26,740 --> 00:23:33,100
system<font color="#CCCCCC"> so reading</font><font color="#E5E5E5"> a file writing a file</font>

493
00:23:29,380 --> 00:23:36,640
and<font color="#E5E5E5"> so on and attached to</font><font color="#CCCCCC"> this i/o</font>

494
00:23:33,100 --> 00:23:40,600
<font color="#E5E5E5">manager</font><font color="#CCCCCC"> she'll FS present the detection</font>

495
00:23:36,640 --> 00:23:42,280
component so as we we already<font color="#E5E5E5"> saw we</font>

496
00:23:40,600 --> 00:23:44,530
have different models<font color="#E5E5E5"> we have the</font><font color="#CCCCCC"> post</font>

497
00:23:42,280 --> 00:23:47,080
centric models we have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> system</font>

498
00:23:44,530 --> 00:23:50,230
centric model<font color="#CCCCCC"> and we also have the equip</font>

499
00:23:47,080 --> 00:23:53,710
<font color="#CCCCCC">to find that can look at the</font><font color="#E5E5E5"> memory of a</font>

500
00:23:50,230 --> 00:23:58,360
process to spot any artifacts of<font color="#E5E5E5"> the use</font>

501
00:23:53,710 --> 00:23:59,950
of cryptographic primitives<font color="#E5E5E5"> and then we</font>

502
00:23:58,360 --> 00:24:02,320
also have what we<font color="#E5E5E5"> call</font><font color="#CCCCCC"> the shield ER</font>

503
00:23:59,950 --> 00:24:06,150
that<font color="#CCCCCC"> instead</font><font color="#E5E5E5"> is the module that protects</font>

504
00:24:02,320 --> 00:24:08,649
the user data<font color="#CCCCCC"> so it is the module</font><font color="#E5E5E5"> that</font>

505
00:24:06,150 --> 00:24:12,160
performs a copy before a file is

506
00:24:08,650 --> 00:24:13,660
overwritten<font color="#E5E5E5"> and it is able to</font>

507
00:24:12,160 --> 00:24:17,470
automatically<font color="#CCCCCC"> in transparently to the</font>

508
00:24:13,660 --> 00:24:20,010
<font color="#CCCCCC">end-user</font><font color="#E5E5E5"> restore the original files when</font>

509
00:24:17,470 --> 00:24:23,310
malicious activity has been detected

510
00:24:20,010 --> 00:24:26,230
<font color="#CCCCCC">here in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> picture</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> envision to have</font>

511
00:24:23,310 --> 00:24:28,090
secondary<font color="#E5E5E5"> drive so a shadow drive in</font>

512
00:24:26,230 --> 00:24:30,580
which we can store<font color="#E5E5E5"> our</font>

513
00:24:28,090 --> 00:24:37,139
our copies<font color="#E5E5E5"> but this is not a</font><font color="#CCCCCC"> fundamental</font>

514
00:24:30,580 --> 00:24:42,240
requirement<font color="#E5E5E5"> of our system and if we look</font>

515
00:24:37,140 --> 00:24:46,600
specifically to at this recovery and and

516
00:24:42,240 --> 00:24:49,980
protecting process<font color="#E5E5E5"> we can we can examine</font>

517
00:24:46,600 --> 00:24:52,629
the<font color="#CCCCCC"> file recovery workflow of our system</font>

518
00:24:49,980 --> 00:24:55,000
<font color="#CCCCCC">so we have</font><font color="#E5E5E5"> that at the beginning when a</font>

519
00:24:52,630 --> 00:24:58,080
process starts<font color="#E5E5E5"> she'll the first</font>

520
00:24:55,000 --> 00:25:01,600
considers it<font color="#CCCCCC"> asthma as unknown</font><font color="#E5E5E5"> because</font>

521
00:24:58,080 --> 00:25:05,620
it has it<font color="#E5E5E5"> has not enough</font><font color="#CCCCCC"> information to</font>

522
00:25:01,600 --> 00:25:08,409
say if it is<font color="#E5E5E5"> malicious or not so in this</font>

523
00:25:05,620 --> 00:25:12,550
state<font color="#E5E5E5"> the process is monitored by should</font>

524
00:25:08,410 --> 00:25:17,290
FS and<font color="#CCCCCC"> she'll FS</font><font color="#E5E5E5"> applies a</font><font color="#CCCCCC"> copyright</font>

525
00:25:12,550 --> 00:25:21,250
layer<font color="#E5E5E5"> to perform a copy of a file before</font>

526
00:25:17,290 --> 00:25:24,280
<font color="#CCCCCC">it</font><font color="#E5E5E5"> is overwritten</font><font color="#CCCCCC"> and notice that for</font>

527
00:25:21,250 --> 00:25:26,770
performance issues<font color="#CCCCCC"> we perform the copy</font>

528
00:25:24,280 --> 00:25:29,980
of<font color="#E5E5E5"> the file</font><font color="#CCCCCC"> just the</font><font color="#E5E5E5"> first time it is</font>

529
00:25:26,770 --> 00:25:32,700
<font color="#E5E5E5">modified then we keep this</font><font color="#CCCCCC"> copy in a</font>

530
00:25:29,980 --> 00:25:37,900
cache for<font color="#CCCCCC"> a certain</font><font color="#E5E5E5"> amount of time and</font>

531
00:25:32,700 --> 00:25:40,390
whenever so if a process overrides<font color="#E5E5E5"> so</font>

532
00:25:37,900 --> 00:25:43,240
modifies our file<font color="#E5E5E5"> multiple times in a</font>

533
00:25:40,390 --> 00:25:46,420
short<font color="#E5E5E5"> time multiple yeah</font><font color="#CCCCCC"> so ultimate</font>

534
00:25:43,240 --> 00:25:48,280
times in a short<font color="#CCCCCC"> time</font><font color="#E5E5E5"> we perform the</font>

535
00:25:46,420 --> 00:25:53,170
copy of the file just<font color="#CCCCCC"> does the first</font>

536
00:25:48,280 --> 00:25:56,290
time so then when when our detector has

537
00:25:53,170 --> 00:25:59,350
collected enough<font color="#E5E5E5"> information to say if a</font>

538
00:25:56,290 --> 00:26:01,540
process is<font color="#E5E5E5"> malicious or not we can</font><font color="#CCCCCC"> have</font>

539
00:25:59,350 --> 00:26:03,389
a<font color="#E5E5E5"> case in which we founded the process</font>

540
00:26:01,540 --> 00:26:06,550
malicious and in this<font color="#E5E5E5"> case we can</font>

541
00:26:03,390 --> 00:26:10,240
transparently<font color="#E5E5E5"> and automatically restore</font>

542
00:26:06,550 --> 00:26:12,010
the<font color="#CCCCCC"> original copies on the other hand we</font>

543
00:26:10,240 --> 00:26:15,460
have that if a process has<font color="#E5E5E5"> been detected</font>

544
00:26:12,010 --> 00:26:19,440
<font color="#E5E5E5">as has been identified as benign we can</font>

545
00:26:15,460 --> 00:26:22,150
clear the<font color="#CCCCCC"> DF copies this is not over</font>

546
00:26:19,440 --> 00:26:25,110
<font color="#CCCCCC">because this</font><font color="#E5E5E5"> is another step that</font><font color="#CCCCCC"> is</font>

547
00:26:22,150 --> 00:26:30,010
important<font color="#E5E5E5"> so whenever we say that a</font>

548
00:26:25,110 --> 00:26:33,520
process is<font color="#E5E5E5"> benign we then say that it is</font>

549
00:26:30,010 --> 00:26:36,070
unknown so this might sound weird for

550
00:26:33,520 --> 00:26:39,420
you<font color="#E5E5E5"> but if you think</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> still</font>

551
00:26:36,070 --> 00:26:42,010
<font color="#E5E5E5">related</font><font color="#CCCCCC"> to the code injection</font><font color="#E5E5E5"> scenario</font>

552
00:26:39,420 --> 00:26:43,930
so we<font color="#CCCCCC"> have that a process that as</font>

553
00:26:42,010 --> 00:26:46,240
detective as benign could<font color="#E5E5E5"> turn</font><font color="#CCCCCC"> to be</font>

554
00:26:43,930 --> 00:26:50,080
malicious<font color="#CCCCCC"> in the future because</font><font color="#E5E5E5"> run</font>

555
00:26:46,240 --> 00:26:51,970
<font color="#CCCCCC">summer inject malicious code</font><font color="#E5E5E5"> into it so</font>

556
00:26:50,080 --> 00:26:53,530
we have to enter this scenario and so

557
00:26:51,970 --> 00:26:56,710
whenever we say that<font color="#E5E5E5"> opposite is benign</font>

558
00:26:53,530 --> 00:27:00,850
<font color="#CCCCCC">then we we keep considering as unknown</font>

559
00:26:56,710 --> 00:27:03,130
and we keep monitoring its activity<font color="#E5E5E5"> and</font>

560
00:27:00,850 --> 00:27:07,000
just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quick thing if you're wondering</font>

561
00:27:03,130 --> 00:27:10,780
how much<font color="#E5E5E5"> this cost to the user</font><font color="#CCCCCC"> the</font>

562
00:27:07,000 --> 00:27:15,220
answer is just<font color="#E5E5E5"> a couple of cents in fact</font>

563
00:27:10,780 --> 00:27:19,440
we estimated the<font color="#E5E5E5"> storage overhead that</font>

564
00:27:15,220 --> 00:27:23,350
our tool imposed to<font color="#E5E5E5"> the end users by</font>

565
00:27:19,440 --> 00:27:26,310
<font color="#E5E5E5">estimating this overhead by looking at</font>

566
00:27:23,350 --> 00:27:28,810
the<font color="#E5E5E5"> data that we collected</font><font color="#CCCCCC"> from the</font>

567
00:27:26,310 --> 00:27:32,470
clean user that<font color="#E5E5E5"> we have been monitoring</font>

568
00:27:28,810 --> 00:27:37,179
<font color="#E5E5E5">for for a month and we found out that in</font>

569
00:27:32,470 --> 00:27:40,150
<font color="#E5E5E5">the worst case</font><font color="#CCCCCC"> Shield</font><font color="#E5E5E5"> FS required less</font>

570
00:27:37,180 --> 00:27:43,710
than 15 gigabytes<font color="#E5E5E5"> of additional storage</font>

571
00:27:40,150 --> 00:27:46,990
<font color="#E5E5E5">or if you want to look at the percentage</font>

572
00:27:43,710 --> 00:27:49,960
in comparison to<font color="#E5E5E5"> the total</font><font color="#CCCCCC"> amount</font><font color="#E5E5E5"> of</font>

573
00:27:46,990 --> 00:27:55,090
storage<font color="#E5E5E5"> present in the machine the</font>

574
00:27:49,960 --> 00:27:57,190
overhead is less than<font color="#CCCCCC"> nine</font><font color="#E5E5E5"> percent all</font>

575
00:27:55,090 --> 00:28:00,010
<font color="#E5E5E5">right so now you</font><font color="#CCCCCC"> probably want to see</font>

576
00:27:57,190 --> 00:28:03,210
some more<font color="#E5E5E5"> numbers about</font><font color="#CCCCCC"> the tests the</font>

577
00:28:00,010 --> 00:28:06,730
<font color="#CCCCCC">tests and</font><font color="#E5E5E5"> evaluation of</font><font color="#CCCCCC"> Sheila Fez and</font>

578
00:28:03,210 --> 00:28:10,530
<font color="#E5E5E5">first of all we evaluated the detection</font>

579
00:28:06,730 --> 00:28:16,980
<font color="#CCCCCC">or recovery capability of CFS so we used</font>

580
00:28:10,530 --> 00:28:19,930
almost<font color="#CCCCCC"> 1,500</font><font color="#E5E5E5"> samples and these samples</font>

581
00:28:16,980 --> 00:28:22,840
<font color="#E5E5E5">have never been seen during the training</font>

582
00:28:19,930 --> 00:28:26,500
phase so samples<font color="#E5E5E5"> completely new and</font>

583
00:28:22,840 --> 00:28:29,139
unseen by our detection<font color="#E5E5E5"> models here you</font>

584
00:28:26,500 --> 00:28:33,580
can see also<font color="#E5E5E5"> some some</font><font color="#CCCCCC"> families of these</font>

585
00:28:29,140 --> 00:28:37,680
samples<font color="#E5E5E5"> and even more interesting you</font>

586
00:28:33,580 --> 00:28:41,889
<font color="#CCCCCC">can</font><font color="#E5E5E5"> see here that most of these</font><font color="#CCCCCC"> families</font>

587
00:28:37,680 --> 00:28:44,800
were<font color="#E5E5E5"> not present in our training</font><font color="#CCCCCC"> set so</font>

588
00:28:41,890 --> 00:28:47,890
in our training<font color="#CCCCCC"> set there was no sample</font>

589
00:28:44,800 --> 00:28:50,980
of these families this<font color="#E5E5E5"> means that our</font>

590
00:28:47,890 --> 00:28:53,170
<font color="#E5E5E5">detection</font><font color="#CCCCCC"> models are generic</font><font color="#E5E5E5"> enough also</font>

591
00:28:50,980 --> 00:28:55,430
to detect different kind of random

592
00:28:53,170 --> 00:28:57,770
activity of different families

593
00:28:55,430 --> 00:29:00,320
and in fact we achieved a pretty<font color="#E5E5E5"> good</font>

594
00:28:57,770 --> 00:29:03,490
result<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> good detection rate</font><font color="#CCCCCC"> at is</font>

595
00:29:00,320 --> 00:29:07,550
<font color="#E5E5E5">ninety ninety six point nine</font><font color="#CCCCCC"> percent</font><font color="#E5E5E5"> but</font>

596
00:29:03,490 --> 00:29:11,240
<font color="#CCCCCC">even better</font><font color="#E5E5E5"> we found that in all our</font>

597
00:29:07,550 --> 00:29:13,550
<font color="#E5E5E5">tests</font><font color="#CCCCCC"> the files that that have always</font>

598
00:29:11,240 --> 00:29:16,340
been<font color="#E5E5E5"> protected by she'd FS so there was</font>

599
00:29:13,550 --> 00:29:19,430
no file<font color="#E5E5E5"> loss during the execution of</font>

600
00:29:16,340 --> 00:29:21,439
this<font color="#CCCCCC"> consumer</font><font color="#E5E5E5"> even in the case of a miss</font>

601
00:29:19,430 --> 00:29:24,640
detection<font color="#E5E5E5"> what does it mean it means</font>

602
00:29:21,440 --> 00:29:26,990
that<font color="#E5E5E5"> the difference is</font><font color="#CCCCCC"> that in the case</font>

603
00:29:24,640 --> 00:29:29,480
<font color="#E5E5E5">process is</font><font color="#CCCCCC"> coated</font><font color="#E5E5E5"> to detect that</font><font color="#CCCCCC"> she'll</font>

604
00:29:26,990 --> 00:29:31,610
<font color="#CCCCCC">FS can automatically and</font><font color="#E5E5E5"> transparently</font>

605
00:29:29,480 --> 00:29:35,059
to the end-user<font color="#CCCCCC"> restore the original</font>

606
00:29:31,610 --> 00:29:38,000
<font color="#E5E5E5">copies on the other hand if in the case</font>

607
00:29:35,059 --> 00:29:41,178
<font color="#E5E5E5">of a miss detection this cannot happen</font>

608
00:29:38,000 --> 00:29:43,010
but still<font color="#E5E5E5"> we have the copies</font><font color="#CCCCCC"> of the</font>

609
00:29:41,179 --> 00:29:45,530
original files in<font color="#CCCCCC"> our secure storage</font><font color="#E5E5E5"> and</font>

610
00:29:43,010 --> 00:29:48,860
if the user when the user notice the

611
00:29:45,530 --> 00:29:54,740
infection can recover the files

612
00:29:48,860 --> 00:29:57,439
automatically<font color="#E5E5E5"> manually sorry we also</font>

613
00:29:54,740 --> 00:30:00,230
evaluated the false positives of our

614
00:29:57,440 --> 00:30:02,840
detector<font color="#CCCCCC"> and to do so we used a</font>

615
00:30:00,230 --> 00:30:06,530
technique<font color="#CCCCCC"> called</font><font color="#E5E5E5"> one machine of</font>

616
00:30:02,840 --> 00:30:09,620
cross-validation<font color="#CCCCCC"> so basically we took</font>

617
00:30:06,530 --> 00:30:12,590
off<font color="#E5E5E5"> the data of one of our</font><font color="#CCCCCC"> eleven</font>

618
00:30:09,620 --> 00:30:14,780
machines from from our<font color="#E5E5E5"> training set we</font>

619
00:30:12,590 --> 00:30:17,510
<font color="#CCCCCC">trained the models and then</font><font color="#E5E5E5"> we test the</font>

620
00:30:14,780 --> 00:30:19,940
models against the<font color="#E5E5E5"> machine that we took</font>

621
00:30:17,510 --> 00:30:22,280
off<font color="#CCCCCC"> from our training</font><font color="#E5E5E5"> set and we</font>

622
00:30:19,940 --> 00:30:24,679
repeated this<font color="#CCCCCC"> process for all the eleven</font>

623
00:30:22,280 --> 00:30:27,290
machines you can<font color="#CCCCCC"> see here in this</font><font color="#E5E5E5"> table</font>

624
00:30:24,679 --> 00:30:29,270
the results of our evaluation and if you

625
00:30:27,290 --> 00:30:31,520
look at the outcome table<font color="#E5E5E5"> you can see</font>

626
00:30:29,270 --> 00:30:35,059
that in nine cases we did<font color="#E5E5E5"> not have any</font>

627
00:30:31,520 --> 00:30:37,250
false positive<font color="#E5E5E5"> and in the other two</font>

628
00:30:35,059 --> 00:30:37,670
cases we really really low false

629
00:30:37,250 --> 00:30:42,470
positive

630
00:30:37,670 --> 00:30:45,440
so<font color="#CCCCCC"> 0.26 twenty-seventh sorry and 0.15</font>

631
00:30:42,470 --> 00:30:48,950
percent and also<font color="#CCCCCC"> you can see</font><font color="#E5E5E5"> in this</font>

632
00:30:45,440 --> 00:30:51,670
table<font color="#CCCCCC"> that is interesting that</font><font color="#E5E5E5"> while</font>

633
00:30:48,950 --> 00:30:54,440
this system centric model<font color="#CCCCCC"> alone as</font>

634
00:30:51,670 --> 00:30:56,990
generally higher false positives the

635
00:30:54,440 --> 00:30:59,600
combination between the process<font color="#CCCCCC"> centric</font>

636
00:30:56,990 --> 00:31:05,440
models and the system centric one can

637
00:30:59,600 --> 00:31:09,050
get us better<font color="#CCCCCC"> results</font><font color="#E5E5E5"> so then we</font><font color="#CCCCCC"> also</font>

638
00:31:05,440 --> 00:31:13,700
evaluated<font color="#E5E5E5"> the performance</font>

639
00:31:09,050 --> 00:31:16,610
impact<font color="#E5E5E5"> of our over tool so</font><font color="#CCCCCC"> we perform</font>

640
00:31:13,700 --> 00:31:18,590
<font color="#CCCCCC">some micro micro benchmark</font><font color="#E5E5E5"> and we</font>

641
00:31:16,610 --> 00:31:22,040
identify three<font color="#CCCCCC"> scenarios that we</font>

642
00:31:18,590 --> 00:31:24,260
evaluated for measuring<font color="#E5E5E5"> this</font><font color="#CCCCCC"> overhead</font>

643
00:31:22,040 --> 00:31:28,879
and the first scenario<font color="#E5E5E5"> is when a file is</font>

644
00:31:24,260 --> 00:31:31,309
<font color="#E5E5E5">open and then</font><font color="#CCCCCC"> read</font><font color="#E5E5E5"> then we have when</font>

645
00:31:28,880 --> 00:31:33,320
when a file<font color="#E5E5E5"> is open and written</font><font color="#CCCCCC"> for the</font>

646
00:31:31,309 --> 00:31:35,870
first time<font color="#E5E5E5"> so in this case she'll the</font>

647
00:31:33,320 --> 00:31:41,059
<font color="#CCCCCC">first performs a copy of the file before</font>

648
00:31:35,870 --> 00:31:44,770
letting<font color="#E5E5E5"> the</font><font color="#CCCCCC"> write operation</font><font color="#E5E5E5"> through and</font>

649
00:31:41,059 --> 00:31:48,530
then we also have further<font color="#E5E5E5"> open</font><font color="#CCCCCC"> bright</font>

650
00:31:44,770 --> 00:31:50,540
operations in which the the file has

651
00:31:48,530 --> 00:31:52,280
<font color="#CCCCCC">been already</font><font color="#E5E5E5"> copied so we have the copy</font>

652
00:31:50,540 --> 00:31:55,240
<font color="#E5E5E5">encash and we don't need to perform</font>

653
00:31:52,280 --> 00:31:58,990
<font color="#E5E5E5">another another copy and the results are</font>

654
00:31:55,240 --> 00:32:01,370
good in the first and the last<font color="#CCCCCC"> scenario</font>

655
00:31:58,990 --> 00:32:03,500
but you can see here<font color="#E5E5E5"> that these</font><font color="#CCCCCC"> are</font>

656
00:32:01,370 --> 00:32:06,860
quite<font color="#E5E5E5"> high overhead in the second</font>

657
00:32:03,500 --> 00:32:08,330
scenario<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> of course view to the</font>

658
00:32:06,860 --> 00:32:13,159
fact that Sheila<font color="#CCCCCC"> Fest is performing a</font>

659
00:32:08,330 --> 00:32:15,500
copy of the file<font color="#E5E5E5"> however we did</font><font color="#CCCCCC"> not</font>

660
00:32:13,160 --> 00:32:17,950
<font color="#E5E5E5">perceive such a big overhead while we</font>

661
00:32:15,500 --> 00:32:23,200
were using machines in which we stalled

662
00:32:17,950 --> 00:32:28,730
<font color="#E5E5E5">Sheila</font><font color="#CCCCCC"> Fez so we tried instead</font><font color="#E5E5E5"> to</font>

663
00:32:23,200 --> 00:32:32,500
estimate and compute the<font color="#CCCCCC"> real overhead</font>

664
00:32:28,730 --> 00:32:35,150
perceived by the users and<font color="#CCCCCC"> to do so we</font>

665
00:32:32,500 --> 00:32:39,080
<font color="#E5E5E5">leveraged the the data that we collected</font>

666
00:32:35,150 --> 00:32:41,059
from<font color="#E5E5E5"> the clean users so we aggregate</font>

667
00:32:39,080 --> 00:32:44,449
aggregated the<font color="#CCCCCC"> ILP logs that we</font>

668
00:32:41,059 --> 00:32:48,250
collected into a sequence of file system

669
00:32:44,450 --> 00:32:50,929
system calls<font color="#E5E5E5"> and we map this this</font>

670
00:32:48,250 --> 00:32:53,660
sequence to<font color="#E5E5E5"> the three scenarios that I</font>

671
00:32:50,929 --> 00:32:58,520
<font color="#E5E5E5">showed you</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> in this way</font><font color="#CCCCCC"> we were</font>

672
00:32:53,660 --> 00:33:02,960
able<font color="#E5E5E5"> to estimate the user perceived</font>

673
00:32:58,520 --> 00:33:09,050
overhead<font color="#E5E5E5"> that in this case is on average</font>

674
00:33:02,960 --> 00:33:11,679
<font color="#E5E5E5">about</font><font color="#CCCCCC"> 26% it is</font><font color="#E5E5E5"> definitely lower than in</font>

675
00:33:09,050 --> 00:33:15,800
the<font color="#E5E5E5"> previous case and also acceptable</font>

676
00:33:11,679 --> 00:33:20,480
acceptable by<font color="#E5E5E5"> the user</font><font color="#CCCCCC"> all right so now</font>

677
00:33:15,800 --> 00:33:22,629
we have a little live demo window<font color="#E5E5E5"> a test</font>

678
00:33:20,480 --> 00:33:27,580
<font color="#CCCCCC">Sheila fess against</font>

679
00:33:22,630 --> 00:33:30,279
<font color="#CCCCCC">when I cry I try this demo like 20 times</font>

680
00:33:27,580 --> 00:33:33,309
so I don't<font color="#CCCCCC"> see</font><font color="#E5E5E5"> any reason why</font><font color="#CCCCCC"> I</font>

681
00:33:30,279 --> 00:33:36,460
shouldn't work but<font color="#E5E5E5"> in in case I have a</font>

682
00:33:33,309 --> 00:33:38,408
bag<font color="#CCCCCC"> of videos or don't worry</font><font color="#E5E5E5"> and the</font>

683
00:33:36,460 --> 00:33:41,289
<font color="#E5E5E5">interesting part here is</font><font color="#CCCCCC"> that I'm using</font>

684
00:33:38,409 --> 00:33:42,940
a machine that we<font color="#CCCCCC"> use for our initial</font>

685
00:33:41,289 --> 00:33:44,620
<font color="#E5E5E5">experiments in 2016</font>

686
00:33:42,940 --> 00:33:49,720
<font color="#E5E5E5">so I'm gonna stop this machine from a</font>

687
00:33:44,620 --> 00:33:52,360
snapshot that<font color="#E5E5E5"> is February 2016 while we</font>

688
00:33:49,720 --> 00:33:55,600
know that<font color="#CCCCCC"> one a cry has been released</font>

689
00:33:52,360 --> 00:33:58,740
<font color="#CCCCCC">just a couple of couple of months ago</font><font color="#E5E5E5"> so</font>

690
00:33:55,600 --> 00:34:02,439
this shows that<font color="#E5E5E5"> our detection models</font><font color="#CCCCCC"> are</font>

691
00:33:58,740 --> 00:34:10,089
generic and<font color="#E5E5E5"> can detect even unseen new</font>

692
00:34:02,440 --> 00:34:13,859
malware<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so first of all I'm</font>

693
00:34:10,089 --> 00:34:13,859
gonna<font color="#E5E5E5"> download</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> sample</font>

694
00:34:25,030 --> 00:34:31,330
<font color="#E5E5E5">okay as you</font><font color="#CCCCCC"> can see also the certificate</font>

695
00:34:27,909 --> 00:34:35,250
check failed because<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the timestamp of</font>

696
00:34:31,330 --> 00:34:35,250
<font color="#CCCCCC">the machine that</font><font color="#E5E5E5"> is from 2016</font>

697
00:34:58,310 --> 00:35:11,750
<font color="#CCCCCC">all right so here</font><font color="#E5E5E5"> is our sample before</font>

698
00:35:07,760 --> 00:35:14,560
<font color="#CCCCCC">in fact</font><font color="#E5E5E5"> in the machine</font><font color="#CCCCCC"> I'm gonna show</font>

699
00:35:11,750 --> 00:35:17,030
you some decoy files that we place in

700
00:35:14,560 --> 00:35:21,920
<font color="#E5E5E5">the machine and I'm gonna hope in this</font>

701
00:35:17,030 --> 00:35:24,920
tool that<font color="#E5E5E5"> allows us</font><font color="#CCCCCC"> to see</font><font color="#E5E5E5"> the logs</font>

702
00:35:21,920 --> 00:35:27,290
generated by kernel drivers so we're

703
00:35:24,920 --> 00:35:32,330
<font color="#E5E5E5">gonna see the log produced by</font><font color="#CCCCCC"> LFS during</font>

704
00:35:27,290 --> 00:35:34,100
its activity now<font color="#E5E5E5"> I'm gonna infect the</font>

705
00:35:32,330 --> 00:35:36,500
machine<font color="#E5E5E5"> but before doing this for I'm</font>

706
00:35:34,100 --> 00:35:39,140
gonna shut down<font color="#E5E5E5"> the network so your</font>

707
00:35:36,500 --> 00:35:50,380
<font color="#CCCCCC">laptop's are fine</font><font color="#E5E5E5"> I'm not gonna infect</font>

708
00:35:39,140 --> 00:35:53,629
you<font color="#CCCCCC"> ok these are the typical files</font>

709
00:35:50,380 --> 00:36:03,500
produced<font color="#CCCCCC"> by wanna cry when</font><font color="#E5E5E5"> when it</font>

710
00:35:53,630 --> 00:36:05,960
starts<font color="#E5E5E5"> and we can see here that there is</font>

711
00:36:03,500 --> 00:36:11,390
<font color="#E5E5E5">a process that is performing a lot of</font>

712
00:36:05,960 --> 00:36:13,670
operation<font color="#CCCCCC"> on the disk so it</font><font color="#E5E5E5"> it's reading</font>

713
00:36:11,390 --> 00:36:17,000
or writing a lot<font color="#E5E5E5"> of files and the in</font>

714
00:36:13,670 --> 00:36:23,810
this<font color="#E5E5E5"> case is our is our sample and we</font>

715
00:36:17,000 --> 00:36:27,910
can see also that here our<font color="#E5E5E5"> decoy files</font>

716
00:36:23,810 --> 00:36:32,509
<font color="#E5E5E5">are slowly being encrypted by wanna cry</font>

717
00:36:27,910 --> 00:36:35,540
so<font color="#E5E5E5"> fill the first in this in the</font>

718
00:36:32,510 --> 00:36:38,000
meantime is monitoring<font color="#E5E5E5"> its activity the</font>

719
00:36:35,540 --> 00:36:39,890
activity of the process<font color="#E5E5E5"> and if</font>

720
00:36:38,000 --> 00:36:43,090
everything<font color="#CCCCCC"> goes well we should see some</font>

721
00:36:39,890 --> 00:36:43,089
log here<font color="#E5E5E5"> ok</font>

722
00:36:46,120 --> 00:36:51,529
so here she's the<font color="#CCCCCC"> first the global model</font>

723
00:36:49,730 --> 00:36:55,820
<font color="#CCCCCC">of Phyllis of Sheila's</font><font color="#E5E5E5"> has detected</font>

724
00:36:51,530 --> 00:37:01,250
suspicious activity and it just asked

725
00:36:55,820 --> 00:37:03,830
the crypto finder to look for further

726
00:37:01,250 --> 00:37:06,980
proof in this case<font color="#E5E5E5"> it didn't find any</font>

727
00:37:03,830 --> 00:37:10,190
any traces of the<font color="#E5E5E5"> AES block cipher but</font>

728
00:37:06,980 --> 00:37:12,590
<font color="#E5E5E5">is it still monitoring monitors the the</font>

729
00:37:10,190 --> 00:37:15,020
process and we see that after<font color="#E5E5E5"> two other</font>

730
00:37:12,590 --> 00:37:18,170
ticks<font color="#CCCCCC"> so when the the</font><font color="#E5E5E5"> detection mode the</font>

731
00:37:15,020 --> 00:37:21,620
the global<font color="#E5E5E5"> model detected the the</font>

732
00:37:18,170 --> 00:37:24,730
process<font color="#E5E5E5"> are the two times in the for the</font>

733
00:37:21,620 --> 00:37:28,900
ticks the the ransom is is finally

734
00:37:24,730 --> 00:37:33,530
detected<font color="#E5E5E5"> and killed by</font><font color="#CCCCCC"> Shield FS so now</font>

735
00:37:28,900 --> 00:37:35,780
<font color="#E5E5E5">for demo purposes</font><font color="#CCCCCC"> she'll FS did not</font>

736
00:37:33,530 --> 00:37:38,630
restore the device<font color="#E5E5E5"> automatically but I'm</font>

737
00:37:35,780 --> 00:37:41,540
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> do it manually but of course this</font>

738
00:37:38,630 --> 00:37:45,010
is done usually automatically<font color="#E5E5E5"> by</font><font color="#CCCCCC"> a by</font>

739
00:37:41,540 --> 00:37:53,360
our tool<font color="#E5E5E5"> so here I'm gonna start our</font>

740
00:37:45,010 --> 00:37:54,800
<font color="#E5E5E5">reverter</font><font color="#CCCCCC"> ok that found the process with</font>

741
00:37:53,360 --> 00:37:59,440
with the malicious activity that the

742
00:37:54,800 --> 00:38:02,180
detector identified and year

743
00:37:59,440 --> 00:38:04,760
you can see the<font color="#E5E5E5"> Pfizer are slowly being</font>

744
00:38:02,180 --> 00:38:17,210
restored<font color="#CCCCCC"> you can see that the same files</font>

745
00:38:04,760 --> 00:38:29,809
are being slowly restored<font color="#E5E5E5"> okay we can</font>

746
00:38:17,210 --> 00:38:32,180
wait for<font color="#E5E5E5"> the entire revert process okay</font>

747
00:38:29,809 --> 00:38:36,549
<font color="#E5E5E5">that's it everything</font><font color="#CCCCCC"> is done no file</font>

748
00:38:32,180 --> 00:38:36,549
loss<font color="#E5E5E5"> we have our files back</font>

749
00:38:40,970 --> 00:38:46,410
<font color="#E5E5E5">okay so to conclude the presentation I'm</font>

750
00:38:43,350 --> 00:38:49,009
gonna leave the stage to Federico yeah

751
00:38:46,410 --> 00:38:52,830
but it didn't put an animation for that

752
00:38:49,010 --> 00:38:54,390
Thank<font color="#E5E5E5"> You Andrea so it seems that we</font>

753
00:38:52,830 --> 00:38:57,029
actually<font color="#E5E5E5"> achieved</font><font color="#CCCCCC"> this is what this is</font>

754
00:38:54,390 --> 00:38:58,770
what what<font color="#E5E5E5"> we wanted to have when we</font>

755
00:38:57,030 --> 00:39:01,650
conceived this<font color="#CCCCCC"> I still</font><font color="#E5E5E5"> remember in the</font>

756
00:38:58,770 --> 00:39:03,750
<font color="#E5E5E5">whiteboard in the lab we had sketches</font>

757
00:39:01,650 --> 00:39:07,470
that<font color="#E5E5E5"> says we want a file system</font><font color="#CCCCCC"> that</font>

758
00:39:03,750 --> 00:39:09,720
natively supports<font color="#E5E5E5"> ransomware detection</font>

759
00:39:07,470 --> 00:39:12,060
and reverting operation<font color="#CCCCCC"> if you're</font>

760
00:39:09,720 --> 00:39:14,759
familiar with ZFS<font color="#E5E5E5"> and similar file</font>

761
00:39:12,060 --> 00:39:17,009
system<font color="#E5E5E5"> you can already see some some</font>

762
00:39:14,760 --> 00:39:19,610
similarity of this<font color="#E5E5E5"> the fact that is that</font>

763
00:39:17,010 --> 00:39:22,440
the ZFS<font color="#E5E5E5"> does not have any of these</font>

764
00:39:19,610 --> 00:39:24,600
<font color="#E5E5E5">ransomware aware capability so this is</font>

765
00:39:22,440 --> 00:39:26,310
what we got our inspiration and we're

766
00:39:24,600 --> 00:39:27,600
very<font color="#E5E5E5"> very happy</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we were able</font><font color="#CCCCCC"> to</font>

767
00:39:26,310 --> 00:39:29,750
make it

768
00:39:27,600 --> 00:39:32,310
we had a detection component that

769
00:39:29,750 --> 00:39:34,950
implements a generic detection model as

770
00:39:32,310 --> 00:39:37,440
you<font color="#CCCCCC"> have seen wanna cry didn't</font><font color="#E5E5E5"> even</font>

771
00:39:34,950 --> 00:39:39,839
existed<font color="#E5E5E5"> when we created</font><font color="#CCCCCC"> that machine</font>

772
00:39:37,440 --> 00:39:41,790
there's no signatures<font color="#CCCCCC"> whatsoever we</font>

773
00:39:39,840 --> 00:39:45,060
trained shield<font color="#CCCCCC"> efest</font>

774
00:39:41,790 --> 00:39:47,490
on a few on a few samples 383 if I

775
00:39:45,060 --> 00:39:50,960
remember correctly and<font color="#CCCCCC"> that</font><font color="#E5E5E5"> was it now</font>

776
00:39:47,490 --> 00:39:50,959
we can detect we want to cry

777
00:39:51,210 --> 00:39:57,150
in the protection well you have already

778
00:39:52,800 --> 00:39:59,610
seen<font color="#E5E5E5"> it</font><font color="#CCCCCC"> in action so I think</font><font color="#E5E5E5"> I mean I'm</font>

779
00:39:57,150 --> 00:40:01,620
super super<font color="#E5E5E5"> happy of being able to work</font>

780
00:39:59,610 --> 00:40:04,710
<font color="#E5E5E5">with</font><font color="#CCCCCC"> Andre on this to be his advisor on</font>

781
00:40:01,620 --> 00:40:07,799
this<font color="#CCCCCC"> I think this is a this is time</font><font color="#E5E5E5"> for</font>

782
00:40:04,710 --> 00:40:10,830
questions<font color="#CCCCCC"> just a reminder there is also</font>

783
00:40:07,800 --> 00:40:12,540
an<font color="#CCCCCC"> academic paper describing</font><font color="#E5E5E5"> this so if</font>

784
00:40:10,830 --> 00:40:15,569
you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> dig into the into the</font>

785
00:40:12,540 --> 00:40:18,690
details we've also set up<font color="#E5E5E5"> a</font><font color="#CCCCCC"> website</font>

786
00:40:15,570 --> 00:40:19,410
where we collect some materials and<font color="#CCCCCC"> so</font>

787
00:40:18,690 --> 00:40:21,750
<font color="#CCCCCC">on</font>

788
00:40:19,410 --> 00:40:24,140
we're<font color="#E5E5E5"> not really using the the code</font>

789
00:40:21,750 --> 00:40:28,700
because<font color="#CCCCCC"> we have a patent pending</font>

790
00:40:24,140 --> 00:40:31,470
number two seven two<font color="#E5E5E5"> seven zero one nine</font>

791
00:40:28,700 --> 00:40:34,169
<font color="#CCCCCC">four questions we are available</font><font color="#E5E5E5"> here for</font>

792
00:40:31,470 --> 00:40:38,129
<font color="#E5E5E5">brief questions like do you guys go to</font>

793
00:40:34,170 --> 00:40:40,590
the<font color="#E5E5E5"> same barber yes or but you</font><font color="#CCCCCC"> know we</font>

794
00:40:38,130 --> 00:40:42,360
have<font color="#E5E5E5"> for like elaborate questions and</font>

795
00:40:40,590 --> 00:40:46,350
long questions such as why do you guys

796
00:40:42,360 --> 00:40:49,080
look bald but<font color="#E5E5E5"> right bald we have the</font>

797
00:40:46,350 --> 00:40:52,319
<font color="#CCCCCC">wrap-up</font><font color="#E5E5E5"> room so if you are available for</font>

798
00:40:49,080 --> 00:40:53,819
for longer questions just feel free we

799
00:40:52,320 --> 00:40:56,579
<font color="#E5E5E5">have a first question here</font>

800
00:40:53,819 --> 00:41:01,160
I'm going to yeah<font color="#CCCCCC"> just because a bit</font>

801
00:40:56,579 --> 00:41:01,160
louder<font color="#CCCCCC"> please yes</font>

802
00:41:12,500 --> 00:41:26,380
I don't understand the last<font color="#E5E5E5"> part of</font><font color="#CCCCCC"> the</font>

803
00:41:14,270 --> 00:41:26,380
question<font color="#E5E5E5"> okay</font>

804
00:41:26,630 --> 00:41:32,029
oh I see<font color="#E5E5E5"> so what you're asking if I'm</font>

805
00:41:30,470 --> 00:41:33,169
just<font color="#E5E5E5"> repeating both for recording and</font>

806
00:41:32,029 --> 00:41:35,059
for you know<font color="#CCCCCC"> making sure that I</font>

807
00:41:33,170 --> 00:41:37,700
understood<font color="#E5E5E5"> you're asking if there is a</font>

808
00:41:35,059 --> 00:41:39,890
process<font color="#CCCCCC"> that is harvesting many files in</font>

809
00:41:37,700 --> 00:41:43,549
the system is there a chance that we

810
00:41:39,890 --> 00:41:46,129
<font color="#CCCCCC">might confuse it with that it might</font>

811
00:41:43,549 --> 00:41:48,109
trigger some of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> features not all of</font>

812
00:41:46,130 --> 00:41:51,559
them<font color="#CCCCCC"> altogether</font><font color="#E5E5E5"> that's why we have</font>

813
00:41:48,109 --> 00:41:54,380
several<font color="#CCCCCC"> features in our experiments we</font>

814
00:41:51,559 --> 00:41:57,559
had applications performing like zip

815
00:41:54,380 --> 00:41:59,900
operations or you know<font color="#E5E5E5"> file operations</font>

816
00:41:57,559 --> 00:42:02,599
<font color="#E5E5E5">with many files involved and high</font>

817
00:41:59,900 --> 00:42:05,029
entropy<font color="#CCCCCC"> and we didn't see any of</font><font color="#E5E5E5"> those</font>

818
00:42:02,599 --> 00:42:07,539
false<font color="#CCCCCC"> positives</font><font color="#E5E5E5"> but you know a file</font><font color="#CCCCCC"> that</font>

819
00:42:05,029 --> 00:42:10,400
<font color="#E5E5E5">a process that</font><font color="#CCCCCC"> really resembles like</font>

820
00:42:07,539 --> 00:42:12,140
<font color="#E5E5E5">ransomware activity with encryption with</font>

821
00:42:10,400 --> 00:42:14,059
<font color="#E5E5E5">harvesting and renaming and everything</font>

822
00:42:12,140 --> 00:42:15,348
well it's a ransomware or you know it's

823
00:42:14,059 --> 00:42:19,339
a it's a funny

824
00:42:15,349 --> 00:42:22,279
<font color="#E5E5E5">it's a funny program thank you any other</font>

825
00:42:19,339 --> 00:42:32,469
<font color="#CCCCCC">oh we have many there</font><font color="#E5E5E5"> sorry we don't</font>

826
00:42:22,279 --> 00:42:36,700
<font color="#E5E5E5">know which which came first</font><font color="#CCCCCC"> oh sorry</font>

827
00:42:32,469 --> 00:42:40,249
yeah that would be<font color="#E5E5E5"> great</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> better</font>

828
00:42:36,700 --> 00:42:43,279
you<font color="#E5E5E5"> were able to identify</font><font color="#CCCCCC"> the crypto</font>

829
00:42:40,249 --> 00:42:45,109
algorithm that<font color="#E5E5E5"> the runs more used to to</font>

830
00:42:43,279 --> 00:42:47,660
use to encrypt<font color="#E5E5E5"> the files the AES</font>

831
00:42:45,109 --> 00:42:49,848
algorithm<font color="#CCCCCC"> our</font><font color="#E5E5E5"> curiosity were you able to</font>

832
00:42:47,660 --> 00:42:55,249
find<font color="#E5E5E5"> that their key or any interest in</font>

833
00:42:49,849 --> 00:42:56,989
in deeper analysis yep<font color="#CCCCCC"> so when you look</font>

834
00:42:55,249 --> 00:42:59,058
and detect the<font color="#E5E5E5"> key schedule the first</font>

835
00:42:56,989 --> 00:43:00,979
let's<font color="#E5E5E5"> say the first row the key schedule</font>

836
00:42:59,059 --> 00:43:02,869
is the the actual key<font color="#E5E5E5"> so the real key</font>

837
00:43:00,979 --> 00:43:05,419
that is<font color="#CCCCCC"> used for</font><font color="#E5E5E5"> the encryption so once</font>

838
00:43:02,869 --> 00:43:06,769
we recover<font color="#CCCCCC"> the key we could use</font><font color="#E5E5E5"> for</font>

839
00:43:05,420 --> 00:43:09,890
example<font color="#E5E5E5"> that key to decrypt the</font><font color="#CCCCCC"> files</font>

840
00:43:06,769 --> 00:43:13,488
instead<font color="#E5E5E5"> of using our copies but this</font>

841
00:43:09,890 --> 00:43:15,558
process is<font color="#E5E5E5"> unreliable so the technique</font>

842
00:43:13,489 --> 00:43:17,660
that<font color="#CCCCCC"> the traces of a kippah function is</font>

843
00:43:15,559 --> 00:43:20,900
not reliable<font color="#E5E5E5"> you cannot</font><font color="#CCCCCC"> guarantee</font><font color="#E5E5E5"> 100%</font>

844
00:43:17,660 --> 00:43:24,170
of files<font color="#E5E5E5"> protected and recovered by by</font>

845
00:43:20,900 --> 00:43:26,359
by using such approach<font color="#E5E5E5"> so yes we could</font>

846
00:43:24,170 --> 00:43:28,849
recover the key but is not<font color="#E5E5E5"> very</font><font color="#CCCCCC"> reliable</font>

847
00:43:26,359 --> 00:43:34,369
<font color="#CCCCCC">so this why</font><font color="#E5E5E5"> what our approach does</font><font color="#CCCCCC"> not</font>

848
00:43:28,849 --> 00:43:36,410
completely rely on this<font color="#E5E5E5"> strategy with</font>

849
00:43:34,369 --> 00:43:38,420
<font color="#E5E5E5">concurrency if multiple applications</font>

850
00:43:36,410 --> 00:43:39,440
arise in the same file possible it

851
00:43:38,420 --> 00:43:41,750
multiple benign<font color="#CCCCCC"> of</font>

852
00:43:39,440 --> 00:43:44,360
occasions<font color="#E5E5E5"> but you said in one diagram</font>

853
00:43:41,750 --> 00:43:46,340
<font color="#CCCCCC">that the banana patient gets a</font><font color="#E5E5E5"> copy of</font>

854
00:43:44,360 --> 00:43:51,290
the file where the<font color="#E5E5E5"> most application gets</font>

855
00:43:46,340 --> 00:43:53,210
the original file<font color="#E5E5E5"> yeah so first of all</font>

856
00:43:51,290 --> 00:43:54,470
<font color="#E5E5E5">we</font><font color="#CCCCCC"> performed a copy of the file just the</font>

857
00:43:53,210 --> 00:43:58,370
first time so the<font color="#E5E5E5"> first the</font><font color="#CCCCCC"> first</font>

858
00:43:54,470 --> 00:44:00,919
<font color="#E5E5E5">application that writes that file then</font>

859
00:43:58,370 --> 00:44:02,720
that case we perform the copy<font color="#E5E5E5"> so and we</font>

860
00:44:00,920 --> 00:44:04,670
stole the<font color="#CCCCCC"> code is it in the Covina in a</font>

861
00:44:02,720 --> 00:44:06,709
secure storage and we<font color="#E5E5E5"> hit</font><font color="#CCCCCC"> them in a</font>

862
00:44:04,670 --> 00:44:08,120
cache<font color="#CCCCCC"> for</font><font color="#E5E5E5"> a certain amount of time so</font>

863
00:44:06,710 --> 00:44:10,520
the other application<font color="#E5E5E5"> can still access</font>

864
00:44:08,120 --> 00:44:13,700
<font color="#E5E5E5">the access</font><font color="#CCCCCC"> this file and write the file</font>

865
00:44:10,520 --> 00:44:15,080
modified and so on and then<font color="#CCCCCC"> you know in</font>

866
00:44:13,700 --> 00:44:17,899
a short<font color="#CCCCCC"> period</font><font color="#E5E5E5"> where we have</font><font color="#CCCCCC"> the dead</font>

867
00:44:15,080 --> 00:44:20,029
file in cache we don't we do not<font color="#CCCCCC"> perform</font>

868
00:44:17,900 --> 00:44:22,310
any<font color="#E5E5E5"> other copies but once the cache</font>

869
00:44:20,030 --> 00:44:24,200
expires<font color="#E5E5E5"> we will</font><font color="#CCCCCC"> perform another</font><font color="#E5E5E5"> another</font>

870
00:44:22,310 --> 00:44:27,529
copy of<font color="#E5E5E5"> the file on</font><font color="#CCCCCC"> the next write</font>

871
00:44:24,200 --> 00:44:29,810
<font color="#E5E5E5">operation so if you want to see you know</font>

872
00:44:27,530 --> 00:44:31,940
from<font color="#CCCCCC"> another</font><font color="#E5E5E5"> perspective is like a an</font>

873
00:44:29,810 --> 00:44:34,279
extension of<font color="#E5E5E5"> an existing backup system</font>

874
00:44:31,940 --> 00:44:36,530
<font color="#CCCCCC">that very frequently takes snapshots so</font>

875
00:44:34,280 --> 00:44:39,050
<font color="#CCCCCC">if you have like backups</font><font color="#E5E5E5"> backing up like</font>

876
00:44:36,530 --> 00:44:40,730
every<font color="#E5E5E5"> half hour with this you extend the</font>

877
00:44:39,050 --> 00:44:42,710
<font color="#CCCCCC">lifetime of the backup to the</font><font color="#E5E5E5"> last I</font>

878
00:44:40,730 --> 00:44:48,080
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> know a few minutes or for the last</font>

879
00:44:42,710 --> 00:44:51,530
hour<font color="#CCCCCC"> ok so going along those lines</font><font color="#E5E5E5"> from</font>

880
00:44:48,080 --> 00:44:55,190
<font color="#E5E5E5">an ESX standpoint you know taking</font>

881
00:44:51,530 --> 00:44:58,280
snapshots<font color="#E5E5E5"> also two separate</font><font color="#CCCCCC"> questions</font>

882
00:44:55,190 --> 00:45:00,980
sorry<font color="#E5E5E5"> also how does it integrate or</font>

883
00:44:58,280 --> 00:45:03,560
interact with antivirus products like

884
00:45:00,980 --> 00:45:05,960
McAfee or malwarebytes or anything like

885
00:45:03,560 --> 00:45:07,490
<font color="#E5E5E5">that because you're doing</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of read</font>

886
00:45:05,960 --> 00:45:10,280
<font color="#CCCCCC">rights you're doing a lot of sniffing</font>

887
00:45:07,490 --> 00:45:13,160
and both of those are<font color="#E5E5E5"> doing that too so</font>

888
00:45:10,280 --> 00:45:17,330
from an implementation point of<font color="#E5E5E5"> view in</font>

889
00:45:13,160 --> 00:45:21,410
this mini filter with these drivers with

890
00:45:17,330 --> 00:45:24,440
these mini filters there is like a stack

891
00:45:21,410 --> 00:45:26,990
<font color="#E5E5E5">of these drivers and you can select the</font>

892
00:45:24,440 --> 00:45:28,520
attitude of the driver<font color="#E5E5E5"> into the position</font>

893
00:45:26,990 --> 00:45:31,220
which one should<font color="#E5E5E5"> be on the top and</font><font color="#CCCCCC"> which</font>

894
00:45:28,520 --> 00:45:32,870
one<font color="#E5E5E5"> should be on the bottom so according</font>

895
00:45:31,220 --> 00:45:36,620
<font color="#CCCCCC">to the</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> requirements of the</font>

896
00:45:32,870 --> 00:45:40,759
different tools<font color="#E5E5E5"> of different programs we</font>

897
00:45:36,620 --> 00:45:44,299
could place our our our<font color="#CCCCCC"> tooling</font><font color="#E5E5E5"> in the</font>

898
00:45:40,760 --> 00:45:46,160
right in the<font color="#E5E5E5"> right position without</font>

899
00:45:44,300 --> 00:45:49,280
<font color="#E5E5E5">interfering with of course we did with</font>

900
00:45:46,160 --> 00:45:52,020
the other software yeah there are some

901
00:45:49,280 --> 00:45:55,560
thoughts on<font color="#CCCCCC"> like kernel-based Mulder</font>

902
00:45:52,020 --> 00:45:57,420
ransomware<font color="#CCCCCC"> and</font><font color="#E5E5E5"> second like petia like</font>

903
00:45:55,560 --> 00:45:59,339
you know approaches which would like

904
00:45:57,420 --> 00:46:03,180
<font color="#CCCCCC">alright and then do the encryption from</font>

905
00:45:59,339 --> 00:46:05,849
<font color="#E5E5E5">a completely different environment can</font>

906
00:46:03,180 --> 00:46:07,680
you because the very first part<font color="#E5E5E5"> wasn't</font>

907
00:46:05,849 --> 00:46:09,990
clear<font color="#E5E5E5"> so though so do you have some</font>

908
00:46:07,680 --> 00:46:12,029
thoughts on<font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> based attacks</font><font color="#CCCCCC"> that</font>

909
00:46:09,990 --> 00:46:13,290
because your system<font color="#E5E5E5"> is based on kernel</font>

910
00:46:12,030 --> 00:46:16,500
just wondering if you have any<font color="#E5E5E5"> thoughts</font>

911
00:46:13,290 --> 00:46:19,109
on that<font color="#E5E5E5"> and ii was ransomware that might</font>

912
00:46:16,500 --> 00:46:20,520
like<font color="#CCCCCC"> oh petia kind of approach is right</font>

913
00:46:19,109 --> 00:46:21,630
<font color="#CCCCCC">that</font><font color="#E5E5E5"> overwrite MBR then do the</font>

914
00:46:20,520 --> 00:46:24,810
encryption from<font color="#CCCCCC"> a completely different</font>

915
00:46:21,630 --> 00:46:28,910
<font color="#E5E5E5">subsystem right that emulates bios or</font>

916
00:46:24,810 --> 00:46:33,630
something like that<font color="#CCCCCC"> alright so this</font><font color="#E5E5E5"> is</font>

917
00:46:28,910 --> 00:46:37,830
kind of out of our our scope but in the

918
00:46:33,630 --> 00:46:40,530
case<font color="#E5E5E5"> for example of</font><font color="#CCCCCC"> petia even though it</font>

919
00:46:37,830 --> 00:46:42,299
does not<font color="#CCCCCC"> actually encrypt the files</font><font color="#E5E5E5"> but</font>

920
00:46:40,530 --> 00:46:44,160
our our<font color="#E5E5E5"> approach in performing their</font>

921
00:46:42,300 --> 00:46:47,130
copies<font color="#E5E5E5"> and protecting the the user that</font>

922
00:46:44,160 --> 00:46:49,770
<font color="#CCCCCC">i will still be effective against this</font>

923
00:46:47,130 --> 00:46:52,260
kind<font color="#E5E5E5"> of attack so you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> still try to</font>

924
00:46:49,770 --> 00:46:55,980
recover manually the the encrypted<font color="#E5E5E5"> files</font>

925
00:46:52,260 --> 00:46:58,260
<font color="#E5E5E5">and if i could continue on the kernel on</font>

926
00:46:55,980 --> 00:47:00,540
the kernel type of attack I mean<font color="#E5E5E5"> our</font>

927
00:46:58,260 --> 00:47:03,080
attacker model as<font color="#CCCCCC"> you can clearly see is</font>

928
00:47:00,540 --> 00:47:06,119
the attacker is not<font color="#E5E5E5"> in the kernel right</font>

929
00:47:03,080 --> 00:47:07,560
<font color="#CCCCCC">as it you know most of</font><font color="#E5E5E5"> the time is if</font>

930
00:47:06,119 --> 00:47:09,510
the attacker<font color="#E5E5E5"> is in the kernel even if</font>

931
00:47:07,560 --> 00:47:13,230
you have an<font color="#E5E5E5"> anti-virus</font><font color="#CCCCCC"> I mean might be</font>

932
00:47:09,510 --> 00:47:15,119
too late<font color="#E5E5E5"> right</font><font color="#CCCCCC"> so I think</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> opens</font><font color="#E5E5E5"> a</font>

933
00:47:13,230 --> 00:47:17,970
completely different<font color="#E5E5E5"> resource line that</font>

934
00:47:15,119 --> 00:47:19,920
stands with how do you ensure that you

935
00:47:17,970 --> 00:47:23,310
<font color="#E5E5E5">can monitor from from the outside like</font>

936
00:47:19,920 --> 00:47:25,500
in an in clave or from DMA stuff and

937
00:47:23,310 --> 00:47:27,750
things like that<font color="#E5E5E5"> but this is a bit you</font>

938
00:47:25,500 --> 00:47:29,960
<font color="#E5E5E5">know a parallel at Ashurst line then</font>

939
00:47:27,750 --> 00:47:32,130
then ransomware but it's a very you<font color="#CCCCCC"> know</font>

940
00:47:29,960 --> 00:47:36,839
yeah interesting<font color="#E5E5E5"> question thank you</font>

941
00:47:32,130 --> 00:47:38,790
<font color="#E5E5E5">thank you still have I think a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of</font>

942
00:47:36,839 --> 00:47:43,320
minutes for<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> you guys have some</font>

943
00:47:38,790 --> 00:47:46,200
<font color="#E5E5E5">I had had one if if a attacker</font>

944
00:47:43,320 --> 00:47:47,760
understood your<font color="#CCCCCC"> filesystem how</font><font color="#E5E5E5"> would you</font>

945
00:47:46,200 --> 00:47:50,009
<font color="#E5E5E5">estimate that they would best try to</font>

946
00:47:47,760 --> 00:47:52,500
subvert it<font color="#E5E5E5"> like if they were to use a</font>

947
00:47:50,010 --> 00:47:53,700
different and quick encryption algorithm

948
00:47:52,500 --> 00:47:55,950
or something<font color="#CCCCCC"> like what do you</font><font color="#E5E5E5"> see the</font>

949
00:47:53,700 --> 00:47:58,410
<font color="#CCCCCC">weakness in your approach</font><font color="#E5E5E5"> you're asking</font>

950
00:47:55,950 --> 00:48:00,960
about<font color="#CCCCCC"> if we can design</font><font color="#E5E5E5"> an evasion and</font>

951
00:47:58,410 --> 00:48:02,990
<font color="#E5E5E5">evasive malware that</font><font color="#CCCCCC"> pousada can I pass</font>

952
00:48:00,960 --> 00:48:05,460
<font color="#E5E5E5">by pass your detection algorithms well</font>

953
00:48:02,990 --> 00:48:06,959
it's really about

954
00:48:05,460 --> 00:48:09,390
you can evade all of the features

955
00:48:06,960 --> 00:48:10,829
<font color="#CCCCCC">altogether so you have to write</font><font color="#E5E5E5"> a very</font>

956
00:48:09,390 --> 00:48:13,799
slow ransomware

957
00:48:10,829 --> 00:48:18,030
that doesn't rename<font color="#E5E5E5"> any files in a short</font>

958
00:48:13,800 --> 00:48:20,790
time<font color="#E5E5E5"> that maybe doesn't rename any files</font>

959
00:48:18,030 --> 00:48:24,150
at all<font color="#E5E5E5"> that it writes files very slowly</font>

960
00:48:20,790 --> 00:48:27,240
<font color="#CCCCCC">low</font><font color="#E5E5E5"> level of entropy so it's kind of</font>

961
00:48:24,150 --> 00:48:30,750
against<font color="#E5E5E5"> he the business model of a</font>

962
00:48:27,240 --> 00:48:32,939
classical<font color="#E5E5E5"> rain</font><font color="#CCCCCC"> swimmer but yes I mean if</font>

963
00:48:30,750 --> 00:48:36,030
you have enough<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> design a</font>

964
00:48:32,940 --> 00:48:39,030
malware<font color="#E5E5E5"> that is you know silent enough</font>

965
00:48:36,030 --> 00:48:40,770
we have<font color="#CCCCCC"> taught</font><font color="#E5E5E5"> about it but in the paper</font>

966
00:48:39,030 --> 00:48:42,180
there is<font color="#CCCCCC"> a section</font><font color="#E5E5E5"> where we describe all</font>

967
00:48:40,770 --> 00:48:44,730
the variables that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> involved there</font>

968
00:48:42,180 --> 00:48:47,700
are more than what we have<font color="#E5E5E5"> explained</font>

969
00:48:44,730 --> 00:48:51,270
here<font color="#E5E5E5"> there is the possibility for for</font>

970
00:48:47,700 --> 00:48:54,450
<font color="#E5E5E5">designing a</font><font color="#CCCCCC"> invasive sample targeting</font>

971
00:48:51,270 --> 00:48:56,910
shield offense<font color="#CCCCCC"> but we</font><font color="#E5E5E5"> believe it's</font>

972
00:48:54,450 --> 00:48:59,879
pretty distant from what the attackers

973
00:48:56,910 --> 00:49:02,190
want to do it is<font color="#E5E5E5"> probably</font><font color="#CCCCCC"> easier for the</font>

974
00:48:59,880 --> 00:49:04,230
attacker to<font color="#E5E5E5"> evade the encryption</font>

975
00:49:02,190 --> 00:49:06,030
detection then<font color="#CCCCCC"> evade in the features</font>

976
00:49:04,230 --> 00:49:08,640
<font color="#E5E5E5">also another thing that the attacker can</font>

977
00:49:06,030 --> 00:49:12,180
do to make it<font color="#CCCCCC"> difficult to</font><font color="#E5E5E5"> be detected</font><font color="#CCCCCC"> I</font>

978
00:49:08,640 --> 00:49:13,558
did that we<font color="#E5E5E5"> did not really test because</font>

979
00:49:12,180 --> 00:49:15,118
there<font color="#E5E5E5"> is no</font><font color="#CCCCCC"> sample that does this is</font>

980
00:49:13,559 --> 00:49:18,510
like for example<font color="#E5E5E5"> using a lot of</font>

981
00:49:15,119 --> 00:49:21,930
<font color="#E5E5E5">processes so if you for example consider</font>

982
00:49:18,510 --> 00:49:23,819
in the worst case<font color="#E5E5E5"> a malware that spawns</font>

983
00:49:21,930 --> 00:49:26,578
different processes<font color="#E5E5E5"> and each process</font>

984
00:49:23,819 --> 00:49:27,900
encrypt just one<font color="#CCCCCC"> tile</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> you would see</font>

985
00:49:26,579 --> 00:49:29,549
that<font color="#CCCCCC"> that process is</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> behind</font><font color="#E5E5E5"> because</font>

986
00:49:27,900 --> 00:49:32,160
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> accessing</font><font color="#CCCCCC"> encryption just one file</font>

987
00:49:29,549 --> 00:49:33,839
<font color="#CCCCCC">but in</font><font color="#E5E5E5"> that case that's why we included</font>

988
00:49:32,160 --> 00:49:35,368
<font color="#E5E5E5">the system centric model that is that</font>

989
00:49:33,839 --> 00:49:38,220
look at<font color="#E5E5E5"> it at the big picture</font><font color="#CCCCCC"> of the</font>

990
00:49:35,369 --> 00:49:40,230
<font color="#E5E5E5">system so unfortunately we didn't test</font>

991
00:49:38,220 --> 00:49:42,480
<font color="#E5E5E5">it so well because we didn't find any</font>

992
00:49:40,230 --> 00:49:45,359
many malware<font color="#E5E5E5"> that does this</font><font color="#CCCCCC"> but this</font>

993
00:49:42,480 --> 00:49:48,690
<font color="#E5E5E5">could</font><font color="#CCCCCC"> be a way to make our shield fast</font>

994
00:49:45,359 --> 00:49:53,790
detector<font color="#E5E5E5"> job really really difficult</font>

995
00:49:48,690 --> 00:49:58,410
<font color="#E5E5E5">yeah thank you I guess maybe do we have</font>

996
00:49:53,790 --> 00:50:00,779
time for<font color="#E5E5E5"> the last</font><font color="#CCCCCC"> question so what</font><font color="#E5E5E5"> the</font>

997
00:49:58,410 --> 00:50:04,980
word is<font color="#E5E5E5"> your</font><font color="#CCCCCC"> back up</font><font color="#E5E5E5"> of the original</font>

998
00:50:00,780 --> 00:50:07,020
files reside<font color="#E5E5E5"> and if it is if it results</font>

999
00:50:04,980 --> 00:50:10,650
in the file system<font color="#CCCCCC"> have you</font><font color="#E5E5E5"> encountered</font>

1000
00:50:07,020 --> 00:50:12,930
a ransomware that was<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to encrypt</font>

1001
00:50:10,650 --> 00:50:13,950
the<font color="#E5E5E5"> backup of the files</font><font color="#CCCCCC"> this is an</font>

1002
00:50:12,930 --> 00:50:20,669
interesting<font color="#E5E5E5"> question</font>

1003
00:50:13,950 --> 00:50:22,529
and so our backup can can be stored<font color="#E5E5E5"> in</font>

1004
00:50:20,670 --> 00:50:24,540
the same file system<font color="#E5E5E5"> or in for example</font>

1005
00:50:22,530 --> 00:50:27,569
<font color="#CCCCCC">in a secondary drive but the important</font>

1006
00:50:24,540 --> 00:50:29,940
<font color="#CCCCCC">thing is that we make the folder in</font>

1007
00:50:27,569 --> 00:50:32,190
<font color="#CCCCCC">which we store</font><font color="#E5E5E5"> our copies not accessible</font>

1008
00:50:29,940 --> 00:50:34,380
by user space application<font color="#E5E5E5"> so no user</font>

1009
00:50:32,190 --> 00:50:38,040
space application can can write in<font color="#E5E5E5"> that</font>

1010
00:50:34,380 --> 00:50:40,530
folder<font color="#E5E5E5"> only can</font><font color="#CCCCCC"> it connect on the</font><font color="#E5E5E5"> kernel</font>

1011
00:50:38,040 --> 00:50:44,040
size on only<font color="#CCCCCC"> our module that is in the</font>

1012
00:50:40,530 --> 00:50:46,319
kernel<font color="#CCCCCC"> can</font><font color="#E5E5E5"> writes can write into that</font>

1013
00:50:44,040 --> 00:50:51,000
folder<font color="#CCCCCC"> so we deny any</font><font color="#E5E5E5"> right operation</font>

1014
00:50:46,319 --> 00:50:51,600
<font color="#E5E5E5">from from the user land thank you thank</font>

1015
00:50:51,000 --> 00:50:56,730
you

1016
00:50:51,600 --> 00:50:56,730
[Applause]

