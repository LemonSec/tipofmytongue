1
00:00:00,000 --> 00:00:04,259
greetings everyone<font color="#CCCCCC"> we are glad to have</font>

2
00:00:02,280 --> 00:00:07,379
<font color="#E5E5E5">you here today</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> going to be</font>

3
00:00:04,259 --> 00:00:10,710
discussing<font color="#E5E5E5"> our stealth breakthrough</font>

4
00:00:07,379 --> 00:00:16,099
regarding<font color="#CCCCCC"> Intel AMT we hope</font><font color="#E5E5E5"> that you</font>

5
00:00:10,710 --> 00:00:16,099
find this talk<font color="#E5E5E5"> informative and useful</font>

6
00:00:17,150 --> 00:00:23,400
unfortunately Alexander and Maxim<font color="#E5E5E5"> could</font>

7
00:00:20,430 --> 00:00:25,980
not be here<font color="#E5E5E5"> with</font><font color="#CCCCCC"> us today but my name</font><font color="#E5E5E5"> is</font>

8
00:00:23,400 --> 00:00:29,130
<font color="#CCCCCC">Donnell Andersen and I will be their</font>

9
00:00:25,980 --> 00:00:32,820
replacement<font color="#CCCCCC"> I work at in</font><font color="#E5E5E5"> Betty and with</font>

10
00:00:29,130 --> 00:00:36,420
me<font color="#E5E5E5"> today is my</font><font color="#CCCCCC"> colleague Tom 'try hello</font>

11
00:00:32,820 --> 00:00:39,890
everyone my name is Matilda kima<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> the</font>

12
00:00:36,420 --> 00:00:44,250
chief technical officer at embody my

13
00:00:39,890 --> 00:00:47,250
<font color="#CCCCCC">interest is code analysis reverse</font>

14
00:00:44,250 --> 00:00:52,170
engineering<font color="#E5E5E5"> and optimization we start</font>

15
00:00:47,250 --> 00:00:54,300
smaii in<font color="#CCCCCC"> bayson i'm also</font><font color="#E5E5E5"> maintained by</font>

16
00:00:52,170 --> 00:01:01,050
<font color="#CCCCCC">some Arsenal for</font><font color="#E5E5E5"> Evers</font><font color="#CCCCCC"> engineering</font>

17
00:00:54,300 --> 00:01:04,080
project<font color="#CCCCCC"> okay and at any point today</font><font color="#E5E5E5"> or</font>

18
00:01:01,050 --> 00:01:07,860
during this<font color="#E5E5E5"> presentation if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a</font>

19
00:01:04,080 --> 00:01:10,140
question<font color="#E5E5E5"> you know feel</font><font color="#CCCCCC"> free to ask us we</font>

20
00:01:07,860 --> 00:01:14,250
have a Twitter<font color="#E5E5E5"> set up with the hashtag</font>

21
00:01:10,140 --> 00:01:16,710
ask about<font color="#CCCCCC"> Intel AMT and our team is</font>

22
00:01:14,250 --> 00:01:20,520
<font color="#E5E5E5">standing by waiting to answer any of</font>

23
00:01:16,710 --> 00:01:23,610
your<font color="#E5E5E5"> Intel AMT related questions so</font>

24
00:01:20,520 --> 00:01:26,369
today's agenda<font color="#E5E5E5"> will have us start off by</font>

25
00:01:23,610 --> 00:01:29,070
breaking<font color="#CCCCCC"> down the basics of Intel AMT</font>

26
00:01:26,369 --> 00:01:33,600
<font color="#E5E5E5">before getting</font><font color="#CCCCCC"> into some of our more</font>

27
00:01:29,070 --> 00:01:36,539
interesting<font color="#CCCCCC"> newer findings we're gonna</font>

28
00:01:33,600 --> 00:01:41,369
start off today<font color="#CCCCCC"> by</font><font color="#E5E5E5"> taking a look at the</font>

29
00:01:36,540 --> 00:01:44,850
<font color="#E5E5E5">architecture of an Intel 64 system so</font>

30
00:01:41,369 --> 00:01:48,899
here this<font color="#CCCCCC"> is a typical</font><font color="#E5E5E5"> Intel 64 desktop</font>

31
00:01:44,850 --> 00:01:51,449
last<font color="#CCCCCC"> laptop system</font><font color="#E5E5E5"> architecture Intel</font>

32
00:01:48,899 --> 00:01:53,729
CPU is definitely the main execution

33
00:01:51,450 --> 00:01:54,750
<font color="#E5E5E5">environment however it's not the only</font>

34
00:01:53,729 --> 00:01:56,820
<font color="#E5E5E5">one</font>

35
00:01:54,750 --> 00:01:59,750
there is also an additional chipset

36
00:01:56,820 --> 00:02:03,210
which has integrated controllers and

37
00:01:59,750 --> 00:02:05,360
subsystems which support peripheral

38
00:02:03,210 --> 00:02:08,008
devices and some other system functions

39
00:02:05,360 --> 00:02:11,910
<font color="#CCCCCC">one of</font><font color="#E5E5E5"> these subsystems</font><font color="#CCCCCC"> is the</font><font color="#E5E5E5"> Intel</font>

40
00:02:08,008 --> 00:02:13,980
management engine or Intel<font color="#CCCCCC"> M II which we</font>

41
00:02:11,910 --> 00:02:17,400
are going to be speaking<font color="#E5E5E5"> a lot of</font>

42
00:02:13,980 --> 00:02:19,560
it's an isolated<font color="#E5E5E5"> stealthy and the most</font>

43
00:02:17,400 --> 00:02:23,400
<font color="#E5E5E5">powerful within the execution</font>

44
00:02:19,560 --> 00:02:25,740
environment and when we say powerful

45
00:02:23,400 --> 00:02:28,350
<font color="#E5E5E5">we're simply referring to the</font>

46
00:02:25,740 --> 00:02:31,380
capabilities that<font color="#E5E5E5"> this system</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> you</font>

47
00:02:28,350 --> 00:02:36,030
know it's capable<font color="#E5E5E5"> of controlling very</font>

48
00:02:31,380 --> 00:02:40,200
critical systems the common SPI flash

49
00:02:36,030 --> 00:02:42,600
contents are divided into<font color="#E5E5E5"> regions the</font>

50
00:02:40,200 --> 00:02:44,579
main<font color="#E5E5E5"> region are</font><font color="#CCCCCC"> the flash descriptors</font>

51
00:02:42,600 --> 00:02:46,680
<font color="#E5E5E5">containing offsets and sizes of</font><font color="#CCCCCC"> other</font>

52
00:02:44,580 --> 00:02:50,489
regions<font color="#E5E5E5"> and it's able</font><font color="#CCCCCC"> to access</font>

53
00:02:46,680 --> 00:02:52,560
permissions to them<font color="#CCCCCC"> each user of</font><font color="#E5E5E5"> the</font>

54
00:02:50,489 --> 00:02:54,959
flash could find its<font color="#E5E5E5"> find its region and</font>

55
00:02:52,560 --> 00:02:57,480
you<font color="#CCCCCC"> know security</font><font color="#E5E5E5"> purposes wouldn't have</font>

56
00:02:54,959 --> 00:02:59,850
<font color="#CCCCCC">access to other</font><font color="#E5E5E5"> other reason regions</font>

57
00:02:57,480 --> 00:03:02,190
excuse me

58
00:02:59,850 --> 00:03:16,230
so the next<font color="#E5E5E5"> region belongs to the</font>

59
00:03:02,190 --> 00:03:18,600
specific user of the flash<font color="#CCCCCC"> the Gigabit</font>

60
00:03:16,230 --> 00:03:21,000
<font color="#CCCCCC">Ethernet region exists for the network</font>

61
00:03:18,600 --> 00:03:23,400
adapter<font color="#E5E5E5"> and stores the configuration for</font>

62
00:03:21,000 --> 00:03:26,790
its MAC address<font color="#E5E5E5"> the next region is</font>

63
00:03:23,400 --> 00:03:30,360
designed for the Intel<font color="#CCCCCC"> ME subsystem it</font>

64
00:03:26,790 --> 00:03:33,810
stores the Intel any<font color="#E5E5E5"> firmware the ACP</font>

65
00:03:30,360 --> 00:03:35,970
IEC region has appeared since<font color="#E5E5E5"> skylark</font>

66
00:03:33,810 --> 00:03:36,870
architecture<font color="#E5E5E5"> though we've never seen</font><font color="#CCCCCC"> the</font>

67
00:03:35,970 --> 00:03:40,769
<font color="#CCCCCC">latter</font>

68
00:03:36,870 --> 00:03:45,989
so the ACP IEC firmware blob is included

69
00:03:40,769 --> 00:03:49,049
into<font color="#E5E5E5"> the last region the</font><font color="#CCCCCC"> BIOS any</font>

70
00:03:45,989 --> 00:03:52,140
program code that is running on<font color="#CCCCCC"> the</font>

71
00:03:49,049 --> 00:03:55,019
system<font color="#E5E5E5"> is executed in one of these CPU</font>

72
00:03:52,140 --> 00:03:59,100
protection rings<font color="#E5E5E5"> in ring</font><font color="#CCCCCC"> three you</font><font color="#E5E5E5"> see</font>

73
00:03:55,019 --> 00:04:01,620
you have user applications that have the

74
00:03:59,100 --> 00:04:06,750
least<font color="#E5E5E5"> amount of privileges in the system</font>

75
00:04:01,620 --> 00:04:10,500
at ring<font color="#CCCCCC"> -2 we find the system management</font>

76
00:04:06,750 --> 00:04:13,769
mode or<font color="#CCCCCC"> SMM which is the most privileged</font>

77
00:04:10,500 --> 00:04:17,190
<font color="#E5E5E5">within the within the CPU</font><font color="#CCCCCC"> it's code is</font>

78
00:04:13,769 --> 00:04:19,940
<font color="#E5E5E5">located in a hidden</font><font color="#CCCCCC"> SM Ram</font><font color="#E5E5E5"> which is not</font>

79
00:04:17,190 --> 00:04:24,330
seen at any other level<font color="#CCCCCC"> before it</font>

80
00:04:19,940 --> 00:04:26,490
<font color="#E5E5E5">however we were able to gain access</font><font color="#CCCCCC"> to</font>

81
00:04:24,330 --> 00:04:27,880
the most<font color="#CCCCCC"> powerful</font><font color="#E5E5E5"> execution environment</font>

82
00:04:26,490 --> 00:04:30,820
that is<font color="#E5E5E5"> the Intel</font>

83
00:04:27,880 --> 00:04:33,880
<font color="#E5E5E5">Emme as</font><font color="#CCCCCC"> i measured before</font><font color="#E5E5E5"> located in</font>

84
00:04:30,820 --> 00:04:36,340
ring<font color="#CCCCCC"> -3</font><font color="#E5E5E5"> it has even more available</font>

85
00:04:33,880 --> 00:04:41,380
<font color="#CCCCCC">access capabilities and memory isolation</font>

86
00:04:36,340 --> 00:04:44,469
techniques so now we're we are<font color="#E5E5E5"> going to</font>

87
00:04:41,380 --> 00:04:48,460
go<font color="#E5E5E5"> more into depth here with</font><font color="#CCCCCC"> Intel ME</font>

88
00:04:44,470 --> 00:04:50,770
<font color="#E5E5E5">AMT architecture</font>

89
00:04:48,460 --> 00:04:53,469
besides the management energy memory

90
00:04:50,770 --> 00:04:55,990
control unit<font color="#CCCCCC"> this subsystem</font><font color="#E5E5E5"> consists of</font>

91
00:04:53,470 --> 00:04:58,540
<font color="#CCCCCC">mac level controller hosts embedded</font>

92
00:04:55,990 --> 00:05:00,400
controller interface unified memory

93
00:04:58,540 --> 00:05:02,710
architecture and firmware which is

94
00:05:00,400 --> 00:05:06,070
stored<font color="#E5E5E5"> in the common</font><font color="#CCCCCC"> SPI flash</font><font color="#E5E5E5"> alongside</font>

95
00:05:02,710 --> 00:05:07,419
the<font color="#CCCCCC"> BIOS this subsystem</font><font color="#E5E5E5"> is generally</font>

96
00:05:06,070 --> 00:05:10,900
thought of as the<font color="#E5E5E5"> most privileged and</font>

97
00:05:07,420 --> 00:05:13,510
hidden execution environment<font color="#CCCCCC"> and there</font>

98
00:05:10,900 --> 00:05:15,760
are a<font color="#E5E5E5"> few reasons for that</font><font color="#CCCCCC"> from one</font><font color="#E5E5E5"> the</font>

99
00:05:13,510 --> 00:05:18,580
unified<font color="#CCCCCC"> memory architecture is hidden</font>

100
00:05:15,760 --> 00:05:22,659
<font color="#E5E5E5">from the CPU</font><font color="#CCCCCC"> additionally it has full</font>

101
00:05:18,580 --> 00:05:25,060
access to DRAM and out a<font color="#CCCCCC"> bad</font><font color="#E5E5E5"> access to</font>

102
00:05:22,660 --> 00:05:27,900
network interface the most<font color="#E5E5E5"> interesting</font>

103
00:05:25,060 --> 00:05:30,640
thing is that Intel<font color="#E5E5E5"> ami still works and</font>

104
00:05:27,900 --> 00:05:33,429
accessible<font color="#CCCCCC"> even if the device is turned</font>

105
00:05:30,640 --> 00:05:38,880
off as long<font color="#CCCCCC"> as the device</font><font color="#E5E5E5"> is still</font>

106
00:05:33,430 --> 00:05:42,870
<font color="#E5E5E5">plugged into an outlet this subsystem is</font>

107
00:05:38,880 --> 00:05:46,540
present<font color="#E5E5E5"> on any Intel based system since</font>

108
00:05:42,870 --> 00:05:53,320
2010<font color="#E5E5E5"> however its name varies depending</font>

109
00:05:46,540 --> 00:05:57,130
on<font color="#CCCCCC"> the platform type though year by year</font>

110
00:05:53,320 --> 00:06:00,130
<font color="#CCCCCC">the interest of researching Intel</font><font color="#E5E5E5"> Emmy</font>

111
00:05:57,130 --> 00:06:03,040
has increased<font color="#CCCCCC"> the main problems</font><font color="#E5E5E5"> with</font>

112
00:06:00,130 --> 00:06:07,060
reverse engineering<font color="#CCCCCC"> this technology and</font>

113
00:06:03,040 --> 00:06:09,880
its firmware<font color="#E5E5E5"> are as followed one Intel</font>

114
00:06:07,060 --> 00:06:12,400
<font color="#E5E5E5">any firmware code modules</font><font color="#CCCCCC"> used sis lab</font>

115
00:06:09,880 --> 00:06:15,909
functions<font color="#E5E5E5"> implemented in the boot code</font>

116
00:06:12,400 --> 00:06:17,469
inside<font color="#CCCCCC"> Emmy ROM therefore it</font><font color="#E5E5E5"> is</font>

117
00:06:15,910 --> 00:06:19,930
difficult<font color="#CCCCCC"> sometimes</font><font color="#E5E5E5"> to understand the</font>

118
00:06:17,470 --> 00:06:22,890
function behavior<font color="#E5E5E5"> without the knowledge</font>

119
00:06:19,930 --> 00:06:26,410
of what sis lab functions are called

120
00:06:22,890 --> 00:06:30,430
<font color="#E5E5E5">fortunately ROM images can be found in</font>

121
00:06:26,410 --> 00:06:33,280
the debug versions of<font color="#E5E5E5"> any firmware</font><font color="#CCCCCC"> to a</font>

122
00:06:30,430 --> 00:06:35,470
certain<font color="#E5E5E5"> part of Intel any firmware code</font>

123
00:06:33,280 --> 00:06:38,349
modules are compressed using<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Huffman</font>

124
00:06:35,470 --> 00:06:41,139
algorithm<font color="#CCCCCC"> but this the decompression</font>

125
00:06:38,350 --> 00:06:44,949
<font color="#CCCCCC">dictionary is unknown so the decoding</font>

126
00:06:41,139 --> 00:06:47,830
is not not easy<font color="#CCCCCC"> though not</font><font color="#E5E5E5"> impossible</font>

127
00:06:44,949 --> 00:06:51,400
<font color="#CCCCCC">the dictionaries for six to ten</font><font color="#E5E5E5"> versions</font>

128
00:06:47,830 --> 00:06:53,560
were reconstructed<font color="#E5E5E5"> number three one of</font>

129
00:06:51,400 --> 00:06:55,748
the most well known problems in the is

130
00:06:53,560 --> 00:06:58,779
the undocumented communication protocol

131
00:06:55,749 --> 00:07:02,979
<font color="#E5E5E5">however</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> details of this protocol can</font>

132
00:06:58,779 --> 00:07:05,590
be reverse engineered for the<font color="#CCCCCC"> Emmy</font><font color="#E5E5E5"> um a</font>

133
00:07:02,979 --> 00:07:08,949
<font color="#CCCCCC">librarian dram</font><font color="#E5E5E5"> is inaccessible for the</font>

134
00:07:05,590 --> 00:07:11,409
main<font color="#CCCCCC"> CPU and</font><font color="#E5E5E5"> then finally</font><font color="#CCCCCC"> open-source</font>

135
00:07:08,949 --> 00:07:15,370
<font color="#CCCCCC">Society has</font><font color="#E5E5E5"> created a heading to disable</font>

136
00:07:11,409 --> 00:07:17,620
Intel<font color="#E5E5E5"> ME subsystem but this is quite</font>

137
00:07:15,370 --> 00:07:19,419
difficult<font color="#CCCCCC"> method has already been proved</font>

138
00:07:17,620 --> 00:07:22,349
presented to restrict<font color="#E5E5E5"> the subsistence</font>

139
00:07:19,419 --> 00:07:27,969
functionality<font color="#E5E5E5"> by cutting the unnecessary</font>

140
00:07:22,349 --> 00:07:30,699
<font color="#CCCCCC">firmware components if you're interested</font>

141
00:07:27,969 --> 00:07:33,550
in reverse engineering<font color="#CCCCCC"> the Intel</font><font color="#E5E5E5"> ME</font>

142
00:07:30,699 --> 00:07:37,180
firmware<font color="#E5E5E5"> you will need the dissembler</font>

143
00:07:33,550 --> 00:07:38,770
and a few scripts which you see here<font color="#CCCCCC"> so</font>

144
00:07:37,180 --> 00:07:42,029
what we're going<font color="#E5E5E5"> to do is we're going</font><font color="#CCCCCC"> to</font>

145
00:07:38,770 --> 00:07:44,859
put this presentation<font color="#E5E5E5"> on our website so</font>

146
00:07:42,029 --> 00:07:46,539
<font color="#E5E5E5">don't be you know don't worry</font><font color="#CCCCCC"> about</font>

147
00:07:44,860 --> 00:07:48,879
<font color="#E5E5E5">trying to copy everything down</font><font color="#CCCCCC"> so</font>

148
00:07:46,539 --> 00:07:52,659
everything is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be there if you</font>

149
00:07:48,879 --> 00:07:55,169
<font color="#E5E5E5">want to go back and check later so Intel</font>

150
00:07:52,659 --> 00:07:57,399
<font color="#E5E5E5">any architecture and the security model</font>

151
00:07:55,169 --> 00:08:01,029
<font color="#E5E5E5">understanding is an extremely broad</font>

152
00:07:57,399 --> 00:08:02,649
theme<font color="#E5E5E5"> so again this will</font><font color="#CCCCCC"> be on our</font>

153
00:08:01,029 --> 00:08:04,060
<font color="#E5E5E5">website so you could go ahead and take a</font>

154
00:08:02,649 --> 00:08:09,250
look so you could use these<font color="#E5E5E5"> links to</font>

155
00:08:04,060 --> 00:08:11,500
gain more<font color="#E5E5E5"> information regarding</font><font color="#CCCCCC"> that now</font>

156
00:08:09,250 --> 00:08:14,439
<font color="#E5E5E5">on to the Intel ME firmware components</font>

157
00:08:11,500 --> 00:08:17,289
<font color="#E5E5E5">to understand</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> segment of the</font>

158
00:08:14,439 --> 00:08:18,819
<font color="#E5E5E5">presentation</font><font color="#CCCCCC"> we really needed to</font><font color="#E5E5E5"> provide</font>

159
00:08:17,289 --> 00:08:21,188
<font color="#E5E5E5">you</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> some of</font><font color="#CCCCCC"> the basics as the MT</font>

160
00:08:18,819 --> 00:08:22,990
firmware architecture<font color="#E5E5E5"> the code is</font>

161
00:08:21,189 --> 00:08:25,469
divided into<font color="#E5E5E5"> modules</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> depending on</font>

162
00:08:22,990 --> 00:08:28,060
<font color="#E5E5E5">the system the code module list varies</font>

163
00:08:25,469 --> 00:08:29,979
<font color="#CCCCCC">there are the</font><font color="#E5E5E5"> basic code modules such as</font>

164
00:08:28,060 --> 00:08:32,198
to bring<font color="#E5E5E5"> up in kernel modules in every</font>

165
00:08:29,979 --> 00:08:35,039
firmware version each of these modules

166
00:08:32,198 --> 00:08:40,269
<font color="#E5E5E5">implement the specific Intel technology</font>

167
00:08:35,039 --> 00:08:42,819
<font color="#E5E5E5">for example</font><font color="#CCCCCC"> Intel</font><font color="#E5E5E5"> AMT</font><font color="#CCCCCC"> there are 3</font>

168
00:08:40,269 --> 00:08:44,860
firmware types<font color="#E5E5E5"> ignition firmware which</font>

169
00:08:42,820 --> 00:08:47,680
is actually only<font color="#E5E5E5"> available for the Emme</font>

170
00:08:44,860 --> 00:08:51,430
version 6 and is the minimal firmware

171
00:08:47,680 --> 00:08:54,010
size and contents<font color="#CCCCCC"> then we have the 1.5</font>

172
00:08:51,430 --> 00:08:55,089
megabyte firmware which has incomplete

173
00:08:54,010 --> 00:08:57,850
module contents

174
00:08:55,089 --> 00:09:00,009
and then lastly the<font color="#E5E5E5"> five megabyte</font>

175
00:08:57,850 --> 00:09:02,170
<font color="#E5E5E5">firmware which is the fully which is the</font>

176
00:09:00,009 --> 00:09:07,509
full excuse me has the full from where

177
00:09:02,170 --> 00:09:10,870
contents<font color="#CCCCCC"> on to the intel amt</font>

178
00:09:07,509 --> 00:09:14,649
architecture<font color="#E5E5E5"> it is implemented as code</font>

179
00:09:10,870 --> 00:09:17,290
module<font color="#E5E5E5"> inside Intel ME firmware the</font>

180
00:09:14,649 --> 00:09:19,899
technology itself is meant for remote

181
00:09:17,290 --> 00:09:24,540
<font color="#CCCCCC">control and administration</font><font color="#E5E5E5"> of computer</font>

182
00:09:19,899 --> 00:09:28,149
systems<font color="#E5E5E5"> so it allows powering on and off</font>

183
00:09:24,540 --> 00:09:32,199
<font color="#E5E5E5">resetting the</font><font color="#CCCCCC"> system and accessing BIOS</font>

184
00:09:28,149 --> 00:09:34,660
setup through serial<font color="#E5E5E5"> over</font><font color="#CCCCCC"> LAN</font><font color="#E5E5E5"> it also</font>

185
00:09:32,199 --> 00:09:36,609
allows getting the<font color="#E5E5E5"> information about the</font>

186
00:09:34,660 --> 00:09:40,360
system<font color="#E5E5E5"> Hardware through the web</font>

187
00:09:36,610 --> 00:09:42,999
interface<font color="#E5E5E5"> also booting</font><font color="#CCCCCC"> this system from</font>

188
00:09:40,360 --> 00:09:44,980
<font color="#CCCCCC">the custom boot image file</font><font color="#E5E5E5"> also</font>

189
00:09:42,999 --> 00:09:48,329
acquiring<font color="#E5E5E5"> the full control of the</font>

190
00:09:44,980 --> 00:09:51,339
monitor<font color="#CCCCCC"> keyboard and mouse of the system</font>

191
00:09:48,329 --> 00:09:53,439
any of these any of these features

192
00:09:51,339 --> 00:09:56,769
<font color="#E5E5E5">requires only the target system to be</font>

193
00:09:53,439 --> 00:10:00,730
plugged in and<font color="#E5E5E5"> to have the official AMT</font>

194
00:09:56,769 --> 00:10:03,999
support regarding the<font color="#CCCCCC"> vPro brand</font><font color="#E5E5E5"> these</font>

195
00:10:00,730 --> 00:10:07,689
capabilities<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> necessarily depend on</font>

196
00:10:03,999 --> 00:10:10,600
an operating<font color="#CCCCCC"> system of target moreover</font>

197
00:10:07,689 --> 00:10:17,379
it could be used<font color="#E5E5E5"> to delete or reinstall</font>

198
00:10:10,600 --> 00:10:20,529
it there are several<font color="#E5E5E5"> ways</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> access the</font>

199
00:10:17,379 --> 00:10:22,870
Intel AMT features<font color="#E5E5E5"> the wired</font>

200
00:10:20,529 --> 00:10:24,730
<font color="#CCCCCC">excuse me remote access is available</font>

201
00:10:22,870 --> 00:10:27,699
through the wired or wireless network

202
00:10:24,730 --> 00:10:30,189
interfaces starting from certain

203
00:10:27,699 --> 00:10:32,889
versions messages received<font color="#E5E5E5"> on a wired</font>

204
00:10:30,189 --> 00:10:34,779
LAN interface<font color="#CCCCCC"> and addressed</font><font color="#E5E5E5"> to certain</font>

205
00:10:32,889 --> 00:10:38,129
ports are intercepted by<font color="#E5E5E5"> management</font>

206
00:10:34,779 --> 00:10:41,529
engine prior to reaching the OS<font color="#CCCCCC"> nutsac</font>

207
00:10:38,129 --> 00:10:43,929
messages received on<font color="#E5E5E5"> wireless interface</font>

208
00:10:41,529 --> 00:10:46,149
go to the<font color="#CCCCCC"> host</font><font color="#E5E5E5"> wireless driver the</font>

209
00:10:43,929 --> 00:10:49,990
driver detects the destination port<font color="#E5E5E5"> and</font>

210
00:10:46,149 --> 00:10:51,999
sends the message<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Intel AMT various</font>

211
00:10:49,990 --> 00:10:55,959
local applications are able<font color="#CCCCCC"> to access</font>

212
00:10:51,999 --> 00:10:59,889
the Intel AMT features<font color="#E5E5E5"> the same way</font>

213
00:10:55,959 --> 00:11:04,229
<font color="#CCCCCC">Network applications do like WS</font>

214
00:10:59,889 --> 00:11:04,230
management over soap over HTTP

215
00:11:07,270 --> 00:11:13,150
and here are the most<font color="#CCCCCC"> well known Network</font>

216
00:11:10,690 --> 00:11:16,710
ports that are<font color="#E5E5E5"> used by the remote</font>

217
00:11:13,150 --> 00:11:21,370
administrator to access the AMT system

218
00:11:16,710 --> 00:11:23,980
so Seneca<font color="#E5E5E5"> Doane</font><font color="#CCCCCC"> I will take the flow</font><font color="#E5E5E5"> at</font>

219
00:11:21,370 --> 00:11:27,100
this point<font color="#E5E5E5"> move on to the next section</font>

220
00:11:23,980 --> 00:11:31,030
<font color="#E5E5E5">of our presentation</font><font color="#CCCCCC"> and let's have a</font>

221
00:11:27,100 --> 00:11:36,100
look<font color="#CCCCCC"> the possibility of unauthorized</font>

222
00:11:31,030 --> 00:11:38,800
remote access to into an<font color="#CCCCCC"> teen system at</font>

223
00:11:36,100 --> 00:11:42,430
<font color="#CCCCCC">first</font><font color="#E5E5E5"> things to do is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look from a</font>

224
00:11:38,800 --> 00:11:45,699
user's point of you at how the sinks are

225
00:11:42,430 --> 00:11:49,180
arranged when users access the inter

226
00:11:45,700 --> 00:11:52,060
empty web browser<font color="#CCCCCC"> why</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> one six</font>

227
00:11:49,180 --> 00:11:56,349
<font color="#E5E5E5">eight</font><font color="#CCCCCC"> nine</font><font color="#E5E5E5"> nine</font><font color="#CCCCCC"> to part they</font><font color="#E5E5E5"> are</font>

228
00:11:52,060 --> 00:12:00,579
referred<font color="#CCCCCC"> to a</font><font color="#E5E5E5"> logon page and challenge</font>

229
00:11:56,350 --> 00:12:05,050
<font color="#CCCCCC">we standard on vacation</font><font color="#E5E5E5"> require</font><font color="#CCCCCC"> request</font>

230
00:12:00,580 --> 00:12:09,220
<font color="#E5E5E5">so let's use MIT Broxson now this help</font>

231
00:12:05,050 --> 00:12:12,099
of<font color="#E5E5E5"> proxy so on let's analyze analyze</font>

232
00:12:09,220 --> 00:12:18,820
what is actually<font color="#CCCCCC"> happening in more</font>

233
00:12:12,100 --> 00:12:22,840
details<font color="#E5E5E5"> as for air I've seen</font><font color="#CCCCCC"> 2617</font><font color="#E5E5E5"> digest</font>

234
00:12:18,820 --> 00:12:27,960
unification<font color="#CCCCCC"> the first request</font><font color="#E5E5E5"> guest gets</font>

235
00:12:22,840 --> 00:12:32,080
a respond with 401<font color="#E5E5E5"> code what which means</font>

236
00:12:27,960 --> 00:12:35,140
<font color="#E5E5E5">unauthorized it's</font><font color="#CCCCCC"> okay then given a</font>

237
00:12:32,080 --> 00:12:38,650
correct name and password as<font color="#E5E5E5"> I so</font><font color="#CCCCCC"> accept</font>

238
00:12:35,140 --> 00:12:42,250
one as a<font color="#E5E5E5"> legitimate user when give an</font>

239
00:12:38,650 --> 00:12:44,829
incorrect<font color="#CCCCCC"> user name or</font><font color="#E5E5E5"> password</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> that</font>

240
00:12:42,250 --> 00:12:49,240
doesn't accept one this kind<font color="#E5E5E5"> of behavior</font>

241
00:12:44,830 --> 00:12:52,450
<font color="#CCCCCC">is</font><font color="#E5E5E5"> not surprising at all we slide you</font>

242
00:12:49,240 --> 00:12:56,080
can<font color="#CCCCCC"> see a network</font><font color="#E5E5E5"> traffic of successful</font>

243
00:12:52,450 --> 00:12:59,440
attempt some<font color="#E5E5E5"> lashing extraordinary has</font>

244
00:12:56,080 --> 00:13:03,010
happened during the ossification process

245
00:12:59,440 --> 00:13:06,250
but the detailed look at the<font color="#CCCCCC"> snippet</font>

246
00:13:03,010 --> 00:13:09,480
packets give us a clue of what to look

247
00:13:06,250 --> 00:13:12,610
<font color="#E5E5E5">for in an</font><font color="#CCCCCC"> earphone where it is honest</font>

248
00:13:09,480 --> 00:13:16,390
relation here<font color="#CCCCCC"> or field</font><font color="#E5E5E5"> names</font><font color="#CCCCCC"> it is a</font>

249
00:13:12,610 --> 00:13:18,090
bunch of strings like<font color="#CCCCCC"> user name real</font>

250
00:13:16,390 --> 00:13:21,840
name response you know

251
00:13:18,090 --> 00:13:24,390
nonce which<font color="#CCCCCC"> strain can be</font><font color="#E5E5E5"> used for</font>

252
00:13:21,840 --> 00:13:27,300
<font color="#E5E5E5">searching through firmware and pinpoint</font>

253
00:13:24,390 --> 00:13:32,040
the<font color="#CCCCCC"> word</font><font color="#E5E5E5"> code that is responsible both</font>

254
00:13:27,300 --> 00:13:35,339
for the<font color="#CCCCCC"> digestif ocation</font><font color="#E5E5E5"> for purpose of</font>

255
00:13:32,040 --> 00:13:37,349
reverse engineering<font color="#E5E5E5"> the Intel ami film</font>

256
00:13:35,340 --> 00:13:40,380
where we<font color="#E5E5E5"> will be used as the Ida prod</font>

257
00:13:37,350 --> 00:13:45,570
<font color="#CCCCCC">disassembly</font><font color="#E5E5E5"> and special loader script</font>

258
00:13:40,380 --> 00:13:50,490
<font color="#E5E5E5">this plugin was written in Python in the</font>

259
00:13:45,570 --> 00:13:54,420
idiots to<font color="#CCCCCC"> M</font><font color="#E5E5E5"> format it's a super</font><font color="#CCCCCC"> ami</font>

260
00:13:50,490 --> 00:13:58,860
format in idem<font color="#E5E5E5"> assembler it should be</font>

261
00:13:54,420 --> 00:14:01,910
work<font color="#CCCCCC"> for all from</font><font color="#E5E5E5"> variations</font><font color="#CCCCCC"> Prime</font><font color="#E5E5E5"> prior</font>

262
00:13:58,860 --> 00:14:06,450
<font color="#E5E5E5">to</font><font color="#CCCCCC"> 10</font><font color="#E5E5E5"> so after all talk you can download</font>

263
00:14:01,910 --> 00:14:10,770
this<font color="#CCCCCC"> plugin and use in your own project</font>

264
00:14:06,450 --> 00:14:14,040
<font color="#E5E5E5">and</font><font color="#CCCCCC"> after the loader</font><font color="#E5E5E5"> completes parsing a</font>

265
00:14:10,770 --> 00:14:17,760
<font color="#CCCCCC">authorized</font><font color="#E5E5E5"> processing the firmware will</font>

266
00:14:14,040 --> 00:14:20,880
be have a nice and clean look<font color="#E5E5E5"> on to the</font>

267
00:14:17,760 --> 00:14:26,130
present code and data<font color="#E5E5E5"> you can see on</font>

268
00:14:20,880 --> 00:14:28,920
this slide<font color="#CCCCCC"> so I click search for the</font>

269
00:14:26,130 --> 00:14:32,970
strings like<font color="#E5E5E5"> username scene</font><font color="#CCCCCC"> ons real</font>

270
00:14:28,920 --> 00:14:36,540
name etc<font color="#E5E5E5"> provides us with</font><font color="#CCCCCC"> exact</font><font color="#E5E5E5"> streaks</font>

271
00:14:32,970 --> 00:14:41,910
<font color="#E5E5E5">trees in the next</font><font color="#CCCCCC"> tech module</font><font color="#E5E5E5"> as we can</font>

272
00:14:36,540 --> 00:14:46,410
see the<font color="#CCCCCC"> sees a</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> cross-reference</font><font color="#E5E5E5"> from</font>

273
00:14:41,910 --> 00:14:49,880
one particular<font color="#CCCCCC"> function this function is</font>

274
00:14:46,410 --> 00:14:52,860
responsible for<font color="#E5E5E5"> processing</font><font color="#CCCCCC"> oh no Sarah</font>

275
00:14:49,880 --> 00:14:55,800
<font color="#E5E5E5">observation header fields and their</font>

276
00:14:52,860 --> 00:14:58,950
overall digest authentication<font color="#CCCCCC"> after a</font>

277
00:14:55,800 --> 00:15:02,280
careful examination of the<font color="#E5E5E5"> function code</font>

278
00:14:58,950 --> 00:15:05,730
we found an<font color="#E5E5E5"> interesting back the exact</font>

279
00:15:02,280 --> 00:15:08,430
place of the back is in<font color="#E5E5E5"> the final</font>

280
00:15:05,730 --> 00:15:11,880
<font color="#E5E5E5">comparison of the provided response and</font>

281
00:15:08,430 --> 00:15:15,839
the computed response to<font color="#E5E5E5"> values were</font>

282
00:15:11,880 --> 00:15:21,390
tested against each other to see<font color="#CCCCCC"> if</font><font color="#E5E5E5"> they</font>

283
00:15:15,840 --> 00:15:26,040
match but the actual number<font color="#CCCCCC"> number of</font>

284
00:15:21,390 --> 00:15:29,880
bytes to<font color="#CCCCCC"> be tested</font><font color="#E5E5E5"> was taken from the</font>

285
00:15:26,040 --> 00:15:31,860
user provided response<font color="#CCCCCC"> thus if one</font>

286
00:15:29,880 --> 00:15:34,649
provides<font color="#E5E5E5"> empty</font><font color="#CCCCCC"> or</font>

287
00:15:31,860 --> 00:15:38,459
one<font color="#CCCCCC"> stream stream comparison function</font>

288
00:15:34,649 --> 00:15:41,720
<font color="#CCCCCC">return</font><font color="#E5E5E5"> zero as</font><font color="#CCCCCC"> the number of</font><font color="#E5E5E5"> bytes to be</font>

289
00:15:38,459 --> 00:15:45,500
compared compared is zero and<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> means</font>

290
00:15:41,720 --> 00:15:48,750
<font color="#CCCCCC">successful authorization is all back</font><font color="#E5E5E5"> so</font>

291
00:15:45,500 --> 00:15:51,209
let's repeat our previous experiment<font color="#E5E5E5"> but</font>

292
00:15:48,750 --> 00:15:54,240
<font color="#E5E5E5">with local</font><font color="#CCCCCC"> proxy</font><font color="#E5E5E5"> in order to exploit a</font>

293
00:15:51,209 --> 00:15:57,180
newly found vulnerability<font color="#E5E5E5"> one can use a</font>

294
00:15:54,240 --> 00:15:59,940
<font color="#E5E5E5">mitten proxy</font><font color="#CCCCCC"> to with a simple script</font>

295
00:15:57,180 --> 00:16:03,589
that blanks the response field in the

296
00:15:59,940 --> 00:16:06,750
authorization<font color="#E5E5E5"> head of outgoing requests</font>

297
00:16:03,589 --> 00:16:13,560
<font color="#E5E5E5">that's a very simple script which has a</font>

298
00:16:06,750 --> 00:16:15,690
small size about<font color="#CCCCCC"> ten lines of code need</font>

299
00:16:13,560 --> 00:16:17,790
configure web browser the browser is

300
00:16:15,690 --> 00:16:22,680
configured to<font color="#CCCCCC"> accesses a network through</font>

301
00:16:17,790 --> 00:16:25,319
<font color="#CCCCCC">the local proxy at 8:18</font><font color="#E5E5E5"> part the</font>

302
00:16:22,680 --> 00:16:28,560
password we have just typed in obvious

303
00:16:25,320 --> 00:16:32,160
incorrect because the<font color="#E5E5E5"> intel amt a</font>

304
00:16:28,560 --> 00:16:34,500
doesn't allow password shot and then

305
00:16:32,160 --> 00:16:39,120
<font color="#CCCCCC">eight characters</font><font color="#E5E5E5"> but we will give it</font>

306
00:16:34,500 --> 00:16:44,519
<font color="#CCCCCC">right so for first request we have a</font>

307
00:16:39,120 --> 00:16:50,790
same result as<font color="#CCCCCC"> our previous</font><font color="#E5E5E5"> experiment</font>

308
00:16:44,519 --> 00:16:54,839
<font color="#E5E5E5">but for them voila take we</font><font color="#CCCCCC"> have caught</font>

309
00:16:50,790 --> 00:16:58,709
two hundreds which means<font color="#E5E5E5"> successful</font>

310
00:16:54,839 --> 00:17:01,380
authorization and please take a note<font color="#CCCCCC"> on</font>

311
00:16:58,709 --> 00:17:04,909
<font color="#CCCCCC">the well of the</font><font color="#E5E5E5"> response field of the</font>

312
00:17:01,380 --> 00:17:08,790
<font color="#E5E5E5">authorization</font><font color="#CCCCCC"> header</font><font color="#E5E5E5"> it's empty</font>

313
00:17:04,910 --> 00:17:11,309
so attacker<font color="#E5E5E5"> is now authenticated as a</font>

314
00:17:08,790 --> 00:17:15,299
<font color="#E5E5E5">legitimate system admin it has a full</font>

315
00:17:11,309 --> 00:17:18,418
access to<font color="#CCCCCC"> average of</font><font color="#E5E5E5"> intel amt controls</font>

316
00:17:15,299 --> 00:17:22,949
he can do absolutely everything<font color="#E5E5E5"> without</font>

317
00:17:18,419 --> 00:17:25,589
<font color="#E5E5E5">knowledge of password we check it with</font>

318
00:17:22,949 --> 00:17:28,890
<font color="#CCCCCC">owner ability on other Intel NT versions</font>

319
00:17:25,589 --> 00:17:32,220
<font color="#E5E5E5">from all the to new ones to check them</font>

320
00:17:28,890 --> 00:17:33,690
we simply<font color="#CCCCCC"> use</font><font color="#E5E5E5"> a local proxy without any</font>

321
00:17:32,220 --> 00:17:35,549
reverse engineering

322
00:17:33,690 --> 00:17:40,190
after that we reported<font color="#CCCCCC"> this</font>

323
00:17:35,549 --> 00:17:43,650
<font color="#CCCCCC">vulnerability to</font><font color="#E5E5E5"> Intel and then Intel of</font>

324
00:17:40,190 --> 00:17:45,900
<font color="#CCCCCC">us to participate</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> there</font>

325
00:17:43,650 --> 00:17:54,770
private back bouncy program on<font color="#E5E5E5"> hacker</font>

326
00:17:45,900 --> 00:17:58,140
<font color="#CCCCCC">wom</font><font color="#E5E5E5"> and we were given $10,000 of art so</font>

327
00:17:54,770 --> 00:18:00,840
as Mozgov<font color="#E5E5E5"> understood its ascent</font><font color="#CCCCCC"> ocation</font>

328
00:17:58,140 --> 00:18:08,040
bypass vulnerability which was later to

329
00:18:00,840 --> 00:18:11,159
know as CV<font color="#E5E5E5"> 20 75th 5689</font><font color="#CCCCCC"> vision ability</font>

330
00:18:08,040 --> 00:18:17,780
<font color="#E5E5E5">originally discovered in beginning</font>

331
00:18:11,160 --> 00:18:21,000
<font color="#E5E5E5">always here and</font><font color="#CCCCCC"> metered</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> February</font><font color="#E5E5E5"> so</font>

332
00:18:17,780 --> 00:18:25,980
for such successful exploitation<font color="#E5E5E5"> for</font>

333
00:18:21,000 --> 00:18:31,170
<font color="#CCCCCC">tech only need open empty port its for</font>

334
00:18:25,980 --> 00:18:36,150
<font color="#E5E5E5">example</font><font color="#CCCCCC"> 1 699</font><font color="#E5E5E5"> to part of course this</font>

335
00:18:31,170 --> 00:18:40,260
system should base it on<font color="#E5E5E5"> Intel CPU and</font>

336
00:18:36,150 --> 00:18:45,929
chipset<font color="#E5E5E5"> and have a valid BIOS and</font><font color="#CCCCCC"> Antle</font>

337
00:18:40,260 --> 00:18:48,660
<font color="#E5E5E5">any</font><font color="#CCCCCC"> found where</font><font color="#E5E5E5"> it always required</font><font color="#CCCCCC"> this</font>

338
00:18:45,929 --> 00:18:51,559
system can run on Linux separation

339
00:18:48,660 --> 00:18:55,770
system or<font color="#E5E5E5"> Windows it doesn't matter</font>

340
00:18:51,559 --> 00:18:59,639
only<font color="#CCCCCC"> Mac not affected because we Scott</font>

341
00:18:55,770 --> 00:19:03,480
is absented<font color="#E5E5E5"> on Mac</font><font color="#CCCCCC"> computers some the</font>

342
00:18:59,640 --> 00:19:06,450
general ideas this idea is<font color="#E5E5E5"> attackers</font>

343
00:19:03,480 --> 00:19:11,630
possibilities and<font color="#E5E5E5"> AMT capability</font><font color="#CCCCCC"> is the</font>

344
00:19:06,450 --> 00:19:15,360
same<font color="#CCCCCC"> seem since so no need your help</font>

345
00:19:11,630 --> 00:19:21,020
<font color="#CCCCCC">okay and how about the impact</font><font color="#E5E5E5"> according</font>

346
00:19:15,360 --> 00:19:25,439
<font color="#E5E5E5">to</font><font color="#CCCCCC"> shodhan on</font><font color="#E5E5E5"> May 2nd there were 6378</font>

347
00:19:21,020 --> 00:19:27,629
available<font color="#CCCCCC"> IPS with Intel AMT however it</font>

348
00:19:25,440 --> 00:19:30,570
should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> taken into consideration that</font>

349
00:19:27,630 --> 00:19:33,000
<font color="#CCCCCC">showed ins data covers only the Internet</font>

350
00:19:30,570 --> 00:19:36,840
while<font color="#E5E5E5"> a good deal of Intel AMT s are</font>

351
00:19:33,000 --> 00:19:39,480
used on corporate networks<font color="#E5E5E5"> these</font>

352
00:19:36,840 --> 00:19:42,649
<font color="#E5E5E5">corporate EMTs can easily be used</font><font color="#CCCCCC"> by an</font>

353
00:19:39,480 --> 00:19:45,990
attacker who<font color="#CCCCCC"> has</font><font color="#E5E5E5"> connected</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> network</font>

354
00:19:42,650 --> 00:19:49,040
<font color="#CCCCCC">the most impacted industries as we see</font>

355
00:19:45,990 --> 00:19:55,290
here are telecom providers and

356
00:19:49,040 --> 00:19:57,460
universities it turned out<font color="#E5E5E5"> that this</font>

357
00:19:55,290 --> 00:20:01,270
vulnerability<font color="#E5E5E5"> vulnerability had</font>

358
00:19:57,460 --> 00:20:03,970
affected ICS<font color="#E5E5E5"> for instance</font><font color="#CCCCCC"> Siemens</font>

359
00:20:01,270 --> 00:20:08,110
industrial computers based on the Intel

360
00:20:03,970 --> 00:20:10,960
chipset were susceptible to it in other

361
00:20:08,110 --> 00:20:14,168
<font color="#E5E5E5">words not only enterprises and public</font>

362
00:20:10,960 --> 00:20:16,539
organizations<font color="#CCCCCC"> but</font><font color="#E5E5E5"> also critic critical</font>

363
00:20:14,169 --> 00:20:20,770
facilities may also be affected by<font color="#CCCCCC"> the</font>

364
00:20:16,539 --> 00:20:22,179
vulnerability exploitation<font color="#E5E5E5"> so we have a</font>

365
00:20:20,770 --> 00:20:30,399
demo here that we're going<font color="#E5E5E5"> to tell you</font>

366
00:20:22,179 --> 00:20:33,399
<font color="#E5E5E5">and we want to show some daemon so first</font>

367
00:20:30,399 --> 00:20:36,449
to configure<font color="#E5E5E5"> local</font><font color="#CCCCCC"> proxy in browser</font><font color="#E5E5E5"> now</font>

368
00:20:33,399 --> 00:20:36,449
<font color="#E5E5E5">nthe report</font>

369
00:20:42,230 --> 00:20:48,320
and<font color="#E5E5E5"> run maternal proxy to a twist part</font>

370
00:20:50,450 --> 00:21:01,800
try to<font color="#E5E5E5"> login it's incorrect password and</font>

371
00:20:54,690 --> 00:21:03,300
we<font color="#E5E5E5"> can't log in but then it's we input a</font>

372
00:21:01,800 --> 00:21:06,960
correct password<font color="#CCCCCC"> that's where a long</font>

373
00:21:03,300 --> 00:21:10,169
password and your successful attempt

374
00:21:06,960 --> 00:21:15,830
then we<font color="#CCCCCC"> ran our little proxy to these</font>

375
00:21:10,170 --> 00:21:21,150
our scripts and<font color="#E5E5E5"> repeat our attempt with</font>

376
00:21:15,830 --> 00:21:24,350
passwords one sample<font color="#E5E5E5"> that's all we have</font>

377
00:21:21,150 --> 00:21:24,350
a successful exploitation

378
00:21:29,870 --> 00:21:47,060
it's a second demo so let's go next<font color="#CCCCCC"> okay</font>

379
00:21:42,710 --> 00:21:50,460
<font color="#CCCCCC">and after our</font><font color="#E5E5E5"> blogpost went public</font>

380
00:21:47,060 --> 00:21:52,980
tenable<font color="#E5E5E5"> network security company was</font>

381
00:21:50,460 --> 00:21:55,800
able to rediscover our vulnerability

382
00:21:52,980 --> 00:21:58,520
<font color="#E5E5E5">despite not having access</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> any of the</font>

383
00:21:55,800 --> 00:22:01,830
<font color="#E5E5E5">technical details</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> vulnerability</font>

384
00:21:58,520 --> 00:22:04,920
<font color="#E5E5E5">and then after we released the technical</font>

385
00:22:01,830 --> 00:22:07,800
details<font color="#CCCCCC"> the security community developed</font>

386
00:22:04,920 --> 00:22:10,470
many useful tools<font color="#E5E5E5"> and scripts</font><font color="#CCCCCC"> developed</font>

387
00:22:07,800 --> 00:22:12,360
specifically<font color="#CCCCCC"> for this vulnerability one</font>

388
00:22:10,470 --> 00:22:15,180
of the most interesting tools being

389
00:22:12,360 --> 00:22:19,439
honey pots<font color="#CCCCCC"> the existence of these honey</font>

390
00:22:15,180 --> 00:22:22,500
pots now makes it very difficult<font color="#E5E5E5"> to</font>

391
00:22:19,440 --> 00:22:26,540
understand how<font color="#CCCCCC"> many intel amt systems</font>

392
00:22:22,500 --> 00:22:26,540
are truly accessible<font color="#E5E5E5"> from the internet</font>

393
00:22:27,890 --> 00:22:34,020
now how can<font color="#E5E5E5"> we</font><font color="#CCCCCC"> eliminate this</font>

394
00:22:30,920 --> 00:22:35,790
<font color="#E5E5E5">vulnerability well install created a</font>

395
00:22:34,020 --> 00:22:39,860
patch for<font color="#E5E5E5"> this vulnerability and</font>

396
00:22:35,790 --> 00:22:42,629
provided it<font color="#CCCCCC"> to all affected OAM vendors</font>

397
00:22:39,860 --> 00:22:44,939
<font color="#E5E5E5">following this all affected</font><font color="#CCCCCC"> OAM vendors</font>

398
00:22:42,630 --> 00:22:48,660
<font color="#CCCCCC">created new firmware</font><font color="#E5E5E5"> which is now</font>

399
00:22:44,940 --> 00:22:50,310
available<font color="#CCCCCC"> for</font><font color="#E5E5E5"> users to download because</font>

400
00:22:48,660 --> 00:22:53,010
<font color="#E5E5E5">this vulnerability exists at the</font>

401
00:22:50,310 --> 00:22:54,750
firmware<font color="#CCCCCC"> level you personally have to</font>

402
00:22:53,010 --> 00:22:57,000
update it<font color="#E5E5E5"> so it's not going to happen</font>

403
00:22:54,750 --> 00:23:00,600
automatically<font color="#CCCCCC"> so how many of</font><font color="#E5E5E5"> you have</font>

404
00:22:57,000 --> 00:23:07,620
actually updated or excuse me installed

405
00:23:00,600 --> 00:23:11,250
this patch so yeah so now we're going<font color="#E5E5E5"> to</font>

406
00:23:07,620 --> 00:23:13,229
<font color="#E5E5E5">begin to talk</font><font color="#CCCCCC"> about our research which</font>

407
00:23:11,250 --> 00:23:14,700
we haven't<font color="#CCCCCC"> released</font><font color="#E5E5E5"> yet so you'll be</font>

408
00:23:13,230 --> 00:23:19,290
hearing<font color="#E5E5E5"> it for the first time</font><font color="#CCCCCC"> just now</font>

409
00:23:14,700 --> 00:23:23,820
<font color="#E5E5E5">mm-hmm Thank You</font><font color="#CCCCCC"> Dom</font><font color="#E5E5E5"> so it's all good</font>

410
00:23:19,290 --> 00:23:34,470
and well<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it is possible if</font><font color="#CCCCCC"> Intel AMT</font>

411
00:23:23,820 --> 00:23:38,250
is activated yes so we wondered if is it

412
00:23:34,470 --> 00:23:41,400
possible for attacker<font color="#E5E5E5"> to spread out</font><font color="#CCCCCC"> the</font>

413
00:23:38,250 --> 00:23:42,809
courage of is vulnerability<font color="#E5E5E5"> and into</font>

414
00:23:41,400 --> 00:23:48,480
empty itself

415
00:23:42,809 --> 00:23:53,279
<font color="#E5E5E5">to their own goals as you know Intel AMT</font>

416
00:23:48,480 --> 00:23:55,590
is<font color="#E5E5E5"> part of</font><font color="#CCCCCC"> vPro brand</font><font color="#E5E5E5"> first of all we</font>

417
00:23:53,279 --> 00:23:59,600
want<font color="#E5E5E5"> to understand how exactly the non</font>

418
00:23:55,590 --> 00:24:04,139
<font color="#CCCCCC">vPro system differs from a repro system</font>

419
00:23:59,600 --> 00:24:07,799
so another<font color="#E5E5E5"> pro system is based on</font><font color="#CCCCCC"> GHB</font>

420
00:24:04,139 --> 00:24:11,219
<font color="#CCCCCC">p-type chipset it's more a</font><font color="#E5E5E5"> chip system</font>

421
00:24:07,799 --> 00:24:14,850
when we<font color="#CCCCCC"> Pro</font><font color="#E5E5E5"> system based on</font><font color="#CCCCCC"> qu type</font>

422
00:24:11,220 --> 00:24:17,789
chipset from Intel<font color="#E5E5E5"> a more expensive so</font>

423
00:24:14,850 --> 00:24:22,080
we<font color="#CCCCCC"> take that non vPro Evie</font><font color="#E5E5E5"> Perl system</font>

424
00:24:17,789 --> 00:24:24,600
may have absolutely similar Intel any

425
00:24:22,080 --> 00:24:27,600
firmware images so into<font color="#CCCCCC"> MT</font>

426
00:24:24,600 --> 00:24:33,330
implementation is often present on<font color="#CCCCCC"> a non</font>

427
00:24:27,600 --> 00:24:36,719
<font color="#CCCCCC">vPro system this series into mg code</font><font color="#E5E5E5"> in</font>

428
00:24:33,330 --> 00:24:40,249
all<font color="#CCCCCC"> five megabytes firmware versions</font><font color="#E5E5E5"> it</font>

429
00:24:36,720 --> 00:24:46,080
turns out<font color="#E5E5E5"> that main difference is map X</font>

430
00:24:40,249 --> 00:24:52,049
module and some options in BIOS setup

431
00:24:46,080 --> 00:24:53,009
it's a<font color="#CCCCCC"> BIOS models that you that uses</font>

432
00:24:52,049 --> 00:24:57,480
heci

433
00:24:53,009 --> 00:24:59,639
to configure<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Intel aunty however</font>

434
00:24:57,480 --> 00:25:04,860
<font color="#E5E5E5">maybe maybe there are some hardware</font>

435
00:24:59,639 --> 00:25:10,799
restriction<font color="#E5E5E5"> and how can we interact</font>

436
00:25:04,860 --> 00:25:12,928
visit and make<font color="#E5E5E5"> it work</font><font color="#CCCCCC"> the HH e CI</font>

437
00:25:10,799 --> 00:25:15,929
interface seems to<font color="#E5E5E5"> be a useful</font>

438
00:25:12,929 --> 00:25:18,539
communication<font color="#E5E5E5"> a channel with an tell</font><font color="#CCCCCC"> me</font>

439
00:25:15,929 --> 00:25:23,970
<font color="#CCCCCC">it could</font><font color="#E5E5E5"> be used for example</font><font color="#CCCCCC"> it could be</font>

440
00:25:18,539 --> 00:25:26,730
<font color="#CCCCCC">used for</font><font color="#E5E5E5"> in debugging</font><font color="#CCCCCC"> to gain the status</font>

441
00:25:23,970 --> 00:25:30,119
of<font color="#CCCCCC"> into a me or retrieve some other</font>

442
00:25:26,730 --> 00:25:31,610
<font color="#CCCCCC">information and for many other</font>

443
00:25:30,119 --> 00:25:36,299
interesting things

444
00:25:31,610 --> 00:25:42,209
unfortunately<font color="#CCCCCC"> it speeches the comment</font>

445
00:25:36,299 --> 00:25:46,529
system is not public a little<font color="#CCCCCC"> bit about</font>

446
00:25:42,210 --> 00:25:52,950
heci<font color="#CCCCCC"> it's a interface</font><font color="#E5E5E5"> it's is a bunch of</font>

447
00:25:46,529 --> 00:25:54,700
<font color="#CCCCCC">register set in</font><font color="#E5E5E5"> pc is FG and</font><font color="#CCCCCC"> mm</font><font color="#E5E5E5"> I am the</font>

448
00:25:52,950 --> 00:25:58,869
message should be sent

449
00:25:54,700 --> 00:26:02,940
through the cycle buffer in mm I am<font color="#CCCCCC"> the</font>

450
00:25:58,869 --> 00:26:05,590
message contained should contain a

451
00:26:02,940 --> 00:26:09,159
comment<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> message is sent to</font>

452
00:26:05,590 --> 00:26:13,449
Intel<font color="#E5E5E5"> ami the acknowledged message is to</font>

453
00:26:09,159 --> 00:26:16,389
be respond<font color="#E5E5E5"> there is a driver design it</font>

454
00:26:13,450 --> 00:26:23,289
for this purpose<font color="#E5E5E5"> in</font><font color="#CCCCCC"> this system</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font>

455
00:26:16,389 --> 00:26:26,258
<font color="#E5E5E5">see this driver in device manager</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> it</font>

456
00:26:23,289 --> 00:26:30,759
is this driver that maintains<font color="#E5E5E5"> the</font>

457
00:26:26,259 --> 00:26:33,970
communication with Intel a<font color="#E5E5E5"> me as a</font>

458
00:26:30,759 --> 00:26:37,539
message protocol itself is based on<font color="#CCCCCC"> this</font>

459
00:26:33,970 --> 00:26:41,169
<font color="#CCCCCC">M IHI protocol to send</font><font color="#E5E5E5"> a message you</font>

460
00:26:37,539 --> 00:26:44,049
need to know the grid of<font color="#E5E5E5"> the specific</font>

461
00:26:41,169 --> 00:26:46,929
<font color="#E5E5E5">land</font><font color="#CCCCCC"> you want to communicate with there</font>

462
00:26:44,049 --> 00:26:51,279
are some non clients<font color="#CCCCCC"> this is a certain</font>

463
00:26:46,929 --> 00:26:55,929
set of capabilities<font color="#E5E5E5"> in our case to</font>

464
00:26:51,279 --> 00:27:00,309
<font color="#E5E5E5">configure the Intel AMT the mg</font><font color="#CCCCCC"> H I</font>

465
00:26:55,929 --> 00:27:02,919
clients<font color="#E5E5E5"> must be used so as</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> format of</font>

466
00:27:00,309 --> 00:27:06,850
message with comment<font color="#E5E5E5"> where is dependent</font>

467
00:27:02,919 --> 00:27:10,779
on the<font color="#CCCCCC"> HESI client you communicate</font><font color="#E5E5E5"> and</font>

468
00:27:06,850 --> 00:27:14,320
twist<font color="#E5E5E5"> so for the nth clients they form</font>

469
00:27:10,779 --> 00:27:18,820
the<font color="#CCCCCC"> following format is use it as you</font>

470
00:27:14,320 --> 00:27:21,189
<font color="#E5E5E5">can see the</font><font color="#CCCCCC"> message have the group ID</font>

471
00:27:18,820 --> 00:27:25,779
field meaning<font color="#E5E5E5"> the command group</font>

472
00:27:21,190 --> 00:27:29,109
identifier<font color="#E5E5E5"> each group has</font><font color="#CCCCCC"> a specific set</font>

473
00:27:25,779 --> 00:27:33,669
<font color="#CCCCCC">of</font><font color="#E5E5E5"> comments to configure the Intel AMT</font>

474
00:27:29,109 --> 00:27:35,559
<font color="#E5E5E5">that wealth group ID must be used</font><font color="#CCCCCC"> some</font>

475
00:27:33,669 --> 00:27:37,960
after<font color="#E5E5E5"> reverse-engineered we found</font>

476
00:27:35,559 --> 00:27:40,389
comments for mg activation in the

477
00:27:37,960 --> 00:27:44,100
activation<font color="#CCCCCC"> the following commands</font><font color="#E5E5E5"> must</font>

478
00:27:40,389 --> 00:27:47,019
be sent one by one<font color="#E5E5E5"> to configure the AMT</font>

479
00:27:44,100 --> 00:27:48,820
<font color="#E5E5E5">after sending the message don't forget</font>

480
00:27:47,019 --> 00:27:51,489
to receive the<font color="#E5E5E5"> acknowledgement very</font>

481
00:27:48,820 --> 00:27:55,029
important model moment user interface

482
00:27:51,489 --> 00:27:58,539
for enabling<font color="#CCCCCC"> and disabling</font><font color="#E5E5E5"> AMT</font><font color="#CCCCCC"> is absent</font>

483
00:27:55,029 --> 00:28:01,600
on<font color="#CCCCCC"> int'l</font><font color="#E5E5E5"> non-liberal system that means</font>

484
00:27:58,539 --> 00:28:06,580
<font color="#E5E5E5">user can't disabling into empty after</font>

485
00:28:01,600 --> 00:28:08,290
<font color="#E5E5E5">activation on</font><font color="#CCCCCC"> non-liberal system so it</font>

486
00:28:06,580 --> 00:28:13,780
will be persistent

487
00:28:08,290 --> 00:28:17,370
activated Intel AMT on system<font color="#E5E5E5"> after and</font>

488
00:28:13,780 --> 00:28:21,580
then after<font color="#CCCCCC"> reverse-engineered we found</font>

489
00:28:17,370 --> 00:28:25,479
common for deactivation into IMC<font color="#E5E5E5"> through</font>

490
00:28:21,580 --> 00:28:28,240
<font color="#CCCCCC">hei interface</font><font color="#E5E5E5"> it's only one comment mg</font>

491
00:28:25,480 --> 00:28:31,960
<font color="#E5E5E5">and provision and after that comment</font>

492
00:28:28,240 --> 00:28:35,320
<font color="#E5E5E5">need reboot system but in one insistent</font>

493
00:28:31,960 --> 00:28:39,840
moment<font color="#CCCCCC"> not need knowledge about password</font>

494
00:28:35,320 --> 00:28:43,000
for activated in<font color="#E5E5E5"> Tulane see you can just</font>

495
00:28:39,840 --> 00:28:51,490
<font color="#E5E5E5">deactivate until</font><font color="#CCCCCC"> empty is</font><font color="#E5E5E5"> and activate</font>

496
00:28:43,000 --> 00:28:54,430
in set up<font color="#E5E5E5"> your password so as a proof of</font>

497
00:28:51,490 --> 00:28:57,130
<font color="#E5E5E5">concept we create</font><font color="#CCCCCC"> two to activate and</font>

498
00:28:54,430 --> 00:29:00,520
deactivate<font color="#CCCCCC"> the Intel AMT on the system</font>

499
00:28:57,130 --> 00:29:04,420
boss<font color="#CCCCCC"> vPro</font><font color="#E5E5E5"> and non</font><font color="#CCCCCC"> v prom</font><font color="#E5E5E5"> the activator</font>

500
00:29:00,520 --> 00:29:09,600
<font color="#CCCCCC">consists</font><font color="#E5E5E5"> from two</font><font color="#CCCCCC"> drivers and one user</font>

501
00:29:04,420 --> 00:29:17,590
space application for<font color="#E5E5E5"> using it we need</font>

502
00:29:09,600 --> 00:29:21,100
admin privileges so the MT activator was

503
00:29:17,590 --> 00:29:24,669
tested on the<font color="#E5E5E5"> following system and we</font>

504
00:29:21,100 --> 00:29:29,169
open source code of these two and you

505
00:29:24,670 --> 00:29:31,600
<font color="#CCCCCC">can use on your choice</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> card so this</font>

506
00:29:29,170 --> 00:29:35,940
code contained and activation a

507
00:29:31,600 --> 00:29:35,939
dictation<font color="#CCCCCC"> common</font><font color="#E5E5E5"> through</font><font color="#CCCCCC"> HCI interface</font>

508
00:29:36,420 --> 00:29:42,300
so now I want to show you a demo

509
00:29:50,000 --> 00:30:00,810
<font color="#CCCCCC">some problem some first system is</font>

510
00:29:55,410 --> 00:30:05,580
Windows 10<font color="#CCCCCC"> it's a computer for attacker</font>

511
00:30:00,810 --> 00:30:09,060
<font color="#CCCCCC">and now</font><font color="#E5E5E5"> attacker</font><font color="#CCCCCC"> try to connect to</font><font color="#E5E5E5"> a</font>

512
00:30:05,580 --> 00:30:13,850
<font color="#E5E5E5">remote system</font><font color="#CCCCCC"> it's will be known vpro</font>

513
00:30:09,060 --> 00:30:13,850
system<font color="#E5E5E5"> without activated into Mt</font>

514
00:30:19,460 --> 00:30:29,150
so then attacker go<font color="#E5E5E5"> then we move to</font>

515
00:30:24,720 --> 00:30:29,150
system<font color="#E5E5E5"> to and run our</font><font color="#CCCCCC"> two</font>

516
00:30:36,160 --> 00:30:42,710
especially for demonstration we also

517
00:30:38,990 --> 00:30:44,630
show<font color="#CCCCCC"> how we delete intel management</font>

518
00:30:42,710 --> 00:30:47,270
engine interface<font color="#E5E5E5"> driver for</font>

519
00:30:44,630 --> 00:30:55,070
demonstrations that how to not need with

520
00:30:47,270 --> 00:31:01,750
standard driver in your<font color="#E5E5E5"> system</font><font color="#CCCCCC"> related</font>

521
00:30:55,070 --> 00:31:06,970
<font color="#E5E5E5">driver</font><font color="#CCCCCC"> die reception open Auto</font><font color="#E5E5E5"> and</font>

522
00:31:01,750 --> 00:31:06,970
<font color="#CCCCCC">Randy's enable argument</font>

523
00:31:16,320 --> 00:31:24,369
the lock says<font color="#CCCCCC"> that's all</font><font color="#E5E5E5"> fine</font><font color="#CCCCCC"> aim AMC</font>

524
00:31:21,460 --> 00:31:31,659
successful at activated and the IP

525
00:31:24,369 --> 00:31:38,668
address was a signet now we come back<font color="#CCCCCC"> to</font>

526
00:31:31,659 --> 00:31:42,240
<font color="#CCCCCC">first system and try our attempt try to</font>

527
00:31:38,669 --> 00:31:50,409
reconnect to Intel<font color="#E5E5E5"> and</font><font color="#CCCCCC"> see to</font><font color="#E5E5E5"> system</font>

528
00:31:42,240 --> 00:31:55,179
<font color="#E5E5E5">system - of course because attacker ran</font>

529
00:31:50,409 --> 00:32:02,649
<font color="#CCCCCC">an</font><font color="#E5E5E5"> integral activator he no username and</font>

530
00:31:55,179 --> 00:32:06,549
correct password yeah<font color="#E5E5E5"> we see a web web</font>

531
00:32:02,649 --> 00:32:14,168
interface of<font color="#CCCCCC"> Intel AMT</font><font color="#E5E5E5"> so Intel MC</font>

532
00:32:06,549 --> 00:32:18,429
successful run on an old<font color="#CCCCCC"> vPro system you</font>

533
00:32:14,169 --> 00:32:24,269
can see<font color="#E5E5E5"> that is a gigabyte non</font><font color="#CCCCCC"> vpro</font>

534
00:32:18,429 --> 00:32:32,000
system<font color="#CCCCCC"> it's chipset gah</font>

535
00:32:24,269 --> 00:32:39,960
97 97<font color="#E5E5E5"> so it's on</font>

536
00:32:32,000 --> 00:32:43,980
[Applause]

537
00:32:39,960 --> 00:32:49,750
<font color="#E5E5E5">a current version of</font><font color="#CCCCCC"> a MT activator has</font>

538
00:32:43,980 --> 00:32:54,160
some limitation<font color="#E5E5E5"> for example these</font>

539
00:32:49,750 --> 00:32:57,460
<font color="#E5E5E5">versions are only for Windows</font><font color="#CCCCCC"> but can be</font>

540
00:32:54,160 --> 00:33:00,600
ported to Linux<font color="#CCCCCC"> of course and we use our</font>

541
00:32:57,460 --> 00:33:03,970
<font color="#CCCCCC">cardinal drivers and you make</font>

542
00:33:00,600 --> 00:33:07,030
implementation which<font color="#CCCCCC"> based on</font><font color="#E5E5E5"> standard</font>

543
00:33:03,970 --> 00:33:14,320
<font color="#CCCCCC">Intel management interface driver</font>

544
00:33:07,030 --> 00:33:16,720
so it's possible<font color="#E5E5E5"> so</font><font color="#CCCCCC"> done so perhaps now</font>

545
00:33:14,320 --> 00:33:19,629
you guys are<font color="#CCCCCC"> thinking about possibility</font>

546
00:33:16,720 --> 00:33:22,360
of Intel AMT being used in malware<font color="#E5E5E5"> as</font>

547
00:33:19,630 --> 00:33:27,250
for malicious code<font color="#E5E5E5"> using Intel AMT it's</font>

548
00:33:22,360 --> 00:33:29,290
worth noting that first<font color="#E5E5E5"> like</font><font color="#CCCCCC"> logbook our</font>

549
00:33:27,250 --> 00:33:32,620
researchers have<font color="#CCCCCC"> already come up with</font>

550
00:33:29,290 --> 00:33:35,290
<font color="#E5E5E5">this idea in their research</font><font color="#CCCCCC"> second quite</font>

551
00:33:32,620 --> 00:33:38,379
<font color="#E5E5E5">recently</font><font color="#CCCCCC"> platinum a malicious program</font>

552
00:33:35,290 --> 00:33:41,260
<font color="#E5E5E5">has been detected in the wild platinum</font>

553
00:33:38,380 --> 00:33:44,559
uses<font color="#CCCCCC"> intel amt sol to secretly</font>

554
00:33:41,260 --> 00:33:46,240
communicate with the<font color="#CCCCCC"> cnc</font><font color="#E5E5E5"> in both cases</font>

555
00:33:44,559 --> 00:33:49,928
the malware does not use a vulnerability

556
00:33:46,240 --> 00:33:53,549
<font color="#CCCCCC">in the Intel AMT</font><font color="#E5E5E5"> contrary to it the</font>

557
00:33:49,929 --> 00:33:55,570
malware uses<font color="#E5E5E5"> only common</font><font color="#CCCCCC"> intel amt sol</font>

558
00:33:53,549 --> 00:33:58,950
capabilities to keep communication

559
00:33:55,570 --> 00:34:03,280
stealthy<font color="#E5E5E5"> and evade security applications</font>

560
00:33:58,950 --> 00:34:05,980
<font color="#E5E5E5">as Microsoft stated this channel works</font>

561
00:34:03,280 --> 00:34:08,679
independently<font color="#E5E5E5"> of the operating system</font>

562
00:34:05,980 --> 00:34:10,960
<font color="#E5E5E5">rendering any</font><font color="#CCCCCC"> commissioned communication</font>

563
00:34:08,679 --> 00:34:13,240
over it invisible<font color="#E5E5E5"> to firewall</font><font color="#CCCCCC"> and</font>

564
00:34:10,960 --> 00:34:18,119
network monitoring applications running

565
00:34:13,239 --> 00:34:21,100
on the host device so the<font color="#E5E5E5"> combination of</font>

566
00:34:18,119 --> 00:34:24,940
the kind is<font color="#E5E5E5"> is not</font><font color="#CCCCCC"> really fiction but</font>

567
00:34:21,100 --> 00:34:27,129
but fact so on

568
00:34:24,940 --> 00:34:30,340
so now how can we mitigate this problem

569
00:34:27,129 --> 00:34:32,859
<font color="#CCCCCC">well</font><font color="#E5E5E5"> the community suggests several</font>

570
00:34:30,340 --> 00:34:35,440
<font color="#E5E5E5">methods however none of these techniques</font>

571
00:34:32,859 --> 00:34:38,139
are really<font color="#E5E5E5"> perfect in some of these</font>

572
00:34:35,440 --> 00:34:40,750
cases the attacker has a countermeasure

573
00:34:38,139 --> 00:34:44,530
for<font color="#CCCCCC"> your mitigation technique if you are</font>

574
00:34:40,750 --> 00:34:47,619
a<font color="#E5E5E5"> company</font><font color="#CCCCCC"> that uses</font><font color="#E5E5E5"> Intel AMT frequently</font>

575
00:34:44,530 --> 00:34:49,659
or even infrequently<font color="#E5E5E5"> in</font><font color="#CCCCCC"> your corporate</font>

576
00:34:47,619 --> 00:34:50,710
<font color="#E5E5E5">network</font><font color="#CCCCCC"> you simply</font><font color="#E5E5E5"> just can't block this</font>

577
00:34:49,659 --> 00:34:53,050
port

578
00:34:50,710 --> 00:34:55,810
on the network firewall because you need

579
00:34:53,050 --> 00:34:57,520
<font color="#E5E5E5">it</font><font color="#CCCCCC"> and then you can always</font><font color="#E5E5E5"> use me</font>

580
00:34:55,810 --> 00:35:00,070
cleaner to remove this<font color="#E5E5E5"> functionality</font>

581
00:34:57,520 --> 00:35:04,990
however<font color="#E5E5E5"> this is dangerous and can break</font>

582
00:35:00,070 --> 00:35:08,260
<font color="#E5E5E5">your system so</font><font color="#CCCCCC"> Avedon really didn't stop</font>

583
00:35:04,990 --> 00:35:10,930
here<font color="#CCCCCC"> I went on we had the question to be</font>

584
00:35:08,260 --> 00:35:17,770
<font color="#E5E5E5">answered which can a potential attacker</font>

585
00:35:10,930 --> 00:35:26,080
do<font color="#CCCCCC"> if a system has 1.5 megabyte firmware</font>

586
00:35:17,770 --> 00:35:30,730
<font color="#E5E5E5">without</font><font color="#CCCCCC"> into MC implementation this part</font>

587
00:35:26,080 --> 00:35:34,598
of our<font color="#CCCCCC"> search is progress now and so</font><font color="#E5E5E5"> far</font>

588
00:35:30,730 --> 00:35:37,990
we have a following<font color="#E5E5E5"> result as the</font>

589
00:35:34,599 --> 00:35:41,140
obvious<font color="#E5E5E5"> way to swap the</font><font color="#CCCCCC"> one point 5 mega</font>

590
00:35:37,990 --> 00:35:44,020
byte from<font color="#E5E5E5"> where images image to 5</font>

591
00:35:41,140 --> 00:35:46,839
<font color="#CCCCCC">megabyte</font><font color="#E5E5E5"> from the image on</font><font color="#CCCCCC"> the system is</font>

592
00:35:44,020 --> 00:35:51,430
to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> SPI flash hardware programmer</font>

593
00:35:46,839 --> 00:35:55,810
<font color="#E5E5E5">this hello to bypass the flash regions</font>

594
00:35:51,430 --> 00:36:00,310
<font color="#E5E5E5">locks so some system have SPI flash</font>

595
00:35:55,810 --> 00:36:03,670
regions unlocked so this opens a way to

596
00:36:00,310 --> 00:36:05,619
do the same<font color="#CCCCCC"> from</font><font color="#E5E5E5"> software</font><font color="#CCCCCC"> the</font>

597
00:36:03,670 --> 00:36:08,589
administers administration privileges

598
00:36:05,619 --> 00:36:12,490
<font color="#CCCCCC">and needed</font><font color="#E5E5E5"> in case you need use our</font>

599
00:36:08,589 --> 00:36:15,520
kernel driver for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> or exploit</font>

600
00:36:12,490 --> 00:36:24,040
some local previous installation

601
00:36:15,520 --> 00:36:27,910
vulnerability in bias in<font color="#CCCCCC"> SMM mod so we</font>

602
00:36:24,040 --> 00:36:33,670
have a successful<font color="#E5E5E5"> attempt make it made</font>

603
00:36:27,910 --> 00:36:40,109
it on gigabyte system<font color="#CCCCCC"> so that's all</font>

604
00:36:33,670 --> 00:36:43,780
now while so what can in<font color="#CCCCCC"> tacker do by</font>

605
00:36:40,109 --> 00:36:46,180
using<font color="#CCCCCC"> Intel AMT well this table</font>

606
00:36:43,780 --> 00:36:49,450
demonstrates what is possible with each

607
00:36:46,180 --> 00:36:51,220
chipset series<font color="#E5E5E5"> as you can see there are</font>

608
00:36:49,450 --> 00:36:53,890
still<font color="#E5E5E5"> some question</font><font color="#CCCCCC"> marks out there and</font>

609
00:36:51,220 --> 00:36:55,299
this<font color="#E5E5E5"> is because there</font><font color="#CCCCCC"> are just so many</font>

610
00:36:53,890 --> 00:36:58,060
systems<font color="#E5E5E5"> in so many different</font>

611
00:36:55,300 --> 00:36:59,140
<font color="#CCCCCC">configurations you know for us this is</font>

612
00:36:58,060 --> 00:37:02,020
still<font color="#E5E5E5"> work-in-progress</font>

613
00:36:59,140 --> 00:37:03,759
<font color="#E5E5E5">so we're gonna go ahead and ask you guys</font>

614
00:37:02,020 --> 00:37:04,410
<font color="#E5E5E5">you know if you could help us out in</font>

615
00:37:03,760 --> 00:37:09,960
this<font color="#E5E5E5"> great</font>

616
00:37:04,410 --> 00:37:12,870
never be fantastic<font color="#CCCCCC"> now this slide is a</font>

617
00:37:09,960 --> 00:37:17,070
demonstration<font color="#E5E5E5"> of how an attacker would</font>

618
00:37:12,870 --> 00:37:18,810
maneuver through your system<font color="#CCCCCC"> first the</font>

619
00:37:17,070 --> 00:37:22,980
attacker will check to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> if your</font>

620
00:37:18,810 --> 00:37:25,560
system has<font color="#CCCCCC"> AMT enabled</font><font color="#E5E5E5"> and if if you do</font>

621
00:37:22,980 --> 00:37:27,840
and it's not<font color="#E5E5E5"> patched then the attacker</font>

622
00:37:25,560 --> 00:37:32,160
could just go go right ahead with<font color="#CCCCCC"> the</font>

623
00:37:27,840 --> 00:37:34,800
Intel AMT exploit however if it is

624
00:37:32,160 --> 00:37:37,589
patched<font color="#E5E5E5"> the attacker can attempt to</font>

625
00:37:34,800 --> 00:37:40,530
activate AMT or increase the size of<font color="#E5E5E5"> the</font>

626
00:37:37,590 --> 00:37:42,630
firmware<font color="#E5E5E5"> and then activate AMT to use</font>

627
00:37:40,530 --> 00:37:46,830
your<font color="#CCCCCC"> eight to use your Intel AMT</font>

628
00:37:42,630 --> 00:37:49,230
functionality<font color="#CCCCCC"> the thing is</font><font color="#E5E5E5"> because Intel</font>

629
00:37:46,830 --> 00:37:51,509
<font color="#E5E5E5">Emmy is ring</font><font color="#CCCCCC"> minus three and occurs at</font>

630
00:37:49,230 --> 00:37:54,960
the lowest level<font color="#E5E5E5"> like we said</font><font color="#CCCCCC"> before</font>

631
00:37:51,510 --> 00:37:57,990
people have to patch this firmware

632
00:37:54,960 --> 00:38:00,930
themselves and obviously this is<font color="#CCCCCC"> going</font>

633
00:37:57,990 --> 00:38:03,750
to be rare be rare so what this<font color="#E5E5E5"> means is</font>

634
00:38:00,930 --> 00:38:09,600
<font color="#E5E5E5">that this vulnerability will exist for a</font>

635
00:38:03,750 --> 00:38:12,720
<font color="#CCCCCC">very long time now just for some of our</font>

636
00:38:09,600 --> 00:38:15,029
final takeaways<font color="#E5E5E5"> we've established today</font>

637
00:38:12,720 --> 00:38:18,359
<font color="#E5E5E5">how easy it is for an attacker to</font>

638
00:38:15,030 --> 00:38:21,600
exploit our vulnerability in AMT

639
00:38:18,360 --> 00:38:23,190
<font color="#E5E5E5">webserver</font><font color="#CCCCCC"> we also showed you how</font><font color="#E5E5E5"> an</font>

640
00:38:21,600 --> 00:38:27,240
attacker<font color="#E5E5E5"> can activate and deactivate</font>

641
00:38:23,190 --> 00:38:30,660
<font color="#E5E5E5">Intel AMT on</font><font color="#CCCCCC"> V Pro and non repro systems</font>

642
00:38:27,240 --> 00:38:32,759
to undocumented features<font color="#CCCCCC"> and finally we</font>

643
00:38:30,660 --> 00:38:37,080
demonstrated<font color="#E5E5E5"> how it is possible to swap</font>

644
00:38:32,760 --> 00:38:39,630
firmware images from<font color="#CCCCCC"> 1.5 megabytes</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> 5</font>

645
00:38:37,080 --> 00:38:43,620
megabytes<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> globe for the goal of</font>

646
00:38:39,630 --> 00:38:46,170
adding<font color="#E5E5E5"> Intel AMT system so we hope that</font>

647
00:38:43,620 --> 00:38:47,910
<font color="#CCCCCC">our research has shed light and brought</font>

648
00:38:46,170 --> 00:38:51,180
awareness to<font color="#E5E5E5"> the security issues that</font>

649
00:38:47,910 --> 00:38:53,370
ring -<font color="#CCCCCC"> 3 faces so thank you for</font><font color="#E5E5E5"> your</font>

650
00:38:51,180 --> 00:38:57,089
<font color="#E5E5E5">attention today</font><font color="#CCCCCC"> and don't forget to use</font>

651
00:38:53,370 --> 00:38:58,859
<font color="#CCCCCC">the hashtag</font><font color="#E5E5E5"> ask about Intel AMT for you</font>

652
00:38:57,090 --> 00:39:00,260
know questions throughout<font color="#CCCCCC"> the day thank</font>

653
00:38:58,860 --> 00:39:02,070
<font color="#E5E5E5">you</font>

654
00:39:00,260 --> 00:39:06,990
[Music]

655
00:39:02,070 --> 00:39:06,990
that's up no no yeah

