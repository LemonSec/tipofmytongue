1
00:00:00,000 --> 00:00:05,130
welcome to the unofficial closing

2
00:00:01,589 --> 00:00:07,350
ceremonies<font color="#CCCCCC"> - black hat 2017</font><font color="#E5E5E5"> glad you</font>

3
00:00:05,130 --> 00:00:08,400
guys could<font color="#E5E5E5"> make</font><font color="#CCCCCC"> it it's awesome we're</font>

4
00:00:07,350 --> 00:00:11,399
gonna talk today<font color="#E5E5E5"> about revoke</font>

5
00:00:08,400 --> 00:00:14,340
obfuscation<font color="#E5E5E5"> really the depths of how</font>

6
00:00:11,400 --> 00:00:16,470
crazy<font color="#E5E5E5"> PowerShell obfuscation can get but</font>

7
00:00:14,340 --> 00:00:18,600
also<font color="#E5E5E5"> some crazy math and science that we</font>

8
00:00:16,470 --> 00:00:21,840
can do to give you a fighting<font color="#E5E5E5"> chance as</font>

9
00:00:18,600 --> 00:00:23,100
defenders<font color="#CCCCCC"> but</font><font color="#E5E5E5"> is av still here we were</font>

10
00:00:21,840 --> 00:00:27,570
told<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> were gonna get the</font><font color="#E5E5E5"> laser</font>

11
00:00:23,100 --> 00:00:30,410
<font color="#CCCCCC">show like that</font><font color="#E5E5E5"> Jeff Moss Scott whatever</font>

12
00:00:27,570 --> 00:00:33,570
what come on so I'm<font color="#E5E5E5"> Lee Holmes I'm a</font>

13
00:00:30,410 --> 00:00:34,890
architect for Azure management<font color="#CCCCCC"> I the</font>

14
00:00:33,570 --> 00:00:37,559
author<font color="#E5E5E5"> of the Windows PowerShell</font>

15
00:00:34,890 --> 00:00:40,680
cookbook<font color="#E5E5E5"> and was a developer on</font>

16
00:00:37,559 --> 00:00:43,099
PowerShell since the first version my

17
00:00:40,680 --> 00:00:45,420
name is<font color="#E5E5E5"> Daniel Bohannon and I am a</font>

18
00:00:43,100 --> 00:00:47,579
senior applied security researcher for

19
00:00:45,420 --> 00:00:50,100
mandiant<font color="#E5E5E5"> prior to that doing semi are</font>

20
00:00:47,579 --> 00:00:51,930
from India<font color="#E5E5E5"> I'm the author of the in</font><font color="#CCCCCC"> bow</font>

21
00:00:50,100 --> 00:00:54,620
confiscation<font color="#E5E5E5"> and invoke</font><font color="#CCCCCC"> cradle crafter</font>

22
00:00:51,930 --> 00:00:56,699
<font color="#E5E5E5">PowerShell a few skatin frameworks and</font>

23
00:00:54,620 --> 00:01:00,180
yeah just really excited<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be here</font>

24
00:00:56,699 --> 00:01:01,410
talking<font color="#E5E5E5"> about this with you now so to</font>

25
00:01:00,180 --> 00:01:04,049
<font color="#E5E5E5">get things going what we're going to</font>

26
00:01:01,410 --> 00:01:06,840
<font color="#E5E5E5">first talk</font><font color="#CCCCCC"> about is basically</font><font color="#E5E5E5"> a treatise</font>

27
00:01:04,049 --> 00:01:08,369
<font color="#CCCCCC">on</font><font color="#E5E5E5"> blue team</font><font color="#CCCCCC"> Follies</font><font color="#E5E5E5"> so if you take a</font>

28
00:01:06,840 --> 00:01:11,400
look<font color="#E5E5E5"> at the way that people are trying</font>

29
00:01:08,369 --> 00:01:14,369
<font color="#CCCCCC">to detect malicious</font><font color="#E5E5E5"> underhanded any sort</font>

30
00:01:11,400 --> 00:01:16,590
of<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> out there we do see a</font>

31
00:01:14,369 --> 00:01:18,570
bunch of<font color="#E5E5E5"> things that are</font><font color="#CCCCCC"> make it</font>

32
00:01:16,590 --> 00:01:20,580
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> but also where people are</font>

33
00:01:18,570 --> 00:01:24,000
<font color="#E5E5E5">making mistakes</font><font color="#CCCCCC"> that are very very easy</font>

34
00:01:20,580 --> 00:01:25,650
to bypass<font color="#E5E5E5"> so some background</font><font color="#CCCCCC"> in some</font>

35
00:01:24,000 --> 00:01:27,750
context we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> assume</font><font color="#CCCCCC"> here that</font>

36
00:01:25,650 --> 00:01:29,280
<font color="#E5E5E5">there's really a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of prerequisites</font>

37
00:01:27,750 --> 00:01:32,790
when it comes to<font color="#CCCCCC"> doing any sort of</font>

38
00:01:29,280 --> 00:01:34,920
detection<font color="#CCCCCC"> of PowerShell one is that</font>

39
00:01:32,790 --> 00:01:38,100
you've got<font color="#E5E5E5"> command line logging enabled</font>

40
00:01:34,920 --> 00:01:39,210
so event ID<font color="#E5E5E5"> 46</font><font color="#CCCCCC"> 88</font><font color="#E5E5E5"> you can get this from</font>

41
00:01:38,100 --> 00:01:41,360
<font color="#E5E5E5">that or you can also get it from</font>

42
00:01:39,210 --> 00:01:44,130
<font color="#E5E5E5">deploying system on a really great tool</font>

43
00:01:41,360 --> 00:01:45,299
but<font color="#CCCCCC"> also when</font><font color="#E5E5E5"> it comes to the PowerShell</font>

44
00:01:44,130 --> 00:01:47,670
specific stuff

45
00:01:45,299 --> 00:01:49,680
PowerShell<font color="#E5E5E5"> in version 5 has really</font>

46
00:01:47,670 --> 00:01:51,630
really<font color="#CCCCCC"> changed the game when</font><font color="#E5E5E5"> it comes to</font>

47
00:01:49,680 --> 00:01:55,350
what it means<font color="#E5E5E5"> to be a transparent</font>

48
00:01:51,630 --> 00:01:57,060
<font color="#E5E5E5">scripting engine so the two things here</font>

49
00:01:55,350 --> 00:01:58,979
are the PowerShell script block logging

50
00:01:57,060 --> 00:02:00,200
and module logging that<font color="#E5E5E5"> really really</font>

51
00:01:58,979 --> 00:02:02,610
<font color="#E5E5E5">make a big difference</font>

52
00:02:00,200 --> 00:02:04,920
attackers aren't in the<font color="#E5E5E5"> Haab the habit</font>

53
00:02:02,610 --> 00:02:06,990
of enabling<font color="#E5E5E5"> these logs for you so you</font>

54
00:02:04,920 --> 00:02:09,110
might want to do it before<font color="#E5E5E5"> you</font><font color="#CCCCCC"> encounter</font>

55
00:02:06,990 --> 00:02:09,109
them

56
00:02:09,508 --> 00:02:14,159
so this is the the<font color="#CCCCCC"> typical way that</font>

57
00:02:12,030 --> 00:02:16,470
<font color="#E5E5E5">people start to try to do any sort of</font>

58
00:02:14,159 --> 00:02:19,319
<font color="#E5E5E5">analysis of powershell obfuscation or</font>

59
00:02:16,470 --> 00:02:21,540
<font color="#E5E5E5">detection of malice usually it</font><font color="#CCCCCC"> starts</font>

60
00:02:19,319 --> 00:02:23,760
with the event log logging from the

61
00:02:21,540 --> 00:02:26,060
process command lines<font color="#E5E5E5"> so this is what</font>

62
00:02:23,760 --> 00:02:28,319
<font color="#E5E5E5">somebody might do anytime</font><font color="#CCCCCC"> I see</font>

63
00:02:26,060 --> 00:02:31,440
<font color="#E5E5E5">PowerShell with a given command line I'm</font>

64
00:02:28,319 --> 00:02:33,890
gonna use that<font color="#CCCCCC"> as my flag to detect</font><font color="#E5E5E5"> when</font>

65
00:02:31,440 --> 00:02:37,799
something malicious has happened

66
00:02:33,890 --> 00:02:40,260
however<font color="#E5E5E5"> PowerShell like most languages</font>

67
00:02:37,799 --> 00:02:42,269
and automation engines out there<font color="#CCCCCC"> doesn't</font>

68
00:02:40,260 --> 00:02:45,390
need<font color="#E5E5E5"> to take all</font><font color="#CCCCCC"> of its stuff from</font><font color="#E5E5E5"> the</font>

69
00:02:42,269 --> 00:02:47,940
command line itself<font color="#E5E5E5"> you can also pass</font>

70
00:02:45,390 --> 00:02:49,649
input into PowerShell standard input so

71
00:02:47,940 --> 00:02:53,010
if you're<font color="#E5E5E5"> doing PowerShell obfuscation</font>

72
00:02:49,650 --> 00:02:55,379
<font color="#CCCCCC">or malicious detection based</font><font color="#E5E5E5"> on the</font>

73
00:02:53,010 --> 00:02:57,870
content of<font color="#E5E5E5"> PowerShell command lines</font>

74
00:02:55,379 --> 00:02:59,280
<font color="#CCCCCC">here's two examples that</font><font color="#E5E5E5"> you're not</font>

75
00:02:57,870 --> 00:03:01,200
going<font color="#E5E5E5"> to see anything that might</font><font color="#CCCCCC"> have</font>

76
00:02:59,280 --> 00:03:04,379
happened itself so this is somebody

77
00:03:01,200 --> 00:03:07,649
<font color="#E5E5E5">taking CMD piping content into</font>

78
00:03:04,379 --> 00:03:08,700
<font color="#E5E5E5">PowerShell through standard input and it</font>

79
00:03:07,650 --> 00:03:10,620
runs<font color="#E5E5E5"> you can see here it runs</font>

80
00:03:08,700 --> 00:03:13,290
<font color="#E5E5E5">successfully this is what it looks like</font>

81
00:03:10,620 --> 00:03:15,690
in the command line logs just<font color="#E5E5E5"> PowerShell</font>

82
00:03:13,290 --> 00:03:17,910
- or<font color="#CCCCCC"> parish shall invoke expression</font>

83
00:03:15,690 --> 00:03:23,010
input that's<font color="#E5E5E5"> not going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get you</font>

84
00:03:17,910 --> 00:03:24,930
anywhere however<font color="#E5E5E5"> that might be</font><font color="#CCCCCC"> a bypass</font>

85
00:03:23,010 --> 00:03:28,530
but when you're doing<font color="#CCCCCC"> it</font><font color="#E5E5E5"> this way you</font>

86
00:03:24,930 --> 00:03:30,959
will<font color="#E5E5E5"> see CMD that called PowerShell you</font>

87
00:03:28,530 --> 00:03:32,849
will see the commands<font color="#E5E5E5"> that were actually</font>

88
00:03:30,959 --> 00:03:34,739
used to pack all<font color="#CCCCCC"> of this stuff into</font>

89
00:03:32,849 --> 00:03:36,569
PowerShell<font color="#CCCCCC"> and run it</font><font color="#E5E5E5"> so maybe that's</font>

90
00:03:34,739 --> 00:03:38,099
kind<font color="#E5E5E5"> of your approach you you don't want</font>

91
00:03:36,569 --> 00:03:40,440
to detect just the<font color="#E5E5E5"> PowerShell command</font>

92
00:03:38,099 --> 00:03:44,880
lines<font color="#E5E5E5"> but maybe you start looking at CMD</font>

93
00:03:40,440 --> 00:03:47,609
calling PowerShell itself so here's the

94
00:03:44,880 --> 00:03:50,489
question<font color="#CCCCCC"> can we</font><font color="#E5E5E5"> start to just see off</font>

95
00:03:47,609 --> 00:03:53,190
key off<font color="#E5E5E5"> of CMD calling PowerShell maybe</font>

96
00:03:50,489 --> 00:03:55,079
that's a bad<font color="#CCCCCC"> thing to do but</font>

97
00:03:53,190 --> 00:03:58,109
<font color="#CCCCCC">unfortunately not</font><font color="#E5E5E5"> here's an example</font>

98
00:03:55,079 --> 00:04:00,569
where CMD can run any command<font color="#E5E5E5"> that you</font>

99
00:03:58,109 --> 00:04:03,150
<font color="#E5E5E5">give it based on information</font><font color="#CCCCCC"> that's</font>

100
00:04:00,569 --> 00:04:04,679
packed in environment variables<font color="#E5E5E5"> so</font>

101
00:04:03,150 --> 00:04:05,910
here's an example<font color="#E5E5E5"> of packing some</font>

102
00:04:04,680 --> 00:04:08,250
information in an environment variable

103
00:04:05,910 --> 00:04:12,120
and that<font color="#E5E5E5"> represents calling PowerShell</font>

104
00:04:08,250 --> 00:04:14,489
itself<font color="#E5E5E5"> so this is now CMD echoing into</font>

105
00:04:12,120 --> 00:04:17,358
<font color="#CCCCCC">the thing represented by an environment</font>

106
00:04:14,489 --> 00:04:17,358
variable and running it

107
00:04:18,000 --> 00:04:22,330
this<font color="#E5E5E5"> actually happens in the wild</font><font color="#CCCCCC"> this</font>

108
00:04:20,259 --> 00:04:25,080
<font color="#CCCCCC">is an example</font><font color="#E5E5E5"> from thin</font><font color="#CCCCCC"> ate some malware</font>

109
00:04:22,330 --> 00:04:28,139
<font color="#CCCCCC">they're financially motivated attackers</font>

110
00:04:25,080 --> 00:04:30,430
<font color="#E5E5E5">this is what their malware looks like</font>

111
00:04:28,139 --> 00:04:31,960
rings a bell doesn't<font color="#E5E5E5"> it this is exactly</font>

112
00:04:30,430 --> 00:04:35,800
what we were<font color="#CCCCCC"> just talking about this</font><font color="#E5E5E5"> is</font>

113
00:04:31,960 --> 00:04:37,448
<font color="#E5E5E5">what they're</font><font color="#CCCCCC"> doing another point too is</font>

114
00:04:35,800 --> 00:04:39,970
it doesn't<font color="#CCCCCC"> just have to come from</font>

115
00:04:37,449 --> 00:04:41,740
<font color="#E5E5E5">standard input you could pack the</font>

116
00:04:39,970 --> 00:04:43,630
information in environment variable

117
00:04:41,740 --> 00:04:45,630
itself<font color="#E5E5E5"> and have power shall run the</font>

118
00:04:43,630 --> 00:04:48,280
content of that<font color="#E5E5E5"> environment variable</font>

119
00:04:45,630 --> 00:04:51,159
<font color="#CCCCCC">Koffler is some hour strain it does this</font>

120
00:04:48,280 --> 00:04:52,659
and<font color="#CCCCCC"> loves it</font><font color="#E5E5E5"> as well environment</font>

121
00:04:51,160 --> 00:04:54,039
<font color="#E5E5E5">variables are one but what about the</font>

122
00:04:52,660 --> 00:04:56,710
clipboard there's tons of<font color="#CCCCCC"> different ways</font>

123
00:04:54,039 --> 00:04:59,860
<font color="#CCCCCC">to start</font><font color="#E5E5E5"> sending</font><font color="#CCCCCC"> content from powershell</font>

124
00:04:56,710 --> 00:05:01,659
from another process<font color="#E5E5E5"> so you might say</font>

125
00:04:59,860 --> 00:05:03,400
here there's a clipboard an example of

126
00:05:01,660 --> 00:05:06,449
that<font color="#E5E5E5"> you might say here let's start</font>

127
00:05:03,400 --> 00:05:08,409
<font color="#CCCCCC">doing detection anytime CMD is calling</font>

128
00:05:06,449 --> 00:05:10,840
<font color="#CCCCCC">powershell maybe we</font><font color="#E5E5E5"> even start to do</font>

129
00:05:08,410 --> 00:05:14,740
this<font color="#E5E5E5"> among a process tree checking a</font>

130
00:05:10,840 --> 00:05:16,000
<font color="#CCCCCC">couple different ones so here's</font><font color="#E5E5E5"> kind of</font>

131
00:05:14,740 --> 00:05:19,030
a the demo that<font color="#CCCCCC"> we're talking</font><font color="#E5E5E5"> about</font>

132
00:05:16,000 --> 00:05:21,970
<font color="#E5E5E5">before but what I can</font><font color="#CCCCCC"> also do is I can</font>

133
00:05:19,030 --> 00:05:25,388
<font color="#E5E5E5">do CMD to set some environment variables</font>

134
00:05:21,970 --> 00:05:27,310
<font color="#E5E5E5">pipe that into CMD to process the</font>

135
00:05:25,389 --> 00:05:29,680
environment variables and then pipe that

136
00:05:27,310 --> 00:05:32,470
into<font color="#CCCCCC"> pyro shell so if you had any</font>

137
00:05:29,680 --> 00:05:34,930
<font color="#E5E5E5">detection going on directly arguments in</font>

138
00:05:32,470 --> 00:05:39,070
<font color="#E5E5E5">parish in CMD to arguments in PowerShell</font>

139
00:05:34,930 --> 00:05:40,930
<font color="#E5E5E5">that's gonna be broken as well now</font>

140
00:05:39,070 --> 00:05:42,729
here's a<font color="#E5E5E5"> problem it seems like</font><font color="#CCCCCC"> it works</font>

141
00:05:40,930 --> 00:05:45,340
but<font color="#E5E5E5"> you</font><font color="#CCCCCC"> look at your</font><font color="#E5E5E5"> command line logs</font>

142
00:05:42,729 --> 00:05:46,810
<font color="#E5E5E5">and ultimately the parent process you</font>

143
00:05:45,340 --> 00:05:49,388
see it anyway so maybe<font color="#E5E5E5"> you're not so bad</font>

144
00:05:46,810 --> 00:05:51,849
off this little<font color="#E5E5E5"> shield mark that we have</font>

145
00:05:49,389 --> 00:05:53,740
here<font color="#E5E5E5"> that represents some of</font><font color="#CCCCCC"> the stuff</font>

146
00:05:51,849 --> 00:05:55,930
that's<font color="#CCCCCC"> still gonna show up in</font><font color="#E5E5E5"> the actual</font>

147
00:05:53,740 --> 00:05:58,690
<font color="#CCCCCC">PowerShell logs so if you've enabled</font>

148
00:05:55,930 --> 00:06:00,430
<font color="#CCCCCC">PowerShell</font><font color="#E5E5E5"> b5 the script</font><font color="#CCCCCC"> lock logging</font>

149
00:05:58,690 --> 00:06:03,719
and module logging<font color="#E5E5E5"> you're still going to</font>

150
00:06:00,430 --> 00:06:06,449
have evidence<font color="#E5E5E5"> of this happening as well</font>

151
00:06:03,720 --> 00:06:10,030
however take a look at that pipeline

152
00:06:06,449 --> 00:06:12,220
<font color="#E5E5E5">what happened is that first CMD took</font>

153
00:06:10,030 --> 00:06:13,869
your whole arguments<font color="#E5E5E5"> and ran it and so</font>

154
00:06:12,220 --> 00:06:19,120
what I<font color="#CCCCCC"> can do is escape</font><font color="#E5E5E5"> this command</font>

155
00:06:13,870 --> 00:06:21,310
line<font color="#CCCCCC"> that works</font><font color="#E5E5E5"> you got an example here</font>

156
00:06:19,120 --> 00:06:24,490
<font color="#CCCCCC">of CMD</font><font color="#E5E5E5"> echoing something that you can't</font>

157
00:06:21,310 --> 00:06:26,169
even<font color="#E5E5E5"> tell and then running</font><font color="#CCCCCC"> PowerShell so</font>

158
00:06:24,490 --> 00:06:28,659
maybe you start to<font color="#E5E5E5"> say do I'd like look</font>

159
00:06:26,169 --> 00:06:30,609
at the whole tree from like<font color="#E5E5E5"> winning it</font>

160
00:06:28,659 --> 00:06:31,060
all the way<font color="#E5E5E5"> down to PowerShell maybe</font>

161
00:06:30,610 --> 00:06:32,380
that's your

162
00:06:31,060 --> 00:06:34,150
approach is to really<font color="#CCCCCC"> start combining</font>

163
00:06:32,380 --> 00:06:36,190
<font color="#CCCCCC">these things</font><font color="#E5E5E5"> but you've got some</font>

164
00:06:34,150 --> 00:06:38,409
problems<font color="#E5E5E5"> there's a lot of ways to launch</font>

165
00:06:36,190 --> 00:06:41,639
<font color="#CCCCCC">PowerShell and then another window where</font>

166
00:06:38,410 --> 00:06:44,050
there is no shared power<font color="#E5E5E5"> parent process</font>

167
00:06:41,639 --> 00:06:46,570
<font color="#E5E5E5">what if you launch a PowerShell with a</font>

168
00:06:44,050 --> 00:06:48,760
specific<font color="#CCCCCC"> window title and then launch</font>

169
00:06:46,570 --> 00:06:50,889
another<font color="#CCCCCC"> PowerShell as a sibling</font><font color="#E5E5E5"> that</font>

170
00:06:48,760 --> 00:06:52,960
reads from<font color="#E5E5E5"> that window title what about</font>

171
00:06:50,889 --> 00:06:55,780
reading<font color="#E5E5E5"> from files registry keys</font>

172
00:06:52,960 --> 00:06:57,580
anything like that<font color="#E5E5E5"> you cannot depend on</font>

173
00:06:55,780 --> 00:07:02,830
a parent process tree<font color="#E5E5E5"> either</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> so</font>

174
00:06:57,580 --> 00:07:04,719
many ways around it so the good news<font color="#E5E5E5"> as</font>

175
00:07:02,830 --> 00:07:06,669
I was mentioning is that<font color="#E5E5E5"> PowerShell</font>

176
00:07:04,720 --> 00:07:08,470
<font color="#CCCCCC">stripped Bluff</font><font color="#E5E5E5"> logging captures all of</font>

177
00:07:06,669 --> 00:07:11,320
<font color="#CCCCCC">this stuff that</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> makes</font><font color="#E5E5E5"> it into</font>

178
00:07:08,470 --> 00:07:14,320
<font color="#E5E5E5">PowerShell but you still got a problem</font>

179
00:07:11,320 --> 00:07:18,550
<font color="#CCCCCC">we didn't even talk about</font><font color="#E5E5E5"> at all yet any</font>

180
00:07:14,320 --> 00:07:20,169
of the content in PowerShell itself<font color="#E5E5E5"> yeah</font>

181
00:07:18,550 --> 00:07:22,419
so let's<font color="#E5E5E5"> shift over and look</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> that so</font>

182
00:07:20,169 --> 00:07:23,799
<font color="#E5E5E5">leaders covered a lot of examples and</font>

183
00:07:22,419 --> 00:07:26,020
kind<font color="#E5E5E5"> of showing the folly of as a</font>

184
00:07:23,800 --> 00:07:27,940
defender<font color="#CCCCCC"> why we</font><font color="#E5E5E5"> shouldn't just look at</font>

185
00:07:26,020 --> 00:07:29,469
PowerShell dot exe<font color="#CCCCCC"> s</font><font color="#E5E5E5"> arguments or even</font>

186
00:07:27,940 --> 00:07:31,510
its parent process<font color="#E5E5E5"> arguments or even</font>

187
00:07:29,470 --> 00:07:33,729
recursively<font color="#CCCCCC"> but again</font>

188
00:07:31,510 --> 00:07:36,310
PowerShell logging in PowerShell<font color="#E5E5E5"> 5 will</font>

189
00:07:33,729 --> 00:07:37,810
<font color="#E5E5E5">have all of this information and script</font>

190
00:07:36,310 --> 00:07:41,260
<font color="#CCCCCC">block logs really are your best</font><font color="#E5E5E5"> friend</font>

191
00:07:37,810 --> 00:07:42,400
on the Eid 4104<font color="#E5E5E5"> so what we're going</font><font color="#CCCCCC"> to</font>

192
00:07:41,260 --> 00:07:44,680
do at this<font color="#E5E5E5"> point is actually going to</font>

193
00:07:42,400 --> 00:07:47,080
<font color="#E5E5E5">look at a few stations and techniques</font>

194
00:07:44,680 --> 00:07:49,030
<font color="#CCCCCC">that</font><font color="#E5E5E5"> exist that actually never get D off</font>

195
00:07:47,080 --> 00:07:50,950
<font color="#E5E5E5">you skated in those logs</font><font color="#CCCCCC"> so whether</font>

196
00:07:49,030 --> 00:07:53,229
you're<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> at command line analysis</font>

197
00:07:50,950 --> 00:07:54,700
or actual script<font color="#E5E5E5"> LOC log analysis you</font>

198
00:07:53,229 --> 00:07:56,859
<font color="#E5E5E5">need to be aware of these techniques and</font>

199
00:07:54,700 --> 00:07:59,200
<font color="#E5E5E5">how they could affect you as a defender</font>

200
00:07:56,860 --> 00:08:00,639
<font color="#E5E5E5">so at the</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have an</font>

201
00:07:59,200 --> 00:08:03,460
example command and<font color="#E5E5E5"> this is the most</font>

202
00:08:00,639 --> 00:08:05,169
common plain-jane<font color="#CCCCCC"> remote download cradle</font>

203
00:08:03,460 --> 00:08:07,299
what<font color="#CCCCCC"> I mean by that is</font><font color="#E5E5E5"> this command will</font>

204
00:08:05,169 --> 00:08:08,830
<font color="#CCCCCC">basically read from this remote source</font>

205
00:08:07,300 --> 00:08:10,780
<font color="#CCCCCC">so they'll</font><font color="#E5E5E5"> download this script into</font>

206
00:08:08,830 --> 00:08:12,909
memory and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> pass it to invoke</font>

207
00:08:10,780 --> 00:08:14,979
expression or<font color="#CCCCCC"> IEX which is kind of</font><font color="#E5E5E5"> like</font>

208
00:08:12,910 --> 00:08:16,750
<font color="#E5E5E5">power shells eval statement and so this</font>

209
00:08:14,979 --> 00:08:19,150
will all be executed<font color="#E5E5E5"> within memory and</font>

210
00:08:16,750 --> 00:08:21,760
we see attackers using this all the time

211
00:08:19,150 --> 00:08:23,979
<font color="#CCCCCC">and the reason is is that</font><font color="#E5E5E5"> copy and paste</font>

212
00:08:21,760 --> 00:08:26,349
is every developer and hackers best

213
00:08:23,979 --> 00:08:27,940
friend and you see this<font color="#E5E5E5"> in popular</font>

214
00:08:26,350 --> 00:08:31,419
frameworks like<font color="#CCCCCC"> veil</font><font color="#E5E5E5"> power sploit</font>

215
00:08:27,940 --> 00:08:33,429
<font color="#CCCCCC">Metasploit all over the place</font><font color="#E5E5E5"> and so</font>

216
00:08:31,419 --> 00:08:35,110
let's<font color="#E5E5E5"> walk through this example we</font><font color="#CCCCCC"> have</font>

217
00:08:33,429 --> 00:08:36,909
this attacker command<font color="#CCCCCC"> up here with a</font>

218
00:08:35,110 --> 00:08:39,729
totally legit bitly link<font color="#CCCCCC"> feel free to</font>

219
00:08:36,909 --> 00:08:41,530
<font color="#E5E5E5">run that if you please</font><font color="#CCCCCC"> and then as a</font>

220
00:08:39,729 --> 00:08:42,729
defender how could we catch this<font color="#E5E5E5"> and</font>

221
00:08:41,530 --> 00:08:44,420
let's think about the command line

222
00:08:42,729 --> 00:08:45,889
<font color="#CCCCCC">example here</font>

223
00:08:44,420 --> 00:08:48,649
be the exact<font color="#CCCCCC"> same for script</font><font color="#E5E5E5"> walk logs</font>

224
00:08:45,889 --> 00:08:50,149
but let's say if as a defender<font color="#E5E5E5"> we look</font>

225
00:08:48,649 --> 00:08:53,089
for<font color="#E5E5E5"> arguments where we see invoke</font>

226
00:08:50,149 --> 00:08:55,670
expression<font color="#E5E5E5"> new object system net that</font>

227
00:08:53,089 --> 00:08:58,430
<font color="#E5E5E5">web client and download string HTTP this</font>

228
00:08:55,670 --> 00:09:00,439
would catch this exact command<font color="#CCCCCC"> so now</font>

229
00:08:58,430 --> 00:09:04,219
let's walk<font color="#CCCCCC"> through and have a</font><font color="#E5E5E5"> little fun</font>

230
00:09:00,440 --> 00:09:05,750
<font color="#CCCCCC">so first off system net</font><font color="#E5E5E5"> that web client</font>

231
00:09:04,220 --> 00:09:07,459
<font color="#E5E5E5">pretty much</font><font color="#CCCCCC"> anytime you see system dot</font>

232
00:09:05,750 --> 00:09:09,560
and<font color="#E5E5E5"> PowerShell it's referencing</font><font color="#CCCCCC"> a dotnet</font>

233
00:09:07,459 --> 00:09:11,420
class and you<font color="#E5E5E5"> don't actually need system</font>

234
00:09:09,560 --> 00:09:13,459
dot<font color="#E5E5E5"> PowerShell we'll go ahead</font><font color="#CCCCCC"> and handle</font>

235
00:09:11,420 --> 00:09:15,319
<font color="#E5E5E5">that for you so if an attacker doesn't</font>

236
00:09:13,459 --> 00:09:16,550
have to have<font color="#E5E5E5"> that and that's a defender</font>

237
00:09:15,320 --> 00:09:18,139
<font color="#CCCCCC">we don't want to make that assumption</font>

238
00:09:16,550 --> 00:09:20,510
that<font color="#E5E5E5"> we also have to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> that in our</font>

239
00:09:18,139 --> 00:09:22,130
defenses<font color="#E5E5E5"> so as we change our attacker</font>

240
00:09:20,510 --> 00:09:24,610
command at the top<font color="#E5E5E5"> we're also going to</font>

241
00:09:22,130 --> 00:09:27,889
change our defender commands underneath

242
00:09:24,610 --> 00:09:30,019
next<font color="#E5E5E5"> the URL is a string and</font><font color="#CCCCCC"> so with a</font>

243
00:09:27,889 --> 00:09:32,209
string we can<font color="#E5E5E5"> just</font><font color="#CCCCCC"> concatenate it in</font>

244
00:09:30,019 --> 00:09:34,130
line just<font color="#CCCCCC"> like that we're also not</font>

245
00:09:32,209 --> 00:09:35,750
limited<font color="#CCCCCC"> to any kind of quote so we can</font>

246
00:09:34,130 --> 00:09:37,490
use<font color="#E5E5E5"> single quotes</font><font color="#CCCCCC"> double quotes</font><font color="#E5E5E5"> put</font>

247
00:09:35,750 --> 00:09:38,480
whitespace in there<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of options</font>

248
00:09:37,490 --> 00:09:40,959
<font color="#CCCCCC">there so let's</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and move that</font>

249
00:09:38,480 --> 00:09:43,910
<font color="#E5E5E5">HTTP and the quote from download string</font>

250
00:09:40,959 --> 00:09:45,880
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right download string now if you</font>

251
00:09:43,910 --> 00:09:47,660
look<font color="#E5E5E5"> at this command</font><font color="#CCCCCC"> um PowerShell</font>

252
00:09:45,880 --> 00:09:49,519
interprets this and what<font color="#E5E5E5"> are called</font>

253
00:09:47,660 --> 00:09:51,589
<font color="#E5E5E5">tokens hints what we call this token</font>

254
00:09:49,519 --> 00:09:54,350
<font color="#E5E5E5">layer off</font><font color="#CCCCCC"> eustachian so for</font><font color="#E5E5E5"> example the</font>

255
00:09:51,589 --> 00:09:57,110
<font color="#CCCCCC">URL that's a string token</font><font color="#E5E5E5"> download</font>

256
00:09:54,350 --> 00:09:58,820
string is a member token and<font color="#E5E5E5"> so given</font>

257
00:09:57,110 --> 00:10:00,949
any member token what are ways that we

258
00:09:58,820 --> 00:10:03,649
<font color="#CCCCCC">can really screw around with</font><font color="#E5E5E5"> it to make</font>

259
00:10:00,949 --> 00:10:05,359
the syntax<font color="#E5E5E5"> look really odd</font><font color="#CCCCCC"> but it still</font>

260
00:10:03,649 --> 00:10:07,970
work<font color="#CCCCCC"> so if you'll notice with</font><font color="#E5E5E5"> download</font>

261
00:10:05,360 --> 00:10:10,579
string<font color="#E5E5E5"> before we even apply any</font><font color="#CCCCCC"> kind of</font>

262
00:10:07,970 --> 00:10:13,070
syntax<font color="#CCCCCC"> off using the home load string is</font>

263
00:10:10,579 --> 00:10:14,899
<font color="#E5E5E5">just a method to</font><font color="#CCCCCC"> the net that web client</font>

264
00:10:13,070 --> 00:10:17,329
class<font color="#E5E5E5"> but there's a lot of methods</font><font color="#CCCCCC"> in</font>

265
00:10:14,899 --> 00:10:19,070
fact<font color="#E5E5E5"> here's just a partial list here</font><font color="#CCCCCC"> so</font>

266
00:10:17,329 --> 00:10:20,750
the main ones I<font color="#CCCCCC"> would say to definitely</font>

267
00:10:19,070 --> 00:10:23,060
<font color="#E5E5E5">keep keep in mind download string</font>

268
00:10:20,750 --> 00:10:25,040
download file and download<font color="#E5E5E5"> data download</font>

269
00:10:23,060 --> 00:10:27,739
file with download to disk<font color="#E5E5E5"> download data</font>

270
00:10:25,040 --> 00:10:29,029
or return a byte array<font color="#CCCCCC"> so maybe we can</font>

271
00:10:27,740 --> 00:10:30,350
<font color="#E5E5E5">just cover all</font><font color="#CCCCCC"> of these</font><font color="#E5E5E5"> by saying</font>

272
00:10:29,029 --> 00:10:32,350
instead<font color="#E5E5E5"> of looking</font><font color="#CCCCCC"> for dot download</font>

273
00:10:30,350 --> 00:10:34,690
string<font color="#E5E5E5"> let's just look for</font><font color="#CCCCCC"> dot download</font>

274
00:10:32,350 --> 00:10:36,920
all right<font color="#CCCCCC"> so now that we</font><font color="#E5E5E5"> have that done</font>

275
00:10:34,690 --> 00:10:41,540
with a member token<font color="#E5E5E5"> what we can actually</font>

276
00:10:36,920 --> 00:10:44,149
do is we<font color="#CCCCCC"> can also set</font><font color="#E5E5E5"> that value into a</font>

277
00:10:41,540 --> 00:10:45,860
variable<font color="#E5E5E5"> or we can set the</font><font color="#CCCCCC"> object</font>

278
00:10:44,149 --> 00:10:47,029
instantiation in the variable so we

279
00:10:45,860 --> 00:10:48,889
can't even<font color="#E5E5E5"> rely on that</font><font color="#CCCCCC"> parentheses</font>

280
00:10:47,029 --> 00:10:51,889
being there<font color="#E5E5E5"> so</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and pull</font>

281
00:10:48,889 --> 00:10:53,810
<font color="#CCCCCC">it</font><font color="#E5E5E5"> out of our defender triggers so now</font>

282
00:10:51,889 --> 00:10:55,850
how can we off you skate<font color="#E5E5E5"> this member</font>

283
00:10:53,810 --> 00:10:57,380
even<font color="#E5E5E5"> further we can actually put single</font>

284
00:10:55,850 --> 00:11:00,500
<font color="#E5E5E5">tick marks around it</font>

285
00:10:57,380 --> 00:11:01,910
we can put double<font color="#CCCCCC"> quotes around it now</font>

286
00:11:00,500 --> 00:11:03,260
the fascinating<font color="#E5E5E5"> thing is that</font><font color="#CCCCCC"> when you</font>

287
00:11:01,910 --> 00:11:04,490
<font color="#E5E5E5">put double quotes</font><font color="#CCCCCC"> around it</font><font color="#E5E5E5"> and I want</font>

288
00:11:03,260 --> 00:11:06,710
<font color="#E5E5E5">you</font><font color="#CCCCCC"> to look</font><font color="#E5E5E5"> closely at download string</font>

289
00:11:04,490 --> 00:11:08,990
well you can actually<font color="#E5E5E5"> do is just put a</font>

290
00:11:06,710 --> 00:11:10,250
tick mark there now<font color="#E5E5E5"> why in the</font><font color="#CCCCCC"> world</font>

291
00:11:08,990 --> 00:11:12,110
does this work

292
00:11:10,250 --> 00:11:14,390
well this works because<font color="#E5E5E5"> the tick mark is</font>

293
00:11:12,110 --> 00:11:17,180
power shells<font color="#E5E5E5"> escape character or called</font>

294
00:11:14,390 --> 00:11:18,470
the the grave<font color="#CCCCCC"> Accent character</font><font color="#E5E5E5"> so I like</font>

295
00:11:17,180 --> 00:11:19,969
<font color="#CCCCCC">to</font><font color="#E5E5E5"> think of it</font><font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> as a grave</font><font color="#CCCCCC"> of a</font>

296
00:11:18,470 --> 00:11:21,170
lot of defenders<font color="#CCCCCC"> ifcs because this will</font>

297
00:11:19,970 --> 00:11:24,680
break<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of stuff if you're</font><font color="#E5E5E5"> not aware</font>

298
00:11:21,170 --> 00:11:27,920
<font color="#CCCCCC">of it</font><font color="#E5E5E5"> so the tick mark before these</font><font color="#CCCCCC"> 8</font>

299
00:11:24,680 --> 00:11:29,479
characters<font color="#CCCCCC"> will do</font><font color="#E5E5E5"> things like take 0 is</font>

300
00:11:27,920 --> 00:11:30,920
a null tick<font color="#E5E5E5"> in</font><font color="#CCCCCC"> this new line</font>

301
00:11:29,480 --> 00:11:33,440
but if you have a tick mark before<font color="#CCCCCC"> a</font>

302
00:11:30,920 --> 00:11:35,719
character that<font color="#E5E5E5"> has no escapable meaning</font>

303
00:11:33,440 --> 00:11:37,780
then<font color="#CCCCCC"> powershell processes it and there's</font>

304
00:11:35,720 --> 00:11:39,920
<font color="#E5E5E5">nothing else for</font><font color="#CCCCCC"> it to</font><font color="#E5E5E5"> do with a tick so</font>

305
00:11:37,780 --> 00:11:41,569
you can actually put tick marks in front

306
00:11:39,920 --> 00:11:44,449
<font color="#CCCCCC">of</font><font color="#E5E5E5"> any character that's not one</font><font color="#CCCCCC"> of these</font>

307
00:11:41,570 --> 00:11:46,280
<font color="#CCCCCC">eight here and in fact if you're like me</font>

308
00:11:44,450 --> 00:11:47,510
and are just really<font color="#CCCCCC"> really dying to put</font>

309
00:11:46,280 --> 00:11:49,610
a tick mark in<font color="#CCCCCC"> front of those characters</font>

310
00:11:47,510 --> 00:11:50,689
all you have to do is just<font color="#E5E5E5"> uppercase the</font>

311
00:11:49,610 --> 00:11:53,360
characters and<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can put a tick mark</font>

312
00:11:50,690 --> 00:11:54,680
in<font color="#CCCCCC"> front of it so now</font><font color="#E5E5E5"> we have tick marks</font>

313
00:11:53,360 --> 00:11:56,390
in<font color="#CCCCCC"> front</font><font color="#E5E5E5"> of any character that we want</font>

314
00:11:54,680 --> 00:11:57,739
<font color="#E5E5E5">except for</font><font color="#CCCCCC"> zero unfortunately there's</font>

315
00:11:56,390 --> 00:12:01,310
not<font color="#E5E5E5"> an upper</font><font color="#CCCCCC"> case here that I'm aware of</font>

316
00:11:57,740 --> 00:12:03,620
<font color="#CCCCCC">but we have a lot of options here as as</font>

317
00:12:01,310 --> 00:12:05,660
an attacker<font color="#CCCCCC"> to mess with this</font><font color="#E5E5E5"> now here's</font>

318
00:12:03,620 --> 00:12:07,490
why this<font color="#E5E5E5"> is really really important on</font>

319
00:12:05,660 --> 00:12:10,130
the top you'll see<font color="#E5E5E5"> this is what it looks</font>

320
00:12:07,490 --> 00:12:11,600
<font color="#E5E5E5">like in command</font><font color="#CCCCCC"> line event logs</font><font color="#E5E5E5"> or if</font>

321
00:12:10,130 --> 00:12:13,370
you have some kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> real time</font><font color="#CCCCCC"> agent</font>

322
00:12:11,600 --> 00:12:14,630
<font color="#CCCCCC">this is exactly what you'll see on the</font>

323
00:12:13,370 --> 00:12:17,510
command line this tick marks are still

324
00:12:14,630 --> 00:12:19,730
<font color="#CCCCCC">there</font><font color="#E5E5E5"> and at the bottom</font><font color="#CCCCCC"> is PowerShell</font>

325
00:12:17,510 --> 00:12:21,770
script lock logs and the ticks are still

326
00:12:19,730 --> 00:12:23,420
there and the<font color="#E5E5E5"> concatenation is still</font>

327
00:12:21,770 --> 00:12:25,670
there<font color="#E5E5E5"> so everything we're doing right</font>

328
00:12:23,420 --> 00:12:29,150
<font color="#CCCCCC">here still</font><font color="#E5E5E5"> persist into those script</font>

329
00:12:25,670 --> 00:12:30,560
block logs<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so maybe we can</font>

330
00:12:29,150 --> 00:12:33,470
come<font color="#E5E5E5"> up with some crazy regex that take</font>

331
00:12:30,560 --> 00:12:35,119
into<font color="#CCCCCC"> account</font><font color="#E5E5E5"> these tick marks</font><font color="#CCCCCC"> sure I</font>

332
00:12:33,470 --> 00:12:36,680
guess<font color="#E5E5E5"> you try that if</font><font color="#CCCCCC"> you want to go</font>

333
00:12:35,120 --> 00:12:38,780
down<font color="#E5E5E5"> that route don't the stop</font><font color="#CCCCCC"> it</font>

334
00:12:36,680 --> 00:12:39,890
<font color="#E5E5E5">download because in addition to download</font>

335
00:12:38,780 --> 00:12:41,720
string file<font color="#CCCCCC"> and data</font>

336
00:12:39,890 --> 00:12:44,270
there's<font color="#E5E5E5"> also open read which will return</font>

337
00:12:41,720 --> 00:12:46,520
a byte stream and we have seen<font color="#CCCCCC"> attackers</font>

338
00:12:44,270 --> 00:12:47,810
use that<font color="#E5E5E5"> before so again it's</font><font color="#CCCCCC"> really</font>

339
00:12:46,520 --> 00:12:49,939
important as the<font color="#CCCCCC"> offenders that we know</font>

340
00:12:47,810 --> 00:12:51,890
what's possible<font color="#E5E5E5"> and that we know the</font>

341
00:12:49,940 --> 00:12:53,090
flexibility of<font color="#E5E5E5"> PowerShell</font><font color="#CCCCCC"> and any</font>

342
00:12:51,890 --> 00:12:55,400
language for<font color="#CCCCCC"> that matter so we're not</font>

343
00:12:53,090 --> 00:12:57,920
<font color="#E5E5E5">making</font><font color="#CCCCCC"> bad assumptions on the</font><font color="#E5E5E5"> defenses</font>

344
00:12:55,400 --> 00:13:00,800
<font color="#CCCCCC">that we're putting</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> place another</font>

345
00:12:57,920 --> 00:13:02,569
thing if we encapsulate<font color="#E5E5E5"> the member token</font>

346
00:13:00,800 --> 00:13:04,729
inside of<font color="#CCCCCC"> parenthesis</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can actually</font>

347
00:13:02,570 --> 00:13:06,470
then treat it<font color="#E5E5E5"> as a</font><font color="#CCCCCC"> full-blown</font><font color="#E5E5E5"> string so</font>

348
00:13:04,730 --> 00:13:08,750
we can concatenate<font color="#E5E5E5"> it we can set</font><font color="#CCCCCC"> it in</font>

349
00:13:06,470 --> 00:13:10,430
variables we do a lot<font color="#CCCCCC"> of crazy stuff and</font>

350
00:13:08,750 --> 00:13:12,260
<font color="#E5E5E5">if you'll</font><font color="#CCCCCC"> notice this dot</font><font color="#E5E5E5"> invoke</font>

351
00:13:10,430 --> 00:13:14,660
after<font color="#CCCCCC"> this</font><font color="#E5E5E5"> parentheses that's only</font>

352
00:13:12,260 --> 00:13:16,490
required in PowerShell<font color="#CCCCCC"> - PowerShell 3</font>

353
00:13:14,660 --> 00:13:17,900
and later<font color="#E5E5E5"> doesn't even need</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so make</font>

354
00:13:16,490 --> 00:13:19,490
sure you're not<font color="#CCCCCC"> basing your defenses on</font>

355
00:13:17,900 --> 00:13:22,880
that dot<font color="#CCCCCC"> invoke</font><font color="#E5E5E5"> because it's totally</font><font color="#CCCCCC"> not</font>

356
00:13:19,490 --> 00:13:23,960
necessary<font color="#E5E5E5"> in later versions so is if</font>

357
00:13:22,880 --> 00:13:25,010
it's<font color="#E5E5E5"> alright with you</font><font color="#CCCCCC"> I'm just gonna</font><font color="#E5E5E5"> go</font>

358
00:13:23,960 --> 00:13:26,810
ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> remove that</font><font color="#E5E5E5"> one that seems</font>

359
00:13:25,010 --> 00:13:28,040
like some crazy<font color="#CCCCCC"> regex it's is it - do we</font>

360
00:13:26,810 --> 00:13:29,930
<font color="#E5E5E5">already have other stuff in here</font><font color="#CCCCCC"> that we</font>

361
00:13:28,040 --> 00:13:33,290
<font color="#CCCCCC">can count</font><font color="#E5E5E5"> on not being off you skated is</font>

362
00:13:29,930 --> 00:13:35,510
that cool<font color="#E5E5E5"> all right let's keep going</font><font color="#CCCCCC"> so</font>

363
00:13:33,290 --> 00:13:37,400
net dot web<font color="#CCCCCC"> planet</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> name</font><font color="#CCCCCC"> of</font>

364
00:13:35,510 --> 00:13:39,380
botnet class<font color="#E5E5E5"> but in the context of this</font>

365
00:13:37,400 --> 00:13:41,660
<font color="#E5E5E5">PowerShell command it's actually an</font>

366
00:13:39,380 --> 00:13:45,020
argument<font color="#E5E5E5"> token it's an argument</font><font color="#CCCCCC"> to new</font>

367
00:13:41,660 --> 00:13:46,579
object<font color="#E5E5E5"> so argument tokens really easy to</font>

368
00:13:45,020 --> 00:13:48,050
off you skate we can use double quotes

369
00:13:46,580 --> 00:13:49,460
and tick marks<font color="#E5E5E5"> we can put it in</font>

370
00:13:48,050 --> 00:13:51,740
<font color="#CCCCCC">parenthesis</font><font color="#E5E5E5"> and treat it like a string</font>

371
00:13:49,460 --> 00:13:53,000
we can<font color="#E5E5E5"> also chunk</font><font color="#CCCCCC"> that up into</font><font color="#E5E5E5"> variables</font>

372
00:13:51,740 --> 00:13:56,060
<font color="#E5E5E5">and then just put those variables</font>

373
00:13:53,000 --> 00:13:57,230
together<font color="#CCCCCC"> in the command</font>

374
00:13:56,060 --> 00:13:59,560
so we'll<font color="#E5E5E5"> just go with the first option</font>

375
00:13:57,230 --> 00:14:04,370
there and remove that from<font color="#E5E5E5"> our list of a</font>

376
00:13:59,560 --> 00:14:06,739
defender terms<font color="#CCCCCC"> their new object</font><font color="#E5E5E5"> so if</font>

377
00:14:04,370 --> 00:14:08,900
anyone here<font color="#E5E5E5"> is use PowerShell</font><font color="#CCCCCC"> I actually</font>

378
00:14:06,740 --> 00:14:10,640
kind of accidentally<font color="#E5E5E5"> happened into</font>

379
00:14:08,900 --> 00:14:12,050
PowerShell I was writing bat files and

380
00:14:10,640 --> 00:14:14,780
someone said<font color="#E5E5E5"> won't you change that to</font><font color="#CCCCCC"> a</font>

381
00:14:12,050 --> 00:14:16,099
dot<font color="#CCCCCC"> dat</font><font color="#E5E5E5"> to a dot</font><font color="#CCCCCC"> PS one and like almost</font>

382
00:14:14,780 --> 00:14:17,540
<font color="#E5E5E5">all your stuff is</font><font color="#CCCCCC"> gonna work</font><font color="#E5E5E5"> and I said</font>

383
00:14:16,100 --> 00:14:19,400
really<font color="#E5E5E5"> what's</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> point so it's so much</font>

384
00:14:17,540 --> 00:14:21,589
<font color="#E5E5E5">more powerful and so yeah it's</font><font color="#CCCCCC"> like my</font>

385
00:14:19,400 --> 00:14:22,850
bat file had<font color="#CCCCCC"> Durer had l all this kind</font>

386
00:14:21,590 --> 00:14:25,760
of stuff<font color="#CCCCCC"> and it totally worked</font>

387
00:14:22,850 --> 00:14:27,710
PowerShell<font color="#E5E5E5"> is really inviting</font><font color="#CCCCCC"> to two</font>

388
00:14:25,760 --> 00:14:28,880
<font color="#E5E5E5">newcomers</font><font color="#CCCCCC"> to pick it up</font><font color="#E5E5E5"> because if you</font>

389
00:14:27,710 --> 00:14:30,770
want to let's say enumerate all the

390
00:14:28,880 --> 00:14:33,110
<font color="#E5E5E5">files in a directory if you come from</font>

391
00:14:30,770 --> 00:14:35,540
<font color="#CCCCCC">Windows background durricks</font><font color="#E5E5E5"> Linux</font>

392
00:14:33,110 --> 00:14:37,610
background LS works<font color="#E5E5E5"> the the formal</font>

393
00:14:35,540 --> 00:14:40,790
command let in<font color="#E5E5E5"> PowerShell is get child</font>

394
00:14:37,610 --> 00:14:43,250
<font color="#E5E5E5">item you can also just do GC</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> so power</font>

395
00:14:40,790 --> 00:14:44,599
saws tons of what are called<font color="#E5E5E5"> aliases</font><font color="#CCCCCC"> to</font>

396
00:14:43,250 --> 00:14:45,830
give you lots<font color="#E5E5E5"> of options</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make it</font>

397
00:14:44,600 --> 00:14:48,890
really really user friendly<font color="#E5E5E5"> and it</font>

398
00:14:45,830 --> 00:14:50,210
absolutely<font color="#CCCCCC"> is however as a defender that</font>

399
00:14:48,890 --> 00:14:51,860
<font color="#E5E5E5">means you have to be aware of all those</font>

400
00:14:50,210 --> 00:14:53,270
options<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you want to make sure you're</font>

401
00:14:51,860 --> 00:14:55,400
<font color="#E5E5E5">not writing triggers on things that have</font>

402
00:14:53,270 --> 00:14:57,170
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other ways you can write it the</font>

403
00:14:55,400 --> 00:14:59,390
good news is<font color="#CCCCCC"> that was new</font><font color="#E5E5E5"> object</font><font color="#CCCCCC"> there</font>

404
00:14:57,170 --> 00:15:01,040
are no aliases so at<font color="#E5E5E5"> first when I saw</font>

405
00:14:59,390 --> 00:15:02,590
<font color="#CCCCCC">this I thought</font><font color="#E5E5E5"> awesome this will be a</font>

406
00:15:01,040 --> 00:15:05,870
really<font color="#E5E5E5"> good indicator</font>

407
00:15:02,590 --> 00:15:07,250
however PowerShell is really helpful<font color="#E5E5E5"> he</font>

408
00:15:05,870 --> 00:15:09,920
goes out of its way<font color="#E5E5E5"> to be really helpful</font>

409
00:15:07,250 --> 00:15:11,690
<font color="#E5E5E5">so for example if there's a command what</font>

410
00:15:09,920 --> 00:15:12,949
they I know<font color="#E5E5E5"> I've used</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> commandment</font>

411
00:15:11,690 --> 00:15:16,190
before but I can't remember<font color="#E5E5E5"> what it is</font>

412
00:15:12,950 --> 00:15:18,320
<font color="#CCCCCC">it's new -</font><font color="#E5E5E5"> P something then we can just</font>

413
00:15:16,190 --> 00:15:20,240
say<font color="#CCCCCC"> git command to list</font><font color="#E5E5E5"> all the commands</font>

414
00:15:18,320 --> 00:15:22,520
<font color="#E5E5E5">and functions that are built available</font>

415
00:15:20,240 --> 00:15:23,830
so if we say<font color="#E5E5E5"> git command new - P</font>

416
00:15:22,520 --> 00:15:27,220
<font color="#E5E5E5">asterisks</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> list</font>

417
00:15:23,830 --> 00:15:29,320
<font color="#E5E5E5">all the commands that match</font><font color="#CCCCCC"> that so what</font>

418
00:15:27,220 --> 00:15:31,510
we<font color="#CCCCCC"> can</font><font color="#E5E5E5"> do then is if we</font><font color="#CCCCCC"> return just a</font>

419
00:15:29,320 --> 00:15:33,160
single command<font color="#CCCCCC"> let it's actually</font>

420
00:15:31,510 --> 00:15:34,630
displaying<font color="#CCCCCC"> PowerShell objects but if we</font>

421
00:15:33,160 --> 00:15:36,969
<font color="#CCCCCC">return that single commandment</font><font color="#E5E5E5"> and pass</font>

422
00:15:34,630 --> 00:15:38,470
it in to invoke expression<font color="#CCCCCC"> behind the</font>

423
00:15:36,970 --> 00:15:40,480
<font color="#CCCCCC">scenes it'll automatically transform</font>

424
00:15:38,470 --> 00:15:42,550
that object to a<font color="#E5E5E5"> string which is the</font>

425
00:15:40,480 --> 00:15:44,440
<font color="#CCCCCC">commandment</font><font color="#E5E5E5"> name and then invoke it so</font>

426
00:15:42,550 --> 00:15:46,810
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just like calling a new object</font>

427
00:15:44,440 --> 00:15:47,710
<font color="#E5E5E5">however we can get a bit more creative</font>

428
00:15:46,810 --> 00:15:49,420
<font color="#E5E5E5">with</font><font color="#CCCCCC"> this since we're dealing</font><font color="#E5E5E5"> with</font>

429
00:15:47,710 --> 00:15:51,700
<font color="#E5E5E5">PowerShell objects instead of invoke</font>

430
00:15:49,420 --> 00:15:54,910
expression what<font color="#E5E5E5"> we can actually do is</font>

431
00:15:51,700 --> 00:15:58,450
use the dot or<font color="#CCCCCC"> the ampersand</font><font color="#E5E5E5"> now these</font>

432
00:15:54,910 --> 00:15:59,530
are invocation operators and also if you

433
00:15:58,450 --> 00:16:01,330
keep in<font color="#CCCCCC"> mind remember when we were</font>

434
00:15:59,530 --> 00:16:03,550
trying<font color="#CCCCCC"> to figure out that new -</font><font color="#E5E5E5"> pica</font>

435
00:16:01,330 --> 00:16:05,290
<font color="#E5E5E5">mantlet we can use wildcards to search</font>

436
00:16:03,550 --> 00:16:09,760
for the available options<font color="#CCCCCC"> in the</font>

437
00:16:05,290 --> 00:16:13,060
argument<font color="#CCCCCC"> so this is a new object and</font>

438
00:16:09,760 --> 00:16:15,850
<font color="#E5E5E5">then that's also</font><font color="#CCCCCC"> a new object as is that</font>

439
00:16:13,060 --> 00:16:18,430
<font color="#E5E5E5">and that</font><font color="#CCCCCC"> and there are</font><font color="#E5E5E5"> as many</font>

440
00:16:15,850 --> 00:16:21,190
<font color="#E5E5E5">combinations as you can dream of to</font>

441
00:16:18,430 --> 00:16:22,540
return just new object<font color="#E5E5E5"> so now if you're</font>

442
00:16:21,190 --> 00:16:25,090
looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> new object on the command</font>

443
00:16:22,540 --> 00:16:27,099
line<font color="#CCCCCC"> you'll</font><font color="#E5E5E5"> never see</font><font color="#CCCCCC"> it however where</font>

444
00:16:25,090 --> 00:16:30,340
you will see it is in<font color="#E5E5E5"> PowerShell module</font>

445
00:16:27,100 --> 00:16:31,390
logs which is Eid<font color="#CCCCCC"> 4103 now the thing</font><font color="#E5E5E5"> to</font>

446
00:16:30,340 --> 00:16:33,580
keep<font color="#E5E5E5"> in mind is that if you have a</font>

447
00:16:31,390 --> 00:16:36,280
massive<font color="#E5E5E5"> script every single command</font>

448
00:16:33,580 --> 00:16:38,290
<font color="#CCCCCC">--let</font><font color="#E5E5E5"> and every parent parameter binding</font>

449
00:16:36,280 --> 00:16:40,300
will have its own module log<font color="#E5E5E5"> so</font>

450
00:16:38,290 --> 00:16:43,150
basically there's a<font color="#CCCCCC"> lot of them</font><font color="#E5E5E5"> so all</font>

451
00:16:40,300 --> 00:16:44,530
the all the evidence is<font color="#E5E5E5"> there</font><font color="#CCCCCC"> it's just</font>

452
00:16:43,150 --> 00:16:46,060
in a lot<font color="#E5E5E5"> of different</font><font color="#CCCCCC"> places which makes</font>

453
00:16:44,530 --> 00:16:47,400
it challenging<font color="#E5E5E5"> as a defender</font><font color="#CCCCCC"> to piece it</font>

454
00:16:46,060 --> 00:16:50,560
<font color="#CCCCCC">all back together</font>

455
00:16:47,400 --> 00:16:53,709
in addition<font color="#E5E5E5"> git command also has an</font>

456
00:16:50,560 --> 00:16:55,540
alias<font color="#E5E5E5"> of course of GCM and</font><font color="#CCCCCC"> actually is a</font>

457
00:16:53,710 --> 00:16:56,950
<font color="#CCCCCC">very interesting alias that really</font>

458
00:16:55,540 --> 00:16:58,390
bugged me<font color="#CCCCCC"> for a</font><font color="#E5E5E5"> long</font><font color="#CCCCCC"> time because it's</font>

459
00:16:56,950 --> 00:16:59,230
actually undocumented is it<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> if I</font>

460
00:16:58,390 --> 00:17:03,819
<font color="#E5E5E5">share that</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> you it's kind</font><font color="#CCCCCC"> of</font>

461
00:16:59,230 --> 00:17:05,829
<font color="#CCCCCC">top-secret</font><font color="#E5E5E5"> it is command now this works</font>

462
00:17:03,820 --> 00:17:07,300
because PowerShell again it's so

463
00:17:05,829 --> 00:17:08,109
friendly<font color="#E5E5E5"> it's like the best</font><font color="#CCCCCC"> friend you</font>

464
00:17:07,300 --> 00:17:10,389
could<font color="#CCCCCC"> ever ask</font><font color="#E5E5E5"> for</font>

465
00:17:08,109 --> 00:17:12,099
<font color="#E5E5E5">whenever you type command</font><font color="#CCCCCC"> it'll say I</font>

466
00:17:10,390 --> 00:17:14,170
<font color="#E5E5E5">don't see a command</font><font color="#CCCCCC"> late' or a function</font>

467
00:17:12,099 --> 00:17:16,448
<font color="#E5E5E5">name command maybe you forgot to type</font>

468
00:17:14,170 --> 00:17:18,550
<font color="#E5E5E5">that</font><font color="#CCCCCC"> get - let me go out of my way and</font>

469
00:17:16,449 --> 00:17:21,760
see yep there's a get - command like

470
00:17:18,550 --> 00:17:23,169
here you go<font color="#E5E5E5"> so now anytime you've</font>

471
00:17:21,760 --> 00:17:24,819
written<font color="#CCCCCC"> that indicator on any command</font>

472
00:17:23,170 --> 00:17:26,980
<font color="#E5E5E5">line that</font><font color="#CCCCCC"> starts with git - you don't</font>

473
00:17:24,819 --> 00:17:30,550
<font color="#E5E5E5">need that yet</font><font color="#CCCCCC"> - it'll automatically work</font>

474
00:17:26,980 --> 00:17:32,110
so more options to keep in<font color="#E5E5E5"> mind in</font>

475
00:17:30,550 --> 00:17:34,120
addition if we<font color="#E5E5E5"> don't ever want to use a</font>

476
00:17:32,110 --> 00:17:36,100
<font color="#CCCCCC">wildcard for</font><font color="#E5E5E5"> this new object stuff we</font>

477
00:17:34,120 --> 00:17:37,360
could<font color="#E5E5E5"> just concatenate a new object into</font>

478
00:17:36,100 --> 00:17:40,719
some other variables

479
00:17:37,360 --> 00:17:43,629
<font color="#CCCCCC">and calls it</font><font color="#E5E5E5"> command on</font><font color="#CCCCCC"> that there's yet</font>

480
00:17:40,720 --> 00:17:45,580
more options powershell 1.0 if you are

481
00:17:43,630 --> 00:17:47,980
<font color="#E5E5E5">into if you're on the blue team</font><font color="#CCCCCC"> or the</font>

482
00:17:45,580 --> 00:17:51,330
red team<font color="#E5E5E5"> dealing</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> powershell posh</font>

483
00:17:47,980 --> 00:17:54,400
<font color="#E5E5E5">code org is an amazing resource because</font>

484
00:17:51,330 --> 00:17:56,110
there's just<font color="#CCCCCC"> a lot of new and really</font><font color="#E5E5E5"> old</font>

485
00:17:54,400 --> 00:17:57,760
scripts<font color="#E5E5E5"> there and there's a lot</font><font color="#CCCCCC"> of</font>

486
00:17:56,110 --> 00:17:59,290
<font color="#E5E5E5">powershell one</font><font color="#CCCCCC"> moto syntax that</font><font color="#E5E5E5"> you can</font>

487
00:17:57,760 --> 00:18:01,330
find which a lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> aren't</font><font color="#E5E5E5"> aware</font>

488
00:17:59,290 --> 00:18:03,879
<font color="#CCCCCC">of</font><font color="#E5E5E5"> and there's some crazy stuff that you</font>

489
00:18:01,330 --> 00:18:05,889
can do<font color="#CCCCCC"> that is a lot shorter</font><font color="#E5E5E5"> and easier</font>

490
00:18:03,880 --> 00:18:06,820
in later<font color="#E5E5E5"> versions of powershell well</font>

491
00:18:05,890 --> 00:18:07,990
what are the<font color="#CCCCCC"> offenders</font><font color="#E5E5E5"> probably not</font>

492
00:18:06,820 --> 00:18:10,480
looking<font color="#E5E5E5"> for stuff like this this</font>

493
00:18:07,990 --> 00:18:12,340
execution context is an automatic

494
00:18:10,480 --> 00:18:14,470
variable in<font color="#E5E5E5"> powershell and is like</font>

495
00:18:12,340 --> 00:18:16,090
stupid powerful<font color="#E5E5E5"> it's really really</font>

496
00:18:14,470 --> 00:18:19,000
awesome so<font color="#E5E5E5"> i definitely</font><font color="#CCCCCC"> recommend you</font>

497
00:18:16,090 --> 00:18:20,439
start<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that in addition all</font>

498
00:18:19,000 --> 00:18:22,660
<font color="#CCCCCC">the stuff we just</font><font color="#E5E5E5"> did with</font><font color="#CCCCCC"> git command</font>

499
00:18:20,440 --> 00:18:25,090
<font color="#E5E5E5">they were acting on the full</font><font color="#CCCCCC"> commandment</font>

500
00:18:22,660 --> 00:18:27,880
name<font color="#CCCCCC"> if the object we want</font><font color="#E5E5E5"> to deal with</font>

501
00:18:25,090 --> 00:18:31,059
has an<font color="#E5E5E5"> alias then we can use</font><font color="#CCCCCC"> git alias</font>

502
00:18:27,880 --> 00:18:32,770
<font color="#E5E5E5">or its alias of</font><font color="#CCCCCC"> GAO or aliases alias</font>

503
00:18:31,059 --> 00:18:35,049
<font color="#E5E5E5">which is called alias because you know</font>

504
00:18:32,770 --> 00:18:38,139
the<font color="#CCCCCC"> whole get -</font><font color="#E5E5E5"> pre</font><font color="#CCCCCC"> fin thing</font><font color="#E5E5E5"> so we can</font>

505
00:18:35,049 --> 00:18:39,520
use<font color="#CCCCCC"> that in almost</font><font color="#E5E5E5"> the exact same way</font><font color="#CCCCCC"> so</font>

506
00:18:38,140 --> 00:18:43,350
we'll<font color="#E5E5E5"> just go with that that option</font>

507
00:18:39,520 --> 00:18:45,549
<font color="#CCCCCC">right there the GCM asterisk</font><font color="#E5E5E5"> wo asterisk</font>

508
00:18:43,350 --> 00:18:46,840
so there's a lot of<font color="#CCCCCC"> options here</font><font color="#E5E5E5"> maybe</font>

509
00:18:45,549 --> 00:18:49,540
<font color="#E5E5E5">we want to try to look for a new object</font>

510
00:18:46,840 --> 00:18:51,760
<font color="#CCCCCC">and get</font><font color="#E5E5E5"> command and get alias and all</font>

511
00:18:49,540 --> 00:18:53,440
these sorts of things<font color="#E5E5E5"> right well</font><font color="#CCCCCC"> they're</font>

512
00:18:51,760 --> 00:18:57,760
commandlets<font color="#CCCCCC"> so we can put tick marks in</font>

513
00:18:53,440 --> 00:18:59,320
front<font color="#CCCCCC"> of</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> we can also come back</font><font color="#E5E5E5"> to</font>

514
00:18:57,760 --> 00:19:02,110
<font color="#E5E5E5">our good friends the dot and ampersand</font>

515
00:18:59,320 --> 00:19:04,418
<font color="#E5E5E5">invocation operators and again as we can</font>

516
00:19:02,110 --> 00:19:06,159
then treat new object as a string and

517
00:19:04,419 --> 00:19:08,200
concatenate<font color="#CCCCCC"> it or in this second</font><font color="#E5E5E5"> example</font>

518
00:19:06,160 --> 00:19:11,500
<font color="#E5E5E5">we can</font><font color="#CCCCCC"> actually use the -</font><font color="#E5E5E5"> F format</font>

519
00:19:08,200 --> 00:19:13,540
operator and substring<font color="#E5E5E5"> and then reorder</font>

520
00:19:11,500 --> 00:19:16,630
<font color="#E5E5E5">that which is really really powerful</font>

521
00:19:13,540 --> 00:19:18,610
<font color="#E5E5E5">because some defenders of come to be</font>

522
00:19:16,630 --> 00:19:20,080
before<font color="#CCCCCC"> and said well</font><font color="#E5E5E5"> okay like I don't</font>

523
00:19:18,610 --> 00:19:21,280
<font color="#E5E5E5">care about your concatenations because</font>

524
00:19:20,080 --> 00:19:23,439
whenever<font color="#CCCCCC"> I take in command-line</font>

525
00:19:21,280 --> 00:19:25,750
arguments<font color="#CCCCCC"> or script lock logs I remove</font>

526
00:19:23,440 --> 00:19:27,309
all special characters so all the quotes

527
00:19:25,750 --> 00:19:28,809
are removed the pluses remove<font color="#CCCCCC"> and new</font>

528
00:19:27,309 --> 00:19:30,700
object magically comes back together

529
00:19:28,809 --> 00:19:32,379
<font color="#E5E5E5">well when you start doing reordering</font>

530
00:19:30,700 --> 00:19:36,910
stuff like this<font color="#E5E5E5"> it never comes back</font>

531
00:19:32,380 --> 00:19:39,460
together so<font color="#E5E5E5"> less either regex all the</font>

532
00:19:36,910 --> 00:19:40,840
things or give up<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to be be</font>

533
00:19:39,460 --> 00:19:43,210
a realist here and just give up on new

534
00:19:40,840 --> 00:19:45,428
object as a solid indicator<font color="#E5E5E5"> so we're</font>

535
00:19:43,210 --> 00:19:47,740
left with invoke expression now on the

536
00:19:45,429 --> 00:19:49,960
command line<font color="#CCCCCC"> invoke expression and IEX</font>

537
00:19:47,740 --> 00:19:51,070
<font color="#E5E5E5">is a really freaking</font><font color="#CCCCCC"> good indicator and</font>

538
00:19:49,960 --> 00:19:52,269
if you're not<font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> this</font>

539
00:19:51,070 --> 00:19:54,279
absolutely should<font color="#CCCCCC"> be because</font><font color="#E5E5E5"> there's a</font>

540
00:19:52,269 --> 00:19:55,690
lot of<font color="#E5E5E5"> evil out there that uses this all</font>

541
00:19:54,279 --> 00:19:57,669
the time

542
00:19:55,690 --> 00:19:59,320
however as a defender we can't become

543
00:19:57,669 --> 00:20:01,509
<font color="#E5E5E5">complacent</font><font color="#CCCCCC"> just with invoke expression</font>

544
00:19:59,320 --> 00:20:04,779
or IEX there's a lot of things to keep

545
00:20:01,509 --> 00:20:07,389
in<font color="#CCCCCC"> mind here</font><font color="#E5E5E5"> for example it has invoke</font>

546
00:20:04,779 --> 00:20:09,009
expression has the alias<font color="#CCCCCC"> ie</font><font color="#E5E5E5"> X order</font>

547
00:20:07,389 --> 00:20:10,870
doesn't<font color="#CCCCCC"> matter you</font><font color="#E5E5E5"> can invoke expression</font>

548
00:20:09,009 --> 00:20:12,639
and then have your expression<font color="#E5E5E5"> or you can</font>

549
00:20:10,870 --> 00:20:16,268
have<font color="#CCCCCC"> your expression</font><font color="#E5E5E5"> and pipe it in to</font>

550
00:20:12,639 --> 00:20:19,418
invoke expression you can also put it a

551
00:20:16,269 --> 00:20:21,759
<font color="#CCCCCC">commandment you can use the invocation</font>

552
00:20:19,419 --> 00:20:23,559
operators and have<font color="#E5E5E5"> IEX or invoke</font>

553
00:20:21,759 --> 00:20:28,720
expression and do string manipulation

554
00:20:23,559 --> 00:20:29,918
there in a fun fact<font color="#CCCCCC"> actually as part of</font>

555
00:20:28,720 --> 00:20:31,600
this research<font color="#E5E5E5"> we'll talk about this in</font>

556
00:20:29,919 --> 00:20:34,600
just<font color="#E5E5E5"> a few slides we developed a</font>

557
00:20:31,600 --> 00:20:35,830
<font color="#CCCCCC">powershell corpus quite a large</font><font color="#E5E5E5"> corpus</font>

558
00:20:34,600 --> 00:20:37,870
we'll get<font color="#E5E5E5"> into the numbers in a moment</font>

559
00:20:35,830 --> 00:20:40,750
<font color="#E5E5E5">but only</font><font color="#CCCCCC"> three percent of scripts</font><font color="#E5E5E5"> in the</font>

560
00:20:37,870 --> 00:20:42,008
wild in this corpus<font color="#E5E5E5"> actually use invoke</font>

561
00:20:40,750 --> 00:20:43,929
expression in the script

562
00:20:42,009 --> 00:20:47,009
so it<font color="#CCCCCC"> comes some interesting interesting</font>

563
00:20:43,929 --> 00:20:49,899
<font color="#E5E5E5">numbers there it's a bit of a rarity</font>

564
00:20:47,009 --> 00:20:51,220
<font color="#E5E5E5">then we also have invoke expressions</font>

565
00:20:49,899 --> 00:20:53,018
cousin<font color="#E5E5E5"> as I like the call which is</font>

566
00:20:51,220 --> 00:20:54,340
invoke command now typically you'll see

567
00:20:53,019 --> 00:20:56,110
invoke command when you're running<font color="#E5E5E5"> like</font>

568
00:20:54,340 --> 00:20:58,120
<font color="#CCCCCC">powershell remoting you want to run</font><font color="#E5E5E5"> on</font>

569
00:20:56,110 --> 00:20:59,830
another system<font color="#E5E5E5"> but if you never define</font>

570
00:20:58,120 --> 00:21:01,870
computer name for a remote<font color="#E5E5E5"> system then</font>

571
00:20:59,830 --> 00:21:04,059
it'll run locally so with invoke command

572
00:21:01,870 --> 00:21:06,070
you have<font color="#CCCCCC"> its alias of ICM</font><font color="#E5E5E5"> you can use</font>

573
00:21:04,059 --> 00:21:07,990
dot invoke you can use the ampersand of

574
00:21:06,070 --> 00:21:09,939
<font color="#E5E5E5">the dot invocation operators invoke</font>

575
00:21:07,990 --> 00:21:13,539
return is is<font color="#CCCCCC"> invoked with context so</font>

576
00:21:09,940 --> 00:21:16,299
many options<font color="#CCCCCC"> and</font><font color="#E5E5E5"> again we have to be</font>

577
00:21:13,539 --> 00:21:18,070
<font color="#E5E5E5">aware of these options as defenders</font><font color="#CCCCCC"> also</font>

578
00:21:16,299 --> 00:21:20,590
with powershell 1.0 syntax remember that

579
00:21:18,070 --> 00:21:22,870
execution<font color="#E5E5E5"> context automatic variable you</font>

580
00:21:20,590 --> 00:21:24,070
can also call<font color="#E5E5E5"> its invoke script method</font>

581
00:21:22,870 --> 00:21:25,928
there which will receive either an

582
00:21:24,070 --> 00:21:27,610
expression or<font color="#E5E5E5"> a script block because</font>

583
00:21:25,929 --> 00:21:30,730
invoke expression is<font color="#E5E5E5"> going to expect</font><font color="#CCCCCC"> an</font>

584
00:21:27,610 --> 00:21:34,090
expression invoke command<font color="#E5E5E5"> will expect a</font>

585
00:21:30,730 --> 00:21:35,169
script block so<font color="#E5E5E5"> we can add tick marks to</font>

586
00:21:34,090 --> 00:21:37,600
all of these right because<font color="#E5E5E5"> they're</font>

587
00:21:35,169 --> 00:21:39,659
commandlets however that ampersand<font color="#CCCCCC"> in</font>

588
00:21:37,600 --> 00:21:42,219
that dot<font color="#CCCCCC"> how in the world could we</font>

589
00:21:39,659 --> 00:21:43,809
feasibly expect to alert on an ampersand

590
00:21:42,220 --> 00:21:45,610
or<font color="#E5E5E5"> a dot in a command line let's say</font>

591
00:21:43,809 --> 00:21:48,370
without<font color="#CCCCCC"> getting insane false positives</font>

592
00:21:45,610 --> 00:21:50,229
<font color="#E5E5E5">well maybe we could say</font><font color="#CCCCCC"> okay let's only</font>

593
00:21:48,370 --> 00:21:51,969
alert if we see an ampersand or<font color="#E5E5E5"> dot and</font>

594
00:21:50,230 --> 00:21:53,950
we also see curly braces because

595
00:21:51,970 --> 00:21:55,899
<font color="#E5E5E5">curly braces are the only way</font><font color="#CCCCCC"> that you</font>

596
00:21:53,950 --> 00:21:57,909
can denote<font color="#E5E5E5"> a script block however</font>

597
00:21:55,899 --> 00:21:59,559
<font color="#CCCCCC">unfortunately that's</font><font color="#E5E5E5"> not true you can</font>

598
00:21:57,909 --> 00:22:01,029
actually convert<font color="#CCCCCC"> an expression to a</font>

599
00:21:59,559 --> 00:22:03,129
script block<font color="#CCCCCC"> and here are two</font><font color="#E5E5E5"> ways of</font>

600
00:22:01,029 --> 00:22:04,930
<font color="#E5E5E5">doing</font><font color="#CCCCCC"> it you can use the script lock net</font>

601
00:22:03,129 --> 00:22:07,389
class<font color="#CCCCCC"> and use the create method</font>

602
00:22:04,930 --> 00:22:10,180
or you can use this<font color="#CCCCCC"> PowerShell</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> auto</font>

603
00:22:07,390 --> 00:22:12,520
execution context<font color="#CCCCCC"> and use the new script</font>

604
00:22:10,180 --> 00:22:14,530
<font color="#CCCCCC">lock mantlet</font><font color="#E5E5E5"> and in fact or the script</font>

605
00:22:12,520 --> 00:22:16,150
<font color="#E5E5E5">block method and in fact for both of</font>

606
00:22:14,530 --> 00:22:17,560
these examples<font color="#CCCCCC"> you can off</font><font color="#E5E5E5"> you skate</font>

607
00:22:16,150 --> 00:22:19,810
them just<font color="#E5E5E5"> like we've been</font><font color="#CCCCCC"> doing all</font>

608
00:22:17,560 --> 00:22:22,710
<font color="#E5E5E5">along</font><font color="#CCCCCC"> so there is no silver</font><font color="#E5E5E5"> bullet</font><font color="#CCCCCC"> every</font>

609
00:22:19,810 --> 00:22:26,429
component<font color="#E5E5E5"> can be obfuscated even further</font>

610
00:22:22,710 --> 00:22:29,380
<font color="#E5E5E5">and on the</font><font color="#CCCCCC"> note of these invocation</font>

611
00:22:26,430 --> 00:22:30,640
<font color="#E5E5E5">syntaxes in invoke</font><font color="#CCCCCC"> Cradle crafter which</font>

612
00:22:29,380 --> 00:22:33,850
<font color="#E5E5E5">I just released a couple months ago</font>

613
00:22:30,640 --> 00:22:35,140
<font color="#CCCCCC">there's actually annual yeah I have to</font>

614
00:22:33,850 --> 00:22:36,429
argue<font color="#CCCCCC"> with</font><font color="#E5E5E5"> some people they</font><font color="#CCCCCC"> say how are</font>

615
00:22:35,140 --> 00:22:38,590
<font color="#E5E5E5">you still a blue</font><font color="#CCCCCC"> Timur</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I feel like</font>

616
00:22:36,430 --> 00:22:40,480
you have some some personality disorder

617
00:22:38,590 --> 00:22:42,459
going on there but uh I like<font color="#CCCCCC"> to be</font>

618
00:22:40,480 --> 00:22:44,290
thorough<font color="#E5E5E5"> in</font><font color="#CCCCCC"> my research so in invoke</font>

619
00:22:42,460 --> 00:22:46,390
<font color="#E5E5E5">Cradle crafter there's actually over 10</font>

620
00:22:44,290 --> 00:22:49,540
<font color="#E5E5E5">different invocation options using this</font>

621
00:22:46,390 --> 00:22:51,010
get alias get command<font color="#E5E5E5"> so basically it's</font>

622
00:22:49,540 --> 00:22:52,899
a<font color="#E5E5E5"> really interesting tool to go around</font>

623
00:22:51,010 --> 00:22:54,250
and<font color="#E5E5E5"> to play around</font><font color="#CCCCCC"> with to see all the</font>

624
00:22:52,900 --> 00:22:58,060
different<font color="#E5E5E5"> kinds of combinations</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can</font>

625
00:22:54,250 --> 00:22:59,470
<font color="#E5E5E5">come out</font><font color="#CCCCCC"> there that was brutal I don't</font>

626
00:22:58,060 --> 00:23:02,470
know about you<font color="#CCCCCC"> but my brain is</font><font color="#E5E5E5"> hurting</font>

627
00:22:59,470 --> 00:23:04,840
<font color="#CCCCCC">I'm about as much as</font><font color="#E5E5E5"> I can go when it</font>

628
00:23:02,470 --> 00:23:07,330
comes to this<font color="#E5E5E5"> kind of stuff</font><font color="#CCCCCC"> so just</font>

629
00:23:04,840 --> 00:23:09,129
breathe relax<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so fortunately the</font>

630
00:23:07,330 --> 00:23:10,750
good news is that's really<font color="#E5E5E5"> the</font><font color="#CCCCCC"> extent of</font>

631
00:23:09,130 --> 00:23:15,280
the oxidation<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can perform for</font>

632
00:23:10,750 --> 00:23:17,290
PowerShell thank you guys stole the

633
00:23:15,280 --> 00:23:18,520
<font color="#CCCCCC">punch line there</font><font color="#E5E5E5"> it's absolutely not the</font>

634
00:23:17,290 --> 00:23:21,070
end there's way more we can do we can

635
00:23:18,520 --> 00:23:22,450
<font color="#CCCCCC">actually step</font><font color="#E5E5E5"> back after we've done</font><font color="#CCCCCC"> all</font>

636
00:23:21,070 --> 00:23:24,189
this<font color="#E5E5E5"> token layer off the station and say</font>

637
00:23:22,450 --> 00:23:26,770
let me take<font color="#E5E5E5"> this entire command and</font>

638
00:23:24,190 --> 00:23:28,930
treat<font color="#CCCCCC"> it as a string</font><font color="#E5E5E5"> and as a string I</font>

639
00:23:26,770 --> 00:23:30,670
can just like let's say reverse the

640
00:23:28,930 --> 00:23:32,830
<font color="#E5E5E5">entire command and on the command line</font>

641
00:23:30,670 --> 00:23:34,930
<font color="#CCCCCC">everything is in reverse</font><font color="#E5E5E5"> in memory</font><font color="#CCCCCC"> its</font>

642
00:23:32,830 --> 00:23:36,610
reversed<font color="#CCCCCC"> what we can also do is we</font><font color="#E5E5E5"> can</font>

643
00:23:34,930 --> 00:23:38,530
<font color="#CCCCCC">put garbage two limiters all throughout</font>

644
00:23:36,610 --> 00:23:40,629
<font color="#E5E5E5">the command and then split and join on</font>

645
00:23:38,530 --> 00:23:42,040
that<font color="#E5E5E5"> we can do a very similar thing with</font>

646
00:23:40,630 --> 00:23:43,690
replace just say yeah all<font color="#E5E5E5"> those garbage</font>

647
00:23:42,040 --> 00:23:45,760
<font color="#E5E5E5">delimiter so let me just remove those</font>

648
00:23:43,690 --> 00:23:48,550
before I invoke what's left

649
00:23:45,760 --> 00:23:50,350
we can then chunk it<font color="#E5E5E5"> up into sub strings</font>

650
00:23:48,550 --> 00:23:52,600
and concatenate<font color="#CCCCCC"> it again any kind of</font>

651
00:23:50,350 --> 00:23:54,219
string<font color="#E5E5E5"> manipulation</font><font color="#CCCCCC"> and it's game over</font>

652
00:23:52,600 --> 00:23:55,270
<font color="#CCCCCC">and that's</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of what are we</font><font color="#E5E5E5"> doing</font>

653
00:23:54,220 --> 00:23:56,650
with the method stuff right with

654
00:23:55,270 --> 00:23:58,990
download string if we could treat it as

655
00:23:56,650 --> 00:24:01,150
a string<font color="#CCCCCC"> object</font><font color="#E5E5E5"> it's game over we can do</font>

656
00:23:58,990 --> 00:24:03,490
any of these techniques<font color="#E5E5E5"> either on any</font>

657
00:24:01,150 --> 00:24:05,950
individual piece of the command or<font color="#CCCCCC"> the</font>

658
00:24:03,490 --> 00:24:07,000
entire command now<font color="#E5E5E5"> wouldn't</font><font color="#CCCCCC"> it suck if</font>

659
00:24:05,950 --> 00:24:08,920
there's a tool<font color="#CCCCCC"> out there</font><font color="#E5E5E5"> that did all</font>

660
00:24:07,000 --> 00:24:10,150
this stuff<font color="#E5E5E5"> in an automated fashion</font><font color="#CCCCCC"> like</font>

661
00:24:08,920 --> 00:24:12,220
that<font color="#CCCCCC"> B that would</font><font color="#E5E5E5"> be pretty disturbing</font>

662
00:24:10,150 --> 00:24:13,780
<font color="#E5E5E5">right unfortunately</font><font color="#CCCCCC"> some guy wrote</font><font color="#E5E5E5"> this</font>

663
00:24:12,220 --> 00:24:16,870
tool called invoke off<font color="#CCCCCC"> eustachian</font><font color="#E5E5E5"> thanks</font>

664
00:24:13,780 --> 00:24:18,029
Daniel<font color="#E5E5E5"> mmm that basically</font><font color="#CCCCCC"> does just that</font>

665
00:24:16,870 --> 00:24:19,678
and<font color="#E5E5E5"> so if you</font>

666
00:24:18,029 --> 00:24:21,149
take again<font color="#E5E5E5"> this is the this is the</font>

667
00:24:19,679 --> 00:24:23,219
sample command<font color="#E5E5E5"> that we just office</font>

668
00:24:21,149 --> 00:24:25,859
<font color="#CCCCCC">skated manually</font><font color="#E5E5E5"> right a download cradle</font>

669
00:24:23,219 --> 00:24:27,659
with that totally legit bitly link<font color="#E5E5E5"> and</font>

670
00:24:25,859 --> 00:24:29,489
in the<font color="#CCCCCC"> info coffee station you can just</font>

671
00:24:27,659 --> 00:24:31,200
say yeah instead<font color="#E5E5E5"> of having to go to</font><font color="#CCCCCC"> the</font>

672
00:24:29,489 --> 00:24:33,239
string token the member token just<font color="#E5E5E5"> say</font>

673
00:24:31,200 --> 00:24:34,710
yeah all the<font color="#E5E5E5"> tokens like randomize all</font>

674
00:24:33,239 --> 00:24:36,929
that stuff<font color="#CCCCCC"> and produce something</font><font color="#E5E5E5"> like</font>

675
00:24:34,710 --> 00:24:39,059
<font color="#E5E5E5">that you can then take something like</font>

676
00:24:36,929 --> 00:24:40,559
<font color="#CCCCCC">that</font><font color="#E5E5E5"> and say hey let me do some of</font><font color="#CCCCCC"> that</font>

677
00:24:39,059 --> 00:24:42,090
<font color="#E5E5E5">fancy string manipulation that we just</font>

678
00:24:40,559 --> 00:24:47,009
talked about<font color="#CCCCCC"> you'll get something</font><font color="#E5E5E5"> like</font>

679
00:24:42,090 --> 00:24:48,418
<font color="#CCCCCC">that</font><font color="#E5E5E5"> now fun fact um writing this tool</font>

680
00:24:47,009 --> 00:24:50,399
was was very<font color="#E5E5E5"> frustrating at times</font>

681
00:24:48,419 --> 00:24:51,929
because debugging<font color="#E5E5E5"> off you skated code is</font>

682
00:24:50,399 --> 00:24:54,389
like the worst possible wish you could

683
00:24:51,929 --> 00:24:57,539
ever wish<font color="#CCCCCC"> upon somebody</font><font color="#E5E5E5"> but then</font><font color="#CCCCCC"> you're</font>

684
00:24:54,389 --> 00:24:59,820
bad you lay in it<font color="#CCCCCC"> but then actually when</font>

685
00:24:57,539 --> 00:25:01,769
<font color="#E5E5E5">you see like apt groups using your code</font>

686
00:24:59,820 --> 00:25:02,849
and<font color="#E5E5E5"> you have to go and like decode it</font>

687
00:25:01,769 --> 00:25:04,950
you kind of get<font color="#E5E5E5"> some dirty looks in the</font>

688
00:25:02,849 --> 00:25:08,158
office<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> I'll decode this one so</font>

689
00:25:04,950 --> 00:25:10,139
apt 32<font color="#CCCCCC"> is a Vietnamese</font><font color="#E5E5E5"> group also known</font>

690
00:25:08,159 --> 00:25:11,820
<font color="#E5E5E5">as ocean Lotus and they happen to like</font>

691
00:25:10,139 --> 00:25:12,779
this combination typically<font color="#E5E5E5"> they'll have</font>

692
00:25:11,820 --> 00:25:14,460
their payloads and<font color="#E5E5E5"> they'll run it</font>

693
00:25:12,779 --> 00:25:16,200
through token layer<font color="#E5E5E5"> on off you station</font>

694
00:25:14,460 --> 00:25:18,659
and then like five or six layers of

695
00:25:16,200 --> 00:25:19,229
<font color="#E5E5E5">string off you</font><font color="#CCCCCC"> sagacious</font><font color="#E5E5E5"> so keeps it</font>

696
00:25:18,659 --> 00:25:21,960
interesting

697
00:25:19,229 --> 00:25:23,609
so that's<font color="#E5E5E5"> invoke computation</font><font color="#CCCCCC"> invoke</font>

698
00:25:21,960 --> 00:25:25,409
cradle crafter actually<font color="#E5E5E5"> will take a very</font>

699
00:25:23,609 --> 00:25:26,668
<font color="#E5E5E5">different spin</font><font color="#CCCCCC"> on this</font><font color="#E5E5E5"> so in the cradle</font>

700
00:25:25,409 --> 00:25:27,330
<font color="#E5E5E5">crafter you can</font><font color="#CCCCCC"> basically hand at this</font>

701
00:25:26,669 --> 00:25:29,869
<font color="#E5E5E5">URL</font>

702
00:25:27,330 --> 00:25:31,799
<font color="#CCCCCC">your bitly link and then it will perform</font>

703
00:25:29,869 --> 00:25:34,559
<font color="#E5E5E5">completely different kind of obfuscation</font>

704
00:25:31,799 --> 00:25:37,739
<font color="#E5E5E5">against this it will do substitution off</font>

705
00:25:34,559 --> 00:25:39,690
<font color="#CCCCCC">Yusuke ssin so now let's look like for a</font>

706
00:25:37,739 --> 00:25:41,429
member<font color="#E5E5E5"> right for download string it'll</font>

707
00:25:39,690 --> 00:25:43,679
never put<font color="#CCCCCC"> that in quotes</font>

708
00:25:41,429 --> 00:25:46,049
it'll<font color="#E5E5E5"> never</font><font color="#CCCCCC"> add tick marks what it will</font>

709
00:25:43,679 --> 00:25:47,969
actually do is it<font color="#E5E5E5"> will enumerate</font><font color="#CCCCCC"> other</font>

710
00:25:46,049 --> 00:25:49,950
objects<font color="#E5E5E5"> and basically say</font><font color="#CCCCCC"> alright like</font>

711
00:25:47,969 --> 00:25:51,479
the<font color="#CCCCCC"> 37th item when I call this command</font>

712
00:25:49,950 --> 00:25:54,210
happens to be the string download string

713
00:25:51,479 --> 00:25:55,859
so now this<font color="#E5E5E5"> big blob of text is gonna</font>

714
00:25:54,210 --> 00:25:57,479
resolve to download string in memory<font color="#E5E5E5"> but</font>

715
00:25:55,859 --> 00:26:01,468
not<font color="#E5E5E5"> on the command line so</font><font color="#CCCCCC"> that's where</font>

716
00:25:57,479 --> 00:26:04,649
you get commands<font color="#E5E5E5"> like this so as part of</font>

717
00:26:01,469 --> 00:26:07,349
<font color="#E5E5E5">today's talk a few hours ago I actually</font>

718
00:26:04,649 --> 00:26:09,629
released two new<font color="#E5E5E5"> encoding schemes for</font>

719
00:26:07,349 --> 00:26:11,718
<font color="#E5E5E5">invoke confiscation just to drive home</font>

720
00:26:09,629 --> 00:26:14,099
the<font color="#CCCCCC"> point</font><font color="#E5E5E5"> if anyone's not convinced that</font>

721
00:26:11,719 --> 00:26:15,269
<font color="#E5E5E5">that there needs to be a different</font>

722
00:26:14,099 --> 00:26:18,119
<font color="#E5E5E5">approach when it comes</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> detecting off</font>

723
00:26:15,269 --> 00:26:21,119
you station this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> 100% special</font>

724
00:26:18,119 --> 00:26:23,428
characters<font color="#E5E5E5"> now I cannot take credit for</font>

725
00:26:21,119 --> 00:26:26,908
<font color="#E5E5E5">this there's a Japanese researcher that</font>

726
00:26:23,429 --> 00:26:29,279
in 2010<font color="#E5E5E5"> came up with this</font><font color="#CCCCCC"> their</font><font color="#E5E5E5"> Twitter</font>

727
00:26:26,909 --> 00:26:31,200
handle<font color="#CCCCCC"> is Muto</font><font color="#E5E5E5"> Gucci and they actually</font>

728
00:26:29,279 --> 00:26:31,890
wrote hello<font color="#E5E5E5"> world</font><font color="#CCCCCC"> 100%</font><font color="#E5E5E5"> with special</font>

729
00:26:31,200 --> 00:26:33,630
characters

730
00:26:31,890 --> 00:26:36,000
and I would love<font color="#CCCCCC"> to meet</font><font color="#E5E5E5"> this person</font>

731
00:26:33,630 --> 00:26:37,590
<font color="#CCCCCC">because it's a brilliant idea it's these</font>

732
00:26:36,000 --> 00:26:39,840
three<font color="#E5E5E5"> parts they do to come up with this</font>

733
00:26:37,590 --> 00:26:41,520
but really<font color="#E5E5E5"> fascinating</font><font color="#CCCCCC"> now this is</font>

734
00:26:39,840 --> 00:26:43,080
basically a ton of variables and<font color="#CCCCCC"> their</font>

735
00:26:41,520 --> 00:26:45,270
variable names<font color="#E5E5E5"> happen</font><font color="#CCCCCC"> to also be</font><font color="#E5E5E5"> special</font>

736
00:26:43,080 --> 00:26:46,740
characters<font color="#E5E5E5"> but you could also make those</font>

737
00:26:45,270 --> 00:26:50,820
variable names<font color="#E5E5E5"> just be different</font><font color="#CCCCCC"> amounts</font>

738
00:26:46,740 --> 00:26:52,140
of<font color="#CCCCCC"> white</font><font color="#E5E5E5"> space look like that and now I</font>

739
00:26:50,820 --> 00:26:53,790
was having a conversation with<font color="#E5E5E5"> Casey</font>

740
00:26:52,140 --> 00:26:56,130
Smith or sub<font color="#E5E5E5"> to you several</font><font color="#CCCCCC"> months ago</font>

741
00:26:53,790 --> 00:26:58,580
<font color="#E5E5E5">and he saw</font><font color="#CCCCCC"> us he said</font><font color="#E5E5E5"> ah that reminds me</font>

742
00:26:56,130 --> 00:27:01,559
<font color="#E5E5E5">of</font><font color="#CCCCCC"> white space</font><font color="#E5E5E5"> encoding and I said uh</font>

743
00:26:58,580 --> 00:27:03,510
say what<font color="#E5E5E5"> he</font><font color="#CCCCCC"> said you know like white</font>

744
00:27:01,559 --> 00:27:05,428
space<font color="#E5E5E5"> and to</font><font color="#CCCCCC"> have encoding is like you</font>

745
00:27:03,510 --> 00:27:07,020
got<font color="#E5E5E5"> talk to me</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> and so that's</font>

746
00:27:05,429 --> 00:27:12,600
<font color="#E5E5E5">the second one or at</font><font color="#CCCCCC"> least</font><font color="#E5E5E5"> today which</font>

747
00:27:07,020 --> 00:27:14,429
is<font color="#E5E5E5"> white space and tab encoding so this</font>

748
00:27:12,600 --> 00:27:16,020
isn't a typo that<font color="#E5E5E5"> there's a tiny little</font>

749
00:27:14,429 --> 00:27:17,730
<font color="#E5E5E5">tick mark at the</font><font color="#CCCCCC"> beginning and then</font><font color="#E5E5E5"> the</font>

750
00:27:16,020 --> 00:27:19,740
rest<font color="#E5E5E5"> of that is either a white space</font>

751
00:27:17,730 --> 00:27:21,090
<font color="#E5E5E5">delimited by tabs or tabs limited by</font>

752
00:27:19,740 --> 00:27:25,070
white space and<font color="#E5E5E5"> that stuff at the</font><font color="#CCCCCC"> end</font>

753
00:27:21,090 --> 00:27:28,530
basically decodes that<font color="#E5E5E5"> so as a defender</font>

754
00:27:25,070 --> 00:27:34,230
we may<font color="#E5E5E5"> start to feel</font><font color="#CCCCCC"> like really</font><font color="#E5E5E5"> isn't</font>

755
00:27:28,530 --> 00:27:36,120
much<font color="#E5E5E5"> hope so I'm starting to feel</font><font color="#CCCCCC"> guilty</font>

756
00:27:34,230 --> 00:27:37,590
<font color="#E5E5E5">because I feel</font><font color="#CCCCCC"> like you know I'm kind of</font>

757
00:27:36,120 --> 00:27:38,850
betraying my own<font color="#E5E5E5"> people so is there</font>

758
00:27:37,590 --> 00:27:40,678
anything that we can<font color="#CCCCCC"> do to make this</font>

759
00:27:38,850 --> 00:27:42,629
<font color="#CCCCCC">better</font><font color="#E5E5E5"> for us I don't know</font>

760
00:27:40,679 --> 00:27:44,490
well we're not<font color="#E5E5E5"> even halfway through this</font>

761
00:27:42,630 --> 00:27:47,549
talk so<font color="#CCCCCC"> I think the answer might</font><font color="#E5E5E5"> be yes</font>

762
00:27:44,490 --> 00:27:50,520
<font color="#CCCCCC">I think we could do some smart</font><font color="#E5E5E5"> stuff</font>

763
00:27:47,549 --> 00:27:51,900
here<font color="#E5E5E5"> the</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to realize so hold</font>

764
00:27:50,520 --> 00:27:53,490
back we're not professional data

765
00:27:51,900 --> 00:27:56,190
scientists or anything<font color="#E5E5E5"> we're gonna do</font>

766
00:27:53,490 --> 00:27:57,650
some some<font color="#E5E5E5"> journeyman science here the</font>

767
00:27:56,190 --> 00:27:59,730
big thing when you take a<font color="#E5E5E5"> look at this</font>

768
00:27:57,650 --> 00:28:01,320
nobody looking at either of<font color="#E5E5E5"> these</font>

769
00:27:59,730 --> 00:28:04,320
scripts is gonna be like<font color="#CCCCCC"> that's fine</font>

770
00:28:01,320 --> 00:28:06,490
<font color="#E5E5E5">let's</font><font color="#CCCCCC"> just let that through</font>

771
00:28:04,320 --> 00:28:08,860
you look at this thing<font color="#CCCCCC"> and you</font><font color="#E5E5E5"> have</font>

772
00:28:06,490 --> 00:28:12,159
spotlight<font color="#E5E5E5"> we've got an opportunity here</font>

773
00:28:08,860 --> 00:28:14,320
<font color="#CCCCCC">to take what attackers are using as this</font>

774
00:28:12,159 --> 00:28:16,690
subversive cloak of<font color="#E5E5E5"> invisibility</font><font color="#CCCCCC"> and</font>

775
00:28:14,320 --> 00:28:19,779
turn it into this laser of like look at

776
00:28:16,690 --> 00:28:21,460
me look<font color="#CCCCCC"> at me I'm in so one of the ways</font>

777
00:28:19,779 --> 00:28:23,740
we can<font color="#CCCCCC"> do this is</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> thinking about</font>

778
00:28:21,460 --> 00:28:25,629
<font color="#E5E5E5">character frequency like you look at</font>

779
00:28:23,740 --> 00:28:29,049
this<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you say that's a lot of</font><font color="#E5E5E5"> ticks</font>

780
00:28:25,629 --> 00:28:30,389
<font color="#CCCCCC">that's a lot of braces so character</font>

781
00:28:29,049 --> 00:28:33,158
frequency let's do this

782
00:28:30,389 --> 00:28:35,049
we did some analysis against<font color="#E5E5E5"> posh code</font>

783
00:28:33,159 --> 00:28:38,110
which is a popular<font color="#CCCCCC"> PowerShell script</font>

784
00:28:35,049 --> 00:28:40,418
sharing repository<font color="#E5E5E5"> so on the right there</font>

785
00:28:38,110 --> 00:28:42,939
<font color="#CCCCCC">you see</font><font color="#E5E5E5"> that's what when you when you</font>

786
00:28:40,419 --> 00:28:44,440
<font color="#E5E5E5">take all the scripts in posh code that's</font>

787
00:28:42,940 --> 00:28:46,210
what the character frequency looks like

788
00:28:44,440 --> 00:28:48,610
you know you<font color="#E5E5E5"> vet some pretty regular</font>

789
00:28:46,210 --> 00:28:51,480
<font color="#E5E5E5">English characters and stuff on the left</font>

790
00:28:48,610 --> 00:28:54,729
<font color="#E5E5E5">there is two</font><font color="#CCCCCC"> examples of</font><font color="#E5E5E5"> what those</font>

791
00:28:51,480 --> 00:28:57,610
obfuscated scripts look like they look

792
00:28:54,730 --> 00:28:59,649
<font color="#E5E5E5">nothing like what a regular</font><font color="#CCCCCC"> powershell</font>

793
00:28:57,610 --> 00:29:02,199
script does and at this<font color="#E5E5E5"> point now</font><font color="#CCCCCC"> we</font>

794
00:28:59,649 --> 00:29:04,149
have sort of vectors of<font color="#E5E5E5"> numbers that</font><font color="#CCCCCC"> we</font>

795
00:29:02,200 --> 00:29:07,419
can start<font color="#E5E5E5"> to</font><font color="#CCCCCC"> actually apply some</font>

796
00:29:04,149 --> 00:29:08,709
traditional techniques now one thing

797
00:29:07,419 --> 00:29:10,929
<font color="#CCCCCC">that's out there in</font><font color="#E5E5E5"> the information</font>

798
00:29:08,710 --> 00:29:15,940
retrieval community is called cosine

799
00:29:10,929 --> 00:29:17,769
similarity<font color="#E5E5E5"> the idea</font><font color="#CCCCCC"> there search engines</font>

800
00:29:15,940 --> 00:29:20,379
use this a lot<font color="#E5E5E5"> they characterize a</font>

801
00:29:17,769 --> 00:29:21,820
document based on a big old list of

802
00:29:20,379 --> 00:29:23,860
numbers they call them features with

803
00:29:21,820 --> 00:29:26,139
their numbers they go a list of<font color="#E5E5E5"> numbers</font>

804
00:29:23,860 --> 00:29:27,820
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> compare all these numbers</font>

805
00:29:26,139 --> 00:29:30,549
together and then<font color="#E5E5E5"> you try to look for</font>

806
00:29:27,820 --> 00:29:34,779
<font color="#E5E5E5">ones</font><font color="#CCCCCC"> that are very</font><font color="#E5E5E5"> similar based on this</font>

807
00:29:30,549 --> 00:29:36,700
math here so when you're doing<font color="#E5E5E5"> cosine</font>

808
00:29:34,779 --> 00:29:38,830
just on little graph paper<font color="#E5E5E5"> or grade 10</font>

809
00:29:36,700 --> 00:29:40,360
or whatever<font color="#CCCCCC"> a</font><font color="#E5E5E5"> line on paper is</font>

810
00:29:38,830 --> 00:29:42,580
represented by<font color="#CCCCCC"> two numbers that's a</font>

811
00:29:40,360 --> 00:29:45,279
<font color="#CCCCCC">two-dimensional line you take two lines</font>

812
00:29:42,580 --> 00:29:47,168
that's another two numbers and<font color="#E5E5E5"> then you</font>

813
00:29:45,279 --> 00:29:49,029
can<font color="#E5E5E5"> take the cosine of that and figure</font>

814
00:29:47,169 --> 00:29:51,159
<font color="#CCCCCC">out how similar the lines are by</font>

815
00:29:49,029 --> 00:29:54,009
basically<font color="#E5E5E5"> how much they the angle</font>

816
00:29:51,159 --> 00:29:56,049
between them so you<font color="#E5E5E5"> can take this exact</font>

817
00:29:54,009 --> 00:29:58,000
same<font color="#CCCCCC"> approach and extend it into three</font>

818
00:29:56,049 --> 00:29:59,379
dimensions or<font color="#E5E5E5"> four dimensions and you</font>

819
00:29:58,000 --> 00:30:01,659
could do a lot<font color="#E5E5E5"> of dimensions and put a</font>

820
00:29:59,379 --> 00:30:04,449
<font color="#CCCCCC">nice-looking math symbol there and feel</font>

821
00:30:01,659 --> 00:30:06,100
like you're so happy<font color="#E5E5E5"> the truth is</font><font color="#CCCCCC"> these</font>

822
00:30:04,450 --> 00:30:08,470
don't need to be dimensions on a graph

823
00:30:06,100 --> 00:30:12,549
these can also<font color="#E5E5E5"> be just other numbers</font>

824
00:30:08,470 --> 00:30:15,320
<font color="#E5E5E5">like character frequencies</font>

825
00:30:12,549 --> 00:30:17,059
when we take that<font color="#E5E5E5"> cosine similarity</font><font color="#CCCCCC"> and</font>

826
00:30:15,320 --> 00:30:20,870
start to apply<font color="#CCCCCC"> that a character</font>

827
00:30:17,059 --> 00:30:23,299
frequencies across all of posh code<font color="#E5E5E5"> this</font>

828
00:30:20,870 --> 00:30:27,139
is an<font color="#CCCCCC"> example so most of the scripts</font>

829
00:30:23,299 --> 00:30:30,320
they show up as being<font color="#CCCCCC"> like</font><font color="#E5E5E5"> 0.97 similar</font>

830
00:30:27,140 --> 00:30:32,150
to an average powershell script<font color="#E5E5E5"> these</font>

831
00:30:30,320 --> 00:30:35,480
<font color="#E5E5E5">are few skated ones they stick out like</font>

832
00:30:32,150 --> 00:30:38,890
a<font color="#CCCCCC"> sore thumb we've got 0.15 similarity</font>

833
00:30:35,480 --> 00:30:41,390
we've got point three seven similarity

834
00:30:38,890 --> 00:30:44,540
this is what it looks like<font color="#E5E5E5"> when you take</font>

835
00:30:41,390 --> 00:30:47,210
<font color="#E5E5E5">those similarity metrics to the average</font>

836
00:30:44,540 --> 00:30:49,909
<font color="#E5E5E5">powershell script across all of posh</font>

837
00:30:47,210 --> 00:30:54,200
code we see just<font color="#E5E5E5"> a really really</font><font color="#CCCCCC"> great</font>

838
00:30:49,910 --> 00:30:56,210
grouping here above about<font color="#E5E5E5"> 0.8 anything</font>

839
00:30:54,200 --> 00:30:58,820
below<font color="#CCCCCC"> that when you took a</font><font color="#E5E5E5"> look at you</font>

840
00:30:56,210 --> 00:31:02,809
<font color="#E5E5E5">know you're talking about</font><font color="#CCCCCC"> reducing 3500</font>

841
00:30:58,820 --> 00:31:04,610
scripts down to like a couple dozen<font color="#E5E5E5"> when</font>

842
00:31:02,809 --> 00:31:08,240
you do look at these most of<font color="#E5E5E5"> these</font>

843
00:31:04,610 --> 00:31:10,189
things below<font color="#E5E5E5"> 0.8 actually do have a lot</font>

844
00:31:08,240 --> 00:31:12,770
of<font color="#E5E5E5"> characteristics</font><font color="#CCCCCC"> of obfuscation</font><font color="#E5E5E5"> and</font>

845
00:31:10,190 --> 00:31:15,140
when they<font color="#E5E5E5"> weren't done</font><font color="#CCCCCC"> intentionally a</font>

846
00:31:12,770 --> 00:31:16,850
lot of times they were done as part of

847
00:31:15,140 --> 00:31:18,770
some sort of code<font color="#E5E5E5"> golf competition</font><font color="#CCCCCC"> or</font>

848
00:31:16,850 --> 00:31:20,780
<font color="#CCCCCC">something like that so you know</font><font color="#E5E5E5"> it makes</font>

849
00:31:18,770 --> 00:31:23,299
<font color="#E5E5E5">sense so it's really good metric of a</font>

850
00:31:20,780 --> 00:31:25,399
way<font color="#E5E5E5"> using cosine similarity to start</font>

851
00:31:23,299 --> 00:31:27,530
really really finding<font color="#E5E5E5"> some high density</font>

852
00:31:25,400 --> 00:31:30,740
obfuscated stuff in your environment

853
00:31:27,530 --> 00:31:32,928
using log processing so at this<font color="#E5E5E5"> point</font>

854
00:31:30,740 --> 00:31:35,120
we're pretty<font color="#CCCCCC"> happy</font><font color="#E5E5E5"> with with these</font>

855
00:31:32,929 --> 00:31:36,860
initial results but wondered this is

856
00:31:35,120 --> 00:31:38,360
really just posh code like there's other

857
00:31:36,860 --> 00:31:41,059
<font color="#E5E5E5">PowerShell scripts</font><font color="#CCCCCC"> out there that we</font>

858
00:31:38,360 --> 00:31:43,309
could get our hands<font color="#E5E5E5"> on so Microsoft last</font>

859
00:31:41,059 --> 00:31:45,110
last spring<font color="#E5E5E5"> ran a little contest called</font>

860
00:31:43,309 --> 00:31:47,240
<font color="#E5E5E5">underhanded PowerShell</font><font color="#CCCCCC"> and basically</font>

861
00:31:45,110 --> 00:31:48,860
it's<font color="#CCCCCC"> kind of a two phase</font>

862
00:31:47,240 --> 00:31:50,330
contest in the first part<font color="#E5E5E5"> was more of</font>

863
00:31:48,860 --> 00:31:53,149
the<font color="#CCCCCC"> Red Team phase and</font><font color="#E5E5E5"> basically invited</font>

864
00:31:50,330 --> 00:31:56,809
the community<font color="#CCCCCC"> to</font><font color="#E5E5E5"> submit underhanded or</font>

865
00:31:53,150 --> 00:31:59,510
obfuscated<font color="#CCCCCC"> or obtuse PowerShell code to</font>

866
00:31:56,809 --> 00:32:01,190
perform<font color="#CCCCCC"> such a specific task</font><font color="#E5E5E5"> that got</font>

867
00:31:59,510 --> 00:32:03,500
around certain<font color="#E5E5E5"> script analyzer rules</font>

868
00:32:01,190 --> 00:32:07,820
looking for this certain activity to

869
00:32:03,500 --> 00:32:09,740
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> and so so that</font><font color="#E5E5E5"> was one part</font><font color="#CCCCCC"> of</font>

870
00:32:07,820 --> 00:32:11,510
this<font color="#E5E5E5"> and then we really said you know we</font>

871
00:32:09,740 --> 00:32:13,250
need<font color="#E5E5E5"> like that was a few</font><font color="#CCCCCC"> hundred scripts</font>

872
00:32:11,510 --> 00:32:14,840
that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> really really</font><font color="#CCCCCC"> fascinating but</font>

873
00:32:13,250 --> 00:32:18,230
we said<font color="#E5E5E5"> we need more</font><font color="#CCCCCC"> we need</font><font color="#E5E5E5"> more data</font>

874
00:32:14,840 --> 00:32:20,870
and so what we<font color="#E5E5E5"> decided to do was to</font>

875
00:32:18,230 --> 00:32:23,480
build a<font color="#CCCCCC"> powershell corpus now however</font>

876
00:32:20,870 --> 00:32:25,909
<font color="#E5E5E5">we're both gentlemen and so we did this</font>

877
00:32:23,480 --> 00:32:27,260
<font color="#E5E5E5">politely</font><font color="#CCCCCC"> and what</font><font color="#E5E5E5"> I mean</font><font color="#CCCCCC"> by that</font>

878
00:32:25,910 --> 00:32:30,020
is that leader with this nice little

879
00:32:27,260 --> 00:32:31,700
script to scrape github and those blue

880
00:32:30,020 --> 00:32:34,460
portions are the<font color="#CCCCCC"> portions that are</font>

881
00:32:31,700 --> 00:32:36,920
scraping github and the red portions are

882
00:32:34,460 --> 00:32:39,320
<font color="#E5E5E5">Canadian because Lee is Canadian and is</font>

883
00:32:36,920 --> 00:32:41,090
so polite<font color="#CCCCCC"> so it's like swaddling it's</font>

884
00:32:39,320 --> 00:32:42,530
like it's just<font color="#E5E5E5"> so</font><font color="#CCCCCC"> generous so</font><font color="#E5E5E5"> it's</font>

885
00:32:41,090 --> 00:32:45,620
really really a gentleman<font color="#CCCCCC"> and how he</font>

886
00:32:42,530 --> 00:32:47,570
scrapes<font color="#E5E5E5"> scrapes the Internet's</font><font color="#CCCCCC"> but mad</font>

887
00:32:45,620 --> 00:32:50,659
props to github so we had this<font color="#CCCCCC"> thing</font>

888
00:32:47,570 --> 00:32:52,879
running for literally<font color="#E5E5E5"> a month we took a</font>

889
00:32:50,660 --> 00:32:55,610
look<font color="#E5E5E5"> at all</font><font color="#CCCCCC"> the github</font><font color="#E5E5E5"> IDs and I'm like</font>

890
00:32:52,880 --> 00:32:57,950
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> ten million</font><font color="#E5E5E5"> github repositories</font>

891
00:32:55,610 --> 00:33:00,530
<font color="#E5E5E5">start scraping through those a</font><font color="#CCCCCC"> month of</font>

892
00:32:57,950 --> 00:33:03,890
<font color="#E5E5E5">doing this and</font><font color="#CCCCCC"> then it gets</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> 11</font>

893
00:33:00,530 --> 00:33:05,780
million<font color="#CCCCCC"> 12</font><font color="#E5E5E5"> million I'm like times with</font>

894
00:33:03,890 --> 00:33:09,230
<font color="#CCCCCC">pickin looked it up again it was</font>

895
00:33:05,780 --> 00:33:11,000
actually a<font color="#E5E5E5"> hundred million repos and so</font>

896
00:33:09,230 --> 00:33:12,770
I didn't feel like<font color="#E5E5E5"> waiting for a</font><font color="#CCCCCC"> year</font>

897
00:33:11,000 --> 00:33:14,210
had to have<font color="#E5E5E5"> this finish reached out to</font>

898
00:33:12,770 --> 00:33:16,639
the github folks and they ran a little

899
00:33:14,210 --> 00:33:21,410
<font color="#E5E5E5">back-end query gave me a zip and</font><font color="#CCCCCC"> it's</font>

900
00:33:16,640 --> 00:33:22,940
all good so so<font color="#CCCCCC"> the most polite thing is</font>

901
00:33:21,410 --> 00:33:24,830
actually<font color="#CCCCCC"> just to ask the people</font><font color="#E5E5E5"> you want</font>

902
00:33:22,940 --> 00:33:26,780
the<font color="#E5E5E5"> data from so big thanks to get help</font>

903
00:33:24,830 --> 00:33:30,530
for that<font color="#E5E5E5"> and so we'd like to thank</font><font color="#CCCCCC"> all</font>

904
00:33:26,780 --> 00:33:31,580
of the<font color="#E5E5E5"> contributors</font><font color="#CCCCCC"> we hope don't have</font>

905
00:33:30,530 --> 00:33:32,690
time at the<font color="#E5E5E5"> end to get to that but</font>

906
00:33:31,580 --> 00:33:34,399
there's a<font color="#E5E5E5"> lot of contributors out there</font>

907
00:33:32,690 --> 00:33:35,540
so if you wouldn't mind raising<font color="#E5E5E5"> your</font>

908
00:33:34,400 --> 00:33:38,330
hand if you've ever submitted<font color="#E5E5E5"> a</font>

909
00:33:35,540 --> 00:33:40,070
<font color="#CCCCCC">PowerShell script</font><font color="#E5E5E5"> to get hub TechNet</font>

910
00:33:38,330 --> 00:33:42,889
<font color="#CCCCCC">posh code powershell galleries anyone</font>

911
00:33:40,070 --> 00:33:43,820
ever submitted awesome<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> so much</font>

912
00:33:42,890 --> 00:33:45,830
because<font color="#E5E5E5"> this research wouldn't be</font>

913
00:33:43,820 --> 00:33:48,710
possible without you so so your name<font color="#CCCCCC"> is</font>

914
00:33:45,830 --> 00:33:50,360
actually on that<font color="#E5E5E5"> slide and it is it is</font>

915
00:33:48,710 --> 00:33:53,000
<font color="#E5E5E5">packed in the code in some fun places</font>

916
00:33:50,360 --> 00:33:55,939
<font color="#E5E5E5">which we'll get to</font><font color="#CCCCCC"> at the end</font><font color="#E5E5E5"> so really</font>

917
00:33:53,000 --> 00:33:58,340
excited<font color="#E5E5E5"> about</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so now once we got</font>

918
00:33:55,940 --> 00:34:00,200
all these scripts<font color="#CCCCCC"> we had the realization</font>

919
00:33:58,340 --> 00:34:03,830
that oh my gosh we<font color="#E5E5E5"> actually have to look</font>

920
00:34:00,200 --> 00:34:05,690
at these scripts<font color="#E5E5E5"> so there's some</font>

921
00:34:03,830 --> 00:34:08,389
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> things you might find when</font>

922
00:34:05,690 --> 00:34:11,030
you gather<font color="#E5E5E5"> this kind of corpus produced</font>

923
00:34:08,389 --> 00:34:14,139
by human beings<font color="#CCCCCC"> at a</font><font color="#E5E5E5"> keyboard</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> some</font>

924
00:34:11,030 --> 00:34:17,300
of the stuff was<font color="#CCCCCC"> just like really</font><font color="#E5E5E5"> sad</font>

925
00:34:14,139 --> 00:34:18,799
we found this<font color="#E5E5E5"> it was called</font><font color="#CCCCCC"> remove games</font>

926
00:34:17,300 --> 00:34:22,310
at ps1 the author

927
00:34:18,800 --> 00:34:24,230
oh crap<font color="#CCCCCC"> matte great</font><font color="#E5E5E5"> burn yeah</font><font color="#CCCCCC"> ok so this</font>

928
00:34:22,310 --> 00:34:25,969
guy<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> if that's right but</font>

929
00:34:24,230 --> 00:34:28,969
basically this removed<font color="#E5E5E5"> game</font><font color="#CCCCCC"> stopped ps1</font>

930
00:34:25,969 --> 00:34:31,580
<font color="#CCCCCC">we'll go through and find the default</font>

931
00:34:28,969 --> 00:34:32,779
<font color="#E5E5E5">games kill those processes and at the</font>

932
00:34:31,580 --> 00:34:34,699
end actually<font color="#E5E5E5"> remove the freaking</font>

933
00:34:32,780 --> 00:34:36,200
directories so I haven't<font color="#E5E5E5"> investigated</font>

934
00:34:34,699 --> 00:34:37,639
where the high scores are stored but if

935
00:34:36,199 --> 00:34:39,889
it's lost in this<font color="#E5E5E5"> then</font><font color="#CCCCCC"> that makes me</font>

936
00:34:37,639 --> 00:34:42,139
<font color="#E5E5E5">pretty sad so major buzzkill</font>

937
00:34:39,889 --> 00:34:44,420
<font color="#CCCCCC">but but in all seriousness we actually</font>

938
00:34:42,139 --> 00:34:46,969
found<font color="#E5E5E5"> some like some like heavier stuff</font>

939
00:34:44,420 --> 00:34:48,440
it'll<font color="#CCCCCC"> absolutely brutal it</font><font color="#E5E5E5"> actually kind</font>

940
00:34:46,969 --> 00:34:49,399
of paused our research for a little bit

941
00:34:48,440 --> 00:34:52,370
to<font color="#CCCCCC"> figure out how</font><font color="#E5E5E5"> to handle this</font>

942
00:34:49,400 --> 00:34:54,889
<font color="#E5E5E5">appropriately but</font><font color="#CCCCCC"> we actually found a</font>

943
00:34:52,370 --> 00:34:57,890
plot to kind of<font color="#E5E5E5"> overthrow a really</font>

944
00:34:54,889 --> 00:35:00,080
interesting set of of people<font color="#E5E5E5"> at a</font>

945
00:34:57,890 --> 00:35:02,240
certain<font color="#CCCCCC"> nation-state and</font><font color="#E5E5E5"> that was this</font>

946
00:35:00,080 --> 00:35:04,310
script<font color="#CCCCCC"> - let's fill the logs of the</font><font color="#E5E5E5"> US</font>

947
00:35:02,240 --> 00:35:07,490
House and<font color="#E5E5E5"> Senate servers with a message</font>

948
00:35:04,310 --> 00:35:09,290
that<font color="#CCCCCC"> we don't want SOPA</font><font color="#E5E5E5"> so the the Stop</font>

949
00:35:07,490 --> 00:35:12,350
Online<font color="#E5E5E5"> Piracy Act so a lot</font><font color="#CCCCCC"> of</font>

950
00:35:09,290 --> 00:35:14,750
<font color="#E5E5E5">interesting stuff there</font><font color="#CCCCCC"> so go back to</font>

951
00:35:12,350 --> 00:35:16,580
<font color="#E5E5E5">the serious stuff</font><font color="#CCCCCC"> again we needed</font><font color="#E5E5E5"> more</font>

952
00:35:14,750 --> 00:35:18,470
data<font color="#E5E5E5"> so the PowerShell corporates that</font>

953
00:35:16,580 --> 00:35:21,830
<font color="#E5E5E5">we assembled</font><font color="#CCCCCC"> and that we</font><font color="#E5E5E5"> are actually</font>

954
00:35:18,470 --> 00:35:23,569
<font color="#E5E5E5">releasing as part of this research came</font>

955
00:35:21,830 --> 00:35:26,150
up to four<font color="#CCCCCC"> hundred</font><font color="#E5E5E5"> and eight thousand</font>

956
00:35:23,570 --> 00:35:28,760
<font color="#E5E5E5">PowerShell scripts contributed by at</font>

957
00:35:26,150 --> 00:35:30,230
least twenty<font color="#E5E5E5"> eight thousand authors we</font>

958
00:35:28,760 --> 00:35:32,930
actually identified about<font color="#CCCCCC"> sixteen</font>

959
00:35:30,230 --> 00:35:35,870
<font color="#CCCCCC">hundred</font><font color="#E5E5E5"> off you skated scripts in that</font>

960
00:35:32,930 --> 00:35:37,759
data set<font color="#E5E5E5"> and then we produced around</font>

961
00:35:35,870 --> 00:35:39,980
<font color="#CCCCCC">four</font><font color="#E5E5E5"> thousand off you skated scripts by</font>

962
00:35:37,760 --> 00:35:41,930
randomly taking these PowerShell scripts

963
00:35:39,980 --> 00:35:43,700
<font color="#E5E5E5">and running them through</font><font color="#CCCCCC"> invoke off you</font>

964
00:35:41,930 --> 00:35:46,359
station<font color="#CCCCCC"> invoke</font><font color="#E5E5E5"> cradle crafter</font><font color="#CCCCCC"> and then</font>

965
00:35:43,700 --> 00:35:48,470
PowerShell ISE steroids off you station

966
00:35:46,360 --> 00:35:50,270
and the interesting thing<font color="#CCCCCC"> to note here</font>

967
00:35:48,470 --> 00:35:52,490
<font color="#CCCCCC">is in the</font><font color="#E5E5E5"> middle on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> right where we</font>

968
00:35:50,270 --> 00:35:53,600
manually<font color="#E5E5E5"> labeled</font><font color="#CCCCCC"> seven thousand scripts</font>

969
00:35:52,490 --> 00:35:56,479
<font color="#CCCCCC">now that sounds really tedious</font>

970
00:35:53,600 --> 00:35:58,700
I don't why would we<font color="#CCCCCC"> why do we do</font><font color="#E5E5E5"> that I</font>

971
00:35:56,480 --> 00:36:01,250
don't<font color="#CCCCCC"> know one of</font><font color="#E5E5E5"> the things</font><font color="#CCCCCC"> that that's</font>

972
00:35:58,700 --> 00:36:04,910
amazing<font color="#CCCCCC"> too is that this is</font><font color="#E5E5E5"> four gigs of</font>

973
00:36:01,250 --> 00:36:06,770
text if<font color="#E5E5E5"> you type that by hand as fast as</font>

974
00:36:04,910 --> 00:36:09,290
you<font color="#CCCCCC"> possibly could you know the average</font>

975
00:36:06,770 --> 00:36:14,900
person types<font color="#CCCCCC"> fifty words a minute</font><font color="#E5E5E5"> did</font>

976
00:36:09,290 --> 00:36:17,630
<font color="#E5E5E5">that eight hours a day like 365 you're</font>

977
00:36:14,900 --> 00:36:18,710
talking<font color="#E5E5E5"> thirty years of non-stop typing</font>

978
00:36:17,630 --> 00:36:20,930
to make<font color="#E5E5E5"> this corpus</font>

979
00:36:18,710 --> 00:36:24,050
like the amount of humanity represented

980
00:36:20,930 --> 00:36:25,460
by this<font color="#E5E5E5"> is crazy</font><font color="#CCCCCC"> but seven thousand</font>

981
00:36:24,050 --> 00:36:26,990
scripts why do you actually<font color="#CCCCCC"> everyone</font>

982
00:36:25,460 --> 00:36:28,520
<font color="#CCCCCC">thinks hacking is pretty awesome like</font>

983
00:36:26,990 --> 00:36:30,529
you're in a hood and you do crazy<font color="#E5E5E5"> music</font>

984
00:36:28,520 --> 00:36:32,330
<font color="#E5E5E5">and stuff it's kind of boring you sit</font>

985
00:36:30,530 --> 00:36:35,120
there<font color="#E5E5E5"> a notepad window pops up you take</font>

986
00:36:32,330 --> 00:36:36,500
a look<font color="#E5E5E5"> it's good close it label it so</font>

987
00:36:35,120 --> 00:36:39,440
there's some<font color="#E5E5E5"> PowerShell scripts to help</font>

988
00:36:36,500 --> 00:36:41,570
out a<font color="#E5E5E5"> bit but this</font><font color="#CCCCCC"> is why we talked</font>

989
00:36:39,440 --> 00:36:43,910
about how<font color="#E5E5E5"> happy we were with</font><font color="#CCCCCC"> that string</font>

990
00:36:41,570 --> 00:36:46,550
<font color="#CCCCCC">similar similarity metrics right</font><font color="#E5E5E5"> where</font>

991
00:36:43,910 --> 00:36:48,200
we were able to say all this stuff below

992
00:36:46,550 --> 00:36:50,390
<font color="#CCCCCC">zero point</font><font color="#E5E5E5"> eight that stuff looked</font>

993
00:36:48,200 --> 00:36:53,430
pretty sketchy<font color="#CCCCCC"> and we're happy with that</font>

994
00:36:50,390 --> 00:36:55,819
<font color="#E5E5E5">we didn't point out though we didn't</font>

995
00:36:53,430 --> 00:36:57,660
review the stuff above<font color="#E5E5E5"> 0.8</font>

996
00:36:55,819 --> 00:36:59,670
Ryan<font color="#E5E5E5"> Cobb did some interesting</font>

997
00:36:57,660 --> 00:37:03,029
<font color="#CCCCCC">investigation kind</font><font color="#E5E5E5"> of going along</font><font color="#CCCCCC"> that</font>

998
00:36:59,670 --> 00:37:05,640
path and the real measure that<font color="#E5E5E5"> you need</font>

999
00:37:03,029 --> 00:37:09,660
to focus<font color="#E5E5E5"> on and he did find that if you</font>

1000
00:37:05,640 --> 00:37:13,680
change that 0.8<font color="#CCCCCC"> to 0.7 or 0.9 it starts</font>

1001
00:37:09,660 --> 00:37:15,149
to<font color="#E5E5E5"> get a lot less good as a metric so</font>

1002
00:37:13,680 --> 00:37:17,460
when you're trying to be a bit<font color="#E5E5E5"> more kind</font>

1003
00:37:15,150 --> 00:37:20,220
of principled about this thing<font color="#E5E5E5"> the way</font>

1004
00:37:17,460 --> 00:37:22,380
that you<font color="#CCCCCC"> traditionally measure things</font><font color="#E5E5E5"> is</font>

1005
00:37:20,220 --> 00:37:27,480
by the two main<font color="#E5E5E5"> things are precision and</font>

1006
00:37:22,380 --> 00:37:29,730
recall so precision says<font color="#E5E5E5"> when you know</font>

1007
00:37:27,480 --> 00:37:32,130
this thing had an answer how<font color="#CCCCCC"> often was</font>

1008
00:37:29,730 --> 00:37:34,619
it correct<font color="#CCCCCC"> so basically that's</font><font color="#E5E5E5"> the</font>

1009
00:37:32,130 --> 00:37:37,019
measure of<font color="#E5E5E5"> false positives and recall</font>

1010
00:37:34,619 --> 00:37:39,420
says of all<font color="#E5E5E5"> the bad stuff</font><font color="#CCCCCC"> that's out</font>

1011
00:37:37,019 --> 00:37:41,129
there all<font color="#E5E5E5"> the obfuscated stuff how much</font>

1012
00:37:39,420 --> 00:37:44,400
did<font color="#E5E5E5"> it actually give you back to take a</font>

1013
00:37:41,130 --> 00:37:46,440
look<font color="#CCCCCC"> at so</font><font color="#E5E5E5"> this is an example here where</font>

1014
00:37:44,400 --> 00:37:49,920
precision<font color="#E5E5E5"> was pretty good right it was</font>

1015
00:37:46,440 --> 00:37:52,529
right almost<font color="#CCCCCC"> 90 percent of the time</font><font color="#E5E5E5"> but</font>

1016
00:37:49,920 --> 00:37:54,509
<font color="#E5E5E5">recall</font><font color="#CCCCCC"> that was not a</font><font color="#E5E5E5"> happy time</font><font color="#CCCCCC"> 37</font>

1017
00:37:52,529 --> 00:37:57,420
<font color="#CCCCCC">percent it was really not returning</font><font color="#E5E5E5"> that</font>

1018
00:37:54,509 --> 00:38:00,180
much of the obfuscated<font color="#E5E5E5"> stuff there was a</font>

1019
00:37:57,420 --> 00:38:02,390
ton of stuff above that<font color="#E5E5E5"> 0.8 that when</font>

1020
00:38:00,180 --> 00:38:06,180
reviewed<font color="#E5E5E5"> manually or visually was</font>

1021
00:38:02,390 --> 00:38:07,680
considered obfuscated<font color="#E5E5E5"> and the f1 score</font>

1022
00:38:06,180 --> 00:38:09,779
<font color="#E5E5E5">is a thing</font><font color="#CCCCCC"> that people</font><font color="#E5E5E5"> use to kind of</font>

1023
00:38:07,680 --> 00:38:11,038
combine<font color="#CCCCCC"> those two things</font><font color="#E5E5E5"> and that's</font>

1024
00:38:09,779 --> 00:38:14,880
<font color="#E5E5E5">where you see we really</font><font color="#CCCCCC"> have some</font>

1025
00:38:11,039 --> 00:38:17,039
problems<font color="#E5E5E5"> here at 0.5</font><font color="#CCCCCC"> too so there's</font>

1026
00:38:14,880 --> 00:38:19,470
clearly some dangers of character<font color="#CCCCCC"> only</font>

1027
00:38:17,039 --> 00:38:21,809
stuff but not only the problem of

1028
00:38:19,470 --> 00:38:23,549
looking at characters<font color="#E5E5E5"> but if you just</font>

1029
00:38:21,809 --> 00:38:25,289
look<font color="#CCCCCC"> at characters</font><font color="#E5E5E5"> there's a big</font>

1030
00:38:23,549 --> 00:38:28,130
<font color="#E5E5E5">opportunity for attackers to start</font>

1031
00:38:25,289 --> 00:38:30,599
manipulating<font color="#E5E5E5"> those character frequencies</font>

1032
00:38:28,130 --> 00:38:33,299
so this<font color="#E5E5E5"> is PowerShell</font><font color="#CCCCCC"> one of the most</font>

1033
00:38:30,599 --> 00:38:35,670
powerful<font color="#CCCCCC"> things ever invented I love it</font>

1034
00:38:33,299 --> 00:38:38,250
I<font color="#E5E5E5"> have his babies we've got the power we</font>

1035
00:38:35,670 --> 00:38:41,160
could do a lot<font color="#CCCCCC"> better</font><font color="#E5E5E5"> than just simple</font>

1036
00:38:38,250 --> 00:38:43,109
character frequency<font color="#E5E5E5"> analysis yeah so how</font>

1037
00:38:41,160 --> 00:38:45,720
<font color="#CCCCCC">might we</font><font color="#E5E5E5"> get more data points other than</font>

1038
00:38:43,109 --> 00:38:48,029
<font color="#CCCCCC">just character frequency</font><font color="#E5E5E5"> well</font>

1039
00:38:45,720 --> 00:38:49,589
PowerShell<font color="#E5E5E5"> when it sees code it knows</font>

1040
00:38:48,029 --> 00:38:52,829
its own and it has to have a way to

1041
00:38:49,589 --> 00:38:54,538
parse<font color="#E5E5E5"> that code</font><font color="#CCCCCC"> and what we're looking</font>

1042
00:38:52,829 --> 00:38:57,839
at<font color="#CCCCCC"> here is actually um powershell</font>

1043
00:38:54,539 --> 00:38:59,309
abstract syntax tree or AST so<font color="#CCCCCC"> when</font>

1044
00:38:57,839 --> 00:39:01,319
<font color="#E5E5E5">power</font><font color="#CCCCCC"> sells ceases command at the bottom</font>

1045
00:38:59,309 --> 00:39:03,830
it says<font color="#CCCCCC"> okay git</font><font color="#E5E5E5"> command that's called</font>

1046
00:39:01,319 --> 00:39:05,960
generic<font color="#E5E5E5"> it understands these left</font>

1047
00:39:03,830 --> 00:39:07,940
<font color="#CCCCCC">the season</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> parentheses it sees</font>

1048
00:39:05,960 --> 00:39:11,090
that the<font color="#CCCCCC"> dash F is actually a format</font>

1049
00:39:07,940 --> 00:39:13,010
<font color="#E5E5E5">operator we also see the these strings</font>

1050
00:39:11,090 --> 00:39:15,530
and so the neat part<font color="#E5E5E5"> about this is that</font>

1051
00:39:13,010 --> 00:39:18,590
<font color="#E5E5E5">PowerShell doesn't only recognize what</font>

1052
00:39:15,530 --> 00:39:20,660
these items<font color="#E5E5E5"> are it also recognizes how</font>

1053
00:39:18,590 --> 00:39:21,440
they are<font color="#E5E5E5"> related to every other piece of</font>

1054
00:39:20,660 --> 00:39:24,680
<font color="#E5E5E5">the command</font>

1055
00:39:21,440 --> 00:39:25,880
thus the abstract syntax tree<font color="#E5E5E5"> so what</font>

1056
00:39:24,680 --> 00:39:28,819
this means<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that we can actually go</font>

1057
00:39:25,880 --> 00:39:30,230
really<font color="#E5E5E5"> deep and inspect the script in a</font>

1058
00:39:28,820 --> 00:39:31,790
really deep fashion<font color="#E5E5E5"> not just looking at</font>

1059
00:39:30,230 --> 00:39:34,610
<font color="#E5E5E5">it as a whole</font><font color="#CCCCCC"> and looking at characters</font>

1060
00:39:31,790 --> 00:39:36,800
there's a great little GUI out there<font color="#E5E5E5"> for</font>

1061
00:39:34,610 --> 00:39:37,370
viewing<font color="#CCCCCC"> powershell</font><font color="#E5E5E5"> ast called ast</font>

1062
00:39:36,800 --> 00:39:38,750
<font color="#CCCCCC">Explorer</font>

1063
00:39:37,370 --> 00:39:40,310
out there on github so<font color="#CCCCCC"> a really cool</font>

1064
00:39:38,750 --> 00:39:41,930
<font color="#CCCCCC">tool just</font><font color="#E5E5E5"> to use to kind of</font><font color="#CCCCCC"> type in a</font>

1065
00:39:40,310 --> 00:39:44,690
command<font color="#CCCCCC"> and see how</font><font color="#E5E5E5"> does this actually</font>

1066
00:39:41,930 --> 00:39:46,310
break out into<font color="#E5E5E5"> ast</font><font color="#CCCCCC"> and this is</font>

1067
00:39:44,690 --> 00:39:49,910
ridiculous<font color="#E5E5E5"> like you just open up a</font>

1068
00:39:46,310 --> 00:39:52,610
PowerShell window install a module show

1069
00:39:49,910 --> 00:39:55,460
PS ast you get it you run it like

1070
00:39:52,610 --> 00:39:58,220
PowerShell makes it's so so<font color="#CCCCCC"> easy to get</font>

1071
00:39:55,460 --> 00:40:02,210
<font color="#CCCCCC">useful stuff on your systems exactly</font><font color="#E5E5E5"> and</font>

1072
00:39:58,220 --> 00:40:04,370
so now what we did with this is we<font color="#E5E5E5"> said</font>

1073
00:40:02,210 --> 00:40:06,410
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of just looking</font><font color="#E5E5E5"> at character</font>

1074
00:40:04,370 --> 00:40:09,890
frequency for the whole<font color="#E5E5E5"> script how many</font>

1075
00:40:06,410 --> 00:40:11,779
features can we possibly get<font color="#E5E5E5"> so we</font>

1076
00:40:09,890 --> 00:40:13,670
started with<font color="#CCCCCC"> AST type so basically in</font>

1077
00:40:11,780 --> 00:40:15,770
this<font color="#CCCCCC"> entire script how many commands</font><font color="#E5E5E5"> do</font>

1078
00:40:13,670 --> 00:40:18,950
we have how many<font color="#E5E5E5"> parentheses how many</font>

1079
00:40:15,770 --> 00:40:20,540
operators<font color="#E5E5E5"> how many how many members how</font>

1080
00:40:18,950 --> 00:40:22,100
many strings all the stuff<font color="#E5E5E5"> just getting</font>

1081
00:40:20,540 --> 00:40:24,259
counts and percentages of<font color="#E5E5E5"> the entire</font>

1082
00:40:22,100 --> 00:40:26,120
script<font color="#E5E5E5"> what percentage was this we did</font>

1083
00:40:24,260 --> 00:40:27,920
the same<font color="#E5E5E5"> thing with operator so</font>

1084
00:40:26,120 --> 00:40:30,470
assignment operators binary operators

1085
00:40:27,920 --> 00:40:33,050
unary invocation operators array size

1086
00:40:30,470 --> 00:40:34,939
ranges<font color="#E5E5E5"> an array of five elements is a</font>

1087
00:40:33,050 --> 00:40:36,440
little bit<font color="#E5E5E5"> it could be interesting but</font>

1088
00:40:34,940 --> 00:40:38,840
one<font color="#CCCCCC"> of 5,000 elements that becomes</font>

1089
00:40:36,440 --> 00:40:40,700
interesting<font color="#E5E5E5"> maybe that's</font><font color="#CCCCCC"> show code so we</font>

1090
00:40:38,840 --> 00:40:43,640
got that data and then for<font color="#CCCCCC"> every single</font>

1091
00:40:40,700 --> 00:40:45,470
<font color="#E5E5E5">one of these we ran character frequency</font>

1092
00:40:43,640 --> 00:40:46,819
analysis on each of those elements<font color="#E5E5E5"> so</font>

1093
00:40:45,470 --> 00:40:48,439
just<font color="#E5E5E5"> on the strings just on the</font>

1094
00:40:46,820 --> 00:40:51,830
commandlets<font color="#E5E5E5"> and we didn't</font><font color="#CCCCCC"> just do</font>

1095
00:40:48,440 --> 00:40:54,140
frequency we did<font color="#E5E5E5"> frequency entropy we</font>

1096
00:40:51,830 --> 00:40:56,000
did the length<font color="#E5E5E5"> max min medium mode range</font>

1097
00:40:54,140 --> 00:40:58,850
average<font color="#CCCCCC"> we did</font><font color="#E5E5E5"> a white space density</font>

1098
00:40:56,000 --> 00:41:00,200
character casing a lot of fun<font color="#E5E5E5"> stuff and</font>

1099
00:40:58,850 --> 00:41:02,330
we also did statistics on the command

1100
00:41:00,200 --> 00:41:04,669
names dotnet methods variables etc<font color="#CCCCCC"> and</font>

1101
00:41:02,330 --> 00:41:08,870
so what<font color="#CCCCCC"> that</font><font color="#E5E5E5"> resulted in was a lot of</font>

1102
00:41:04,670 --> 00:41:10,480
<font color="#E5E5E5">features actually</font><font color="#CCCCCC"> 4,000</font><font color="#E5E5E5"> feature</font><font color="#CCCCCC"> 198</font>

1103
00:41:08,870 --> 00:41:13,490
features that's crazy

1104
00:41:10,480 --> 00:41:16,180
<font color="#CCCCCC">anyone realize</font><font color="#E5E5E5"> oh my gosh what do we do</font>

1105
00:41:13,490 --> 00:41:16,180
<font color="#E5E5E5">with all these</font><font color="#CCCCCC"> features</font>

1106
00:41:16,630 --> 00:41:21,170
here's a here's a<font color="#E5E5E5"> thing there's a</font>

1107
00:41:19,520 --> 00:41:23,900
there's a technique<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> really</font>

1108
00:41:21,170 --> 00:41:26,360
<font color="#CCCCCC">common in statistics called</font><font color="#E5E5E5"> a linear</font>

1109
00:41:23,900 --> 00:41:27,590
<font color="#CCCCCC">regression</font><font color="#E5E5E5"> so it's you could do this in</font>

1110
00:41:26,360 --> 00:41:30,200
<font color="#CCCCCC">Excel it you know there's a lot of</font>

1111
00:41:27,590 --> 00:41:32,300
<font color="#E5E5E5">plugins to do a linear regression so the</font>

1112
00:41:30,200 --> 00:41:33,740
way that<font color="#CCCCCC"> a</font><font color="#E5E5E5"> linear</font><font color="#CCCCCC"> regression works</font><font color="#E5E5E5"> so we</font>

1113
00:41:32,300 --> 00:41:36,470
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about features right those</font><font color="#CCCCCC"> five</font>

1114
00:41:33,740 --> 00:41:37,879
<font color="#CCCCCC">thousand features so you might talk</font>

1115
00:41:36,470 --> 00:41:39,950
<font color="#E5E5E5">about well how do you figure out which</font>

1116
00:41:37,880 --> 00:41:41,270
<font color="#E5E5E5">ones are the</font><font color="#CCCCCC"> most important or not so</font>

1117
00:41:39,950 --> 00:41:42,830
for<font color="#E5E5E5"> each feature you give it a weight</font>

1118
00:41:41,270 --> 00:41:47,270
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> just a way</font><font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> the</font>

1119
00:41:42,830 --> 00:41:48,860
importance<font color="#E5E5E5"> so I take the combination of</font>

1120
00:41:47,270 --> 00:41:51,259
weights<font color="#E5E5E5"> and their features</font><font color="#CCCCCC"> do some</font>

1121
00:41:48,860 --> 00:41:54,080
<font color="#CCCCCC">multiplication add it up</font><font color="#E5E5E5"> across the</font>

1122
00:41:51,260 --> 00:41:55,400
whole<font color="#E5E5E5"> five thousand</font><font color="#CCCCCC"> and if it's over a</font>

1123
00:41:54,080 --> 00:41:57,080
certain level like if that number

1124
00:41:55,400 --> 00:41:59,750
<font color="#E5E5E5">whatever it is is over a certain number</font>

1125
00:41:57,080 --> 00:42:02,090
<font color="#CCCCCC">then maybe you call that obfuscated</font><font color="#E5E5E5"> and</font>

1126
00:41:59,750 --> 00:42:05,600
if it's below<font color="#CCCCCC"> a number well then it's</font>

1127
00:42:02,090 --> 00:42:07,820
not obvious<font color="#CCCCCC"> kated now the thing</font><font color="#E5E5E5"> is these</font>

1128
00:42:05,600 --> 00:42:09,710
the numbers coming back from<font color="#E5E5E5"> these</font>

1129
00:42:07,820 --> 00:42:12,980
features can be<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> rangy like way</font>

1130
00:42:09,710 --> 00:42:14,420
up and down way up and<font color="#E5E5E5"> down so you had</font>

1131
00:42:12,980 --> 00:42:16,490
this other thing called<font color="#CCCCCC"> a logit function</font>

1132
00:42:14,420 --> 00:42:18,980
<font color="#E5E5E5">that basically takes all your features</font>

1133
00:42:16,490 --> 00:42:21,439
<font color="#E5E5E5">and scales it down between</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one</font>

1134
00:42:18,980 --> 00:42:23,660
just<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that you don't have one thing</font>

1135
00:42:21,440 --> 00:42:26,120
where like<font color="#E5E5E5"> somebody dumps in a script</font>

1136
00:42:23,660 --> 00:42:28,190
with 14<font color="#E5E5E5"> megabytes in a character array</font>

1137
00:42:26,120 --> 00:42:29,359
that just totally<font color="#E5E5E5"> trashes everything so</font>

1138
00:42:28,190 --> 00:42:32,170
this is a way to<font color="#CCCCCC"> kind of squish those</font>

1139
00:42:29,360 --> 00:42:34,790
ranges<font color="#E5E5E5"> a little bit so you</font><font color="#CCCCCC"> combine the</font>

1140
00:42:32,170 --> 00:42:36,920
linear<font color="#CCCCCC"> regression with a logit function</font>

1141
00:42:34,790 --> 00:42:40,150
and that's<font color="#E5E5E5"> called a logistic regression</font>

1142
00:42:36,920 --> 00:42:42,830
<font color="#E5E5E5">so that's a pretty common thing as well</font>

1143
00:42:40,150 --> 00:42:47,480
<font color="#E5E5E5">so again another graphic of math just</font>

1144
00:42:42,830 --> 00:42:50,090
<font color="#E5E5E5">show how smart we</font><font color="#CCCCCC"> are the you basically</font>

1145
00:42:47,480 --> 00:42:52,130
take those features<font color="#E5E5E5"> send them through</font>

1146
00:42:50,090 --> 00:42:53,720
this logit function and you do the<font color="#E5E5E5"> same</font>

1147
00:42:52,130 --> 00:42:58,730
thing<font color="#CCCCCC"> so now you're doing</font><font color="#E5E5E5"> a linear</font>

1148
00:42:53,720 --> 00:43:00,290
<font color="#E5E5E5">regression</font><font color="#CCCCCC"> on these logic functions then</font>

1149
00:42:58,730 --> 00:43:02,360
there's other big question though you

1150
00:43:00,290 --> 00:43:04,070
have is like<font color="#E5E5E5"> what do you do like</font><font color="#CCCCCC"> that</font>

1151
00:43:02,360 --> 00:43:05,840
<font color="#CCCCCC">sound is</font><font color="#E5E5E5"> smart but you still didn't</font>

1152
00:43:04,070 --> 00:43:07,310
answer<font color="#E5E5E5"> the main question is like how</font><font color="#CCCCCC"> do</font>

1153
00:43:05,840 --> 00:43:09,470
<font color="#E5E5E5">I figure out all these weights that's</font>

1154
00:43:07,310 --> 00:43:11,870
that's an art that's a science do I like

1155
00:43:09,470 --> 00:43:13,759
phone up<font color="#CCCCCC"> Deebo would</font><font color="#E5E5E5"> be like ad</font><font color="#CCCCCC"> Bo is</font>

1156
00:43:11,870 --> 00:43:16,130
like a character<font color="#E5E5E5"> array like a bad thing</font>

1157
00:43:13,760 --> 00:43:17,740
and<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know like</font><font color="#CCCCCC"> how many false</font>

1158
00:43:16,130 --> 00:43:22,370
<font color="#E5E5E5">positives are</font><font color="#CCCCCC"> you gonna</font><font color="#E5E5E5"> get how many</font>

1159
00:43:17,740 --> 00:43:24,830
false negatives are you gonna get so the

1160
00:43:22,370 --> 00:43:26,900
trick there is another statistical

1161
00:43:24,830 --> 00:43:30,560
technique<font color="#E5E5E5"> called a gradient descent</font>

1162
00:43:26,900 --> 00:43:33,440
now this exactly<font color="#E5E5E5"> is why we went through</font>

1163
00:43:30,560 --> 00:43:35,750
<font color="#CCCCCC">all the painstaking</font><font color="#E5E5E5"> effort to label tons</font>

1164
00:43:33,440 --> 00:43:38,810
and tons and tons of<font color="#E5E5E5"> data because what</font>

1165
00:43:35,750 --> 00:43:41,030
you do need<font color="#E5E5E5"> is a source of truth so this</font>

1166
00:43:38,810 --> 00:43:43,100
<font color="#E5E5E5">gradient descent says I take all of</font>

1167
00:43:41,030 --> 00:43:45,710
these weights<font color="#E5E5E5"> and I just pretend that</font>

1168
00:43:43,100 --> 00:43:47,660
they don't<font color="#CCCCCC"> matter at all and then</font><font color="#E5E5E5"> you go</font>

1169
00:43:45,710 --> 00:43:49,130
through<font color="#E5E5E5"> this data set of stuff that you</font>

1170
00:43:47,660 --> 00:43:51,470
know<font color="#CCCCCC"> what that you've labeled and then</font>

1171
00:43:49,130 --> 00:43:54,470
<font color="#CCCCCC">you get</font><font color="#E5E5E5"> an answer</font><font color="#CCCCCC"> you say I'm</font><font color="#E5E5E5"> gonna run</font>

1172
00:43:51,470 --> 00:43:56,660
my my calculation<font color="#CCCCCC"> I think that</font><font color="#E5E5E5"> it's</font>

1173
00:43:54,470 --> 00:43:58,910
obfuscated or not based on based on

1174
00:43:56,660 --> 00:44:01,629
<font color="#E5E5E5">these numbers but then you have an</font>

1175
00:43:58,910 --> 00:44:03,830
actual answer<font color="#CCCCCC"> of are you correct or not</font>

1176
00:44:01,630 --> 00:44:05,330
so if you're not<font color="#E5E5E5"> correct there's always</font>

1177
00:44:03,830 --> 00:44:07,250
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> be some error between what you</font>

1178
00:44:05,330 --> 00:44:10,340
thought it was and what the<font color="#CCCCCC"> actual value</font>

1179
00:44:07,250 --> 00:44:12,320
is you can take<font color="#E5E5E5"> that error and feed it</font>

1180
00:44:10,340 --> 00:44:15,770
<font color="#E5E5E5">back and then adjust all those weights</font>

1181
00:44:12,320 --> 00:44:17,360
<font color="#E5E5E5">based on that error so the big weights</font>

1182
00:44:15,770 --> 00:44:19,070
are gonna get adjusted the most when

1183
00:44:17,360 --> 00:44:20,540
<font color="#E5E5E5">they're wrong and the small weights will</font>

1184
00:44:19,070 --> 00:44:23,090
get<font color="#CCCCCC"> adjusted the least when things are</font>

1185
00:44:20,540 --> 00:44:25,400
wrong so this<font color="#CCCCCC"> is the approach here you</font>

1186
00:44:23,090 --> 00:44:27,940
you run<font color="#E5E5E5"> this gradient descent on all</font>

1187
00:44:25,400 --> 00:44:30,200
these features and you get a really<font color="#E5E5E5"> big</font>

1188
00:44:27,940 --> 00:44:32,270
you<font color="#E5E5E5"> get a really big weight vector that</font>

1189
00:44:30,200 --> 00:44:33,980
<font color="#E5E5E5">you can then go off</font><font color="#CCCCCC"> and apply</font><font color="#E5E5E5"> to any</font>

1190
00:44:32,270 --> 00:44:39,130
script<font color="#E5E5E5"> and decide whether it's</font>

1191
00:44:33,980 --> 00:44:41,750
obfuscated or not so does<font color="#E5E5E5"> it work I</font>

1192
00:44:39,130 --> 00:44:46,430
<font color="#E5E5E5">think so take a look at this</font>

1193
00:44:41,750 --> 00:44:49,340
we got<font color="#E5E5E5"> 94% of obfuscated in the wild</font>

1194
00:44:46,430 --> 00:44:52,850
<font color="#CCCCCC">PowerShell scripts</font><font color="#E5E5E5"> with only</font><font color="#CCCCCC"> 1%</font><font color="#E5E5E5"> false</font>

1195
00:44:49,340 --> 00:44:56,170
positives that's something you want<font color="#CCCCCC"> on</font>

1196
00:44:52,850 --> 00:44:56,170
your<font color="#E5E5E5"> team absolutely</font>

1197
00:44:58,520 --> 00:45:04,730
so this thing became<font color="#CCCCCC"> ten times</font><font color="#E5E5E5"> better at</font>

1198
00:45:01,490 --> 00:45:07,339
<font color="#E5E5E5">finding the bad than character frequency</font>

1199
00:45:04,730 --> 00:45:13,880
analysis alone with half the false

1200
00:45:07,340 --> 00:45:15,560
positives but that was stuff<font color="#E5E5E5"> in the wild</font>

1201
00:45:13,880 --> 00:45:20,050
some people in the wild<font color="#CCCCCC"> are just like</font>

1202
00:45:15,560 --> 00:45:20,049
<font color="#CCCCCC">whoo Yolo just</font><font color="#E5E5E5"> dump everything at it</font>

1203
00:45:23,230 --> 00:45:28,220
<font color="#E5E5E5">what</font><font color="#CCCCCC"> about just sketchy stuff you're in</font>

1204
00:45:26,210 --> 00:45:29,300
the<font color="#E5E5E5"> midst of an incident response or</font>

1205
00:45:28,220 --> 00:45:31,580
you're<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to take</font><font color="#E5E5E5"> a look at</font>

1206
00:45:29,300 --> 00:45:34,310
something<font color="#E5E5E5"> and you want to cast a much</font>

1207
00:45:31,580 --> 00:45:36,560
wider net<font color="#E5E5E5"> you want to say let that one</font>

1208
00:45:34,310 --> 00:45:38,660
on the<font color="#CCCCCC"> left that's like to the wall off</font>

1209
00:45:36,560 --> 00:45:40,279
you skated<font color="#E5E5E5"> the one on the right like I</font>

1210
00:45:38,660 --> 00:45:42,319
don't know maybe<font color="#E5E5E5"> it's off you skated</font>

1211
00:45:40,280 --> 00:45:43,940
maybe it's<font color="#E5E5E5"> just sketchy like it doesn't</font>

1212
00:45:42,320 --> 00:45:46,400
<font color="#E5E5E5">look</font><font color="#CCCCCC"> like a regular powershell script</font>

1213
00:45:43,940 --> 00:45:48,740
maybe<font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> if I had the best</font>

1214
00:45:46,400 --> 00:45:49,820
intern ever them to say a<font color="#CCCCCC"> li like take a</font>

1215
00:45:48,740 --> 00:45:51,290
look at<font color="#E5E5E5"> this I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know what it</font><font color="#CCCCCC"> does</font>

1216
00:45:49,820 --> 00:45:55,250
but<font color="#CCCCCC"> I think you might want to take</font>

1217
00:45:51,290 --> 00:45:58,190
<font color="#E5E5E5">another look so what we did is we ran</font>

1218
00:45:55,250 --> 00:45:59,930
this again<font color="#E5E5E5"> with that as a bar of what's</font>

1219
00:45:58,190 --> 00:46:01,880
<font color="#E5E5E5">considered off you skated so really</font>

1220
00:45:59,930 --> 00:46:06,140
looking for a deep analysis of script

1221
00:46:01,880 --> 00:46:08,920
blocks still like really really<font color="#CCCCCC"> epic</font>

1222
00:46:06,140 --> 00:46:13,250
<font color="#E5E5E5">when you start</font><font color="#CCCCCC"> talking</font><font color="#E5E5E5"> about the deep</font>

1223
00:46:08,920 --> 00:46:16,430
analysis<font color="#E5E5E5"> you're still getting 88% recall</font>

1224
00:46:13,250 --> 00:46:18,290
so 88% of<font color="#E5E5E5"> all stuff that anybody might</font>

1225
00:46:16,430 --> 00:46:22,879
consider<font color="#E5E5E5"> kind of sketchy or noteworthy</font>

1226
00:46:18,290 --> 00:46:25,279
<font color="#E5E5E5">is coming up and</font><font color="#CCCCCC"> you still</font><font color="#E5E5E5"> only have 5%</font>

1227
00:46:22,880 --> 00:46:27,560
<font color="#E5E5E5">false positives you're</font><font color="#CCCCCC"> catching a wider</font>

1228
00:46:25,280 --> 00:46:30,830
net casting a wider net and the most

1229
00:46:27,560 --> 00:46:32,570
important<font color="#E5E5E5"> thing to hear is that when you</font>

1230
00:46:30,830 --> 00:46:35,420
start talking<font color="#E5E5E5"> about in the wild stuff</font>

1231
00:46:32,570 --> 00:46:37,609
what we had there of the<font color="#CCCCCC"> 94 percent</font><font color="#E5E5E5"> in</font>

1232
00:46:35,420 --> 00:46:39,730
the wild being caught when you're

1233
00:46:37,609 --> 00:46:43,220
casting<font color="#CCCCCC"> this wider net that now becomes</font>

1234
00:46:39,730 --> 00:46:45,109
<font color="#CCCCCC">97 percent of in the wild</font><font color="#E5E5E5"> PowerShell</font>

1235
00:46:43,220 --> 00:46:47,890
scripts being able to cut by<font color="#CCCCCC"> this</font>

1236
00:46:45,109 --> 00:46:47,890
algorithm

1237
00:46:48,109 --> 00:46:53,719
so you know logistic all that kind of

1238
00:46:51,559 --> 00:46:55,190
stuff logistic regression<font color="#E5E5E5"> or are there</font>

1239
00:46:53,719 --> 00:46:57,950
any<font color="#CCCCCC"> other ways to do</font><font color="#E5E5E5"> this and there are</font>

1240
00:46:55,190 --> 00:46:59,809
so what we did is as part<font color="#E5E5E5"> of this we</font>

1241
00:46:57,950 --> 00:47:02,058
generated a huge<font color="#E5E5E5"> CSV of all this stuff</font>

1242
00:46:59,809 --> 00:47:04,849
<font color="#E5E5E5">and you can dump this into</font><font color="#CCCCCC"> a place like</font>

1243
00:47:02,059 --> 00:47:06,799
<font color="#E5E5E5">Azure machine learning studio and see</font>

1244
00:47:04,849 --> 00:47:09,709
what it<font color="#E5E5E5"> looks like when you're doing the</font>

1245
00:47:06,799 --> 00:47:11,989
the logistic regression<font color="#E5E5E5"> there's other</font>

1246
00:47:09,709 --> 00:47:13,430
ones there's one support<font color="#E5E5E5"> vector machine</font>

1247
00:47:11,989 --> 00:47:15,319
and there's boosted decision trees

1248
00:47:13,430 --> 00:47:17,959
there's a bunch of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> ways that</font>

1249
00:47:15,319 --> 00:47:21,609
<font color="#CCCCCC">people are applying</font><font color="#E5E5E5"> statistics at scale</font>

1250
00:47:17,959 --> 00:47:24,529
<font color="#E5E5E5">to do basically categorization of data</font>

1251
00:47:21,609 --> 00:47:27,200
<font color="#E5E5E5">the closest one was the boosted decision</font>

1252
00:47:24,529 --> 00:47:29,930
tree we with this research we ended up

1253
00:47:27,200 --> 00:47:32,419
getting<font color="#CCCCCC"> about the same answer as the the</font>

1254
00:47:29,930 --> 00:47:34,669
logistic<font color="#CCCCCC"> progression and a kind of a</font>

1255
00:47:32,420 --> 00:47:35,989
professional machine<font color="#E5E5E5"> learning studio the</font>

1256
00:47:34,670 --> 00:47:37,759
<font color="#CCCCCC">boosted decision tree got us pretty</font>

1257
00:47:35,989 --> 00:47:39,799
close as well<font color="#E5E5E5"> it was a little bit worse</font>

1258
00:47:37,759 --> 00:47:44,380
<font color="#CCCCCC">and then the other two were much</font><font color="#E5E5E5"> worse</font>

1259
00:47:39,799 --> 00:47:50,900
so so this<font color="#E5E5E5"> is pretty awesome stuff</font>

1260
00:47:44,380 --> 00:47:52,789
<font color="#E5E5E5">anyone care to see it</font><font color="#CCCCCC"> alright so if</font>

1261
00:47:50,900 --> 00:47:55,039
anyone knows me I'm obsessed with the

1262
00:47:52,789 --> 00:47:58,039
right host command lit with colors<font color="#E5E5E5"> so I</font>

1263
00:47:55,039 --> 00:48:00,979
couldn't refrain I had to I had<font color="#CCCCCC"> to put</font>

1264
00:47:58,039 --> 00:48:03,469
some<font color="#CCCCCC"> ascii are out there so this is</font><font color="#E5E5E5"> this</font>

1265
00:48:00,979 --> 00:48:05,660
<font color="#E5E5E5">is what you get basically a script</font>

1266
00:48:03,469 --> 00:48:07,249
<font color="#CCCCCC">analyzing it piece by piece</font><font color="#E5E5E5"> throwing</font>

1267
00:48:05,660 --> 00:48:10,160
some<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> actual statistics that we</font>

1268
00:48:07,249 --> 00:48:12,499
get out of<font color="#CCCCCC"> it some number of</font><font color="#E5E5E5"> features</font>

1269
00:48:10,160 --> 00:48:14,149
the how fast it<font color="#CCCCCC"> takes on average</font><font color="#E5E5E5"> less</font>

1270
00:48:12,499 --> 00:48:17,839
<font color="#CCCCCC">than 300 milliseconds to analyze</font><font color="#E5E5E5"> any</font>

1271
00:48:14,150 --> 00:48:19,789
script<font color="#CCCCCC"> or command with this tool and to</font>

1272
00:48:17,839 --> 00:48:21,680
be honest<font color="#E5E5E5"> this entire</font><font color="#CCCCCC"> function actually</font>

1273
00:48:19,789 --> 00:48:23,329
<font color="#E5E5E5">serves no purpose and finding evil</font><font color="#CCCCCC"> it's</font>

1274
00:48:21,680 --> 00:48:25,549
simply for the<font color="#CCCCCC"> lulz and for the colors</font>

1275
00:48:23,329 --> 00:48:27,829
so if you don't like any<font color="#E5E5E5"> of that stuff</font>

1276
00:48:25,549 --> 00:48:28,940
<font color="#CCCCCC">just</font><font color="#E5E5E5"> don't run</font><font color="#CCCCCC"> rivo</font><font color="#E5E5E5"> coffee station and</font>

1277
00:48:27,829 --> 00:48:30,890
<font color="#E5E5E5">we'll show you the more important</font>

1278
00:48:28,940 --> 00:48:33,229
functions<font color="#E5E5E5"> later but if you do there's a</font>

1279
00:48:30,890 --> 00:48:35,239
tutorial<font color="#E5E5E5"> it's also known as</font><font color="#CCCCCC"> the readme</font>

1280
00:48:33,229 --> 00:48:37,910
<font color="#E5E5E5">but this one has colors</font><font color="#CCCCCC"> so you can look</font>

1281
00:48:35,239 --> 00:48:39,799
at<font color="#E5E5E5"> that fun facts</font><font color="#CCCCCC"> there's a lot</font><font color="#E5E5E5"> of</font>

1282
00:48:37,910 --> 00:48:41,989
interesting<font color="#E5E5E5"> statistics and fun things</font>

1283
00:48:39,799 --> 00:48:44,630
<font color="#E5E5E5">that we found in this research</font><font color="#CCCCCC"> some more</font>

1284
00:48:41,989 --> 00:48:46,130
<font color="#E5E5E5">goodies in the corpus so just run fun</font>

1285
00:48:44,630 --> 00:48:47,749
facts and see what comes<font color="#E5E5E5"> up there if</font>

1286
00:48:46,130 --> 00:48:50,269
you're feeling<font color="#E5E5E5"> feeling down on yourself</font>

1287
00:48:47,749 --> 00:48:52,218
that<font color="#E5E5E5"> day also</font><font color="#CCCCCC"> when you collect almost</font>

1288
00:48:50,269 --> 00:48:54,738
half a million<font color="#CCCCCC"> powershell scripts you're</font>

1289
00:48:52,219 --> 00:48:57,499
bound to<font color="#E5E5E5"> find other people who do some</font>

1290
00:48:54,739 --> 00:48:58,789
pretty interesting<font color="#E5E5E5"> ASCII art so you can</font>

1291
00:48:57,499 --> 00:49:00,589
check out<font color="#E5E5E5"> some random ASCII art there</font>

1292
00:48:58,789 --> 00:49:01,970
that we found in the corpus it's quite

1293
00:49:00,589 --> 00:49:03,140
nice and<font color="#E5E5E5"> they'll show you a</font><font color="#CCCCCC"> URL</font>

1294
00:49:01,970 --> 00:49:05,990
the project if you<font color="#E5E5E5"> want to check it out</font>

1295
00:49:03,140 --> 00:49:08,330
a set of fun quotes and then credits at

1296
00:49:05,990 --> 00:49:10,129
the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> again if you'd like to see maybe</font>

1297
00:49:08,330 --> 00:49:11,990
your name pop up<font color="#E5E5E5"> there then we have all</font>

1298
00:49:10,130 --> 00:49:13,520
the contributors<font color="#CCCCCC"> sitting in there so</font>

1299
00:49:11,990 --> 00:49:15,740
good times and<font color="#CCCCCC"> actually we had a nice</font>

1300
00:49:13,520 --> 00:49:17,630
little subsection of our favorites<font color="#CCCCCC"> that</font>

1301
00:49:15,740 --> 00:49:19,310
<font color="#E5E5E5">have some pretty fun names but if you're</font>

1302
00:49:17,630 --> 00:49:21,740
actually<font color="#E5E5E5"> looking to you know find evil</font>

1303
00:49:19,310 --> 00:49:23,480
<font color="#E5E5E5">and not just laugh</font><font color="#CCCCCC"> then there's</font><font color="#E5E5E5"> two</font>

1304
00:49:21,740 --> 00:49:25,759
things<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> know one is</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> our</font>

1305
00:49:23,480 --> 00:49:27,109
<font color="#E5E5E5">vo script</font><font color="#CCCCCC"> block</font><font color="#E5E5E5"> now what this</font><font color="#CCCCCC"> is doing</font>

1306
00:49:25,760 --> 00:49:28,490
is we tell people<font color="#CCCCCC"> okay upgrade to</font>

1307
00:49:27,109 --> 00:49:31,340
<font color="#CCCCCC">PowerShell five enable script block</font>

1308
00:49:28,490 --> 00:49:32,930
logging<font color="#CCCCCC"> that produces a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of data</font>

1309
00:49:31,340 --> 00:49:34,280
though<font color="#E5E5E5"> and a lot of times the entire</font>

1310
00:49:32,930 --> 00:49:35,899
script<font color="#E5E5E5"> will be cast over several</font>

1311
00:49:34,280 --> 00:49:37,250
<font color="#E5E5E5">different event logs</font><font color="#CCCCCC"> so what this</font><font color="#E5E5E5"> will</font>

1312
00:49:35,900 --> 00:49:40,520
do is<font color="#E5E5E5"> it'll go through and group and</font>

1313
00:49:37,250 --> 00:49:42,560
reassemble those into<font color="#E5E5E5"> PowerShell objects</font>

1314
00:49:40,520 --> 00:49:44,210
so if all you<font color="#E5E5E5"> have is a get win event</font>

1315
00:49:42,560 --> 00:49:46,369
across<font color="#E5E5E5"> a lot of systems or</font><font color="#CCCCCC"> if you just</font>

1316
00:49:44,210 --> 00:49:47,900
<font color="#CCCCCC">have the raw VTX</font><font color="#E5E5E5"> files</font><font color="#CCCCCC"> you can pipe it</font>

1317
00:49:46,369 --> 00:49:50,869
in to get<font color="#E5E5E5"> our via script</font><font color="#CCCCCC"> block and we'll</font>

1318
00:49:47,900 --> 00:49:52,400
reassemble those<font color="#E5E5E5"> scripts for you now</font>

1319
00:49:50,869 --> 00:49:54,109
once you have<font color="#E5E5E5"> either a directory of</font>

1320
00:49:52,400 --> 00:49:55,910
scripts<font color="#E5E5E5"> or you've reassemble them from</font>

1321
00:49:54,109 --> 00:49:58,880
script<font color="#CCCCCC"> block logs</font><font color="#E5E5E5"> how do you actually</font>

1322
00:49:55,910 --> 00:50:03,649
<font color="#E5E5E5">find evil it's simple all you do is pipe</font>

1323
00:49:58,880 --> 00:50:07,280
it<font color="#CCCCCC"> into</font><font color="#E5E5E5"> measure</font><font color="#CCCCCC"> RB o occupation and</font>

1324
00:50:03,650 --> 00:50:09,530
there we go<font color="#E5E5E5"> so now our vo is that is the</font>

1325
00:50:07,280 --> 00:50:11,900
<font color="#CCCCCC">short name</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> repo</font><font color="#E5E5E5"> coffee station but</font>

1326
00:50:09,530 --> 00:50:13,400
as you can<font color="#E5E5E5"> see here it's it's really</font>

1327
00:50:11,900 --> 00:50:15,109
colorful it's kind of like<font color="#CCCCCC"> Christmas red</font>

1328
00:50:13,400 --> 00:50:16,490
and green and<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the results you get</font>

1329
00:50:15,109 --> 00:50:19,220
back you<font color="#CCCCCC"> have the script content you</font>

1330
00:50:16,490 --> 00:50:20,750
<font color="#CCCCCC">have is obfuscated you have all the</font>

1331
00:50:19,220 --> 00:50:22,368
script features at the bottom there you

1332
00:50:20,750 --> 00:50:23,510
have the time it took to pull<font color="#E5E5E5"> those</font>

1333
00:50:22,369 --> 00:50:30,200
features the time it took to measure

1334
00:50:23,510 --> 00:50:32,900
<font color="#E5E5E5">those features everything and lastly our</font>

1335
00:50:30,200 --> 00:50:35,450
desire<font color="#E5E5E5"> was always for this to be usable</font>

1336
00:50:32,900 --> 00:50:37,099
by anybody<font color="#CCCCCC"> this isn't just some research</font>

1337
00:50:35,450 --> 00:50:39,290
<font color="#E5E5E5">tool</font><font color="#CCCCCC"> that researchers can</font><font color="#E5E5E5"> have fun with</font>

1338
00:50:37,099 --> 00:50:41,180
<font color="#E5E5E5">we want</font><font color="#CCCCCC"> this to be practical like</font><font color="#E5E5E5"> like</font>

1339
00:50:39,290 --> 00:50:43,730
today<font color="#E5E5E5"> as in like we just pushed it an</font>

1340
00:50:41,180 --> 00:50:44,779
hour ago<font color="#CCCCCC"> and it's live on github we want</font>

1341
00:50:43,730 --> 00:50:46,460
you to be able<font color="#E5E5E5"> to take</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> home and use it</font>

1342
00:50:44,780 --> 00:50:48,349
<font color="#CCCCCC">right out of the box</font><font color="#E5E5E5"> and so from an</font>

1343
00:50:46,460 --> 00:50:50,030
operational perspective<font color="#E5E5E5"> we really wanted</font>

1344
00:50:48,349 --> 00:50:51,380
<font color="#E5E5E5">to make it as easy as possible</font><font color="#CCCCCC"> to</font>

1345
00:50:50,030 --> 00:50:53,330
whitelist things that you've looked at

1346
00:50:51,380 --> 00:50:54,589
<font color="#E5E5E5">but this is said hey the</font><font color="#CCCCCC"> seems</font><font color="#E5E5E5"> off you</font>

1347
00:50:53,330 --> 00:50:56,420
skated and<font color="#E5E5E5"> you can say</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> let me</font>

1348
00:50:54,589 --> 00:50:58,160
<font color="#CCCCCC">check it out ok this</font><font color="#E5E5E5"> was fine this is</font>

1349
00:50:56,420 --> 00:50:59,750
not a<font color="#E5E5E5"> few scattered you can just drag</font>

1350
00:50:58,160 --> 00:51:01,640
<font color="#E5E5E5">that</font><font color="#CCCCCC"> into a whitelist directory and</font>

1351
00:50:59,750 --> 00:51:03,650
it'll hash it and basically<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whitelist</font>

1352
00:51:01,640 --> 00:51:05,900
at any time it sees<font color="#CCCCCC"> it again you can</font><font color="#E5E5E5"> use</font>

1353
00:51:03,650 --> 00:51:07,430
content or<font color="#E5E5E5"> regex and</font><font color="#CCCCCC"> again all this is</font>

1354
00:51:05,900 --> 00:51:09,200
in the<font color="#E5E5E5"> tutorial all of this is in the</font>

1355
00:51:07,430 --> 00:51:10,730
<font color="#E5E5E5">readme but again our hope was that we</font>

1356
00:51:09,200 --> 00:51:14,180
can<font color="#E5E5E5"> make it as easy and usable as</font>

1357
00:51:10,730 --> 00:51:15,010
possible<font color="#CCCCCC"> for</font><font color="#E5E5E5"> anyone in any organization</font>

1358
00:51:14,180 --> 00:51:17,080
<font color="#CCCCCC">remember</font>

1359
00:51:15,010 --> 00:51:20,650
I was<font color="#E5E5E5"> showing how easy it was to install</font>

1360
00:51:17,080 --> 00:51:23,259
the<font color="#CCCCCC"> ast module</font><font color="#E5E5E5"> just as easy</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> get home</font>

1361
00:51:20,650 --> 00:51:24,850
install a module revoke obfuscation this

1362
00:51:23,260 --> 00:51:27,280
is up on the<font color="#E5E5E5"> PowerShell gallery as</font><font color="#CCCCCC"> well</font>

1363
00:51:24,850 --> 00:51:29,069
you get<font color="#E5E5E5"> this on your system immediately</font>

1364
00:51:27,280 --> 00:51:33,060
you can start<font color="#E5E5E5"> detecting obfuscation</font><font color="#CCCCCC"> in</font>

1365
00:51:29,070 --> 00:51:37,420
<font color="#CCCCCC">PowerShell scripts</font><font color="#E5E5E5"> in like 30 seconds</font>

1366
00:51:33,060 --> 00:51:40,180
exactly so as we said this code is live

1367
00:51:37,420 --> 00:51:41,890
<font color="#CCCCCC">it is it hosted</font><font color="#E5E5E5"> on my github and also</font>

1368
00:51:40,180 --> 00:51:44,799
the<font color="#E5E5E5"> PowerShell gallery so again</font><font color="#CCCCCC"> just</font>

1369
00:51:41,890 --> 00:51:47,920
install - module revoke -<font color="#E5E5E5"> office casing</font>

1370
00:51:44,800 --> 00:51:50,500
and<font color="#E5E5E5"> you have it on your system to use in</font>

1371
00:51:47,920 --> 00:51:52,690
just a couple references<font color="#CCCCCC"> this initial</font>

1372
00:51:50,500 --> 00:51:54,760
blog post<font color="#E5E5E5"> from Lee homes last fall is</font>

1373
00:51:52,690 --> 00:51:57,490
kind of what started<font color="#E5E5E5"> my interest in this</font>

1374
00:51:54,760 --> 00:52:01,480
and kind of<font color="#CCCCCC"> formed this</font><font color="#E5E5E5"> this little team</font>

1375
00:51:57,490 --> 00:52:04,089
up<font color="#CCCCCC"> here looking</font><font color="#E5E5E5"> at this</font><font color="#CCCCCC"> in them he had a</font>

1376
00:52:01,480 --> 00:52:06,580
couple<font color="#E5E5E5"> blog</font><font color="#CCCCCC"> posts on that and then some</font>

1377
00:52:04,090 --> 00:52:07,870
<font color="#CCCCCC">is the n resources</font><font color="#E5E5E5"> and the last blog if</font>

1378
00:52:06,580 --> 00:52:09,850
you haven't read<font color="#E5E5E5"> PowerShell hearts the</font>

1379
00:52:07,870 --> 00:52:11,140
blue team it's a phenomenal blog and

1380
00:52:09,850 --> 00:52:12,190
white paper<font color="#E5E5E5"> about all the stuff the</font>

1381
00:52:11,140 --> 00:52:14,859
PowerShell team is built in the

1382
00:52:12,190 --> 00:52:16,540
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> for security people for</font>

1383
00:52:14,860 --> 00:52:19,870
security purposes and<font color="#E5E5E5"> it's really really</font>

1384
00:52:16,540 --> 00:52:23,520
great thank you<font color="#E5E5E5"> very</font><font color="#CCCCCC"> much that is the</font>

1385
00:52:19,870 --> 00:52:23,520
end of<font color="#E5E5E5"> our presentation</font><font color="#CCCCCC"> thank you</font>

1386
00:52:25,150 --> 00:52:28,219
[Applause]

1387
00:52:30,790 --> 00:52:35,630
do we have any brave souls for questions

1388
00:52:33,740 --> 00:52:37,819
<font color="#E5E5E5">if you have</font><font color="#CCCCCC"> a question if you wouldn't</font>

1389
00:52:35,630 --> 00:52:39,170
mind heading<font color="#E5E5E5"> up to the microphone</font><font color="#CCCCCC"> and</font>

1390
00:52:37,820 --> 00:52:40,340
<font color="#E5E5E5">we'll be around afterwards</font><font color="#CCCCCC"> also if you</font>

1391
00:52:39,170 --> 00:52:45,410
don't<font color="#CCCCCC"> want to speak into</font><font color="#E5E5E5"> the microphone</font>

1392
00:52:40,340 --> 00:52:46,970
and<font color="#CCCCCC"> be any questions I'll ask one so I</font>

1393
00:52:45,410 --> 00:52:48,670
was<font color="#E5E5E5"> looking at your character frequency</font>

1394
00:52:46,970 --> 00:52:51,350
analysis and it looks<font color="#CCCCCC"> like it conforms</font>

1395
00:52:48,670 --> 00:52:52,820
basically to zip<font color="#E5E5E5"> slaw</font><font color="#CCCCCC"> did you look at</font>

1396
00:52:51,350 --> 00:52:54,049
<font color="#E5E5E5">any of the power law stuff for</font>

1397
00:52:52,820 --> 00:52:57,170
distribution<font color="#E5E5E5"> of characters</font>

1398
00:52:54,050 --> 00:52:59,870
yeah the distribution of characters

1399
00:52:57,170 --> 00:53:02,060
there we<font color="#E5E5E5"> buy graph analysis is another</font>

1400
00:52:59,870 --> 00:53:04,940
<font color="#E5E5E5">common thing to</font><font color="#CCCCCC"> look for commonality of</font>

1401
00:53:02,060 --> 00:53:07,130
<font color="#E5E5E5">like one-two punches like a</font><font color="#CCCCCC"> ETI that</font>

1402
00:53:04,940 --> 00:53:09,950
kind of stuff you end<font color="#E5E5E5"> up running into</font>

1403
00:53:07,130 --> 00:53:12,350
some of the same<font color="#CCCCCC"> issues</font><font color="#E5E5E5"> at the first</font>

1404
00:53:09,950 --> 00:53:13,850
order<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Zips</font><font color="#E5E5E5"> law stuff ends up showing</font>

1405
00:53:12,350 --> 00:53:15,980
at the at the regular character

1406
00:53:13,850 --> 00:53:16,640
frequency as well<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> definitely</font>

1407
00:53:15,980 --> 00:53:18,890
interesting

1408
00:53:16,640 --> 00:53:22,759
we ended up packing<font color="#E5E5E5"> that intelligence</font>

1409
00:53:18,890 --> 00:53:24,589
into the into the entropy measurements

1410
00:53:22,760 --> 00:53:26,180
because<font color="#E5E5E5"> that also shows it as well</font><font color="#CCCCCC"> so</font>

1411
00:53:24,590 --> 00:53:28,460
we're doing<font color="#E5E5E5"> entropy on everything</font>

1412
00:53:26,180 --> 00:53:30,620
command command names variable names

1413
00:53:28,460 --> 00:53:35,780
<font color="#E5E5E5">function names method names everything</font>

1414
00:53:30,620 --> 00:53:37,400
<font color="#E5E5E5">but the question thanks thank you any</font>

1415
00:53:35,780 --> 00:53:39,590
others<font color="#CCCCCC"> I got a question</font>

1416
00:53:37,400 --> 00:53:41,300
yeah<font color="#E5E5E5"> have you found any legitimate uses</font>

1417
00:53:39,590 --> 00:53:43,280
<font color="#E5E5E5">of obfuscation in scripts that weren't</font>

1418
00:53:41,300 --> 00:53:47,660
malware<font color="#E5E5E5"> like what what how much of</font><font color="#CCCCCC"> that</font>

1419
00:53:43,280 --> 00:53:49,010
was<font color="#E5E5E5"> going on the primary kind we saw</font>

1420
00:53:47,660 --> 00:53:51,770
where people trying to<font color="#E5E5E5"> use it for IP</font>

1421
00:53:49,010 --> 00:53:54,800
<font color="#E5E5E5">prevention one of the tools that we used</font>

1422
00:53:51,770 --> 00:53:56,530
was one from<font color="#E5E5E5"> ISC steroids where you</font>

1423
00:53:54,800 --> 00:53:58,910
didn't write it<font color="#CCCCCC"> as a malware vehicle</font>

1424
00:53:56,530 --> 00:54:00,770
even though malware has<font color="#E5E5E5"> used it he wrote</font>

1425
00:53:58,910 --> 00:54:03,500
it as somebody<font color="#E5E5E5"> wants to protect their</font>

1426
00:54:00,770 --> 00:54:04,840
intellectual<font color="#CCCCCC"> property</font><font color="#E5E5E5"> or view skate it</font>

1427
00:54:03,500 --> 00:54:07,370
so that it<font color="#E5E5E5"> becomes a little</font><font color="#CCCCCC"> bit harder</font>

1428
00:54:04,840 --> 00:54:09,920
that's really the primary<font color="#CCCCCC"> place</font><font color="#E5E5E5"> you've</font>

1429
00:54:07,370 --> 00:54:14,299
seen it elsewhere<font color="#E5E5E5"> Thanks</font>

1430
00:54:09,920 --> 00:54:15,740
thank you all<font color="#E5E5E5"> right thank you</font>

1431
00:54:14,300 --> 00:54:19,010
<font color="#CCCCCC">thanks</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> staying</font><font color="#E5E5E5"> so late oh one more</font>

1432
00:54:15,740 --> 00:54:21,560
so if I understand<font color="#E5E5E5"> correctly it's</font>

1433
00:54:19,010 --> 00:54:25,130
actually first time run the code and

1434
00:54:21,560 --> 00:54:32,180
<font color="#E5E5E5">it's</font><font color="#CCCCCC"> checks in the evaluated code</font><font color="#E5E5E5"> so for</font>

1435
00:54:25,130 --> 00:54:34,640
<font color="#E5E5E5">instance if I would add a large large a</font>

1436
00:54:32,180 --> 00:54:37,879
lot of codes<font color="#E5E5E5"> to my office</font><font color="#CCCCCC"> scalar script</font>

1437
00:54:34,640 --> 00:54:39,920
<font color="#E5E5E5">and if I would for instance</font><font color="#CCCCCC"> place it in</font>

1438
00:54:37,880 --> 00:54:41,670
an epilogue<font color="#CCCCCC"> that would never</font><font color="#E5E5E5"> become true</font>

1439
00:54:39,920 --> 00:54:44,400
<font color="#E5E5E5">with that throw off your</font>

1440
00:54:41,670 --> 00:54:46,349
system so for<font color="#E5E5E5"> instance I have</font><font color="#CCCCCC"> like 10</font>

1441
00:54:44,400 --> 00:54:49,319
lines of obfuscated code and then I take

1442
00:54:46,349 --> 00:54:51,150
a thousand lines<font color="#E5E5E5"> of legitimate code but</font>

1443
00:54:49,319 --> 00:54:54,480
I placed in an F block that never

1444
00:54:51,150 --> 00:54:55,859
evaluates<font color="#E5E5E5"> true with that then with your</font>

1445
00:54:54,480 --> 00:55:00,839
system then<font color="#CCCCCC"> see</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> as a legitimate</font>

1446
00:54:55,859 --> 00:55:05,279
<font color="#E5E5E5">script it might</font><font color="#CCCCCC"> as that's one of the big</font>

1447
00:55:00,839 --> 00:55:08,130
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> when we did the analysis of</font>

1448
00:55:05,280 --> 00:55:09,480
the<font color="#CCCCCC"> 7000 scripts we did for sure</font><font color="#E5E5E5"> there's</font>

1449
00:55:08,130 --> 00:55:12,599
a lot of things<font color="#E5E5E5"> that are like line by</font>

1450
00:55:09,480 --> 00:55:14,309
line<font color="#E5E5E5"> as opposed</font><font color="#CCCCCC"> to the entire</font><font color="#E5E5E5"> script</font>

1451
00:55:12,599 --> 00:55:16,410
<font color="#E5E5E5">itself so we did do a lot of</font>

1452
00:55:14,309 --> 00:55:18,180
<font color="#E5E5E5">investigation of like hey this one</font>

1453
00:55:16,410 --> 00:55:20,700
little<font color="#E5E5E5"> chunk is like a huge confusing</font>

1454
00:55:18,180 --> 00:55:22,770
thing we're gonna call this obfuscated

1455
00:55:20,700 --> 00:55:24,779
<font color="#E5E5E5">and the kind of a funny thing</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

1456
00:55:22,770 --> 00:55:26,579
gradient<font color="#CCCCCC"> descent and</font><font color="#E5E5E5"> all that is we</font>

1457
00:55:24,780 --> 00:55:28,680
<font color="#E5E5E5">don't actually know it exactly</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> it</font>

1458
00:55:26,579 --> 00:55:30,450
calls as the important stuff but the

1459
00:55:28,680 --> 00:55:32,098
really<font color="#CCCCCC"> critical part is if that actually</font>

1460
00:55:30,450 --> 00:55:33,720
<font color="#E5E5E5">starts becoming a thing that</font><font color="#CCCCCC"> people do</font>

1461
00:55:32,099 --> 00:55:35,700
well then you<font color="#CCCCCC"> just start</font><font color="#E5E5E5"> feeding that</font>

1462
00:55:33,720 --> 00:55:37,799
back into<font color="#E5E5E5"> the corpus labeling it</font>

1463
00:55:35,700 --> 00:55:40,259
correctly and<font color="#CCCCCC"> rerunning</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> your</font>

1464
00:55:37,799 --> 00:55:48,470
learning on it and then you can<font color="#E5E5E5"> start to</font>

1465
00:55:40,260 --> 00:55:48,470
pick<font color="#E5E5E5"> up those</font><font color="#CCCCCC"> things Thanks yes</font>

1466
00:56:00,170 --> 00:56:04,010
so the question is I was a developer<font color="#CCCCCC"> on</font>

1467
00:56:02,180 --> 00:56:05,779
PowerShell<font color="#E5E5E5"> why the hell did we put all</font>

1468
00:56:04,010 --> 00:56:10,850
this back<font color="#CCCCCC"> ticks and escapes and</font><font color="#E5E5E5"> all that</font>

1469
00:56:05,780 --> 00:56:13,700
is that<font color="#CCCCCC"> the question</font><font color="#E5E5E5"> because they are</font>

1470
00:56:10,850 --> 00:56:15,980
used very very very frequently<font color="#E5E5E5"> for non</font>

1471
00:56:13,700 --> 00:56:18,049
crazy things<font color="#E5E5E5"> the truth is when</font><font color="#CCCCCC"> you have</font>

1472
00:56:15,980 --> 00:56:20,090
any sort of engine<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> do</font>

1473
00:56:18,050 --> 00:56:21,950
computation<font color="#E5E5E5"> you can do ridiculous stuff</font>

1474
00:56:20,090 --> 00:56:24,230
with it<font color="#E5E5E5"> if you've ever seen</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the</font>

1475
00:56:21,950 --> 00:56:26,419
brain<font color="#CCCCCC"> f star star star</font><font color="#E5E5E5"> competitions</font>

1476
00:56:24,230 --> 00:56:28,510
<font color="#E5E5E5">there's like literally four characters</font>

1477
00:56:26,420 --> 00:56:30,530
you can use and<font color="#E5E5E5"> it</font><font color="#CCCCCC"> some is too messed</font><font color="#E5E5E5"> up</font>

1478
00:56:28,510 --> 00:56:32,930
so you know you're<font color="#E5E5E5"> never gonna get a</font>

1479
00:56:30,530 --> 00:56:35,060
language that cannot<font color="#E5E5E5"> be</font><font color="#CCCCCC"> used in this</font>

1480
00:56:32,930 --> 00:56:38,060
manner<font color="#CCCCCC"> what we have done in</font><font color="#E5E5E5"> PowerShell</font>

1481
00:56:35,060 --> 00:56:40,279
is go like<font color="#E5E5E5"> crazy on making it</font>

1482
00:56:38,060 --> 00:56:41,720
transparent when this happens so when

1483
00:56:40,280 --> 00:56:44,300
you enable script lock logging

1484
00:56:41,720 --> 00:56:46,160
PowerShell logs<font color="#CCCCCC"> all this stuff to the</font>

1485
00:56:44,300 --> 00:56:48,650
event log all that stuff you saw with

1486
00:56:46,160 --> 00:56:50,660
the<font color="#E5E5E5"> shield gets unraveled automatically</font>

1487
00:56:48,650 --> 00:56:52,670
when<font color="#E5E5E5"> it gets to the event log we've also</font>

1488
00:56:50,660 --> 00:56:55,819
done things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> anytime one of</font><font color="#E5E5E5"> these</font>

1489
00:56:52,670 --> 00:56:58,850
<font color="#E5E5E5">things is interpreted by PowerShell</font><font color="#CCCCCC"> it</font>

1490
00:56:55,820 --> 00:57:00,830
can also ask antivirus<font color="#E5E5E5"> in line whether</font>

1491
00:56:58,850 --> 00:57:03,049
this is<font color="#CCCCCC"> okay to run</font><font color="#E5E5E5"> so not</font><font color="#CCCCCC"> just stuff</font>

1492
00:57:00,830 --> 00:57:05,450
off the disk<font color="#E5E5E5"> but you go</font><font color="#CCCCCC"> through three</font>

1493
00:57:03,050 --> 00:57:07,580
layers<font color="#CCCCCC"> of eval all</font><font color="#E5E5E5"> those things are</font>

1494
00:57:05,450 --> 00:57:10,640
<font color="#E5E5E5">being sent into your event logs and the</font>

1495
00:57:07,580 --> 00:57:12,319
<font color="#E5E5E5">anti-malware so with great power becomes</font>

1496
00:57:10,640 --> 00:57:15,710
<font color="#E5E5E5">comes great responsibility and it can be</font>

1497
00:57:12,320 --> 00:57:17,030
done in<font color="#E5E5E5"> both ways</font><font color="#CCCCCC"> Thanks cool thank you</font>

1498
00:57:15,710 --> 00:57:18,830
<font color="#CCCCCC">very much I</font><font color="#E5E5E5"> know our</font><font color="#CCCCCC"> times</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> we'll</font>

1499
00:57:17,030 --> 00:57:20,270
be just outside in the in the room would

1500
00:57:18,830 --> 00:57:23,049
<font color="#E5E5E5">love to chat and hear a</font><font color="#CCCCCC"> question so</font>

1501
00:57:20,270 --> 00:57:23,050
thank you again<font color="#E5E5E5"> very much</font>

