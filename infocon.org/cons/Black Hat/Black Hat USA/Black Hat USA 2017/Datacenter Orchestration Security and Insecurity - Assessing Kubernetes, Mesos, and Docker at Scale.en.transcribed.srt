1
00:00:00,089 --> 00:00:05,700
so my name<font color="#CCCCCC"> is Dino desi</font><font color="#E5E5E5"> I'm the CTO and</font>

2
00:00:02,550 --> 00:00:07,410
co-founder at<font color="#CCCCCC"> capsule 8 wanted to make</font>

3
00:00:05,700 --> 00:00:11,370
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> to start off</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> saying that this</font><font color="#CCCCCC"> is</font>

4
00:00:07,410 --> 00:00:13,110
a this<font color="#CCCCCC"> is a group</font><font color="#E5E5E5"> effort led by</font><font color="#CCCCCC"> cap</font>

5
00:00:11,370 --> 00:00:15,178
Brandon Edwards the lead of<font color="#E5E5E5"> our research</font>

6
00:00:13,110 --> 00:00:17,130
team including great work by Russia<font color="#E5E5E5"> cats</font>

7
00:00:15,179 --> 00:00:19,230
called<font color="#CCCCCC"> Bergy and Kent mAh</font>

8
00:00:17,130 --> 00:00:21,750
so this is a team effort<font color="#CCCCCC"> even though I'm</font>

9
00:00:19,230 --> 00:00:23,010
<font color="#E5E5E5">the only one up on stage I wanted to</font>

10
00:00:21,750 --> 00:00:25,430
kind of<font color="#E5E5E5"> tell you you know a little bit</font>

11
00:00:23,010 --> 00:00:28,109
<font color="#CCCCCC">about Who I am and how I approach this</font>

12
00:00:25,430 --> 00:00:30,750
<font color="#CCCCCC">my background is in security assessment</font>

13
00:00:28,109 --> 00:00:32,840
<font color="#E5E5E5">and I've over my</font><font color="#CCCCCC"> career I focused</font><font color="#E5E5E5"> on</font>

14
00:00:30,750 --> 00:00:35,100
different<font color="#E5E5E5"> things I started focusing on</font>

15
00:00:32,840 --> 00:00:37,530
<font color="#CCCCCC">client-side exploitation kind of in the</font>

16
00:00:35,100 --> 00:00:39,239
early 2000s<font color="#E5E5E5"> a little early</font><font color="#CCCCCC"> went</font><font color="#E5E5E5"> spend a</font>

17
00:00:37,530 --> 00:00:42,750
lot of time on Apple technologies

18
00:00:39,239 --> 00:00:45,209
including OS X and iOS<font color="#E5E5E5"> and over the last</font>

19
00:00:42,750 --> 00:00:48,750
year<font color="#E5E5E5"> and</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> you're in some change</font><font color="#CCCCCC"> I</font>

20
00:00:45,210 --> 00:00:49,710
<font color="#CCCCCC">returned to</font><font color="#E5E5E5"> my roots</font><font color="#CCCCCC"> in Linux</font><font color="#E5E5E5"> and they</font>

21
00:00:48,750 --> 00:00:50,910
can<font color="#E5E5E5"> look at all the cool</font><font color="#CCCCCC"> stuff that's</font>

22
00:00:49,710 --> 00:00:53,730
<font color="#E5E5E5">going on</font><font color="#CCCCCC"> with containers and</font>

23
00:00:50,910 --> 00:00:56,339
orchestrated environments and spent a

24
00:00:53,730 --> 00:00:57,569
lot<font color="#CCCCCC"> of the last several months looking</font>

25
00:00:56,340 --> 00:00:58,710
at the security<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> environments</font>

26
00:00:57,570 --> 00:01:00,750
where they are today<font color="#CCCCCC"> because</font><font color="#E5E5E5"> we've</font>

27
00:00:58,710 --> 00:01:03,030
talked to a lot<font color="#CCCCCC"> of people and they are</font>

28
00:01:00,750 --> 00:01:07,170
<font color="#E5E5E5">the adoption of these platforms</font><font color="#CCCCCC"> is</font>

29
00:01:03,030 --> 00:01:08,340
growing very very rapidly<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we've a</font>

30
00:01:07,170 --> 00:01:10,020
<font color="#E5E5E5">lot of us have been in security long</font>

31
00:01:08,340 --> 00:01:11,729
enough to kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> know what happens when</font>

32
00:01:10,020 --> 00:01:13,380
there is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> sort of explosive growth</font>

33
00:01:11,729 --> 00:01:16,830
<font color="#E5E5E5">so let's talk</font><font color="#CCCCCC"> about a little</font><font color="#E5E5E5"> bit about</font>

34
00:01:13,380 --> 00:01:18,929
<font color="#E5E5E5">what this is so common misconception I</font>

35
00:01:16,830 --> 00:01:20,399
hear from<font color="#E5E5E5"> some people</font><font color="#CCCCCC"> is well all this</font>

36
00:01:18,930 --> 00:01:22,590
stuff is<font color="#CCCCCC"> just about docker containers</font>

37
00:01:20,400 --> 00:01:25,500
right it's like just that's all it<font color="#E5E5E5"> is I</font>

38
00:01:22,590 --> 00:01:27,390
don't<font color="#E5E5E5"> see what the</font><font color="#CCCCCC"> big deal is well not</font>

39
00:01:25,500 --> 00:01:29,670
<font color="#E5E5E5">quite there's a there's a lot more to</font>

40
00:01:27,390 --> 00:01:32,759
the story<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> metaphor</font><font color="#CCCCCC"> that I</font>

41
00:01:29,670 --> 00:01:34,860
normally<font color="#CCCCCC"> use is of the the modern</font>

42
00:01:32,759 --> 00:01:37,470
<font color="#E5E5E5">assembly line and the era of mass</font>

43
00:01:34,860 --> 00:01:39,210
production<font color="#CCCCCC"> so when</font><font color="#E5E5E5"> people focus</font><font color="#CCCCCC"> overly</font>

44
00:01:37,470 --> 00:01:41,060
on like<font color="#CCCCCC"> just the container</font><font color="#E5E5E5"> which is just</font>

45
00:01:39,210 --> 00:01:43,500
the artifact that<font color="#E5E5E5"> you send</font><font color="#CCCCCC"> to production</font>

46
00:01:41,060 --> 00:01:46,860
<font color="#CCCCCC">it's sort of</font><font color="#E5E5E5"> like trying to understand</font>

47
00:01:43,500 --> 00:01:49,439
the<font color="#E5E5E5"> the moving assembly line by the like</font>

48
00:01:46,860 --> 00:01:51,390
the<font color="#CCCCCC"> conveyor</font><font color="#E5E5E5"> system yes it's one it's an</font>

49
00:01:49,439 --> 00:01:52,798
important part<font color="#E5E5E5"> it's necessary but it's</font>

50
00:01:51,390 --> 00:01:55,799
not sufficient to<font color="#E5E5E5"> get all the benefits</font>

51
00:01:52,799 --> 00:01:57,570
<font color="#CCCCCC">of that</font><font color="#E5E5E5"> efficiency you need fixed</font>

52
00:01:55,799 --> 00:01:59,009
<font color="#CCCCCC">stations you need repeatable operations</font>

53
00:01:57,570 --> 00:02:01,258
you need the<font color="#E5E5E5"> workload to</font><font color="#CCCCCC"> move to the</font>

54
00:01:59,009 --> 00:02:04,170
worker<font color="#E5E5E5"> and so on and so when you're</font>

55
00:02:01,259 --> 00:02:06,390
<font color="#CCCCCC">thinking about what</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> security of</font>

56
00:02:04,170 --> 00:02:10,020
<font color="#E5E5E5">these modern environments need to look</font>

57
00:02:06,390 --> 00:02:11,670
broader than just<font color="#CCCCCC"> the container and kind</font>

58
00:02:10,020 --> 00:02:13,150
<font color="#E5E5E5">of explain a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more about what</font>

59
00:02:11,670 --> 00:02:15,280
that<font color="#E5E5E5"> means</font>

60
00:02:13,150 --> 00:02:18,250
first way to understand this is<font color="#CCCCCC"> to</font>

61
00:02:15,280 --> 00:02:19,900
understand what people<font color="#CCCCCC"> are trying to</font>

62
00:02:18,250 --> 00:02:23,170
achieve<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and what they're</font>

63
00:02:19,900 --> 00:02:26,379
trying<font color="#CCCCCC"> to achieve is a element of scale</font>

64
00:02:23,170 --> 00:02:28,659
and agility<font color="#E5E5E5"> and velocity and way to</font>

65
00:02:26,379 --> 00:02:31,138
measure that velocity<font color="#E5E5E5"> is by the number</font>

66
00:02:28,659 --> 00:02:32,980
of deploys to<font color="#CCCCCC"> production as a single</font>

67
00:02:31,139 --> 00:02:34,930
variable<font color="#CCCCCC"> that you can use to</font><font color="#E5E5E5"> measure</font>

68
00:02:32,980 --> 00:02:36,849
your efficiency<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's like a call</font>

69
00:02:34,930 --> 00:02:39,250
to<font color="#CCCCCC"> fitness function and good</font><font color="#E5E5E5"> anecdote</font>

70
00:02:36,849 --> 00:02:42,369
about<font color="#E5E5E5"> this I found on a medium post was</font>

71
00:02:39,250 --> 00:02:44,709
a<font color="#E5E5E5"> CTR a CEO</font><font color="#CCCCCC"> of a well-known tech company</font>

72
00:02:42,370 --> 00:02:46,780
asked the CTO<font color="#E5E5E5"> I've been asked to spend</font>

73
00:02:44,709 --> 00:02:48,280
<font color="#E5E5E5">15</font><font color="#CCCCCC"> minutes in President Obama</font><font color="#E5E5E5"> to provide</font>

74
00:02:46,780 --> 00:02:49,269
recommendations<font color="#E5E5E5"> on</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> he should fix</font>

75
00:02:48,280 --> 00:02:51,069
healthcare.gov

76
00:02:49,269 --> 00:02:53,500
what would you say<font color="#E5E5E5"> so how do you drill</font>

77
00:02:51,069 --> 00:02:55,418
that<font color="#E5E5E5"> down</font><font color="#CCCCCC"> into one quick thing and the</font>

78
00:02:53,500 --> 00:02:56,950
CTO told them<font color="#E5E5E5"> suggest the President</font>

79
00:02:55,419 --> 00:03:00,040
<font color="#E5E5E5">Obama</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the team should</font><font color="#CCCCCC"> deploy to</font>

80
00:02:56,950 --> 00:03:03,099
production<font color="#CCCCCC"> every day</font><font color="#E5E5E5"> and kind of the</font>

81
00:03:00,040 --> 00:03:04,959
<font color="#E5E5E5">genius of this statement is that it's a</font>

82
00:03:03,099 --> 00:03:06,668
forcing function<font color="#CCCCCC"> to do everything else</font>

83
00:03:04,959 --> 00:03:09,790
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to do for high quality</font>

84
00:03:06,669 --> 00:03:12,340
engineering<font color="#E5E5E5"> at high velocity you cannot</font>

85
00:03:09,790 --> 00:03:14,950
sustainably<font color="#E5E5E5"> deploy a production every</font>

86
00:03:12,340 --> 00:03:16,389
day<font color="#E5E5E5"> without everything exploding unless</font>

87
00:03:14,950 --> 00:03:18,190
you have all these<font color="#CCCCCC"> other moving pieces</font>

88
00:03:16,389 --> 00:03:20,650
and<font color="#E5E5E5"> practices and those kind</font><font color="#CCCCCC"> of force</font>

89
00:03:18,190 --> 00:03:23,549
you<font color="#CCCCCC"> to do things like</font><font color="#E5E5E5"> have small agile</font>

90
00:03:20,650 --> 00:03:26,079
teams<font color="#E5E5E5"> independent containers you know</font>

91
00:03:23,549 --> 00:03:27,609
various patterns<font color="#E5E5E5"> of composition</font><font color="#CCCCCC"> in order</font>

92
00:03:26,079 --> 00:03:30,790
<font color="#CCCCCC">to get that continuous delivery of</font>

93
00:03:27,609 --> 00:03:32,470
software<font color="#CCCCCC"> and my thesis</font><font color="#E5E5E5"> of what when</font>

94
00:03:30,790 --> 00:03:34,030
<font color="#CCCCCC">people are talking about DevOps they're</font>

95
00:03:32,470 --> 00:03:37,090
talking about containers they're talking

96
00:03:34,030 --> 00:03:38,229
about<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of the some of</font><font color="#E5E5E5"> the tools or</font>

97
00:03:37,090 --> 00:03:39,729
techniques that are<font color="#E5E5E5"> pieces</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

98
00:03:38,229 --> 00:03:42,189
<font color="#E5E5E5">picture what they really want is</font>

99
00:03:39,729 --> 00:03:43,750
continuous delivery<font color="#E5E5E5"> like that is the</font>

100
00:03:42,189 --> 00:03:45,759
real technology<font color="#E5E5E5"> that is the real enabler</font>

101
00:03:43,750 --> 00:03:48,430
<font color="#CCCCCC">that any company adopting any of these</font>

102
00:03:45,759 --> 00:03:50,500
technologies really wants and everything

103
00:03:48,430 --> 00:03:51,909
else<font color="#E5E5E5"> should be in support</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> and so</font>

104
00:03:50,500 --> 00:03:55,180
what<font color="#E5E5E5"> does it mean to have</font><font color="#CCCCCC"> this</font>

105
00:03:51,909 --> 00:03:58,108
continuous software delivery process<font color="#E5E5E5"> you</font>

106
00:03:55,180 --> 00:04:00,939
need<font color="#CCCCCC"> to adopt</font><font color="#E5E5E5"> several key practices</font>

107
00:03:58,109 --> 00:04:02,799
building a repeatable<font color="#E5E5E5"> automated reliable</font>

108
00:04:00,939 --> 00:04:04,599
software<font color="#E5E5E5"> for releasing or releasing</font>

109
00:04:02,799 --> 00:04:06,489
software<font color="#E5E5E5"> automate absolutely everything</font>

110
00:04:04,599 --> 00:04:09,310
everything must be version controlled

111
00:04:06,489 --> 00:04:11,319
<font color="#E5E5E5">and you should adopt practices where if</font>

112
00:04:09,310 --> 00:04:13,030
something<font color="#E5E5E5"> is painful like previously</font>

113
00:04:11,319 --> 00:04:15,280
deploying to production was a painful

114
00:04:13,030 --> 00:04:17,289
painstaking operation so what you do is

115
00:04:15,280 --> 00:04:19,149
you move it forward<font color="#CCCCCC"> bring the pain</font>

116
00:04:17,289 --> 00:04:20,259
forward to make it more efficient<font color="#CCCCCC"> and so</font>

117
00:04:19,149 --> 00:04:22,690
by deploying<font color="#E5E5E5"> production every day you</font>

118
00:04:20,259 --> 00:04:25,120
make it more seamless<font color="#E5E5E5"> and build quality</font>

119
00:04:22,690 --> 00:04:25,520
<font color="#E5E5E5">throughout the process and the only time</font>

120
00:04:25,120 --> 00:04:27,319
<font color="#E5E5E5">you mean</font>

121
00:04:25,520 --> 00:04:28,818
<font color="#E5E5E5">done is when it's actually released to a</font>

122
00:04:27,319 --> 00:04:32,900
hundred percent<font color="#E5E5E5"> of</font><font color="#CCCCCC"> your users its rolled</font>

123
00:04:28,819 --> 00:04:36,560
out<font color="#E5E5E5"> and make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> having</font>

124
00:04:32,900 --> 00:04:38,719
<font color="#E5E5E5">the silos</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> developments operations and</font>

125
00:04:36,560 --> 00:04:41,810
security<font color="#CCCCCC"> everyone is involved</font><font color="#E5E5E5"> in a</font>

126
00:04:38,720 --> 00:04:43,129
<font color="#E5E5E5">delivery process and I think</font><font color="#CCCCCC"> as an</font>

127
00:04:41,810 --> 00:04:44,690
industry<font color="#E5E5E5"> we're trying to figure</font><font color="#CCCCCC"> out what</font>

128
00:04:43,129 --> 00:04:46,849
it means<font color="#CCCCCC"> for security to fit into this</font>

129
00:04:44,690 --> 00:04:48,349
new way of doing<font color="#CCCCCC"> engineering</font><font color="#E5E5E5"> so there's</font>

130
00:04:46,849 --> 00:04:49,960
words<font color="#E5E5E5"> we haven't decided whether it's</font>

131
00:04:48,349 --> 00:04:54,560
called<font color="#E5E5E5"> SEC ops dev</font><font color="#CCCCCC"> SEC ops</font>

132
00:04:49,960 --> 00:04:55,370
<font color="#CCCCCC">SEC def</font><font color="#E5E5E5"> SEC OPSEC DevOps</font><font color="#CCCCCC"> op SEC dev you</font>

133
00:04:54,560 --> 00:04:57,889
know we're<font color="#E5E5E5"> kind of trying every</font>

134
00:04:55,370 --> 00:04:59,270
permutation to explain what it means<font color="#E5E5E5"> for</font>

135
00:04:57,889 --> 00:05:01,580
security to not be an independent

136
00:04:59,270 --> 00:05:03,710
function<font color="#E5E5E5"> that is a</font><font color="#CCCCCC"> gate keeper</font><font color="#E5E5E5"> rather a</font>

137
00:05:01,580 --> 00:05:06,229
piece of the<font color="#E5E5E5"> process of a continuous</font>

138
00:05:03,710 --> 00:05:07,849
delivery pipeline<font color="#E5E5E5"> and focus on this</font>

139
00:05:06,229 --> 00:05:08,840
continuous improvement<font color="#E5E5E5"> these are the</font>

140
00:05:07,849 --> 00:05:10,599
things that<font color="#E5E5E5"> when you adopt these</font>

141
00:05:08,840 --> 00:05:12,830
practices you can<font color="#E5E5E5"> actually have</font>

142
00:05:10,599 --> 00:05:14,599
continuous delivery<font color="#E5E5E5"> and orchestration</font>

143
00:05:12,830 --> 00:05:17,150
and containers are very key components

144
00:05:14,599 --> 00:05:18,500
of<font color="#E5E5E5"> this so the container is just the</font>

145
00:05:17,150 --> 00:05:22,280
<font color="#E5E5E5">software artifacts sent to production</font>

146
00:05:18,500 --> 00:05:24,050
<font color="#CCCCCC">it's focusing too much on it</font><font color="#E5E5E5"> is like you</font>

147
00:05:22,280 --> 00:05:26,119
<font color="#E5E5E5">know looking at the desktop the PC</font>

148
00:05:24,050 --> 00:05:28,009
revolution<font color="#CCCCCC"> and personal computing</font><font color="#E5E5E5"> and</font>

149
00:05:26,120 --> 00:05:30,740
thinking it's all about like<font color="#CCCCCC"> the</font><font color="#E5E5E5"> comm</font>

150
00:05:28,009 --> 00:05:32,120
file<font color="#CCCCCC"> it's like yeah the basic</font><font color="#E5E5E5"> executable</font>

151
00:05:30,740 --> 00:05:35,360
is a piece of<font color="#CCCCCC"> the puzzle but it's</font><font color="#E5E5E5"> really</font>

152
00:05:32,120 --> 00:05:38,360
<font color="#E5E5E5">a whole bunch of other things</font><font color="#CCCCCC"> but you</font>

153
00:05:35,360 --> 00:05:40,580
know all a container really<font color="#E5E5E5"> is is it's a</font>

154
00:05:38,360 --> 00:05:42,409
reusable composable<font color="#E5E5E5"> and suitably</font>

155
00:05:40,580 --> 00:05:45,289
abstracted from<font color="#E5E5E5"> the environment piece of</font>

156
00:05:42,409 --> 00:05:46,909
software<font color="#E5E5E5"> and it allows you to</font><font color="#CCCCCC"> just have</font>

157
00:05:45,289 --> 00:05:49,509
a reproducible<font color="#E5E5E5"> artifact that you can</font>

158
00:05:46,909 --> 00:05:52,190
develop<font color="#E5E5E5"> test and ship to production and</font>

159
00:05:49,509 --> 00:05:54,110
keep it all in version control<font color="#E5E5E5"> when</font>

160
00:05:52,190 --> 00:05:56,060
<font color="#E5E5E5">you're using these at scale you need an</font>

161
00:05:54,110 --> 00:06:00,020
orchestration<font color="#E5E5E5"> it's just system to</font>

162
00:05:56,060 --> 00:06:02,180
schedule their operation<font color="#E5E5E5"> and schedule</font>

163
00:06:00,020 --> 00:06:06,560
the dynamically<font color="#E5E5E5"> scheduled</font><font color="#CCCCCC"> into nodes and</font>

164
00:06:02,180 --> 00:06:10,000
also<font color="#CCCCCC"> automatically handle rollover</font>

165
00:06:06,560 --> 00:06:12,500
you know rollouts failover scaling and

166
00:06:10,000 --> 00:06:14,029
this is actually one of the the<font color="#CCCCCC"> key</font>

167
00:06:12,500 --> 00:06:17,509
points about orchestration systems is

168
00:06:14,029 --> 00:06:19,190
<font color="#CCCCCC">that they are a ideal place to</font><font color="#E5E5E5"> implement</font>

169
00:06:17,509 --> 00:06:20,180
<font color="#E5E5E5">a lot of</font><font color="#CCCCCC"> the security functionality that</font>

170
00:06:19,190 --> 00:06:23,330
you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> in your production</font><font color="#E5E5E5"> environment</font>

171
00:06:20,180 --> 00:06:25,279
because they are<font color="#CCCCCC"> the software fabric</font>

172
00:06:23,330 --> 00:06:27,229
around everything<font color="#E5E5E5"> and so what we'll see</font>

173
00:06:25,279 --> 00:06:29,690
in let his environments is pushing more

174
00:06:27,229 --> 00:06:31,190
<font color="#E5E5E5">and more security into that so that</font><font color="#CCCCCC"> you</font>

175
00:06:29,690 --> 00:06:34,699
<font color="#CCCCCC">don't have</font><font color="#E5E5E5"> to influence security in</font>

176
00:06:31,190 --> 00:06:37,430
every<font color="#CCCCCC"> single application which is is</font>

177
00:06:34,699 --> 00:06:39,020
tedious<font color="#CCCCCC"> and also very painstaking so my</font>

178
00:06:37,430 --> 00:06:42,590
security thesis when I started

179
00:06:39,020 --> 00:06:44,109
this research was what I<font color="#E5E5E5"> how I</font>

180
00:06:42,590 --> 00:06:46,190
<font color="#CCCCCC">approached a lot of things I think</font>

181
00:06:44,110 --> 00:06:48,349
<font color="#E5E5E5">attackers are always looking for</font><font color="#CCCCCC"> the new</font>

182
00:06:46,190 --> 00:06:51,620
frontier to exploit while defenders are

183
00:06:48,349 --> 00:06:54,080
still<font color="#CCCCCC"> fighting the last war and so how I</font>

184
00:06:51,620 --> 00:06:58,940
saw this pattern<font color="#E5E5E5"> manifest itself in this</font>

185
00:06:54,080 --> 00:07:00,680
ecosystem<font color="#E5E5E5"> or things like a an excessive</font>

186
00:06:58,940 --> 00:07:03,289
amount<font color="#CCCCCC"> of</font><font color="#E5E5E5"> focus from security</font>

187
00:07:00,680 --> 00:07:04,940
practitioners on<font color="#E5E5E5"> OS</font><font color="#CCCCCC"> level container</font>

188
00:07:03,289 --> 00:07:07,090
escapes<font color="#E5E5E5"> focusing on kernel</font>

189
00:07:04,940 --> 00:07:10,400
vulnerabilities focusing on these<font color="#E5E5E5"> things</font>

190
00:07:07,090 --> 00:07:14,810
<font color="#E5E5E5">that kind of impedes looking a little</font>

191
00:07:10,400 --> 00:07:16,758
<font color="#E5E5E5">broader and seeing just</font><font color="#CCCCCC"> how exposed the</font>

192
00:07:14,810 --> 00:07:18,740
rest of the<font color="#E5E5E5"> cluster</font><font color="#CCCCCC"> level api's are from</font>

193
00:07:16,759 --> 00:07:21,319
inside<font color="#CCCCCC"> those containers</font><font color="#E5E5E5"> because just</font>

194
00:07:18,740 --> 00:07:22,610
looking at those escapes<font color="#E5E5E5"> is like just</font>

195
00:07:21,319 --> 00:07:24,560
<font color="#CCCCCC">running a docker container on a single</font>

196
00:07:22,610 --> 00:07:26,150
<font color="#CCCCCC">workstation and that's pretty</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> only</font>

197
00:07:24,560 --> 00:07:27,770
in development<font color="#E5E5E5"> not really where it</font>

198
00:07:26,150 --> 00:07:30,770
matters in product as in production

199
00:07:27,770 --> 00:07:33,020
another<font color="#E5E5E5"> you know corollary I had going</font>

200
00:07:30,770 --> 00:07:35,780
<font color="#E5E5E5">into this was that when you only</font><font color="#CCCCCC"> focus</font>

201
00:07:33,020 --> 00:07:37,280
on<font color="#E5E5E5"> the scope of an individual node like</font>

202
00:07:35,780 --> 00:07:39,318
you're<font color="#CCCCCC"> thinking about</font><font color="#E5E5E5"> okay so how do I</font>

203
00:07:37,280 --> 00:07:41,448
assess<font color="#CCCCCC"> callate privileges how do i you</font>

204
00:07:39,319 --> 00:07:44,539
<font color="#CCCCCC">know install a rootkit on particular</font>

205
00:07:41,449 --> 00:07:45,949
node in the cluster<font color="#CCCCCC"> you</font><font color="#E5E5E5"> also miss what</font>

206
00:07:44,539 --> 00:07:49,430
you<font color="#E5E5E5"> can do at the entire cluster level</font>

207
00:07:45,949 --> 00:07:51,020
<font color="#E5E5E5">because one of the patterns of these</font>

208
00:07:49,430 --> 00:07:52,849
orchestrated environments is that nodes

209
00:07:51,020 --> 00:07:56,719
can come and go<font color="#E5E5E5"> they're torn up torn</font>

210
00:07:52,849 --> 00:07:58,699
down and a lot of companies that<font color="#E5E5E5"> are</font>

211
00:07:56,719 --> 00:08:00,440
<font color="#CCCCCC">using this</font><font color="#E5E5E5"> type of new set of</font>

212
00:07:58,699 --> 00:08:03,080
environments<font color="#E5E5E5"> already they don't measure</font>

213
00:08:00,440 --> 00:08:04,909
up time<font color="#E5E5E5"> in terms of</font><font color="#CCCCCC"> how long the systems</font>

214
00:08:03,080 --> 00:08:06,740
go I've been up they don't<font color="#E5E5E5"> see that as</font><font color="#CCCCCC"> a</font>

215
00:08:04,909 --> 00:08:08,690
good thing<font color="#E5E5E5"> they want to measure reverse</font>

216
00:08:06,740 --> 00:08:10,669
uptime and basically<font color="#E5E5E5"> take</font><font color="#CCCCCC"> that number</font>

217
00:08:08,690 --> 00:08:13,099
<font color="#E5E5E5">down they want</font><font color="#CCCCCC"> to have systems be</font>

218
00:08:10,669 --> 00:08:14,750
<font color="#E5E5E5">short-lived ephemeral and have that</font>

219
00:08:13,099 --> 00:08:16,969
pattern<font color="#E5E5E5"> kind of a throughout every stack</font>

220
00:08:14,750 --> 00:08:19,669
or through every layer<font color="#CCCCCC"> of their stack</font>

221
00:08:16,969 --> 00:08:23,449
<font color="#E5E5E5">and the third thing I saw was that</font>

222
00:08:19,669 --> 00:08:24,919
overly focusing on immutability<font color="#E5E5E5"> of the</font>

223
00:08:23,449 --> 00:08:27,830
containers themselves<font color="#E5E5E5"> and even the</font>

224
00:08:24,919 --> 00:08:32,088
operating systems on the nodes<font color="#CCCCCC"> misses a</font>

225
00:08:27,830 --> 00:08:34,218
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> weaknesses</font><font color="#CCCCCC"> in where the</font>

226
00:08:32,089 --> 00:08:36,260
mutability<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> contain</font><font color="#E5E5E5"> of the cluster</font>

227
00:08:34,219 --> 00:08:37,820
level<font color="#E5E5E5"> state allows all the types of</font>

228
00:08:36,260 --> 00:08:40,578
persistence that an attacker<font color="#E5E5E5"> would want</font>

229
00:08:37,820 --> 00:08:42,829
so how a<font color="#E5E5E5"> normal ego about things as I</font>

230
00:08:40,578 --> 00:08:44,569
start with a an attack graph to kind of

231
00:08:42,828 --> 00:08:46,939
figure<font color="#CCCCCC"> out what</font><font color="#E5E5E5"> the choice is</font><font color="#CCCCCC"> an</font>

232
00:08:44,570 --> 00:08:48,529
attacker would make and why<font color="#E5E5E5"> in different</font>

233
00:08:46,940 --> 00:08:50,300
environments<font color="#CCCCCC"> so we start with the</font>

234
00:08:48,529 --> 00:08:52,490
<font color="#E5E5E5">assumption of</font>

235
00:08:50,300 --> 00:08:54,859
we<font color="#CCCCCC"> attacker obtains remote code</font>

236
00:08:52,490 --> 00:08:57,230
execution in a container in a cluster in

237
00:08:54,860 --> 00:08:59,660
one of these<font color="#E5E5E5"> environments so that I'll</font>

238
00:08:57,230 --> 00:09:01,070
just use<font color="#CCCCCC"> shell shock as high-profile</font>

239
00:08:59,660 --> 00:09:02,660
example but one<font color="#CCCCCC"> of the things I've</font>

240
00:09:01,070 --> 00:09:06,380
noticed<font color="#CCCCCC"> over</font><font color="#E5E5E5"> the last few years is</font><font color="#CCCCCC"> that</font>

241
00:09:02,660 --> 00:09:08,329
the prevalence<font color="#CCCCCC"> of remote command</font>

242
00:09:06,380 --> 00:09:11,570
injection vulnerabilities in a lot<font color="#E5E5E5"> of</font>

243
00:09:08,330 --> 00:09:12,410
you know<font color="#CCCCCC"> popular Linux</font><font color="#E5E5E5"> software is</font>

244
00:09:11,570 --> 00:09:14,600
pretty<font color="#CCCCCC"> surprising</font>

245
00:09:12,410 --> 00:09:17,839
and whereas unlike the Windows desktop

246
00:09:14,600 --> 00:09:20,480
world<font color="#E5E5E5"> we're talking</font><font color="#CCCCCC"> about you know</font>

247
00:09:17,840 --> 00:09:23,210
vulnerabilities that<font color="#E5E5E5"> involve insane</font>

248
00:09:20,480 --> 00:09:25,550
levels of heat manipulation and<font color="#E5E5E5"> arcane</font>

249
00:09:23,210 --> 00:09:27,950
low-level techniques<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of the</font>

250
00:09:25,550 --> 00:09:29,599
attacks that<font color="#E5E5E5"> are succeeding at a pretty</font>

251
00:09:27,950 --> 00:09:31,910
<font color="#E5E5E5">impactful scale against production</font>

252
00:09:29,600 --> 00:09:33,200
environments are just shell

253
00:09:31,910 --> 00:09:35,569
<font color="#E5E5E5">metacharacter injection in the right</font>

254
00:09:33,200 --> 00:09:37,160
place<font color="#CCCCCC"> so shell shock you just put</font><font color="#E5E5E5"> it in</font>

255
00:09:35,570 --> 00:09:39,500
<font color="#E5E5E5">a you know environment variable it gets</font>

256
00:09:37,160 --> 00:09:42,740
passed<font color="#E5E5E5"> to bash image tragic</font><font color="#CCCCCC"> you have an</font>

257
00:09:39,500 --> 00:09:44,240
image conversion<font color="#CCCCCC"> routine that shells out</font>

258
00:09:42,740 --> 00:09:46,640
other of only bit similar

259
00:09:44,240 --> 00:09:49,250
vulnerabilities and go script<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> I</font>

260
00:09:46,640 --> 00:09:50,689
think as<font color="#E5E5E5"> people start looking</font><font color="#CCCCCC"> more at</font>

261
00:09:49,250 --> 00:09:53,920
this I'm gonna<font color="#E5E5E5"> see a lot of more as a</font>

262
00:09:50,690 --> 00:09:56,260
problem and so<font color="#E5E5E5"> especially as we are</font>

263
00:09:53,920 --> 00:09:58,370
<font color="#E5E5E5">rapidly taking less mature software</font>

264
00:09:56,260 --> 00:10:00,080
<font color="#CCCCCC">putting it in you know containers</font>

265
00:09:58,370 --> 00:10:01,790
exposing it to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Internet and moving</font>

266
00:10:00,080 --> 00:10:04,190
it through<font color="#E5E5E5"> that</font><font color="#CCCCCC"> cycle so this</font><font color="#E5E5E5"> is my</font>

267
00:10:01,790 --> 00:10:08,860
starting point<font color="#E5E5E5"> another traditional route</font>

268
00:10:04,190 --> 00:10:11,660
of the official strategy<font color="#E5E5E5"> is starting at</font>

269
00:10:08,860 --> 00:10:13,310
you know<font color="#E5E5E5"> I have no you're looking for</font>

270
00:10:11,660 --> 00:10:14,959
<font color="#CCCCCC">approaches</font><font color="#E5E5E5"> its privilege escalation on</font>

271
00:10:13,310 --> 00:10:17,209
<font color="#E5E5E5">the</font><font color="#CCCCCC"> node get out of the container get</font>

272
00:10:14,960 --> 00:10:19,940
<font color="#CCCCCC">route and then see if I can persist on</font>

273
00:10:17,210 --> 00:10:23,510
<font color="#E5E5E5">the cluster</font><font color="#CCCCCC"> however that's not as useful</font>

274
00:10:19,940 --> 00:10:25,520
as looking at other<font color="#CCCCCC"> things where we can</font>

275
00:10:23,510 --> 00:10:28,040
<font color="#E5E5E5">say</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> well look we instead of that</font>

276
00:10:25,520 --> 00:10:30,740
look for lateral<font color="#E5E5E5"> movement opportunities</font>

277
00:10:28,040 --> 00:10:32,660
within<font color="#E5E5E5"> the cluster directly and from</font>

278
00:10:30,740 --> 00:10:35,150
there we<font color="#E5E5E5"> can look for privilege</font>

279
00:10:32,660 --> 00:10:36,920
escalation<font color="#CCCCCC"> within the you</font><font color="#E5E5E5"> know at the</font>

280
00:10:35,150 --> 00:10:40,040
<font color="#CCCCCC">cluster level and then cluster level</font>

281
00:10:36,920 --> 00:10:42,680
persistence<font color="#E5E5E5"> and this is possible from</font>

282
00:10:40,040 --> 00:10:44,599
<font color="#E5E5E5">you know just direct container remote</font>

283
00:10:42,680 --> 00:10:46,370
code execution<font color="#CCCCCC"> privileged access to</font><font color="#E5E5E5"> the</font>

284
00:10:44,600 --> 00:10:50,390
node or somewhere that<font color="#E5E5E5"> you've moved</font>

285
00:10:46,370 --> 00:10:54,500
laterally to<font color="#E5E5E5"> and it sort of shows that</font>

286
00:10:50,390 --> 00:10:56,390
<font color="#CCCCCC">that's the area that I think is the most</font>

287
00:10:54,500 --> 00:10:57,500
important to focus<font color="#E5E5E5"> on is from different</font>

288
00:10:56,390 --> 00:11:00,170
levels<font color="#CCCCCC"> of access</font>

289
00:10:57,500 --> 00:11:02,920
how can you escalate cluster level

290
00:11:00,170 --> 00:11:06,279
privileges so let's talk

291
00:11:02,920 --> 00:11:08,139
a few of the various alternatives for

292
00:11:06,279 --> 00:11:14,320
registration<font color="#E5E5E5"> systems I'll start with</font>

293
00:11:08,139 --> 00:11:18,250
<font color="#CCCCCC">docker swarm the so the service model</font>

294
00:11:14,320 --> 00:11:22,089
<font color="#E5E5E5">for docker swarm is oh I would call it</font>

295
00:11:18,250 --> 00:11:23,980
the the least complex<font color="#E5E5E5"> of the available</font>

296
00:11:22,089 --> 00:11:27,970
<font color="#CCCCCC">leading orchestration systems</font><font color="#E5E5E5"> it is</font>

297
00:11:23,980 --> 00:11:31,000
largely<font color="#E5E5E5"> docker composed as a platform</font>

298
00:11:27,970 --> 00:11:33,579
<font color="#E5E5E5">and how it works is you have a</font><font color="#CCCCCC"> service</font>

299
00:11:31,000 --> 00:11:37,120
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is defined of of a container one or</font>

300
00:11:33,579 --> 00:11:38,620
more<font color="#E5E5E5"> containers and swarm will</font><font color="#CCCCCC"> schedule</font>

301
00:11:37,120 --> 00:11:42,760
and scale it across available nodes as

302
00:11:38,620 --> 00:11:46,120
tasks they will farm it out<font color="#E5E5E5"> and manage a</font>

303
00:11:42,760 --> 00:11:47,230
configured number of replicas<font color="#CCCCCC"> so that if</font>

304
00:11:46,120 --> 00:11:49,149
one goes down<font color="#CCCCCC"> another</font><font color="#E5E5E5"> one is</font>

305
00:11:47,230 --> 00:11:50,740
<font color="#E5E5E5">automatically restarted</font><font color="#CCCCCC"> or you can also</font>

306
00:11:49,149 --> 00:11:53,829
<font color="#CCCCCC">auto scale the number of replicas as</font>

307
00:11:50,740 --> 00:11:56,649
well how this is implemented<font color="#E5E5E5"> is through</font>

308
00:11:53,829 --> 00:12:00,489
a docker swarm or swarm mode of docker

309
00:11:56,649 --> 00:12:02,019
<font color="#E5E5E5">and there's two two types of nodes in</font>

310
00:12:00,490 --> 00:12:04,329
this configuration<font color="#E5E5E5"> there are managers</font>

311
00:12:02,019 --> 00:12:07,690
and there are workers<font color="#CCCCCC"> much like our</font>

312
00:12:04,329 --> 00:12:11,219
daily lives and the<font color="#E5E5E5"> managers are all in</font>

313
00:12:07,690 --> 00:12:13,810
a<font color="#CCCCCC"> a raft consensus</font><font color="#E5E5E5"> group so there's a</font>

314
00:12:11,220 --> 00:12:14,980
distributed key-value store essentially

315
00:12:13,810 --> 00:12:16,569
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> pattern you'll see on all</font>

316
00:12:14,980 --> 00:12:20,980
these systems<font color="#E5E5E5"> a distributed key-value</font>

317
00:12:16,570 --> 00:12:22,899
store<font color="#CCCCCC"> and kind</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> masters and the</font>

318
00:12:20,980 --> 00:12:25,779
managers of the the orchestration use

319
00:12:22,899 --> 00:12:27,970
that to maintain<font color="#E5E5E5"> a quorum and the actual</font>

320
00:12:25,779 --> 00:12:31,930
cluster<font color="#CCCCCC"> state among themselves and so</font>

321
00:12:27,970 --> 00:12:33,760
you'll always want a odd number<font color="#CCCCCC"> of a</font>

322
00:12:31,930 --> 00:12:34,899
manager nodes<font color="#E5E5E5"> regardless of whether</font>

323
00:12:33,760 --> 00:12:38,740
using graft or whether you're using

324
00:12:34,899 --> 00:12:40,360
<font color="#CCCCCC">Paxos</font><font color="#E5E5E5"> but this makes</font><font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> the the</font>

325
00:12:38,740 --> 00:12:43,810
cluster itself is consistent<font color="#CCCCCC"> even if</font>

326
00:12:40,360 --> 00:12:45,370
<font color="#E5E5E5">there's network issues the all the the</font>

327
00:12:43,810 --> 00:12:47,349
workers<font color="#E5E5E5"> communicate over a gossip</font>

328
00:12:45,370 --> 00:12:49,329
network so<font color="#E5E5E5"> you can primarily to manage</font>

329
00:12:47,350 --> 00:12:55,209
the overlay virtual network<font color="#E5E5E5"> across them</font>

330
00:12:49,329 --> 00:12:57,550
<font color="#E5E5E5">and the one thing</font><font color="#CCCCCC"> that you'll also</font>

331
00:12:55,209 --> 00:12:58,959
notice in kind<font color="#E5E5E5"> of it's slightly</font>

332
00:12:57,550 --> 00:13:01,779
different<font color="#CCCCCC"> than traditional</font><font color="#E5E5E5"> virtual</font>

333
00:12:58,959 --> 00:13:03,099
<font color="#E5E5E5">machine based network architectures</font>

334
00:13:01,779 --> 00:13:05,709
<font color="#E5E5E5">where there's a very strict separation</font>

335
00:13:03,100 --> 00:13:09,279
between control<font color="#E5E5E5"> plane and data plane a</font>

336
00:13:05,709 --> 00:13:11,018
lot<font color="#E5E5E5"> of the orchestrators today</font><font color="#CCCCCC"> combine</font>

337
00:13:09,279 --> 00:13:12,970
<font color="#E5E5E5">them on the same network fabric and</font>

338
00:13:11,019 --> 00:13:15,220
they'll have overlay networks for the

339
00:13:12,970 --> 00:13:16,010
<font color="#CCCCCC">data plane</font><font color="#E5E5E5"> but they'll go over the same</font>

340
00:13:15,220 --> 00:13:19,370
links and the

341
00:13:16,010 --> 00:13:21,590
to use TLS<font color="#CCCCCC"> and various other encrypted</font>

342
00:13:19,370 --> 00:13:24,620
protocols to protect the control plane

343
00:13:21,590 --> 00:13:27,440
traffic so swarm actually does a really

344
00:13:24,620 --> 00:13:29,600
<font color="#E5E5E5">good job at this</font><font color="#CCCCCC"> they spent a lot of</font>

345
00:13:27,440 --> 00:13:31,940
time on the security<font color="#CCCCCC"> model</font><font color="#E5E5E5"> and the</font>

346
00:13:29,600 --> 00:13:34,580
security features and there's sort<font color="#E5E5E5"> of</font>

347
00:13:31,940 --> 00:13:37,940
the gold<font color="#CCCCCC"> standard of orchestration</font>

348
00:13:34,580 --> 00:13:40,550
security today<font color="#CCCCCC"> and how they how they</font>

349
00:13:37,940 --> 00:13:43,130
work is the manager is a<font color="#CCCCCC"> x.509</font><font color="#E5E5E5"> CA the</font>

350
00:13:40,550 --> 00:13:46,479
<font color="#E5E5E5">managers form</font><font color="#CCCCCC"> x.509 CA for the entire</font>

351
00:13:43,130 --> 00:13:49,220
swarm<font color="#E5E5E5"> and they use this to</font><font color="#CCCCCC"> implement</font>

352
00:13:46,480 --> 00:13:51,100
<font color="#CCCCCC">mutual authentication</font><font color="#E5E5E5"> between all the</font>

353
00:13:49,220 --> 00:13:52,670
control components between<font color="#E5E5E5"> nodes between</font>

354
00:13:51,100 --> 00:13:55,970
<font color="#E5E5E5">managers as</font><font color="#CCCCCC"> well</font>

355
00:13:52,670 --> 00:13:58,670
and the data plane traffic by default is

356
00:13:55,970 --> 00:14:00,950
unencrypted<font color="#CCCCCC"> however you can optionally</font>

357
00:13:58,670 --> 00:14:04,069
encrypt it and IPSec tunnels will be

358
00:14:00,950 --> 00:14:05,950
created<font color="#E5E5E5"> between all the service</font>

359
00:14:04,070 --> 00:14:09,260
dependencies of<font color="#E5E5E5"> your workload so</font>

360
00:14:05,950 --> 00:14:11,180
<font color="#CCCCCC">container will only have access</font><font color="#E5E5E5"> to the</font>

361
00:14:09,260 --> 00:14:12,680
links that<font color="#E5E5E5"> you have declared so an</font><font color="#CCCCCC"> app</font>

362
00:14:11,180 --> 00:14:14,900
container will only have access to<font color="#E5E5E5"> a</font>

363
00:14:12,680 --> 00:14:16,819
<font color="#CCCCCC">database that</font><font color="#E5E5E5"> you've declared not access</font>

364
00:14:14,900 --> 00:14:18,949
to<font color="#E5E5E5"> over the network to talk to the</font>

365
00:14:16,820 --> 00:14:22,910
manager<font color="#CCCCCC"> is there anything else</font>

366
00:14:18,950 --> 00:14:26,360
and another key artifact aspect of<font color="#E5E5E5"> how</font>

367
00:14:22,910 --> 00:14:29,120
swarm model is implemented<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that it is</font>

368
00:14:26,360 --> 00:14:30,530
at<font color="#E5E5E5"> least privileged design the the</font>

369
00:14:29,120 --> 00:14:32,810
containers themselves<font color="#E5E5E5"> are always</font>

370
00:14:30,530 --> 00:14:35,060
<font color="#E5E5E5">considered by default untrusted</font><font color="#CCCCCC"> the</font>

371
00:14:32,810 --> 00:14:39,890
nodes themselves<font color="#E5E5E5"> that they run upon are</font>

372
00:14:35,060 --> 00:14:41,060
by default<font color="#E5E5E5"> considered untrusted and they</font>

373
00:14:39,890 --> 00:14:44,300
are only<font color="#E5E5E5"> given a middle amount of</font>

374
00:14:41,060 --> 00:14:47,150
information<font color="#E5E5E5"> to do their job so it's a</font>

375
00:14:44,300 --> 00:14:49,339
<font color="#E5E5E5">kind of a it's a pretty good model</font><font color="#CCCCCC"> in</font>

376
00:14:47,150 --> 00:14:52,310
addition<font color="#CCCCCC"> to this this interacts most</font>

377
00:14:49,340 --> 00:14:54,350
concretely with<font color="#E5E5E5"> secrets where secrets</font>

378
00:14:52,310 --> 00:14:55,939
are<font color="#E5E5E5"> taught you know what they sound like</font>

379
00:14:54,350 --> 00:14:58,730
objects<font color="#E5E5E5"> that are defined to</font><font color="#CCCCCC"> likely</font>

380
00:14:55,940 --> 00:14:59,960
passwords to whatever<font color="#E5E5E5"> an apple need but</font>

381
00:14:58,730 --> 00:15:02,300
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> they're encrypted at rest</font>

382
00:14:59,960 --> 00:15:06,140
<font color="#CCCCCC">throughout all of</font><font color="#E5E5E5"> all docker swarm and</font>

383
00:15:02,300 --> 00:15:07,849
<font color="#E5E5E5">they're only sent to nodes that have</font><font color="#CCCCCC"> a</font>

384
00:15:06,140 --> 00:15:11,270
job<font color="#CCCCCC"> that</font><font color="#E5E5E5"> needs them rather than making</font>

385
00:15:07,850 --> 00:15:14,180
them<font color="#E5E5E5"> accessible to the entire</font><font color="#CCCCCC"> cluster so</font>

386
00:15:11,270 --> 00:15:15,590
let you know if<font color="#E5E5E5"> you look at what does</font>

387
00:15:14,180 --> 00:15:17,060
what would something like<font color="#CCCCCC"> shellshock</font>

388
00:15:15,590 --> 00:15:20,720
being exploited look like on docker

389
00:15:17,060 --> 00:15:22,550
swarm it's pretty uninteresting<font color="#E5E5E5"> because</font>

390
00:15:20,720 --> 00:15:26,300
you get a shell in the container<font color="#E5E5E5"> the</font>

391
00:15:22,550 --> 00:15:28,280
attack surface<font color="#E5E5E5"> is essentially all you</font>

392
00:15:26,300 --> 00:15:29,780
get<font color="#E5E5E5"> from a highly constrained container</font>

393
00:15:28,280 --> 00:15:31,970
on a single system

394
00:15:29,780 --> 00:15:37,699
and there's not<font color="#E5E5E5"> light</font><font color="#CCCCCC"> can do there's no</font>

395
00:15:31,970 --> 00:15:39,440
API<font color="#CCCCCC"> you can talk to</font><font color="#E5E5E5"> there's no there's</font>

396
00:15:37,700 --> 00:15:43,130
<font color="#CCCCCC">just not a lot</font><font color="#E5E5E5"> of avenues for lateral</font>

397
00:15:39,440 --> 00:15:44,720
movement or anything like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> the</font>

398
00:15:43,130 --> 00:15:47,960
attacks<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> lot want to do are</font>

399
00:15:44,720 --> 00:15:50,990
largely<font color="#E5E5E5"> scanning for scanning the data</font>

400
00:15:47,960 --> 00:15:53,180
plane for other accessible<font color="#E5E5E5"> services or</font>

401
00:15:50,990 --> 00:15:54,670
<font color="#CCCCCC">but</font><font color="#E5E5E5"> that you have access</font><font color="#CCCCCC"> to and try to</font>

402
00:15:53,180 --> 00:15:56,569
<font color="#E5E5E5">SK privileges through there or</font>

403
00:15:54,670 --> 00:15:59,780
traditional operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> level</font>

404
00:15:56,570 --> 00:16:01,160
container escapes<font color="#CCCCCC"> and there's</font><font color="#E5E5E5"> sort of a</font>

405
00:15:59,780 --> 00:16:02,870
lot<font color="#CCCCCC"> of other research being done there</font>

406
00:16:01,160 --> 00:16:05,540
so that was<font color="#CCCCCC"> something that while it's</font>

407
00:16:02,870 --> 00:16:11,150
important and<font color="#E5E5E5"> necessary</font><font color="#CCCCCC"> not the focus of</font>

408
00:16:05,540 --> 00:16:14,990
this talk<font color="#E5E5E5"> but one aspect that I did want</font>

409
00:16:11,150 --> 00:16:17,300
<font color="#CCCCCC">to</font><font color="#E5E5E5"> highlight about</font><font color="#CCCCCC"> how swarm works is in</font>

410
00:16:14,990 --> 00:16:19,160
order<font color="#CCCCCC"> to make it easy</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> and allow</font>

411
00:16:17,300 --> 00:16:21,140
nodes especially in an<font color="#CCCCCC"> environment like</font>

412
00:16:19,160 --> 00:16:23,209
<font color="#CCCCCC">a cloud environment where you want to</font>

413
00:16:21,140 --> 00:16:26,480
scale<font color="#E5E5E5"> up and scale down seamlessly they</font>

414
00:16:23,210 --> 00:16:29,110
support<font color="#E5E5E5"> joining the swarm with a single</font>

415
00:16:26,480 --> 00:16:31,790
cryptographic token so this<font color="#CCCCCC"> join token</font>

416
00:16:29,110 --> 00:16:34,790
automatically authorizes the node to

417
00:16:31,790 --> 00:16:38,030
join the swarm<font color="#E5E5E5"> and doesn't require an</font>

418
00:16:34,790 --> 00:16:43,010
explicit approval or confirmation<font color="#E5E5E5"> for</font>

419
00:16:38,030 --> 00:16:45,709
each new node<font color="#E5E5E5"> and the tokens themselves</font>

420
00:16:43,010 --> 00:16:47,510
are not consumed<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> easily easy to</font>

421
00:16:45,710 --> 00:16:49,730
rotate<font color="#E5E5E5"> they're easy to change and</font>

422
00:16:47,510 --> 00:16:51,589
<font color="#CCCCCC">disabled and</font><font color="#E5E5E5"> they're only needed when</font>

423
00:16:49,730 --> 00:16:57,020
<font color="#E5E5E5">this in the node joins the swarm never</font>

424
00:16:51,589 --> 00:16:58,220
after the fact<font color="#E5E5E5"> but there have a very</font>

425
00:16:57,020 --> 00:17:00,199
regular format so they're easy to<font color="#CCCCCC"> find</font>

426
00:16:58,220 --> 00:17:03,980
<font color="#E5E5E5">in source code which is a plus and a</font>

427
00:17:00,200 --> 00:17:08,000
minus<font color="#CCCCCC"> and easy to</font><font color="#E5E5E5"> find in memory as well</font>

428
00:17:03,980 --> 00:17:09,709
<font color="#E5E5E5">so if an attacker is able to escalate</font>

429
00:17:08,000 --> 00:17:12,050
privileges outside of the container<font color="#E5E5E5"> and</font>

430
00:17:09,709 --> 00:17:14,329
gain you know gain<font color="#CCCCCC"> route on</font><font color="#E5E5E5"> the</font>

431
00:17:12,050 --> 00:17:17,089
underlying host<font color="#CCCCCC"> there's actually stuff</font>

432
00:17:14,329 --> 00:17:19,220
they can do against swarm<font color="#E5E5E5"> and so the</font>

433
00:17:17,089 --> 00:17:22,339
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a lot of</font><font color="#CCCCCC"> the attacks go back to</font>

434
00:17:19,220 --> 00:17:24,290
kind<font color="#CCCCCC"> of 1990s style hacking with ARP</font>

435
00:17:22,339 --> 00:17:27,399
spoofing and denial<font color="#E5E5E5"> of service at the</font>

436
00:17:24,290 --> 00:17:30,040
network level<font color="#CCCCCC"> and what you can do is</font>

437
00:17:27,400 --> 00:17:33,620
disable the<font color="#CCCCCC"> network</font><font color="#E5E5E5"> connectivity to</font>

438
00:17:30,040 --> 00:17:35,600
legitimate worker nodes and a<font color="#CCCCCC"> height</font>

439
00:17:33,620 --> 00:17:37,669
<font color="#CCCCCC">boosts essentially hijack their IP</font>

440
00:17:35,600 --> 00:17:38,810
address however<font color="#E5E5E5"> should note</font><font color="#CCCCCC"> that you</font>

441
00:17:37,670 --> 00:17:39,480
don't<font color="#E5E5E5"> actually get their cryptographic</font>

442
00:17:38,810 --> 00:17:41,790
ident

443
00:17:39,480 --> 00:17:43,260
it just looks<font color="#CCCCCC"> like a new node to swarm</font>

444
00:17:41,790 --> 00:17:45,059
it looks like a new node at the same IP

445
00:17:43,260 --> 00:17:47,160
address because the cryptographic

446
00:17:45,059 --> 00:17:48,990
<font color="#CCCCCC">identities</font><font color="#E5E5E5"> assigned you know through a</font>

447
00:17:47,160 --> 00:17:51,090
certificate<font color="#CCCCCC"> that is granted through a</font>

448
00:17:48,990 --> 00:17:52,710
CSR when you present<font color="#E5E5E5"> the joint token so</font>

449
00:17:51,090 --> 00:17:55,110
by<font color="#E5E5E5"> reusing the</font><font color="#CCCCCC"> joint token you're just</font>

450
00:17:52,710 --> 00:17:56,910
getting a new CSR<font color="#E5E5E5"> while blocking the</font>

451
00:17:55,110 --> 00:17:59,189
<font color="#CCCCCC">inter before using</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> IP address</font>

452
00:17:56,910 --> 00:18:03,780
you're blocking the legitimate node and

453
00:17:59,190 --> 00:18:05,880
what this lets<font color="#E5E5E5"> you do is you can proceed</font>

454
00:18:03,780 --> 00:18:08,190
<font color="#CCCCCC">to by blocking on legitimate nodes and</font>

455
00:18:05,880 --> 00:18:11,760
taking up all the<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the subnet you</font>

456
00:18:08,190 --> 00:18:13,320
will be assigned all<font color="#E5E5E5"> available services</font>

457
00:18:11,760 --> 00:18:16,200
<font color="#CCCCCC">all</font><font color="#E5E5E5"> the apps running on the on the</font>

458
00:18:13,320 --> 00:18:17,309
cluster<font color="#E5E5E5"> because the the orchid</font><font color="#CCCCCC"> are swarm</font>

459
00:18:16,200 --> 00:18:19,020
<font color="#E5E5E5">will notice that they're no longer</font>

460
00:18:17,309 --> 00:18:20,610
reachable<font color="#E5E5E5"> that need to be</font><font color="#CCCCCC"> rescheduled</font>

461
00:18:19,020 --> 00:18:25,470
and so they'll<font color="#CCCCCC"> schedule you them all on</font>

462
00:18:20,610 --> 00:18:29,280
<font color="#E5E5E5">your on your</font><font color="#CCCCCC"> rogue node</font><font color="#E5E5E5"> so let's see</font>

463
00:18:25,470 --> 00:18:35,520
what that<font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> make sure this</font>

464
00:18:29,280 --> 00:18:36,690
<font color="#E5E5E5">works so</font><font color="#CCCCCC"> we have you</font><font color="#E5E5E5"> know we're showing</font>

465
00:18:35,520 --> 00:18:38,820
<font color="#E5E5E5">both systems right now we're</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

466
00:18:36,690 --> 00:18:40,919
manager showing<font color="#E5E5E5"> another layout of the of</font>

467
00:18:38,820 --> 00:18:43,230
the environment<font color="#E5E5E5"> we have two workers</font><font color="#CCCCCC"> and</font>

468
00:18:40,919 --> 00:18:46,559
one manager<font color="#CCCCCC"> a few database services</font>

469
00:18:43,230 --> 00:18:48,090
running on the on this<font color="#CCCCCC"> form and</font><font color="#E5E5E5"> we can</font>

470
00:18:46,559 --> 00:18:50,610
see<font color="#E5E5E5"> that they're they're all scheduled</font>

471
00:18:48,090 --> 00:18:52,080
to run<font color="#E5E5E5"> and they're running</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> now so</font>

472
00:18:50,610 --> 00:18:53,699
now we're switching<font color="#E5E5E5"> over</font><font color="#CCCCCC"> to work or to</font>

473
00:18:52,080 --> 00:18:55,020
assuming<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> it you know</font>

474
00:18:53,700 --> 00:18:57,809
escalated privileges broken out of<font color="#E5E5E5"> the</font>

475
00:18:55,020 --> 00:18:59,850
container<font color="#CCCCCC"> and what we're</font><font color="#E5E5E5"> gonna do is try</font>

476
00:18:57,809 --> 00:19:01,590
<font color="#CCCCCC">and find this join token and the easiest</font>

477
00:18:59,850 --> 00:19:04,139
way to do it is if you<font color="#E5E5E5"> have root access</font>

478
00:19:01,590 --> 00:19:06,540
already is<font color="#CCCCCC"> scrape it out of memory from</font>

479
00:19:04,140 --> 00:19:08,760
<font color="#E5E5E5">the docker process</font><font color="#CCCCCC"> it's regular string</font>

480
00:19:06,540 --> 00:19:12,149
it's easy to find<font color="#E5E5E5"> and it is not scrubbed</font>

481
00:19:08,760 --> 00:19:14,429
<font color="#E5E5E5">from memory currently so if the system</font>

482
00:19:12,150 --> 00:19:16,110
is still up after<font color="#CCCCCC"> having joined the</font>

483
00:19:14,429 --> 00:19:20,280
swarm<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can recover it pretty easily</font>

484
00:19:16,110 --> 00:19:22,379
<font color="#CCCCCC">and our attack</font><font color="#E5E5E5"> uses that</font><font color="#CCCCCC"> join token and</font>

485
00:19:20,280 --> 00:19:26,490
<font color="#E5E5E5">talks to the manager and implements this</font>

486
00:19:22,380 --> 00:19:29,820
where we are proof the exhibit nodes<font color="#E5E5E5"> to</font>

487
00:19:26,490 --> 00:19:31,950
the<font color="#E5E5E5"> manager and so that they can't be</font>

488
00:19:29,820 --> 00:19:34,370
assigned new jobs we<font color="#E5E5E5"> can take all the</font>

489
00:19:31,950 --> 00:19:37,320
available identities and get all the

490
00:19:34,370 --> 00:19:41,340
services<font color="#E5E5E5"> reassigned into our rogue nodes</font>

491
00:19:37,320 --> 00:19:43,439
<font color="#E5E5E5">and once that's done we will get the</font>

492
00:19:41,340 --> 00:19:45,449
service secrets<font color="#E5E5E5"> for those services sent</font>

493
00:19:43,440 --> 00:19:48,990
to us and so we<font color="#E5E5E5"> can get all the database</font>

494
00:19:45,450 --> 00:19:51,419
<font color="#CCCCCC">credentials we can get all the</font><font color="#E5E5E5"> you know</font>

495
00:19:48,990 --> 00:19:52,179
whatever<font color="#E5E5E5"> other secrets are are included</font>

496
00:19:51,419 --> 00:19:57,009
in the

497
00:19:52,179 --> 00:20:00,850
you know for those jobs<font color="#CCCCCC"> so I don't just</font>

498
00:19:57,009 --> 00:20:04,659
see<font color="#E5E5E5"> that again there are several ways</font><font color="#CCCCCC"> to</font>

499
00:20:00,850 --> 00:20:05,949
mitigate<font color="#E5E5E5"> this first is the I mentioned</font>

500
00:20:04,659 --> 00:20:08,710
earlier the<font color="#CCCCCC"> join tokens are incredibly</font>

501
00:20:05,950 --> 00:20:10,629
<font color="#E5E5E5">easy</font><font color="#CCCCCC"> to rotate</font><font color="#E5E5E5"> so they should be rotated</font>

502
00:20:08,710 --> 00:20:14,230
frequently<font color="#E5E5E5"> doctor recommends every six</font>

503
00:20:10,629 --> 00:20:16,269
months<font color="#CCCCCC"> or on</font><font color="#E5E5E5"> events such as disclosing</font>

504
00:20:14,230 --> 00:20:18,549
it through checking<font color="#CCCCCC"> into version control</font>

505
00:20:16,269 --> 00:20:20,139
<font color="#CCCCCC">pretty easy to</font><font color="#E5E5E5"> run like</font><font color="#CCCCCC"> git hooks</font><font color="#E5E5E5"> that</font>

506
00:20:18,549 --> 00:20:22,090
<font color="#E5E5E5">can actually detect this or you can use</font>

507
00:20:20,139 --> 00:20:24,248
the github API<font color="#CCCCCC"> to find that through</font><font color="#E5E5E5"> your</font>

508
00:20:22,090 --> 00:20:26,619
repos<font color="#E5E5E5"> so you can write a job that will</font>

509
00:20:24,249 --> 00:20:31,600
search for<font color="#CCCCCC"> this and anytime that happens</font>

510
00:20:26,619 --> 00:20:32,709
boom just just expire the token<font color="#CCCCCC"> or if</font>

511
00:20:31,600 --> 00:20:34,480
you have other reason to<font color="#E5E5E5"> believe that a</font>

512
00:20:32,710 --> 00:20:37,330
swarm node may have been compromised<font color="#CCCCCC"> if</font>

513
00:20:34,480 --> 00:20:39,639
you wish<font color="#E5E5E5"> or you</font><font color="#CCCCCC"> can also rotate it if</font>

514
00:20:37,330 --> 00:20:41,408
you want<font color="#E5E5E5"> to guarantee that no new nodes</font>

515
00:20:39,639 --> 00:20:43,869
can join the<font color="#E5E5E5"> system however when you do</font>

516
00:20:41,409 --> 00:20:46,269
this you're<font color="#E5E5E5"> preventing this swarm from</font>

517
00:20:43,869 --> 00:20:47,529
<font color="#CCCCCC">auto-scaling up new nodes and</font><font color="#E5E5E5"> if you're</font>

518
00:20:46,269 --> 00:20:49,720
using<font color="#E5E5E5"> like an auto scaling group in</font>

519
00:20:47,529 --> 00:20:52,509
something<font color="#E5E5E5"> like AWS this might not be</font>

520
00:20:49,720 --> 00:20:54,159
desirable or minimum at every six months

521
00:20:52,509 --> 00:20:56,320
<font color="#CCCCCC">one</font><font color="#E5E5E5"> of the kind of most important things</font>

522
00:20:54,159 --> 00:20:58,509
<font color="#CCCCCC">to do however</font><font color="#E5E5E5"> to mitigate this are to</font>

523
00:20:56,320 --> 00:21:01,509
use node and service labels to

524
00:20:58,509 --> 00:21:04,809
<font color="#CCCCCC">segregates</font><font color="#E5E5E5"> sensitive services so swarm</font>

525
00:21:01,509 --> 00:21:06,759
lets you<font color="#E5E5E5"> designate certain services is</font>

526
00:21:04,809 --> 00:21:09,100
sensitive or just using<font color="#E5E5E5"> labels and</font><font color="#CCCCCC"> nose</font>

527
00:21:06,759 --> 00:21:10,990
is sensitive<font color="#CCCCCC"> as well and this is all</font>

528
00:21:09,100 --> 00:21:13,449
kept in the manager<font color="#CCCCCC"> State and even a</font>

529
00:21:10,990 --> 00:21:15,369
rogue node cannot give itself a label<font color="#E5E5E5"> so</font>

530
00:21:13,450 --> 00:21:17,169
when we perform an<font color="#CCCCCC"> attack like this</font><font color="#E5E5E5"> we</font>

531
00:21:15,369 --> 00:21:18,809
will be essentially an unlabeled node

532
00:21:17,169 --> 00:21:23,110
and so<font color="#E5E5E5"> we'll only get</font><font color="#CCCCCC"> access to</font>

533
00:21:18,809 --> 00:21:25,960
unlabeled services so this<font color="#CCCCCC"> requires</font><font color="#E5E5E5"> that</font>

534
00:21:23,110 --> 00:21:29,740
you go through<font color="#E5E5E5"> and actually you know do</font>

535
00:21:25,960 --> 00:21:33,809
all<font color="#CCCCCC"> that so that's that's</font><font color="#E5E5E5"> swarm let's</font>

536
00:21:29,740 --> 00:21:36,759
talk about kubernetes so kubernetes<font color="#E5E5E5"> is</font>

537
00:21:33,809 --> 00:21:39,369
one of the largest<font color="#E5E5E5"> most active open</font>

538
00:21:36,759 --> 00:21:42,610
<font color="#E5E5E5">source projects right now it's pretty</font>

539
00:21:39,369 --> 00:21:45,639
startling how active it<font color="#CCCCCC"> isn't how fast</font>

540
00:21:42,610 --> 00:21:46,928
it's growing<font color="#CCCCCC"> this chart I took from</font><font color="#E5E5E5"> a</font>

541
00:21:45,639 --> 00:21:50,799
blog post from<font color="#E5E5E5"> the cloud native</font>

542
00:21:46,929 --> 00:21:53,559
computing foundation shows on the<font color="#E5E5E5"> on the</font>

543
00:21:50,799 --> 00:21:55,690
Left logarithmic PRS<font color="#E5E5E5"> and issues and</font>

544
00:21:53,559 --> 00:21:57,999
going to the right<font color="#E5E5E5"> logarithmic because</font>

545
00:21:55,690 --> 00:21:59,830
<font color="#CCCCCC">our going up is</font><font color="#E5E5E5"> PRS going to the right</font>

546
00:21:57,999 --> 00:22:00,879
is<font color="#E5E5E5"> a number of commits so you can see</font>

547
00:21:59,830 --> 00:22:03,699
that even<font color="#E5E5E5"> though kubernetes is</font><font color="#CCCCCC"> a</font>

548
00:22:00,879 --> 00:22:04,428
relatively young<font color="#E5E5E5"> project has a</font><font color="#CCCCCC"> massive</font>

549
00:22:03,700 --> 00:22:07,940
amount<font color="#E5E5E5"> of activity</font>

550
00:22:04,429 --> 00:22:09,649
in you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> PRS and issues and it's</font>

551
00:22:07,940 --> 00:22:12,590
moving quickly<font color="#E5E5E5"> started moving up moving</font>

552
00:22:09,649 --> 00:22:14,869
<font color="#E5E5E5">quickly to the right towards</font><font color="#CCCCCC"> Linux and</font>

553
00:22:12,590 --> 00:22:16,009
chromium<font color="#E5E5E5"> so it's there's a</font><font color="#CCCCCC"> lot of</font>

554
00:22:14,869 --> 00:22:18,610
activity and it's actually<font color="#E5E5E5"> pretty</font>

555
00:22:16,009 --> 00:22:20,929
remarkable how many large companies<font color="#E5E5E5"> have</font>

556
00:22:18,610 --> 00:22:24,860
full-time engineers contributing to this

557
00:22:20,929 --> 00:22:27,110
this<font color="#E5E5E5"> project</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can kind of see</font>

558
00:22:24,860 --> 00:22:31,789
where all this is going<font color="#CCCCCC"> so while swarm</font>

559
00:22:27,110 --> 00:22:35,719
was easy to understand kubernetes is a

560
00:22:31,789 --> 00:22:37,850
bit more complicated<font color="#CCCCCC"> and the complexity</font>

561
00:22:35,720 --> 00:22:42,350
of it<font color="#E5E5E5"> is actually a lot of the benefits</font>

562
00:22:37,850 --> 00:22:45,049
<font color="#E5E5E5">because for a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> modern services the</font>

563
00:22:42,350 --> 00:22:46,820
model of the service model<font color="#E5E5E5"> that is</font>

564
00:22:45,049 --> 00:22:50,509
implemented in docker swarm may not be

565
00:22:46,820 --> 00:22:51,529
sufficient<font color="#E5E5E5"> so the architecture let's go</font>

566
00:22:50,509 --> 00:22:55,460
quickly over<font color="#E5E5E5"> the architecture of</font>

567
00:22:51,529 --> 00:22:58,159
kubernetes<font color="#CCCCCC"> it starts with you know</font><font color="#E5E5E5"> you</font>

568
00:22:55,460 --> 00:23:00,470
have a again like a central key

569
00:22:58,159 --> 00:23:03,070
distributed key-value store in

570
00:23:00,470 --> 00:23:05,809
kubernetes this is called<font color="#CCCCCC"> Etsy D and</font>

571
00:23:03,070 --> 00:23:07,759
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> simply the backing store for all</font>

572
00:23:05,809 --> 00:23:11,990
<font color="#E5E5E5">state for the cluster in front of that</font>

573
00:23:07,759 --> 00:23:13,789
<font color="#CCCCCC">you have API servers that implement this</font>

574
00:23:11,990 --> 00:23:17,659
you know an interface to the scheduling

575
00:23:13,789 --> 00:23:19,399
and<font color="#E5E5E5"> and operations of the cluster and</font>

576
00:23:17,659 --> 00:23:23,269
each node runs an entity called<font color="#CCCCCC"> the</font>

577
00:23:19,399 --> 00:23:25,399
couplet<font color="#E5E5E5"> couplet is you know it presents</font>

578
00:23:23,269 --> 00:23:28,759
its own<font color="#E5E5E5"> API locally but it also or that</font>

579
00:23:25,399 --> 00:23:30,860
the<font color="#CCCCCC"> kubernetes master will speak to and</font>

580
00:23:28,759 --> 00:23:32,330
<font color="#CCCCCC">is</font><font color="#E5E5E5"> it responsible for scheduling and</font>

581
00:23:30,860 --> 00:23:34,639
running actual containers on the<font color="#E5E5E5"> node</font>

582
00:23:32,330 --> 00:23:37,009
and in kubernetes<font color="#E5E5E5"> these are called pods</font>

583
00:23:34,639 --> 00:23:40,939
<font color="#CCCCCC">you don't run a single container you run</font>

584
00:23:37,009 --> 00:23:42,980
a pod<font color="#E5E5E5"> that has you know the kind of</font>

585
00:23:40,940 --> 00:23:44,509
<font color="#E5E5E5">forms the</font><font color="#CCCCCC"> Nate</font><font color="#E5E5E5"> the Linux namespace and</font>

586
00:23:42,980 --> 00:23:48,279
multiple containers run concurrently in

587
00:23:44,509 --> 00:23:50,720
it<font color="#E5E5E5"> and kubernetes is</font><font color="#CCCCCC"> a very abstract</font>

588
00:23:48,279 --> 00:23:52,580
<font color="#E5E5E5">architecture there's multiple plugins to</font>

589
00:23:50,720 --> 00:23:55,009
implement various<font color="#CCCCCC"> features so you have a</font>

590
00:23:52,580 --> 00:23:57,080
declarative<font color="#E5E5E5"> API saying I have in this</font>

591
00:23:55,009 --> 00:23:58,879
<font color="#E5E5E5">network policy that I want to happen and</font>

592
00:23:57,080 --> 00:24:02,029
there's<font color="#CCCCCC"> multiple plugins</font><font color="#E5E5E5"> that you can</font>

593
00:23:58,879 --> 00:24:04,759
<font color="#CCCCCC">use to implement</font><font color="#E5E5E5"> that so you'll have</font>

594
00:24:02,029 --> 00:24:06,110
things like we've calico and<font color="#E5E5E5"> so on to</font>

595
00:24:04,759 --> 00:24:09,259
implement these policies that<font color="#E5E5E5"> you've</font>

596
00:24:06,110 --> 00:24:11,949
declared<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> go briefly over some of</font>

597
00:24:09,259 --> 00:24:14,240
the objects that's<font color="#E5E5E5"> going to show the</font>

598
00:24:11,950 --> 00:24:16,340
<font color="#CCCCCC">scope of what kubernetes actually lets</font>

599
00:24:14,240 --> 00:24:17,290
permits you to<font color="#E5E5E5"> do so we have nodes and</font>

600
00:24:16,340 --> 00:24:19,570
containers

601
00:24:17,290 --> 00:24:21,580
pretty obvious<font color="#CCCCCC"> I mentioned pods but we</font>

602
00:24:19,570 --> 00:24:23,139
also have<font color="#E5E5E5"> entities like a</font><font color="#CCCCCC"> namespace we</font>

603
00:24:21,580 --> 00:24:26,080
have multiple namespaces so that you can

604
00:24:23,140 --> 00:24:28,960
partition out your cluster<font color="#E5E5E5"> to different</font>

605
00:24:26,080 --> 00:24:31,110
<font color="#E5E5E5">groups and different teams using</font><font color="#CCCCCC"> the</font>

606
00:24:28,960 --> 00:24:33,340
same hardware<font color="#CCCCCC"> and they're not able to</font>

607
00:24:31,110 --> 00:24:35,439
and if<font color="#CCCCCC"> you configure things</font><font color="#E5E5E5"> correctly</font>

608
00:24:33,340 --> 00:24:38,110
<font color="#E5E5E5">not able to see or</font><font color="#CCCCCC"> interact with</font>

609
00:24:35,440 --> 00:24:40,210
entities<font color="#CCCCCC"> outside of their namespace</font><font color="#E5E5E5"> so</font>

610
00:24:38,110 --> 00:24:41,830
what<font color="#E5E5E5"> some people or</font><font color="#CCCCCC"> some environments</font>

611
00:24:40,210 --> 00:24:44,830
<font color="#E5E5E5">would use something</font><font color="#CCCCCC"> like this</font><font color="#E5E5E5"> for is to</font>

612
00:24:41,830 --> 00:24:46,960
<font color="#CCCCCC">have their production their development</font>

613
00:24:44,830 --> 00:24:48,909
<font color="#E5E5E5">you know test staging and production</font>

614
00:24:46,960 --> 00:24:50,830
environments<font color="#CCCCCC"> on the same hardware</font>

615
00:24:48,910 --> 00:24:52,870
however in separate namespaces<font color="#CCCCCC"> so you</font>

616
00:24:50,830 --> 00:24:55,120
can<font color="#CCCCCC"> ratite it can achieve a lower cost</font>

617
00:24:52,870 --> 00:24:57,639
and<font color="#E5E5E5"> greater scale doing that and just</font>

618
00:24:55,120 --> 00:24:59,709
using namespaces to isolate<font color="#E5E5E5"> rather than</font>

619
00:24:57,640 --> 00:25:01,630
separate<font color="#CCCCCC"> hardware and you can also apply</font>

620
00:24:59,710 --> 00:25:05,200
the resource constraints to a namespace

621
00:25:01,630 --> 00:25:07,390
<font color="#E5E5E5">so you can make sure</font><font color="#CCCCCC"> that jobs that the</font>

622
00:25:05,200 --> 00:25:09,700
data science<font color="#E5E5E5"> team</font><font color="#CCCCCC"> is doing that might be</font>

623
00:25:07,390 --> 00:25:11,260
<font color="#E5E5E5">CPU heavy are not interfering with the</font>

624
00:25:09,700 --> 00:25:14,460
<font color="#E5E5E5">latency-sensitive production jobs</font>

625
00:25:11,260 --> 00:25:17,080
serving you know<font color="#E5E5E5"> for internet services</font>

626
00:25:14,460 --> 00:25:19,620
<font color="#CCCCCC">pods all communicate internally through</font>

627
00:25:17,080 --> 00:25:23,280
what is called a<font color="#E5E5E5"> service service is a</font>

628
00:25:19,620 --> 00:25:26,290
virtual IP<font color="#E5E5E5"> that allows communication</font>

629
00:25:23,280 --> 00:25:28,530
<font color="#E5E5E5">between pods so that's how you'll you'll</font>

630
00:25:26,290 --> 00:25:30,430
find each other and and communicate

631
00:25:28,530 --> 00:25:33,070
replication controllers are just one of

632
00:25:30,430 --> 00:25:37,140
<font color="#CCCCCC">the</font><font color="#E5E5E5"> many other Metapod abstractions</font><font color="#CCCCCC"> that</font>

633
00:25:33,070 --> 00:25:40,540
let you scale services<font color="#E5E5E5"> up and down and</font>

634
00:25:37,140 --> 00:25:43,500
ingress is kind<font color="#CCCCCC"> of my favorite which</font>

635
00:25:40,540 --> 00:25:47,440
lets you route HTTP requests based<font color="#E5E5E5"> on</font>

636
00:25:43,500 --> 00:25:49,480
based on path and and<font color="#E5E5E5"> host to arbitrary</font>

637
00:25:47,440 --> 00:25:51,520
services and pods so you can have you

638
00:25:49,480 --> 00:25:53,530
<font color="#CCCCCC">know one hostname that gets basically</font>

639
00:25:51,520 --> 00:25:56,050
farmed out to<font color="#E5E5E5"> various</font><font color="#CCCCCC"> things inside your</font>

640
00:25:53,530 --> 00:25:57,639
<font color="#E5E5E5">cluster</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is relatively new</font><font color="#CCCCCC"> in</font>

641
00:25:56,050 --> 00:26:00,940
kubernetes but it gives you a lot of

642
00:25:57,640 --> 00:26:02,290
<font color="#E5E5E5">functionality that is really useful</font><font color="#CCCCCC"> so</font>

643
00:26:00,940 --> 00:26:05,320
the<font color="#E5E5E5"> the security mechanisms of</font>

644
00:26:02,290 --> 00:26:09,159
kubernetes are being very rapidly

645
00:26:05,320 --> 00:26:10,389
developed and it's just<font color="#E5E5E5"> about every most</font>

646
00:26:09,160 --> 00:26:13,330
of<font color="#E5E5E5"> things</font><font color="#CCCCCC"> i'm going</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about are</font>

647
00:26:10,390 --> 00:26:17,500
you know<font color="#E5E5E5"> less than are either alpha or</font>

648
00:26:13,330 --> 00:26:20,260
beta<font color="#E5E5E5"> or less than a month old so the</font>

649
00:26:17,500 --> 00:26:23,410
first most important one<font color="#CCCCCC"> that if you</font>

650
00:26:20,260 --> 00:26:24,850
don't<font color="#E5E5E5"> have your entire cluster is</font>

651
00:26:23,410 --> 00:26:26,590
essentially one security domain

652
00:26:24,850 --> 00:26:28,209
<font color="#E5E5E5">regardless of the user permissions</font>

653
00:26:26,590 --> 00:26:29,360
inside a container if you follow like

654
00:26:28,210 --> 00:26:31,039
the docker

655
00:26:29,360 --> 00:26:34,789
hardening guidelines they don't really

656
00:26:31,039 --> 00:26:38,059
<font color="#E5E5E5">matter</font><font color="#CCCCCC"> when you have no are back enabled</font>

657
00:26:34,789 --> 00:26:39,499
on a kubernetes cluster<font color="#CCCCCC"> only incriminate</font>

658
00:26:38,059 --> 00:26:42,230
is<font color="#E5E5E5"> one point six in greater is it</font>

659
00:26:39,499 --> 00:26:45,830
enabled by default<font color="#E5E5E5"> however</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

660
00:26:42,230 --> 00:26:47,239
<font color="#E5E5E5">installations and guides don't work with</font>

661
00:26:45,830 --> 00:26:49,759
it enabled so<font color="#E5E5E5"> you</font><font color="#CCCCCC"> if you're</font><font color="#E5E5E5"> trying to</font>

662
00:26:47,239 --> 00:26:51,889
<font color="#E5E5E5">install packages</font><font color="#CCCCCC"> from things like helm</font>

663
00:26:49,759 --> 00:26:53,409
<font color="#CCCCCC">they may not work with</font><font color="#E5E5E5"> our back so a lot</font>

664
00:26:51,889 --> 00:26:55,668
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people are still turning it off</font>

665
00:26:53,409 --> 00:26:57,679
<font color="#CCCCCC">another</font><font color="#E5E5E5"> key component that you want to</font>

666
00:26:55,669 --> 00:27:00,799
make<font color="#CCCCCC"> sure you have enabled is the pod</font>

667
00:26:57,679 --> 00:27:04,070
security policy admission controller<font color="#E5E5E5"> so</font>

668
00:27:00,799 --> 00:27:05,149
<font color="#E5E5E5">this is the entity that runs in the on</font>

669
00:27:04,070 --> 00:27:07,428
the<font color="#CCCCCC"> masternodes</font>

670
00:27:05,149 --> 00:27:10,899
that will enforce security requirements

671
00:27:07,429 --> 00:27:13,669
like not<font color="#E5E5E5"> letting anyone execute a</font>

672
00:27:10,899 --> 00:27:14,748
<font color="#CCCCCC">privileged</font><font color="#E5E5E5"> note you know in one of these</font>

673
00:27:13,669 --> 00:27:17,029
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can declare</font><font color="#E5E5E5"> in Cleburne eighties is</font>

674
00:27:14,749 --> 00:27:18,559
<font color="#CCCCCC">i want to run a</font><font color="#E5E5E5"> privileged</font><font color="#CCCCCC"> pod i want to</font>

675
00:27:17,029 --> 00:27:20,210
run this pod but<font color="#E5E5E5"> i want</font><font color="#CCCCCC"> to give</font><font color="#E5E5E5"> it you</font>

676
00:27:18,559 --> 00:27:21,710
<font color="#CCCCCC">know full host privileges what i wanted</font>

677
00:27:20,210 --> 00:27:24,830
<font color="#E5E5E5">to give it access to the host network</font>

678
00:27:21,710 --> 00:27:26,929
<font color="#CCCCCC">all these things are disabled by the pod</font>

679
00:27:24,830 --> 00:27:29,139
security policy<font color="#E5E5E5"> and this is something</font>

680
00:27:26,929 --> 00:27:31,279
<font color="#CCCCCC">that was</font><font color="#E5E5E5"> contributed to kubernetes</font>

681
00:27:29,139 --> 00:27:33,350
effort developed first in<font color="#E5E5E5"> red hat's</font>

682
00:27:31,279 --> 00:27:36,109
<font color="#E5E5E5">OpenShift and then contribute upstream</font>

683
00:27:33,350 --> 00:27:39,019
to open source kubernetes<font color="#E5E5E5"> and one thing</font>

684
00:27:36,109 --> 00:27:40,428
<font color="#E5E5E5">i wanted</font><font color="#CCCCCC"> to clarify is that most of</font>

685
00:27:39,019 --> 00:27:42,950
<font color="#E5E5E5">something talking</font><font color="#CCCCCC"> about is all open</font>

686
00:27:40,429 --> 00:27:45,259
source kubernetes<font color="#E5E5E5"> and there are</font>

687
00:27:42,950 --> 00:27:46,759
commercial distributions<font color="#CCCCCC"> it's like you</font>

688
00:27:45,259 --> 00:27:49,539
know<font color="#E5E5E5"> like</font><font color="#CCCCCC"> red hats openshift</font>

689
00:27:46,759 --> 00:27:51,859
core OS<font color="#E5E5E5"> tectonic google container engine</font>

690
00:27:49,539 --> 00:27:53,179
but there's a lot of activity happening

691
00:27:51,859 --> 00:27:55,249
<font color="#E5E5E5">and open so any open source</font>

692
00:27:53,179 --> 00:27:56,779
distributions<font color="#E5E5E5"> and installers that</font><font color="#CCCCCC"> are</font>

693
00:27:55,249 --> 00:27:59,989
describing<font color="#E5E5E5"> them as production grade</font>

694
00:27:56,779 --> 00:28:01,460
production<font color="#E5E5E5"> ready</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> aren't as explicit</font>

695
00:27:59,989 --> 00:28:05,929
about how<font color="#E5E5E5"> many of the security</font><font color="#CCCCCC"> features</font>

696
00:28:01,460 --> 00:28:06,950
<font color="#E5E5E5">aren't enabled or in existence that you</font>

697
00:28:05,929 --> 00:28:09,289
would want if you<font color="#CCCCCC"> don't want your entire</font>

698
00:28:06,950 --> 00:28:10,730
<font color="#E5E5E5">closure to be one security domain so the</font>

699
00:28:09,289 --> 00:28:13,639
other one is<font color="#CCCCCC"> the node restriction and</font>

700
00:28:10,730 --> 00:28:17,049
mission controller this<font color="#CCCCCC"> is a very very</font>

701
00:28:13,639 --> 00:28:20,090
<font color="#E5E5E5">new this I think it's alpha right now</font>

702
00:28:17,049 --> 00:28:22,789
<font color="#CCCCCC">prevents couplets from</font><font color="#E5E5E5"> obtaining</font>

703
00:28:20,090 --> 00:28:25,220
resources<font color="#CCCCCC"> for pods that are</font><font color="#E5E5E5"> not</font>

704
00:28:22,789 --> 00:28:28,489
scheduled<font color="#CCCCCC"> onto them similar to Dockers</font>

705
00:28:25,220 --> 00:28:30,169
<font color="#CCCCCC">least</font><font color="#E5E5E5"> privilege architecture and there's</font>

706
00:28:28,489 --> 00:28:31,609
<font color="#CCCCCC">also</font><font color="#E5E5E5"> Network policy resources which</font>

707
00:28:30,169 --> 00:28:33,590
allows you<font color="#E5E5E5"> to apply isolation</font>

708
00:28:31,609 --> 00:28:35,689
segmentation so that your workloads can

709
00:28:33,590 --> 00:28:36,859
be segregated<font color="#E5E5E5"> however one thing</font><font color="#CCCCCC"> that I</font>

710
00:28:35,690 --> 00:28:40,460
<font color="#E5E5E5">would point out is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this doesn't</font>

711
00:28:36,859 --> 00:28:42,800
<font color="#E5E5E5">actually fully let you control</font>

712
00:28:40,460 --> 00:28:45,860
segregation from<font color="#E5E5E5"> the control plane</font>

713
00:28:42,800 --> 00:28:50,270
so a lot of the couplet<font color="#CCCCCC"> the master</font><font color="#E5E5E5"> API</font>

714
00:28:45,860 --> 00:28:52,459
are not actually restricted by these so

715
00:28:50,270 --> 00:28:54,230
the let's go into the attack surface<font color="#CCCCCC"> if</font>

716
00:28:52,460 --> 00:29:01,450
<font color="#E5E5E5">you get code execution and equipment</font><font color="#CCCCCC"> and</font>

717
00:28:54,230 --> 00:29:04,720
a pod in<font color="#CCCCCC"> a kubernetes environment the</font>

718
00:29:01,450 --> 00:29:08,600
most<font color="#E5E5E5"> surprising thing that I noticed and</font>

719
00:29:04,720 --> 00:29:10,340
<font color="#CCCCCC">I was so pretty surprised</font><font color="#E5E5E5"> by every pod</font>

720
00:29:08,600 --> 00:29:13,129
by default has access to a service

721
00:29:10,340 --> 00:29:14,720
account token<font color="#E5E5E5"> mounted</font><font color="#CCCCCC"> into the pod</font><font color="#E5E5E5"> so</font>

722
00:29:13,130 --> 00:29:16,040
<font color="#E5E5E5">even if you you know don't build this</font>

723
00:29:14,720 --> 00:29:18,230
<font color="#E5E5E5">into your container</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> injected by the</font>

724
00:29:16,040 --> 00:29:20,450
orchestrator and this token gives you

725
00:29:18,230 --> 00:29:23,690
your and you know even unprivileged

726
00:29:20,450 --> 00:29:26,450
users inside the inside<font color="#E5E5E5"> the container of</font>

727
00:29:23,690 --> 00:29:29,570
cluster level privileges and without<font color="#CCCCCC"> our</font>

728
00:29:26,450 --> 00:29:33,230
back that's<font color="#E5E5E5"> cluster level root token is</font>

729
00:29:29,570 --> 00:29:35,240
word<font color="#E5E5E5"> readable and the the service</font>

730
00:29:33,230 --> 00:29:36,470
<font color="#E5E5E5">account lets you do just</font><font color="#CCCCCC"> about anything</font>

731
00:29:35,240 --> 00:29:38,690
like<font color="#E5E5E5"> launch new pods</font><font color="#CCCCCC"> launching</font>

732
00:29:36,470 --> 00:29:40,640
privileged pods<font color="#E5E5E5"> and you can do all this</font>

733
00:29:38,690 --> 00:29:42,860
<font color="#CCCCCC">the other model that</font><font color="#E5E5E5"> is kind of unique</font>

734
00:29:40,640 --> 00:29:46,100
<font color="#CCCCCC">to kubernetes is that the service model</font>

735
00:29:42,860 --> 00:29:47,840
<font color="#E5E5E5">is implemented like the service virtual</font>

736
00:29:46,100 --> 00:29:50,389
IP<font color="#CCCCCC"> ease and load</font><font color="#E5E5E5"> balancing are</font>

737
00:29:47,840 --> 00:29:53,510
implemented<font color="#E5E5E5"> on the node not in some</font>

738
00:29:50,390 --> 00:29:55,910
<font color="#E5E5E5">central infrastructure so it makes it</font>

739
00:29:53,510 --> 00:29:59,270
really<font color="#E5E5E5"> fast to scan service VIPs because</font>

740
00:29:55,910 --> 00:30:04,040
they're just<font color="#E5E5E5"> going through like local IP</font>

741
00:29:59,270 --> 00:30:07,070
<font color="#CCCCCC">tables configurations so if you want</font><font color="#E5E5E5"> to</font>

742
00:30:04,040 --> 00:30:09,440
do that<font color="#CCCCCC"> you know it's pretty</font><font color="#E5E5E5"> easy to</font>

743
00:30:07,070 --> 00:30:10,820
<font color="#E5E5E5">find what the service subnet is you'll</font>

744
00:30:09,440 --> 00:30:13,460
have<font color="#CCCCCC"> an environment variable kubernetes</font>

745
00:30:10,820 --> 00:30:16,610
service host that<font color="#CCCCCC"> is a service IP</font><font color="#E5E5E5"> that</font>

746
00:30:13,460 --> 00:30:19,910
<font color="#E5E5E5">gives you the the host the IP address of</font>

747
00:30:16,610 --> 00:30:21,740
<font color="#E5E5E5">the kubernetes master</font><font color="#CCCCCC"> api</font><font color="#E5E5E5"> and so you can</font>

748
00:30:19,910 --> 00:30:24,770
<font color="#E5E5E5">just port scan this the subnet</font><font color="#CCCCCC"> for</font>

749
00:30:21,740 --> 00:30:27,080
well-known<font color="#E5E5E5"> ports look for services</font><font color="#CCCCCC"> to</font>

750
00:30:24,770 --> 00:30:28,570
actually<font color="#CCCCCC"> interact with another</font><font color="#E5E5E5"> way you</font>

751
00:30:27,080 --> 00:30:32,120
can do this is just<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> through</font>

752
00:30:28,570 --> 00:30:34,250
service names in<font color="#CCCCCC"> Kubb dns Kubb dns is</font>

753
00:30:32,120 --> 00:30:36,739
the<font color="#E5E5E5"> clustered dns service that allows</font>

754
00:30:34,250 --> 00:30:39,410
service<font color="#E5E5E5"> discovery so you can query</font><font color="#CCCCCC"> for</font>

755
00:30:36,740 --> 00:30:41,810
common service<font color="#CCCCCC"> name namespace SVC</font>

756
00:30:39,410 --> 00:30:43,880
cluster dot local<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> instance if you</font>

757
00:30:41,810 --> 00:30:45,440
didn't have<font color="#E5E5E5"> the IP address for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> that</font>

758
00:30:43,880 --> 00:30:47,180
environment variable you could just do a

759
00:30:45,440 --> 00:30:49,570
DNS lookup through kubernetes not

760
00:30:47,180 --> 00:30:51,620
default<font color="#E5E5E5"> default is the default namespace</font>

761
00:30:49,570 --> 00:30:55,879
<font color="#E5E5E5">SVC cluster a local to get the</font>

762
00:30:51,620 --> 00:30:57,090
kubernetes<font color="#E5E5E5"> api servers so let's</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

763
00:30:55,880 --> 00:30:59,760
see what

764
00:30:57,090 --> 00:31:02,310
shellshock looks like if<font color="#E5E5E5"> you exploited</font>

765
00:30:59,760 --> 00:31:04,470
on kubernetes<font color="#E5E5E5"> so</font><font color="#CCCCCC"> exploits shellshock</font><font color="#E5E5E5"> in</font>

766
00:31:02,310 --> 00:31:06,810
a vulnerable<font color="#E5E5E5"> container next</font><font color="#CCCCCC"> thing an</font>

767
00:31:04,470 --> 00:31:09,120
attacker will do is download some tools

768
00:31:06,810 --> 00:31:10,740
<font color="#E5E5E5">so one thing they also might</font><font color="#CCCCCC"> be going</font>

769
00:31:09,120 --> 00:31:12,659
<font color="#CCCCCC">through</font><font color="#E5E5E5"> your mind is how much this</font>

770
00:31:10,740 --> 00:31:14,490
sounds like the<font color="#E5E5E5"> common pattern of</font>

771
00:31:12,660 --> 00:31:16,980
attacking a Windows desktop<font color="#CCCCCC"> you know a</font>

772
00:31:14,490 --> 00:31:18,930
lot of<font color="#E5E5E5"> you get</font><font color="#CCCCCC"> initial access and then</font>

773
00:31:16,980 --> 00:31:21,630
download something like me me cats and

774
00:31:18,930 --> 00:31:23,430
then lateral<font color="#CCCCCC"> pros escalation these same</font>

775
00:31:21,630 --> 00:31:24,630
patterns<font color="#CCCCCC"> are actually available</font><font color="#E5E5E5"> at the</font>

776
00:31:23,430 --> 00:31:27,120
<font color="#CCCCCC">cluster level so we're gonna</font><font color="#E5E5E5"> kind of go</font>

777
00:31:24,630 --> 00:31:29,850
through<font color="#CCCCCC"> that same same flow so download</font>

778
00:31:27,120 --> 00:31:31,709
<font color="#CCCCCC">a common tool not-not-not a piece of</font>

779
00:31:29,850 --> 00:31:34,980
malware just<font color="#CCCCCC"> coop CTL the standard tool</font>

780
00:31:31,710 --> 00:31:36,450
to interface<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the API and use the</font>

781
00:31:34,980 --> 00:31:38,640
service account token to authenticate to

782
00:31:36,450 --> 00:31:40,260
<font color="#E5E5E5">the API servers and you can</font><font color="#CCCCCC"> adjust</font>

783
00:31:38,640 --> 00:31:42,450
<font color="#E5E5E5">escalate privileges through calls the</font>

784
00:31:40,260 --> 00:31:44,730
kubernetes api<font color="#E5E5E5"> or scan for something</font>

785
00:31:42,450 --> 00:31:48,150
<font color="#CCCCCC">useful so i'm</font><font color="#E5E5E5"> picking on one particular</font>

786
00:31:44,730 --> 00:31:49,680
<font color="#E5E5E5">service here the tiller deployment</font>

787
00:31:48,150 --> 00:31:51,750
service<font color="#CCCCCC"> i'll talk a</font><font color="#E5E5E5"> little bit more</font>

788
00:31:49,680 --> 00:31:52,980
<font color="#CCCCCC">about what tiller is in a minute</font><font color="#E5E5E5"> so</font>

789
00:31:51,750 --> 00:31:54,300
let's look<font color="#E5E5E5"> at the environment that you</font>

790
00:31:52,980 --> 00:31:56,400
get from<font color="#E5E5E5"> a shell inside the container</font>

791
00:31:54,300 --> 00:31:57,960
<font color="#E5E5E5">that's specific to kubernetes you have</font>

792
00:31:56,400 --> 00:32:00,420
all these environment variables<font color="#E5E5E5"> giving</font>

793
00:31:57,960 --> 00:32:02,850
you the API server<font color="#CCCCCC"> which I mentioned</font>

794
00:32:00,420 --> 00:32:06,270
<font color="#CCCCCC">before if you look at the mount points</font>

795
00:32:02,850 --> 00:32:07,709
<font color="#E5E5E5">you can see that the secrets are</font>

796
00:32:06,270 --> 00:32:09,750
<font color="#E5E5E5">typically mounted as in to the</font>

797
00:32:07,710 --> 00:32:12,630
<font color="#CCCCCC">filesystem and by default</font><font color="#E5E5E5"> that service</font>

798
00:32:09,750 --> 00:32:16,440
account token<font color="#E5E5E5"> is is mounted</font><font color="#CCCCCC"> into the</font>

799
00:32:12,630 --> 00:32:18,360
container<font color="#E5E5E5"> and using that token with a</font>

800
00:32:16,440 --> 00:32:20,370
you know<font color="#CCCCCC"> with a downloaded coop CTL or</font>

801
00:32:18,360 --> 00:32:22,379
some other<font color="#E5E5E5"> client we can start</font>

802
00:32:20,370 --> 00:32:26,159
interfacing with the<font color="#E5E5E5"> API we can talk to</font>

803
00:32:22,380 --> 00:32:27,780
<font color="#E5E5E5">you know list the nodes and</font><font color="#CCCCCC"> Val verify</font>

804
00:32:26,160 --> 00:32:30,840
that we have<font color="#E5E5E5"> some level of access and</font>

805
00:32:27,780 --> 00:32:33,750
then we can see<font color="#E5E5E5"> if we have</font><font color="#CCCCCC"> more access</font>

806
00:32:30,840 --> 00:32:35,189
by launching a<font color="#E5E5E5"> privileged</font><font color="#CCCCCC"> pot so the</font>

807
00:32:33,750 --> 00:32:37,650
example I give is<font color="#CCCCCC"> just a command-line</font>

808
00:32:35,190 --> 00:32:41,370
<font color="#E5E5E5">invocation</font><font color="#CCCCCC"> that will create a new pod</font>

809
00:32:37,650 --> 00:32:43,140
and of running the busybox container<font color="#E5E5E5"> why</font>

810
00:32:41,370 --> 00:32:46,110
busybox because it's<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> small it's</font>

811
00:32:43,140 --> 00:32:48,900
quick to<font color="#E5E5E5"> download and has you know a lot</font>

812
00:32:46,110 --> 00:32:51,449
<font color="#CCCCCC">of useful shell tools and I'm giving</font><font color="#E5E5E5"> it</font>

813
00:32:48,900 --> 00:32:54,330
a security context of privileged equals

814
00:32:51,450 --> 00:32:56,610
true so<font color="#CCCCCC"> just means we have root on</font><font color="#E5E5E5"> the</font>

815
00:32:54,330 --> 00:32:59,040
node from<font color="#CCCCCC"> this one call to the API</font><font color="#E5E5E5"> and</font>

816
00:32:56,610 --> 00:33:00,540
if you don't have our back enabled on

817
00:32:59,040 --> 00:33:03,450
your<font color="#E5E5E5"> cluster or you're running</font>

818
00:33:00,540 --> 00:33:05,159
<font color="#E5E5E5">essentially running kubernetes below 1.6</font>

819
00:33:03,450 --> 00:33:09,720
this is what is<font color="#E5E5E5"> possible from just about</font>

820
00:33:05,160 --> 00:33:10,360
any container so assuming<font color="#E5E5E5"> that that</font><font color="#CCCCCC"> is</font>

821
00:33:09,720 --> 00:33:11,950
fixed

822
00:33:10,360 --> 00:33:13,209
you know that you're running<font color="#E5E5E5"> either a</font>

823
00:33:11,950 --> 00:33:14,380
<font color="#E5E5E5">commercial distribution of kubernetes</font>

824
00:33:13,210 --> 00:33:17,440
that has addressed this you've adjusted

825
00:33:14,380 --> 00:33:19,240
yourself<font color="#CCCCCC"> for something else there's</font>

826
00:33:17,440 --> 00:33:21,430
other a lot of other lack of

827
00:33:19,240 --> 00:33:23,590
authentication inside the cluster<font color="#E5E5E5"> so one</font>

828
00:33:21,430 --> 00:33:25,480
popular<font color="#E5E5E5"> way to install software in</font>

829
00:33:23,590 --> 00:33:28,000
kubernetes environments<font color="#E5E5E5"> today is called</font>

830
00:33:25,480 --> 00:33:30,970
<font color="#E5E5E5">helm</font><font color="#CCCCCC"> it is the official package manager</font>

831
00:33:28,000 --> 00:33:33,970
for kubernetes and<font color="#E5E5E5"> it's actually really</font>

832
00:33:30,970 --> 00:33:35,890
cool<font color="#CCCCCC"> because what it lets</font><font color="#E5E5E5"> you do is have</font>

833
00:33:33,970 --> 00:33:38,380
essentially an app store<font color="#CCCCCC"> for your</font>

834
00:33:35,890 --> 00:33:40,600
cluster so you can install complicated

835
00:33:38,380 --> 00:33:44,320
infrastructure<font color="#E5E5E5"> such as you know spark</font>

836
00:33:40,600 --> 00:33:46,990
you can install you know<font color="#CCCCCC"> Kafka you can</font>

837
00:33:44,320 --> 00:33:48,100
install Cassandra<font color="#CCCCCC"> application you know</font>

838
00:33:46,990 --> 00:33:49,990
<font color="#CCCCCC">datacenter applications that</font>

839
00:33:48,100 --> 00:33:51,639
traditionally require entire teams to

840
00:33:49,990 --> 00:33:53,950
operate<font color="#E5E5E5"> can now be installed with like a</font>

841
00:33:51,640 --> 00:33:55,750
<font color="#E5E5E5">click of a button and there's software</font>

842
00:33:53,950 --> 00:33:57,970
operators inside communities that<font color="#E5E5E5"> will</font>

843
00:33:55,750 --> 00:34:02,140
even scale them<font color="#E5E5E5"> automatically for you so</font>

844
00:33:57,970 --> 00:34:03,730
it's it's pretty<font color="#E5E5E5"> awesome</font><font color="#CCCCCC"> but they</font><font color="#E5E5E5"> just</font>

845
00:34:02,140 --> 00:34:05,830
haven't<font color="#E5E5E5"> implemented anything any access</font>

846
00:34:03,730 --> 00:34:08,949
control yet or it's<font color="#CCCCCC"> just</font><font color="#E5E5E5"> not enable</font><font color="#CCCCCC"> it's</font>

847
00:34:05,830 --> 00:34:12,850
I think it's yeah there's an open github

848
00:34:08,949 --> 00:34:14,469
ticket to actually enable it<font color="#E5E5E5"> so if you</font>

849
00:34:12,850 --> 00:34:15,880
want if<font color="#E5E5E5"> you're have a shell on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> cluster</font>

850
00:34:14,469 --> 00:34:17,830
you<font color="#E5E5E5"> can just look for</font><font color="#CCCCCC"> the what's called</font>

851
00:34:15,880 --> 00:34:19,990
the tiller deploy service it's the way

852
00:34:17,830 --> 00:34:22,029
that helm is built<font color="#E5E5E5"> is you have the helm</font>

853
00:34:19,989 --> 00:34:23,439
<font color="#E5E5E5">command line and in order to start using</font>

854
00:34:22,030 --> 00:34:26,440
<font color="#E5E5E5">it you</font><font color="#CCCCCC"> need to deploy a privilege</font>

855
00:34:23,440 --> 00:34:27,670
service inside the inside your cluster

856
00:34:26,440 --> 00:34:28,389
to actually perform<font color="#E5E5E5"> the package</font>

857
00:34:27,670 --> 00:34:32,770
installations

858
00:34:28,389 --> 00:34:35,170
that's called tiller<font color="#E5E5E5"> so if you do a coop</font>

859
00:34:32,770 --> 00:34:38,770
<font color="#CCCCCC">DNS lookup for tiller deploy coop that</font>

860
00:34:35,170 --> 00:34:41,830
<font color="#CCCCCC">Kubb - system so</font><font color="#E5E5E5"> coop - system is the</font>

861
00:34:38,770 --> 00:34:43,600
system<font color="#CCCCCC"> namespace the default</font><font color="#E5E5E5"> port for it</font>

862
00:34:41,830 --> 00:34:46,480
is<font color="#CCCCCC"> four four one three four</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can</font>

863
00:34:43,600 --> 00:34:48,100
<font color="#E5E5E5">connect to</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> and so there's not a good</font>

864
00:34:46,480 --> 00:34:49,690
<font color="#E5E5E5">command-line client for it so I</font><font color="#CCCCCC"> just</font>

865
00:34:48,100 --> 00:34:52,659
<font color="#E5E5E5">wrote a quick one</font>

866
00:34:49,690 --> 00:34:55,929
it's a<font color="#E5E5E5"> G RPC interface all the code is</font>

867
00:34:52,659 --> 00:34:57,819
<font color="#E5E5E5">on github so it's just very</font><font color="#CCCCCC"> easy to to</font>

868
00:34:55,929 --> 00:35:00,970
write stuff<font color="#E5E5E5"> to interact with if you know</font>

869
00:34:57,820 --> 00:35:02,350
how to write<font color="#CCCCCC"> G RPC clients and then you</font>

870
00:35:00,970 --> 00:35:03,640
can do<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> helm command line</font>

871
00:35:02,350 --> 00:35:05,890
<font color="#E5E5E5">can do from inside</font><font color="#CCCCCC"> the cluster</font><font color="#E5E5E5"> you can</font>

872
00:35:03,640 --> 00:35:08,410
install packages query them uninstall

873
00:35:05,890 --> 00:35:09,520
<font color="#E5E5E5">them so because</font><font color="#CCCCCC"> it runs a privilege and</font>

874
00:35:08,410 --> 00:35:11,649
<font color="#E5E5E5">all the packages</font><font color="#CCCCCC"> that you're installing</font>

875
00:35:09,520 --> 00:35:13,270
<font color="#E5E5E5">have to have privileges even if you have</font>

876
00:35:11,650 --> 00:35:15,520
something<font color="#CCCCCC"> like a pod admission</font>

877
00:35:13,270 --> 00:35:18,130
controller<font color="#E5E5E5"> or pod security policy you're</font>

878
00:35:15,520 --> 00:35:20,950
<font color="#E5E5E5">like they're likely going to have have</font>

879
00:35:18,130 --> 00:35:22,780
to enable<font color="#E5E5E5"> tiller to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to bypass</font>

880
00:35:20,950 --> 00:35:24,149
that<font color="#E5E5E5"> so you can just talk</font><font color="#CCCCCC"> to tiller</font>

881
00:35:22,780 --> 00:35:27,730
instead

882
00:35:24,150 --> 00:35:29,260
the kind<font color="#E5E5E5"> of drilling</font><font color="#CCCCCC"> down some of my key</font>

883
00:35:27,730 --> 00:35:30,550
recommendations for securing kubernetes

884
00:35:29,260 --> 00:35:32,140
environments

885
00:35:30,550 --> 00:35:33,250
first and foremost<font color="#E5E5E5"> make sure that</font><font color="#CCCCCC"> our</font>

886
00:35:32,140 --> 00:35:35,259
back is enabled<font color="#E5E5E5"> and configured</font>

887
00:35:33,250 --> 00:35:37,210
appropriately<font color="#CCCCCC"> that's sort of one of</font>

888
00:35:35,260 --> 00:35:38,860
<font color="#E5E5E5">those loaded statements of like just</font>

889
00:35:37,210 --> 00:35:41,310
turn<font color="#E5E5E5"> on security there's actually a lot</font>

890
00:35:38,860 --> 00:35:44,500
that goes<font color="#CCCCCC"> into</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> because there's</font>

891
00:35:41,310 --> 00:35:46,360
<font color="#E5E5E5">still a bunch of sharp edges in the</font>

892
00:35:44,500 --> 00:35:49,120
security policies of kubernetes objects

893
00:35:46,360 --> 00:35:50,740
so for instance if you have a writable

894
00:35:49,120 --> 00:35:52,870
<font color="#E5E5E5">if you have access</font><font color="#CCCCCC"> to write</font><font color="#E5E5E5"> into a</font>

895
00:35:50,740 --> 00:35:55,990
namespace<font color="#CCCCCC"> and even if you have a pod</font>

896
00:35:52,870 --> 00:35:58,089
security controller that doesn't allow

897
00:35:55,990 --> 00:36:00,069
<font color="#E5E5E5">you to create privileged pods but a</font>

898
00:35:58,090 --> 00:36:02,590
privileged pod is already running<font color="#E5E5E5"> you</font>

899
00:36:00,070 --> 00:36:04,030
can create services<font color="#CCCCCC"> too early have a pod</font>

900
00:36:02,590 --> 00:36:05,590
<font color="#E5E5E5">that's running on the host</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> you</font>

901
00:36:04,030 --> 00:36:07,750
can create services to route<font color="#CCCCCC"> onto the</font>

902
00:36:05,590 --> 00:36:09,340
<font color="#CCCCCC">host network and once you have you know</font>

903
00:36:07,750 --> 00:36:10,810
a host network<font color="#CCCCCC"> access privileges</font>

904
00:36:09,340 --> 00:36:15,040
<font color="#E5E5E5">escalation is pretty easy through a</font>

905
00:36:10,810 --> 00:36:17,500
variety<font color="#E5E5E5"> of ways</font><font color="#CCCCCC"> so right now am</font><font color="#E5E5E5"> I kind</font>

906
00:36:15,040 --> 00:36:19,420
of if you<font color="#CCCCCC"> know even with our</font><font color="#E5E5E5"> back</font>

907
00:36:17,500 --> 00:36:21,550
enabled<font color="#E5E5E5"> having right access</font><font color="#CCCCCC"> to a</font>

908
00:36:19,420 --> 00:36:24,070
namespace<font color="#CCCCCC"> with any privileged pods is</font>

909
00:36:21,550 --> 00:36:27,100
pretty<font color="#E5E5E5"> quiet game over but it's it's you</font>

910
00:36:24,070 --> 00:36:29,140
<font color="#CCCCCC">know one step away you absolutely</font><font color="#E5E5E5"> need</font>

911
00:36:27,100 --> 00:36:33,610
to have<font color="#CCCCCC"> a pod security policy configured</font>

912
00:36:29,140 --> 00:36:36,339
<font color="#CCCCCC">if you are if you do if</font><font color="#E5E5E5"> you are letting</font>

913
00:36:33,610 --> 00:36:37,570
<font color="#E5E5E5">any jobs like automatic</font><font color="#CCCCCC"> or continuous</font>

914
00:36:36,340 --> 00:36:39,370
deployment jobs at the plate of the

915
00:36:37,570 --> 00:36:41,440
cluster or think of developers access<font color="#E5E5E5"> to</font>

916
00:36:39,370 --> 00:36:44,350
deploy to<font color="#E5E5E5"> the cluster</font><font color="#CCCCCC"> applauded security</font>

917
00:36:41,440 --> 00:36:47,380
policy is crucial<font color="#CCCCCC"> also something that I</font>

918
00:36:44,350 --> 00:36:50,799
was surprised to see<font color="#E5E5E5"> disabled more than</font>

919
00:36:47,380 --> 00:36:53,650
I'd expect was<font color="#E5E5E5"> the</font><font color="#CCCCCC"> couplet</font><font color="#E5E5E5"> and who knows</font>

920
00:36:50,800 --> 00:36:56,850
<font color="#CCCCCC">masters API is</font><font color="#E5E5E5"> not having TLS</font>

921
00:36:53,650 --> 00:36:58,900
certificate authentication enabled<font color="#CCCCCC"> and</font>

922
00:36:56,850 --> 00:37:01,360
that just basically<font color="#E5E5E5"> gives you route to</font>

923
00:36:58,900 --> 00:37:05,200
the cluster and even some open<font color="#E5E5E5"> source</font>

924
00:37:01,360 --> 00:37:08,080
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of installers</font><font color="#E5E5E5"> for kubernetes</font><font color="#CCCCCC"> they</font>

925
00:37:05,200 --> 00:37:09,339
would not enable this on<font color="#CCCCCC"> at CD so if</font>

926
00:37:08,080 --> 00:37:11,770
they enabled certificate authentication

927
00:37:09,340 --> 00:37:14,170
on the API servers however<font color="#E5E5E5"> you can</font>

928
00:37:11,770 --> 00:37:16,270
connect to<font color="#E5E5E5"> the sed key value store which</font>

929
00:37:14,170 --> 00:37:18,040
if you can connect and there's no<font color="#E5E5E5"> space</font>

930
00:37:16,270 --> 00:37:20,380
<font color="#CCCCCC">Toft enabled you just have full access</font>

931
00:37:18,040 --> 00:37:22,090
<font color="#E5E5E5">to read and write the state directly and</font>

932
00:37:20,380 --> 00:37:24,040
that's good privileges<font color="#CCCCCC"> that way</font><font color="#E5E5E5"> so</font>

933
00:37:22,090 --> 00:37:27,190
that's pretty<font color="#E5E5E5"> simple stuff they need to</font>

934
00:37:24,040 --> 00:37:28,990
make sure<font color="#E5E5E5"> it's all there</font><font color="#CCCCCC"> also the node</font>

935
00:37:27,190 --> 00:37:32,230
<font color="#CCCCCC">Oh threatened the node authorizer</font>

936
00:37:28,990 --> 00:37:34,270
which is beta right<font color="#E5E5E5"> now just released to</font>

937
00:37:32,230 --> 00:37:35,430
<font color="#E5E5E5">google container engine</font><font color="#CCCCCC"> I think this</font>

938
00:37:34,270 --> 00:37:37,890
month

939
00:37:35,430 --> 00:37:40,109
can restrict couplets access to

940
00:37:37,890 --> 00:37:41,819
resources that<font color="#E5E5E5"> are not scheduled or not</font>

941
00:37:40,110 --> 00:37:45,090
belonging to<font color="#CCCCCC"> a pod</font><font color="#E5E5E5"> schedule to them and</font>

942
00:37:41,820 --> 00:37:48,620
also<font color="#E5E5E5"> there are multiple network provider</font>

943
00:37:45,090 --> 00:37:51,960
policy Network policy providers such as

944
00:37:48,620 --> 00:37:53,730
<font color="#E5E5E5">you know see Liam</font><font color="#CCCCCC"> calico</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can</font>

945
00:37:51,960 --> 00:37:55,620
use to implement<font color="#E5E5E5"> the network policy API</font>

946
00:37:53,730 --> 00:37:57,270
<font color="#E5E5E5">so that</font><font color="#CCCCCC"> you can apply access control</font>

947
00:37:55,620 --> 00:37:58,589
<font color="#CCCCCC">list to services so that</font><font color="#E5E5E5"> not every</font>

948
00:37:57,270 --> 00:38:01,830
<font color="#CCCCCC">service is globally accessible through</font>

949
00:37:58,590 --> 00:38:04,620
the cluster<font color="#E5E5E5"> this is you know if you're</font>

950
00:38:01,830 --> 00:38:06,299
<font color="#CCCCCC">noticing that</font><font color="#E5E5E5"> there's a this slide is a</font>

951
00:38:04,620 --> 00:38:08,730
lot of work to<font color="#CCCCCC"> implement in your</font>

952
00:38:06,300 --> 00:38:10,170
<font color="#E5E5E5">environment</font><font color="#CCCCCC"> that's sort of where</font>

953
00:38:08,730 --> 00:38:13,800
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> criminais T's is today</font>

954
00:38:10,170 --> 00:38:16,830
it's it's<font color="#E5E5E5"> sort of it feels a little like</font>

955
00:38:13,800 --> 00:38:18,990
the early days<font color="#CCCCCC"> of Linux but</font><font color="#E5E5E5"> if it didn't</font>

956
00:38:16,830 --> 00:38:21,569
if everyone was<font color="#CCCCCC"> root you know</font><font color="#E5E5E5"> on your</font>

957
00:38:18,990 --> 00:38:23,040
system for<font color="#E5E5E5"> the first several years and</font>

958
00:38:21,570 --> 00:38:25,320
they're<font color="#E5E5E5"> like</font><font color="#CCCCCC"> gabble</font><font color="#E5E5E5"> will implement that</font>

959
00:38:23,040 --> 00:38:27,570
security model a little<font color="#CCCCCC"> later</font><font color="#E5E5E5"> so but</font>

960
00:38:25,320 --> 00:38:30,240
there's it exists it just takes a lot<font color="#E5E5E5"> of</font>

961
00:38:27,570 --> 00:38:31,800
bootstrapping<font color="#CCCCCC"> or using a commercial</font>

962
00:38:30,240 --> 00:38:33,899
version<font color="#E5E5E5"> of kubernetes that actually has</font>

963
00:38:31,800 --> 00:38:38,250
it all done for<font color="#E5E5E5"> you so</font><font color="#CCCCCC"> let's talk about</font>

964
00:38:33,900 --> 00:38:41,220
the<font color="#CCCCCC"> a call</font><font color="#E5E5E5"> it the quiet giant</font><font color="#CCCCCC"> this is d</font>

965
00:38:38,250 --> 00:38:43,590
cos<font color="#E5E5E5"> and mezzos</font><font color="#CCCCCC"> it's the environment that</font>

966
00:38:41,220 --> 00:38:46,080
<font color="#E5E5E5">you don't really hear much</font><font color="#CCCCCC"> about but</font>

967
00:38:43,590 --> 00:38:47,430
it's the one<font color="#E5E5E5"> that can the only one that</font>

968
00:38:46,080 --> 00:38:50,670
can scale to<font color="#E5E5E5"> hundreds of thousands of</font>

969
00:38:47,430 --> 00:38:53,549
nodes<font color="#E5E5E5"> so it's in some very large very</font>

970
00:38:50,670 --> 00:38:56,490
large environments<font color="#CCCCCC"> it's a similar</font>

971
00:38:53,550 --> 00:38:58,380
pattern<font color="#CCCCCC"> to the other systems we have a</font>

972
00:38:56,490 --> 00:39:00,540
distributed key-value store<font color="#E5E5E5"> this one is</font>

973
00:38:58,380 --> 00:39:01,800
<font color="#E5E5E5">called this one is a zookeeper</font><font color="#CCCCCC"> which is</font>

974
00:39:00,540 --> 00:39:06,180
<font color="#E5E5E5">used for Kafka and</font><font color="#CCCCCC"> a variety of other</font>

975
00:39:01,800 --> 00:39:08,010
internet scale<font color="#CCCCCC"> services and kind of it's</font>

976
00:39:06,180 --> 00:39:10,970
a bit more complicated than kubernetes

977
00:39:08,010 --> 00:39:13,920
in that you have two<font color="#E5E5E5"> levels of</font>

978
00:39:10,970 --> 00:39:14,879
scheduling implemented by well first you

979
00:39:13,920 --> 00:39:16,980
have<font color="#CCCCCC"> mais dos which is a two-level</font>

980
00:39:14,880 --> 00:39:18,720
<font color="#E5E5E5">scheduler and then you have what are</font>

981
00:39:16,980 --> 00:39:20,490
<font color="#CCCCCC">called frameworks on top of it that</font><font color="#E5E5E5"> can</font>

982
00:39:18,720 --> 00:39:23,970
schedule cluster resources to some other

983
00:39:20,490 --> 00:39:25,259
some<font color="#CCCCCC"> other way if you're running</font><font color="#E5E5E5"> like a</font>

984
00:39:23,970 --> 00:39:28,589
large Cassandra cluster you might be

985
00:39:25,260 --> 00:39:30,480
using directs<font color="#CCCCCC"> Bezos but a lot of</font><font color="#E5E5E5"> people</font>

986
00:39:28,590 --> 00:39:34,110
<font color="#CCCCCC">use marathon to schedule containers and</font>

987
00:39:30,480 --> 00:39:36,000
there's a massive suite of stuff<font color="#CCCCCC"> they</font>

988
00:39:34,110 --> 00:39:39,630
also have an app store like thing called

989
00:39:36,000 --> 00:39:41,520
universe<font color="#E5E5E5"> but one thing that is pretty</font>

990
00:39:39,630 --> 00:39:43,980
explicit on the mesosphere website<font color="#E5E5E5"> is</font>

991
00:39:41,520 --> 00:39:45,690
that batteries<font color="#E5E5E5"> are not included</font><font color="#CCCCCC"> the</font>

992
00:39:43,980 --> 00:39:48,900
security features exist only in the

993
00:39:45,690 --> 00:39:51,660
commercial<font color="#CCCCCC"> DC OS and</font>

994
00:39:48,900 --> 00:39:53,970
there's by default containers run on the

995
00:39:51,660 --> 00:39:55,649
<font color="#CCCCCC">host</font><font color="#E5E5E5"> plane</font><font color="#CCCCCC"> those are the</font><font color="#E5E5E5"> host Network so</font>

996
00:39:53,970 --> 00:39:57,089
any<font color="#E5E5E5"> containers schedule has full access</font>

997
00:39:55,650 --> 00:40:00,450
to the host you<font color="#CCCCCC"> can connect to a lot of</font>

998
00:39:57,089 --> 00:40:03,119
services right<font color="#E5E5E5"> there and I've seen a lot</font>

999
00:40:00,450 --> 00:40:05,669
<font color="#CCCCCC">of configurations where zookeeper has no</font>

1000
00:40:03,119 --> 00:40:07,230
<font color="#CCCCCC">authentication enabled so it's</font><font color="#E5E5E5"> send a</font>

1001
00:40:05,670 --> 00:40:09,180
look at what shellshock looks like there

1002
00:40:07,230 --> 00:40:11,549
the container environment you can get

1003
00:40:09,180 --> 00:40:15,169
your host the host IP is pretty easily

1004
00:40:11,549 --> 00:40:18,450
<font color="#E5E5E5">of the you know the control plane and</font>

1005
00:40:15,170 --> 00:40:22,589
you can actually<font color="#E5E5E5"> talk to it you know it</font>

1006
00:40:18,450 --> 00:40:24,058
directly<font color="#E5E5E5"> and dump the state and get you</font>

1007
00:40:22,589 --> 00:40:25,349
<font color="#CCCCCC">know the authentication settings and in</font>

1008
00:40:24,059 --> 00:40:26,819
<font color="#E5E5E5">this example you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> that there's no</font>

1009
00:40:25,349 --> 00:40:28,789
authentication actually enabled or

1010
00:40:26,819 --> 00:40:31,499
required so<font color="#E5E5E5"> that means we can launch</font>

1011
00:40:28,789 --> 00:40:33,509
<font color="#E5E5E5">jobs on the node</font><font color="#CCCCCC"> without authentication</font>

1012
00:40:31,499 --> 00:40:38,038
<font color="#E5E5E5">we can also connect to the</font><font color="#CCCCCC"> master and</font>

1013
00:40:33,509 --> 00:40:40,650
and do the same<font color="#E5E5E5"> but sort of the more</font>

1014
00:40:38,039 --> 00:40:45,029
most fun one<font color="#E5E5E5"> is just talking directly to</font>

1015
00:40:40,650 --> 00:40:46,950
zookeeper so you can<font color="#CCCCCC"> inside</font><font color="#E5E5E5"> the cluster</font>

1016
00:40:45,029 --> 00:40:50,069
<font color="#CCCCCC">all the zookeeper instances or you can</font>

1017
00:40:46,950 --> 00:40:53,519
look up through<font color="#CCCCCC"> mezzos</font><font color="#E5E5E5"> DNS at Z k1</font>

1018
00:40:50,069 --> 00:40:55,349
through<font color="#CCCCCC"> z k5</font><font color="#E5E5E5"> and usually the zookeeper</font>

1019
00:40:53,519 --> 00:40:57,569
client is a large Java package but I

1020
00:40:55,349 --> 00:40:59,220
just wrote one and go and<font color="#E5E5E5"> you can just</font>

1021
00:40:57,569 --> 00:41:02,038
talk directly to<font color="#E5E5E5"> it and crawl</font><font color="#CCCCCC"> through it</font>

1022
00:40:59,220 --> 00:41:05,308
<font color="#E5E5E5">and get things like the the auth token</font>

1023
00:41:02,039 --> 00:41:07,079
secret<font color="#E5E5E5"> which is used for all the JWT</font>

1024
00:41:05,309 --> 00:41:08,640
tokens and then from there you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> just</font>

1025
00:41:07,079 --> 00:41:12,180
mint<font color="#E5E5E5"> your own authorization tokens</font><font color="#CCCCCC"> and</font>

1026
00:41:08,640 --> 00:41:15,450
do whatever you want forever<font color="#CCCCCC"> so it's</font>

1027
00:41:12,180 --> 00:41:17,308
cool<font color="#CCCCCC"> so tools</font><font color="#E5E5E5"> that I made to do this</font><font color="#CCCCCC"> I</font>

1028
00:41:15,450 --> 00:41:20,220
didn't<font color="#E5E5E5"> really currently think of a good</font>

1029
00:41:17,309 --> 00:41:23,880
<font color="#E5E5E5">name so going</font><font color="#CCCCCC"> with crispy tribble for</font>

1030
00:41:20,220 --> 00:41:26,189
now it is<font color="#CCCCCC"> a container image for</font>

1031
00:41:23,880 --> 00:41:29,220
assessing orchestrated environments<font color="#E5E5E5"> you</font>

1032
00:41:26,190 --> 00:41:32,099
just<font color="#CCCCCC"> launched it it has a</font><font color="#E5E5E5"> built in go</font>

1033
00:41:29,220 --> 00:41:33,899
<font color="#CCCCCC">ssh server so you</font><font color="#E5E5E5"> can just ssh in see</font>

1034
00:41:32,099 --> 00:41:36,630
that<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> directing that kind</font><font color="#CCCCCC"> of raw</font>

1035
00:41:33,900 --> 00:41:38,489
environment<font color="#E5E5E5"> and has a variety of</font><font color="#CCCCCC"> tools</font>

1036
00:41:36,630 --> 00:41:41,519
for inspecting<font color="#CCCCCC"> what is going on inside</font>

1037
00:41:38,489 --> 00:41:45,239
<font color="#CCCCCC">the</font><font color="#E5E5E5"> cluster</font><font color="#CCCCCC"> so you have coop CTL at CD</font>

1038
00:41:41,519 --> 00:41:47,129
<font color="#CCCCCC">CTL to command small command-line</font><font color="#E5E5E5"> tools</font>

1039
00:41:45,239 --> 00:41:49,920
<font color="#E5E5E5">they wrote called just one called tiller</font>

1040
00:41:47,130 --> 00:41:51,960
<font color="#E5E5E5">and one called zk to talk to these</font>

1041
00:41:49,920 --> 00:41:54,269
services<font color="#CCCCCC"> and do with it are basically</font>

1042
00:41:51,960 --> 00:41:56,749
<font color="#CCCCCC">just perform operations on them and when</font>

1043
00:41:54,269 --> 00:41:59,308
there's no<font color="#CCCCCC"> authentication required</font><font color="#E5E5E5"> and</font>

1044
00:41:56,749 --> 00:42:01,288
background on the name<font color="#E5E5E5"> if you just</font>

1045
00:41:59,309 --> 00:42:01,920
create<font color="#CCCCCC"> a</font><font color="#E5E5E5"> project on github it says don't</font>

1046
00:42:01,289 --> 00:42:03,569
<font color="#CCCCCC">have any</font>

1047
00:42:01,920 --> 00:42:04,769
not feeling<font color="#CCCCCC"> inspired try this one and it</font>

1048
00:42:03,569 --> 00:42:09,450
said<font color="#E5E5E5"> crispy Tribble I was like</font><font color="#CCCCCC"> alright</font>

1049
00:42:04,769 --> 00:42:11,089
<font color="#E5E5E5">yeah that'll work so kind of high-level</font>

1050
00:42:09,450 --> 00:42:13,788
takeaways I want people<font color="#E5E5E5"> to</font><font color="#CCCCCC"> kind of take</font>

1051
00:42:11,089 --> 00:42:18,109
<font color="#CCCCCC">you know remember</font><font color="#E5E5E5"> from this is that</font>

1052
00:42:13,789 --> 00:42:21,480
<font color="#CCCCCC">sadly</font><font color="#E5E5E5"> the open-source distributions of</font>

1053
00:42:18,109 --> 00:42:23,460
<font color="#E5E5E5">commodities and and</font><font color="#CCCCCC"> mezzos and D cos</font>

1054
00:42:21,480 --> 00:42:25,619
<font color="#CCCCCC">don't have all the security features</font>

1055
00:42:23,460 --> 00:42:29,460
enabled<font color="#E5E5E5"> they don't have them implemented</font>

1056
00:42:25,619 --> 00:42:31,650
in some cases<font color="#CCCCCC"> and so if you're</font><font color="#E5E5E5"> not</font>

1057
00:42:29,460 --> 00:42:33,869
prepared<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go through</font><font color="#CCCCCC"> a lot of work and</font>

1058
00:42:31,650 --> 00:42:35,640
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> learning curve</font><font color="#CCCCCC"> like I</font><font color="#E5E5E5"> spent</font>

1059
00:42:33,869 --> 00:42:37,349
probably two<font color="#E5E5E5"> to</font><font color="#CCCCCC"> three months learning</font>

1060
00:42:35,640 --> 00:42:39,629
kubernetes this year<font color="#E5E5E5"> because I actually</font>

1061
00:42:37,349 --> 00:42:42,359
ran our kubernetes cluster for the first

1062
00:42:39,630 --> 00:42:44,670
part of the year<font color="#CCCCCC"> there's a lot you're</font>

1063
00:42:42,359 --> 00:42:47,160
gonna<font color="#E5E5E5"> have to get working to have</font>

1064
00:42:44,670 --> 00:42:49,740
reasonable<font color="#E5E5E5"> level of</font><font color="#CCCCCC"> security and</font><font color="#E5E5E5"> that</font>

1065
00:42:47,160 --> 00:42:51,629
just means not having<font color="#E5E5E5"> you know root root</font>

1066
00:42:49,740 --> 00:42:55,109
<font color="#E5E5E5">for it within every container on the</font>

1067
00:42:51,630 --> 00:42:56,759
<font color="#E5E5E5">entire cluster</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> but they're moving</font>

1068
00:42:55,109 --> 00:42:59,578
<font color="#CCCCCC">pretty quickly to you have all these</font>

1069
00:42:56,759 --> 00:43:01,769
<font color="#CCCCCC">features you know</font><font color="#E5E5E5"> imagine API</font>

1070
00:42:59,579 --> 00:43:02,970
authentication<font color="#CCCCCC"> control plane and data</font>

1071
00:43:01,769 --> 00:43:06,319
plane separation is actually a little

1072
00:43:02,970 --> 00:43:09,359
farther out<font color="#CCCCCC"> actual workload isolation</font>

1073
00:43:06,319 --> 00:43:11,670
<font color="#E5E5E5">s2s authentication and authorization</font><font color="#CCCCCC"> and</font>

1074
00:43:09,359 --> 00:43:13,799
a zero trust networking model so<font color="#E5E5E5"> that</font>

1075
00:43:11,670 --> 00:43:14,940
even if the<font color="#E5E5E5"> you know control plant or</font>

1076
00:43:13,799 --> 00:43:17,640
data plane physical networks are

1077
00:43:14,940 --> 00:43:20,849
compromised<font color="#CCCCCC"> it's not an issue</font><font color="#E5E5E5"> and also</font><font color="#CCCCCC"> a</font>

1078
00:43:17,640 --> 00:43:21,839
<font color="#E5E5E5">least privileged orchestration model</font><font color="#CCCCCC"> and</font>

1079
00:43:20,849 --> 00:43:25,499
they're moving<font color="#E5E5E5"> pretty quickly to this</font>

1080
00:43:21,839 --> 00:43:26,970
but it's Walt<font color="#E5E5E5"> may be like while a lot of</font>

1081
00:43:25,499 --> 00:43:29,308
<font color="#E5E5E5">the</font><font color="#CCCCCC"> open source systems will say the</font>

1082
00:43:26,970 --> 00:43:31,499
<font color="#E5E5E5">production</font><font color="#CCCCCC"> ready production</font><font color="#E5E5E5"> grade</font><font color="#CCCCCC"> make</font>

1083
00:43:29,309 --> 00:43:33,239
sure all these are are enabled<font color="#E5E5E5"> in it</font>

1084
00:43:31,499 --> 00:43:35,788
otherwise<font color="#E5E5E5"> you're better off with the</font>

1085
00:43:33,239 --> 00:43:37,140
commercial version so far<font color="#CCCCCC"> but one of the</font>

1086
00:43:35,789 --> 00:43:39,059
things they'll be interesting for<font color="#CCCCCC"> us as</font>

1087
00:43:37,140 --> 00:43:41,220
a<font color="#E5E5E5"> security industry to watch is</font><font color="#CCCCCC"> that you</font>

1088
00:43:39,059 --> 00:43:43,769
know while we're what what I'm seeing in

1089
00:43:41,220 --> 00:43:46,140
kind of<font color="#E5E5E5"> the desktop ecosystem is a lot</font>

1090
00:43:43,769 --> 00:43:48,149
more solidification<font color="#E5E5E5"> of an restriction of</font>

1091
00:43:46,140 --> 00:43:49,288
what's<font color="#CCCCCC"> possible on devices</font><font color="#E5E5E5"> as everything</font>

1092
00:43:48,150 --> 00:43:50,789
becomes like a<font color="#CCCCCC"> mobile device its</font>

1093
00:43:49,289 --> 00:43:53,849
firmware<font color="#CCCCCC"> you can install</font><font color="#E5E5E5"> apps that's all</font>

1094
00:43:50,789 --> 00:43:56,609
you<font color="#E5E5E5"> can do</font><font color="#CCCCCC"> in order for people</font><font color="#E5E5E5"> to even</font>

1095
00:43:53,849 --> 00:43:58,410
just move and implement<font color="#CCCCCC"> functionality</font>

1096
00:43:56,609 --> 00:43:59,400
<font color="#E5E5E5">has to go somewhere</font><font color="#CCCCCC"> and so I think</font>

1097
00:43:58,410 --> 00:44:01,799
<font color="#E5E5E5">what's going to happen is we're gonna</font>

1098
00:43:59,400 --> 00:44:03,299
see all<font color="#E5E5E5"> that flexibility go on to the</font>

1099
00:44:01,799 --> 00:44:05,309
cost into people's data center is

1100
00:44:03,299 --> 00:44:07,859
because environments like kubernetes<font color="#CCCCCC"> and</font>

1101
00:44:05,309 --> 00:44:09,539
like App Store like installation of

1102
00:44:07,859 --> 00:44:12,058
complicated infrastructure will remove

1103
00:44:09,539 --> 00:44:13,200
the barriers to<font color="#E5E5E5"> entry</font><font color="#CCCCCC"> and we're gonna</font>

1104
00:44:12,059 --> 00:44:17,130
see<font color="#E5E5E5"> a</font>

1105
00:44:13,200 --> 00:44:21,269
Android ecosystem like scenario<font color="#E5E5E5"> in data</font>

1106
00:44:17,130 --> 00:44:25,049
centers<font color="#E5E5E5"> because of this and it'll be</font>

1107
00:44:21,269 --> 00:44:27,419
it'll be<font color="#CCCCCC"> interesting and one of the</font>

1108
00:44:25,049 --> 00:44:29,369
things that I'm actually seeing kind<font color="#E5E5E5"> of</font>

1109
00:44:27,420 --> 00:44:32,279
fascinated<font color="#E5E5E5"> by is that the growth of the</font>

1110
00:44:29,369 --> 00:44:34,380
cloud is<font color="#CCCCCC"> actually massively</font><font color="#E5E5E5"> propelling</font>

1111
00:44:32,279 --> 00:44:35,880
the use of<font color="#CCCCCC"> Linux because it is the</font>

1112
00:44:34,380 --> 00:44:39,420
native operating system kernel of the

1113
00:44:35,880 --> 00:44:43,680
<font color="#CCCCCC">cloud and it's pretty pretty</font><font color="#E5E5E5"> cool to see</font>

1114
00:44:39,420 --> 00:44:45,619
that<font color="#CCCCCC"> so that's that's</font><font color="#E5E5E5"> all I have thank</font>

1115
00:44:43,680 --> 00:44:50,029
<font color="#CCCCCC">you</font><font color="#E5E5E5"> everyone for your attention</font><font color="#CCCCCC"> I have</font>

1116
00:44:45,619 --> 00:44:50,029
two minutes<font color="#E5E5E5"> three minutes for questions</font>

