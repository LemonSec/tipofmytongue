1
00:00:04,019 --> 00:00:13,820
[Music]

2
00:00:15,120 --> 00:00:16,720
hello everyone and hello people of the

3
00:00:16,720 --> 00:00:17,279
future

4
00:00:17,279 --> 00:00:19,600
uh my name is kevin perlow and i am the

5
00:00:19,600 --> 00:00:21,279
technical intelligence team lead at a

6
00:00:21,279 --> 00:00:22,800
financial institution

7
00:00:22,800 --> 00:00:24,240
today i'm going to be discussing a

8
00:00:24,240 --> 00:00:26,160
concept uh called financial payment

9
00:00:26,160 --> 00:00:27,279
standards

10
00:00:27,279 --> 00:00:28,960
so where i'm going to be discussing two

11
00:00:28,960 --> 00:00:31,199
standards here the iso 8583 standard

12
00:00:31,199 --> 00:00:32,558
which is for cards

13
00:00:32,558 --> 00:00:34,160
and the extensions for financial

14
00:00:34,160 --> 00:00:35,840
services standard which

15
00:00:35,840 --> 00:00:38,320
is a you can think of it as an api for

16
00:00:38,320 --> 00:00:39,360
doing uh

17
00:00:39,360 --> 00:00:41,440
for interacting with hardware on an atm

18
00:00:41,440 --> 00:00:43,120
i'm going to just be discussing how

19
00:00:43,120 --> 00:00:44,800
threat actors incorporate these two

20
00:00:44,800 --> 00:00:46,399
standards into two pretty specific

21
00:00:46,399 --> 00:00:47,600
malware families

22
00:00:47,600 --> 00:00:50,800
uh fast cash for iso 8583 and

23
00:00:50,800 --> 00:00:52,559
injects pure for extensions for

24
00:00:52,559 --> 00:00:53,840
financial services

25
00:00:53,840 --> 00:00:55,840
and in the context of how these malware

26
00:00:55,840 --> 00:00:57,280
families work and sort of the inner

27
00:00:57,280 --> 00:00:58,559
mechanisms of them

28
00:00:58,559 --> 00:01:00,399
i'm also going to be discussing the

29
00:01:00,399 --> 00:01:02,559
advantages and drawbacks that come with

30
00:01:02,559 --> 00:01:04,479
integrating these payment standards into

31
00:01:04,479 --> 00:01:06,799
a malware family

32
00:01:06,799 --> 00:01:08,880
so jumping right in the first thing i

33
00:01:08,880 --> 00:01:11,439
want to discuss is isolated 583

34
00:01:11,439 --> 00:01:13,760
iso 8583 as i said as a standard for

35
00:01:13,760 --> 00:01:16,000
financial card transactions so any time

36
00:01:16,000 --> 00:01:16,720
that you go

37
00:01:16,720 --> 00:01:19,680
to an atm or anytime you go to a point

38
00:01:19,680 --> 00:01:21,280
of server or point of sale device out of

39
00:01:21,280 --> 00:01:23,600
grocery store to do say a self checkout

40
00:01:23,600 --> 00:01:26,080
all of those are going to create an iso

41
00:01:26,080 --> 00:01:29,520
8583 message and an iso 8583 transaction

42
00:01:29,520 --> 00:01:31,520
and what this is is a standardized set

43
00:01:31,520 --> 00:01:32,560
of fields and

44
00:01:32,560 --> 00:01:35,360
standard structure of fields for

45
00:01:35,360 --> 00:01:37,360
transmitting the data from your card and

46
00:01:37,360 --> 00:01:37,680
from

47
00:01:37,680 --> 00:01:40,159
for your transaction over to a payment

48
00:01:40,159 --> 00:01:41,200
switch

49
00:01:41,200 --> 00:01:42,640
from that payment switch to a bank and

50
00:01:42,640 --> 00:01:44,640
then on back to approve or reject the

51
00:01:44,640 --> 00:01:47,200
transaction that's happening

52
00:01:47,200 --> 00:01:50,320
this is the basis of the fast cash

53
00:01:50,320 --> 00:01:51,600
malware which is what we're going to

54
00:01:51,600 --> 00:01:54,159
talk about in in just a few minutes but

55
00:01:54,159 --> 00:01:54,720
first

56
00:01:54,720 --> 00:01:56,479
just an example on the screen this is

57
00:01:56,479 --> 00:01:58,719
very literally an iso 8583 message and

58
00:01:58,719 --> 00:02:00,079
this is sort of what all the fuss is

59
00:02:00,079 --> 00:02:01,119
about

60
00:02:01,119 --> 00:02:02,960
so just breaking this down into a couple

61
00:02:02,960 --> 00:02:04,799
of different parts there are three parts

62
00:02:04,799 --> 00:02:06,399
to one of these messages there's a

63
00:02:06,399 --> 00:02:08,000
message type identifier which

64
00:02:08,000 --> 00:02:09,440
you can think of as sort of a file

65
00:02:09,440 --> 00:02:11,520
header or message header and that has

66
00:02:11,520 --> 00:02:13,760
some metadata about what type of message

67
00:02:13,760 --> 00:02:16,800
something is there is a bitmap which

68
00:02:16,800 --> 00:02:17,599
will indicate

69
00:02:17,599 --> 00:02:21,040
what fields are present in one of these

70
00:02:21,040 --> 00:02:21,760
messages

71
00:02:21,760 --> 00:02:23,040
and then there's the data elements which

72
00:02:23,040 --> 00:02:26,000
are those fields and so the purpose

73
00:02:26,000 --> 00:02:28,720
behind items two and items three there

74
00:02:28,720 --> 00:02:29,200
are

75
00:02:29,200 --> 00:02:31,040
that there are over 100 different

76
00:02:31,040 --> 00:02:32,560
options such as the primary account

77
00:02:32,560 --> 00:02:34,560
number the transaction date and time

78
00:02:34,560 --> 00:02:36,080
and all sorts of other data that can

79
00:02:36,080 --> 00:02:37,519
happen or that can be tied to one of

80
00:02:37,519 --> 00:02:38,800
these transactions

81
00:02:38,800 --> 00:02:40,480
and so you don't necessarily want to

82
00:02:40,480 --> 00:02:42,080
transmit all of these because most

83
00:02:42,080 --> 00:02:43,599
transactions don't use

84
00:02:43,599 --> 00:02:45,599
all of these fields and the bitmap just

85
00:02:45,599 --> 00:02:47,360
is there to specify which ones are there

86
00:02:47,360 --> 00:02:51,280
for the payment switch to look at

87
00:02:51,280 --> 00:02:53,519
i do need to break down the message type

88
00:02:53,519 --> 00:02:55,200
identifier just a little bit further

89
00:02:55,200 --> 00:02:58,239
there are four parts to this so there is

90
00:02:58,239 --> 00:03:01,280
a version which is the first digit there

91
00:03:01,280 --> 00:03:03,360
is a message classification a message

92
00:03:03,360 --> 00:03:04,000
function

93
00:03:04,000 --> 00:03:05,360
and then finally the source of the

94
00:03:05,360 --> 00:03:06,959
message where do the message originate

95
00:03:06,959 --> 00:03:09,120
from the bank or the atm or some other

96
00:03:09,120 --> 00:03:11,120
entity

97
00:03:11,120 --> 00:03:14,159
so going into the example message that

98
00:03:14,159 --> 00:03:15,920
we had on the screen before

99
00:03:15,920 --> 00:03:17,360
if we break this down into a couple of

100
00:03:17,360 --> 00:03:19,920
parts we can see the first four digits

101
00:03:19,920 --> 00:03:21,200
as i mentioned are the message type

102
00:03:21,200 --> 00:03:22,159
identifier

103
00:03:22,159 --> 00:03:23,840
and so the first digit of those four

104
00:03:23,840 --> 00:03:25,680
digits indicates the version and in this

105
00:03:25,680 --> 00:03:26,640
case this is

106
00:03:26,640 --> 00:03:31,120
version 1987 of the iso 8583 standard

107
00:03:31,120 --> 00:03:32,319
the second digit here is the

108
00:03:32,319 --> 00:03:33,760
classification and this is really

109
00:03:33,760 --> 00:03:34,640
important for

110
00:03:34,640 --> 00:03:35,920
the fast cash malware that we're going

111
00:03:35,920 --> 00:03:38,319
to be talking about the classification

112
00:03:38,319 --> 00:03:39,599
indicates whether or not something is a

113
00:03:39,599 --> 00:03:41,120
financial message which in this case

114
00:03:41,120 --> 00:03:42,959
it's set to two so it is or whether it's

115
00:03:42,959 --> 00:03:45,120
a chargeback or an authorization

116
00:03:45,120 --> 00:03:46,560
the third digit indicates whether

117
00:03:46,560 --> 00:03:48,480
something is a request or whether it's a

118
00:03:48,480 --> 00:03:50,239
response coming back and then finally as

119
00:03:50,239 --> 00:03:51,120
i mentioned

120
00:03:51,120 --> 00:03:53,280
uh the fourth part is the source of the

121
00:03:53,280 --> 00:03:54,640
message

122
00:03:54,640 --> 00:03:56,720
so breaking this particular example down

123
00:03:56,720 --> 00:03:58,640
and this is just one that i pulled

124
00:03:58,640 --> 00:04:00,560
online and made a couple of changes too

125
00:04:00,560 --> 00:04:02,080
the first thing we have is the bitmap

126
00:04:02,080 --> 00:04:02,560
and

127
00:04:02,560 --> 00:04:04,560
this one specifies a couple of fields

128
00:04:04,560 --> 00:04:05,519
that are present so we're gonna look at

129
00:04:05,519 --> 00:04:06,640
the first three of the four that are

130
00:04:06,640 --> 00:04:07,680
specified

131
00:04:07,680 --> 00:04:09,280
uh field two which is the primary

132
00:04:09,280 --> 00:04:10,720
account number field

133
00:04:10,720 --> 00:04:12,159
seven which is the point of service

134
00:04:12,159 --> 00:04:14,000
entry mode and

135
00:04:14,000 --> 00:04:15,280
excuse me field 7 which is the

136
00:04:15,280 --> 00:04:17,440
transaction date and time and field 22

137
00:04:17,440 --> 00:04:19,519
which is the point of service entry mode

138
00:04:19,519 --> 00:04:22,240
um and if you want to decode a bitmap

139
00:04:22,240 --> 00:04:24,080
manually that's a bit too time and sense

140
00:04:24,080 --> 00:04:24,479
they're

141
00:04:24,479 --> 00:04:26,960
time intensive but there are some

142
00:04:26,960 --> 00:04:28,560
options there on the bottom of the

143
00:04:28,560 --> 00:04:29,759
screen for you to

144
00:04:29,759 --> 00:04:31,440
take a look at on on your own time most

145
00:04:31,440 --> 00:04:32,560
people though just run this through a

146
00:04:32,560 --> 00:04:34,560
decoder and they have it tell them hey

147
00:04:34,560 --> 00:04:35,520
these are the fields that are in a

148
00:04:35,520 --> 00:04:36,639
message

149
00:04:36,639 --> 00:04:38,320
so real quick here you can see data

150
00:04:38,320 --> 00:04:40,000
element two or field two and

151
00:04:40,000 --> 00:04:42,000
this is the primary account number the

152
00:04:42,000 --> 00:04:43,840
first two digits in this specify how

153
00:04:43,840 --> 00:04:44,160
long

154
00:04:44,160 --> 00:04:45,840
the primary account number is and in

155
00:04:45,840 --> 00:04:48,000
this case the first two digits are 16.

156
00:04:48,000 --> 00:04:50,320
so the next 16 digits are this user's

157
00:04:50,320 --> 00:04:51,440
primary account number

158
00:04:51,440 --> 00:04:52,960
and this is just again one from an

159
00:04:52,960 --> 00:04:54,639
example online it's of course not a real

160
00:04:54,639 --> 00:04:55,680
one

161
00:04:55,680 --> 00:04:57,759
here you can see just a time stamp in

162
00:04:57,759 --> 00:04:59,840
utc

163
00:04:59,840 --> 00:05:01,520
and finally the point of service entry

164
00:05:01,520 --> 00:05:03,120
mode for this transaction and this one's

165
00:05:03,120 --> 00:05:04,080
pretty important for

166
00:05:04,080 --> 00:05:05,840
when we get to the windows fast cache

167
00:05:05,840 --> 00:05:08,080
malware but this point of service entry

168
00:05:08,080 --> 00:05:10,560
mode is set to 0 1 1. the first two

169
00:05:10,560 --> 00:05:11,520
digits in this

170
00:05:11,520 --> 00:05:13,759
indicate whether something or indicate

171
00:05:13,759 --> 00:05:15,280
how something was

172
00:05:15,280 --> 00:05:16,880
entered into the terminal so in this

173
00:05:16,880 --> 00:05:18,320
case this is a manual entry meaning

174
00:05:18,320 --> 00:05:20,080
someone typed in the data

175
00:05:20,080 --> 00:05:23,199
but if you look at something where

176
00:05:23,199 --> 00:05:25,199
the digits are set to nine zero that

177
00:05:25,199 --> 00:05:26,880
would indicate a card swipe

178
00:05:26,880 --> 00:05:28,400
and so there are a couple other options

179
00:05:28,400 --> 00:05:30,639
in that regard the last digit in this or

180
00:05:30,639 --> 00:05:31,680
the third digit in

181
00:05:31,680 --> 00:05:33,199
the point of service entry mode

182
00:05:33,199 --> 00:05:34,720
indicates um

183
00:05:34,720 --> 00:05:36,880
whether or not a terminal has pin

184
00:05:36,880 --> 00:05:38,400
capabilities and of course most

185
00:05:38,400 --> 00:05:39,759
terminals these days do

186
00:05:39,759 --> 00:05:42,400
have pin capabilities but this way the

187
00:05:42,400 --> 00:05:44,080
device doesn't send a message back

188
00:05:44,080 --> 00:05:45,440
saying hey can you enter your pin when

189
00:05:45,440 --> 00:05:46,960
there's no pin to be entered

190
00:05:46,960 --> 00:05:50,160
as sort of a safeguard against that so

191
00:05:50,160 --> 00:05:51,840
those are the core principles that we

192
00:05:51,840 --> 00:05:53,759
need to know for working with the fast

193
00:05:53,759 --> 00:05:55,120
cash malware

194
00:05:55,120 --> 00:05:56,800
now what is the fast cash malware if

195
00:05:56,800 --> 00:05:58,000
you're unfamiliar with this malware

196
00:05:58,000 --> 00:06:00,880
family this belongs to a very specific

197
00:06:00,880 --> 00:06:02,880
subset of north korean threat actors

198
00:06:02,880 --> 00:06:04,800
that also engage in swift heists

199
00:06:04,800 --> 00:06:07,840
sometimes people use fast cash to

200
00:06:07,840 --> 00:06:09,680
or they use fast cash as a term for that

201
00:06:09,680 --> 00:06:10,880
threat actor i i

202
00:06:10,880 --> 00:06:12,400
wouldn't necessarily recommend that and

203
00:06:12,400 --> 00:06:14,080
sometimes people use this term lazarus

204
00:06:14,080 --> 00:06:14,560
group

205
00:06:14,560 --> 00:06:16,479
for just broad north korean activity but

206
00:06:16,479 --> 00:06:17,680
this malware

207
00:06:17,680 --> 00:06:20,720
is tied to a very specific set

208
00:06:20,720 --> 00:06:24,479
of activity from north korean threat

209
00:06:24,479 --> 00:06:25,759
actors there's a very

210
00:06:25,759 --> 00:06:27,520
small cluster of tools and techniques

211
00:06:27,520 --> 00:06:30,639
that go along with what they do

212
00:06:30,639 --> 00:06:34,240
so what this malware does is

213
00:06:34,240 --> 00:06:36,800
it is injected into a payment switch and

214
00:06:36,800 --> 00:06:38,000
it is intended to

215
00:06:38,000 --> 00:06:41,039
either fraudulently approve uh isolated

216
00:06:41,039 --> 00:06:43,120
583 messages from the attackers

217
00:06:43,120 --> 00:06:45,199
sitting at atms and allow them to

218
00:06:45,199 --> 00:06:46,560
withdraw money or

219
00:06:46,560 --> 00:06:48,639
if the transaction isn't originating

220
00:06:48,639 --> 00:06:49,680
from an attacker

221
00:06:49,680 --> 00:06:51,120
it can transparently pass that

222
00:06:51,120 --> 00:06:53,199
transaction to and from the bank and no

223
00:06:53,199 --> 00:06:54,319
one would ever know that anything

224
00:06:54,319 --> 00:06:55,199
happens

225
00:06:55,199 --> 00:06:56,800
that's the general idea behind this

226
00:06:56,800 --> 00:06:58,000
malware family and we're going to look

227
00:06:58,000 --> 00:06:59,520
into the reverse engineering and how

228
00:06:59,520 --> 00:07:00,720
this integrates with

229
00:07:00,720 --> 00:07:04,160
iso 8583 there are three types that have

230
00:07:04,160 --> 00:07:04,720
been

231
00:07:04,720 --> 00:07:06,400
at this point all three are actually in

232
00:07:06,400 --> 00:07:07,840
public uh

233
00:07:07,840 --> 00:07:09,280
in the public domain we're going to look

234
00:07:09,280 --> 00:07:10,160
at two of them we're going to look at

235
00:07:10,160 --> 00:07:12,000
the first aax type which was the one

236
00:07:12,000 --> 00:07:13,520
that you assert reported

237
00:07:13,520 --> 00:07:15,199
back in i believe 2018 and we're going

238
00:07:15,199 --> 00:07:17,199
to look at the windows type which is one

239
00:07:17,199 --> 00:07:18,000
that came out

240
00:07:18,000 --> 00:07:19,199
i guess you could say came out or was

241
00:07:19,199 --> 00:07:21,360
used last year

242
00:07:21,360 --> 00:07:24,080
now all three of these are tailored to

243
00:07:24,080 --> 00:07:25,599
the environments that they work in

244
00:07:25,599 --> 00:07:28,400
and the reason for that is that there

245
00:07:28,400 --> 00:07:28,800
are

246
00:07:28,800 --> 00:07:30,240
slightly different implementations of

247
00:07:30,240 --> 00:07:32,560
iso 8583 depending on

248
00:07:32,560 --> 00:07:35,360
your own architecture and depending on

249
00:07:35,360 --> 00:07:36,960
uh the payment

250
00:07:36,960 --> 00:07:38,960
provider that you use so whether you use

251
00:07:38,960 --> 00:07:41,360
uh visa or mastercard

252
00:07:41,360 --> 00:07:43,599
or star or something along those lines

253
00:07:43,599 --> 00:07:44,639
there are going to be some

254
00:07:44,639 --> 00:07:46,560
different implementations or

255
00:07:46,560 --> 00:07:49,360
interpretations of the standard

256
00:07:49,360 --> 00:07:51,280
so jumping right into the reverse

257
00:07:51,280 --> 00:07:53,440
engineering for ax type one if you were

258
00:07:53,440 --> 00:07:54,879
to open the us cert report and then you

259
00:07:54,879 --> 00:07:57,360
were to open the sample yourself in ida

260
00:07:57,360 --> 00:08:00,000
you're going to see uh just a few small

261
00:08:00,000 --> 00:08:00,560
differences

262
00:08:00,560 --> 00:08:02,479
one of them is that the strings that i

263
00:08:02,479 --> 00:08:03,919
guess you could say should be there

264
00:08:03,919 --> 00:08:05,840
won't be there in your sample and so

265
00:08:05,840 --> 00:08:07,440
this first slide here is just to kind of

266
00:08:07,440 --> 00:08:09,120
give you some tips on how you can go and

267
00:08:09,120 --> 00:08:09,520
collect

268
00:08:09,520 --> 00:08:11,199
those strings you've got to probably

269
00:08:11,199 --> 00:08:13,120
write a script for it but i personally i

270
00:08:13,120 --> 00:08:14,639
just did it manually you can go into

271
00:08:14,639 --> 00:08:16,080
this section of hex

272
00:08:16,080 --> 00:08:18,240
uh look at the offset that it specifies

273
00:08:18,240 --> 00:08:19,520
and what you get is

274
00:08:19,520 --> 00:08:21,680
just a pointer to the string that you're

275
00:08:21,680 --> 00:08:23,360
supposed to be working with so

276
00:08:23,360 --> 00:08:25,520
this one is actually a debugging message

277
00:08:25,520 --> 00:08:27,039
and there are a lot of these

278
00:08:27,039 --> 00:08:28,400
there are a lot of debugging and logging

279
00:08:28,400 --> 00:08:30,720
messages within this malware to help the

280
00:08:30,720 --> 00:08:32,080
threat actors operate because what

281
00:08:32,080 --> 00:08:34,399
they're doing is fairly complex but

282
00:08:34,399 --> 00:08:35,599
we don't need to worry too much about

283
00:08:35,599 --> 00:08:37,200
that for the purposes of this talk i've

284
00:08:37,200 --> 00:08:39,360
got all of the strings labeled

285
00:08:39,360 --> 00:08:41,039
what is uh significantly more

286
00:08:41,039 --> 00:08:42,559
interesting

287
00:08:42,559 --> 00:08:45,120
is uh the strings and the interaction

288
00:08:45,120 --> 00:08:46,399
for how some of the functions that are

289
00:08:46,399 --> 00:08:48,560
built into the malware are called so

290
00:08:48,560 --> 00:08:49,839
on this slide you can see a couple of

291
00:08:49,839 --> 00:08:51,839
different function calls and these are

292
00:08:51,839 --> 00:08:54,240
prenamed within the malware

293
00:08:54,240 --> 00:08:56,240
there is get field string and set field

294
00:08:56,240 --> 00:08:57,600
string on this slide there are a few

295
00:08:57,600 --> 00:08:58,160
others

296
00:08:58,160 --> 00:09:00,959
like copy field string all of those are

297
00:09:00,959 --> 00:09:03,519
related to interacting with an iso 8583

298
00:09:03,519 --> 00:09:04,080
message

299
00:09:04,080 --> 00:09:06,000
and so the important reverse engineering

300
00:09:06,000 --> 00:09:08,320
concept that you need when you're

301
00:09:08,320 --> 00:09:10,880
looking at one of these is to understand

302
00:09:10,880 --> 00:09:11,360
that

303
00:09:11,360 --> 00:09:14,560
there is a pattern for how these work so

304
00:09:14,560 --> 00:09:16,160
before set field string is called for

305
00:09:16,160 --> 00:09:18,320
example there is a load into

306
00:09:18,320 --> 00:09:20,959
register three for a digit and that

307
00:09:20,959 --> 00:09:22,800
digit is going to be the field that is

308
00:09:22,800 --> 00:09:24,000
manipulated

309
00:09:24,000 --> 00:09:25,920
and above that there's a load into

310
00:09:25,920 --> 00:09:27,120
another register

311
00:09:27,120 --> 00:09:28,560
for a string and that's actually the

312
00:09:28,560 --> 00:09:30,560
data that's going to go into that field

313
00:09:30,560 --> 00:09:32,640
so as long as you know that pattern you

314
00:09:32,640 --> 00:09:33,920
can really do the

315
00:09:33,920 --> 00:09:35,760
reverse engineering for all of this and

316
00:09:35,760 --> 00:09:37,360
get field string is very similar there's

317
00:09:37,360 --> 00:09:39,920
a load for the fields that is

318
00:09:39,920 --> 00:09:43,120
going to be retrieved but in this case

319
00:09:43,120 --> 00:09:44,480
since it's not setting any data there's

320
00:09:44,480 --> 00:09:46,720
no data load

321
00:09:46,720 --> 00:09:48,240
once you have all of those principles

322
00:09:48,240 --> 00:09:50,240
kind of in mind you can go through and

323
00:09:50,240 --> 00:09:52,720
map out how this malware works and so

324
00:09:52,720 --> 00:09:54,480
the way you would read this graph here

325
00:09:54,480 --> 00:09:56,959
is from left to right and top to bottom

326
00:09:56,959 --> 00:09:58,480
so

327
00:09:58,480 --> 00:10:00,560
you can think of this as again this

328
00:10:00,560 --> 00:10:02,160
malware is injected into the payments by

329
00:10:02,160 --> 00:10:03,200
entering the software in the payment

330
00:10:03,200 --> 00:10:04,320
switch rather

331
00:10:04,320 --> 00:10:08,079
and uh a new iso 8583 message comes in

332
00:10:08,079 --> 00:10:10,320
and this will intercept that message and

333
00:10:10,320 --> 00:10:11,360
call this function

334
00:10:11,360 --> 00:10:13,600
new read from there it will call check

335
00:10:13,600 --> 00:10:15,600
sock and check sock we'll call get ip

336
00:10:15,600 --> 00:10:16,880
init address and

337
00:10:16,880 --> 00:10:18,800
it will perform a check for a valid ip

338
00:10:18,800 --> 00:10:20,160
to make sure that the message is

339
00:10:20,160 --> 00:10:21,440
originating from where it's supposed to

340
00:10:21,440 --> 00:10:23,519
be and then it will move on sequentially

341
00:10:23,519 --> 00:10:25,200
down the line to check for flags and

342
00:10:25,200 --> 00:10:27,600
then read receive and so on and so forth

343
00:10:27,600 --> 00:10:28,959
we're not going to go into every single

344
00:10:28,959 --> 00:10:30,079
one of these we're going to go into some

345
00:10:30,079 --> 00:10:31,120
of the important ones

346
00:10:31,120 --> 00:10:34,240
for this payment standard

347
00:10:34,240 --> 00:10:36,079
so again the first thing here is a check

348
00:10:36,079 --> 00:10:37,600
sock function and i have on the left

349
00:10:37,600 --> 00:10:38,800
side of the screen

350
00:10:38,800 --> 00:10:40,399
the i guess you could call it like the

351
00:10:40,399 --> 00:10:42,959
overhead for the new read function

352
00:10:42,959 --> 00:10:45,920
when check sock is called it performs an

353
00:10:45,920 --> 00:10:47,600
ip address whitelisting check it wants

354
00:10:47,600 --> 00:10:48,959
to make sure that the

355
00:10:48,959 --> 00:10:50,640
transaction is coming from a valid

356
00:10:50,640 --> 00:10:52,880
internal ip address there's nothing too

357
00:10:52,880 --> 00:10:55,360
uh too much to worry about there but as

358
00:10:55,360 --> 00:10:56,880
we kind of move along and on the left

359
00:10:56,880 --> 00:10:58,240
again on the screen you can see how

360
00:10:58,240 --> 00:10:58,880
we're

361
00:10:58,880 --> 00:11:02,320
progressing sort of through this code

362
00:11:02,320 --> 00:11:04,959
once it does the white listing check

363
00:11:04,959 --> 00:11:06,959
it's going to retrieve a bunch of

364
00:11:06,959 --> 00:11:08,560
information from a couple of different

365
00:11:08,560 --> 00:11:09,360
fields

366
00:11:09,360 --> 00:11:11,440
so the the fields that it's mainly

367
00:11:11,440 --> 00:11:12,560
interested in at first

368
00:11:12,560 --> 00:11:15,040
are the message type identifier the

369
00:11:15,040 --> 00:11:17,120
primary account number

370
00:11:17,120 --> 00:11:18,560
the processing code and then it also

371
00:11:18,560 --> 00:11:20,160
pulls the advice reason code

372
00:11:20,160 --> 00:11:22,880
and depending on what data that it sees

373
00:11:22,880 --> 00:11:23,839
there it has two

374
00:11:23,839 --> 00:11:26,399
options it can either transparently pass

375
00:11:26,399 --> 00:11:28,000
this message on to the bank because

376
00:11:28,000 --> 00:11:29,680
the primary account number didn't line

377
00:11:29,680 --> 00:11:30,959
up with a white list that the threat

378
00:11:30,959 --> 00:11:32,560
actor set up for example

379
00:11:32,560 --> 00:11:34,079
or some of the fields that were supposed

380
00:11:34,079 --> 00:11:35,600
to be there weren't there and

381
00:11:35,600 --> 00:11:36,880
if any of those things are the case it

382
00:11:36,880 --> 00:11:39,519
will send that on to the bank and

383
00:11:39,519 --> 00:11:40,800
nothing it will be as though nothing

384
00:11:40,800 --> 00:11:42,320
ever happens the bank will send a proper

385
00:11:42,320 --> 00:11:43,760
response and that response will go back

386
00:11:43,760 --> 00:11:44,800
to the atm

387
00:11:44,800 --> 00:11:46,399
on the other hand if it does see data

388
00:11:46,399 --> 00:11:47,680
that it's interested in and we'll dive

389
00:11:47,680 --> 00:11:48,959
into the mechanics of that a little bit

390
00:11:48,959 --> 00:11:50,959
more in the windows one

391
00:11:50,959 --> 00:11:52,399
it can generate one of three types of

392
00:11:52,399 --> 00:11:54,480
responses so here there are

393
00:11:54,480 --> 00:11:56,079
generate response transaction 1 and

394
00:11:56,079 --> 00:11:58,000
response transaction 2.

395
00:11:58,000 --> 00:12:01,120
and there is also a response inquiry and

396
00:12:01,120 --> 00:12:02,800
i'll dive into those in just a second as

397
00:12:02,800 --> 00:12:05,360
well but depending on this fraudulent

398
00:12:05,360 --> 00:12:06,880
response that it generates and sends

399
00:12:06,880 --> 00:12:08,800
back to the atms

400
00:12:08,800 --> 00:12:11,920
it will assuming all of that works it

401
00:12:11,920 --> 00:12:13,040
will

402
00:12:13,040 --> 00:12:15,440
log that it's blocked that message and

403
00:12:15,440 --> 00:12:17,120
it will send that response back and then

404
00:12:17,120 --> 00:12:19,600
the process will repeat

405
00:12:19,600 --> 00:12:22,639
so diving into transaction type 1 and

406
00:12:22,639 --> 00:12:23,839
transaction type 2 is actually very

407
00:12:23,839 --> 00:12:25,680
similar to transaction type 1.

408
00:12:25,680 --> 00:12:28,240
um the malware will intercept the

409
00:12:28,240 --> 00:12:29,680
icw8583 message

410
00:12:29,680 --> 00:12:32,160
it's going to uh again pull those fields

411
00:12:32,160 --> 00:12:32,959
that i had mentioned

412
00:12:32,959 --> 00:12:34,720
but then it's also going to copy it'll

413
00:12:34,720 --> 00:12:36,399
dive into this and it'll copy a bunch of

414
00:12:36,399 --> 00:12:39,519
data from the original iso 8583 message

415
00:12:39,519 --> 00:12:40,880
there are some different fields here and

416
00:12:40,880 --> 00:12:42,959
i've got a full list on the next slide

417
00:12:42,959 --> 00:12:45,200
all of the data that it copies it's used

418
00:12:45,200 --> 00:12:46,959
to construct the message that's going to

419
00:12:46,959 --> 00:12:47,279
go

420
00:12:47,279 --> 00:12:50,560
back to these atms and part of that is

421
00:12:50,560 --> 00:12:52,240
because the atms probably although we

422
00:12:52,240 --> 00:12:53,519
don't know for sure

423
00:12:53,519 --> 00:12:54,959
but we can we can make an assessment

424
00:12:54,959 --> 00:12:56,880
that the atms probably expect to receive

425
00:12:56,880 --> 00:12:57,920
data

426
00:12:57,920 --> 00:12:59,680
in a certain way again this is all

427
00:12:59,680 --> 00:13:01,440
environment specific stuff so we have to

428
00:13:01,440 --> 00:13:02,639
make some inferences about what the

429
00:13:02,639 --> 00:13:05,279
threat actor is doing

430
00:13:05,279 --> 00:13:08,240
um so with that in mind uh the fields

431
00:13:08,240 --> 00:13:09,760
that it's going to copy

432
00:13:09,760 --> 00:13:11,600
are the primary account number

433
00:13:11,600 --> 00:13:13,120
processing code and so on and so forth

434
00:13:13,120 --> 00:13:13,440
it's

435
00:13:13,440 --> 00:13:14,880
there's a there's a long list of these

436
00:13:14,880 --> 00:13:17,200
things here um and then for transaction

437
00:13:17,200 --> 00:13:19,200
type 2 it's the same list but minus

438
00:13:19,200 --> 00:13:22,320
a couple of track2 fields now

439
00:13:22,320 --> 00:13:24,000
once it does that it reconstructs the

440
00:13:24,000 --> 00:13:25,680
message and sends that back

441
00:13:25,680 --> 00:13:29,600
it's going to generate a random balance

442
00:13:29,600 --> 00:13:31,680
for a random transaction amount as part

443
00:13:31,680 --> 00:13:33,839
of this process and then the

444
00:13:33,839 --> 00:13:35,360
atm will allow the threat act to

445
00:13:35,360 --> 00:13:37,600
withdraw to withdraw cash

446
00:13:37,600 --> 00:13:40,399
so the other type of uh response that it

447
00:13:40,399 --> 00:13:42,480
can make here is the inquiry response so

448
00:13:42,480 --> 00:13:44,480
this is a response to a balance inquiry

449
00:13:44,480 --> 00:13:46,240
if you walk up to an atm and you put

450
00:13:46,240 --> 00:13:47,440
your card in and you say hey how much

451
00:13:47,440 --> 00:13:48,800
money do i have

452
00:13:48,800 --> 00:13:50,959
this is actually the type of transaction

453
00:13:50,959 --> 00:13:52,079
that would come back

454
00:13:52,079 --> 00:13:54,079
now i think the threat actors probably

455
00:13:54,079 --> 00:13:55,600
set something like this up to allow them

456
00:13:55,600 --> 00:13:57,120
to test their malware

457
00:13:57,120 --> 00:13:59,279
i i can't really think of any other

458
00:13:59,279 --> 00:14:00,800
reason for doing something like this but

459
00:14:00,800 --> 00:14:02,240
it would be very obvious to a threat

460
00:14:02,240 --> 00:14:03,839
actor if this were working properly with

461
00:14:03,839 --> 00:14:05,440
a balance inquiry and you'll see why in

462
00:14:05,440 --> 00:14:07,680
just a second

463
00:14:07,680 --> 00:14:09,680
so inside of the balance inquiry it

464
00:14:09,680 --> 00:14:11,600
copies fields in a very similar way to

465
00:14:11,600 --> 00:14:13,120
that transaction amount but there's also

466
00:14:13,120 --> 00:14:14,800
this format string which i have is kind

467
00:14:14,800 --> 00:14:16,639
of the multi-colored thing on the

468
00:14:16,639 --> 00:14:18,959
top right there so this format string is

469
00:14:18,959 --> 00:14:20,480
very important it's for

470
00:14:20,480 --> 00:14:23,680
determining how uh or it's for the

471
00:14:23,680 --> 00:14:25,279
structure of information that's going to

472
00:14:25,279 --> 00:14:27,600
go back into field 54 which is the field

473
00:14:27,600 --> 00:14:29,040
that handles

474
00:14:29,040 --> 00:14:31,120
all of your account balances and so

475
00:14:31,120 --> 00:14:32,880
breaking this format string down just a

476
00:14:32,880 --> 00:14:33,760
little bit

477
00:14:33,760 --> 00:14:36,399
we have a three or we have two kind of

478
00:14:36,399 --> 00:14:37,839
non-important

479
00:14:37,839 --> 00:14:39,839
items and one very important item so the

480
00:14:39,839 --> 00:14:40,959
non-important ones

481
00:14:40,959 --> 00:14:44,000
here it will say that the amount

482
00:14:44,000 --> 00:14:45,920
type is set to zero one which indicates

483
00:14:45,920 --> 00:14:47,440
that the amount going back is something

484
00:14:47,440 --> 00:14:48,720
called a ledger balance

485
00:14:48,720 --> 00:14:51,040
for the purposes of this malware uh not

486
00:14:51,040 --> 00:14:52,800
not too important we'll see an available

487
00:14:52,800 --> 00:14:53,360
balance

488
00:14:53,360 --> 00:14:56,399
a little bit later on but the main thing

489
00:14:56,399 --> 00:14:56,720
here

490
00:14:56,720 --> 00:14:59,279
is the currency code and so this

491
00:14:59,279 --> 00:15:01,839
currency code is set to 356 which is the

492
00:15:01,839 --> 00:15:02,959
indian rupee

493
00:15:02,959 --> 00:15:04,880
and what you can infer from something

494
00:15:04,880 --> 00:15:07,040
like that is that for whatever reason

495
00:15:07,040 --> 00:15:09,199
the atms on the receiving end of this

496
00:15:09,199 --> 00:15:10,639
expect to receive data in that

497
00:15:10,639 --> 00:15:11,519
denomination

498
00:15:11,519 --> 00:15:13,760
and so you can make some assumptions and

499
00:15:13,760 --> 00:15:15,600
do some open source research

500
00:15:15,600 --> 00:15:17,519
and i can't really go into victimology

501
00:15:17,519 --> 00:15:19,120
in a talk like this but

502
00:15:19,120 --> 00:15:21,120
um that will it will make it pretty

503
00:15:21,120 --> 00:15:22,160
clear as to why

504
00:15:22,160 --> 00:15:25,600
this might be the case and why uh or who

505
00:15:25,600 --> 00:15:27,839
this victim probably was

506
00:15:27,839 --> 00:15:30,320
so once those are set there's also a

507
00:15:30,320 --> 00:15:32,320
randomized amount of currency that that

508
00:15:32,320 --> 00:15:33,519
goes along with this

509
00:15:33,519 --> 00:15:35,680
and that gets sent back to the atms as

510
00:15:35,680 --> 00:15:37,199
well as a fraudulent balance inquiry

511
00:15:37,199 --> 00:15:38,480
response

512
00:15:38,480 --> 00:15:40,480
so putting all of that together we have

513
00:15:40,480 --> 00:15:41,600
injected the malware

514
00:15:41,600 --> 00:15:44,720
into the software on a payment switch we

515
00:15:44,720 --> 00:15:45,839
have done some

516
00:15:45,839 --> 00:15:48,800
uh preliminary checks uh anytime an iso

517
00:15:48,800 --> 00:15:50,800
8583 message comes in to see if it's one

518
00:15:50,800 --> 00:15:52,000
that we're interested in

519
00:15:52,000 --> 00:15:53,360
if it is one that we're interested in

520
00:15:53,360 --> 00:15:54,800
we've taken some decision points and

521
00:15:54,800 --> 00:15:56,880
we've either passed the transaction on

522
00:15:56,880 --> 00:16:00,079
or we have uh blocks the transaction

523
00:16:00,079 --> 00:16:02,399
and sent a fraudulent response either a

524
00:16:02,399 --> 00:16:04,320
fraudulent withdrawal

525
00:16:04,320 --> 00:16:08,079
or a fraudulent balance inquiry

526
00:16:08,079 --> 00:16:09,759
again i don't have time to go into type

527
00:16:09,759 --> 00:16:11,759
2 of the aax malware but this graph is

528
00:16:11,759 --> 00:16:12,800
here in case you want to reverse

529
00:16:12,800 --> 00:16:14,160
engineer it on your own time

530
00:16:14,160 --> 00:16:16,160
if you can reverse the first one you can

531
00:16:16,160 --> 00:16:17,440
reverse the second one

532
00:16:17,440 --> 00:16:19,519
uh the the concepts are the same there

533
00:16:19,519 --> 00:16:21,279
are just some structural differences and

534
00:16:21,279 --> 00:16:23,600
this aax type 2 is sort of a bridge to

535
00:16:23,600 --> 00:16:24,800
the windows one and

536
00:16:24,800 --> 00:16:26,720
so from a high level perspective you can

537
00:16:26,720 --> 00:16:28,160
uh if you were to look at this graph you

538
00:16:28,160 --> 00:16:29,199
would see that a lot of the payment

539
00:16:29,199 --> 00:16:32,000
logic has been consolidated

540
00:16:32,000 --> 00:16:34,079
and so that's really what we're going to

541
00:16:34,079 --> 00:16:36,160
look at for the windows version as well

542
00:16:36,160 --> 00:16:38,079
is how they consolidated and sort of

543
00:16:38,079 --> 00:16:41,279
changed this payment logic

544
00:16:41,279 --> 00:16:44,480
so within the windows version

545
00:16:44,480 --> 00:16:46,720
we have one once all of that same stuff

546
00:16:46,720 --> 00:16:48,160
happens a whitelist they've added a

547
00:16:48,160 --> 00:16:50,160
blacklisting function in

548
00:16:50,160 --> 00:16:52,560
but it's done the ipaddress check it's

549
00:16:52,560 --> 00:16:54,079
on all of these decision points it is

550
00:16:54,079 --> 00:16:55,440
going to go into what i call the

551
00:16:55,440 --> 00:16:56,959
generate response parent it's sort of a

552
00:16:56,959 --> 00:16:57,920
new function

553
00:16:57,920 --> 00:17:00,480
that was added into this malware so the

554
00:17:00,480 --> 00:17:03,600
response parent is responsible for

555
00:17:03,600 --> 00:17:05,520
taking in some additional data and doing

556
00:17:05,520 --> 00:17:07,439
some additional checks before proceeding

557
00:17:07,439 --> 00:17:08,720
with whether or not to generate a

558
00:17:08,720 --> 00:17:10,319
fraudulent response

559
00:17:10,319 --> 00:17:12,640
the response parent has two checks the

560
00:17:12,640 --> 00:17:13,359
first check

561
00:17:13,359 --> 00:17:15,520
is that it is going to look for field

562
00:17:15,520 --> 00:17:16,799
zero the mti

563
00:17:16,799 --> 00:17:19,119
and it's going to check whether or not

564
00:17:19,119 --> 00:17:20,240
field zero's

565
00:17:20,240 --> 00:17:22,480
third and fourth digit are set to zero

566
00:17:22,480 --> 00:17:24,480
zero if we think back to our original

567
00:17:24,480 --> 00:17:25,280
example

568
00:17:25,280 --> 00:17:27,520
we had a financial message that was zero

569
00:17:27,520 --> 00:17:28,480
two hundred

570
00:17:28,480 --> 00:17:30,000
and that indicated that something was a

571
00:17:30,000 --> 00:17:32,000
financial request

572
00:17:32,000 --> 00:17:33,520
so here it's looking to see if something

573
00:17:33,520 --> 00:17:36,960
was also 0-200 or 0-100 to indicate

574
00:17:36,960 --> 00:17:39,760
hey that's also a request as opposed to

575
00:17:39,760 --> 00:17:41,280
if it were 0-10

576
00:17:41,280 --> 00:17:43,200
which would indicate that something was

577
00:17:43,200 --> 00:17:44,720
a financial response

578
00:17:44,720 --> 00:17:46,160
the malware doesn't want to indic or it

579
00:17:46,160 --> 00:17:47,520
doesn't want to intercept a financial

580
00:17:47,520 --> 00:17:49,039
response because it wants to just pass

581
00:17:49,039 --> 00:17:50,240
that back on

582
00:17:50,240 --> 00:17:52,400
to the the device that's expecting that

583
00:17:52,400 --> 00:17:54,960
response so that's the first check

584
00:17:54,960 --> 00:17:57,919
the second check is for the point of

585
00:17:57,919 --> 00:17:59,200
service entry mode

586
00:17:59,200 --> 00:18:00,640
now the point of service entry mode

587
00:18:00,640 --> 00:18:02,240
again if you think back to that example

588
00:18:02,240 --> 00:18:03,679
it's how the data was entered into a

589
00:18:03,679 --> 00:18:05,679
terminal and here it's checking that the

590
00:18:05,679 --> 00:18:07,200
data in the point of service entry mode

591
00:18:07,200 --> 00:18:09,280
field starts with a nine which indicates

592
00:18:09,280 --> 00:18:10,880
that this was a car transaction rather

593
00:18:10,880 --> 00:18:12,240
than manually entering it

594
00:18:12,240 --> 00:18:13,520
and that's just an operational

595
00:18:13,520 --> 00:18:15,360
expectation from the threat actor that

596
00:18:15,360 --> 00:18:17,679
there aren't people here just manually

597
00:18:17,679 --> 00:18:19,200
entering in

598
00:18:19,200 --> 00:18:22,480
a whole bunch of data so assuming those

599
00:18:22,480 --> 00:18:23,520
tracks pass

600
00:18:23,520 --> 00:18:27,280
it will jump into a response

601
00:18:27,280 --> 00:18:29,919
workflow and this does there's a little

602
00:18:29,919 --> 00:18:31,280
bit of redundancy here but this will

603
00:18:31,280 --> 00:18:32,880
again grab the mti and then it's going

604
00:18:32,880 --> 00:18:34,240
to grab a whole bunch of fields that you

605
00:18:34,240 --> 00:18:35,440
can see here on the screen

606
00:18:35,440 --> 00:18:36,880
and the first check here is to just see

607
00:18:36,880 --> 00:18:38,400
do these fields have data in them and

608
00:18:38,400 --> 00:18:39,760
one of these is field three which is

609
00:18:39,760 --> 00:18:40,400
used in

610
00:18:40,400 --> 00:18:43,039
uh in just a second as well but for the

611
00:18:43,039 --> 00:18:44,640
most part that's all this check is

612
00:18:44,640 --> 00:18:46,640
uh concerned with initially and if these

613
00:18:46,640 --> 00:18:48,160
fields don't have data in them

614
00:18:48,160 --> 00:18:50,000
the malware can't uh or doesn't expect

615
00:18:50,000 --> 00:18:51,760
to be able to process this properly and

616
00:18:51,760 --> 00:18:53,200
so it's going to exit the

617
00:18:53,200 --> 00:18:56,160
it's going to exit this workflow now

618
00:18:56,160 --> 00:18:57,919
assuming all those checks are met the

619
00:18:57,919 --> 00:18:58,559
next set of

620
00:18:58,559 --> 00:19:01,840
uh the next set of logic here is

621
00:19:01,840 --> 00:19:03,440
for looking at that processing code

622
00:19:03,440 --> 00:19:05,120
which is in field three

623
00:19:05,120 --> 00:19:06,640
if the processing code starts with a

624
00:19:06,640 --> 00:19:08,400
three that's going to indicate that this

625
00:19:08,400 --> 00:19:09,840
is a balance inquiry and we'll see a

626
00:19:09,840 --> 00:19:11,520
workflow like we looked at before and

627
00:19:11,520 --> 00:19:12,960
that we'll look at again

628
00:19:12,960 --> 00:19:14,799
if it starts with a zero it's going to

629
00:19:14,799 --> 00:19:16,640
indicate that it needs to do

630
00:19:16,640 --> 00:19:19,440
a fraudulent transaction response and

631
00:19:19,440 --> 00:19:20,640
then finally if it's none of those

632
00:19:20,640 --> 00:19:21,280
things

633
00:19:21,280 --> 00:19:24,400
it's going to return

634
00:19:24,400 --> 00:19:28,080
an invalid pin response to the user

635
00:19:28,080 --> 00:19:31,440
so i have here all three options kind of

636
00:19:31,440 --> 00:19:33,039
on the screen and this is how they look

637
00:19:33,039 --> 00:19:34,240
in ida if you

638
00:19:34,240 --> 00:19:36,559
were to screenshot it out and we see

639
00:19:36,559 --> 00:19:38,000
that format string show up again

640
00:19:38,000 --> 00:19:39,200
i know it's a little bit hard to see on

641
00:19:39,200 --> 00:19:41,039
the graphics so i've kind of put it in

642
00:19:41,039 --> 00:19:43,520
multi-color again on this next screen

643
00:19:43,520 --> 00:19:45,679
but we have as part of our balance

644
00:19:45,679 --> 00:19:46,799
inquiry response

645
00:19:46,799 --> 00:19:48,880
instead of the indian rupee we have

646
00:19:48,880 --> 00:19:50,000
changed the currency

647
00:19:50,000 --> 00:19:52,960
to turkey's currency and that's pretty

648
00:19:52,960 --> 00:19:53,919
important again

649
00:19:53,919 --> 00:19:56,320
uh this would indicate that for whatever

650
00:19:56,320 --> 00:19:57,280
reason and

651
00:19:57,280 --> 00:19:58,400
most likely it would be tied to

652
00:19:58,400 --> 00:20:00,320
victimology that

653
00:20:00,320 --> 00:20:02,480
for whatever reason the malware expects

654
00:20:02,480 --> 00:20:04,000
or the 18 the malware expects to

655
00:20:04,000 --> 00:20:05,360
interact with an atm

656
00:20:05,360 --> 00:20:07,919
that in turn expects the currency to be

657
00:20:07,919 --> 00:20:08,880
turkeys

658
00:20:08,880 --> 00:20:10,400
and so that's a pretty important threat

659
00:20:10,400 --> 00:20:12,799
intelligence factoid there that you can

660
00:20:12,799 --> 00:20:15,440
pull out of something like this

661
00:20:15,440 --> 00:20:18,159
and and it kind of gives you an idea of

662
00:20:18,159 --> 00:20:19,600
how this can be a little bit more victim

663
00:20:19,600 --> 00:20:20,159
specific

664
00:20:20,159 --> 00:20:21,280
than just something that works

665
00:20:21,280 --> 00:20:23,679
everywhere uh and again i have the other

666
00:20:23,679 --> 00:20:25,200
the other two options here for one of

667
00:20:25,200 --> 00:20:27,039
those responses so

668
00:20:27,039 --> 00:20:28,559
that essentially is the fast cache

669
00:20:28,559 --> 00:20:30,640
malware i'm next i'm going to kind of

670
00:20:30,640 --> 00:20:32,159
jump into extensions for financial

671
00:20:32,159 --> 00:20:34,080
services but while i do that i would

672
00:20:34,080 --> 00:20:36,159
consider these three points as sort of a

673
00:20:36,159 --> 00:20:38,080
frame of reference for comparison so

674
00:20:38,080 --> 00:20:39,840
the first point is that a lot of things

675
00:20:39,840 --> 00:20:41,760
need to go right uh when you're

676
00:20:41,760 --> 00:20:43,280
when you're working with malware like

677
00:20:43,280 --> 00:20:45,280
this uh it's pretty

678
00:20:45,280 --> 00:20:46,640
challenging to interact with all of

679
00:20:46,640 --> 00:20:49,360
these devices at that level and so it

680
00:20:49,360 --> 00:20:51,120
interacts with all of these protocols

681
00:20:51,120 --> 00:20:52,559
and so when you're doing that and a lot

682
00:20:52,559 --> 00:20:54,480
can go wrong and that's why the malware

683
00:20:54,480 --> 00:20:55,840
has a whole bunch of logging

684
00:20:55,840 --> 00:20:57,919
information inside of it to help the

685
00:20:57,919 --> 00:20:59,120
threat actors out

686
00:20:59,120 --> 00:21:00,400
i think those are the two main things

687
00:21:00,400 --> 00:21:01,520
the other thing is that there are some

688
00:21:01,520 --> 00:21:02,400
pretty heavy

689
00:21:02,400 --> 00:21:03,840
operational requirements that you need

690
00:21:03,840 --> 00:21:05,600
to set up you need programmers that can

691
00:21:05,600 --> 00:21:06,080
do this

692
00:21:06,080 --> 00:21:07,919
and can make these changes on the fly

693
00:21:07,919 --> 00:21:09,679
you also need a network of money mules

694
00:21:09,679 --> 00:21:11,600
basically people that are there to

695
00:21:11,600 --> 00:21:13,919
withdraw the cash from the atms and so

696
00:21:13,919 --> 00:21:15,600
if you're a north korean threat actor

697
00:21:15,600 --> 00:21:17,600
not the easiest thing to set up and then

698
00:21:17,600 --> 00:21:19,600
finally you need access

699
00:21:19,600 --> 00:21:21,360
to this network and you need to get

700
00:21:21,360 --> 00:21:22,720
pretty far into the network in order to

701
00:21:22,720 --> 00:21:24,320
get access to that payment switch and

702
00:21:24,320 --> 00:21:24,720
and

703
00:21:24,720 --> 00:21:27,679
to you know take a stab at this so it's

704
00:21:27,679 --> 00:21:29,280
pretty challenging but it does allow the

705
00:21:29,280 --> 00:21:30,000
threat actors

706
00:21:30,000 --> 00:21:32,880
to operate uh the atms without putting

707
00:21:32,880 --> 00:21:34,320
anything on the atms

708
00:21:34,320 --> 00:21:37,440
and and to do these cache ads so with

709
00:21:37,440 --> 00:21:38,640
that in mind the next thing i want to

710
00:21:38,640 --> 00:21:39,520
talk about is something called

711
00:21:39,520 --> 00:21:41,280
extensions for financial services

712
00:21:41,280 --> 00:21:42,799
you can think of this as a standardized

713
00:21:42,799 --> 00:21:44,880
api for how

714
00:21:44,880 --> 00:21:46,480
software vendors are supposed to write

715
00:21:46,480 --> 00:21:48,080
their software for interacting with an

716
00:21:48,080 --> 00:21:48,640
atm

717
00:21:48,640 --> 00:21:50,799
so any atm you go to is able to withdraw

718
00:21:50,799 --> 00:21:53,280
cache it's able to

719
00:21:53,280 --> 00:21:55,600
you can actually deposit cache there it

720
00:21:55,600 --> 00:21:56,960
has all these blinking lights all of

721
00:21:56,960 --> 00:21:58,000
those things

722
00:21:58,000 --> 00:22:01,440
go into the extensions for financial

723
00:22:01,440 --> 00:22:02,640
services

724
00:22:02,640 --> 00:22:04,159
standard and we're actually going to be

725
00:22:04,159 --> 00:22:06,400
looking at one called jxfs which is

726
00:22:06,400 --> 00:22:09,280
java extensions for financial services

727
00:22:09,280 --> 00:22:10,559
now we're going to be looking at this in

728
00:22:10,559 --> 00:22:12,240
the context of a specific family but if

729
00:22:12,240 --> 00:22:13,919
you're interested more in traditional

730
00:22:13,919 --> 00:22:15,280
xfs malware

731
00:22:15,280 --> 00:22:17,120
there are some links that i have here

732
00:22:17,120 --> 00:22:19,039
and there are a couple common api calls

733
00:22:19,039 --> 00:22:20,320
none of these actually appear in this

734
00:22:20,320 --> 00:22:21,840
particular family but they are ones that

735
00:22:21,840 --> 00:22:22,400
you'll see

736
00:22:22,400 --> 00:22:25,200
fairly often uh within other atm malware

737
00:22:25,200 --> 00:22:26,240
that's out there

738
00:22:26,240 --> 00:22:27,360
but we're interested in this malware

739
00:22:27,360 --> 00:22:29,280
family called injects pure now

740
00:22:29,280 --> 00:22:31,520
i i can't go too much into the incident

741
00:22:31,520 --> 00:22:32,559
that

742
00:22:32,559 --> 00:22:34,159
in which this malware was used but this

743
00:22:34,159 --> 00:22:35,919
is an atm malware family that

744
00:22:35,919 --> 00:22:39,200
relies on both xfs and a proprietary atm

745
00:22:39,200 --> 00:22:42,159
implementation the reason i want to go

746
00:22:42,159 --> 00:22:43,919
into this is less to talk about how the

747
00:22:43,919 --> 00:22:45,919
malware dispenses cash because

748
00:22:45,919 --> 00:22:47,120
i think that's been kind of done to

749
00:22:47,120 --> 00:22:49,039
death in open source and it's not

750
00:22:49,039 --> 00:22:50,480
super interesting what i want to talk

751
00:22:50,480 --> 00:22:52,400
about instead is

752
00:22:52,400 --> 00:22:55,440
what people can do to an atm

753
00:22:55,440 --> 00:22:57,200
once they get this level of access and

754
00:22:57,200 --> 00:22:59,039
so that's really the context

755
00:22:59,039 --> 00:23:00,480
that we're going to be uh looking at

756
00:23:00,480 --> 00:23:02,080
this malware kind of the frame of mind

757
00:23:02,080 --> 00:23:03,039
we should have

758
00:23:03,039 --> 00:23:04,640
uh and we'll see some pretty interesting

759
00:23:04,640 --> 00:23:06,080
capabilities there that aren't

760
00:23:06,080 --> 00:23:06,799
necessarily

761
00:23:06,799 --> 00:23:08,080
built into this malware but could have

762
00:23:08,080 --> 00:23:10,720
been so with inject superior the

763
00:23:10,720 --> 00:23:12,799
operators can do some pretty traditional

764
00:23:12,799 --> 00:23:13,840
or they can perform some pretty

765
00:23:13,840 --> 00:23:15,520
traditional actions of course it's atm

766
00:23:15,520 --> 00:23:16,080
malware

767
00:23:16,080 --> 00:23:18,320
so they can dispense cache they can

768
00:23:18,320 --> 00:23:19,919
query device information

769
00:23:19,919 --> 00:23:23,200
and that's really used to kind of

770
00:23:23,200 --> 00:23:26,240
find out how much cash is in the atm and

771
00:23:26,240 --> 00:23:27,919
they can execute arbitrary code

772
00:23:27,919 --> 00:23:29,760
all of those things are pretty common to

773
00:23:29,760 --> 00:23:32,080
any atm hour family and honestly aside

774
00:23:32,080 --> 00:23:33,600
from dispensing cash they're common to

775
00:23:33,600 --> 00:23:36,559
any malware family just in general

776
00:23:36,559 --> 00:23:38,640
but we're going to focus or we're going

777
00:23:38,640 --> 00:23:40,240
to dial in on the cache dispensing

778
00:23:40,240 --> 00:23:41,039
function

779
00:23:41,039 --> 00:23:43,760
and the xfs components that follow that

780
00:23:43,760 --> 00:23:45,200
if you are interested in a full reverse

781
00:23:45,200 --> 00:23:46,480
engineering of it it's

782
00:23:46,480 --> 00:23:49,039
again it's been kind of done to death in

783
00:23:49,039 --> 00:23:50,799
an open source and so here are three

784
00:23:50,799 --> 00:23:52,320
uh just references for that the third

785
00:23:52,320 --> 00:23:53,679
one we are actually going to reference

786
00:23:53,679 --> 00:23:56,000
again and that one's a very good one and

787
00:23:56,000 --> 00:23:57,679
so we'll come back to that but the

788
00:23:57,679 --> 00:23:58,960
important thing that you need to know

789
00:23:58,960 --> 00:24:00,320
about this malware is that the threat

790
00:24:00,320 --> 00:24:01,279
actors

791
00:24:01,279 --> 00:24:03,919
uh essentially deployed this malware to

792
00:24:03,919 --> 00:24:05,440
a bunch of atms

793
00:24:05,440 --> 00:24:08,400
and the malware when it runs it creates

794
00:24:08,400 --> 00:24:10,159
an http server

795
00:24:10,159 --> 00:24:11,919
and that server can accept get and post

796
00:24:11,919 --> 00:24:14,159
requests that carry out those commands

797
00:24:14,159 --> 00:24:14,880
that i mentioned

798
00:24:14,880 --> 00:24:17,120
before and that's really the core

799
00:24:17,120 --> 00:24:18,960
concept there are two workflows to kind

800
00:24:18,960 --> 00:24:20,240
of get you to this spot

801
00:24:20,240 --> 00:24:22,559
if from from the malware's viewpoint the

802
00:24:22,559 --> 00:24:23,840
one we're going to be looking at is the

803
00:24:23,840 --> 00:24:25,840
one that is just directly responsible

804
00:24:25,840 --> 00:24:26,640
for

805
00:24:26,640 --> 00:24:29,039
um all of the different commands so

806
00:24:29,039 --> 00:24:30,480
we're going to dial in on the suspension

807
00:24:30,480 --> 00:24:32,400
commands but the other ones are up there

808
00:24:32,400 --> 00:24:34,799
um this sits within the server that's

809
00:24:34,799 --> 00:24:36,400
created and i have that here on the

810
00:24:36,400 --> 00:24:36,880
screen

811
00:24:36,880 --> 00:24:38,640
basically it opens a listener on a high

812
00:24:38,640 --> 00:24:42,320
port and just listens for those requests

813
00:24:42,320 --> 00:24:44,400
so within this dispensing commands there

814
00:24:44,400 --> 00:24:45,360
are two

815
00:24:45,360 --> 00:24:47,039
possible branches that the malware can

816
00:24:47,039 --> 00:24:48,559
take it can

817
00:24:48,559 --> 00:24:50,559
query i call it querying the device

818
00:24:50,559 --> 00:24:51,919
information but it's really querying the

819
00:24:51,919 --> 00:24:53,360
cassette information

820
00:24:53,360 --> 00:24:55,919
and it can dispense cache and so dialing

821
00:24:55,919 --> 00:24:58,400
in just on the first one the query

822
00:24:58,400 --> 00:25:00,799
we can see a couple of different xfs

823
00:25:00,799 --> 00:25:02,480
callouts here so we have

824
00:25:02,480 --> 00:25:05,600
get cash unit we have a

825
00:25:05,600 --> 00:25:07,919
dispenser call and we have get number of

826
00:25:07,919 --> 00:25:09,120
cash units

827
00:25:09,120 --> 00:25:11,120
so these are things where if you're

828
00:25:11,120 --> 00:25:12,320
looking at the code

829
00:25:12,320 --> 00:25:14,240
these are not standard java calls

830
00:25:14,240 --> 00:25:15,520
whereas pretty much everything else

831
00:25:15,520 --> 00:25:17,120
is uh and they're not standard

832
00:25:17,120 --> 00:25:18,720
javascript calls and again pretty much

833
00:25:18,720 --> 00:25:20,320
everything else is in that regard as

834
00:25:20,320 --> 00:25:21,039
well

835
00:25:21,039 --> 00:25:23,919
so these look like they could be xfs

836
00:25:23,919 --> 00:25:24,960
implementations

837
00:25:24,960 --> 00:25:26,720
so how do we how do we figure that out

838
00:25:26,720 --> 00:25:28,000
well if we take get cash unit

839
00:25:28,000 --> 00:25:29,279
and we throw it into the magic google

840
00:25:29,279 --> 00:25:31,919
box uh you will get this google book

841
00:25:31,919 --> 00:25:34,159
uh it's some sort of atm book i think

842
00:25:34,159 --> 00:25:36,400
it's in german it's from like 2004

843
00:25:36,400 --> 00:25:39,440
um and you can see here that uh call to

844
00:25:39,440 --> 00:25:41,360
get cash unit within this jxfs

845
00:25:41,360 --> 00:25:42,000
implementation

846
00:25:42,000 --> 00:25:44,480
within this book will return this.cash

847
00:25:44,480 --> 00:25:45,440
unit

848
00:25:45,440 --> 00:25:47,120
not super illuminating if you're trying

849
00:25:47,120 --> 00:25:48,480
to figure out what this is doing but it

850
00:25:48,480 --> 00:25:51,039
at least indicates that this is probably

851
00:25:51,039 --> 00:25:52,480
we're probably on the right path to

852
00:25:52,480 --> 00:25:55,440
determining that this is xfs

853
00:25:55,440 --> 00:25:57,360
so the next stop and probably the the

854
00:25:57,360 --> 00:25:59,039
better stop once you know about it is to

855
00:25:59,039 --> 00:26:00,720
go to the actual documentation

856
00:26:00,720 --> 00:26:01,919
and so if you go to the send

857
00:26:01,919 --> 00:26:04,799
documentation and you look at book five

858
00:26:04,799 --> 00:26:08,159
uh which holds all of the different

859
00:26:08,159 --> 00:26:11,840
uh i guess api calls for this malware or

860
00:26:11,840 --> 00:26:12,480
sorry for

861
00:26:12,480 --> 00:26:15,200
uh xfs if you go in there and you look

862
00:26:15,200 --> 00:26:16,960
for get cash unit you will indeed see an

863
00:26:16,960 --> 00:26:18,880
entry in the official documentation

864
00:26:18,880 --> 00:26:21,440
for get cash unit and this uh with a

865
00:26:21,440 --> 00:26:22,720
little bit more research this

866
00:26:22,720 --> 00:26:24,480
essentially returns the information

867
00:26:24,480 --> 00:26:25,760
about the

868
00:26:25,760 --> 00:26:27,440
money that is stored in the atm in

869
00:26:27,440 --> 00:26:29,200
different cassettes and

870
00:26:29,200 --> 00:26:30,720
there is there are some differences

871
00:26:30,720 --> 00:26:32,799
between how this is written out here and

872
00:26:32,799 --> 00:26:33,840
how the malware

873
00:26:33,840 --> 00:26:35,440
or sorry yeah how the malware uses it

874
00:26:35,440 --> 00:26:37,440
and how the proprietary atm software

875
00:26:37,440 --> 00:26:38,400
uses it

876
00:26:38,400 --> 00:26:41,919
but essentially uh this you could call

877
00:26:41,919 --> 00:26:43,520
this an xfs implementation

878
00:26:43,520 --> 00:26:44,960
and i would be comfortable saying that

879
00:26:44,960 --> 00:26:47,120
the developers for the atm probably just

880
00:26:47,120 --> 00:26:47,840
built

881
00:26:47,840 --> 00:26:50,159
their implementation on top of uh on top

882
00:26:50,159 --> 00:26:51,520
of xfs rather than

883
00:26:51,520 --> 00:26:55,120
in place of xfs so that handles one of

884
00:26:55,120 --> 00:26:56,799
the api calls but what about get number

885
00:26:56,799 --> 00:26:58,080
of cache units

886
00:26:58,080 --> 00:26:59,520
i've got to give a huge shout out to

887
00:26:59,520 --> 00:27:01,279
frank baldwin who did a presentation

888
00:27:01,279 --> 00:27:02,240
last year

889
00:27:02,240 --> 00:27:03,760
more specifically on how this malware

890
00:27:03,760 --> 00:27:05,600
works and and the context in which it

891
00:27:05,600 --> 00:27:06,400
was used

892
00:27:06,400 --> 00:27:08,000
but one of the things he discovered was

893
00:27:08,000 --> 00:27:10,400
that the uh atm software as part of the

894
00:27:10,400 --> 00:27:11,520
incident response

895
00:27:11,520 --> 00:27:13,360
was actually uploaded to virustotal so

896
00:27:13,360 --> 00:27:14,720
i'm not going to just paste some

897
00:27:14,720 --> 00:27:17,200
all of the vendors code um you know all

898
00:27:17,200 --> 00:27:18,720
over the place on here but i'm going to

899
00:27:18,720 --> 00:27:20,159
show the relevant things

900
00:27:20,159 --> 00:27:23,440
so get cash unit sits within this atms

901
00:27:23,440 --> 00:27:25,039
code for peripheral

902
00:27:25,039 --> 00:27:26,799
under the context of peripheral notes

903
00:27:26,799 --> 00:27:28,960
deposit dot get cash unit

904
00:27:28,960 --> 00:27:31,520
and the same goes for get number of cash

905
00:27:31,520 --> 00:27:32,399
units

906
00:27:32,399 --> 00:27:34,080
and what i want to talk about here is

907
00:27:34,080 --> 00:27:36,000
less about what these are doing but and

908
00:27:36,000 --> 00:27:36,720
more about

909
00:27:36,720 --> 00:27:38,720
uh what the threat actors could have

910
00:27:38,720 --> 00:27:39,840
done

911
00:27:39,840 --> 00:27:42,320
uh so under that peripheral.notes

912
00:27:42,320 --> 00:27:43,200
deposit call

913
00:27:43,200 --> 00:27:45,919
are a bunch of other fairly mundane

914
00:27:45,919 --> 00:27:47,120
calls

915
00:27:47,120 --> 00:27:49,039
in terms of interacting with the atm but

916
00:27:49,039 --> 00:27:50,559
they would allow the threat actors to

917
00:27:50,559 --> 00:27:52,559
to query a lot of these types of a lot

918
00:27:52,559 --> 00:27:54,000
of these types of information

919
00:27:54,000 --> 00:27:55,760
so most of these aren't super exciting

920
00:27:55,760 --> 00:27:57,360
um there's some extra calls for

921
00:27:57,360 --> 00:27:58,559
retrieving more information about the

922
00:27:58,559 --> 00:27:59,520
cache units

923
00:27:59,520 --> 00:28:00,559
if you haven't heard enough about the

924
00:28:00,559 --> 00:28:03,279
cache units uh you can get the media

925
00:28:03,279 --> 00:28:04,159
status

926
00:28:04,159 --> 00:28:06,159
you can get some other settings nothing

927
00:28:06,159 --> 00:28:07,760
too groundbreaking but it does give the

928
00:28:07,760 --> 00:28:08,720
thread actors a little bit more

929
00:28:08,720 --> 00:28:09,440
information

930
00:28:09,440 --> 00:28:12,480
so the next step here

931
00:28:12,480 --> 00:28:13,679
if you're interested in thread actor

932
00:28:13,679 --> 00:28:15,679
capabilities on an atm is to actually

933
00:28:15,679 --> 00:28:16,000
back

934
00:28:16,000 --> 00:28:18,880
that up as uh like one notch and instead

935
00:28:18,880 --> 00:28:21,039
of looking at peripherals.notes deposit

936
00:28:21,039 --> 00:28:22,640
you would look on the atm software for

937
00:28:22,640 --> 00:28:24,159
just what the peripherals did and again

938
00:28:24,159 --> 00:28:25,600
this is something the threat actors had

939
00:28:25,600 --> 00:28:27,760
access to

940
00:28:27,760 --> 00:28:31,360
so looking at just the peripheral class

941
00:28:31,360 --> 00:28:33,279
instead of notes deposit there are some

942
00:28:33,279 --> 00:28:34,720
other options you can call

943
00:28:34,720 --> 00:28:37,840
peripherals.screen and

944
00:28:37,960 --> 00:28:39,039
peripherals.host.systemservice.pinpad

945
00:28:39,039 --> 00:28:40,399
and under each of those

946
00:28:40,399 --> 00:28:42,559
are some actions that you can take the

947
00:28:42,559 --> 00:28:44,159
most important ones i think are this

948
00:28:44,159 --> 00:28:46,960
idea of disabling and enabling keys

949
00:28:46,960 --> 00:28:48,399
why might a threat actor want to do

950
00:28:48,399 --> 00:28:50,080
something like that well

951
00:28:50,080 --> 00:28:51,600
if you're trying to coordinate a cash

952
00:28:51,600 --> 00:28:53,840
out

953
00:28:53,919 --> 00:28:55,440
what you might want to do is maximize

954
00:28:55,440 --> 00:28:56,799
the amount of cash that is actually

955
00:28:56,799 --> 00:28:58,240
sitting in an atm and if you just let

956
00:28:58,240 --> 00:28:59,919
people use the atm all day

957
00:28:59,919 --> 00:29:01,600
you might be sending a money mule to an

958
00:29:01,600 --> 00:29:03,200
atm to pick out cash

959
00:29:03,200 --> 00:29:05,679
or to pick up cash rather and there

960
00:29:05,679 --> 00:29:06,880
might be none in there there might not

961
00:29:06,880 --> 00:29:08,480
be as much in there as it could be so

962
00:29:08,480 --> 00:29:11,360
this creates an option for threat actors

963
00:29:11,360 --> 00:29:12,080
to perhaps

964
00:29:12,080 --> 00:29:14,000
disable and enable keys on an atm to

965
00:29:14,000 --> 00:29:15,440
stop it from functioning the way it's

966
00:29:15,440 --> 00:29:16,399
supposed to

967
00:29:16,399 --> 00:29:18,000
so that other people try and use it and

968
00:29:18,000 --> 00:29:19,520
have to walk away from it

969
00:29:19,520 --> 00:29:22,080
um that is sort of a high variance

970
00:29:22,080 --> 00:29:23,200
strategy because if you

971
00:29:23,200 --> 00:29:25,120
have an atm that's not working you raise

972
00:29:25,120 --> 00:29:26,320
the risk that someone's going to go look

973
00:29:26,320 --> 00:29:27,279
at it

974
00:29:27,279 --> 00:29:28,960
but depending on how you're timing this

975
00:29:28,960 --> 00:29:31,120
if you do that say late at night

976
00:29:31,120 --> 00:29:32,559
or earlier in the morning those are some

977
00:29:32,559 --> 00:29:33,840
options that a threat actor could take

978
00:29:33,840 --> 00:29:34,960
if they're willing to kind of roll the

979
00:29:34,960 --> 00:29:36,320
dice a little bit on how much money

980
00:29:36,320 --> 00:29:37,679
they're taking out

981
00:29:37,679 --> 00:29:38,880
there are some other things that i

982
00:29:38,880 --> 00:29:40,480
haven't listed here they're a bit more

983
00:29:40,480 --> 00:29:42,080
mundane

984
00:29:42,080 --> 00:29:43,760
one is you know the blinking blinking

985
00:29:43,760 --> 00:29:45,120
lights on an atm you can

986
00:29:45,120 --> 00:29:47,360
make those blank all you want but from a

987
00:29:47,360 --> 00:29:49,200
security standpoint you know

988
00:29:49,200 --> 00:29:51,360
go for it we're more worried about

989
00:29:51,360 --> 00:29:53,600
people taking the money out i think

990
00:29:53,600 --> 00:29:55,520
but those i think that really speaks to

991
00:29:55,520 --> 00:29:57,360
the capabilities that a threat actor has

992
00:29:57,360 --> 00:29:58,320
there

993
00:29:58,320 --> 00:30:02,000
so kind of just circling back on um

994
00:30:02,000 --> 00:30:03,919
or kind of closing the loop on the rest

995
00:30:03,919 --> 00:30:05,600
of this we have

996
00:30:05,600 --> 00:30:07,360
uh one other part of the dispense

997
00:30:07,360 --> 00:30:09,120
function which is just the actual

998
00:30:09,120 --> 00:30:10,559
dispensing of cash

999
00:30:10,559 --> 00:30:13,919
and so dispense itself is possibly an

1000
00:30:13,919 --> 00:30:15,679
xfs implementation

1001
00:30:15,679 --> 00:30:17,840
i can find it in the documentation but

1002
00:30:17,840 --> 00:30:19,440
it's implemented um

1003
00:30:19,440 --> 00:30:21,279
significantly differently i think within

1004
00:30:21,279 --> 00:30:23,279
the proprietary code that that's

1005
00:30:23,279 --> 00:30:24,080
available

1006
00:30:24,080 --> 00:30:26,320
so it's a little bit unclear if this one

1007
00:30:26,320 --> 00:30:28,720
is built on top of xfs or built in place

1008
00:30:28,720 --> 00:30:30,000
of xfs

1009
00:30:30,000 --> 00:30:31,520
but again it you know it speaks to the

1010
00:30:31,520 --> 00:30:32,799
threat actor capabilities when they're

1011
00:30:32,799 --> 00:30:36,159
interacting with a device like this

1012
00:30:36,159 --> 00:30:37,840
and so that is really what i wanted to

1013
00:30:37,840 --> 00:30:39,360
talk about from the extensions for

1014
00:30:39,360 --> 00:30:40,880
financial services approach so if we

1015
00:30:40,880 --> 00:30:42,399
think about the fast cash malware and we

1016
00:30:42,399 --> 00:30:43,440
think about this

1017
00:30:43,440 --> 00:30:46,080
kind of in the same context in fast cash

1018
00:30:46,080 --> 00:30:47,360
we were able to

1019
00:30:47,360 --> 00:30:50,799
send people to an atm and they would

1020
00:30:50,799 --> 00:30:52,799
you know run a card into it and as long

1021
00:30:52,799 --> 00:30:54,399
as it's one of the threat actors cards

1022
00:30:54,399 --> 00:30:55,520
it would fraudulently approve a

1023
00:30:55,520 --> 00:30:56,640
transaction

1024
00:30:56,640 --> 00:30:58,880
here we have a threat actor who

1025
00:30:58,880 --> 00:31:01,039
developed proprietary malware

1026
00:31:01,039 --> 00:31:04,799
um they were the way this works is they

1027
00:31:04,799 --> 00:31:05,600
would have sent

1028
00:31:05,600 --> 00:31:07,760
people to those atms at a specified time

1029
00:31:07,760 --> 00:31:09,519
to have the cash

1030
00:31:09,519 --> 00:31:11,760
uh come out of an atm and you know via

1031
00:31:11,760 --> 00:31:12,799
post request and then they would

1032
00:31:12,799 --> 00:31:14,480
withdraw that cash themselves

1033
00:31:14,480 --> 00:31:16,080
and so that's sort of the comparison

1034
00:31:16,080 --> 00:31:17,919
approach there one of the problems here

1035
00:31:17,919 --> 00:31:19,039
is there's some increased development

1036
00:31:19,039 --> 00:31:20,640
time because they had to

1037
00:31:20,640 --> 00:31:24,559
develop malware specific for this atm

1038
00:31:24,559 --> 00:31:25,760
and they also had to work with some

1039
00:31:25,760 --> 00:31:27,200
proprietary implementations when they

1040
00:31:27,200 --> 00:31:28,720
did that that might not necessarily be

1041
00:31:28,720 --> 00:31:29,519
documented

1042
00:31:29,519 --> 00:31:30,880
so that's a little bit challenging and

1043
00:31:30,880 --> 00:31:31,840
testing's always a little bit

1044
00:31:31,840 --> 00:31:32,720
challenging

1045
00:31:32,720 --> 00:31:34,320
um and so those are some of the things

1046
00:31:34,320 --> 00:31:36,080
that kind of come up there but

1047
00:31:36,080 --> 00:31:37,840
you know ultimately they did have the

1048
00:31:37,840 --> 00:31:39,440
opportunity to

1049
00:31:39,440 --> 00:31:42,559
run an attack like this and so

1050
00:31:42,559 --> 00:31:44,480
with that i will teleport myself back to

1051
00:31:44,480 --> 00:31:46,080
the future and back to another room

1052
00:31:46,080 --> 00:31:48,240
and i'll have just this slide up there

1053
00:31:48,240 --> 00:31:49,360
if you want to see some concluding

1054
00:31:49,360 --> 00:31:50,480
thoughts but at this point

1055
00:31:50,480 --> 00:31:52,080
uh thank you for listening to my talk

1056
00:31:52,080 --> 00:31:53,519
and i'm happy to take as many questions

1057
00:31:53,519 --> 00:31:55,919
as i can

1058
00:31:57,440 --> 00:31:59,519
all right so first of all thank you all

1059
00:31:59,519 --> 00:32:00,559
uh there are two things

1060
00:32:00,559 --> 00:32:03,039
i want to just uh mention before i go

1061
00:32:03,039 --> 00:32:04,480
into a couple of the questions that came

1062
00:32:04,480 --> 00:32:05,600
up during the talk

1063
00:32:05,600 --> 00:32:07,760
the first is there is a slight slight

1064
00:32:07,760 --> 00:32:09,760
error on one of the slides which is data

1065
00:32:09,760 --> 00:32:10,240
element

1066
00:32:10,240 --> 00:32:13,120
60 i have listed as being the advice

1067
00:32:13,120 --> 00:32:14,799
reason code that is the advice reason

1068
00:32:14,799 --> 00:32:15,600
code

1069
00:32:15,600 --> 00:32:17,360
uh for certain payment switches but not

1070
00:32:17,360 --> 00:32:18,399
all of them that's actually a private

1071
00:32:18,399 --> 00:32:20,159
reserve field that is corrected than the

1072
00:32:20,159 --> 00:32:20,960
slides that

1073
00:32:20,960 --> 00:32:23,039
are uh going to be uploaded the second

1074
00:32:23,039 --> 00:32:24,080
thing i would mention

1075
00:32:24,080 --> 00:32:26,240
is that there's white paper that covers

1076
00:32:26,240 --> 00:32:27,360
a little bit more on

1077
00:32:27,360 --> 00:32:30,399
ax type 2 and also has some of the

1078
00:32:30,399 --> 00:32:31,919
some additional context and tooling

1079
00:32:31,919 --> 00:32:33,679
listed so feel free to check that out

1080
00:32:33,679 --> 00:32:36,159
when that goes up online tonight

1081
00:32:36,159 --> 00:32:37,679
there are a couple of questions that

1082
00:32:37,679 --> 00:32:39,440
came in and we're on about

1083
00:32:39,440 --> 00:32:42,000
uh 45 second delay here so if you hear

1084
00:32:42,000 --> 00:32:43,360
me say this and you have a question it

1085
00:32:43,360 --> 00:32:44,799
means you should type it

1086
00:32:44,799 --> 00:32:47,519
um one of the questions that came up is

1087
00:32:47,519 --> 00:32:49,039
can i elaborate on what a payment switch

1088
00:32:49,039 --> 00:32:50,880
is so that's a great question

1089
00:32:50,880 --> 00:32:51,919
i probably could have done a little bit

1090
00:32:51,919 --> 00:32:54,320
of a better job on that a payment switch

1091
00:32:54,320 --> 00:32:58,159
is a device that sits in between

1092
00:32:58,159 --> 00:33:01,360
uh all of the payment devices and a bank

1093
00:33:01,360 --> 00:33:04,399
that needs to approve transactions so

1094
00:33:04,399 --> 00:33:08,960
um you've got atms and you've got

1095
00:33:08,960 --> 00:33:10,720
uh your grocery store point of sale

1096
00:33:10,720 --> 00:33:12,159
devices and this payment switch will

1097
00:33:12,159 --> 00:33:13,760
process all of the messages coming into

1098
00:33:13,760 --> 00:33:15,600
those and decide whether or not to

1099
00:33:15,600 --> 00:33:16,880
forward those onto a bank

1100
00:33:16,880 --> 00:33:18,320
and then when the bank decides whether

1101
00:33:18,320 --> 00:33:21,440
or not it wants to approve or disapprove

1102
00:33:21,440 --> 00:33:23,440
a transaction request it'll send that to

1103
00:33:23,440 --> 00:33:24,320
the payment switch and the payment

1104
00:33:24,320 --> 00:33:25,679
switch will send it out it's a way of

1105
00:33:25,679 --> 00:33:27,120
just processing all of the different

1106
00:33:27,120 --> 00:33:28,720
types of data that are coming in

1107
00:33:28,720 --> 00:33:30,240
and so that's why it's so important to

1108
00:33:30,240 --> 00:33:32,559
the ecosystem so another good question

1109
00:33:32,559 --> 00:33:33,760
that came up was well should we just

1110
00:33:33,760 --> 00:33:36,399
change the iso 8583 standard

1111
00:33:36,399 --> 00:33:37,600
i would never recommend that and it

1112
00:33:37,600 --> 00:33:38,880
would also be impossible even if i

1113
00:33:38,880 --> 00:33:40,240
thought that were a good idea

1114
00:33:40,240 --> 00:33:42,960
um but the iso 8583 standard is the card

1115
00:33:42,960 --> 00:33:43,919
payment standard for

1116
00:33:43,919 --> 00:33:46,320
absolutely everything um there are some

1117
00:33:46,320 --> 00:33:48,640
things that go along with card payments

1118
00:33:48,640 --> 00:33:53,840
um such as

1119
00:33:53,840 --> 00:33:55,840
like envy transactions for for example

1120
00:33:55,840 --> 00:33:57,039
and that was something i thought someone

1121
00:33:57,039 --> 00:33:57,679
uh

1122
00:33:57,679 --> 00:33:59,360
might ask and i think this is kind of

1123
00:33:59,360 --> 00:34:01,279
related to it um

1124
00:34:01,279 --> 00:34:02,880
there are different ways to do these car

1125
00:34:02,880 --> 00:34:04,799
transactions that could randomize the

1126
00:34:04,799 --> 00:34:05,519
data

1127
00:34:05,519 --> 00:34:08,800
um but ultimately um and and

1128
00:34:08,800 --> 00:34:10,239
by randomizing it i mean they might make

1129
00:34:10,239 --> 00:34:11,918
it less predictable for what's supposed

1130
00:34:11,918 --> 00:34:13,679
to be going back to an atm

1131
00:34:13,679 --> 00:34:17,040
so those things might make it harder to

1132
00:34:17,040 --> 00:34:18,879
do these types of attacks

1133
00:34:18,879 --> 00:34:20,639
but ultimately what's happening here is

1134
00:34:20,639 --> 00:34:22,159
that the payment switch is compromised

1135
00:34:22,159 --> 00:34:23,199
and there's nothing wrong

1136
00:34:23,199 --> 00:34:25,280
at all with the payment standard being

1137
00:34:25,280 --> 00:34:27,440
used the atms are

1138
00:34:27,440 --> 00:34:28,879
working the way they're supposed to be

1139
00:34:28,879 --> 00:34:30,639
in a very real sense they're processing

1140
00:34:30,639 --> 00:34:32,800
these messages

1141
00:34:32,800 --> 00:34:35,040
so that rolls into the next thing which

1142
00:34:35,040 --> 00:34:36,480
was um

1143
00:34:36,480 --> 00:34:38,320
i think uh cat was the one that asked

1144
00:34:38,320 --> 00:34:40,079
how do you even detect an attack like

1145
00:34:40,079 --> 00:34:40,879
this

1146
00:34:40,879 --> 00:34:43,280
uh the i don't give official

1147
00:34:43,280 --> 00:34:44,560
recommendations but

1148
00:34:44,560 --> 00:34:46,239
um i touch on this a little bit in the

1149
00:34:46,239 --> 00:34:49,599
white paper all of the

1150
00:34:49,599 --> 00:34:51,520
mechanisms for getting to this point

1151
00:34:51,520 --> 00:34:53,839
where your payments which is compromised

1152
00:34:53,839 --> 00:34:56,399
all of those are or almost all of the

1153
00:34:56,399 --> 00:34:58,800
tooling used by this threat actor

1154
00:34:58,800 --> 00:35:00,960
the fast cash threat actor specifically

1155
00:35:00,960 --> 00:35:02,400
involves powershell it involves

1156
00:35:02,400 --> 00:35:04,560
scheduled tasks or created services and

1157
00:35:04,560 --> 00:35:05,760
those are all pretty standard things

1158
00:35:05,760 --> 00:35:07,359
that you can and should be looking for

1159
00:35:07,359 --> 00:35:09,040
in in your enterprise so if you've got

1160
00:35:09,040 --> 00:35:10,640
that kind of endpoint detection

1161
00:35:10,640 --> 00:35:12,240
uh then it just becomes a question of

1162
00:35:12,240 --> 00:35:15,040
identifying uh those anomalies and

1163
00:35:15,040 --> 00:35:17,760
and having the right analysts and having

1164
00:35:17,760 --> 00:35:19,599
those analysts do the right analysis

1165
00:35:19,599 --> 00:35:22,320
on all of those things so uh by the time

1166
00:35:22,320 --> 00:35:23,599
it gets to the payment switch and this

1167
00:35:23,599 --> 00:35:24,560
cash out happens

1168
00:35:24,560 --> 00:35:25,839
you'll detect it because the money will

1169
00:35:25,839 --> 00:35:27,280
you know all your atms will be empty all

1170
00:35:27,280 --> 00:35:28,160
of a sudden

1171
00:35:28,160 --> 00:35:30,400
um and so you don't the idea is to stop

1172
00:35:30,400 --> 00:35:31,599
it before it gets to that point

1173
00:35:31,599 --> 00:35:32,960
it's i'm probably not supposed to say

1174
00:35:32,960 --> 00:35:34,480
it's too late but it is basically too

1175
00:35:34,480 --> 00:35:35,920
late at that stage

1176
00:35:35,920 --> 00:35:39,760
um now um i have another question here

1177
00:35:39,760 --> 00:35:42,000
from sean which is how does injects pure

1178
00:35:42,000 --> 00:35:43,760
actually get on to a payment switch for

1179
00:35:43,760 --> 00:35:45,359
the atm so indrex pure doesn't get onto

1180
00:35:45,359 --> 00:35:46,880
a payment switch and i think that's good

1181
00:35:46,880 --> 00:35:48,320
to touch on too

1182
00:35:48,320 --> 00:35:51,520
um injects pure is a

1183
00:35:51,520 --> 00:35:54,800
different adversaries uh method this is

1184
00:35:54,800 --> 00:35:56,720
a latin america adversary i can't really

1185
00:35:56,720 --> 00:35:58,000
talk about the context for

1186
00:35:58,000 --> 00:36:00,320
a couple different reasons but um they

1187
00:36:00,320 --> 00:36:01,920
deployed of the malware

1188
00:36:01,920 --> 00:36:05,119
um directly onto

1189
00:36:05,119 --> 00:36:08,079
the atms i don't think i can really

1190
00:36:08,079 --> 00:36:09,839
disclose how they did that but i can

1191
00:36:09,839 --> 00:36:11,119
tell you that

1192
00:36:11,119 --> 00:36:13,760
that's not a novel like a full atm hour

1193
00:36:13,760 --> 00:36:15,760
deployment is not necessarily a novel

1194
00:36:15,760 --> 00:36:16,640
technique

1195
00:36:16,640 --> 00:36:18,960
um so thinking about one that's in open

1196
00:36:18,960 --> 00:36:20,480
source uh if you

1197
00:36:20,480 --> 00:36:23,040
can read korean um a couple years ago

1198
00:36:23,040 --> 00:36:24,560
there was there was one in south korea

1199
00:36:24,560 --> 00:36:24,880
where

1200
00:36:24,880 --> 00:36:26,640
there was an issue where they used i

1201
00:36:26,640 --> 00:36:28,560
think the anti-virus

1202
00:36:28,560 --> 00:36:31,040
management tool to deploy malware to a

1203
00:36:31,040 --> 00:36:32,079
bunch of atms

1204
00:36:32,079 --> 00:36:34,160
so i'm not going to comment on whether

1205
00:36:34,160 --> 00:36:36,240
or not that's what happened here

1206
00:36:36,240 --> 00:36:37,760
but that's the type of attack you're

1207
00:36:37,760 --> 00:36:39,200
looking at to get that there now what

1208
00:36:39,200 --> 00:36:40,400
that means though and the difference

1209
00:36:40,400 --> 00:36:42,079
between these two attacks is that

1210
00:36:42,079 --> 00:36:43,359
someone's got to be there to pick up

1211
00:36:43,359 --> 00:36:44,880
that cache that's getting automatically

1212
00:36:44,880 --> 00:36:46,320
dispensed and if you go on twitter you

1213
00:36:46,320 --> 00:36:47,040
can see some

1214
00:36:47,040 --> 00:36:49,680
examples of uh where someone wasn't

1215
00:36:49,680 --> 00:36:50,800
there and cash just got

1216
00:36:50,800 --> 00:36:54,240
like spat out onto the ground um so

1217
00:36:54,240 --> 00:36:57,200
i wanted to touch on that and clarify

1218
00:36:57,200 --> 00:36:57,920
that

1219
00:36:57,920 --> 00:37:00,880
um i know that question wasn't too late

1220
00:37:00,880 --> 00:37:01,440
um

1221
00:37:01,440 --> 00:37:04,480
i think that uh there's one other thing

1222
00:37:04,480 --> 00:37:07,200
i did want to talk about here which is

1223
00:37:07,200 --> 00:37:10,000
um you know so we've got all this

1224
00:37:10,000 --> 00:37:11,520
technical intelligence and i've got kind

1225
00:37:11,520 --> 00:37:12,880
of a minute or two to touch on this like

1226
00:37:12,880 --> 00:37:14,240
how does

1227
00:37:14,240 --> 00:37:16,160
um how does all of this like fit into a

1228
00:37:16,160 --> 00:37:17,760
threat intelligence picture

1229
00:37:17,760 --> 00:37:21,040
so it's not enough to just

1230
00:37:21,040 --> 00:37:23,040
track that uh there are all these

1231
00:37:23,040 --> 00:37:24,640
technical characteristics

1232
00:37:24,640 --> 00:37:26,079
of this malware and to understand how it

1233
00:37:26,079 --> 00:37:27,599
works you certainly need to do that but

1234
00:37:27,599 --> 00:37:28,640
you also need

1235
00:37:28,640 --> 00:37:31,760
if you're in this industry to be um

1236
00:37:31,760 --> 00:37:34,560
doing really good collection with uh

1237
00:37:34,560 --> 00:37:36,000
other peer financial institutions

1238
00:37:36,000 --> 00:37:37,920
because this data is rare and these

1239
00:37:37,920 --> 00:37:39,280
attacks are rare

1240
00:37:39,280 --> 00:37:42,560
um but they're so impactful so that will

1241
00:37:42,560 --> 00:37:44,560
help you build an operational picture

1242
00:37:44,560 --> 00:37:45,839
out of it and it will also help you

1243
00:37:45,839 --> 00:37:46,800
build a

1244
00:37:46,800 --> 00:37:48,480
strategic intelligence picture in terms

1245
00:37:48,480 --> 00:37:50,079
of starting to make business decisions

1246
00:37:50,079 --> 00:37:51,839
or starting to make security level

1247
00:37:51,839 --> 00:37:53,839
decisions at a bigger scale

1248
00:37:53,839 --> 00:37:57,040
um on on these types of topics and

1249
00:37:57,040 --> 00:37:59,280
with that i think we have uh run through

1250
00:37:59,280 --> 00:38:00,640
questions and i think we are about out

1251
00:38:00,640 --> 00:38:02,160
of time so i just want to say thanks

1252
00:38:02,160 --> 00:38:03,040
again for

1253
00:38:03,040 --> 00:38:04,720
everyone for tuning into this i know

1254
00:38:04,720 --> 00:38:05,920
it's tough to sit through a lot of

1255
00:38:05,920 --> 00:38:07,440
webcasts but it really means a lot to me

1256
00:38:07,440 --> 00:38:13,200
and i really appreciate it so thank you

