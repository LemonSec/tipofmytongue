1
00:00:04,390 --> 00:00:14,178
[Music]

2
00:00:15,120 --> 00:00:17,359
so hi there my name is ben serry

3
00:00:17,359 --> 00:00:20,160
i'm vp of research at armas and today

4
00:00:20,160 --> 00:00:22,320
with me is greg

5
00:00:22,320 --> 00:00:24,400
a researcher on my team and today we're

6
00:00:24,400 --> 00:00:26,080
going to talk about several methods that

7
00:00:26,080 --> 00:00:27,199
we've explored

8
00:00:27,199 --> 00:00:29,599
to exploit packet and packet attacks

9
00:00:29,599 --> 00:00:31,199
internet

10
00:00:31,199 --> 00:00:32,479
these types of attacks can allow

11
00:00:32,479 --> 00:00:34,480
attackers to bypass network perimeter

12
00:00:34,480 --> 00:00:35,280
security

13
00:00:35,280 --> 00:00:38,480
such as nets and firewalls so we'll get

14
00:00:38,480 --> 00:00:40,239
to how this can be done in a minute

15
00:00:40,239 --> 00:00:41,840
but first let me tell you a bit about

16
00:00:41,840 --> 00:00:44,399
ourselves the company we both work at

17
00:00:44,399 --> 00:00:46,719
rms is an iot security company it

18
00:00:46,719 --> 00:00:48,719
focuses on providing visibility

19
00:00:48,719 --> 00:00:51,120
into the behavior of unmanaged devices

20
00:00:51,120 --> 00:00:52,640
in enterprise networks

21
00:00:52,640 --> 00:00:54,480
medical facilities and manufacturing

22
00:00:54,480 --> 00:00:55,680
environments

23
00:00:55,680 --> 00:00:58,079
researching embedded devices and devices

24
00:00:58,079 --> 00:00:59,520
and wireless communications

25
00:00:59,520 --> 00:01:01,039
led us to some interesting discoveries

26
00:01:01,039 --> 00:01:03,359
in recent years which we presented in

27
00:01:03,359 --> 00:01:06,159
previous black hat talks these included

28
00:01:06,159 --> 00:01:07,119
blueborne which

29
00:01:07,119 --> 00:01:08,640
was a set of build vulnerabilities in a

30
00:01:08,640 --> 00:01:10,880
wide array of operating systems

31
00:01:10,880 --> 00:01:12,720
arjun 11 a set of zero data

32
00:01:12,720 --> 00:01:15,840
vulnerabilities in tcp stack

33
00:01:15,840 --> 00:01:17,920
uh used by vxworks the most popular

34
00:01:17,920 --> 00:01:19,680
real-time operating system

35
00:01:19,680 --> 00:01:23,439
and most recently cd-pawn layer 2 rces

36
00:01:23,439 --> 00:01:27,040
in various cisco devices

37
00:01:27,040 --> 00:01:28,799
okay so before we dive into the actual

38
00:01:28,799 --> 00:01:30,720
findings of our new research

39
00:01:30,720 --> 00:01:32,400
let's begin with the motivation that led

40
00:01:32,400 --> 00:01:35,200
us to it as many of you probably know

41
00:01:35,200 --> 00:01:37,360
the majority of zero click remote code

42
00:01:37,360 --> 00:01:38,799
execution vulnerabilities

43
00:01:38,799 --> 00:01:40,799
require attackers some form of network

44
00:01:40,799 --> 00:01:42,720
adjacency to the victim device

45
00:01:42,720 --> 00:01:45,040
either direct archive routing or even

46
00:01:45,040 --> 00:01:46,560
layer 2 access

47
00:01:46,560 --> 00:01:48,720
this includes some of the rcs that we've

48
00:01:48,720 --> 00:01:50,159
discovered ourselves

49
00:01:50,159 --> 00:01:52,799
such as urgent 11 and silicon but this

50
00:01:52,799 --> 00:01:55,439
is also true for other well-known rc's

51
00:01:55,439 --> 00:01:57,119
such as the blue keep and even eternal

52
00:01:57,119 --> 00:01:59,200
blue

53
00:01:59,200 --> 00:02:00,640
moreover certain availabilities and

54
00:02:00,640 --> 00:02:02,159
again silly pawn and urgent 11 are

55
00:02:02,159 --> 00:02:02,799
examples

56
00:02:02,799 --> 00:02:04,799
of this can even be exploited with a

57
00:02:04,799 --> 00:02:07,119
single packet if only the attacker could

58
00:02:07,119 --> 00:02:08,560
send a fully controlled packet to the

59
00:02:08,560 --> 00:02:10,878
victim device from beyond its network

60
00:02:10,878 --> 00:02:13,040
period or security

61
00:02:13,040 --> 00:02:15,120
and usually some guy on twitter that you

62
00:02:15,120 --> 00:02:16,560
might have heard of him

63
00:02:16,560 --> 00:02:18,319
posted this tweet a while back and this

64
00:02:18,319 --> 00:02:19,680
actually picked our interest

65
00:02:19,680 --> 00:02:22,400
so this is the kind of the not bypass we

66
00:02:22,400 --> 00:02:23,680
exactly

67
00:02:23,680 --> 00:02:26,640
wanted to investigate however it's

68
00:02:26,640 --> 00:02:28,080
probably fair to estimate that the

69
00:02:28,080 --> 00:02:29,840
solution that we've came across is very

70
00:02:29,840 --> 00:02:33,280
different from what sammy had in mind

71
00:02:34,239 --> 00:02:35,519
okay so let's consider the following

72
00:02:35,519 --> 00:02:37,440
scenario an attacker is behind a

73
00:02:37,440 --> 00:02:38,400
firewall in a not

74
00:02:38,400 --> 00:02:40,000
somewhere on the internet and his

75
00:02:40,000 --> 00:02:41,760
objective is to inject their two packets

76
00:02:41,760 --> 00:02:43,280
into the internal subnet this network

77
00:02:43,280 --> 00:02:44,480
segment

78
00:02:44,480 --> 00:02:46,720
on the left that lays in the inner side

79
00:02:46,720 --> 00:02:47,680
of the firewall

80
00:02:47,680 --> 00:02:49,680
the purpose of the net that is also

81
00:02:49,680 --> 00:02:50,879
acting as a firewall

82
00:02:50,879 --> 00:02:53,040
on the edge of this network is to allow

83
00:02:53,040 --> 00:02:54,640
outgoing connections to the internet and

84
00:02:54,640 --> 00:02:55,040
block

85
00:02:55,040 --> 00:02:57,280
anything else from entering the network

86
00:02:57,280 --> 00:02:58,640
the nat accomplishes this

87
00:02:58,640 --> 00:03:00,720
by creating firewall rules on the fly to

88
00:03:00,720 --> 00:03:02,480
allow passage of packets

89
00:03:02,480 --> 00:03:04,400
returning from target servers of these

90
00:03:04,400 --> 00:03:06,560
outgoing connections

91
00:03:06,560 --> 00:03:08,319
this behavior is called allowing related

92
00:03:08,319 --> 00:03:10,159
and established packets that is packets

93
00:03:10,159 --> 00:03:10,879
that are

94
00:03:10,879 --> 00:03:13,040
part of or related to existing tcp or

95
00:03:13,040 --> 00:03:14,400
udp sessions

96
00:03:14,400 --> 00:03:16,000
this means that usually an attacker is

97
00:03:16,000 --> 00:03:17,519
able to send packets into

98
00:03:17,519 --> 00:03:19,840
with this target segment only when a tcp

99
00:03:19,840 --> 00:03:21,280
or udp session is established

100
00:03:21,280 --> 00:03:22,879
to a server that he controls on the

101
00:03:22,879 --> 00:03:24,560
internet and even when this

102
00:03:24,560 --> 00:03:26,239
does occur he would only be able to

103
00:03:26,239 --> 00:03:27,760
control the payload of the application

104
00:03:27,760 --> 00:03:28,159
layer

105
00:03:28,159 --> 00:03:29,519
in the packets that return to the

106
00:03:29,519 --> 00:03:31,280
network and cannot fully control the

107
00:03:31,280 --> 00:03:32,720
packet's headers

108
00:03:32,720 --> 00:03:34,400
obviously this wouldn't allow him to

109
00:03:34,400 --> 00:03:37,200
send arbitrarily free packets

110
00:03:37,200 --> 00:03:40,319
and blocking arbitrary packets is what

111
00:03:40,319 --> 00:03:44,560
a firewall is there to prevent

112
00:03:44,720 --> 00:03:47,280
if only there were some way to somehow

113
00:03:47,280 --> 00:03:49,680
send packets within packets some way to

114
00:03:49,680 --> 00:03:51,599
pass malicious packets within legitimate

115
00:03:51,599 --> 00:03:53,599
packets that would magically

116
00:03:53,599 --> 00:03:55,519
in in these somehow some way would

117
00:03:55,519 --> 00:03:57,200
magically transform once they pass the

118
00:03:57,200 --> 00:03:57,920
firewall

119
00:03:57,920 --> 00:04:01,360
that will be amazing and yes you've

120
00:04:01,360 --> 00:04:02,239
guessed correctly

121
00:04:02,239 --> 00:04:04,640
this concept is called packeting packet

122
00:04:04,640 --> 00:04:06,319
the term was probably first coined by

123
00:04:06,319 --> 00:04:08,400
travis goodspeed back in 2011

124
00:04:08,400 --> 00:04:10,159
when he discovered a way to inject fully

125
00:04:10,159 --> 00:04:11,840
controlled layer 2 packets in zigbee and

126
00:04:11,840 --> 00:04:13,040
in wi-fi

127
00:04:13,040 --> 00:04:14,799
given the ability to send packets with

128
00:04:14,799 --> 00:04:16,478
partially controlled payloads

129
00:04:16,478 --> 00:04:18,560
this sounds quite surprising and it

130
00:04:18,560 --> 00:04:19,759
relies on the fact

131
00:04:19,759 --> 00:04:21,199
that wireless transmissions are

132
00:04:21,199 --> 00:04:22,800
inherently unreliable and this

133
00:04:22,800 --> 00:04:24,560
guarantees that bit flips

134
00:04:24,560 --> 00:04:26,639
would randomly occur in transmissions

135
00:04:26,639 --> 00:04:28,240
and eventually the headers of the lower

136
00:04:28,240 --> 00:04:30,639
layers of the packet may get corrupted

137
00:04:30,639 --> 00:04:33,040
when this occurs the receiver or such a

138
00:04:33,040 --> 00:04:34,560
packet can be found to interpret the

139
00:04:34,560 --> 00:04:35,759
payload of the packet

140
00:04:35,759 --> 00:04:37,600
as an entirely new packet including the

141
00:04:37,600 --> 00:04:39,280
previously uncontrolled low-level

142
00:04:39,280 --> 00:04:40,160
headers

143
00:04:40,160 --> 00:04:41,919
an attacker that has the ability to even

144
00:04:41,919 --> 00:04:43,919
partially control the payload of such

145
00:04:43,919 --> 00:04:45,360
packets may be able to inject fully

146
00:04:45,360 --> 00:04:47,120
controlled there are two packets

147
00:04:47,120 --> 00:04:49,440
in the example here a7 is the sync word

148
00:04:49,440 --> 00:04:51,680
of the layer 2 protocol used by zigbee

149
00:04:51,680 --> 00:04:53,440
and when it gets corrupted the receiver

150
00:04:53,440 --> 00:04:54,880
will continue searching for another

151
00:04:54,880 --> 00:04:57,199
preamble and sync word inside the packet

152
00:04:57,199 --> 00:04:58,960
a crafted payload that contains these

153
00:04:58,960 --> 00:05:00,720
magic numbers will get interpreted from

154
00:05:00,720 --> 00:05:03,039
that point on as a completely new packet

155
00:05:03,039 --> 00:05:04,720
a more recent packaging packet attack

156
00:05:04,720 --> 00:05:06,720
was devised in 2015 for non-encrypted

157
00:05:06,720 --> 00:05:07,440
wi-fi

158
00:05:07,440 --> 00:05:08,720
this one targets the mac frame

159
00:05:08,720 --> 00:05:10,479
aggregation feature of wi-fi access

160
00:05:10,479 --> 00:05:11,120
points

161
00:05:11,120 --> 00:05:12,560
using a different technique but with a

162
00:05:12,560 --> 00:05:14,639
similar concept partially controlled

163
00:05:14,639 --> 00:05:15,840
packet payloads together

164
00:05:15,840 --> 00:05:17,840
a bit with bit flips occurring randomly

165
00:05:17,840 --> 00:05:19,919
in the air result in arbitrary packet

166
00:05:19,919 --> 00:05:21,120
injection

167
00:05:21,120 --> 00:05:23,360
so the concept of packet and packet

168
00:05:23,360 --> 00:05:24,320
attack isn't

169
00:05:24,320 --> 00:05:26,160
new but it was mainly explored in

170
00:05:26,160 --> 00:05:28,080
wireless particles in our case however

171
00:05:28,080 --> 00:05:28,960
we wanted to

172
00:05:28,960 --> 00:05:30,960
bypass firewalls and these are connected

173
00:05:30,960 --> 00:05:32,400
to wired networks

174
00:05:32,400 --> 00:05:34,960
does it even make sense for this to work

175
00:05:34,960 --> 00:05:38,560
on wired protocols

176
00:05:38,560 --> 00:05:41,039
so let's dive let's dive deeper to the

177
00:05:41,039 --> 00:05:42,800
physical attributes of ethernet

178
00:05:42,800 --> 00:05:45,039
the most popular ethernet cables are

179
00:05:45,039 --> 00:05:46,639
copper cables that use either fast

180
00:05:46,639 --> 00:05:48,320
ethernet which is 100 megabits

181
00:05:48,320 --> 00:05:50,800
or gigabit ethernet these two files have

182
00:05:50,800 --> 00:05:52,000
very different encodings

183
00:05:52,000 --> 00:05:54,160
on the physical layer in fast ethernet

184
00:05:54,160 --> 00:05:56,000
the encoding uses a five bit symbols on

185
00:05:56,000 --> 00:05:57,919
the wire for every four bits of data

186
00:05:57,919 --> 00:05:59,360
this leaves space for additional control

187
00:05:59,360 --> 00:06:01,600
symbols such as start and end of frame

188
00:06:01,600 --> 00:06:03,600
the rest of the symbols are invalid

189
00:06:03,600 --> 00:06:05,440
gigabit encoding is different but it

190
00:06:05,440 --> 00:06:07,360
also uses a similar approach

191
00:06:07,360 --> 00:06:09,039
where it has a start and end frame

192
00:06:09,039 --> 00:06:10,560
symbol

193
00:06:10,560 --> 00:06:11,919
the important thing to understand is

194
00:06:11,919 --> 00:06:13,840
that there is no error detection at this

195
00:06:13,840 --> 00:06:15,360
layer except for detecting invalid

196
00:06:15,360 --> 00:06:17,840
signals

197
00:06:17,840 --> 00:06:19,360
an inherited cable is never connected

198
00:06:19,360 --> 00:06:21,600
directly to a cpu or microcontroller but

199
00:06:21,600 --> 00:06:23,120
rather it's usually connected to an

200
00:06:23,120 --> 00:06:23,919
ethernet phi

201
00:06:23,919 --> 00:06:25,680
chip that fight chip is usually

202
00:06:25,680 --> 00:06:27,280
connected to the cpu using a hardware

203
00:06:27,280 --> 00:06:28,319
interface called

204
00:06:28,319 --> 00:06:32,000
gmii or rdmi the job of the file chip is

205
00:06:32,000 --> 00:06:33,520
to translate the ethernet symbols from

206
00:06:33,520 --> 00:06:34,160
the wire

207
00:06:34,160 --> 00:06:36,319
into a parallel 8-bit bus carrying our

208
00:06:36,319 --> 00:06:38,080
familiar layer 2 data bytes

209
00:06:38,080 --> 00:06:40,560
alongside the rx data valid signal used

210
00:06:40,560 --> 00:06:42,240
for delimiting the frames

211
00:06:42,240 --> 00:06:44,639
so while the file layers so while on the

212
00:06:44,639 --> 00:06:45,360
file layer

213
00:06:45,360 --> 00:06:46,960
special start and end of frame symbols

214
00:06:46,960 --> 00:06:48,720
are used to delimit infinite frames on

215
00:06:48,720 --> 00:06:50,000
the gmi bus

216
00:06:50,000 --> 00:06:52,000
these explicit signals only affect the

217
00:06:52,000 --> 00:06:53,840
rx data valid signal

218
00:06:53,840 --> 00:06:56,319
and that signal is only part of what the

219
00:06:56,319 --> 00:06:57,840
mac layer and the cpu user

220
00:06:57,840 --> 00:07:00,639
uses to delimit a frame we'll see this

221
00:07:00,639 --> 00:07:03,120
in a moment

222
00:07:03,120 --> 00:07:05,120
here we can see what data actually

223
00:07:05,120 --> 00:07:06,479
appears on the wire as part of the

224
00:07:06,479 --> 00:07:07,360
internet frame

225
00:07:07,360 --> 00:07:09,919
and how it's handled via the different

226
00:07:09,919 --> 00:07:10,880
layers

227
00:07:10,880 --> 00:07:12,560
first the start symbol appears on the

228
00:07:12,560 --> 00:07:14,400
wire this causes the file chip to erase

229
00:07:14,400 --> 00:07:15,520
the rxdv line

230
00:07:15,520 --> 00:07:16,880
indicating that there is an incoming

231
00:07:16,880 --> 00:07:19,039
frame then signals are converted to data

232
00:07:19,039 --> 00:07:21,120
bytes however the first byte of this

233
00:07:21,120 --> 00:07:24,080
data isn't actually the layer two bytes

234
00:07:24,080 --> 00:07:25,680
that you're used to seeing in infinite

235
00:07:25,680 --> 00:07:26,880
frames in wireshark

236
00:07:26,880 --> 00:07:28,479
but rather they begin with the pre-order

237
00:07:28,479 --> 00:07:29,680
sequence and the start of frame

238
00:07:29,680 --> 00:07:31,120
delivering sfd

239
00:07:31,120 --> 00:07:34,479
byte the value of this byte is d5

240
00:07:34,479 --> 00:07:36,479
the cpu when seeing the rxdv line go

241
00:07:36,479 --> 00:07:38,720
high starts waiting for an sfd byte on

242
00:07:38,720 --> 00:07:40,080
the rxd port

243
00:07:40,080 --> 00:07:42,560
all bytes from that all bytes before

244
00:07:42,560 --> 00:07:43,120
that

245
00:07:43,120 --> 00:07:45,360
are treated as the preamble after these

246
00:07:45,360 --> 00:07:47,360
initial bikes comes with similar layer 2

247
00:07:47,360 --> 00:07:49,840
payload which is the ethernet frame

248
00:07:49,840 --> 00:07:52,479
stopping from its headers and up to the

249
00:07:52,479 --> 00:07:53,520
payload

250
00:07:53,520 --> 00:07:55,280
when the error frame symbol arrives on

251
00:07:55,280 --> 00:07:57,280
the wire the rxdv line goes low

252
00:07:57,280 --> 00:07:59,199
and indicates a sip to the cpu that the

253
00:07:59,199 --> 00:08:00,960
last four data bytes are again not

254
00:08:00,960 --> 00:08:03,759
actually data but rather a crc32 of the

255
00:08:03,759 --> 00:08:05,360
entire receive frame

256
00:08:05,360 --> 00:08:07,919
the most important thing to note is what

257
00:08:07,919 --> 00:08:10,000
verifies the crc32 this

258
00:08:10,000 --> 00:08:12,240
fcs is actually the cpu rather than the

259
00:08:12,240 --> 00:08:14,240
fight chip meaning potentially corrupted

260
00:08:14,240 --> 00:08:15,840
frames may arrive all this way to the

261
00:08:15,840 --> 00:08:16,560
cpu

262
00:08:16,560 --> 00:08:19,599
without being dropped on the way

263
00:08:19,599 --> 00:08:21,759
so now let's see why this design is

264
00:08:21,759 --> 00:08:23,840
susceptible to a pakistani period attack

265
00:08:23,840 --> 00:08:26,240
suppose the sfd of a packet got not

266
00:08:26,240 --> 00:08:27,599
corrupted on the wire

267
00:08:27,599 --> 00:08:29,199
so in this case the d5 might get

268
00:08:29,199 --> 00:08:31,759
corrupted and turn for example into a d4

269
00:08:31,759 --> 00:08:34,640
the cpu sees the rxdv line go high and

270
00:08:34,640 --> 00:08:36,559
starts looking for an sfd byte it won't

271
00:08:36,559 --> 00:08:36,958
find

272
00:08:36,958 --> 00:08:38,640
the corrupted light so it will keep

273
00:08:38,640 --> 00:08:40,958
searching if the packet was specially

274
00:08:40,958 --> 00:08:42,880
crafted the attacker could place a d5

275
00:08:42,880 --> 00:08:44,959
somewhere inside the packet payload

276
00:08:44,959 --> 00:08:47,839
if this is the first d5 in the frame it

277
00:08:47,839 --> 00:08:48,640
will be picked up

278
00:08:48,640 --> 00:08:50,640
as this if the all the previous bytes

279
00:08:50,640 --> 00:08:53,120
will be considered to be the preamble

280
00:08:53,120 --> 00:08:54,480
in all the implementations that we've

281
00:08:54,480 --> 00:08:56,640
tested we didn't find any that limit the

282
00:08:56,640 --> 00:08:58,320
length of this payable sequence or even

283
00:08:58,320 --> 00:09:00,640
check its value therefore if an attacker

284
00:09:00,640 --> 00:09:03,120
can place the first d5 byte in the frame

285
00:09:03,120 --> 00:09:05,200
a packet impact condition will occur

286
00:09:05,200 --> 00:09:06,959
occur

287
00:09:06,959 --> 00:09:08,800
the only condition is that the corrupted

288
00:09:08,800 --> 00:09:11,120
symbol must become some other valid data

289
00:09:11,120 --> 00:09:11,920
symbol

290
00:09:11,920 --> 00:09:14,080
most more importantly the crc at the end

291
00:09:14,080 --> 00:09:15,200
of the frame must now

292
00:09:15,200 --> 00:09:17,200
be correct for both the original packet

293
00:09:17,200 --> 00:09:19,200
and the new inner package

294
00:09:19,200 --> 00:09:21,440
so again this is what the original outer

295
00:09:21,440 --> 00:09:22,720
packet looks like

296
00:09:22,720 --> 00:09:24,800
first there is the corrupted sfd then

297
00:09:24,800 --> 00:09:26,320
there are the headers

298
00:09:26,320 --> 00:09:28,800
um in the payload which in in this case

299
00:09:28,800 --> 00:09:30,240
is attacker controlled

300
00:09:30,240 --> 00:09:32,320
finally there is an fcs which is the

301
00:09:32,320 --> 00:09:34,240
cr32 of the whole packet starting from

302
00:09:34,240 --> 00:09:36,000
the internet frame

303
00:09:36,000 --> 00:09:37,920
here the attacker has placed the d5 in

304
00:09:37,920 --> 00:09:40,399
the payload which now became the new sfd

305
00:09:40,399 --> 00:09:42,640
therefore in the following bytes all the

306
00:09:42,640 --> 00:09:43,839
following bytes

307
00:09:43,839 --> 00:09:45,760
uh represent a whole new event frame

308
00:09:45,760 --> 00:09:48,000
we'll call this the inner packet

309
00:09:48,000 --> 00:09:49,839
again the rear packet is a whole layer

310
00:09:49,839 --> 00:09:51,600
two packet with headers and all

311
00:09:51,600 --> 00:09:53,360
a big limitation of the attack river is

312
00:09:53,360 --> 00:09:54,720
the fact that the attacker

313
00:09:54,720 --> 00:09:57,440
the cr2 of the inner packet must be

314
00:09:57,440 --> 00:09:58,959
identical to the serious of the original

315
00:09:58,959 --> 00:09:59,760
packet

316
00:09:59,760 --> 00:10:01,360
therefore the attacker must know the

317
00:10:01,360 --> 00:10:02,800
exact contents of the headers of the

318
00:10:02,800 --> 00:10:04,240
original outer packet

319
00:10:04,240 --> 00:10:06,079
this includes source indexed mac

320
00:10:06,079 --> 00:10:07,839
addresses and internal ips

321
00:10:07,839 --> 00:10:09,600
these are not usually visible from the

322
00:10:09,600 --> 00:10:12,320
outside of the victim network

323
00:10:12,320 --> 00:10:14,240
and the attack will have to find those

324
00:10:14,240 --> 00:10:16,640
in advance

325
00:10:16,640 --> 00:10:18,959
creating the cr 32 collision between the

326
00:10:18,959 --> 00:10:20,240
outer and inner packets

327
00:10:20,240 --> 00:10:21,839
is trivial as long as the entire

328
00:10:21,839 --> 00:10:23,600
contents of the outer packet is known

329
00:10:23,600 --> 00:10:25,040
this can be done by adding a four byte

330
00:10:25,040 --> 00:10:26,959
complement value that can be calculated

331
00:10:26,959 --> 00:10:29,040
in advance before the inner packet

332
00:10:29,040 --> 00:10:30,800
in this way the crc of the order packet

333
00:10:30,800 --> 00:10:32,800
can be forced to become anything we want

334
00:10:32,800 --> 00:10:33,680
in this case

335
00:10:33,680 --> 00:10:36,160
we'll make it the same cr2 as the inner

336
00:10:36,160 --> 00:10:36,800
packet

337
00:10:36,800 --> 00:10:38,880
which allows the error packet to be

338
00:10:38,880 --> 00:10:39,920
fully controlled

339
00:10:39,920 --> 00:10:41,519
the method of how to calculate this

340
00:10:41,519 --> 00:10:43,120
component is well known and we won't

341
00:10:43,120 --> 00:10:44,839
dive into the specifics of it in this

342
00:10:44,839 --> 00:10:46,320
talk

343
00:10:46,320 --> 00:10:48,160
so all of this sounds kind of surprising

344
00:10:48,160 --> 00:10:49,600
you know how did you never hear of this

345
00:10:49,600 --> 00:10:50,880
before kind of way

346
00:10:50,880 --> 00:10:52,959
but actually it isn't completely new

347
00:10:52,959 --> 00:10:54,800
there was a talk back at

348
00:10:54,800 --> 00:10:57,680
2013 that presented this exact issue

349
00:10:57,680 --> 00:10:59,279
however the researcher concluded back

350
00:10:59,279 --> 00:11:00,880
then that wired internet cables are too

351
00:11:00,880 --> 00:11:02,240
reliable for this

352
00:11:02,240 --> 00:11:03,839
for the core option for the required

353
00:11:03,839 --> 00:11:06,399
corruption to actually occur

354
00:11:06,399 --> 00:11:07,839
however looking at the standard for

355
00:11:07,839 --> 00:11:09,920
example of gigabit ethernet

356
00:11:09,920 --> 00:11:12,160
there is an acceptable bit error rate in

357
00:11:12,160 --> 00:11:13,360
the standard

358
00:11:13,360 --> 00:11:16,480
uh specified for five cat5e cables the

359
00:11:16,480 --> 00:11:18,399
value mentioned is one corrupted bit for

360
00:11:18,399 --> 00:11:20,240
every 10 billion bits on the wire

361
00:11:20,240 --> 00:11:22,000
so if for example an attacker can send

362
00:11:22,000 --> 00:11:23,600
10 gigabits of data on a gigabit

363
00:11:23,600 --> 00:11:24,959
ethernet cable a bit flip would actually

364
00:11:24,959 --> 00:11:25,519
occur

365
00:11:25,519 --> 00:11:27,279
after 10 seconds and this is what is

366
00:11:27,279 --> 00:11:30,880
considered to be the industry expanded

367
00:11:30,959 --> 00:11:32,800
so we set out to find what is actually

368
00:11:32,800 --> 00:11:34,240
the bit error rate

369
00:11:34,240 --> 00:11:36,800
of cables in actual networks as you see

370
00:11:36,800 --> 00:11:38,320
here for example on cisco switches you

371
00:11:38,320 --> 00:11:39,839
can query the amount of symbol errors

372
00:11:39,839 --> 00:11:41,680
and crc errors in each port of a network

373
00:11:41,680 --> 00:11:42,320
switch

374
00:11:42,320 --> 00:11:43,920
you can also query the total amounts of

375
00:11:43,920 --> 00:11:46,240
valid packets that pass through the port

376
00:11:46,240 --> 00:11:47,920
and use it to calculate the average

377
00:11:47,920 --> 00:11:51,360
meter over h for each port

378
00:11:51,519 --> 00:11:55,120
in armis the company we both work at

379
00:11:55,120 --> 00:11:58,079
and we manage um very large enterprise

380
00:11:58,079 --> 00:12:00,560
networks and that gives us access

381
00:12:00,560 --> 00:12:03,279
to analyze anonymized data coming from

382
00:12:03,279 --> 00:12:04,240
switches

383
00:12:04,240 --> 00:12:06,160
um and we perform the server and for

384
00:12:06,160 --> 00:12:07,279
example here are

385
00:12:07,279 --> 00:12:10,320
two very large networks um

386
00:12:10,320 --> 00:12:13,200
both of them have tens of thousands of

387
00:12:13,200 --> 00:12:14,880
active switch ports

388
00:12:14,880 --> 00:12:16,720
and not surprisingly 90 percent of these

389
00:12:16,720 --> 00:12:18,560
ports don't experience any errors

390
00:12:18,560 --> 00:12:21,040
however about one percent of them do

391
00:12:21,040 --> 00:12:21,680
experience

392
00:12:21,680 --> 00:12:23,519
the standard acceptability rate of one

393
00:12:23,519 --> 00:12:24,720
in 10 billion bits

394
00:12:24,720 --> 00:12:26,000
and point three percent of them

395
00:12:26,000 --> 00:12:28,399
experience two orders of magnitude more

396
00:12:28,399 --> 00:12:30,639
errors and that's a significant amount

397
00:12:30,639 --> 00:12:32,639
of of these bloops

398
00:12:32,639 --> 00:12:34,560
in the cameras that have this error rate

399
00:12:34,560 --> 00:12:36,480
of one in one hundred million bits

400
00:12:36,480 --> 00:12:38,720
a packet backup condition can occur

401
00:12:38,720 --> 00:12:39,600
within minutes

402
00:12:39,600 --> 00:12:41,040
and this is already considering that the

403
00:12:41,040 --> 00:12:42,480
attack requires that the base flip

404
00:12:42,480 --> 00:12:43,920
occurs on a certain byte

405
00:12:43,920 --> 00:12:45,680
within the frame rather than just any

406
00:12:45,680 --> 00:12:47,839
byte on the sfd byte

407
00:12:47,839 --> 00:12:49,680
from this data it's not possible to know

408
00:12:49,680 --> 00:12:51,040
exactly what's the thrust of the

409
00:12:51,040 --> 00:12:52,880
corruption uh in the

410
00:12:52,880 --> 00:12:55,440
in the ports whether it's the cables the

411
00:12:55,440 --> 00:12:57,040
connectors the sockets

412
00:12:57,040 --> 00:12:59,839
any of them uh can be physically faulty

413
00:12:59,839 --> 00:13:00,959
however for the attacker it's not

414
00:13:00,959 --> 00:13:01,519
important

415
00:13:01,519 --> 00:13:04,000
which part is faulty the attack will

416
00:13:04,000 --> 00:13:06,720
work regardless so now greg is going to

417
00:13:06,720 --> 00:13:08,320
describe some of our efforts to better

418
00:13:08,320 --> 00:13:08,959
understand

419
00:13:08,959 --> 00:13:11,519
the underlying causes of these faults so

420
00:13:11,519 --> 00:13:12,079
hi

421
00:13:12,079 --> 00:13:15,040
i'm greg and now we're going to dive

422
00:13:15,040 --> 00:13:16,639
into our theory of what's behind those

423
00:13:16,639 --> 00:13:19,040
bit flips and how we can reproduce them

424
00:13:19,040 --> 00:13:21,680
so as ben mentioned cat5v cables have a

425
00:13:21,680 --> 00:13:23,519
standard acceptable air rate of 1 in 10

426
00:13:23,519 --> 00:13:24,480
billion bits

427
00:13:24,480 --> 00:13:25,920
but in practice by actually

428
00:13:25,920 --> 00:13:27,760
experimenting it's easy to see that the

429
00:13:27,760 --> 00:13:30,320
error rate varies greatly between cables

430
00:13:30,320 --> 00:13:32,720
short cables let's say 10 meters or so

431
00:13:32,720 --> 00:13:34,000
pretty much never experience

432
00:13:34,000 --> 00:13:36,160
any errors long cables the longest

433
00:13:36,160 --> 00:13:38,000
defined to be 90 meters long

434
00:13:38,000 --> 00:13:39,360
will experience something in the

435
00:13:39,360 --> 00:13:41,440
vicinity of the standard acceptable air

436
00:13:41,440 --> 00:13:41,920
rate

437
00:13:41,920 --> 00:13:44,160
that was mentioned before in practice

438
00:13:44,160 --> 00:13:45,279
usually less

439
00:13:45,279 --> 00:13:48,160
however faulty cables of any length can

440
00:13:48,160 --> 00:13:49,839
experience orders of magnitude higher

441
00:13:49,839 --> 00:13:50,800
error rate

442
00:13:50,800 --> 00:13:52,639
and what we refer to as ethernet cables

443
00:13:52,639 --> 00:13:54,079
are actually a multitude of different

444
00:13:54,079 --> 00:13:54,639
cables

445
00:13:54,639 --> 00:13:57,279
but we focus on cat5 and cat6 cables in

446
00:13:57,279 --> 00:13:58,399
this research

447
00:13:58,399 --> 00:14:00,079
and these cables also have a parameter

448
00:14:00,079 --> 00:14:02,800
that specifies their shielding utp

449
00:14:02,800 --> 00:14:05,680
means unshielding and ftp and stp cables

450
00:14:05,680 --> 00:14:07,199
do have shielding

451
00:14:07,199 --> 00:14:09,040
now any of these cables can be just as

452
00:14:09,040 --> 00:14:10,399
faulty as any other

453
00:14:10,399 --> 00:14:12,560
it's just not as equally likely from

454
00:14:12,560 --> 00:14:13,600
what we've seen though the main

455
00:14:13,600 --> 00:14:15,440
parameter determining the likelihood of

456
00:14:15,440 --> 00:14:16,000
a fault

457
00:14:16,000 --> 00:14:19,519
is actually the length of the cable

458
00:14:19,519 --> 00:14:21,839
so what's inside those cables really a

459
00:14:21,839 --> 00:14:23,839
utp cable is basically just

460
00:14:23,839 --> 00:14:26,240
four tightly twisted pairs of wires

461
00:14:26,240 --> 00:14:28,160
running the length of the cable

462
00:14:28,160 --> 00:14:30,639
if we oversimplify a bit each of the two

463
00:14:30,639 --> 00:14:32,079
wires in each pair

464
00:14:32,079 --> 00:14:34,240
will be always set to the opposite

465
00:14:34,240 --> 00:14:36,000
voltage of the other wire

466
00:14:36,000 --> 00:14:37,680
and the signal is the difference between

467
00:14:37,680 --> 00:14:39,680
the voltages a positive difference is a

468
00:14:39,680 --> 00:14:41,440
one bit and a negative difference is a

469
00:14:41,440 --> 00:14:42,480
zero bit

470
00:14:42,480 --> 00:14:44,160
in this way any outside interference

471
00:14:44,160 --> 00:14:46,079
should affect both wires of the pair

472
00:14:46,079 --> 00:14:48,399
in the same way at the same time

473
00:14:48,399 --> 00:14:49,360
therefore

474
00:14:49,360 --> 00:14:50,959
whatever in the interference the

475
00:14:50,959 --> 00:14:52,320
difference between the wires should

476
00:14:52,320 --> 00:14:53,920
remain the same and the signal should

477
00:14:53,920 --> 00:14:55,360
remain intact

478
00:14:55,360 --> 00:14:56,800
but as is the case with everything in

479
00:14:56,800 --> 00:14:59,040
nature those twisted pairs are

480
00:14:59,040 --> 00:15:01,199
are not perfect and therefore stp and

481
00:15:01,199 --> 00:15:03,279
ftp cables have additional shielding

482
00:15:03,279 --> 00:15:05,440
to further prevent interference and any

483
00:15:05,440 --> 00:15:07,279
further imperfection beyond that in such

484
00:15:07,279 --> 00:15:08,160
cables allows

485
00:15:08,160 --> 00:15:09,680
weaker and weaker interference to get

486
00:15:09,680 --> 00:15:12,320
through and damage the signal

487
00:15:12,320 --> 00:15:15,440
so we went around our offices and looked

488
00:15:15,440 --> 00:15:18,079
for faulty cables and here's one example

489
00:15:18,079 --> 00:15:19,600
and the device is a fluke cable

490
00:15:19,600 --> 00:15:22,160
qualification tester and it can be used

491
00:15:22,160 --> 00:15:24,480
to detect and classify cabling faults

492
00:15:24,480 --> 00:15:26,160
in this case it's connected to a fairly

493
00:15:26,160 --> 00:15:28,079
long almost 90 meter cable

494
00:15:28,079 --> 00:15:29,440
and the shield of the cable is not

495
00:15:29,440 --> 00:15:31,360
connected as the test reports even

496
00:15:31,360 --> 00:15:31,920
though

497
00:15:31,920 --> 00:15:34,399
it does have a shield internally also it

498
00:15:34,399 --> 00:15:36,880
reports that at least one of the pairs

499
00:15:36,880 --> 00:15:39,040
has an impedance that's too high even

500
00:15:39,040 --> 00:15:40,399
though the cable is still under the

501
00:15:40,399 --> 00:15:41,600
allowed 90 meters

502
00:15:41,600 --> 00:15:43,920
so this cable is faulty and indeed has

503
00:15:43,920 --> 00:15:46,480
an elevated bit error rate

504
00:15:46,480 --> 00:15:48,880
another example is this relatively short

505
00:15:48,880 --> 00:15:51,040
cable that has a very high error rate

506
00:15:51,040 --> 00:15:53,279
the fluke reports that there is a bridge

507
00:15:53,279 --> 00:15:54,720
tab which in this case

508
00:15:54,720 --> 00:15:56,560
really just means that there is a short

509
00:15:56,560 --> 00:15:58,079
between some of the pairs inside the

510
00:15:58,079 --> 00:15:59,040
cable

511
00:15:59,040 --> 00:16:00,800
and the cable only works at fast

512
00:16:00,800 --> 00:16:03,040
ethernet speeds because fast ethernet

513
00:16:03,040 --> 00:16:04,959
only uses two out of the four pairs

514
00:16:04,959 --> 00:16:05,920
inside the cable

515
00:16:05,920 --> 00:16:08,000
so in this case wire number eight here

516
00:16:08,000 --> 00:16:09,600
just acts as an antenna

517
00:16:09,600 --> 00:16:11,759
basically that collects interference

518
00:16:11,759 --> 00:16:13,040
into wire number one

519
00:16:13,040 --> 00:16:16,160
which actually is in use um

520
00:16:16,160 --> 00:16:18,639
this one obviously fails to work as a

521
00:16:18,639 --> 00:16:19,759
gigabit cable

522
00:16:19,759 --> 00:16:22,160
but since there is an auto negotiation

523
00:16:22,160 --> 00:16:22,959
procedure

524
00:16:22,959 --> 00:16:25,040
the switch port will fall back to fast

525
00:16:25,040 --> 00:16:27,680
ethernet when this cable is attached

526
00:16:27,680 --> 00:16:29,680
so this cable obviously has a very high

527
00:16:29,680 --> 00:16:32,240
air rate and such that the attack

528
00:16:32,240 --> 00:16:35,680
actually works in seconds on this cable

529
00:16:35,680 --> 00:16:38,079
so there isn't much point in showing

530
00:16:38,079 --> 00:16:40,079
your cables off our office floor

531
00:16:40,079 --> 00:16:42,000
so let's do something more scientific

532
00:16:42,000 --> 00:16:43,279
and show a way to reproduce the

533
00:16:43,279 --> 00:16:44,160
condition

534
00:16:44,160 --> 00:16:45,759
so our goal here is to create a cable

535
00:16:45,759 --> 00:16:47,600
that's faulty enough to have a high air

536
00:16:47,600 --> 00:16:49,519
rate but not faulty enough to just fail

537
00:16:49,519 --> 00:16:50,639
to work entirely

538
00:16:50,639 --> 00:16:52,320
and that's pretty difficult to do

539
00:16:52,320 --> 00:16:54,800
producibly but we found a few methods

540
00:16:54,800 --> 00:16:56,639
the most reliable do-it-yourself method

541
00:16:56,639 --> 00:16:58,320
isn't exactly a cable but rather two

542
00:16:58,320 --> 00:17:00,399
cables that interfere with each other

543
00:17:00,399 --> 00:17:03,360
both cables have a fault where one of

544
00:17:03,360 --> 00:17:04,240
the pairs

545
00:17:04,240 --> 00:17:06,640
is untwisted quite a bit and this allows

546
00:17:06,640 --> 00:17:08,480
interference to get into the pair but

547
00:17:08,480 --> 00:17:10,959
also to be emanated out of the pair

548
00:17:10,959 --> 00:17:13,599
so two adjacent cables with such a fault

549
00:17:13,599 --> 00:17:16,000
will interfere with each other

550
00:17:16,000 --> 00:17:19,199
this is obviously a highly highly

551
00:17:19,199 --> 00:17:21,439
exaggerated fault and this is not how a

552
00:17:21,439 --> 00:17:22,000
fault

553
00:17:22,000 --> 00:17:24,000
like that would look like in any way

554
00:17:24,000 --> 00:17:26,079
however this fault does simulate a real

555
00:17:26,079 --> 00:17:27,039
condition

556
00:17:27,039 --> 00:17:29,440
called a alien crosstalk where two

557
00:17:29,440 --> 00:17:31,760
cables interfere with each other

558
00:17:31,760 --> 00:17:33,840
this sometimes happens in long runs of

559
00:17:33,840 --> 00:17:35,600
parallel cables

560
00:17:35,600 --> 00:17:37,840
realism aside what's shown here is very

561
00:17:37,840 --> 00:17:39,760
convenient for production purposes

562
00:17:39,760 --> 00:17:42,000
since the error level can be adjusted by

563
00:17:42,000 --> 00:17:43,919
the distance between the two untwisted

564
00:17:43,919 --> 00:17:44,559
pairs

565
00:17:44,559 --> 00:17:46,480
and of course the resulting errors are

566
00:17:46,480 --> 00:17:48,480
no different to other more realistic

567
00:17:48,480 --> 00:17:50,080
kinds of faults

568
00:17:50,080 --> 00:17:51,440
this will work for cables carrying

569
00:17:51,440 --> 00:17:53,679
gigabit ethernet but for fast ethernet

570
00:17:53,679 --> 00:17:55,360
it's a bit different but requires only

571
00:17:55,360 --> 00:17:56,320
one cable

572
00:17:56,320 --> 00:17:58,000
in that case it can interfere with

573
00:17:58,000 --> 00:18:01,280
itself between its tx and rx pairs

574
00:18:01,280 --> 00:18:04,559
um so this is the output of a device

575
00:18:04,559 --> 00:18:06,880
called an electrical network analyzer

576
00:18:06,880 --> 00:18:09,440
which measures the the signal loss and

577
00:18:09,440 --> 00:18:11,360
reflections inside transmission lines

578
00:18:11,360 --> 00:18:13,679
in our case ethernet cables the signal

579
00:18:13,679 --> 00:18:15,440
loss is graphed against the frequency

580
00:18:15,440 --> 00:18:17,520
range of 50 to 200 megahertz which is

581
00:18:17,520 --> 00:18:19,679
the ballpark range for ethernet

582
00:18:19,679 --> 00:18:21,840
this particular graph shows the signal

583
00:18:21,840 --> 00:18:22,880
loss between

584
00:18:22,880 --> 00:18:24,640
the two untwisted pairs from the

585
00:18:24,640 --> 00:18:26,880
previous slide you can see here that

586
00:18:26,880 --> 00:18:28,000
there there's only about

587
00:18:28,000 --> 00:18:30,000
25 decibels of signal loss from the

588
00:18:30,000 --> 00:18:32,080
aggressor to the victim cable

589
00:18:32,080 --> 00:18:35,039
the standard specifies actually that 24

590
00:18:35,039 --> 00:18:37,039
decibels is the expected loss

591
00:18:37,039 --> 00:18:39,520
in a 90 meter cable so this interference

592
00:18:39,520 --> 00:18:40,160
is pretty much

593
00:18:40,160 --> 00:18:42,559
just as strong as the single in a very

594
00:18:42,559 --> 00:18:45,039
long cable

595
00:18:45,039 --> 00:18:48,160
so another do-it-yourself fault

596
00:18:48,160 --> 00:18:50,640
this time a bit more realistic one of

597
00:18:50,640 --> 00:18:52,160
the pairs here is shorter to the

598
00:18:52,160 --> 00:18:54,160
aluminum foil shield that surrounds an

599
00:18:54,160 --> 00:18:56,480
ftp cable on the inside

600
00:18:56,480 --> 00:18:58,320
among all possible cabling shorts this

601
00:18:58,320 --> 00:19:00,240
is probably the most likely one

602
00:19:00,240 --> 00:19:02,720
in this case we just solder one of the

603
00:19:02,720 --> 00:19:04,559
pairs to the shield to have a reliable

604
00:19:04,559 --> 00:19:05,520
condition

605
00:19:05,520 --> 00:19:08,000
obviously in a real cable this kind of

606
00:19:08,000 --> 00:19:10,160
short can disappear or reappear if you

607
00:19:10,160 --> 00:19:11,919
bend or flex the cable

608
00:19:11,919 --> 00:19:13,520
so in this case the shield is

609
00:19:13,520 --> 00:19:15,760
electrically connected to one half of a

610
00:19:15,760 --> 00:19:16,400
pair

611
00:19:16,400 --> 00:19:18,559
essentially acting like an antenna and

612
00:19:18,559 --> 00:19:20,160
this will allow interference from

613
00:19:20,160 --> 00:19:22,240
outside and even reflected signals

614
00:19:22,240 --> 00:19:24,160
to mess with the original signal in the

615
00:19:24,160 --> 00:19:26,400
pair

616
00:19:26,880 --> 00:19:29,600
so here on the top graph we can see a

617
00:19:29,600 --> 00:19:31,679
trace that shows the signal attenuation

618
00:19:31,679 --> 00:19:33,919
in a normal 16 meter cable

619
00:19:33,919 --> 00:19:35,679
and on the bottom graph we connect that

620
00:19:35,679 --> 00:19:38,080
16 meter cable to the 2 meter

621
00:19:38,080 --> 00:19:39,840
shield shorted cable from the previous

622
00:19:39,840 --> 00:19:41,520
slide in series

623
00:19:41,520 --> 00:19:43,760
and i'll explain what i mean by that in

624
00:19:43,760 --> 00:19:45,600
a bit

625
00:19:45,600 --> 00:19:48,480
now as you can see the result is an

626
00:19:48,480 --> 00:19:51,120
additional 10 dbs of attenuation

627
00:19:51,120 --> 00:19:53,280
it's far more than a two meter cable

628
00:19:53,280 --> 00:19:54,240
should cause

629
00:19:54,240 --> 00:19:55,840
and there are of course other kinds of

630
00:19:55,840 --> 00:19:57,919
cabling faults like partially torn wires

631
00:19:57,919 --> 00:20:01,600
that we simply don't have time to cover

632
00:20:01,919 --> 00:20:04,240
so about connecting cables in series

633
00:20:04,240 --> 00:20:06,000
this sounds strange but actually that's

634
00:20:06,000 --> 00:20:08,640
what's usually the case let's picture a

635
00:20:08,640 --> 00:20:10,400
model scenario for how the device is

636
00:20:10,400 --> 00:20:12,320
commonly connected by cables

637
00:20:12,320 --> 00:20:14,320
the device is in fact rarely connected

638
00:20:14,320 --> 00:20:16,159
by one cable directly to a switch

639
00:20:16,159 --> 00:20:18,080
but rather it's connected via multiple

640
00:20:18,080 --> 00:20:20,640
cable segments c1 through c3

641
00:20:20,640 --> 00:20:23,520
on this slide that electrically speaking

642
00:20:23,520 --> 00:20:25,440
constitutes one cable

643
00:20:25,440 --> 00:20:27,360
now with regards to bit flips they

644
00:20:27,360 --> 00:20:29,280
happen due to a combination of factors

645
00:20:29,280 --> 00:20:30,480
first there needs to be

646
00:20:30,480 --> 00:20:32,400
high signal attenuation in the cable and

647
00:20:32,400 --> 00:20:34,159
this is caused by long cables and is not

648
00:20:34,159 --> 00:20:35,520
a fault in itself

649
00:20:35,520 --> 00:20:36,960
then there does need to be a fault

650
00:20:36,960 --> 00:20:39,120
somewhere in this chain that allows

651
00:20:39,120 --> 00:20:40,640
some interference to get through and

652
00:20:40,640 --> 00:20:42,640
finally there needs to be a source of

653
00:20:42,640 --> 00:20:44,880
electromagnetic interference or emi

654
00:20:44,880 --> 00:20:46,640
that affects the faulty region of the

655
00:20:46,640 --> 00:20:48,559
cable these actually occur

656
00:20:48,559 --> 00:20:50,799
naturally from nearby equipment or

657
00:20:50,799 --> 00:20:52,159
cabling

658
00:20:52,159 --> 00:20:53,919
so for bit flips to occur you basically

659
00:20:53,919 --> 00:20:55,520
need a long faulty cable

660
00:20:55,520 --> 00:20:57,760
however as you can see in this case c2

661
00:20:57,760 --> 00:21:00,000
here can be long and c1 for example can

662
00:21:00,000 --> 00:21:00,720
be faulty

663
00:21:00,720 --> 00:21:03,840
so together the combined cable c1 c2 is

664
00:21:03,840 --> 00:21:06,640
now a long faulty cable

665
00:21:06,640 --> 00:21:09,520
uh so let's clarify our attack consists

666
00:21:09,520 --> 00:21:11,360
of sending lots and lots of packets that

667
00:21:11,360 --> 00:21:12,799
encapsulate the packet in packet's

668
00:21:12,799 --> 00:21:13,440
payload

669
00:21:13,440 --> 00:21:15,280
as fast as possible over the faulty

670
00:21:15,280 --> 00:21:17,360
cable the attacker will then wait for a

671
00:21:17,360 --> 00:21:18,559
bit flip to occur

672
00:21:18,559 --> 00:21:20,320
in the right place which is only sfd

673
00:21:20,320 --> 00:21:22,320
byte the odds of this decreases with the

674
00:21:22,320 --> 00:21:23,919
length of the attack packet so the

675
00:21:23,919 --> 00:21:24,960
attacker will choose

676
00:21:24,960 --> 00:21:26,559
shorter packets in order to have more

677
00:21:26,559 --> 00:21:28,559
extra device on the wire

678
00:21:28,559 --> 00:21:29,919
basically all of this means that an

679
00:21:29,919 --> 00:21:32,159
attacker can only reasonably hope

680
00:21:32,159 --> 00:21:33,919
to inject one packet in an attack that

681
00:21:33,919 --> 00:21:35,919
could take hours so what single packet

682
00:21:35,919 --> 00:21:37,440
can do the most damage

683
00:21:37,440 --> 00:21:38,960
and there have been certain single

684
00:21:38,960 --> 00:21:40,559
packet rces like

685
00:21:40,559 --> 00:21:43,120
our urgent 11 or cd pawn attack that ben

686
00:21:43,120 --> 00:21:44,320
mentioned in the beginning

687
00:21:44,320 --> 00:21:46,320
there are also some rare examples like a

688
00:21:46,320 --> 00:21:48,799
2018 memory corruption in apple's xnew

689
00:21:48,799 --> 00:21:49,280
kernel

690
00:21:49,280 --> 00:21:51,039
that could dos basically all apple

691
00:21:51,039 --> 00:21:52,799
devices back then

692
00:21:52,799 --> 00:21:54,240
but there are also some packets that are

693
00:21:54,240 --> 00:21:56,080
problematic by design

694
00:21:56,080 --> 00:21:58,000
let's look at an ipv6 router

695
00:21:58,000 --> 00:22:00,000
advertisement ra packet

696
00:22:00,000 --> 00:22:02,240
this is kind of like a dhcp offer but

697
00:22:02,240 --> 00:22:03,200
for ipv6

698
00:22:03,200 --> 00:22:06,400
and just like dhcp on ipv4 this packet

699
00:22:06,400 --> 00:22:07,840
can tell the receiver how to set up

700
00:22:07,840 --> 00:22:10,480
their ipv6 routing table dns servers and

701
00:22:10,480 --> 00:22:11,760
also search domain

702
00:22:11,760 --> 00:22:14,000
which on windows can be interesting for

703
00:22:14,000 --> 00:22:14,960
instance

704
00:22:14,960 --> 00:22:16,159
this will allow the attacker to

705
00:22:16,159 --> 00:22:17,919
configure the the windows automatic

706
00:22:17,919 --> 00:22:19,200
proxy discovery feature

707
00:22:19,200 --> 00:22:21,520
as a and configure a proxy server for

708
00:22:21,520 --> 00:22:23,760
all http traffic

709
00:22:23,760 --> 00:22:26,640
um so this is what an injection of such

710
00:22:26,640 --> 00:22:28,240
an array packet would look like

711
00:22:28,240 --> 00:22:30,159
on the left you see a benign udp packet

712
00:22:30,159 --> 00:22:32,640
of which there are lots you only see one

713
00:22:32,640 --> 00:22:34,960
on the right you see an ra packet after

714
00:22:34,960 --> 00:22:36,960
a bit flip happened on the sfd byte of

715
00:22:36,960 --> 00:22:38,159
the original packet

716
00:22:38,159 --> 00:22:39,600
and as you can see the injected packet

717
00:22:39,600 --> 00:22:41,440
is broadcast and obviously

718
00:22:41,440 --> 00:22:43,679
it can be any packet as we fully control

719
00:22:43,679 --> 00:22:46,080
it including the layer 2 header

720
00:22:46,080 --> 00:22:47,679
this packet will be received by

721
00:22:47,679 --> 00:22:49,120
everything that's downstream from the

722
00:22:49,120 --> 00:22:51,840
faulty cable

723
00:22:52,480 --> 00:22:55,360
um in case you didn't know ipv6 is

724
00:22:55,360 --> 00:22:57,120
almost always enabled

725
00:22:57,120 --> 00:22:58,960
on every interface of edit of every

726
00:22:58,960 --> 00:23:01,039
modern device there doesn't need to be

727
00:23:01,039 --> 00:23:03,760
a working ipv6 network for this to work

728
00:23:03,760 --> 00:23:04,799
and

729
00:23:04,799 --> 00:23:06,559
and the array packet is different to the

730
00:23:06,559 --> 00:23:08,799
familiar dhcp of ipv4

731
00:23:08,799 --> 00:23:11,440
by not being a request response protocol

732
00:23:11,440 --> 00:23:12,559
in dhcp

733
00:23:12,559 --> 00:23:15,039
a device usually requests configuration

734
00:23:15,039 --> 00:23:16,880
and then waits for response with array

735
00:23:16,880 --> 00:23:17,520
packets

736
00:23:17,520 --> 00:23:19,440
all devices just constantly listen for

737
00:23:19,440 --> 00:23:21,120
unsolicited array packets

738
00:23:21,120 --> 00:23:22,960
and this is kind of like the ancient

739
00:23:22,960 --> 00:23:25,919
pre-dhcp reverse arc protocol

740
00:23:25,919 --> 00:23:29,280
um in the array packet as you can see

741
00:23:29,280 --> 00:23:29,760
here

742
00:23:29,760 --> 00:23:31,679
an attacker can add dns servers to the

743
00:23:31,679 --> 00:23:33,520
victim and also set the storage domain

744
00:23:33,520 --> 00:23:34,880
now you'd think this will only be

745
00:23:34,880 --> 00:23:37,440
limited to ipv6 dns servers however

746
00:23:37,440 --> 00:23:39,360
there is a feature of ipv6 addresses

747
00:23:39,360 --> 00:23:42,159
called ipv6 mapped ipv4 addresses where

748
00:23:42,159 --> 00:23:42,960
actually

749
00:23:42,960 --> 00:23:45,520
where actual ipv4 addresses are mapped

750
00:23:45,520 --> 00:23:47,840
onto the ipv6 address space

751
00:23:47,840 --> 00:23:49,600
and the intent is to actually use the

752
00:23:49,600 --> 00:23:51,440
ipv4 protocol to reach them

753
00:23:51,440 --> 00:23:54,080
so even though it's technically an ipv6

754
00:23:54,080 --> 00:23:54,960
address here

755
00:23:54,960 --> 00:23:57,120
these are actually really ipv4 dns

756
00:23:57,120 --> 00:23:59,279
servers and will be used as such

757
00:23:59,279 --> 00:24:01,279
also on windows the windows automatic

758
00:24:01,279 --> 00:24:02,640
proxy discovery feature

759
00:24:02,640 --> 00:24:04,799
will try to download the configuration

760
00:24:04,799 --> 00:24:07,679
file from a wpid.attacker domain

761
00:24:07,679 --> 00:24:09,600
if attacker domain is set to be the

762
00:24:09,600 --> 00:24:10,799
search domain

763
00:24:10,799 --> 00:24:12,559
and this feature is still on by default

764
00:24:12,559 --> 00:24:15,440
in windows even in 2020.

765
00:24:15,440 --> 00:24:17,600
so now we are going to do a demo and

766
00:24:17,600 --> 00:24:19,120
then we'll take you through it

767
00:24:19,120 --> 00:24:20,559
we're going to show a demo of this

768
00:24:20,559 --> 00:24:22,799
attack and this scenario of the attacker

769
00:24:22,799 --> 00:24:24,320
has prior knowledge of the network

770
00:24:24,320 --> 00:24:25,840
including mac addresses and where the

771
00:24:25,840 --> 00:24:26,720
faulty cable

772
00:24:26,720 --> 00:24:30,000
actually lies so this has some

773
00:24:30,000 --> 00:24:31,279
prerequisites

774
00:24:31,279 --> 00:24:33,279
the attack scenario is a one click so

775
00:24:33,279 --> 00:24:35,279
the victim is coerced to click on a

776
00:24:35,279 --> 00:24:36,159
certain link

777
00:24:36,159 --> 00:24:37,919
that will lead their browser to send the

778
00:24:37,919 --> 00:24:39,520
udp packet to the attacker

779
00:24:39,520 --> 00:24:41,200
causing the net to allow incoming

780
00:24:41,200 --> 00:24:43,679
traffic for the established connection

781
00:24:43,679 --> 00:24:45,840
attacker will abuse this by sending many

782
00:24:45,840 --> 00:24:48,080
udp packets back to the victim

783
00:24:48,080 --> 00:24:50,159
a bit flip would eventually occur on the

784
00:24:50,159 --> 00:24:51,840
faulty cable leading to the packaging

785
00:24:51,840 --> 00:24:53,200
package condition

786
00:24:53,200 --> 00:24:54,880
lastly this injected package would be

787
00:24:54,880 --> 00:24:56,799
this ipv6 rather

788
00:24:56,799 --> 00:24:58,480
advertising packet that we've just

789
00:24:58,480 --> 00:25:00,000
discussed um

790
00:25:00,000 --> 00:25:02,720
and we'll show this in the terminal and

791
00:25:02,720 --> 00:25:05,200
i'll explain

792
00:25:05,200 --> 00:25:08,720
throughout what's actually taking place

793
00:25:08,720 --> 00:25:10,000
okay so what we have here is the

794
00:25:10,000 --> 00:25:12,559
simulation of the network that we

795
00:25:12,559 --> 00:25:15,039
seen in the previous slide on this edge

796
00:25:15,039 --> 00:25:16,799
is the firewall the nat so this is the

797
00:25:16,799 --> 00:25:18,000
edge of the network and here

798
00:25:18,000 --> 00:25:20,240
that's the internet and then after it we

799
00:25:20,240 --> 00:25:21,760
have a core switch

800
00:25:21,760 --> 00:25:24,400
and that connects through this bad uh

801
00:25:24,400 --> 00:25:26,159
that this faulty cable this is the worst

802
00:25:26,159 --> 00:25:27,919
cable that we can find in our office to

803
00:25:27,919 --> 00:25:28,159
an

804
00:25:28,159 --> 00:25:30,720
access switch this access switch has

805
00:25:30,720 --> 00:25:32,640
this internal segment

806
00:25:32,640 --> 00:25:34,960
and two it connects this windows device

807
00:25:34,960 --> 00:25:38,559
and this device will be our victim

808
00:25:41,039 --> 00:25:42,799
okay so on the right we have the

809
00:25:42,799 --> 00:25:44,240
attacker's terminal

810
00:25:44,240 --> 00:25:46,080
on the bottom part of his terminal we'll

811
00:25:46,080 --> 00:25:47,919
have a packet capture of the attack

812
00:25:47,919 --> 00:25:50,720
from his point of view and on the left

813
00:25:50,720 --> 00:25:53,200
we have a vnc to the windows device

814
00:25:53,200 --> 00:25:55,760
which is the victim device located

815
00:25:55,760 --> 00:25:59,360
inside the internal segment

816
00:25:59,360 --> 00:26:03,039
first we can see that the faulty cable

817
00:26:03,039 --> 00:26:05,039
has an impact on the network performance

818
00:26:05,039 --> 00:26:06,720
of this device but not

819
00:26:06,720 --> 00:26:09,679
a very significant effect so there is

820
00:26:09,679 --> 00:26:11,440
some packet loss but

821
00:26:11,440 --> 00:26:14,960
not a lot um

822
00:26:14,960 --> 00:26:17,360
and now we can launch the attack the

823
00:26:17,360 --> 00:26:20,080
attacker launches an ambush script

824
00:26:20,080 --> 00:26:22,799
with the mac addresses and of what we

825
00:26:22,799 --> 00:26:25,200
found in advance

826
00:26:25,200 --> 00:26:27,840
and the victim would enter a link um

827
00:26:27,840 --> 00:26:28,720
that will

828
00:26:28,720 --> 00:26:32,480
take him to the attacker's webpage

829
00:26:32,480 --> 00:26:34,559
the attacker will then send all these

830
00:26:34,559 --> 00:26:37,200
udp packets back to the target

831
00:26:37,200 --> 00:26:39,679
some of them would bit flip and we can

832
00:26:39,679 --> 00:26:41,840
see the wireshark on the windows

833
00:26:41,840 --> 00:26:44,960
device that they've turned into this

834
00:26:44,960 --> 00:26:45,520
wire

835
00:26:45,520 --> 00:26:48,720
advertising packet again due to the

836
00:26:48,720 --> 00:26:50,159
packaging packet attack and

837
00:26:50,159 --> 00:26:52,320
this for our advertising packet

838
00:26:52,320 --> 00:26:53,679
registered

839
00:26:53,679 --> 00:26:56,159
this dns uh search domain on the windows

840
00:26:56,159 --> 00:26:57,279
device

841
00:26:57,279 --> 00:26:59,039
um and this would be used for the

842
00:26:59,039 --> 00:27:02,000
windows proxy auto discovery feature

843
00:27:02,000 --> 00:27:04,960
so when uh greg there went to google.com

844
00:27:04,960 --> 00:27:06,080
he actually got this

845
00:27:06,080 --> 00:27:10,639
pond page okay cool

846
00:27:11,840 --> 00:27:13,919
okay so the biggest problem with this

847
00:27:13,919 --> 00:27:15,600
attack is that the attacker needs to

848
00:27:15,600 --> 00:27:17,120
know the internal mac addresses that

849
00:27:17,120 --> 00:27:19,120
appear in the packet headers otherwise

850
00:27:19,120 --> 00:27:21,279
they can calculate the crc complement

851
00:27:21,279 --> 00:27:24,000
these internal macs are not visible from

852
00:27:24,000 --> 00:27:24,720
outside

853
00:27:24,720 --> 00:27:28,399
of the lan however they're not a secret

854
00:27:28,399 --> 00:27:29,679
and they were never designed to be a

855
00:27:29,679 --> 00:27:30,240
secret

856
00:27:30,240 --> 00:27:32,640
in some cases it's easy to guess them

857
00:27:32,640 --> 00:27:34,559
for instance in a non-internet scenario

858
00:27:34,559 --> 00:27:37,600
let's say for an attacker in a dmz

859
00:27:37,600 --> 00:27:39,440
one interface of the firewall is

860
00:27:39,440 --> 00:27:41,520
directly visible and as is the case with

861
00:27:41,520 --> 00:27:42,640
most network

862
00:27:42,640 --> 00:27:45,440
equipment the mac addresses of all the

863
00:27:45,440 --> 00:27:47,120
interfaces of the same equipment are

864
00:27:47,120 --> 00:27:48,080
adjacent

865
00:27:48,080 --> 00:27:50,240
so it's easy to guess the rest of them

866
00:27:50,240 --> 00:27:51,840
knowing just one

867
00:27:51,840 --> 00:27:54,399
better yet if you look at wi-fi even an

868
00:27:54,399 --> 00:27:56,399
encrypted wpa2 network

869
00:27:56,399 --> 00:27:58,480
the the mac addresses appear in plain

870
00:27:58,480 --> 00:27:59,840
text over the air

871
00:27:59,840 --> 00:28:01,520
and they can be picked up by sniffing in

872
00:28:01,520 --> 00:28:03,520
monitor mode in physical proximity to

873
00:28:03,520 --> 00:28:05,039
the network

874
00:28:05,039 --> 00:28:07,840
these macs are the same exact max as on

875
00:28:07,840 --> 00:28:08,799
the wire network

876
00:28:08,799 --> 00:28:10,880
it's fairly common for organizations to

877
00:28:10,880 --> 00:28:12,480
bridge their access points directly to

878
00:28:12,480 --> 00:28:14,080
their wired networks

879
00:28:14,080 --> 00:28:16,559
so for example the max of the default

880
00:28:16,559 --> 00:28:17,600
gateway

881
00:28:17,600 --> 00:28:19,600
will be visible in the air even though

882
00:28:19,600 --> 00:28:21,760
it's not even a wireless device

883
00:28:21,760 --> 00:28:23,919
what's more is that mac addresses never

884
00:28:23,919 --> 00:28:26,080
change if an attacker physically arrives

885
00:28:26,080 --> 00:28:26,720
on site

886
00:28:26,720 --> 00:28:28,559
once to collect mac addresses this will

887
00:28:28,559 --> 00:28:30,880
remain correct forever

888
00:28:30,880 --> 00:28:34,240
if you sniff wi-fi in monitor mode

889
00:28:34,240 --> 00:28:36,320
this is what you'd see even though the

890
00:28:36,320 --> 00:28:37,440
data is encrypted

891
00:28:37,440 --> 00:28:39,760
here you have five mac addresses per

892
00:28:39,760 --> 00:28:41,279
packet in plain text of which

893
00:28:41,279 --> 00:28:43,679
one is always the mac of the wireless

894
00:28:43,679 --> 00:28:44,320
device

895
00:28:44,320 --> 00:28:47,039
and another is always the mac of another

896
00:28:47,039 --> 00:28:48,159
device on the network

897
00:28:48,159 --> 00:28:51,360
be it wired or wireless in this case you

898
00:28:51,360 --> 00:28:52,880
have a xiaomi phone talking into a

899
00:28:52,880 --> 00:28:54,240
fortinet firewall

900
00:28:54,240 --> 00:28:55,919
which is its default gateway to the

901
00:28:55,919 --> 00:28:57,279
internet

902
00:28:57,279 --> 00:29:00,000
these are the two macs that appear in

903
00:29:00,000 --> 00:29:02,000
any ethernet packet coming from the

904
00:29:02,000 --> 00:29:03,520
firewall to the device

905
00:29:03,520 --> 00:29:05,679
when traveling on the wired network on

906
00:29:05,679 --> 00:29:08,720
the way to the access point

907
00:29:08,720 --> 00:29:11,039
so now it's actually time for the fun

908
00:29:11,039 --> 00:29:12,399
part of this talk

909
00:29:12,399 --> 00:29:14,240
and we talked about how faulty cables

910
00:29:14,240 --> 00:29:15,919
are cables that are susceptible to

911
00:29:15,919 --> 00:29:16,720
reasonable

912
00:29:16,720 --> 00:29:19,360
electromagnetic interference however

913
00:29:19,360 --> 00:29:19,919
what about

914
00:29:19,919 --> 00:29:22,399
unreasonable interference an unshielded

915
00:29:22,399 --> 00:29:24,720
cable even if not faulty in itself

916
00:29:24,720 --> 00:29:26,640
given an already attenuated signal

917
00:29:26,640 --> 00:29:28,000
should become susceptible

918
00:29:28,000 --> 00:29:30,559
at higher interference levels and surely

919
00:29:30,559 --> 00:29:32,480
you must know that emp weapons

920
00:29:32,480 --> 00:29:34,559
are a thing these are designed to kill

921
00:29:34,559 --> 00:29:36,640
electronic circuits at a distance

922
00:29:36,640 --> 00:29:38,799
they operate by sending very short but

923
00:29:38,799 --> 00:29:40,000
very powerful wideband

924
00:29:40,000 --> 00:29:42,080
burst of radio commonly in the 100

925
00:29:42,080 --> 00:29:44,240
megahertz to 2 gigahertz range

926
00:29:44,240 --> 00:29:46,480
the wavelength of this range just about

927
00:29:46,480 --> 00:29:48,480
match the length of wiring inside

928
00:29:48,480 --> 00:29:49,679
various equipment

929
00:29:49,679 --> 00:29:51,760
and at those power levels any such wire

930
00:29:51,760 --> 00:29:53,679
becomes an antenna and so

931
00:29:53,679 --> 00:29:55,679
we'll apply voltages to random parts of

932
00:29:55,679 --> 00:29:56,880
circuits with

933
00:29:56,880 --> 00:29:59,200
high enough power this is meant to fry

934
00:29:59,200 --> 00:30:00,960
all sorts of electronics

935
00:30:00,960 --> 00:30:03,360
now we don't need to fry anything all we

936
00:30:03,360 --> 00:30:04,880
need is to disrupt already weak

937
00:30:04,880 --> 00:30:06,159
attenuated signals

938
00:30:06,159 --> 00:30:08,000
therefore the same thing will work for

939
00:30:08,000 --> 00:30:10,000
us at a much more reasonable power

940
00:30:10,000 --> 00:30:11,440
levels

941
00:30:11,440 --> 00:30:14,480
um so finding public research into mp

942
00:30:14,480 --> 00:30:16,559
devices online isn't exactly easy

943
00:30:16,559 --> 00:30:18,720
however if you refer to this as an emp

944
00:30:18,720 --> 00:30:19,760
simulation

945
00:30:19,760 --> 00:30:22,640
you can get all sorts of results these

946
00:30:22,640 --> 00:30:24,559
separate papers all talk about creating

947
00:30:24,559 --> 00:30:26,480
a fairly similar device

948
00:30:26,480 --> 00:30:28,799
and basically they charge a capacitor to

949
00:30:28,799 --> 00:30:29,919
half a million volts

950
00:30:29,919 --> 00:30:31,760
and then discharge it through a fast

951
00:30:31,760 --> 00:30:34,000
spar gap in parallel to an antenna

952
00:30:34,000 --> 00:30:35,919
and this creates a very short under one

953
00:30:35,919 --> 00:30:37,279
nanosecond pulse

954
00:30:37,279 --> 00:30:39,679
with the power level close to a gigawatt

955
00:30:39,679 --> 00:30:41,200
this kind of pulse will

956
00:30:41,200 --> 00:30:43,120
appear as a powerful wideband radio

957
00:30:43,120 --> 00:30:45,279
burst when radiated from a proper

958
00:30:45,279 --> 00:30:46,880
antenna

959
00:30:46,880 --> 00:30:48,720
but all we need for the sake of

960
00:30:48,720 --> 00:30:50,640
demonstrating the phenomenon is simply

961
00:30:50,640 --> 00:30:52,320
the oldest kind of radio transmitter

962
00:30:52,320 --> 00:30:54,159
that was invented in the late 19th

963
00:30:54,159 --> 00:30:55,200
century

964
00:30:55,200 --> 00:30:57,360
and this works the same way a capacitor

965
00:30:57,360 --> 00:30:59,120
is discharged through a spark gap

966
00:30:59,120 --> 00:31:01,360
only a far lower voltage is used in in

967
00:31:01,360 --> 00:31:02,159
the range of

968
00:31:02,159 --> 00:31:05,360
10 000 volts and a simple open air spark

969
00:31:05,360 --> 00:31:06,559
gap is used

970
00:31:06,559 --> 00:31:08,320
this kind of transmitter is a powerful

971
00:31:08,320 --> 00:31:10,880
source of interference in the 50 to 150

972
00:31:10,880 --> 00:31:13,279
megahertz range

973
00:31:13,279 --> 00:31:15,120
um this is what the transmission

974
00:31:15,120 --> 00:31:17,200
spectrum of our device looks like

975
00:31:17,200 --> 00:31:19,600
a wide band pulls between 50 and 120

976
00:31:19,600 --> 00:31:20,399
megahertz

977
00:31:20,399 --> 00:31:22,159
the actual power level is much higher

978
00:31:22,159 --> 00:31:23,519
than than shown here

979
00:31:23,519 --> 00:31:25,279
since the pulses are very short and this

980
00:31:25,279 --> 00:31:27,919
is average over time

981
00:31:27,919 --> 00:31:31,120
and this is the kind of interference an

982
00:31:31,120 --> 00:31:32,799
oscilloscope probe loop

983
00:31:32,799 --> 00:31:34,399
which is not connected to anything uh

984
00:31:34,399 --> 00:31:36,559
we'll experience at the distance of two

985
00:31:36,559 --> 00:31:38,640
and a half meters from our device

986
00:31:38,640 --> 00:31:40,799
you can see that the main frequency is

987
00:31:40,799 --> 00:31:42,960
indeed around 80 megahertz and about

988
00:31:42,960 --> 00:31:45,519
600 millivolts are induced in the wire

989
00:31:45,519 --> 00:31:47,440
now attenuated ethernet signals

990
00:31:47,440 --> 00:31:49,440
have voltage levels in the range of 100

991
00:31:49,440 --> 00:31:50,799
to 200 millivolts

992
00:31:50,799 --> 00:31:52,320
so it's reasonable to expect this

993
00:31:52,320 --> 00:31:55,600
interference to affect the signal

994
00:31:55,600 --> 00:31:58,880
and on a 10 meter long unshielded cat6

995
00:31:58,880 --> 00:31:59,600
cable

996
00:31:59,600 --> 00:32:02,159
2 meters from the device and we can also

997
00:32:02,159 --> 00:32:04,240
see that not only are voltages induced

998
00:32:04,240 --> 00:32:05,600
but they're also different enough

999
00:32:05,600 --> 00:32:07,679
between the wires of each pair

1000
00:32:07,679 --> 00:32:09,200
such that they affect the differential

1001
00:32:09,200 --> 00:32:12,159
signal as again the pairs are imperfect

1002
00:32:12,159 --> 00:32:14,159
and this is shown in pro in purple on

1003
00:32:14,159 --> 00:32:16,320
the graph now this is what guarantees

1004
00:32:16,320 --> 00:32:19,600
bit flips to actually happen

1005
00:32:19,600 --> 00:32:22,159
uh okay now we're going to show a demo

1006
00:32:22,159 --> 00:32:24,559
of the proximity attack and then we'll

1007
00:32:24,559 --> 00:32:27,279
take you through this okay so this last

1008
00:32:27,279 --> 00:32:28,240
demo is a

1009
00:32:28,240 --> 00:32:30,000
proximity attack in this scenario the

1010
00:32:30,000 --> 00:32:31,840
attacker is physically near in wi-fi

1011
00:32:31,840 --> 00:32:32,720
access point

1012
00:32:32,720 --> 00:32:34,559
and his objective is to induce meter

1013
00:32:34,559 --> 00:32:35,919
hours um

1014
00:32:35,919 --> 00:32:38,159
in in the ethernet cable that is

1015
00:32:38,159 --> 00:32:39,440
connected to it

1016
00:32:39,440 --> 00:32:42,320
which is unshielded but not faulty as

1017
00:32:42,320 --> 00:32:44,080
greg explained before the attacker

1018
00:32:44,080 --> 00:32:45,600
is able to collect the mac addresses of

1019
00:32:45,600 --> 00:32:47,360
the victim and not

1020
00:32:47,360 --> 00:32:50,559
via wi-fi monitor mode then when sending

1021
00:32:50,559 --> 00:32:52,240
a burst of crafted packets from the

1022
00:32:52,240 --> 00:32:54,080
internet the attacker will use

1023
00:32:54,080 --> 00:32:57,120
the emp device at the same time this

1024
00:32:57,120 --> 00:32:57,679
will cause

1025
00:32:57,679 --> 00:33:00,000
bit errors on the ap's ethernet cable

1026
00:33:00,000 --> 00:33:01,840
which will lead to a packaging packet

1027
00:33:01,840 --> 00:33:03,840
attack even though the cable is not

1028
00:33:03,840 --> 00:33:05,120
faulty

1029
00:33:05,120 --> 00:33:06,720
lastly the injected package uses the

1030
00:33:06,720 --> 00:33:08,880
same ipv6 ra

1031
00:33:08,880 --> 00:33:11,120
packet that sets up a search domain on

1032
00:33:11,120 --> 00:33:11,919
any windows

1033
00:33:11,919 --> 00:33:14,559
machine connected to the ap uh and we'll

1034
00:33:14,559 --> 00:33:15,279
show this

1035
00:33:15,279 --> 00:33:17,039
now in an actual video that we

1036
00:33:17,039 --> 00:33:18,880
pre-recorded

1037
00:33:18,880 --> 00:33:20,320
okay so this is the setup from the

1038
00:33:20,320 --> 00:33:22,240
previous slide uh this is

1039
00:33:22,240 --> 00:33:25,600
the shot in the bomb shelter

1040
00:33:25,600 --> 00:33:27,760
just so this would be like an ad hoc

1041
00:33:27,760 --> 00:33:28,799
fairly cage

1042
00:33:28,799 --> 00:33:31,679
of this setup we have an access point

1043
00:33:31,679 --> 00:33:33,519
here we have a windows device

1044
00:33:33,519 --> 00:33:35,360
the victim that is connected to it via

1045
00:33:35,360 --> 00:33:36,960
wi-fi there is

1046
00:33:36,960 --> 00:33:39,760
this long ethernet cable the blue cable

1047
00:33:39,760 --> 00:33:41,919
that is connected to the access point

1048
00:33:41,919 --> 00:33:44,480
and this cable uh will be targeted in

1049
00:33:44,480 --> 00:33:45,120
the emp

1050
00:33:45,120 --> 00:33:48,480
attack um caught with flips on it

1051
00:33:48,480 --> 00:33:51,519
it's a non-shielded but

1052
00:33:51,519 --> 00:33:53,440
but not in faulty cable and greg the

1053
00:33:53,440 --> 00:33:55,200
attacker here will be launching the

1054
00:33:55,200 --> 00:33:56,320
attack

1055
00:33:56,320 --> 00:33:58,080
here we can see a close-up of the emp

1056
00:33:58,080 --> 00:33:59,519
device

1057
00:33:59,519 --> 00:34:02,000
um and here we can see how it looks when

1058
00:34:02,000 --> 00:34:07,840
it's turned on

1059
00:34:09,440 --> 00:34:12,560
and we can see this attack now uh

1060
00:34:12,560 --> 00:34:14,399
we'll have this windows device here

1061
00:34:14,399 --> 00:34:15,760
initially you can see that it doesn't

1062
00:34:15,760 --> 00:34:17,599
have a search domain

1063
00:34:17,599 --> 00:34:19,199
configured on it once the attack

1064
00:34:19,199 --> 00:34:21,599
succeeds it would have

1065
00:34:21,599 --> 00:34:25,839
um and gregory launched the attack

1066
00:34:25,839 --> 00:34:29,918
sending um the burst of udp packets

1067
00:34:29,918 --> 00:34:32,839
and simultaneously turn on the emp

1068
00:34:32,839 --> 00:34:35,440
device

1069
00:34:35,440 --> 00:34:36,960
and we can see the router advertising

1070
00:34:36,960 --> 00:34:38,879
packets have been injected

1071
00:34:38,879 --> 00:34:42,320
via the packet packet attack

1072
00:34:42,320 --> 00:34:44,320
in the wireshark and we can also see

1073
00:34:44,320 --> 00:34:46,000
that the search domain

1074
00:34:46,000 --> 00:34:50,320
has now been registered for this device

1075
00:34:51,760 --> 00:34:54,079
okay and we have really really uh you

1076
00:34:54,079 --> 00:34:55,440
know a limited time

1077
00:34:55,440 --> 00:34:58,640
and so we tried to um start

1078
00:34:58,640 --> 00:35:01,119
quickly through a lot of material uh but

1079
00:35:01,119 --> 00:35:02,720
i wanted to conclude on a few

1080
00:35:02,720 --> 00:35:06,720
notes for this talk um before we get to

1081
00:35:06,720 --> 00:35:08,560
your questions

1082
00:35:08,560 --> 00:35:11,680
um first of all um yes um

1083
00:35:11,680 --> 00:35:13,680
it seems that if your packing packet

1084
00:35:13,680 --> 00:35:15,280
attacks are

1085
00:35:15,280 --> 00:35:18,480
possible it's not a simple attack and we

1086
00:35:18,480 --> 00:35:19,280
saw that

1087
00:35:19,280 --> 00:35:22,320
it has a couple of prerequisites

1088
00:35:22,320 --> 00:35:24,880
um but nevertheless we were surprised to

1089
00:35:24,880 --> 00:35:25,760
find out

1090
00:35:25,760 --> 00:35:28,000
um that it was more practical and more

1091
00:35:28,000 --> 00:35:29,119
real than we

1092
00:35:29,119 --> 00:35:32,320
ever thought about and then

1093
00:35:32,320 --> 00:35:35,920
there needs to be some way to eventually

1094
00:35:35,920 --> 00:35:38,720
handle this issue there shouldn't be a

1095
00:35:38,720 --> 00:35:39,599
reason for uh

1096
00:35:39,599 --> 00:35:42,480
internet to have this problem although

1097
00:35:42,480 --> 00:35:44,400
as seen in previous research

1098
00:35:44,400 --> 00:35:46,480
preventing packaging packing attacks is

1099
00:35:46,480 --> 00:35:48,560
quite a difficult task

1100
00:35:48,560 --> 00:35:52,079
um we also have a blog about this with

1101
00:35:52,079 --> 00:35:55,440
more information on our website

1102
00:35:55,440 --> 00:35:58,480
it's in the link here and we'll be happy

1103
00:35:58,480 --> 00:35:59,119
to answer

1104
00:35:59,119 --> 00:36:01,359
any questions that you have now thank

1105
00:36:01,359 --> 00:36:03,520
you

1106
00:36:05,280 --> 00:36:08,560
hello there hi guys um

1107
00:36:08,560 --> 00:36:11,119
we hope you enjoyed the talk if you have

1108
00:36:11,119 --> 00:36:12,079
any questions

1109
00:36:12,079 --> 00:36:15,839
we'll be happy to answer now

1110
00:36:15,839 --> 00:36:18,880
and yeah so we can we can see your

1111
00:36:18,880 --> 00:36:21,760
questions in the chat if you post them

1112
00:36:21,760 --> 00:36:26,160
um this is quite an unusual research

1113
00:36:26,160 --> 00:36:29,520
and so sometimes it's hard to

1114
00:36:29,520 --> 00:36:31,200
really follow all the steps that are

1115
00:36:31,200 --> 00:36:32,880
required uh

1116
00:36:32,880 --> 00:36:35,760
we do know that it's a difficult attack

1117
00:36:35,760 --> 00:36:36,720
to pull off

1118
00:36:36,720 --> 00:36:39,920
but not an impossible one as we've shown

1119
00:36:39,920 --> 00:36:42,240
in this

1120
00:36:52,839 --> 00:36:55,839
talk

1121
00:37:06,720 --> 00:37:10,000
thank you if you have any questions

1122
00:37:10,000 --> 00:37:23,839
we're here to answer

1123
00:37:27,359 --> 00:37:29,760
okay so um there is one question here

1124
00:37:29,760 --> 00:37:30,480
about uh

1125
00:37:30,480 --> 00:37:33,920
poc scripts um

1126
00:37:33,920 --> 00:37:36,320
this attack relies on a couple of

1127
00:37:36,320 --> 00:37:37,119
elements

1128
00:37:37,119 --> 00:37:39,599
uh other than code and you need to have

1129
00:37:39,599 --> 00:37:41,839
another faulty cable or

1130
00:37:41,839 --> 00:37:44,079
this type of amp device which we don't

1131
00:37:44,079 --> 00:37:45,280
recommend that you build

1132
00:37:45,280 --> 00:37:48,560
it's quite dangerous um but we do have a

1133
00:37:48,560 --> 00:37:50,400
white paper in which we detail

1134
00:37:50,400 --> 00:37:52,960
um how you can replicate this type of

1135
00:37:52,960 --> 00:37:55,040
faulty cable even in a simulated

1136
00:37:55,040 --> 00:37:58,800
mode um and so you can go ahead and read

1137
00:37:58,800 --> 00:38:00,400
the bright paper that can be a first

1138
00:38:00,400 --> 00:38:02,640
step

1139
00:38:02,720 --> 00:38:06,960
okay so so there's a few questions about

1140
00:38:06,960 --> 00:38:10,480
about the the emp so uh as far as

1141
00:38:10,480 --> 00:38:14,079
shielded cables go uh they're obviously

1142
00:38:14,079 --> 00:38:16,480
better and now i wouldn't say that

1143
00:38:16,480 --> 00:38:18,000
they're completely impervious

1144
00:38:18,000 --> 00:38:21,280
to this because uh i did see it work on

1145
00:38:21,280 --> 00:38:23,680
on some shielded cables but

1146
00:38:23,680 --> 00:38:27,359
uh it works obviously a lot less and and

1147
00:38:27,359 --> 00:38:32,400
i didn't really try to quantify a

1148
00:38:32,400 --> 00:38:34,560
uh how well it would work on shielded

1149
00:38:34,560 --> 00:38:36,480
cables uh of course

1150
00:38:36,480 --> 00:38:38,480
cables that are shielded in the best

1151
00:38:38,480 --> 00:38:40,560
possible way which is uh which are

1152
00:38:40,560 --> 00:38:43,440
stp cables where every pair is shielded

1153
00:38:43,440 --> 00:38:44,839
separately

1154
00:38:44,839 --> 00:38:48,240
uh fair pretty well um also the shield

1155
00:38:48,240 --> 00:38:49,280
needs to be connected

1156
00:38:49,280 --> 00:38:51,520
on both sides of the wire and if it

1157
00:38:51,520 --> 00:38:52,400
isn't

1158
00:38:52,400 --> 00:38:56,240
then um then and that includes

1159
00:38:56,240 --> 00:38:59,680
inside the sockets so basically

1160
00:38:59,680 --> 00:39:01,760
the cable itself being shielded isn't

1161
00:39:01,760 --> 00:39:03,680
exactly enough but

1162
00:39:03,680 --> 00:39:05,520
if everything is properly shielded that

1163
00:39:05,520 --> 00:39:07,680
means that it's a good shield and it's

1164
00:39:07,680 --> 00:39:09,680
connected on both sides reaching

1165
00:39:09,680 --> 00:39:12,880
both terminals then i would say it would

1166
00:39:12,880 --> 00:39:13,359
be

1167
00:39:13,359 --> 00:39:15,359
very difficult for that emp attack to

1168
00:39:15,359 --> 00:39:17,119
affect that cable but

1169
00:39:17,119 --> 00:39:20,400
um again i think it's a matter of just

1170
00:39:20,400 --> 00:39:22,640
adding more power you add more power and

1171
00:39:22,640 --> 00:39:23,680
it will probably

1172
00:39:23,680 --> 00:39:26,640
penetrate even those shields as well

1173
00:39:26,640 --> 00:39:27,119
there's

1174
00:39:27,119 --> 00:39:28,560
a couple of questions here about the

1175
00:39:28,560 --> 00:39:30,800
range of the emp um

1176
00:39:30,800 --> 00:39:34,560
so we didn't really try to maximize this

1177
00:39:34,560 --> 00:39:38,000
um and in our in our

1178
00:39:38,000 --> 00:39:39,680
small test of it it was just about three

1179
00:39:39,680 --> 00:39:41,920
meters or so

1180
00:39:41,920 --> 00:39:44,960
of range we do think that having

1181
00:39:44,960 --> 00:39:47,839
an antenna a directional antenna um

1182
00:39:47,839 --> 00:39:49,040
unlike the

1183
00:39:49,040 --> 00:39:51,200
the one that you we've used would

1184
00:39:51,200 --> 00:39:53,680
probably extend the range

1185
00:39:53,680 --> 00:39:57,440
and giving it more juice more power also

1186
00:39:57,440 --> 00:40:00,320
uh have a similar impact so we do think

1187
00:40:00,320 --> 00:40:01,839
that this can become

1188
00:40:01,839 --> 00:40:04,960
something that works from um more

1189
00:40:04,960 --> 00:40:05,920
distance than

1190
00:40:05,920 --> 00:40:09,040
what we've shown yeah again the the the

1191
00:40:09,040 --> 00:40:10,240
emp

1192
00:40:10,240 --> 00:40:12,720
you know all this it follows the inverse

1193
00:40:12,720 --> 00:40:13,599
square rule

1194
00:40:13,599 --> 00:40:15,920
so it it will never work for a very

1195
00:40:15,920 --> 00:40:17,599
large distance you can make it

1196
00:40:17,599 --> 00:40:20,000
directional yeah but at these

1197
00:40:20,000 --> 00:40:21,680
frequencies i mean you've seen that

1198
00:40:21,680 --> 00:40:22,720
pretty big like

1199
00:40:22,720 --> 00:40:26,079
two meter tall antenna in order to

1200
00:40:26,079 --> 00:40:29,280
to do this at a distance of of of two

1201
00:40:29,280 --> 00:40:30,960
meters and it's only directional

1202
00:40:30,960 --> 00:40:32,640
and now it wouldn't need to be longer

1203
00:40:32,640 --> 00:40:34,400
but to make it a uh to make it

1204
00:40:34,400 --> 00:40:35,200
directional

1205
00:40:35,200 --> 00:40:37,520
like a yagi antenna for example it would

1206
00:40:37,520 --> 00:40:39,119
also need to be like

1207
00:40:39,119 --> 00:40:42,720
three meters wide and but then it would

1208
00:40:42,720 --> 00:40:44,960
work for a larger distance

1209
00:40:44,960 --> 00:40:48,560
and and bi-directional um

1210
00:40:48,560 --> 00:40:51,839
but but really i mean you know again as

1211
00:40:51,839 --> 00:40:53,119
a disclaimer

1212
00:40:53,119 --> 00:40:56,000
we're not exactly you know uh experts in

1213
00:40:56,000 --> 00:40:56,319
that

1214
00:40:56,319 --> 00:40:58,960
this specific field yeah and this field

1215
00:40:58,960 --> 00:41:00,880
it doesn't have all that much

1216
00:41:00,880 --> 00:41:02,800
information freely available about it

1217
00:41:02,800 --> 00:41:04,720
online because again there is no

1218
00:41:04,720 --> 00:41:08,480
legitimate use for this kind of thing um

1219
00:41:08,480 --> 00:41:10,960
the purpose of that part in our in our

1220
00:41:10,960 --> 00:41:12,000
talk is to just

1221
00:41:12,000 --> 00:41:15,359
demonstrate that uh you know it's

1222
00:41:15,359 --> 00:41:17,200
theoretically possible we we came to a

1223
00:41:17,200 --> 00:41:18,800
point where we

1224
00:41:18,800 --> 00:41:22,800
had have a device capable of interfering

1225
00:41:22,800 --> 00:41:25,599
uh with the cable but uh more research

1226
00:41:25,599 --> 00:41:27,280
is needed to understand that

1227
00:41:27,280 --> 00:41:30,480
really uh what drives it what are all

1228
00:41:30,480 --> 00:41:35,280
causes uh for it to work better or worse

1229
00:41:35,280 --> 00:41:38,240
uh there is a question here about the 40

1230
00:41:38,240 --> 00:41:40,319
cables and i think then we need to

1231
00:41:40,319 --> 00:41:43,920
finish um

1232
00:41:44,560 --> 00:41:49,839
okay so uh

1233
00:41:50,240 --> 00:41:52,720
um yeah so we did measure there's a

1234
00:41:52,720 --> 00:41:54,160
question about measuring the signal

1235
00:41:54,160 --> 00:41:54,720
strength

1236
00:41:54,720 --> 00:41:57,359
uh inside the cabling and yes we use

1237
00:41:57,359 --> 00:41:59,040
that the

1238
00:41:59,040 --> 00:42:00,839
electrical network analyzer device to

1239
00:42:00,839 --> 00:42:02,560
measure

1240
00:42:02,560 --> 00:42:06,079
the signal loss in just a standard

1241
00:42:06,079 --> 00:42:06,800
compliant

1242
00:42:06,800 --> 00:42:10,480
long cables and then

1243
00:42:10,480 --> 00:42:12,880
when attaching various quality cables to

1244
00:42:12,880 --> 00:42:14,400
them

1245
00:42:14,400 --> 00:42:17,440
there is a white paper and well we

1246
00:42:17,440 --> 00:42:18,880
didn't exactly publish

1247
00:42:18,880 --> 00:42:20,720
you know measurements of cables from our

1248
00:42:20,720 --> 00:42:22,480
office uh

1249
00:42:22,480 --> 00:42:25,760
there is information there about um

1250
00:42:25,760 --> 00:42:29,280
what these cables uh like uh how strong

1251
00:42:29,280 --> 00:42:31,040
the signal should be in those cables and

1252
00:42:31,040 --> 00:42:32,720
such

1253
00:42:32,720 --> 00:42:35,760
um yeah and i think we need to

1254
00:42:35,760 --> 00:42:39,040
um to stop at this point

1255
00:42:39,040 --> 00:42:42,160
thank you for watching um again we have

1256
00:42:42,160 --> 00:42:44,160
a more info in the white paper on our

1257
00:42:44,160 --> 00:42:48,079
website it's armis.com ether oops

1258
00:42:48,079 --> 00:42:53,839
if you're interested thank you thank you

