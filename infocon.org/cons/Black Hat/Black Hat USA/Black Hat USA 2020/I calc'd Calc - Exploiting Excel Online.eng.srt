1
00:00:03,890 --> 00:00:13,690
[Music]

2
00:00:14,240 --> 00:00:14,960
hi there

3
00:00:14,960 --> 00:00:17,199
uh this is nicholas jolie it's great to

4
00:00:17,199 --> 00:00:18,080
be with you today

5
00:00:18,080 --> 00:00:20,320
i hope that you're all safe and doing

6
00:00:20,320 --> 00:00:22,560
well in those difficult times

7
00:00:22,560 --> 00:00:25,840
um i'm going to talk about a project

8
00:00:25,840 --> 00:00:29,039
that i did in summer 2018

9
00:00:29,039 --> 00:00:32,558
for excel online so i work for microsoft

10
00:00:32,558 --> 00:00:35,600
at the msrc and i'm doing this recording

11
00:00:35,600 --> 00:00:37,840
from the uk from home actually i'm

12
00:00:37,840 --> 00:00:39,360
living in cheltenham

13
00:00:39,360 --> 00:00:42,800
in england so i'm here to talk about an

14
00:00:42,800 --> 00:00:44,559
exploit that i did for

15
00:00:44,559 --> 00:00:46,480
excel online so i guess that this

16
00:00:46,480 --> 00:00:48,480
plantation is going to take roughly

17
00:00:48,480 --> 00:00:51,440
about 30 minutes or so yeah something

18
00:00:51,440 --> 00:00:52,719
like that

19
00:00:52,719 --> 00:00:55,840
so i'm going to talk first about office

20
00:00:55,840 --> 00:00:56,480
exploits

21
00:00:56,480 --> 00:00:59,600
that we've seen in the past years

22
00:00:59,600 --> 00:01:02,719
and then i will describe a bit uh

23
00:01:02,719 --> 00:01:05,280
the office online server what's going on

24
00:01:05,280 --> 00:01:06,080
there how

25
00:01:06,080 --> 00:01:09,200
the services interact between each other

26
00:01:09,200 --> 00:01:13,119
and then i will dig on the vulnerability

27
00:01:13,119 --> 00:01:15,840
that i found and how i managed to

28
00:01:15,840 --> 00:01:16,799
exploit it

29
00:01:16,799 --> 00:01:19,600
and in the end i will discuss a bit uh

30
00:01:19,600 --> 00:01:20,479
this exploit

31
00:01:20,479 --> 00:01:23,200
see if this is the kind of things that

32
00:01:23,200 --> 00:01:24,960
we could expect to see in the cloud

33
00:01:24,960 --> 00:01:28,640
today so i hope that you guys are going

34
00:01:28,640 --> 00:01:29,040
to

35
00:01:29,040 --> 00:01:31,200
learn a few things from this plantation

36
00:01:31,200 --> 00:01:33,040
and i really hope that you

37
00:01:33,040 --> 00:01:37,680
enjoy it so all right let's go

38
00:01:38,240 --> 00:01:41,119
office exploits uh so the good thing

39
00:01:41,119 --> 00:01:43,680
when you work at microsoft at the msrc

40
00:01:43,680 --> 00:01:44,479
is that you see

41
00:01:44,479 --> 00:01:47,759
loads of exploits by loads i don't mean

42
00:01:47,759 --> 00:01:48,159
that

43
00:01:48,159 --> 00:01:50,000
we are going to see exploits on a weekly

44
00:01:50,000 --> 00:01:51,280
basis but

45
00:01:51,280 --> 00:01:54,399
you know often quite some

46
00:01:54,399 --> 00:01:57,200
those are quite frequent um so office

47
00:01:57,200 --> 00:01:57,920
exploits

48
00:01:57,920 --> 00:02:01,040
uh we haven't seen any i don't think so

49
00:02:01,040 --> 00:02:01,439
in the

50
00:02:01,439 --> 00:02:04,560
recent years but we saw some about two

51
00:02:04,560 --> 00:02:06,560
to three years ago so i'm thinking

52
00:02:06,560 --> 00:02:08,080
especially of those

53
00:02:08,080 --> 00:02:12,640
affecting the comm monitors in this case

54
00:02:12,640 --> 00:02:14,560
we cannot really talk about an office

55
00:02:14,560 --> 00:02:17,599
exploits an office exploit as those

56
00:02:17,599 --> 00:02:19,920
exploits were actually targeting windows

57
00:02:19,920 --> 00:02:20,879
components

58
00:02:20,879 --> 00:02:23,680
i did myself an exploit on there's a on

59
00:02:23,680 --> 00:02:25,680
one of this command here the object

60
00:02:25,680 --> 00:02:26,560
moniker

61
00:02:26,560 --> 00:02:29,520
so if you're curious uh go check out my

62
00:02:29,520 --> 00:02:31,440
outlook presentation that i did

63
00:02:31,440 --> 00:02:34,800
at blackhat last year yeah

64
00:02:34,800 --> 00:02:38,959
if you are curious uh exploit targeting

65
00:02:38,959 --> 00:02:41,120
office core functionalities those are

66
00:02:41,120 --> 00:02:42,000
quite rare

67
00:02:42,000 --> 00:02:44,720
and um thinking about it uh the only

68
00:02:44,720 --> 00:02:46,239
ones that i can remember

69
00:02:46,239 --> 00:02:49,120
dates from like uh five years ago those

70
00:02:49,120 --> 00:02:50,000
were targeting

71
00:02:50,000 --> 00:02:53,440
the office eps fund parser

72
00:02:53,440 --> 00:02:55,599
the exploits at that moment were quite

73
00:02:55,599 --> 00:02:57,040
interesting and i'm

74
00:02:57,040 --> 00:02:59,200
wondering why we didn't see that much

75
00:02:59,200 --> 00:03:00,640
price about it

76
00:03:00,640 --> 00:03:02,640
so if you're curious yeah go check them

77
00:03:02,640 --> 00:03:03,680
out those are

78
00:03:03,680 --> 00:03:05,840
quite interesting as well and when i

79
00:03:05,840 --> 00:03:06,800
wrote those slides

80
00:03:06,800 --> 00:03:09,280
i initially forgot about the stack

81
00:03:09,280 --> 00:03:11,519
overflow in the equation editor

82
00:03:11,519 --> 00:03:14,560
and why did i forget that it's probably

83
00:03:14,560 --> 00:03:15,120
because

84
00:03:15,120 --> 00:03:17,760
the exploit was too simple it was just a

85
00:03:17,760 --> 00:03:18,879
simple stack smash

86
00:03:18,879 --> 00:03:21,200
in a component where absolutely no

87
00:03:21,200 --> 00:03:22,000
mitigations

88
00:03:22,000 --> 00:03:24,720
existed no nothing no such thing like

89
00:03:24,720 --> 00:03:25,599
asr

90
00:03:25,599 --> 00:03:27,280
or things like that so the expert was

91
00:03:27,280 --> 00:03:29,760
just trivial but apart from that i don't

92
00:03:29,760 --> 00:03:31,200
think that we've seen

93
00:03:31,200 --> 00:03:34,560
anything in at least in the recent years

94
00:03:34,560 --> 00:03:37,760
what about office online so uh when i

95
00:03:37,760 --> 00:03:39,519
initially did that research i had never

96
00:03:39,519 --> 00:03:41,360
seen an exploit for office online

97
00:03:41,360 --> 00:03:43,680
so we've seen bugs i'm thinking for

98
00:03:43,680 --> 00:03:45,200
example about something that

99
00:03:45,200 --> 00:03:48,159
guru from google reported to us a couple

100
00:03:48,159 --> 00:03:49,599
of years ago

101
00:03:49,599 --> 00:03:52,799
so the history of the sec of this vrp

102
00:03:52,799 --> 00:03:56,159
is that he found an issue in gdi and he

103
00:03:56,159 --> 00:03:56,799
managed

104
00:03:56,799 --> 00:04:00,159
to trigger it through a world document

105
00:04:00,159 --> 00:04:03,439
so the vulnerability here was a an

106
00:04:03,439 --> 00:04:06,640
uninitialized memory issue and so we

107
00:04:06,640 --> 00:04:08,159
commonly agreed

108
00:04:08,159 --> 00:04:10,959
with geru that we wouldn't service this

109
00:04:10,959 --> 00:04:11,680
issue as

110
00:04:11,680 --> 00:04:14,319
this wasn't this wasn't posing a

111
00:04:14,319 --> 00:04:15,040
significant

112
00:04:15,040 --> 00:04:18,079
a significant threat to

113
00:04:18,079 --> 00:04:21,279
two world customers and then he came

114
00:04:21,279 --> 00:04:21,600
back

115
00:04:21,600 --> 00:04:24,720
a couple of weeks later saying that this

116
00:04:24,720 --> 00:04:26,720
issue actually affected office online

117
00:04:26,720 --> 00:04:28,720
and at that moment this is a scenario

118
00:04:28,720 --> 00:04:31,199
that we just hadn't thought about

119
00:04:31,199 --> 00:04:34,320
and so his proof of concept was just the

120
00:04:34,320 --> 00:04:35,440
same file

121
00:04:35,440 --> 00:04:38,560
copied three times and when you

122
00:04:38,560 --> 00:04:40,720
looked at this copy on office online you

123
00:04:40,720 --> 00:04:42,639
could see that a different picture was

124
00:04:42,639 --> 00:04:44,080
rendered

125
00:04:44,080 --> 00:04:47,680
each time so here we cannot really speak

126
00:04:47,680 --> 00:04:48,160
about

127
00:04:48,160 --> 00:04:50,880
an office online exploit as uh he i

128
00:04:50,880 --> 00:04:52,639
don't believe that drew was able to

129
00:04:52,639 --> 00:04:54,400
exploit that but he was still able to

130
00:04:54,400 --> 00:04:57,120
demonstrate it

131
00:04:57,120 --> 00:04:59,759
so what about the office online server

132
00:04:59,759 --> 00:05:00,240
so

133
00:05:00,240 --> 00:05:03,759
it's basically just an ios server

134
00:05:03,759 --> 00:05:07,039
running on a fresh build on of windows

135
00:05:07,039 --> 00:05:07,919
10

136
00:05:07,919 --> 00:05:11,199
where lots of services interact

137
00:05:11,199 --> 00:05:13,759
between each other so now when i did

138
00:05:13,759 --> 00:05:15,680
those slides i dusted off

139
00:05:15,680 --> 00:05:18,240
a vm that i used as a testing

140
00:05:18,240 --> 00:05:20,000
environment back in the days

141
00:05:20,000 --> 00:05:22,880
and it's it's amazing to see that in

142
00:05:22,880 --> 00:05:24,880
this vm there are almost

143
00:05:24,880 --> 00:05:27,440
more than 500 services running at the

144
00:05:27,440 --> 00:05:28,240
same time

145
00:05:28,240 --> 00:05:30,160
so of course this is a testing

146
00:05:30,160 --> 00:05:31,919
environment so it doesn't really compare

147
00:05:31,919 --> 00:05:34,000
to what you would see in production

148
00:05:34,000 --> 00:05:36,800
but that still gives an idea of what's

149
00:05:36,800 --> 00:05:37,440
going on

150
00:05:37,440 --> 00:05:41,199
there so there are dozens of scenarios

151
00:05:41,199 --> 00:05:44,320
of usage for office online

152
00:05:44,320 --> 00:05:46,639
the most common ones are for example

153
00:05:46,639 --> 00:05:48,000
when you

154
00:05:48,000 --> 00:05:51,360
received an email from outlook on the

155
00:05:51,360 --> 00:05:52,000
web

156
00:05:52,000 --> 00:05:54,880
and this email contains some attachments

157
00:05:54,880 --> 00:05:56,800
some of these documents so in this case

158
00:05:56,800 --> 00:05:59,600
you can just look see those attachments

159
00:05:59,600 --> 00:06:00,800
in your browser

160
00:06:00,800 --> 00:06:03,919
and then office online will render them

161
00:06:03,919 --> 00:06:04,720
for you

162
00:06:04,720 --> 00:06:07,199
another use case scenario is just when

163
00:06:07,199 --> 00:06:09,280
you want to edit

164
00:06:09,280 --> 00:06:12,160
some documents on the cloud and then in

165
00:06:12,160 --> 00:06:13,600
this case you will be directly

166
00:06:13,600 --> 00:06:14,400
interacting

167
00:06:14,400 --> 00:06:17,680
with the office online server

168
00:06:17,680 --> 00:06:20,400
um so one thing that i'd like to um to

169
00:06:20,400 --> 00:06:21,280
precise

170
00:06:21,280 --> 00:06:23,039
here is that there are two different

171
00:06:23,039 --> 00:06:24,319
servers so

172
00:06:24,319 --> 00:06:26,720
there is the server that we call office

173
00:06:26,720 --> 00:06:27,360
online

174
00:06:27,360 --> 00:06:29,840
uh this is the thing that you can find

175
00:06:29,840 --> 00:06:30,479
on the cloud

176
00:06:30,479 --> 00:06:33,520
so the public doesn't have access to it

177
00:06:33,520 --> 00:06:35,280
and there is another version that we'll

178
00:06:35,280 --> 00:06:37,280
call office on-prem

179
00:06:37,280 --> 00:06:40,240
and this one you can actually download

180
00:06:40,240 --> 00:06:41,120
some

181
00:06:41,120 --> 00:06:44,080
some bills uh if i'm if i remember

182
00:06:44,080 --> 00:06:46,400
correctly from november 2018

183
00:06:46,400 --> 00:06:48,720
with just a simple visual studio

184
00:06:48,720 --> 00:06:49,759
subscription

185
00:06:49,759 --> 00:06:52,000
if you want more recent builds uh you

186
00:06:52,000 --> 00:06:53,840
need something like a volume

187
00:06:53,840 --> 00:06:55,919
license agreement so it's a bit more

188
00:06:55,919 --> 00:06:57,199
complicated to get but

189
00:06:57,199 --> 00:06:59,039
if you if you're curious if you want to

190
00:06:59,039 --> 00:07:00,840
test things you can still get

191
00:07:00,840 --> 00:07:04,560
a copy so let's come back to

192
00:07:04,560 --> 00:07:07,599
this project so in 2018 so we are seeing

193
00:07:07,599 --> 00:07:08,639
all these exploits

194
00:07:08,639 --> 00:07:11,520
affecting desktop office and the

195
00:07:11,520 --> 00:07:12,400
question there

196
00:07:12,400 --> 00:07:14,400
is all right so we know that the desktop

197
00:07:14,400 --> 00:07:16,160
office is vulnerable there are some

198
00:07:16,160 --> 00:07:17,680
mitigations but yeah there are those

199
00:07:17,680 --> 00:07:19,120
exploits but what about

200
00:07:19,120 --> 00:07:22,560
the online server is it just possible to

201
00:07:22,560 --> 00:07:22,800
get

202
00:07:22,800 --> 00:07:24,720
an exploit there so this is the first

203
00:07:24,720 --> 00:07:26,000
question just make like

204
00:07:26,000 --> 00:07:29,039
some kind of feasibility study see if

205
00:07:29,039 --> 00:07:31,280
one couldn't achieve remote code

206
00:07:31,280 --> 00:07:32,960
execution on

207
00:07:32,960 --> 00:07:36,240
on this on the server and then the next

208
00:07:36,240 --> 00:07:37,039
question would be

209
00:07:37,039 --> 00:07:40,160
how how would one do that

210
00:07:40,160 --> 00:07:42,000
how much time would that take would we

211
00:07:42,000 --> 00:07:44,639
need like some things like

212
00:07:44,639 --> 00:07:46,479
i don't know symbols for example like

213
00:07:46,479 --> 00:07:48,879
insider knowledge insider information

214
00:07:48,879 --> 00:07:52,000
um that's an interesting question um

215
00:07:52,000 --> 00:07:55,280
and then uh in vienna if we ever manage

216
00:07:55,280 --> 00:07:55,759
to

217
00:07:55,759 --> 00:07:58,879
to to exploit a vulnerability

218
00:07:58,879 --> 00:08:01,440
what can be done better so that office

219
00:08:01,440 --> 00:08:01,919
online

220
00:08:01,919 --> 00:08:04,960
isn't uh such

221
00:08:05,120 --> 00:08:08,160
to make office online a harder target

222
00:08:08,160 --> 00:08:10,560
for exploiter so you see several

223
00:08:10,560 --> 00:08:12,000
questions that needed

224
00:08:12,000 --> 00:08:16,160
some answers so i chose to go after

225
00:08:16,160 --> 00:08:18,400
excel online i could have gone after a

226
00:08:18,400 --> 00:08:20,400
powerpoint or a world

227
00:08:20,400 --> 00:08:23,440
i chose excel so there are several

228
00:08:23,440 --> 00:08:27,199
reasons for this um so before

229
00:08:27,199 --> 00:08:29,120
before i joined microsoft i was working

230
00:08:29,120 --> 00:08:30,879
for a company named viewpen

231
00:08:30,879 --> 00:08:34,479
security and at that moment i i've done

232
00:08:34,479 --> 00:08:35,039
some

233
00:08:35,039 --> 00:08:37,039
a bit of research on excel i found a

234
00:08:37,039 --> 00:08:38,320
couple of bugs i did a

235
00:08:38,320 --> 00:08:40,159
couple of exploits but well that's quite

236
00:08:40,159 --> 00:08:41,760
some time ago and so

237
00:08:41,760 --> 00:08:44,240
i was already a bit familiar with the

238
00:08:44,240 --> 00:08:45,279
internals how

239
00:08:45,279 --> 00:08:49,200
things worked there i just i just had

240
00:08:49,200 --> 00:08:53,040
a couple of ideas for complex exploits

241
00:08:53,040 --> 00:08:56,160
that i've never really put in practice

242
00:08:56,160 --> 00:08:59,040
and so i was a bit curious to see if i

243
00:08:59,040 --> 00:08:59,760
could

244
00:08:59,760 --> 00:09:02,399
get something get something done and

245
00:09:02,399 --> 00:09:04,240
then of course i was curious to

246
00:09:04,240 --> 00:09:06,720
use the microsoft resources to look at

247
00:09:06,720 --> 00:09:07,680
excel because

248
00:09:07,680 --> 00:09:09,440
at that moment this is something that i

249
00:09:09,440 --> 00:09:12,480
had never done before

250
00:09:12,480 --> 00:09:15,920
so what is excel online so as i said

251
00:09:15,920 --> 00:09:19,360
office online is a an is server

252
00:09:19,360 --> 00:09:22,800
and excel online is just a service

253
00:09:22,800 --> 00:09:26,160
running in that ios so it's basically a

254
00:09:26,160 --> 00:09:27,200
huge dll

255
00:09:27,200 --> 00:09:30,399
excel server that contains most of

256
00:09:30,399 --> 00:09:34,160
excel desktop core functionalities so

257
00:09:34,160 --> 00:09:37,440
if you find a bug affecting desktop

258
00:09:37,440 --> 00:09:38,000
excel

259
00:09:38,000 --> 00:09:40,720
chances are that it will also affect the

260
00:09:40,720 --> 00:09:43,440
online server

261
00:09:43,519 --> 00:09:46,480
so now we are in 2018 and the question

262
00:09:46,480 --> 00:09:47,279
is

263
00:09:47,279 --> 00:09:49,170
how do we find a bug

264
00:09:49,170 --> 00:09:50,320
[Music]

265
00:09:50,320 --> 00:09:53,120
in in excel online so you know excel has

266
00:09:53,120 --> 00:09:53,920
been first like

267
00:09:53,920 --> 00:09:57,120
former over 20 years and by

268
00:09:57,120 --> 00:09:59,839
finders externals also by the product

269
00:09:59,839 --> 00:10:01,839
team

270
00:10:01,839 --> 00:10:04,320
does it would it make sense for me to

271
00:10:04,320 --> 00:10:04,880
start

272
00:10:04,880 --> 00:10:07,040
running a fuzzer maybe on the cloud i

273
00:10:07,040 --> 00:10:08,399
don't know uh

274
00:10:08,399 --> 00:10:10,959
we need to to think a bit about that and

275
00:10:10,959 --> 00:10:11,440
also

276
00:10:11,440 --> 00:10:15,279
uh what am i after what kind of bugs

277
00:10:15,279 --> 00:10:18,480
am i looking for because uh excel online

278
00:10:18,480 --> 00:10:20,079
there are some mitigations like depth

279
00:10:20,079 --> 00:10:21,680
islr things like that

280
00:10:21,680 --> 00:10:24,320
i need to i need to get a small an

281
00:10:24,320 --> 00:10:25,279
interesting bug

282
00:10:25,279 --> 00:10:27,600
at least interesting enough so i so that

283
00:10:27,600 --> 00:10:28,560
i can bypass

284
00:10:28,560 --> 00:10:31,760
some mitigations also i'd like to come

285
00:10:31,760 --> 00:10:32,000
back

286
00:10:32,000 --> 00:10:35,040
to one thing why uh aren't we seeing

287
00:10:35,040 --> 00:10:38,160
uh more exploits targeting uh office

288
00:10:38,160 --> 00:10:39,200
core features

289
00:10:39,200 --> 00:10:41,600
especially because of mitigations

290
00:10:41,600 --> 00:10:42,640
occasionally

291
00:10:42,640 --> 00:10:45,360
uh we can have exploits that we call

292
00:10:45,360 --> 00:10:46,720
like one shot exploits

293
00:10:46,720 --> 00:10:50,000
that uh just a file that would trigger

294
00:10:50,000 --> 00:10:52,480
such a complicated exploits that every

295
00:10:52,480 --> 00:10:54,480
single mitigation would be bypassed

296
00:10:54,480 --> 00:10:56,959
at once that occasionally happens so

297
00:10:56,959 --> 00:10:57,600
here

298
00:10:57,600 --> 00:10:59,760
the example that i'm giving here is from

299
00:10:59,760 --> 00:11:00,959
chris evans uh

300
00:11:00,959 --> 00:11:03,519
it's quite quite an interesting exploit

301
00:11:03,519 --> 00:11:04,959
he's targeting here

302
00:11:04,959 --> 00:11:07,920
in an image format and i think that he

303
00:11:07,920 --> 00:11:08,800
he found

304
00:11:08,800 --> 00:11:12,480
a cool hip corruption and he was able

305
00:11:12,480 --> 00:11:14,959
to uh to exploit the hip corruption in

306
00:11:14,959 --> 00:11:15,680
such a way

307
00:11:15,680 --> 00:11:18,079
that with just one file he managed to

308
00:11:18,079 --> 00:11:19,680
get a remote code execution

309
00:11:19,680 --> 00:11:22,720
even without depth

310
00:11:22,720 --> 00:11:25,760
even with depth and isr enabled

311
00:11:25,760 --> 00:11:28,560
those are very occasional exploits we

312
00:11:28,560 --> 00:11:29,600
don't see them uh

313
00:11:29,600 --> 00:11:33,519
every day what we see most commonly are

314
00:11:33,519 --> 00:11:36,320
exploits with uh for example javascript

315
00:11:36,320 --> 00:11:38,640
engines uh so typically exploit for web

316
00:11:38,640 --> 00:11:39,120
browser

317
00:11:39,120 --> 00:11:42,800
exploits where you can dynamically

318
00:11:42,800 --> 00:11:45,440
interact with your vulnerability like

319
00:11:45,440 --> 00:11:46,959
typically with javascript

320
00:11:46,959 --> 00:11:49,680
or when you have a bug affecting the

321
00:11:49,680 --> 00:11:50,399
kernel

322
00:11:50,399 --> 00:11:53,680
then you have certain apis to uh to play

323
00:11:53,680 --> 00:11:54,639
with that bug

324
00:11:54,639 --> 00:11:57,040
so these are the most common things that

325
00:11:57,040 --> 00:11:57,760
we see

326
00:11:57,760 --> 00:11:59,760
but for excel there's no such thing

327
00:11:59,760 --> 00:12:02,079
there's nothing like a javascript engine

328
00:12:02,079 --> 00:12:03,839
actually there is one but you don't have

329
00:12:03,839 --> 00:12:06,240
access to it

330
00:12:06,240 --> 00:12:09,360
no in excel there is something cool

331
00:12:09,360 --> 00:12:11,600
there are the formulas and when you

332
00:12:11,600 --> 00:12:13,279
think a bit about that

333
00:12:13,279 --> 00:12:16,320
excel unders i think a bit more than 200

334
00:12:16,320 --> 00:12:16,959
formulas

335
00:12:16,959 --> 00:12:18,959
i don't remember the exact figure but

336
00:12:18,959 --> 00:12:21,279
it's something uh something around that

337
00:12:21,279 --> 00:12:22,560
and when you think about all those

338
00:12:22,560 --> 00:12:25,200
formulas then yes it's certainly

339
00:12:25,200 --> 00:12:27,680
it's certainly possible to get something

340
00:12:27,680 --> 00:12:30,720
good done with this

341
00:12:30,720 --> 00:12:33,680
so think for example about all those uh

342
00:12:33,680 --> 00:12:34,240
all this

343
00:12:34,240 --> 00:12:36,959
stream string package you've got

344
00:12:36,959 --> 00:12:38,320
everything there if you want to

345
00:12:38,320 --> 00:12:39,760
manipulate pointers

346
00:12:39,760 --> 00:12:41,920
strings then yes you've got all the

347
00:12:41,920 --> 00:12:43,040
functions you need

348
00:12:43,040 --> 00:12:44,720
everything that you can find that you

349
00:12:44,720 --> 00:12:46,399
would be able to find in javascript

350
00:12:46,399 --> 00:12:49,600
you can find it uh in just formulas

351
00:12:49,600 --> 00:12:51,360
excel formulas so there are still a

352
00:12:51,360 --> 00:12:52,800
couple of things that are

353
00:12:52,800 --> 00:12:54,639
more difficult like i'm thinking for

354
00:12:54,639 --> 00:12:56,959
example of the fact that you cannot set

355
00:12:56,959 --> 00:13:00,959
a variable with with the formulas

356
00:13:00,959 --> 00:13:04,079
so say that you are in cell a3

357
00:13:04,079 --> 00:13:08,079
and you would type equal three plus five

358
00:13:08,079 --> 00:13:10,959
then uh cell a3 will be set to eight but

359
00:13:10,959 --> 00:13:12,240
within that formula

360
00:13:12,240 --> 00:13:15,040
you cannot set the content of another

361
00:13:15,040 --> 00:13:15,440
cell

362
00:13:15,440 --> 00:13:18,480
so this is one of um of

363
00:13:18,480 --> 00:13:21,680
the limitations of of this scenario but

364
00:13:21,680 --> 00:13:22,399
there are still

365
00:13:22,399 --> 00:13:24,720
uh several other cool things like

366
00:13:24,720 --> 00:13:26,079
typically i'm thinking of the

367
00:13:26,079 --> 00:13:28,320
lookup formulas with that you can use to

368
00:13:28,320 --> 00:13:29,279
emulate uh

369
00:13:29,279 --> 00:13:32,480
for loops so here the reasoning is a

370
00:13:32,480 --> 00:13:35,440
such if we can find a bug a

371
00:13:35,440 --> 00:13:36,399
vulnerability

372
00:13:36,399 --> 00:13:38,959
in one of those formulas then it might

373
00:13:38,959 --> 00:13:40,240
be possible

374
00:13:40,240 --> 00:13:43,839
to exploit that issue

375
00:13:43,839 --> 00:13:46,800
with other formulas and this is the idea

376
00:13:46,800 --> 00:13:48,160
that i had at the moment

377
00:13:48,160 --> 00:13:49,839
and but this is something that i've

378
00:13:49,839 --> 00:13:51,680
never managed to uh to

379
00:13:51,680 --> 00:13:54,160
exploit myself so this is where i'm

380
00:13:54,160 --> 00:13:56,399
starting

381
00:13:56,399 --> 00:13:59,519
so now how do we find uh an interesting

382
00:13:59,519 --> 00:14:00,000
bug

383
00:14:00,000 --> 00:14:02,399
for excel online so here i'm going to

384
00:14:02,399 --> 00:14:04,160
use my experience

385
00:14:04,160 --> 00:14:06,959
uh so i'm coming back a long time ago

386
00:14:06,959 --> 00:14:08,480
basically when i started

387
00:14:08,480 --> 00:14:11,839
i started uh in 2008 for

388
00:14:11,839 --> 00:14:14,959
at viewpen so at that moment it wasn't

389
00:14:14,959 --> 00:14:17,279
named viewpen already but that was

390
00:14:17,279 --> 00:14:18,399
coming

391
00:14:18,399 --> 00:14:20,800
and so i started in september 2008 and

392
00:14:20,800 --> 00:14:22,800
in october 2008

393
00:14:22,800 --> 00:14:25,519
the next month i remember there was a

394
00:14:25,519 --> 00:14:26,959
patch for excel

395
00:14:26,959 --> 00:14:28,959
and one of the vulnerabilities that had

396
00:14:28,959 --> 00:14:30,639
been fixed at that moment came

397
00:14:30,639 --> 00:14:33,680
had been reported by the zdi

398
00:14:33,680 --> 00:14:35,680
so this was basically the first time

399
00:14:35,680 --> 00:14:37,440
that i was dealing with an integer

400
00:14:37,440 --> 00:14:38,880
overflow so i remember

401
00:14:38,880 --> 00:14:42,160
going to that advisory and reading it

402
00:14:42,160 --> 00:14:45,920
probably 50 times to try to figure out

403
00:14:45,920 --> 00:14:48,880
some clues uh as we were just clueless

404
00:14:48,880 --> 00:14:50,399
we had no idea what was going on

405
00:14:50,399 --> 00:14:51,839
we knew there was something that was

406
00:14:51,839 --> 00:14:54,079
affecting the red formula but apart from

407
00:14:54,079 --> 00:14:55,120
that

408
00:14:55,120 --> 00:14:57,600
pretty much nothing else so i do

409
00:14:57,600 --> 00:14:58,959
remember also diffing

410
00:14:58,959 --> 00:15:01,120
that thing and i'm pretty sure that i

411
00:15:01,120 --> 00:15:02,480
spent more than two days

412
00:15:02,480 --> 00:15:04,399
trying to figure out what was the issue

413
00:15:04,399 --> 00:15:05,920
i do remember seeing

414
00:15:05,920 --> 00:15:08,959
a multiplication that had been changed

415
00:15:08,959 --> 00:15:10,800
in the fix but at that moment you know i

416
00:15:10,800 --> 00:15:12,160
was a noob i was totally

417
00:15:12,160 --> 00:15:15,040
literally a beginner and to me it didn't

418
00:15:15,040 --> 00:15:15,680
make sense

419
00:15:15,680 --> 00:15:18,560
that just a simple multiplication could

420
00:15:18,560 --> 00:15:18,959
lead

421
00:15:18,959 --> 00:15:20,800
to a vulnerability turns out the

422
00:15:20,800 --> 00:15:22,720
vulnerability was quite simple

423
00:15:22,720 --> 00:15:25,440
rep repeats the repeat formula takes two

424
00:15:25,440 --> 00:15:26,079
arguments

425
00:15:26,079 --> 00:15:29,120
and a string and a counter and if you

426
00:15:29,120 --> 00:15:30,160
multiply

427
00:15:30,160 --> 00:15:32,160
if you multiply is countered by the

428
00:15:32,160 --> 00:15:33,759
length of the string it's possible to

429
00:15:33,759 --> 00:15:35,839
get that multiplication to overflow on

430
00:15:35,839 --> 00:15:36,639
30 to it

431
00:15:36,639 --> 00:15:39,839
and then you'd

432
00:15:39,839 --> 00:15:42,160
you then allocate an undersized buffer

433
00:15:42,160 --> 00:15:43,120
leading that to

434
00:15:43,120 --> 00:15:46,160
ever a stack overflow or a hyper flow so

435
00:15:46,160 --> 00:15:46,800
at the end

436
00:15:46,800 --> 00:15:48,639
i found it and i was quite happy when i

437
00:15:48,639 --> 00:15:50,240
found it but

438
00:15:50,240 --> 00:15:52,240
then the question that i asked myself in

439
00:15:52,240 --> 00:15:53,519
2018

440
00:15:53,519 --> 00:15:56,079
is how that bug had been fixed because i

441
00:15:56,079 --> 00:15:57,759
did remember that bug

442
00:15:57,759 --> 00:16:00,160
i was i was very curious of it so i

443
00:16:00,160 --> 00:16:01,279
looked at the code

444
00:16:01,279 --> 00:16:04,000
and uh and then yeah uh the buggy was

445
00:16:04,000 --> 00:16:06,560
correctly fixed yeah 10 years after

446
00:16:06,560 --> 00:16:09,680
no way this was still going to be a

447
00:16:09,680 --> 00:16:12,880
vulnerability so they at the moment

448
00:16:12,880 --> 00:16:14,880
at the time the developers fixed that by

449
00:16:14,880 --> 00:16:16,720
introducing a function called cbr

450
00:16:16,720 --> 00:16:17,680
locksafe

451
00:16:17,680 --> 00:16:20,079
and this function just make sure that

452
00:16:20,079 --> 00:16:21,120
the math

453
00:16:21,120 --> 00:16:23,920
uh is correct and doesn't overflow so

454
00:16:23,920 --> 00:16:24,880
let's have a

455
00:16:24,880 --> 00:16:26,720
deeper look at that function just a

456
00:16:26,720 --> 00:16:28,160
checks on just

457
00:16:28,160 --> 00:16:31,040
some checks on the additions and

458
00:16:31,040 --> 00:16:33,680
multiplications using a saving type

459
00:16:33,680 --> 00:16:36,560
so yeah nothing to nothing interesting

460
00:16:36,560 --> 00:16:37,680
anymore for us

461
00:16:37,680 --> 00:16:41,839
there however as we are looking for

462
00:16:41,839 --> 00:16:45,360
entry points in the code uh potentially

463
00:16:45,360 --> 00:16:47,199
very number on three points

464
00:16:47,199 --> 00:16:50,399
one it's what i

465
00:16:50,399 --> 00:16:52,959
i felt at that moment was maybe i could

466
00:16:52,959 --> 00:16:53,519
just

467
00:16:53,519 --> 00:16:55,440
look for other references to this

468
00:16:55,440 --> 00:16:56,959
function and see

469
00:16:56,959 --> 00:16:59,440
who calls that because uh well again i

470
00:16:59,440 --> 00:17:00,079
don't have

471
00:17:00,079 --> 00:17:01,600
much experience at that moment with

472
00:17:01,600 --> 00:17:03,440
formulas i'm not

473
00:17:03,440 --> 00:17:06,480
sure of what what is going on there

474
00:17:06,480 --> 00:17:10,160
so so i told you i work for microsoft

475
00:17:10,160 --> 00:17:12,720
and i have access to the source code but

476
00:17:12,720 --> 00:17:13,919
i still use ida

477
00:17:13,919 --> 00:17:16,720
pretty much every day and so i did look

478
00:17:16,720 --> 00:17:18,640
for reference for also just

479
00:17:18,640 --> 00:17:21,679
doing a simple x-ray on the cb lock safe

480
00:17:21,679 --> 00:17:25,119
in ida and this gives about 100

481
00:17:25,119 --> 00:17:29,200
different results and in these results

482
00:17:29,200 --> 00:17:31,840
three of them points to a function

483
00:17:31,840 --> 00:17:32,320
called

484
00:17:32,320 --> 00:17:34,080
fn concatenate so you don't have the

485
00:17:34,080 --> 00:17:35,760
symbols but i can tell you that the name

486
00:17:35,760 --> 00:17:38,000
of the function is fn concatenate

487
00:17:38,000 --> 00:17:40,720
let's look at them and more particularly

488
00:17:40,720 --> 00:17:43,200
let's look at the last one

489
00:17:43,200 --> 00:17:45,120
and when you look at the code in ida you

490
00:17:45,120 --> 00:17:46,640
see a bunch of

491
00:17:46,640 --> 00:17:49,919
multiplications and additions

492
00:17:49,919 --> 00:17:52,720
this is done right before a call to cbrx

493
00:17:52,720 --> 00:17:54,320
which is supposed to check

494
00:17:54,320 --> 00:17:57,039
additions and multiplications and so

495
00:17:57,039 --> 00:17:58,880
when you look at that

496
00:17:58,880 --> 00:18:02,400
as a bug enter you think like okay there

497
00:18:02,400 --> 00:18:04,080
there is something here it's not

498
00:18:04,080 --> 00:18:06,000
possible this is this is too weird

499
00:18:06,000 --> 00:18:08,799
so the next thing you do uh obviously is

500
00:18:08,799 --> 00:18:10,320
uh trying to figure out

501
00:18:10,320 --> 00:18:13,120
who calls this function and then you uh

502
00:18:13,120 --> 00:18:14,720
just by doing a simple express

503
00:18:14,720 --> 00:18:17,360
you find a mention of a string named

504
00:18:17,360 --> 00:18:18,080
text join

505
00:18:18,080 --> 00:18:20,160
so at that moment i'm like you i have no

506
00:18:20,160 --> 00:18:21,600
idea what this is

507
00:18:21,600 --> 00:18:23,679
so let's uh let's look on the internet

508
00:18:23,679 --> 00:18:25,440
and a quick search

509
00:18:25,440 --> 00:18:27,520
gave me this documentation from

510
00:18:27,520 --> 00:18:29,679
microsoft saying that text join is just

511
00:18:29,679 --> 00:18:30,720
another formula

512
00:18:30,720 --> 00:18:34,160
using um concatenating cells

513
00:18:34,160 --> 00:18:37,120
and strings so pay attention to the

514
00:18:37,120 --> 00:18:38,400
first argument here

515
00:18:38,400 --> 00:18:41,039
the diameter so this can have a several

516
00:18:41,039 --> 00:18:41,760
form

517
00:18:41,760 --> 00:18:45,120
and here we are interesting in the

518
00:18:45,120 --> 00:18:48,240
the reference form and this is well

519
00:18:48,240 --> 00:18:51,280
thing this is where things get cool so

520
00:18:51,280 --> 00:18:51,919
when you look

521
00:18:51,919 --> 00:18:54,640
again at that assembly you think that uh

522
00:18:54,640 --> 00:18:55,120
well

523
00:18:55,120 --> 00:18:57,200
excellent has been first again for over

524
00:18:57,200 --> 00:18:58,320
20 years uh

525
00:18:58,320 --> 00:19:00,320
something like that it's too big um

526
00:19:00,320 --> 00:19:01,840
definitely missing something

527
00:19:01,840 --> 00:19:03,440
and again yeah there is something that

528
00:19:03,440 --> 00:19:05,840
uh that i don't see this these are my

529
00:19:05,840 --> 00:19:08,960
my first faults literally and then just

530
00:19:08,960 --> 00:19:10,960
looking at the code you can see the

531
00:19:10,960 --> 00:19:12,559
history and it turns out

532
00:19:12,559 --> 00:19:16,000
that in 2015 some new code had been

533
00:19:16,000 --> 00:19:18,559
added to that uh to that formula and at

534
00:19:18,559 --> 00:19:19,360
that moment

535
00:19:19,360 --> 00:19:22,960
uh the developer decided to support 3d

536
00:19:22,960 --> 00:19:25,039
references so references on three

537
00:19:25,039 --> 00:19:26,160
dimensions

538
00:19:26,160 --> 00:19:30,640
column row and spreadsheet

539
00:19:30,640 --> 00:19:33,919
and now once you have everything in mind

540
00:19:33,919 --> 00:19:36,640
it's pretty much it's very easy to get a

541
00:19:36,640 --> 00:19:38,320
simple puck and the formula that you can

542
00:19:38,320 --> 00:19:38,640
see

543
00:19:38,640 --> 00:19:41,840
on the screen right now will trigger uh

544
00:19:41,840 --> 00:19:43,840
i believe an access violation a write

545
00:19:43,840 --> 00:19:46,240
access variation in a vulnerable version

546
00:19:46,240 --> 00:19:50,400
of excel that's cool we now have our bug

547
00:19:50,400 --> 00:19:53,280
let's see if we can exploit it so most

548
00:19:53,280 --> 00:19:54,720
of the time the problem with

549
00:19:54,720 --> 00:19:56,880
those issues is that you are going to

550
00:19:56,880 --> 00:19:58,320
hit the end of the page

551
00:19:58,320 --> 00:20:00,000
quite quite quickly and you won't be

552
00:20:00,000 --> 00:20:01,679
able to exploit it

553
00:20:01,679 --> 00:20:03,360
because usually you trigger your

554
00:20:03,360 --> 00:20:04,640
intelligent overflow and then you

555
00:20:04,640 --> 00:20:05,600
allocate

556
00:20:05,600 --> 00:20:07,600
some space on the hip and then there are

557
00:20:07,600 --> 00:20:09,280
several loops so in

558
00:20:09,280 --> 00:20:11,200
this case there are like three different

559
00:20:11,200 --> 00:20:12,559
loops which will

560
00:20:12,559 --> 00:20:15,919
be trying to write data on the hip so

561
00:20:15,919 --> 00:20:19,200
we need we need to we need to get out

562
00:20:19,200 --> 00:20:21,200
of these loops we need to find something

563
00:20:21,200 --> 00:20:22,799
uh where we can

564
00:20:22,799 --> 00:20:24,960
we can safely exit and control the

565
00:20:24,960 --> 00:20:26,799
corruption and it turns out that

566
00:20:26,799 --> 00:20:29,840
it's actually possible in this scenario

567
00:20:29,840 --> 00:20:32,640
there is something uh very something

568
00:20:32,640 --> 00:20:33,520
that

569
00:20:33,520 --> 00:20:36,960
where we can abort here so

570
00:20:36,960 --> 00:20:39,600
if one of the cells that we are trying

571
00:20:39,600 --> 00:20:40,159
to

572
00:20:40,159 --> 00:20:43,200
concatenate contains an error

573
00:20:43,200 --> 00:20:45,600
excel will see that error and will just

574
00:20:45,600 --> 00:20:47,039
raise an exception

575
00:20:47,039 --> 00:20:50,159
in this in this function and so in vn

576
00:20:50,159 --> 00:20:52,400
we will just exit the loop without

577
00:20:52,400 --> 00:20:53,520
hitting that

578
00:20:53,520 --> 00:20:56,799
that end of page so this is a good thing

579
00:20:56,799 --> 00:21:00,080
that means that we have a controllable

580
00:21:00,080 --> 00:21:03,039
hip overflow and this is quite good one

581
00:21:03,039 --> 00:21:03,919
thing that i

582
00:21:03,919 --> 00:21:05,919
didn't mention is that we are writing

583
00:21:05,919 --> 00:21:07,440
pointers to strings

584
00:21:07,440 --> 00:21:11,280
not just bytes so let's look a bit more

585
00:21:11,280 --> 00:21:14,080
at this issue so there are a few

586
00:21:14,080 --> 00:21:16,640
constraints of course constraints from

587
00:21:16,640 --> 00:21:18,720
excel for example the number of rows or

588
00:21:18,720 --> 00:21:20,159
the number of currents

589
00:21:20,159 --> 00:21:22,960
but they're also something else as we

590
00:21:22,960 --> 00:21:24,000
are

591
00:21:24,000 --> 00:21:26,640
forced to trigger an issue an error an

592
00:21:26,640 --> 00:21:28,480
exception

593
00:21:28,480 --> 00:21:30,559
excel at the end of that function will

594
00:21:30,559 --> 00:21:31,600
just free

595
00:21:31,600 --> 00:21:33,760
everything which means that those

596
00:21:33,760 --> 00:21:35,919
pointers that you've just written

597
00:21:35,919 --> 00:21:38,080
those pointers that you are using to

598
00:21:38,080 --> 00:21:39,200
overflow the hip

599
00:21:39,200 --> 00:21:41,440
those will no point to freed memory and

600
00:21:41,440 --> 00:21:43,280
when you think of it about that

601
00:21:43,280 --> 00:21:46,320
you initially have an integer overflow

602
00:21:46,320 --> 00:21:47,840
that leads to a hyper flow

603
00:21:47,840 --> 00:21:51,360
that no leads to sever use after three

604
00:21:51,360 --> 00:21:54,880
so at first side the primitive

605
00:21:54,880 --> 00:21:57,600
looked good but looking better well it's

606
00:21:57,600 --> 00:21:59,039
not the best bug ever

607
00:21:59,039 --> 00:22:00,559
but it's certainly possible to get

608
00:22:00,559 --> 00:22:02,880
something

609
00:22:02,880 --> 00:22:06,320
and then comes the exploitation so

610
00:22:06,320 --> 00:22:07,919
probably the first thing that you'll try

611
00:22:07,919 --> 00:22:09,440
to do is get a lick

612
00:22:09,440 --> 00:22:11,919
a memory leak because you need to bypass

613
00:22:11,919 --> 00:22:12,799
isr

614
00:22:12,799 --> 00:22:15,840
so here the memory is quite

615
00:22:15,840 --> 00:22:18,320
it's quite easy to get to get an exploit

616
00:22:18,320 --> 00:22:18,960
done

617
00:22:18,960 --> 00:22:21,200
it's because excel store string in

618
00:22:21,200 --> 00:22:22,240
memory

619
00:22:22,240 --> 00:22:24,960
with a counter on two bytes followed by

620
00:22:24,960 --> 00:22:26,080
the string itself

621
00:22:26,080 --> 00:22:28,080
which means that if you override that

622
00:22:28,080 --> 00:22:30,000
counter then you will be able to read

623
00:22:30,000 --> 00:22:30,799
past

624
00:22:30,799 --> 00:22:33,679
the bounds of the string so once you've

625
00:22:33,679 --> 00:22:34,640
got that in mind

626
00:22:34,640 --> 00:22:37,360
you can think about a scenario where you

627
00:22:37,360 --> 00:22:39,039
would override that counter

628
00:22:39,039 --> 00:22:41,760
to uh to that string length with a

629
00:22:41,760 --> 00:22:42,640
pointer

630
00:22:42,640 --> 00:22:45,200
and then you would be able to read past

631
00:22:45,200 --> 00:22:46,960
the bounds of that

632
00:22:46,960 --> 00:22:49,520
of that string potentially reading

633
00:22:49,520 --> 00:22:50,480
things like

634
00:22:50,480 --> 00:22:53,120
v tables pointer something like that so

635
00:22:53,120 --> 00:22:54,640
at that moment the scenario is quite

636
00:22:54,640 --> 00:22:55,520
simple

637
00:22:55,520 --> 00:22:57,760
just spray the hip make some hole make

638
00:22:57,760 --> 00:22:58,640
some holes

639
00:22:58,640 --> 00:23:01,120
trigger the variability and then yeah

640
00:23:01,120 --> 00:23:02,240
let's cross fingers

641
00:23:02,240 --> 00:23:03,840
let's hope that there is something cool

642
00:23:03,840 --> 00:23:06,720
to leak but you know i'm not very scared

643
00:23:06,720 --> 00:23:10,799
of this so it's probably going to work

644
00:23:10,799 --> 00:23:12,320
and if you've ever done something like

645
00:23:12,320 --> 00:23:14,400
that before if you are an expert writer

646
00:23:14,400 --> 00:23:15,600
you know that things

647
00:23:15,600 --> 00:23:18,000
will never go according to the plan

648
00:23:18,000 --> 00:23:19,120
there is always something

649
00:23:19,120 --> 00:23:20,880
that you haven't thought of and in my

650
00:23:20,880 --> 00:23:22,320
case it was the undo

651
00:23:22,320 --> 00:23:25,679
or ctrl z and this is quite cool

652
00:23:25,679 --> 00:23:27,440
actually when you think about that when

653
00:23:27,440 --> 00:23:28,960
you type something in a cell

654
00:23:28,960 --> 00:23:31,200
you can always revert your change and

655
00:23:31,200 --> 00:23:33,360
then excel will just

656
00:23:33,360 --> 00:23:35,520
keep everything in memory which means

657
00:23:35,520 --> 00:23:37,280
for us that those strengths

658
00:23:37,280 --> 00:23:40,480
they won't be freed like this no and uh

659
00:23:40,480 --> 00:23:42,720
i totally forgot about that i didn't

660
00:23:42,720 --> 00:23:43,600
even consider

661
00:23:43,600 --> 00:23:47,200
this at the beginning

662
00:23:47,200 --> 00:23:50,480
so it took me a couple of at least hours

663
00:23:50,480 --> 00:23:52,640
good hours probably days to realize

664
00:23:52,640 --> 00:23:55,279
what was going on i i just couldn't free

665
00:23:55,279 --> 00:23:56,559
my strings

666
00:23:56,559 --> 00:23:59,200
so once you've got that in mind uh there

667
00:23:59,200 --> 00:24:01,360
are several scenarios where you can

668
00:24:01,360 --> 00:24:04,880
uh work work around so the first

669
00:24:04,880 --> 00:24:07,120
scenario would be to exhaust that undo

670
00:24:07,120 --> 00:24:07,919
stack

671
00:24:07,919 --> 00:24:11,039
just enter so many actions that in the

672
00:24:11,039 --> 00:24:13,120
end excel would be forced to free the

673
00:24:13,120 --> 00:24:13,760
strings

674
00:24:13,760 --> 00:24:16,000
the problem with this scenario is that

675
00:24:16,000 --> 00:24:17,520
it would force you to make so many

676
00:24:17,520 --> 00:24:18,640
allocations

677
00:24:18,640 --> 00:24:20,960
and then the hip would be you know a bit

678
00:24:20,960 --> 00:24:22,480
uh unstable

679
00:24:22,480 --> 00:24:25,919
uh your expert wouldn't be a reliable

680
00:24:25,919 --> 00:24:28,559
so in the end i didn't opt for this

681
00:24:28,559 --> 00:24:29,440
scenario

682
00:24:29,440 --> 00:24:31,440
i went for another scenario so things

683
00:24:31,440 --> 00:24:32,480
have changed since

684
00:24:32,480 --> 00:24:34,960
2018 but at that moment there was a

685
00:24:34,960 --> 00:24:36,880
button

686
00:24:36,880 --> 00:24:39,440
named calculate workbook and using that

687
00:24:39,440 --> 00:24:41,200
button you could actually commit your

688
00:24:41,200 --> 00:24:42,000
changes

689
00:24:42,000 --> 00:24:45,440
which means that excel would just free

690
00:24:45,440 --> 00:24:47,120
all those strengths everything that you

691
00:24:47,120 --> 00:24:49,840
wanted to be free and it wouldn't be

692
00:24:49,840 --> 00:24:52,400
possible for you to revert those changes

693
00:24:52,400 --> 00:24:55,039
and so this is what i did

694
00:24:55,039 --> 00:24:57,440
so now i've got my lick i know that

695
00:24:57,440 --> 00:24:59,440
overwriting a string length with a

696
00:24:59,440 --> 00:25:00,880
pointer is enough for me

697
00:25:00,880 --> 00:25:02,960
to read past the bounds and this is what

698
00:25:02,960 --> 00:25:04,720
it looks like when you do something like

699
00:25:04,720 --> 00:25:05,360
that with

700
00:25:05,360 --> 00:25:09,120
excel online your literary you literally

701
00:25:09,120 --> 00:25:13,279
get some chinese results in your cells

702
00:25:13,279 --> 00:25:15,039
and now coming back to the string

703
00:25:15,039 --> 00:25:17,279
package this is where you can use it

704
00:25:17,279 --> 00:25:19,919
you use the string functions to just

705
00:25:19,919 --> 00:25:20,400
play

706
00:25:20,400 --> 00:25:22,480
on this uh there's these chinese

707
00:25:22,480 --> 00:25:25,600
characters which are individual pointers

708
00:25:25,600 --> 00:25:28,720
so this is cool no what do what are we

709
00:25:28,720 --> 00:25:29,840
leaking

710
00:25:29,840 --> 00:25:31,760
i believe that the first thing i did

711
00:25:31,760 --> 00:25:33,279
once my leak was working

712
00:25:33,279 --> 00:25:36,480
was to check every single formula see

713
00:25:36,480 --> 00:25:38,720
if there wasn't one that could

714
00:25:38,720 --> 00:25:40,159
potentially allocate some c

715
00:25:40,159 --> 00:25:42,880
plus plus objects with the tables yeah

716
00:25:42,880 --> 00:25:44,320
that would make sense

717
00:25:44,320 --> 00:25:46,559
i went over them all i didn't find

718
00:25:46,559 --> 00:25:47,440
anything

719
00:25:47,440 --> 00:25:48,880
uh that doesn't mean that it's not

720
00:25:48,880 --> 00:25:50,080
possible there are some really

721
00:25:50,080 --> 00:25:51,360
complicated formulas

722
00:25:51,360 --> 00:25:54,840
like typically i'm thinking of the pivot

723
00:25:54,840 --> 00:25:56,080
tables

724
00:25:56,080 --> 00:25:58,559
formulas those are quite complex and i

725
00:25:58,559 --> 00:26:00,480
wouldn't be surprised if

726
00:26:00,480 --> 00:26:02,000
in the end it was possible to get

727
00:26:02,000 --> 00:26:04,080
something allocated

728
00:26:04,080 --> 00:26:06,640
with them no i went for a different

729
00:26:06,640 --> 00:26:08,559
scenario i want to play with

730
00:26:08,559 --> 00:26:11,120
charts and graphs so again there are

731
00:26:11,120 --> 00:26:12,320
dozens of

732
00:26:12,320 --> 00:26:14,559
charts and each of them leads to

733
00:26:14,559 --> 00:26:16,400
allocate a different object

734
00:26:16,400 --> 00:26:19,279
in in memory and those objects are c

735
00:26:19,279 --> 00:26:20,320
plus plus object

736
00:26:20,320 --> 00:26:22,840
with the tables and pointers to other

737
00:26:22,840 --> 00:26:24,799
objects

738
00:26:24,799 --> 00:26:27,360
in my case i found a graph with a

739
00:26:27,360 --> 00:26:29,039
pointer to a title object

740
00:26:29,039 --> 00:26:31,520
and that title object was had a pointer

741
00:26:31,520 --> 00:26:33,440
in the structure to a string object and

742
00:26:33,440 --> 00:26:34,320
that was cool

743
00:26:34,320 --> 00:26:36,080
because as i was overwriting the hip

744
00:26:36,080 --> 00:26:37,600
with pointers to string

745
00:26:37,600 --> 00:26:40,159
i could potentially overwrite that

746
00:26:40,159 --> 00:26:41,120
object

747
00:26:41,120 --> 00:26:44,559
up to overwriting a pointer to tighter

748
00:26:44,559 --> 00:26:45,039
objects

749
00:26:45,039 --> 00:26:48,159
and then overwrite that final pointers

750
00:26:48,159 --> 00:26:48,559
with

751
00:26:48,559 --> 00:26:52,080
some some control characters

752
00:26:52,080 --> 00:26:55,840
my intention at that moment was to get a

753
00:26:55,840 --> 00:26:56,720
read primitive

754
00:26:56,720 --> 00:26:59,120
so that i would be able to read data

755
00:26:59,120 --> 00:26:59,760
from

756
00:26:59,760 --> 00:27:02,799
excel server basically disclose

757
00:27:02,799 --> 00:27:05,600
the entire binary it turns out that this

758
00:27:05,600 --> 00:27:07,039
scenario didn't work

759
00:27:07,039 --> 00:27:09,360
for various reasons i could get it to

760
00:27:09,360 --> 00:27:10,320
work sometimes

761
00:27:10,320 --> 00:27:13,600
but it was unreliable enough so in the

762
00:27:13,600 --> 00:27:13,919
end

763
00:27:13,919 --> 00:27:16,799
i failed to get a redry primitive i just

764
00:27:16,799 --> 00:27:18,000
opted for

765
00:27:18,000 --> 00:27:21,520
more simple scenarios i was assuming

766
00:27:21,520 --> 00:27:22,000
that

767
00:27:22,000 --> 00:27:24,159
i knew already excel serve which is the

768
00:27:24,159 --> 00:27:25,600
case when you are attacking

769
00:27:25,600 --> 00:27:27,760
excel on-prem for example you've got

770
00:27:27,760 --> 00:27:29,679
access to the build so you can

771
00:27:29,679 --> 00:27:31,840
work around you can have an idea of

772
00:27:31,840 --> 00:27:34,080
where your gadgets are

773
00:27:34,080 --> 00:27:37,360
and in the end you just replay a static

774
00:27:37,360 --> 00:27:38,000
wrap

775
00:27:38,000 --> 00:27:41,120
that works and so in my case

776
00:27:41,120 --> 00:27:44,720
i just managed to trigger a vitable call

777
00:27:44,720 --> 00:27:48,080
on one of those graphs to get

778
00:27:48,080 --> 00:27:50,480
code execution and the exploit there was

779
00:27:50,480 --> 00:27:52,000
quite cool because i just needed to

780
00:27:52,000 --> 00:27:53,200
resize the

781
00:27:53,200 --> 00:27:56,000
one of the graph to get code execution

782
00:27:56,000 --> 00:27:57,840
so you know what i'm going to show it to

783
00:27:57,840 --> 00:27:59,200
you

784
00:27:59,200 --> 00:28:01,679
so i've got a demo here hopefully it

785
00:28:01,679 --> 00:28:02,480
will work

786
00:28:02,480 --> 00:28:05,679
the reasons um so i'm going to comment

787
00:28:05,679 --> 00:28:07,760
it quickly so this is the online office

788
00:28:07,760 --> 00:28:09,200
online server that you're seeing and

789
00:28:09,200 --> 00:28:12,640
this is the xlr online process

790
00:28:12,640 --> 00:28:14,480
so the best way to interact with it is

791
00:28:14,480 --> 00:28:16,080
just create a blank email

792
00:28:16,080 --> 00:28:19,600
and add an excel file to it

793
00:28:19,600 --> 00:28:21,679
and then preview it so that it will be

794
00:28:21,679 --> 00:28:23,679
sent to excel online

795
00:28:23,679 --> 00:28:27,600
then we go to edit mode which will

796
00:28:27,600 --> 00:28:30,480
enable us to interact with the server

797
00:28:30,480 --> 00:28:31,120
and so

798
00:28:31,120 --> 00:28:33,200
here we go so now first thing i'm doing

799
00:28:33,200 --> 00:28:34,480
is spray the hip

800
00:28:34,480 --> 00:28:37,679
and make a couple of holes so that later

801
00:28:37,679 --> 00:28:42,080
i can fill those holes and trigger

802
00:28:42,080 --> 00:28:45,600
the vulnerability to a variety

803
00:28:45,600 --> 00:28:48,240
counter of a string and this is what's

804
00:28:48,240 --> 00:28:49,360
happening here

805
00:28:49,360 --> 00:28:52,080
so we got successful we got uh the

806
00:28:52,080 --> 00:28:52,559
expert

807
00:28:52,559 --> 00:28:54,559
as the variability succeeded because

808
00:28:54,559 --> 00:28:56,159
we've got that string

809
00:28:56,159 --> 00:29:00,799
showing um weird characters

810
00:29:00,799 --> 00:29:02,960
and here we go here this is what i call

811
00:29:02,960 --> 00:29:04,799
my hip visualizer

812
00:29:04,799 --> 00:29:08,240
today i'm basically looking at the hip

813
00:29:08,240 --> 00:29:11,039
using excel cells so let's come back to

814
00:29:11,039 --> 00:29:13,200
the first spreadsheet

815
00:29:13,200 --> 00:29:16,480
now let's make more holes and let's

816
00:29:16,480 --> 00:29:19,919
insert some graphs so this is to be able

817
00:29:19,919 --> 00:29:20,720
to lick something

818
00:29:20,720 --> 00:29:23,120
this is to be able to leak a v table so

819
00:29:23,120 --> 00:29:24,960
if i remember correctly yes there are

820
00:29:24,960 --> 00:29:25,679
two graphs

821
00:29:25,679 --> 00:29:28,240
here that are put there just to be sure

822
00:29:28,240 --> 00:29:29,440
that it's going to work

823
00:29:29,440 --> 00:29:31,520
let's come back to my heap visualizer

824
00:29:31,520 --> 00:29:32,799
did that work

825
00:29:32,799 --> 00:29:35,520
yes it worked because right now you can

826
00:29:35,520 --> 00:29:36,080
see

827
00:29:36,080 --> 00:29:37,679
those v tables you can see those

828
00:29:37,679 --> 00:29:39,600
pointers so we just need to

829
00:29:39,600 --> 00:29:42,799
trigger the variability one last time so

830
00:29:42,799 --> 00:29:43,919
third time

831
00:29:43,919 --> 00:29:46,880
to be to overwrite one of these tables

832
00:29:46,880 --> 00:29:47,200
and

833
00:29:47,200 --> 00:29:51,039
hopefully train our good execution

834
00:29:51,039 --> 00:29:54,320
and if things worked at that moment

835
00:29:54,320 --> 00:29:56,640
we just need to resize one of that graph

836
00:29:56,640 --> 00:29:58,480
one of those graphs

837
00:29:58,480 --> 00:30:01,279
to trigger our payload let's see if we

838
00:30:01,279 --> 00:30:03,440
were lucky

839
00:30:03,440 --> 00:30:06,720
turns out that yeah we were lucky magic

840
00:30:06,720 --> 00:30:07,120
of

841
00:30:07,120 --> 00:30:10,399
the recorded demo

842
00:30:11,600 --> 00:30:14,640
so let's discuss a bit uh this exploit

843
00:30:14,640 --> 00:30:16,559
is it the kind of thing that uh

844
00:30:16,559 --> 00:30:18,960
we could potentially expect to see uh on

845
00:30:18,960 --> 00:30:19,760
the cloud

846
00:30:19,760 --> 00:30:22,640
i'm a bit skeptical on this especially

847
00:30:22,640 --> 00:30:24,080
when i'm thinking of

848
00:30:24,080 --> 00:30:28,240
all those memory manipulations

849
00:30:28,240 --> 00:30:29,919
you need to sculpt the hip you need to

850
00:30:29,919 --> 00:30:31,520
be able to put some holes

851
00:30:31,520 --> 00:30:33,840
to trigger your vulnerability but the

852
00:30:33,840 --> 00:30:36,640
problem is when your attack a production

853
00:30:36,640 --> 00:30:38,320
environment there will be all those

854
00:30:38,320 --> 00:30:39,919
users working

855
00:30:39,919 --> 00:30:42,399
on excel spreadsheet at the same time so

856
00:30:42,399 --> 00:30:44,720
to me it sounds a bit complicated

857
00:30:44,720 --> 00:30:47,760
to be able to reach

858
00:30:47,760 --> 00:30:50,559
a state a heap state that could

859
00:30:50,559 --> 00:30:51,840
potentially be

860
00:30:51,840 --> 00:30:54,640
useful for your exploit scenario that

861
00:30:54,640 --> 00:30:56,240
doesn't mean that it's not possible

862
00:30:56,240 --> 00:30:59,840
definitely not and the thing is with iis

863
00:30:59,840 --> 00:31:02,240
if your process crashed then if your

864
00:31:02,240 --> 00:31:04,399
process crashes then you it would just

865
00:31:04,399 --> 00:31:06,799
restart it for you and in the end you

866
00:31:06,799 --> 00:31:09,039
just need one try one lucky try

867
00:31:09,039 --> 00:31:14,080
to get your payload executed

868
00:31:14,080 --> 00:31:16,720
so i found a bug uh it wasn't definitely

869
00:31:16,720 --> 00:31:17,600
not

870
00:31:17,600 --> 00:31:20,320
the best bug i actually found two uh the

871
00:31:20,320 --> 00:31:20,880
second

872
00:31:20,880 --> 00:31:23,200
issue was affecting the uh forecast

873
00:31:23,200 --> 00:31:25,039
formula and it turns out that at that

874
00:31:25,039 --> 00:31:25,600
moment

875
00:31:25,600 --> 00:31:27,760
uh those were not available on office

876
00:31:27,760 --> 00:31:29,519
online so i didn't really um

877
00:31:29,519 --> 00:31:34,240
look at them in in the exploit scenario

878
00:31:34,240 --> 00:31:36,799
but the thing is in the end you just do

879
00:31:36,799 --> 00:31:37,360
with

880
00:31:37,360 --> 00:31:40,080
what you have and so i had one bug and

881
00:31:40,080 --> 00:31:41,279
managed to exploit it

882
00:31:41,279 --> 00:31:43,440
i'm quite convinced that by putting more

883
00:31:43,440 --> 00:31:44,559
effort on it

884
00:31:44,559 --> 00:31:46,399
it's possible to get something really

885
00:31:46,399 --> 00:31:47,600
cool something where you could

886
00:31:47,600 --> 00:31:49,039
potentially leak

887
00:31:49,039 --> 00:31:52,159
and read the entire excel binary i

888
00:31:52,159 --> 00:31:54,080
didn't do that because i was limited on

889
00:31:54,080 --> 00:31:54,480
time

890
00:31:54,480 --> 00:31:56,640
but that's definitely something possible

891
00:31:56,640 --> 00:31:57,519
and of course

892
00:31:57,519 --> 00:32:00,559
so this raises more questions so it's

893
00:32:00,559 --> 00:32:01,919
possible to do that

894
00:32:01,919 --> 00:32:05,039
on excel online can we do it on desktop

895
00:32:05,039 --> 00:32:06,320
excel as well can we

896
00:32:06,320 --> 00:32:09,679
can you get can is it possible to craft

897
00:32:09,679 --> 00:32:12,720
an excel file so that everything will be

898
00:32:12,720 --> 00:32:13,039
done

899
00:32:13,039 --> 00:32:15,519
at the same time bypass a sr bypass step

900
00:32:15,519 --> 00:32:16,640
etc etc

901
00:32:16,640 --> 00:32:19,679
and then either even an exploit for

902
00:32:19,679 --> 00:32:21,120
protective view

903
00:32:21,120 --> 00:32:24,640
i don't know possibly and then of course

904
00:32:24,640 --> 00:32:26,399
once you're once you have control on the

905
00:32:26,399 --> 00:32:28,240
server what can you do

906
00:32:28,240 --> 00:32:31,600
but then this will probably be a

907
00:32:31,600 --> 00:32:33,840
subject for a next presentation at black

908
00:32:33,840 --> 00:32:35,919
hat so i hope that you've enjoyed this

909
00:32:35,919 --> 00:32:36,799
presentation

910
00:32:36,799 --> 00:32:39,039
and if you have questions i'm always

911
00:32:39,039 --> 00:32:40,000
there

912
00:32:40,000 --> 00:32:41,760
thank you all thank you for your

913
00:32:41,760 --> 00:32:43,360
attention hope you had a good moment

914
00:32:43,360 --> 00:32:45,678
with me

915
00:32:49,440 --> 00:32:53,840
thanks well thank you for listening

916
00:32:53,840 --> 00:32:57,840
i hope you had a good time

917
00:33:03,440 --> 00:33:10,080
so taking any questions

918
00:33:10,080 --> 00:33:13,918
you must have questions i'm sure

919
00:33:20,880 --> 00:33:23,360
can i speculate if this same time of

920
00:33:23,360 --> 00:33:24,000
attack could

921
00:33:24,000 --> 00:33:26,240
theoretically be performed on something

922
00:33:26,240 --> 00:33:28,480
like google documents uh

923
00:33:28,480 --> 00:33:31,440
i have literally no idea of what's

924
00:33:31,440 --> 00:33:32,480
running on

925
00:33:32,480 --> 00:33:35,679
the google cloud so i cannot answer that

926
00:33:35,679 --> 00:33:39,120
uh i guess maybe yes but

927
00:33:39,120 --> 00:33:41,600
i don't know

928
00:33:45,679 --> 00:33:49,519
she does google guys actually

929
00:33:49,519 --> 00:33:53,840
they must know about that

930
00:34:05,039 --> 00:34:07,840
any other question

931
00:34:21,760 --> 00:34:35,839
come on don't be shy

932
00:34:41,280 --> 00:34:44,079
hi evangelist

933
00:34:46,639 --> 00:34:50,079
can i upload this box um

934
00:34:50,079 --> 00:34:53,520
no but uh well you've got enough uh

935
00:34:53,520 --> 00:34:56,159
to build your own proof of concept uh if

936
00:34:56,159 --> 00:34:57,040
you're curious

937
00:34:57,040 --> 00:35:00,320
uh i believe that you can understand

938
00:35:00,320 --> 00:35:02,800
that i'm not going to provide

939
00:35:02,800 --> 00:35:05,440
the exploit

940
00:35:09,599 --> 00:35:12,240
is it likely that world will be subject

941
00:35:12,240 --> 00:35:15,520
to the same variability

942
00:35:15,520 --> 00:35:18,800
so so um

943
00:35:18,800 --> 00:35:21,359
the book that i exploited was in excel

944
00:35:21,359 --> 00:35:23,280
so there was a formerly in excel there

945
00:35:23,280 --> 00:35:26,400
is no such thing in the world

946
00:35:26,400 --> 00:35:28,800
is there any vulnerability in the world

947
00:35:28,800 --> 00:35:30,480
that could be expected

948
00:35:30,480 --> 00:35:32,720
then yeah potentially i don't have any

949
00:35:32,720 --> 00:35:34,720
in mind but

950
00:35:34,720 --> 00:35:36,400
i mean that you can potentially get the

951
00:35:36,400 --> 00:35:38,320
same sort of thing

952
00:35:38,320 --> 00:35:42,800
in world but definitely with something

953
00:35:42,839 --> 00:35:44,240
else

954
00:35:44,240 --> 00:35:47,200
do i know if detection capabilities with

955
00:35:47,200 --> 00:35:48,800
azure sentinel

956
00:35:48,800 --> 00:35:52,000
exist uh this is actually a good

957
00:35:52,000 --> 00:35:52,960
question

958
00:35:52,960 --> 00:35:56,480
i am not aware of

959
00:35:56,480 --> 00:36:00,720
anything like that um

960
00:36:01,359 --> 00:36:04,400
there would be uh detections on on the

961
00:36:04,400 --> 00:36:05,760
behavior of

962
00:36:05,760 --> 00:36:10,000
iis for example things like if it starts

963
00:36:10,000 --> 00:36:12,160
a random process like cmd or this this

964
00:36:12,160 --> 00:36:13,760
kind of thing yeah that would

965
00:36:13,760 --> 00:36:17,280
that would raise um some arms but

966
00:36:17,280 --> 00:36:20,480
uh detections based on uh

967
00:36:20,480 --> 00:36:22,960
like deeply malicious excel formulas no

968
00:36:22,960 --> 00:36:24,160
i don't think that there is

969
00:36:24,160 --> 00:36:27,839
anything like that

970
00:36:44,640 --> 00:36:55,839
any other questions

971
00:37:03,599 --> 00:37:05,839
i like the question on the google

972
00:37:05,839 --> 00:37:08,240
documents by the way you should

973
00:37:08,240 --> 00:37:09,920
definitely ask those guys

974
00:37:09,920 --> 00:37:23,839
the same questions

975
00:37:28,000 --> 00:37:30,640
anything else

976
00:37:31,440 --> 00:37:34,480
come on don't be shy

977
00:37:34,880 --> 00:37:37,839
i cannot see you

978
00:37:59,440 --> 00:38:03,119
uh in my exploit attempt did i trigger

979
00:38:03,119 --> 00:38:04,079
any forensic

980
00:38:04,079 --> 00:38:08,720
logging from the exploit

981
00:38:09,040 --> 00:38:12,880
so i was testing on my own environment

982
00:38:12,880 --> 00:38:15,839
so there was no such thing there i mean

983
00:38:15,839 --> 00:38:17,119
there wasn't any

984
00:38:17,119 --> 00:38:21,359
av or anything in particular there

985
00:38:21,359 --> 00:38:24,160
so i know that exploiter did not trigger

986
00:38:24,160 --> 00:38:25,200
anything

987
00:38:25,200 --> 00:38:28,160
but as i said i was building a library

988
00:38:28,160 --> 00:38:29,599
from a remote chair

989
00:38:29,599 --> 00:38:32,320
and if you actually try to do that in

990
00:38:32,320 --> 00:38:33,520
your exploit you're

991
00:38:33,520 --> 00:38:36,560
probably going to raise dozens of

992
00:38:36,560 --> 00:38:47,839
different arms if you do that

993
00:38:54,560 --> 00:39:01,839
anything else

994
00:39:10,480 --> 00:39:14,079
i'm taking advantage of this q a session

995
00:39:14,079 --> 00:39:16,240
to remind you that we've got a job

996
00:39:16,240 --> 00:39:17,599
offers in our team

997
00:39:17,599 --> 00:39:19,839
in cheltenham in the uk so if you want

998
00:39:19,839 --> 00:39:21,040
to work with me

999
00:39:21,040 --> 00:39:24,079
then you're most welcome to uh being me

1000
00:39:24,079 --> 00:39:24,800
on twitter

1001
00:39:24,800 --> 00:39:27,839
or uh just look at the job offers that

1002
00:39:27,839 --> 00:39:30,640
we've advertised

1003
00:39:30,640 --> 00:39:43,839
i would love to get your city

1004
00:39:49,040 --> 00:39:57,839
in your questions

1005
00:39:58,400 --> 00:40:00,800
thank you anyway for uh it's a great

1006
00:40:00,800 --> 00:40:01,520
feedback

1007
00:40:01,520 --> 00:40:04,160
on this uh on this chat i can see that

1008
00:40:04,160 --> 00:40:05,359
you

1009
00:40:05,359 --> 00:40:11,839
enjoyed the presentation so that's good

1010
00:40:37,599 --> 00:40:40,319
anything else

1011
00:40:51,359 --> 00:40:53,119
well if there are no other questions

1012
00:40:53,119 --> 00:40:57,760
then i think i'm good to review them

1013
00:40:58,560 --> 00:41:01,520
thank you all for following me have a

1014
00:41:01,520 --> 00:41:05,280
great day guys

