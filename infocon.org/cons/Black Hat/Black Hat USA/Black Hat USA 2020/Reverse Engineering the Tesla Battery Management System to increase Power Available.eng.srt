1
00:00:04,250 --> 00:00:16,800
[Music]

2
00:00:16,800 --> 00:00:17,840
hi there

3
00:00:17,840 --> 00:00:19,439
uh welcome to my talk reverse

4
00:00:19,439 --> 00:00:21,439
engineering the tesla battery management

5
00:00:21,439 --> 00:00:23,439
system to increase power available

6
00:00:23,439 --> 00:00:25,439
this was a culmination of some research

7
00:00:25,439 --> 00:00:27,519
that i did over the last year and was

8
00:00:27,519 --> 00:00:29,039
definitely one of the

9
00:00:29,039 --> 00:00:31,039
most complicated reverse engineering

10
00:00:31,039 --> 00:00:32,880
things i've ever done

11
00:00:32,880 --> 00:00:34,320
but it was also pretty rewarding because

12
00:00:34,320 --> 00:00:36,880
it actually uncovered a real world

13
00:00:36,880 --> 00:00:37,520
effect

14
00:00:37,520 --> 00:00:40,239
i was able to make a tesla model s

15
00:00:40,239 --> 00:00:41,360
faster

16
00:00:41,360 --> 00:00:42,960
in the end and coming from a car guy

17
00:00:42,960 --> 00:00:45,200
who's been tuning cars pretty much his

18
00:00:45,200 --> 00:00:48,320
entire adult life it was a

19
00:00:48,320 --> 00:00:50,800
fun combination of actually hacking and

20
00:00:50,800 --> 00:00:51,600
then

21
00:00:51,600 --> 00:00:54,559
you know wrenching on cars to get the

22
00:00:54,559 --> 00:00:56,399
desired effect out of this

23
00:00:56,399 --> 00:00:58,320
this work so i hope you enjoy it as much

24
00:00:58,320 --> 00:01:00,239
as i enjoyed um

25
00:01:00,239 --> 00:01:02,800
doing the work and the research so a

26
00:01:02,800 --> 00:01:04,080
little bit about me

27
00:01:04,080 --> 00:01:05,360
uh my name is patrick kylie i'm

28
00:01:05,360 --> 00:01:07,760
principal security consultant at rapid7

29
00:01:07,760 --> 00:01:09,920
member of the penetration testing team

30
00:01:09,920 --> 00:01:11,920
i've done previous research in avionics

31
00:01:11,920 --> 00:01:12,640
security

32
00:01:12,640 --> 00:01:14,560
um obviously the the tesla i've

33
00:01:14,560 --> 00:01:16,720
researched uh some internet chemical

34
00:01:16,720 --> 00:01:18,720
transportation platforms also have some

35
00:01:18,720 --> 00:01:20,479
experience in hardware hacking

36
00:01:20,479 --> 00:01:24,000
uh can bus etc

37
00:01:24,000 --> 00:01:25,759
so uh some topics that we're going to

38
00:01:25,759 --> 00:01:27,280
cover on this

39
00:01:27,280 --> 00:01:29,920
is just a little outline uh first the

40
00:01:29,920 --> 00:01:31,280
architecture of the model s

41
00:01:31,280 --> 00:01:32,720
and the battery management system the

42
00:01:32,720 --> 00:01:34,720
battery management system is the uh

43
00:01:34,720 --> 00:01:37,040
first kind of gatekeeper for how fast

44
00:01:37,040 --> 00:01:38,799
the vehicle can go uh the other units

45
00:01:38,799 --> 00:01:40,640
are the drive inverters

46
00:01:40,640 --> 00:01:42,399
so performance in ludicrous timeline

47
00:01:42,399 --> 00:01:43,840
you'll see why that's important in a

48
00:01:43,840 --> 00:01:44,880
minute

49
00:01:44,880 --> 00:01:46,560
the hardware changes that actually had

50
00:01:46,560 --> 00:01:48,560
to happen to the car

51
00:01:48,560 --> 00:01:50,640
to make it go faster some components

52
00:01:50,640 --> 00:01:52,799
that had to be swapped out

53
00:01:52,799 --> 00:01:54,799
some data that's actually stored in

54
00:01:54,799 --> 00:01:57,520
toolbox a tesla's diagnostic application

55
00:01:57,520 --> 00:01:58,240
and

56
00:01:58,240 --> 00:01:59,840
how i was able to extract that data and

57
00:01:59,840 --> 00:02:02,479
use that to figure out the process

58
00:02:02,479 --> 00:02:04,799
uh some firmware changes that had to

59
00:02:04,799 --> 00:02:06,079
occur

60
00:02:06,079 --> 00:02:08,878
to the car in order to actually uh you

61
00:02:08,878 --> 00:02:10,318
know revise the battery management

62
00:02:10,318 --> 00:02:10,800
system

63
00:02:10,800 --> 00:02:12,560
upgrade the amount of current that it

64
00:02:12,560 --> 00:02:14,400
would allow going through it

65
00:02:14,400 --> 00:02:16,640
modification to the shunt the shunt is

66
00:02:16,640 --> 00:02:18,000
the um

67
00:02:18,000 --> 00:02:19,599
component in the battery management in

68
00:02:19,599 --> 00:02:21,280
the the battery itself that actually

69
00:02:21,280 --> 00:02:22,000
measures the amount

70
00:02:22,000 --> 00:02:24,959
of current flowing it's a unique

71
00:02:24,959 --> 00:02:26,480
component and it actually had to be

72
00:02:26,480 --> 00:02:27,200
modified

73
00:02:27,200 --> 00:02:29,680
in order to allow this upgrade to go

74
00:02:29,680 --> 00:02:31,280
through

75
00:02:31,280 --> 00:02:33,519
the upgrade process itself what what the

76
00:02:33,519 --> 00:02:36,000
actual steps are

77
00:02:36,000 --> 00:02:37,920
an expensive bricking i managed to

78
00:02:37,920 --> 00:02:39,760
actually break the car and i had to tow

79
00:02:39,760 --> 00:02:40,239
it

80
00:02:40,239 --> 00:02:42,480
across state lines uh to in order to

81
00:02:42,480 --> 00:02:44,640
finish the process but

82
00:02:44,640 --> 00:02:46,080
in the end i actually learned something

83
00:02:46,080 --> 00:02:48,239
cool and i'll share what that was

84
00:02:48,239 --> 00:02:50,080
and then some next steps if if someone

85
00:02:50,080 --> 00:02:51,599
wants to help me uh

86
00:02:51,599 --> 00:02:53,440
work on this and and take it further i'm

87
00:02:53,440 --> 00:02:55,120
continuing to work on this and i would

88
00:02:55,120 --> 00:02:57,920
appreciate any help

89
00:02:58,480 --> 00:03:01,599
so uh here's a brief overview of the the

90
00:03:01,599 --> 00:03:03,920
architecture of the model s

91
00:03:03,920 --> 00:03:05,920
the kind of the central point that you

92
00:03:05,920 --> 00:03:07,200
know when someone's hacking the car that

93
00:03:07,200 --> 00:03:09,120
they connect to is the cid the central

94
00:03:09,120 --> 00:03:09,599
nation

95
00:03:09,599 --> 00:03:12,239
information display on uh the vehicle

96
00:03:12,239 --> 00:03:13,040
that was the

97
00:03:13,040 --> 00:03:14,959
donor car for this research is an nvidia

98
00:03:14,959 --> 00:03:16,640
integra base the newer ones are

99
00:03:16,640 --> 00:03:18,959
intel based platforms including the

100
00:03:18,959 --> 00:03:21,120
model 3 and the newer ones

101
00:03:21,120 --> 00:03:22,800
the gateway which is a security

102
00:03:22,800 --> 00:03:25,519
component that actually sits

103
00:03:25,519 --> 00:03:28,959
between the cid and the can but various

104
00:03:28,959 --> 00:03:30,959
can buses of the car

105
00:03:30,959 --> 00:03:33,200
and then specifically uh focusing in on

106
00:03:33,200 --> 00:03:34,159
a powertrain

107
00:03:34,159 --> 00:03:35,920
can bus the powertrain can bus contains

108
00:03:35,920 --> 00:03:38,480
the bms contains the drive inverters

109
00:03:38,480 --> 00:03:40,879
charging units and other elements that

110
00:03:40,879 --> 00:03:42,159
actually control a power to the

111
00:03:42,159 --> 00:03:43,920
powertrain

112
00:03:43,920 --> 00:03:47,040
that it's a standardized can bus so it

113
00:03:47,040 --> 00:03:49,440
runs at 500 kilobits a second

114
00:03:49,440 --> 00:03:53,120
uses differential signaling uh two wires

115
00:03:53,120 --> 00:03:56,080
uh 11-bit arb ids pretty much like any

116
00:03:56,080 --> 00:03:56,400
other

117
00:03:56,400 --> 00:03:58,720
can bus that you would see out there and

118
00:03:58,720 --> 00:04:00,400
then that can bus actually supports the

119
00:04:00,400 --> 00:04:02,239
uds standard we'll actually see later

120
00:04:02,239 --> 00:04:05,120
why that's important

121
00:04:05,760 --> 00:04:07,760
so drilling in on the battery management

122
00:04:07,760 --> 00:04:08,879
system or bms

123
00:04:08,879 --> 00:04:12,239
itself this is a picture of the bms that

124
00:04:12,239 --> 00:04:14,080
you see over here on the right

125
00:04:14,080 --> 00:04:17,000
the main microprocessor is a tms 320

126
00:04:17,000 --> 00:04:19,918
c2809 it's a

127
00:04:19,918 --> 00:04:22,479
digital analog converter microprocessor

128
00:04:22,479 --> 00:04:24,960
made by texas instruments

129
00:04:24,960 --> 00:04:27,040
there's also an altera cpld that's

130
00:04:27,040 --> 00:04:28,960
basically a hardware backup for the tms

131
00:04:28,960 --> 00:04:31,520
320 in case there are any software flaws

132
00:04:31,520 --> 00:04:33,680
uh it looks like it was engineered

133
00:04:33,680 --> 00:04:36,320
enough such that uh the tms 320

134
00:04:36,320 --> 00:04:38,080
would have a backup in the altera in

135
00:04:38,080 --> 00:04:39,680
case there were any kind of uh software

136
00:04:39,680 --> 00:04:40,639
flaws that

137
00:04:40,639 --> 00:04:43,199
prevented any hazardous conditions from

138
00:04:43,199 --> 00:04:45,040
existing from the battery

139
00:04:45,040 --> 00:04:47,120
uh there's also a current shunt that has

140
00:04:47,120 --> 00:04:48,479
an stm8

141
00:04:48,479 --> 00:04:49,919
that measures current coming from the

142
00:04:49,919 --> 00:04:51,840
battery and and feeds it directly into

143
00:04:51,840 --> 00:04:55,120
the bms board there's a pre-charge

144
00:04:55,120 --> 00:04:56,479
resistor which

145
00:04:56,479 --> 00:04:59,680
when the contactors from the bms close

146
00:04:59,680 --> 00:05:01,360
and allow current to the

147
00:05:01,360 --> 00:05:04,000
rest of the car the pre-charge resistor

148
00:05:04,000 --> 00:05:06,320
acts as a stop gap before both currents

149
00:05:06,320 --> 00:05:09,280
before both contactors actually close

150
00:05:09,280 --> 00:05:10,080
and prevent

151
00:05:10,080 --> 00:05:12,080
inrush current damage from all that high

152
00:05:12,080 --> 00:05:13,759
voltage going into the other components

153
00:05:13,759 --> 00:05:15,120
of the vehicle

154
00:05:15,120 --> 00:05:16,880
and then there are b and b boards on

155
00:05:16,880 --> 00:05:18,560
each battery pack uh the

156
00:05:18,560 --> 00:05:22,000
the 85 90 and 100

157
00:05:22,000 --> 00:05:23,600
uh kilowatt hour battery packs all have

158
00:05:23,600 --> 00:05:26,320
16 of them and those all connect back

159
00:05:26,320 --> 00:05:30,000
through a bus into the uh the dms board

160
00:05:30,000 --> 00:05:31,680
they actually have a bleed resistors and

161
00:05:31,680 --> 00:05:33,280
they're a very important component

162
00:05:33,280 --> 00:05:35,600
and actually maintaining a level state

163
00:05:35,600 --> 00:05:38,560
of charge across the entire battery

164
00:05:38,560 --> 00:05:40,479
all the firmware component changes that

165
00:05:40,479 --> 00:05:42,080
we actually did to the car occurred in

166
00:05:42,080 --> 00:05:43,759
the tms 320.

167
00:05:43,759 --> 00:05:44,880
then there are a few changes to the

168
00:05:44,880 --> 00:05:47,120
shine so we'll go over that

169
00:05:47,120 --> 00:05:49,280
this next picture actually shows all the

170
00:05:49,280 --> 00:05:50,720
individual components kind of hooked up

171
00:05:50,720 --> 00:05:52,000
except for the bmvs i just have

172
00:05:52,000 --> 00:05:54,320
one of those we have the pre-charge

173
00:05:54,320 --> 00:05:55,440
resistor

174
00:05:55,440 --> 00:05:58,319
the shunt itself two large pieces of

175
00:05:58,319 --> 00:05:59,120
copper with

176
00:05:59,120 --> 00:06:02,160
another um piece of metal

177
00:06:02,160 --> 00:06:04,840
welded between the two the contactors

178
00:06:04,840 --> 00:06:07,360
themselves uh voltage sense wires which

179
00:06:07,360 --> 00:06:08,800
actually connect to the four different

180
00:06:08,800 --> 00:06:11,120
uh terminals of the contactor to measure

181
00:06:11,120 --> 00:06:12,880
that the contactors are open or closed

182
00:06:12,880 --> 00:06:13,600
and there isn't

183
00:06:13,600 --> 00:06:16,400
a short situation going on there and

184
00:06:16,400 --> 00:06:17,919
also measures the amount of voltage

185
00:06:17,919 --> 00:06:20,960
currently provided by the battery

186
00:06:20,960 --> 00:06:23,120
so a little bit of history on this the

187
00:06:23,120 --> 00:06:25,840
p85d the the subject of this

188
00:06:25,840 --> 00:06:27,280
actual research it was announced in

189
00:06:27,280 --> 00:06:30,000
october 10th of 2014

190
00:06:30,000 --> 00:06:32,840
but then almost a year later in july of

191
00:06:32,840 --> 00:06:35,440
2015 ludicrous is announced

192
00:06:35,440 --> 00:06:38,960
so the dual motor motor performance

193
00:06:38,960 --> 00:06:40,319
vehicle was released before that and

194
00:06:40,319 --> 00:06:41,199
that's important

195
00:06:41,199 --> 00:06:44,560
because there was a retrofit available

196
00:06:44,560 --> 00:06:46,319
for new vehicles purchased after

197
00:06:46,319 --> 00:06:47,759
ludicrous was announced it was a ten

198
00:06:47,759 --> 00:06:49,199
thousand dollar upgrade

199
00:06:49,199 --> 00:06:52,400
but uh as a loyalty or or from some

200
00:06:52,400 --> 00:06:53,759
other reason they decide to actually

201
00:06:53,759 --> 00:06:55,520
offer for a limited time

202
00:06:55,520 --> 00:06:57,039
a five thousand dollar upgrade for

203
00:06:57,039 --> 00:06:59,120
existing p85d owners but if you didn't

204
00:06:59,120 --> 00:07:01,120
take advantage of it during that limited

205
00:07:01,120 --> 00:07:03,039
time you couldn't take advantage of it

206
00:07:03,039 --> 00:07:05,680
later so you couldn't buy a used p85

207
00:07:05,680 --> 00:07:08,400
d today and actually pay tesla to do the

208
00:07:08,400 --> 00:07:10,880
upgrade they don't offer that anymore

209
00:07:10,880 --> 00:07:12,319
the hardware part of the upgrade

210
00:07:12,319 --> 00:07:14,479
involves new contactors and a pyrofuse

211
00:07:14,479 --> 00:07:15,680
those are

212
00:07:15,680 --> 00:07:17,680
very important components that actually

213
00:07:17,680 --> 00:07:19,599
allow additional current to flow through

214
00:07:19,599 --> 00:07:22,159
the battery

215
00:07:22,400 --> 00:07:25,199
and then many of the battery packs that

216
00:07:25,199 --> 00:07:26,080
came in

217
00:07:26,080 --> 00:07:28,240
the teslas after that were actually

218
00:07:28,240 --> 00:07:30,639
already upgraded with the new components

219
00:07:30,639 --> 00:07:33,039
and they're just ludicrous capable so um

220
00:07:33,039 --> 00:07:34,479
what that meant is there was just a

221
00:07:34,479 --> 00:07:36,479
configuration change that had to happen

222
00:07:36,479 --> 00:07:38,080
on the car

223
00:07:38,080 --> 00:07:40,720
um it was just a software change it

224
00:07:40,720 --> 00:07:41,120
wasn't

225
00:07:41,120 --> 00:07:43,039
where you actually had to reprogram

226
00:07:43,039 --> 00:07:44,560
firmware you just had to make a

227
00:07:44,560 --> 00:07:46,400
single setting change on a single file

228
00:07:46,400 --> 00:07:47,680
on the gateway so uh

229
00:07:47,680 --> 00:07:49,360
ludicrous cable basically means if you

230
00:07:49,360 --> 00:07:52,000
add performance add-on 1

231
00:07:52,000 --> 00:07:54,240
to the internal dat file that's existing

232
00:07:54,240 --> 00:07:55,199
on the gateway

233
00:07:55,199 --> 00:07:57,599
it would enable the car for ludicrous

234
00:07:57,599 --> 00:07:58,319
assuming

235
00:07:58,319 --> 00:07:59,680
it had the battery pack and everything

236
00:07:59,680 --> 00:08:02,319
else capable

237
00:08:02,720 --> 00:08:04,800
so what we did i had a donor vehicle we

238
00:08:04,800 --> 00:08:06,639
actually did the upgrade i drove out to

239
00:08:06,639 --> 00:08:09,199
california

240
00:08:09,199 --> 00:08:12,000
had the car out there uh because that's

241
00:08:12,000 --> 00:08:13,440
where i actually had access to a friend

242
00:08:13,440 --> 00:08:14,879
that has a lift there's a

243
00:08:14,879 --> 00:08:16,080
guy but that goes by the name of

244
00:08:16,080 --> 00:08:18,080
bitbuster is a bmw hacker

245
00:08:18,080 --> 00:08:20,639
um he has a body shop offered use of his

246
00:08:20,639 --> 00:08:21,440
lift

247
00:08:21,440 --> 00:08:23,199
he was actually the first guy that was

248
00:08:23,199 --> 00:08:25,199
able to retrofit autopilot ii

249
00:08:25,199 --> 00:08:27,440
to an autopilot one vehicle i mean he

250
00:08:27,440 --> 00:08:28,879
was actually doing that work while while

251
00:08:28,879 --> 00:08:30,319
i was working on this

252
00:08:30,319 --> 00:08:32,320
and he was successful he actually was

253
00:08:32,320 --> 00:08:33,519
able to add all the cameras and

254
00:08:33,519 --> 00:08:34,399
everything make a

255
00:08:34,399 --> 00:08:36,640
an ap1 car ep 2 very cool work but he

256
00:08:36,640 --> 00:08:38,000
helped me with this and so thank you

257
00:08:38,000 --> 00:08:39,760
bitbuster

258
00:08:39,760 --> 00:08:43,120
so here's the vehicle up on a lift

259
00:08:43,120 --> 00:08:45,040
here's a picture of the vehicle with a

260
00:08:45,040 --> 00:08:46,800
pack dropped out of it um

261
00:08:46,800 --> 00:08:49,279
so we basically did all the components

262
00:08:49,279 --> 00:08:50,959
remove the central

263
00:08:50,959 --> 00:08:53,600
uh bolts and then dropped it onto this

264
00:08:53,600 --> 00:08:54,480
giant

265
00:08:54,480 --> 00:08:56,720
heavy weight chassis that could support

266
00:08:56,720 --> 00:08:59,200
the entire weight of the vehicle itself

267
00:08:59,200 --> 00:09:00,640
remove the side bolts and then raise the

268
00:09:00,640 --> 00:09:04,000
car back up so we could do the work

269
00:09:04,399 --> 00:09:06,240
here's a close-up of the where the

270
00:09:06,240 --> 00:09:08,399
actual pyrofuse sits the pyrofuse

271
00:09:08,399 --> 00:09:10,000
actually sits between

272
00:09:10,000 --> 00:09:13,040
um two sides of

273
00:09:13,040 --> 00:09:15,440
the the battery packs so basically

274
00:09:15,440 --> 00:09:17,040
midway through if you if you think of

275
00:09:17,040 --> 00:09:18,640
like you know one side as being the

276
00:09:18,640 --> 00:09:20,160
the most negative and one sided being

277
00:09:20,160 --> 00:09:21,600
the most positive it it's halfway

278
00:09:21,600 --> 00:09:22,880
between those two so

279
00:09:22,880 --> 00:09:24,800
between eight of the packs uh is where

280
00:09:24,800 --> 00:09:26,320
this fuse sits

281
00:09:26,320 --> 00:09:27,680
and we had to go from a conventional

282
00:09:27,680 --> 00:09:28,959
fuse which is what you see in this

283
00:09:28,959 --> 00:09:30,880
picture to uh pyrofuse

284
00:09:30,880 --> 00:09:32,720
a picture on the right is a picture of

285
00:09:32,720 --> 00:09:34,080
the contactor bay with the

286
00:09:34,080 --> 00:09:37,360
old contactors removed and then in the

287
00:09:37,360 --> 00:09:38,880
next slide you can actually see a

288
00:09:38,880 --> 00:09:41,519
close-up of the new contactor's end

289
00:09:41,519 --> 00:09:43,279
and a close-up of the current shunt you

290
00:09:43,279 --> 00:09:44,880
can see that the current shunt

291
00:09:44,880 --> 00:09:47,680
exists right between the contactors and

292
00:09:47,680 --> 00:09:49,200
then the rest of the battery and that's

293
00:09:49,200 --> 00:09:50,640
what actually measures the amount of

294
00:09:50,640 --> 00:09:53,200
current going through it

295
00:09:53,200 --> 00:09:54,640
so those are the hardware changes uh

296
00:09:54,640 --> 00:09:56,480
what about the firmware

297
00:09:56,480 --> 00:09:57,920
uh for this we need to dig into some

298
00:09:57,920 --> 00:10:00,720
python so tesla makes a diagnostic tool

299
00:10:00,720 --> 00:10:03,440
called cool toolbox it runs on windows

300
00:10:03,440 --> 00:10:05,200
but it's mostly written in python so

301
00:10:05,200 --> 00:10:06,560
it's an executable that's written in

302
00:10:06,560 --> 00:10:07,279
python

303
00:10:07,279 --> 00:10:08,800
and it uses all these uh which you see

304
00:10:08,800 --> 00:10:10,640
our scramble files in in my little

305
00:10:10,640 --> 00:10:11,760
screenshot here

306
00:10:11,760 --> 00:10:14,320
um these scramble files are encrypted

307
00:10:14,320 --> 00:10:15,279
and then they're

308
00:10:15,279 --> 00:10:17,279
actually compiled and then encrypted but

309
00:10:17,279 --> 00:10:19,120
to reverse that we had to decrypt them

310
00:10:19,120 --> 00:10:21,120
and then decompile them

311
00:10:21,120 --> 00:10:24,079
and uh these files are contained as

312
00:10:24,079 --> 00:10:25,920
individual plugins

313
00:10:25,920 --> 00:10:29,040
that when a technician is actually using

314
00:10:29,040 --> 00:10:30,079
toolbox

315
00:10:30,079 --> 00:10:32,560
these files are are decrypted on the fly

316
00:10:32,560 --> 00:10:33,839
even if they don't have a connection to

317
00:10:33,839 --> 00:10:35,519
there so basically what

318
00:10:35,519 --> 00:10:37,839
uh it tells us is that everything that

319
00:10:37,839 --> 00:10:38,720
we need

320
00:10:38,720 --> 00:10:40,959
to decrypt those files you can actually

321
00:10:40,959 --> 00:10:42,000
get

322
00:10:42,000 --> 00:10:43,839
from a laptop that's actually running

323
00:10:43,839 --> 00:10:46,720
the software so uh

324
00:10:46,720 --> 00:10:48,399
someone else not me actually figured out

325
00:10:48,399 --> 00:10:51,600
how to to do that decryption

326
00:10:51,600 --> 00:10:52,880
shared that information with me and then

327
00:10:52,880 --> 00:10:54,079
i started to dig through these scramble

328
00:10:54,079 --> 00:10:54,640
files to

329
00:10:54,640 --> 00:10:57,760
to find out uh what we could find out

330
00:10:57,760 --> 00:10:58,959
for the process

331
00:10:58,959 --> 00:11:00,720
so once you decrypt them you can

332
00:11:00,720 --> 00:11:02,320
actually just use uncompiled six it's a

333
00:11:02,320 --> 00:11:04,079
standard python module and it'll give us

334
00:11:04,079 --> 00:11:06,240
the source code

335
00:11:06,240 --> 00:11:08,800
and then uh what's really cool is the

336
00:11:08,800 --> 00:11:10,160
the source code actually had all the

337
00:11:10,160 --> 00:11:11,920
comments left in place so a next few

338
00:11:11,920 --> 00:11:13,360
slides are gonna show

339
00:11:13,360 --> 00:11:15,600
some of the data we're able to get so

340
00:11:15,600 --> 00:11:16,560
this is a

341
00:11:16,560 --> 00:11:18,079
little header of one of the files that

342
00:11:18,079 --> 00:11:20,240
was uh uncompiled

343
00:11:20,240 --> 00:11:22,320
and you can actually see it has uh all

344
00:11:22,320 --> 00:11:24,480
the information about who wrote it

345
00:11:24,480 --> 00:11:27,600
uh information on it and then you know

346
00:11:27,600 --> 00:11:28,000
just

347
00:11:28,000 --> 00:11:30,800
regular python source code uh helpful

348
00:11:30,800 --> 00:11:31,600
comments

349
00:11:31,600 --> 00:11:34,480
so here's one specific to ludicrous uh

350
00:11:34,480 --> 00:11:35,040
it

351
00:11:35,040 --> 00:11:37,200
tells us that you know some of the

352
00:11:37,200 --> 00:11:39,120
things that it actually has to have and

353
00:11:39,120 --> 00:11:40,399
some of the things that it's actually

354
00:11:40,399 --> 00:11:41,440
checking so

355
00:11:41,440 --> 00:11:42,800
comments like these actually helped

356
00:11:42,800 --> 00:11:45,440
point us in the correct direction

357
00:11:45,440 --> 00:11:47,200
and then we actually had a lot of data

358
00:11:47,200 --> 00:11:48,640
structures so if you see these

359
00:11:48,640 --> 00:11:52,399
qt resource data qt resource name and qt

360
00:11:52,399 --> 00:11:53,600
resource structure

361
00:11:53,600 --> 00:11:56,240
that's all binary data i wrote a really

362
00:11:56,240 --> 00:11:59,600
really ugly python

363
00:11:59,839 --> 00:12:02,079
extraction file to iterate through every

364
00:12:02,079 --> 00:12:03,040
single

365
00:12:03,040 --> 00:12:05,360
python module and extract it if those

366
00:12:05,360 --> 00:12:06,800
variables were there

367
00:12:06,800 --> 00:12:09,519
and then we just ran bandwalk against it

368
00:12:09,519 --> 00:12:10,079
once

369
00:12:10,079 --> 00:12:12,800
benwalk was ran we got all sorts of very

370
00:12:12,800 --> 00:12:14,480
useful things that were uh

371
00:12:14,480 --> 00:12:16,320
critical to actually figuring out this

372
00:12:16,320 --> 00:12:18,079
process

373
00:12:18,079 --> 00:12:20,000
so once we did that and we got that we

374
00:12:20,000 --> 00:12:21,360
were able to these are some

375
00:12:21,360 --> 00:12:23,120
other artifacts that we actually found

376
00:12:23,120 --> 00:12:25,760
inside the files i figured out that the

377
00:12:25,760 --> 00:12:28,320
pd5d that was our loner vehicle had a

378
00:12:28,320 --> 00:12:30,880
battery pack hardware idea 57

379
00:12:30,880 --> 00:12:33,279
and here are the steps that actually

380
00:12:33,279 --> 00:12:34,959
identify how to change that

381
00:12:34,959 --> 00:12:38,000
battery pack id from 57 to 70. it

382
00:12:38,000 --> 00:12:39,360
specifically identifies

383
00:12:39,360 --> 00:12:43,040
three hex files that are tms 320

384
00:12:43,040 --> 00:12:46,399
hex files that are loaded via uds

385
00:12:46,399 --> 00:12:49,519
onto the bms to actually

386
00:12:49,519 --> 00:12:52,399
perform the upgrade and the first one

387
00:12:52,399 --> 00:12:53,120
was

388
00:12:53,120 --> 00:12:55,839
the updater file so basically that one's

389
00:12:55,839 --> 00:12:57,360
needed for shunt calibration which we'll

390
00:12:57,360 --> 00:12:58,880
get to in a minute

391
00:12:58,880 --> 00:13:00,320
and then the next one is actually an

392
00:13:00,320 --> 00:13:02,320
application updater file that allows you

393
00:13:02,320 --> 00:13:04,000
to update the bootloader so

394
00:13:04,000 --> 00:13:06,880
um the second file after the the shunt

395
00:13:06,880 --> 00:13:08,720
calibration is done

396
00:13:08,720 --> 00:13:12,480
is a necessary one that's used to

397
00:13:12,480 --> 00:13:14,160
allow the bootloader to be updated and

398
00:13:14,160 --> 00:13:16,000
then when the bootloader is updated

399
00:13:16,000 --> 00:13:19,040
um it also updates the battery pack id

400
00:13:19,040 --> 00:13:19,600
which

401
00:13:19,600 --> 00:13:22,480
has all the configuration values to

402
00:13:22,480 --> 00:13:23,360
allow the pack

403
00:13:23,360 --> 00:13:26,720
to operate at ludicrous speed

404
00:13:27,440 --> 00:13:30,480
so uh all the instructions

405
00:13:30,480 --> 00:13:32,480
and the files needed for the upgrade

406
00:13:32,480 --> 00:13:33,920
process are actually stored in those

407
00:13:33,920 --> 00:13:34,720
toolbox

408
00:13:34,720 --> 00:13:38,240
files both in the source code and in

409
00:13:38,240 --> 00:13:40,880
the uh various extracted files that

410
00:13:40,880 --> 00:13:43,839
we're able to get out of it

411
00:13:44,399 --> 00:13:47,760
so um what we also had

412
00:13:47,760 --> 00:13:49,680
in those firmware upgrade files were dbc

413
00:13:49,680 --> 00:13:51,680
files uh dbc files are used in canvas

414
00:13:51,680 --> 00:13:53,199
i'll illustrate that in just a little

415
00:13:53,199 --> 00:13:53,920
bit

416
00:13:53,920 --> 00:13:56,880
um odx files that actually defined how

417
00:13:56,880 --> 00:13:58,880
to calibrate the shunt

418
00:13:58,880 --> 00:14:01,199
grant security access to the module over

419
00:14:01,199 --> 00:14:02,160
uds

420
00:14:02,160 --> 00:14:04,399
and upgrade the firmware um all of that

421
00:14:04,399 --> 00:14:05,680
data was actually stored

422
00:14:05,680 --> 00:14:07,760
in these uh basic python source code so

423
00:14:07,760 --> 00:14:08,880
even if i couldn't run

424
00:14:08,880 --> 00:14:10,959
toolbox because i had access to the

425
00:14:10,959 --> 00:14:13,279
source code now it was decompiled

426
00:14:13,279 --> 00:14:15,199
i could actually figure out this process

427
00:14:15,199 --> 00:14:18,000
and use a third-party software

428
00:14:18,000 --> 00:14:21,040
to make it happen there were also some

429
00:14:21,040 --> 00:14:22,480
files that stored some interesting

430
00:14:22,480 --> 00:14:24,160
calibration data

431
00:14:24,160 --> 00:14:26,480
you can see that the the image of the

432
00:14:26,480 --> 00:14:27,360
screenshot says

433
00:14:27,360 --> 00:14:30,639
dot pixel so this is the dbc file

434
00:14:30,639 --> 00:14:34,079
for a specific version of the model s

435
00:14:34,079 --> 00:14:36,079
it's the the dbc file that once you

436
00:14:36,079 --> 00:14:37,199
actually extract it out of the pickle

437
00:14:37,199 --> 00:14:39,120
file it's just a straight dbc file you

438
00:14:39,120 --> 00:14:41,040
can import it into

439
00:14:41,040 --> 00:14:43,519
files that can actually read dbc but

440
00:14:43,519 --> 00:14:45,839
there was also a pickle file that

441
00:14:45,839 --> 00:14:48,399
stored a shunt calibration data that

442
00:14:48,399 --> 00:14:49,839
turned out to be critical

443
00:14:49,839 --> 00:14:53,120
so what that actually did is that pickle

444
00:14:53,120 --> 00:14:54,000
file

445
00:14:54,000 --> 00:14:57,040
had the serial number of every single

446
00:14:57,040 --> 00:15:00,079
ludicrous capable shunt across the

447
00:15:00,079 --> 00:15:00,720
entire

448
00:15:00,720 --> 00:15:03,760
inventory of model s vehicles

449
00:15:03,760 --> 00:15:07,199
so um that

450
00:15:07,199 --> 00:15:08,720
pickle file actually turned out to be

451
00:15:08,720 --> 00:15:10,639
critical when we uh had to figure out

452
00:15:10,639 --> 00:15:12,720
how to upgrade the specific vehicle i'll

453
00:15:12,720 --> 00:15:15,680
show that in a bit as well

454
00:15:16,240 --> 00:15:18,160
so uh just a little background on canon

455
00:15:18,160 --> 00:15:20,079
uds because it'll uh

456
00:15:20,079 --> 00:15:22,560
be critical to understand the next steps

457
00:15:22,560 --> 00:15:24,160
of the process

458
00:15:24,160 --> 00:15:26,160
so uh sitting on top of the can network

459
00:15:26,160 --> 00:15:27,839
stack there's this protocol called uds

460
00:15:27,839 --> 00:15:30,000
which is a unified diagnostic services

461
00:15:30,000 --> 00:15:32,639
this this protocol can be used to uh

462
00:15:32,639 --> 00:15:35,279
uh help technician diagnose problems you

463
00:15:35,279 --> 00:15:35,920
know reads

464
00:15:35,920 --> 00:15:37,839
uh evaluation sensors in addition it can

465
00:15:37,839 --> 00:15:39,440
be used to update firmware

466
00:15:39,440 --> 00:15:41,600
i can networks use a descriptor file

467
00:15:41,600 --> 00:15:43,199
called a dbc

468
00:15:43,199 --> 00:15:44,639
i think that means database can i've

469
00:15:44,639 --> 00:15:46,079
never actually seen a definition that

470
00:15:46,079 --> 00:15:47,199
defines what it

471
00:15:47,199 --> 00:15:50,320
actually is but then for uds for the

472
00:15:50,320 --> 00:15:54,079
diagnostics there are files called odx

473
00:15:54,079 --> 00:15:54,560
or

474
00:15:54,560 --> 00:15:56,399
gmd i think gm is general motors

475
00:15:56,399 --> 00:15:58,560
diagnostics uh odx

476
00:15:58,560 --> 00:16:00,800
not quite sure again what that one means

477
00:16:00,800 --> 00:16:01,759
but those are stored

478
00:16:01,759 --> 00:16:05,040
kind of more of a um xml style as you

479
00:16:05,040 --> 00:16:06,480
kind of see over here on the right and

480
00:16:06,480 --> 00:16:09,120
then the odx routine that you actually

481
00:16:09,120 --> 00:16:10,880
see a little snippet of here is the one

482
00:16:10,880 --> 00:16:12,720
specifically that covers

483
00:16:12,720 --> 00:16:15,279
the calibration of the shunt and you can

484
00:16:15,279 --> 00:16:16,959
see in the uh

485
00:16:16,959 --> 00:16:20,320
source code that there are values for

486
00:16:20,320 --> 00:16:23,680
the hardware id of the cgi one cau one

487
00:16:23,680 --> 00:16:24,959
so those are two values that are

488
00:16:24,959 --> 00:16:26,639
actually updated there are other values

489
00:16:26,639 --> 00:16:27,360
for

490
00:16:27,360 --> 00:16:31,040
uh crc and the actual serial number

491
00:16:31,040 --> 00:16:32,800
um and then what i actually did is i

492
00:16:32,800 --> 00:16:34,320
used a commercial tool called vehicle

493
00:16:34,320 --> 00:16:37,279
spy we had a license for that

494
00:16:37,279 --> 00:16:40,480
for work we imported the dbc files into

495
00:16:40,480 --> 00:16:41,040
that

496
00:16:41,040 --> 00:16:43,279
and then also the odx files and we're

497
00:16:43,279 --> 00:16:45,040
actually able to run everything from

498
00:16:45,040 --> 00:16:47,120
vehicle spy that's a tool made by

499
00:16:47,120 --> 00:16:49,120
interpret control systems

500
00:16:49,120 --> 00:16:50,079
and then the other thing that we

501
00:16:50,079 --> 00:16:52,320
actually found out from the

502
00:16:52,320 --> 00:16:56,240
dbc file is that the arb ids 7

503
00:16:56,240 --> 00:16:59,519
e2 7 echo 2 and 202 from the bms

504
00:16:59,519 --> 00:17:02,800
actually identify the max current

505
00:17:02,800 --> 00:17:04,559
available from that particular battery

506
00:17:04,559 --> 00:17:05,919
pack and then

507
00:17:05,919 --> 00:17:10,000
uh the next three 232 266 and 2e5 from

508
00:17:10,000 --> 00:17:12,000
the bms and the drive inverters

509
00:17:12,000 --> 00:17:13,760
uh actually identify the amount of max

510
00:17:13,760 --> 00:17:15,039
power and watts those

511
00:17:15,039 --> 00:17:17,439
values vary and they vary based on the

512
00:17:17,439 --> 00:17:19,119
state of charge of the uh

513
00:17:19,119 --> 00:17:22,079
the vehicle uh temperature of the of the

514
00:17:22,079 --> 00:17:23,839
battery pack and possibly even the uh

515
00:17:23,839 --> 00:17:25,839
the drive inverters themselves and then

516
00:17:25,839 --> 00:17:28,079
it also varies based on power recently

517
00:17:28,079 --> 00:17:30,240
used tesla uses a thing called a leaky

518
00:17:30,240 --> 00:17:31,760
bucket theory which basically means if

519
00:17:31,760 --> 00:17:32,400
you

520
00:17:32,400 --> 00:17:34,880
have used a lot of power recently it's

521
00:17:34,880 --> 00:17:36,400
going to limit the amount of power you

522
00:17:36,400 --> 00:17:36,799
can

523
00:17:36,799 --> 00:17:39,360
have until it has a chance for that kind

524
00:17:39,360 --> 00:17:40,559
of bucket to refill

525
00:17:40,559 --> 00:17:42,240
that's that's kind of the concept behind

526
00:17:42,240 --> 00:17:44,240
that so if you've been hooning it for

527
00:17:44,240 --> 00:17:45,520
quite a bit

528
00:17:45,520 --> 00:17:47,039
the car is going to back off the amount

529
00:17:47,039 --> 00:17:48,799
of max power that you can have right now

530
00:17:48,799 --> 00:17:51,600
so you can't run max power continuously

531
00:17:51,600 --> 00:17:53,679
but what a dbc file does this is a

532
00:17:53,679 --> 00:17:56,640
screenshot from

533
00:17:56,720 --> 00:17:58,960
vehicle spy it you can see all you can

534
00:17:58,960 --> 00:18:01,600
see are the can arb ids and a bunch of

535
00:18:01,600 --> 00:18:03,280
data bytes and data you'd actually have

536
00:18:03,280 --> 00:18:05,360
to reverse all engineer reverse engineer

537
00:18:05,360 --> 00:18:07,039
what each of these individual signals

538
00:18:07,039 --> 00:18:07,760
means

539
00:18:07,760 --> 00:18:10,240
but with a dbc file it looks just like

540
00:18:10,240 --> 00:18:12,960
this so now we actually have

541
00:18:12,960 --> 00:18:16,640
all of the signals identified and broken

542
00:18:16,640 --> 00:18:17,120
out

543
00:18:17,120 --> 00:18:20,240
so now we have bms power available this

544
00:18:20,240 --> 00:18:21,679
is actually a screenshot from when the

545
00:18:21,679 --> 00:18:22,720
uh

546
00:18:22,720 --> 00:18:24,400
vehicle is not engaged so it's just a

547
00:18:24,400 --> 00:18:26,320
limited amount 18 kilowatts that are

548
00:18:26,320 --> 00:18:26,960
available on

549
00:18:26,960 --> 00:18:30,080
rbid 232 once you actually put the

550
00:18:30,080 --> 00:18:31,440
vehicle into drive or

551
00:18:31,440 --> 00:18:33,919
even in park that goes way up base again

552
00:18:33,919 --> 00:18:34,559
based on the

553
00:18:34,559 --> 00:18:37,678
temperature and state of charge

554
00:18:37,919 --> 00:18:40,160
and then also we took those odx routines

555
00:18:40,160 --> 00:18:42,000
that we extracted out of toolbox

556
00:18:42,000 --> 00:18:45,280
and imported those into vehicle spy

557
00:18:45,280 --> 00:18:47,440
you could use other open source odx

558
00:18:47,440 --> 00:18:49,360
tools to do this just vehicle spy was

559
00:18:49,360 --> 00:18:51,280
easy i had access to it so

560
00:18:51,280 --> 00:18:53,679
we used it for this upgrade and you can

561
00:18:53,679 --> 00:18:54,400
see that

562
00:18:54,400 --> 00:18:56,400
first one what we actually have a

563
00:18:56,400 --> 00:18:59,200
security access so we're able to extract

564
00:18:59,200 --> 00:19:03,280
the security access routine from odx

565
00:19:03,280 --> 00:19:04,880
which actually uses a static seed and

566
00:19:04,880 --> 00:19:07,280
key that's something that was previously

567
00:19:07,280 --> 00:19:08,320
disclosed

568
00:19:08,320 --> 00:19:11,679
in another talk on tesla but then uh we

569
00:19:11,679 --> 00:19:12,559
also have the

570
00:19:12,559 --> 00:19:15,600
odx routines for shunt calibration um

571
00:19:15,600 --> 00:19:17,600
so for reading the data out of the shunt

572
00:19:17,600 --> 00:19:19,039
and then rewriting it

573
00:19:19,039 --> 00:19:20,720
all of that was in those odx retains

574
00:19:20,720 --> 00:19:22,000
we're able to just import those into

575
00:19:22,000 --> 00:19:24,160
vehicle spy and recalibrate the shine

576
00:19:24,160 --> 00:19:27,200
and you can actually see a valid value

577
00:19:27,200 --> 00:19:28,080
for a

578
00:19:28,080 --> 00:19:30,480
valid shunt in this uh in this

579
00:19:30,480 --> 00:19:31,360
screenshot

580
00:19:31,360 --> 00:19:33,520
serial number uh was and the way it

581
00:19:33,520 --> 00:19:35,120
works is that actually looks up in that

582
00:19:35,120 --> 00:19:37,120
pickle file looks up the serial number

583
00:19:37,120 --> 00:19:41,120
and then looks up what the new cau1 cgi1

584
00:19:41,120 --> 00:19:43,360
and crc value should be and then writes

585
00:19:43,360 --> 00:19:44,880
those to the shunt that's how the

586
00:19:44,880 --> 00:19:48,480
shunt calibration is actually done

587
00:19:51,520 --> 00:19:54,000
so uh it turns out that that wasn't

588
00:19:54,000 --> 00:19:55,520
everything that was needed to be done by

589
00:19:55,520 --> 00:19:57,039
the shunt and thankfully i actually

590
00:19:57,039 --> 00:19:58,880
decided to be safe and and do all of

591
00:19:58,880 --> 00:20:00,000
this research

592
00:20:00,000 --> 00:20:03,360
on a test bench first um i was able to

593
00:20:03,360 --> 00:20:05,039
actually get a shunt that was ludicrous

594
00:20:05,039 --> 00:20:06,400
capable uh

595
00:20:06,400 --> 00:20:08,559
that but that wasn't actually done in

596
00:20:08,559 --> 00:20:10,320
the research in the uh the upgrade it

597
00:20:10,320 --> 00:20:10,960
was just

598
00:20:10,960 --> 00:20:12,880
one that was separately provided as part

599
00:20:12,880 --> 00:20:14,640
of an upgrade kit that was actually able

600
00:20:14,640 --> 00:20:16,640
to find on the secondary market

601
00:20:16,640 --> 00:20:18,799
but what i i figured out is that the

602
00:20:18,799 --> 00:20:20,000
shun actually needed a hardware

603
00:20:20,000 --> 00:20:22,559
modification in addition to uh all these

604
00:20:22,559 --> 00:20:24,080
uh recalibration things that we had to

605
00:20:24,080 --> 00:20:25,280
do to it

606
00:20:25,280 --> 00:20:29,918
there was a single wire excuse me

607
00:20:30,960 --> 00:20:34,799
that connected the shunt

608
00:20:34,799 --> 00:20:37,280
to the cpld if you remember earlier i

609
00:20:37,280 --> 00:20:39,600
was talking about how the cpld

610
00:20:39,600 --> 00:20:43,120
is a backup to the bms um and i assume

611
00:20:43,120 --> 00:20:45,039
this is some type of like emergency

612
00:20:45,039 --> 00:20:45,600
signal

613
00:20:45,600 --> 00:20:48,960
that the shunt would use to tell the the

614
00:20:48,960 --> 00:20:51,200
cpld to do something based on

615
00:20:51,200 --> 00:20:53,840
whatever was going on but basically uh

616
00:20:53,840 --> 00:20:55,200
after

617
00:20:55,200 --> 00:20:57,280
i on the test bench after i did the

618
00:20:57,280 --> 00:20:59,679
firmware upgrade and upgraded a bms from

619
00:20:59,679 --> 00:21:04,240
57 to 70 if i had the shunt plugged in

620
00:21:04,240 --> 00:21:06,480
it would generate an alert an active

621
00:21:06,480 --> 00:21:07,600
alert that actually

622
00:21:07,600 --> 00:21:09,600
uh identified that there was a current

623
00:21:09,600 --> 00:21:11,200
sense error

624
00:21:11,200 --> 00:21:14,799
so what i did is uh i actually made a

625
00:21:14,799 --> 00:21:16,000
breakout board i i

626
00:21:16,000 --> 00:21:17,679
separated all the wires from the the

627
00:21:17,679 --> 00:21:19,520
shine going into the bms and then just

628
00:21:19,520 --> 00:21:22,080
ran a logic analyzer on them um started

629
00:21:22,080 --> 00:21:24,320
playing around and i figured out that

630
00:21:24,320 --> 00:21:28,400
if this one wire was disconnected

631
00:21:28,400 --> 00:21:30,880
the error actually went away so what

632
00:21:30,880 --> 00:21:32,000
that's actually meant

633
00:21:32,000 --> 00:21:35,360
is that um when the battery pack was

634
00:21:35,360 --> 00:21:36,240
opened up this

635
00:21:36,240 --> 00:21:38,159
shine actually had to have this wire

636
00:21:38,159 --> 00:21:39,360
disconnected

637
00:21:39,360 --> 00:21:41,520
uh from the shunt itself otherwise it

638
00:21:41,520 --> 00:21:42,880
would generate an error

639
00:21:42,880 --> 00:21:44,320
and it also meant that the entire

640
00:21:44,320 --> 00:21:46,080
process had to be done all at one time

641
00:21:46,080 --> 00:21:47,440
so

642
00:21:47,440 --> 00:21:50,559
once the battery pack was dropped

643
00:21:50,559 --> 00:21:53,360
and the wire removed from the shunt um

644
00:21:53,360 --> 00:21:55,280
it would generate an active alert if the

645
00:21:55,280 --> 00:21:57,039
firmware was not upgraded so it meant

646
00:21:57,039 --> 00:21:57,520
that

647
00:21:57,520 --> 00:21:59,440
we had to do the the hardware

648
00:21:59,440 --> 00:22:00,799
modification and the firmware

649
00:22:00,799 --> 00:22:02,720
modification all at the same place all

650
00:22:02,720 --> 00:22:03,360
while

651
00:22:03,360 --> 00:22:04,799
i was out there in california during

652
00:22:04,799 --> 00:22:06,559
their work and it's what led to the next

653
00:22:06,559 --> 00:22:07,679
um

654
00:22:07,679 --> 00:22:13,039
very difficult steps of the process

655
00:22:13,039 --> 00:22:16,320
so um here's the actual process itself

656
00:22:16,320 --> 00:22:17,919
so i had access to the garage and left

657
00:22:17,919 --> 00:22:20,080
in southern california

658
00:22:20,080 --> 00:22:23,280
i drove there to do the upgrade we had

659
00:22:23,280 --> 00:22:24,880
to make sure that the the vehicle had a

660
00:22:24,880 --> 00:22:26,320
very low state of charge

661
00:22:26,320 --> 00:22:28,720
for safety reasons we had to drop the

662
00:22:28,720 --> 00:22:29,919
pack had to get some

663
00:22:29,919 --> 00:22:31,440
what are called lineman's gloves which

664
00:22:31,440 --> 00:22:33,600
are involved in doing high voltage work

665
00:22:33,600 --> 00:22:35,440
i do all the hardware stuff replace the

666
00:22:35,440 --> 00:22:37,440
contactors replace the fuse modify the

667
00:22:37,440 --> 00:22:38,320
shunt

668
00:22:38,320 --> 00:22:39,600
and then reinstall the pack that was

669
00:22:39,600 --> 00:22:41,840
very tricky um i didn't want to have a

670
00:22:41,840 --> 00:22:43,360
rich rebuilds moment where i

671
00:22:43,360 --> 00:22:45,679
uh put the pack back in and had it start

672
00:22:45,679 --> 00:22:46,880
leaking and then

673
00:22:46,880 --> 00:22:48,799
i had to go and like drown on my own

674
00:22:48,799 --> 00:22:51,039
tears about how much i actually broke a

675
00:22:51,039 --> 00:22:53,039
very expensive vehicle

676
00:22:53,039 --> 00:22:56,080
so i used a bore scope um very carefully

677
00:22:56,080 --> 00:22:57,600
lowered the vehicle on the lift made

678
00:22:57,600 --> 00:22:58,480
sure that uh

679
00:22:58,480 --> 00:23:01,120
all the various connectors were lined

680
00:23:01,120 --> 00:23:02,320
back up

681
00:23:02,320 --> 00:23:04,480
and then uh put the battery pack back in

682
00:23:04,480 --> 00:23:05,360
the car and it

683
00:23:05,360 --> 00:23:08,400
connected back up um and then uh

684
00:23:08,400 --> 00:23:10,320
updated the internal dot dat added the

685
00:23:10,320 --> 00:23:12,480
lucrez command change the pack id

686
00:23:12,480 --> 00:23:15,120
and then had to redeploy the firmware

687
00:23:15,120 --> 00:23:16,880
which is basically just reinstalling the

688
00:23:16,880 --> 00:23:19,039
same firmware that's already on the car

689
00:23:19,039 --> 00:23:21,360
uh to tell it the rest of the components

690
00:23:21,360 --> 00:23:22,880
of the car that actually had a new pack

691
00:23:22,880 --> 00:23:23,360
id

692
00:23:23,360 --> 00:23:24,880
so then the next step was just drive

693
00:23:24,880 --> 00:23:26,400
away and enjoy uh

694
00:23:26,400 --> 00:23:28,400
ridic the ridiculous amount of torque

695
00:23:28,400 --> 00:23:29,760
right nope

696
00:23:29,760 --> 00:23:32,559
that's not what happened so uh we used

697
00:23:32,559 --> 00:23:34,080
known techniques

698
00:23:34,080 --> 00:23:35,919
that we've used before tried to redeploy

699
00:23:35,919 --> 00:23:37,280
the firmware

700
00:23:37,280 --> 00:23:38,960
tried to upgrade tried putting new

701
00:23:38,960 --> 00:23:41,120
software on it everything we tried for

702
00:23:41,120 --> 00:23:42,240
about a day and a half

703
00:23:42,240 --> 00:23:44,640
failed so now i was stuck with a very

704
00:23:44,640 --> 00:23:47,360
very expensive brick

705
00:23:47,360 --> 00:23:48,400
we couldn't even get it out of the

706
00:23:48,400 --> 00:23:50,080
garage because the parking brake was

707
00:23:50,080 --> 00:23:51,840
engaged had to figure out how to do that

708
00:23:51,840 --> 00:23:53,679
too

709
00:23:53,679 --> 00:23:56,480
so finally i decided to punt i i called

710
00:23:56,480 --> 00:23:57,039
um

711
00:23:57,039 --> 00:24:01,919
found a towing referral service online

712
00:24:01,919 --> 00:24:04,400
and had the vehicle towed from rancho

713
00:24:04,400 --> 00:24:05,279
cucamonga

714
00:24:05,279 --> 00:24:07,200
to my home in las vegas so i could

715
00:24:07,200 --> 00:24:08,799
continue to work on it

716
00:24:08,799 --> 00:24:11,440
um talk about a stressful weekend uh but

717
00:24:11,440 --> 00:24:12,400
it only cost uh

718
00:24:12,400 --> 00:24:15,840
360 dollars or 3.600 so not great

719
00:24:15,840 --> 00:24:18,960
not terrible you know it turns out it

720
00:24:18,960 --> 00:24:20,240
was actually worth it

721
00:24:20,240 --> 00:24:21,279
because what i did is i learned

722
00:24:21,279 --> 00:24:23,360
something cool

723
00:24:23,360 --> 00:24:26,720
the gateway uses a file

724
00:24:26,720 --> 00:24:29,840
called firmware.rc during the upgrade or

725
00:24:29,840 --> 00:24:31,840
during a redeploy

726
00:24:31,840 --> 00:24:35,039
this file is generated and basically

727
00:24:35,039 --> 00:24:36,320
what it does is it looks

728
00:24:36,320 --> 00:24:39,919
in a index file for the firmware that's

729
00:24:39,919 --> 00:24:41,360
on the vehicle

730
00:24:41,360 --> 00:24:43,279
and then it generates a number of crc

731
00:24:43,279 --> 00:24:44,480
values for

732
00:24:44,480 --> 00:24:45,919
the various components you can see in

733
00:24:45,919 --> 00:24:48,000
this image you have

734
00:24:48,000 --> 00:24:50,320
the gateway having its own crc value the

735
00:24:50,320 --> 00:24:52,559
bms having its own crc value

736
00:24:52,559 --> 00:24:54,799
and the bms when the software is changed

737
00:24:54,799 --> 00:24:56,640
the crc value changed

738
00:24:56,640 --> 00:24:59,440
and that is what prevented the vehicle

739
00:24:59,440 --> 00:25:01,120
from engaging the contractors and being

740
00:25:01,120 --> 00:25:02,400
able to drive

741
00:25:02,400 --> 00:25:05,520
so um i saw a single reference

742
00:25:05,520 --> 00:25:07,120
done i think by the 10 cent guys where

743
00:25:07,120 --> 00:25:08,720
they actually talked about firmware.rc

744
00:25:08,720 --> 00:25:09,919
when they were doing some reverse

745
00:25:09,919 --> 00:25:11,200
engineering the gateway

746
00:25:11,200 --> 00:25:13,440
and then i also saw the firmware.rc file

747
00:25:13,440 --> 00:25:16,000
mentioned in the error logs

748
00:25:16,000 --> 00:25:17,440
that i gathered when i was trying to do

749
00:25:17,440 --> 00:25:20,480
the uh the software redeploy myself

750
00:25:20,480 --> 00:25:23,840
so uh i went onto my bench unit before

751
00:25:23,840 --> 00:25:25,840
the car was actually towed out to me

752
00:25:25,840 --> 00:25:27,200
and actually requested that file from

753
00:25:27,200 --> 00:25:29,640
the gateway uh gw transfer

754
00:25:29,640 --> 00:25:31,760
firmware.rc and then looked at it and

755
00:25:31,760 --> 00:25:32,880
sure enough

756
00:25:32,880 --> 00:25:35,279
here's this file with all these various

757
00:25:35,279 --> 00:25:37,919
crc values and then a new crc value at

758
00:25:37,919 --> 00:25:39,039
the end

759
00:25:39,039 --> 00:25:41,120
so what i tried to do is i did the

760
00:25:41,120 --> 00:25:42,720
firmware upgrade on the bench

761
00:25:42,720 --> 00:25:44,880
one more time um i was always having

762
00:25:44,880 --> 00:25:46,400
errors on this because you know it was

763
00:25:46,400 --> 00:25:46,720
just

764
00:25:46,720 --> 00:25:48,000
it was the bench and i didn't really

765
00:25:48,000 --> 00:25:50,000
think more of it beyond that

766
00:25:50,000 --> 00:25:53,039
but i actually looked up the correct crc

767
00:25:53,039 --> 00:25:54,799
value from the bms it also happens that

768
00:25:54,799 --> 00:25:56,000
it's broadcasting that across

769
00:25:56,000 --> 00:25:57,279
the can bus so i could have grabbed it

770
00:25:57,279 --> 00:25:59,440
from that as well but instead i grabbed

771
00:25:59,440 --> 00:26:01,279
it from the index file

772
00:26:01,279 --> 00:26:02,960
put that value in it made sure that that

773
00:26:02,960 --> 00:26:04,320
firmware was actually what was running

774
00:26:04,320 --> 00:26:05,600
on the bms

775
00:26:05,600 --> 00:26:09,600
and then i had to recalculate the um

776
00:26:09,600 --> 00:26:12,480
the file crc at the very end so what i

777
00:26:12,480 --> 00:26:14,080
figured out with the help of uh

778
00:26:14,080 --> 00:26:17,120
some people online who are uh actually

779
00:26:17,120 --> 00:26:18,480
very grateful to

780
00:26:18,480 --> 00:26:20,640
that that's actually a jam crc so if you

781
00:26:20,640 --> 00:26:22,240
take the entire file

782
00:26:22,240 --> 00:26:26,000
um figure out the jam crc value for it

783
00:26:26,000 --> 00:26:27,520
minus what you see in this picture is

784
00:26:27,520 --> 00:26:28,880
line 12 but it's much further in the

785
00:26:28,880 --> 00:26:30,400
file because i've trimmed it down for

786
00:26:30,400 --> 00:26:31,360
clarity

787
00:26:31,360 --> 00:26:33,760
um and then add that single line file

788
00:26:33,760 --> 00:26:36,400
crt with the additional value at the end

789
00:26:36,400 --> 00:26:38,559
uh the gate will accept that crc value

790
00:26:38,559 --> 00:26:39,440
and the car was

791
00:26:39,440 --> 00:26:41,120
able to wake up so after i got the car

792
00:26:41,120 --> 00:26:43,440
back um pulled the file from the gateway

793
00:26:43,440 --> 00:26:44,880
did the recalculation

794
00:26:44,880 --> 00:26:48,080
calculated the new crc value and uh

795
00:26:48,080 --> 00:26:49,279
as soon as i pushed it back to the

796
00:26:49,279 --> 00:26:50,799
gateway and rebooted everything the car

797
00:26:50,799 --> 00:26:51,360
woke up

798
00:26:51,360 --> 00:26:54,240
so that was actually kind of the the

799
00:26:54,240 --> 00:26:55,679
cool thing that came out of the failure

800
00:26:55,679 --> 00:26:57,360
and the bricking of the vehicles i i

801
00:26:57,360 --> 00:26:58,240
figured out how this

802
00:26:58,240 --> 00:27:01,760
uh former rc file actually worked and

803
00:27:01,760 --> 00:27:02,159
then

804
00:27:02,159 --> 00:27:03,600
with that someone should be able to

805
00:27:03,600 --> 00:27:05,600
actually deploy whatever firmware across

806
00:27:05,600 --> 00:27:06,080
the vehicle

807
00:27:06,080 --> 00:27:08,720
they want deploy their custom firmware

808
00:27:08,720 --> 00:27:09,520
or

809
00:27:09,520 --> 00:27:10,960
do something else that's pretty cool

810
00:27:10,960 --> 00:27:12,480
that wasn't intentionally designed of

811
00:27:12,480 --> 00:27:12,880
course

812
00:27:12,880 --> 00:27:14,640
if you do this wrong you could cause

813
00:27:14,640 --> 00:27:15,840
some pretty bad things so i don't

814
00:27:15,840 --> 00:27:16,960
recommend actually doing this unless

815
00:27:16,960 --> 00:27:18,320
you're really careful

816
00:27:18,320 --> 00:27:21,039
but it was actually a pretty cool thing

817
00:27:21,039 --> 00:27:22,960
that we figured out

818
00:27:22,960 --> 00:27:26,399
so here's my kind of uh poc slide

819
00:27:26,399 --> 00:27:28,080
this is a canvas these are the static

820
00:27:28,080 --> 00:27:30,799
values that i talked about earlier

821
00:27:30,799 --> 00:27:34,080
before the upgrade it would have a max

822
00:27:34,080 --> 00:27:34,720
current

823
00:27:34,720 --> 00:27:38,159
of 1305. after the upgrade it was a 15

824
00:27:38,159 --> 00:27:39,600
16.

825
00:27:39,600 --> 00:27:41,520
and then uh there's there's actually a

826
00:27:41,520 --> 00:27:42,640
separate cr

827
00:27:42,640 --> 00:27:45,279
value under can id 202 that's actually

828
00:27:45,279 --> 00:27:47,200
reduced a little bit

829
00:27:47,200 --> 00:27:49,600
i don't know why if someone from tesla

830
00:27:49,600 --> 00:27:51,039
actually wants to share that with me

831
00:27:51,039 --> 00:27:52,720
and they tell me i got to keep it secret

832
00:27:52,720 --> 00:27:54,080
i'd be happy with that or if they tell

833
00:27:54,080 --> 00:27:56,240
me i can talk about it that's fine too

834
00:27:56,240 --> 00:27:57,919
but i would really like to know why the

835
00:27:57,919 --> 00:28:00,559
the actual max discharge current value

836
00:28:00,559 --> 00:28:03,679
is less than what's actually being put

837
00:28:03,679 --> 00:28:04,399
out by the

838
00:28:04,399 --> 00:28:09,520
the 72 can bus id value of 1516.

839
00:28:09,520 --> 00:28:11,039
why that discrepancy is there is there

840
00:28:11,039 --> 00:28:13,279
some type of

841
00:28:13,279 --> 00:28:15,440
attenuation or some type of derating

842
00:28:15,440 --> 00:28:16,320
that's going on

843
00:28:16,320 --> 00:28:17,600
it doesn't actually look like there's

844
00:28:17,600 --> 00:28:19,279
any d rating going on because it doesn't

845
00:28:19,279 --> 00:28:21,520
say there's a d rating active but

846
00:28:21,520 --> 00:28:23,200
it could be that that just can't id is

847
00:28:23,200 --> 00:28:25,200
not being used

848
00:28:25,200 --> 00:28:28,480
uh so beyond this uh where can we take

849
00:28:28,480 --> 00:28:30,000
this further so we've

850
00:28:30,000 --> 00:28:33,760
actually managed to ludicrous a p85d

851
00:28:33,760 --> 00:28:36,880
um it turns out the tms-320

852
00:28:36,880 --> 00:28:39,360
is actually supporting ida pro i've

853
00:28:39,360 --> 00:28:40,559
actually done a little bit of

854
00:28:40,559 --> 00:28:43,200
research on that using the firmware i've

855
00:28:43,200 --> 00:28:44,000
found some interesting

856
00:28:44,000 --> 00:28:47,039
things um

857
00:28:47,039 --> 00:28:49,360
so uh there are those arb ids already we

858
00:28:49,360 --> 00:28:51,120
talked about seven echo two and two or

859
00:28:51,120 --> 00:28:52,799
two that define the max current

860
00:28:52,799 --> 00:28:54,960
um it seems that we should be able to

861
00:28:54,960 --> 00:28:56,799
increase speed beyond ludicrous but

862
00:28:56,799 --> 00:28:58,559
i can't say that actors actually

863
00:28:58,559 --> 00:29:00,240
recommend anyone doing this unless

864
00:29:00,240 --> 00:29:02,080
they're really really careful

865
00:29:02,080 --> 00:29:04,720
because uh these limits are put in place

866
00:29:04,720 --> 00:29:05,440
for a reason

867
00:29:05,440 --> 00:29:07,919
uh but just like anything with any uh

868
00:29:07,919 --> 00:29:09,039
vehicle

869
00:29:09,039 --> 00:29:10,720
there are limits and then there are

870
00:29:10,720 --> 00:29:12,960
limits that

871
00:29:12,960 --> 00:29:16,080
are dangerous to push yourself past but

872
00:29:16,080 --> 00:29:18,720
um it's possible that someone could

873
00:29:18,720 --> 00:29:20,159
actually figure out and

874
00:29:20,159 --> 00:29:21,440
someone could work with me and actually

875
00:29:21,440 --> 00:29:22,720
figure out how to go past ludicrous

876
00:29:22,720 --> 00:29:23,679
because it seems

877
00:29:23,679 --> 00:29:25,679
reasonable that if we have access to all

878
00:29:25,679 --> 00:29:26,960
the firmware

879
00:29:26,960 --> 00:29:28,960
uh we should be able to bump up these

880
00:29:28,960 --> 00:29:30,000
these limits past

881
00:29:30,000 --> 00:29:32,159
what it would uh be able to go and then

882
00:29:32,159 --> 00:29:33,760
actually find out where the limits of

883
00:29:33,760 --> 00:29:35,440
the vehicle are

884
00:29:35,440 --> 00:29:37,440
um so uh hit me up if you'd like to

885
00:29:37,440 --> 00:29:39,039
assist uh

886
00:29:39,039 --> 00:29:40,799
my information's easily out there you

887
00:29:40,799 --> 00:29:42,640
can find me on linkedin

888
00:29:42,640 --> 00:29:43,919
the other big thing that i'm really

889
00:29:43,919 --> 00:29:45,760
curious about are what are those shunt

890
00:29:45,760 --> 00:29:46,480
parameters

891
00:29:46,480 --> 00:29:49,600
cau one cgi one

892
00:29:49,600 --> 00:29:51,919
i noticed that before the ludicrous

893
00:29:51,919 --> 00:29:53,440
upgrade they were different but after

894
00:29:53,440 --> 00:29:55,039
they were in that pickle file they were

895
00:29:55,039 --> 00:29:56,960
all the same

896
00:29:56,960 --> 00:30:00,000
and then just some references uh you

897
00:30:00,000 --> 00:30:00,320
know

898
00:30:00,320 --> 00:30:02,320
obviously spaceball movies the various

899
00:30:02,320 --> 00:30:04,080
announcements from tesla

900
00:30:04,080 --> 00:30:05,520
a definition of my current chance if

901
00:30:05,520 --> 00:30:06,720
you'd like to go out there and actually

902
00:30:06,720 --> 00:30:08,080
figure out how one of those works and

903
00:30:08,080 --> 00:30:09,919
and how they use a known resistance

904
00:30:09,919 --> 00:30:12,000
value to calculate amperage

905
00:30:12,000 --> 00:30:14,480
uh datasheet in the tms320 and then of

906
00:30:14,480 --> 00:30:16,080
course interrupting control systems the

907
00:30:16,080 --> 00:30:17,679
maker of the software that i use to

908
00:30:17,679 --> 00:30:19,760
actually do the upgrade

909
00:30:19,760 --> 00:30:23,840
thank you

910
00:30:27,440 --> 00:30:31,360
okay so going over some of the questions

911
00:30:31,360 --> 00:30:34,559
um yeah resistor tolerance isn't

912
00:30:34,559 --> 00:30:37,120
something i i checked i assume that

913
00:30:37,120 --> 00:30:39,200
since all the shunt resistors are

914
00:30:39,200 --> 00:30:40,240
actually stored

915
00:30:40,240 --> 00:30:43,279
with values in a table

916
00:30:43,279 --> 00:30:44,640
those probably have to be pretty

917
00:30:44,640 --> 00:30:46,080
accurate but it's something i can look

918
00:30:46,080 --> 00:30:48,159
into

919
00:30:48,159 --> 00:30:50,720
over there firmware updates the way

920
00:30:50,720 --> 00:30:53,279
those processes work

921
00:30:53,279 --> 00:30:54,799
that's this is a question from michael

922
00:30:54,799 --> 00:30:58,000
bowman um

923
00:30:58,880 --> 00:31:01,600
the over the firmware updates actually

924
00:31:01,600 --> 00:31:03,039
completely rewrite that

925
00:31:03,039 --> 00:31:06,640
file uh so no they wouldn't it should be

926
00:31:06,640 --> 00:31:08,559
um

927
00:31:08,559 --> 00:31:10,080
just fine what because what i've

928
00:31:10,080 --> 00:31:11,600
actually done over the air firmware

929
00:31:11,600 --> 00:31:13,279
updates on the donor vehicle

930
00:31:13,279 --> 00:31:16,559
it actually completely rewrites the file

931
00:31:16,559 --> 00:31:16,960
so

932
00:31:16,960 --> 00:31:18,640
it would probably fail if there's

933
00:31:18,640 --> 00:31:20,320
something in the config that it doesn't

934
00:31:20,320 --> 00:31:23,519
like in fact that's what i did

935
00:31:24,799 --> 00:31:27,679
so no it shouldn't cause the crc to fail

936
00:31:27,679 --> 00:31:29,120
it should just completely rewrite that

937
00:31:29,120 --> 00:31:31,039
file

938
00:31:31,039 --> 00:31:33,519
to answer i'm going to try and get these

939
00:31:33,519 --> 00:31:34,880
in order

940
00:31:34,880 --> 00:31:38,399
uh so i didn't actually try anything

941
00:31:38,399 --> 00:31:40,080
with reverse gear

942
00:31:40,080 --> 00:31:41,440
i would have to actually put it in

943
00:31:41,440 --> 00:31:42,880
reverse and actually look at current

944
00:31:42,880 --> 00:31:44,799
limits for that so no i haven't actually

945
00:31:44,799 --> 00:31:47,120
done any of that

946
00:31:47,120 --> 00:31:49,600
the model 3 long range all-wheel drive

947
00:31:49,600 --> 00:31:51,279
stuff i haven't done any model 3

948
00:31:51,279 --> 00:31:53,519
research so i couldn't ask you that

949
00:31:53,519 --> 00:31:55,600
although i have seen a lot of the um

950
00:31:55,600 --> 00:31:57,039
the research that basically said it's

951
00:31:57,039 --> 00:31:58,880
the same vehicle but the model 3 has a

952
00:31:58,880 --> 00:32:00,880
completely different way of actually

953
00:32:00,880 --> 00:32:04,080
controlling the config on it and it's

954
00:32:04,080 --> 00:32:05,519
again it's not something i've researched

955
00:32:05,519 --> 00:32:07,279
at all

956
00:32:07,279 --> 00:32:09,360
i did work with tesla on the the subject

957
00:32:09,360 --> 00:32:10,720
of this talk and they were actually very

958
00:32:10,720 --> 00:32:12,080
supportive of it all so

959
00:32:12,080 --> 00:32:14,720
all the slides uh went through them we

960
00:32:14,720 --> 00:32:17,360
had some meetings and they were

961
00:32:17,360 --> 00:32:18,720
very supportive of me actually doing

962
00:32:18,720 --> 00:32:21,120
this reverse engineering

963
00:32:21,120 --> 00:32:24,480
um matt's question does tesla apply

964
00:32:24,480 --> 00:32:26,159
specific access measures on the canvas

965
00:32:26,159 --> 00:32:27,200
to frustrate these

966
00:32:27,200 --> 00:32:30,080
type of approaches not that i've seen it

967
00:32:30,080 --> 00:32:30,640
looks like

968
00:32:30,640 --> 00:32:32,399
all of the effort right now that tesla

969
00:32:32,399 --> 00:32:33,760
is doing is actually

970
00:32:33,760 --> 00:32:36,159
on the the main mcu so they're actually

971
00:32:36,159 --> 00:32:37,519
doing been doing a lot of firmware

972
00:32:37,519 --> 00:32:39,120
updates to actually frustrate people

973
00:32:39,120 --> 00:32:40,240
getting access to the

974
00:32:40,240 --> 00:32:43,039
mcu itself the can bus still uses the

975
00:32:43,039 --> 00:32:43,919
same static

976
00:32:43,919 --> 00:32:46,240
seat and key and if you want specific

977
00:32:46,240 --> 00:32:47,679
details on that check out the car

978
00:32:47,679 --> 00:32:50,240
hacking village talk but basically um

979
00:32:50,240 --> 00:32:52,480
the the seat and key are static on every

980
00:32:52,480 --> 00:32:54,159
single tesla module that i've tested up

981
00:32:54,159 --> 00:32:56,000
to the most recent ones

982
00:32:56,000 --> 00:32:58,399
so that would be the the biggest access

983
00:32:58,399 --> 00:32:59,760
measure that they could do on that

984
00:32:59,760 --> 00:33:03,760
to frustrate this to kind of work

985
00:33:04,559 --> 00:33:06,799
right now the only ecu that i focused on

986
00:33:06,799 --> 00:33:09,360
is the bms

987
00:33:09,360 --> 00:33:12,960
so um there's not really any other ecu

988
00:33:12,960 --> 00:33:14,320
that i'm confident i can modify the

989
00:33:14,320 --> 00:33:16,320
firmware for

990
00:33:16,320 --> 00:33:18,640
uh the other recovery procedure was

991
00:33:18,640 --> 00:33:19,760
basically not to make the

992
00:33:19,760 --> 00:33:21,679
config change that actually caused the

993
00:33:21,679 --> 00:33:23,039
firmware flash

994
00:33:23,039 --> 00:33:24,960
the the firmware redeploy failure in the

995
00:33:24,960 --> 00:33:26,640
first place

996
00:33:26,640 --> 00:33:28,159
uh alan that's a great question about

997
00:33:28,159 --> 00:33:29,840
the the parking brake so

998
00:33:29,840 --> 00:33:31,679
uh if you open up the trunk of the

999
00:33:31,679 --> 00:33:33,279
vehicle i actually had some pictures of

1000
00:33:33,279 --> 00:33:34,159
this it just

1001
00:33:34,159 --> 00:33:36,240
for time i didn't really get into it too

1002
00:33:36,240 --> 00:33:38,559
much

1003
00:33:39,039 --> 00:33:40,960
the way we got the car out of the the

1004
00:33:40,960 --> 00:33:42,640
garage was

1005
00:33:42,640 --> 00:33:45,440
we looked at where the module was i had

1006
00:33:45,440 --> 00:33:46,480
access to all the um

1007
00:33:46,480 --> 00:33:48,960
the wiring diagram so we knew that the

1008
00:33:48,960 --> 00:33:50,720
module for the electronic parking brake

1009
00:33:50,720 --> 00:33:52,799
was in the rear of the vehicle

1010
00:33:52,799 --> 00:33:54,960
behind kind of the side panel in the uh

1011
00:33:54,960 --> 00:33:56,559
in the trunk so basically you pull off

1012
00:33:56,559 --> 00:33:57,760
that little

1013
00:33:57,760 --> 00:33:59,120
uh i don't know what to call it kind of

1014
00:33:59,120 --> 00:34:01,200
like a fibrous material covering the uh

1015
00:34:01,200 --> 00:34:01,840
between

1016
00:34:01,840 --> 00:34:04,000
the metal skin of the vehicle and the uh

1017
00:34:04,000 --> 00:34:04,880
the edge

1018
00:34:04,880 --> 00:34:06,399
and you have actually access to where

1019
00:34:06,399 --> 00:34:08,239
the parking brake module is

1020
00:34:08,239 --> 00:34:09,359
so what we did is we actually

1021
00:34:09,359 --> 00:34:11,199
disconnected the leads going down to the

1022
00:34:11,199 --> 00:34:13,040
actual electronic parking brakes

1023
00:34:13,040 --> 00:34:16,320
themselves and applied 12 volts to those

1024
00:34:16,320 --> 00:34:17,760
uh with the correct polarity i had

1025
00:34:17,760 --> 00:34:19,440
access to a wiring diagram so we can

1026
00:34:19,440 --> 00:34:20,000
actually see

1027
00:34:20,000 --> 00:34:23,199
the um the wire colors and that actually

1028
00:34:23,199 --> 00:34:24,639
unwound the parking brakes enough so

1029
00:34:24,639 --> 00:34:25,199
that we could

1030
00:34:25,199 --> 00:34:28,319
freely push the vehicle

1031
00:34:29,280 --> 00:34:33,040
um newer intel stuff i've only i know

1032
00:34:33,040 --> 00:34:34,320
some people that are actually hacking on

1033
00:34:34,320 --> 00:34:35,520
it but all my work has been on the

1034
00:34:35,520 --> 00:34:36,879
nvidia so i haven't done

1035
00:34:36,879 --> 00:34:38,960
any stuff on the newer intel ones but

1036
00:34:38,960 --> 00:34:40,800
the newer vehicles actually all

1037
00:34:40,800 --> 00:34:44,159
are um you know p100ds and they actually

1038
00:34:44,159 --> 00:34:46,000
have the batteries upgraded

1039
00:34:46,000 --> 00:34:47,280
automatically

1040
00:34:47,280 --> 00:34:49,440
i know some people have done some stuff

1041
00:34:49,440 --> 00:34:51,440
on the intel units

1042
00:34:51,440 --> 00:34:54,560
but they use a different emmc and it's

1043
00:34:54,560 --> 00:34:55,839
really completely

1044
00:34:55,839 --> 00:34:58,320
new hardware there was some cool stuff

1045
00:34:58,320 --> 00:34:59,680
some people did on the gateway but i

1046
00:34:59,680 --> 00:35:04,799
think tesla closed those uh avenues off

1047
00:35:06,560 --> 00:35:08,320
the only authentication i saw on the

1048
00:35:08,320 --> 00:35:11,440
firmware itself was the crc value

1049
00:35:11,440 --> 00:35:15,280
but the overall firmware is signed

1050
00:35:15,280 --> 00:35:17,599
so when the overall firmware is loaded

1051
00:35:17,599 --> 00:35:19,359
onto a vehicle there's a long signature

1052
00:35:19,359 --> 00:35:21,760
check that occurs

1053
00:35:21,760 --> 00:35:25,280
um lexier question

1054
00:35:25,280 --> 00:35:26,560
the work could be used to increase

1055
00:35:26,560 --> 00:35:28,400
mileage so

1056
00:35:28,400 --> 00:35:30,480
range on the vehicle that's that's a

1057
00:35:30,480 --> 00:35:31,599
really tricky one because a lot of

1058
00:35:31,599 --> 00:35:32,880
that's based on

1059
00:35:32,880 --> 00:35:34,880
resistance i i don't think any of the

1060
00:35:34,880 --> 00:35:36,240
work i could do to actually

1061
00:35:36,240 --> 00:35:38,000
increase that other than basically

1062
00:35:38,000 --> 00:35:39,599
preventing people from

1063
00:35:39,599 --> 00:35:44,000
stomping on their vehicles so um

1064
00:35:44,000 --> 00:35:46,240
i again i didn't try any of the uds

1065
00:35:46,240 --> 00:35:47,040
stuff because

1066
00:35:47,040 --> 00:35:49,599
the car was because the the contactors

1067
00:35:49,599 --> 00:35:51,040
were forced being closed i was having

1068
00:35:51,040 --> 00:35:54,000
trouble even maintaining enough 12 volts

1069
00:35:54,000 --> 00:35:57,920
to even um do anything at all so i

1070
00:35:57,920 --> 00:36:00,160
figured the best bet was to actually

1071
00:36:00,160 --> 00:36:03,040
physically attach to the parking brake

1072
00:36:03,040 --> 00:36:06,160
modules and unwind them

1073
00:36:06,160 --> 00:36:09,280
uh william reading i don't quite

1074
00:36:09,280 --> 00:36:10,480
understand your question if you could

1075
00:36:10,480 --> 00:36:12,000
clarify that a little bit what keys are

1076
00:36:12,000 --> 00:36:13,359
you referring to

1077
00:36:13,359 --> 00:36:15,119
um keys for all these things stored so

1078
00:36:15,119 --> 00:36:16,800
what keys do you mean by that but

1079
00:36:16,800 --> 00:36:18,160
i'm not quite sure what you mean by that

1080
00:36:18,160 --> 00:36:19,839
and i think that brings us up to date on

1081
00:36:19,839 --> 00:36:21,920
the questions

1082
00:36:21,920 --> 00:36:26,160
oh now we have a question one so uh

1083
00:36:26,160 --> 00:36:30,960
i think we've covered all of this

1084
00:36:33,599 --> 00:36:35,520
yeah i think that covers everything in

1085
00:36:35,520 --> 00:36:38,320
the main chat

1086
00:36:38,720 --> 00:36:41,680
uh oh okay so uh how do we obtain the

1087
00:36:41,680 --> 00:36:42,960
signing keys so

1088
00:36:42,960 --> 00:36:44,960
um that was actually based on some

1089
00:36:44,960 --> 00:36:46,480
research some other people did i'm not

1090
00:36:46,480 --> 00:36:48,000
going to comment any further on that

1091
00:36:48,000 --> 00:36:49,760
because uh they've asked that i

1092
00:36:49,760 --> 00:36:53,040
i keep their um their facts

1093
00:36:53,040 --> 00:36:56,079
kind of to themselves um they showed me

1094
00:36:56,079 --> 00:36:57,359
how to do it but then they asked me not

1095
00:36:57,359 --> 00:36:58,560
to comment on it but basically if you

1096
00:36:58,560 --> 00:37:00,079
think about like this

1097
00:37:00,079 --> 00:37:02,400
you have a technician's laptop that

1098
00:37:02,400 --> 00:37:05,680
laptop has these encrypted

1099
00:37:05,680 --> 00:37:07,920
python modules on it yet that laptop is

1100
00:37:07,920 --> 00:37:09,359
designed to operate entirely

1101
00:37:09,359 --> 00:37:10,880
independently

1102
00:37:10,880 --> 00:37:15,359
of being connected to the internet so

1103
00:37:15,359 --> 00:37:17,359
um whoever's logged into that laptop

1104
00:37:17,359 --> 00:37:18,880
needs to be able to run toolbox

1105
00:37:18,880 --> 00:37:20,560
completely independently so therefore it

1106
00:37:20,560 --> 00:37:22,079
would only

1107
00:37:22,079 --> 00:37:25,359
logically assume that somewhere on that

1108
00:37:25,359 --> 00:37:25,839
machine

1109
00:37:25,839 --> 00:37:27,839
where the keys were the uh the

1110
00:37:27,839 --> 00:37:29,040
encryption keys

1111
00:37:29,040 --> 00:37:30,800
for actually uh decrypting all of those

1112
00:37:30,800 --> 00:37:32,079
modules

1113
00:37:32,079 --> 00:37:37,520
and that's about all i can say on that

1114
00:37:37,520 --> 00:37:39,040
but pretty much everything uses standard

1115
00:37:39,040 --> 00:37:40,560
python library so

1116
00:37:40,560 --> 00:37:42,560
if you're a python guru it's probably

1117
00:37:42,560 --> 00:37:45,759
not going to be that difficult for you

1118
00:37:49,680 --> 00:37:52,160
let's see if we have any other questions

1119
00:37:52,160 --> 00:38:05,839
got a couple more minutes

1120
00:38:13,680 --> 00:38:19,839
so any more questions

1121
00:38:32,800 --> 00:38:35,359
all right thank you jerry for the

1122
00:38:35,359 --> 00:38:38,480
feedback i appreciate that

1123
00:38:43,040 --> 00:38:46,640
um so

1124
00:38:46,640 --> 00:38:49,839
the config itself if you can remember

1125
00:38:49,839 --> 00:38:51,599
the beginning of the talk there's um

1126
00:38:51,599 --> 00:38:54,960
a talk where we talk about the file

1127
00:38:54,960 --> 00:38:56,560
internal dot dat

1128
00:38:56,560 --> 00:39:00,400
um that internal dot dat file the

1129
00:39:00,400 --> 00:39:04,240
contents of that get sent up to tesla

1130
00:39:04,240 --> 00:39:06,400
on a regular basis so i'm assuming if

1131
00:39:06,400 --> 00:39:08,160
there's some diffing going on on their

1132
00:39:08,160 --> 00:39:08,800
end

1133
00:39:08,800 --> 00:39:11,119
uh if anyone tampers with their internal

1134
00:39:11,119 --> 00:39:15,680
debt file they would know right away

1135
00:39:15,680 --> 00:39:19,040
yes so um there's actually been quite a

1136
00:39:19,040 --> 00:39:19,520
bit of

1137
00:39:19,520 --> 00:39:21,680
reverse engineering work done to do all

1138
00:39:21,680 --> 00:39:24,160
sorts of stuff like adding the um

1139
00:39:24,160 --> 00:39:26,079
the heated rear seats adding the heated

1140
00:39:26,079 --> 00:39:27,839
steering wheel

1141
00:39:27,839 --> 00:39:30,960
adding dual chargers adding uh heated

1142
00:39:30,960 --> 00:39:32,160
washer knobs

1143
00:39:32,160 --> 00:39:33,839
washer nozzles to vehicles didn't

1144
00:39:33,839 --> 00:39:35,359
otherwise have that

1145
00:39:35,359 --> 00:39:38,079
the guy that loaned me his garage

1146
00:39:38,079 --> 00:39:40,880
actually figured out how to reverse

1147
00:39:40,880 --> 00:39:43,280
engineer the entire autopilot 2 system

1148
00:39:43,280 --> 00:39:44,800
so that he could basically

1149
00:39:44,800 --> 00:39:47,200
shoehorn autopilot 2 into an autopilot

1150
00:39:47,200 --> 00:39:48,240
one vehicle

1151
00:39:48,240 --> 00:39:50,240
for those of you aren't aware autopilot

1152
00:39:50,240 --> 00:39:52,320
2 uses eight cameras autopilot one is

1153
00:39:52,320 --> 00:39:53,040
one

1154
00:39:53,040 --> 00:39:54,800
autopilot two was created by tesla

1155
00:39:54,800 --> 00:39:56,800
autopilot one was the mobilize system so

1156
00:39:56,800 --> 00:39:58,800
it's a completely different system

1157
00:39:58,800 --> 00:40:02,240
he even had to replace the steering rack

1158
00:40:02,240 --> 00:40:02,880
replace

1159
00:40:02,880 --> 00:40:06,000
the brake modules

1160
00:40:06,000 --> 00:40:08,000
as well as add all of the cameras

1161
00:40:08,000 --> 00:40:09,760
including in the the b pillar where

1162
00:40:09,760 --> 00:40:11,280
there wasn't really a hole for it he

1163
00:40:11,280 --> 00:40:12,480
actually had to cut the

1164
00:40:12,480 --> 00:40:13,920
hole for the detailer but considering he

1165
00:40:13,920 --> 00:40:15,839
owned a body shop that was

1166
00:40:15,839 --> 00:40:17,599
relatively easy work for him he actually

1167
00:40:17,599 --> 00:40:20,160
got a functioning autopilot ii system

1168
00:40:20,160 --> 00:40:22,079
running in a vehicle that was originally

1169
00:40:22,079 --> 00:40:25,839
configured with autopilot one

1170
00:40:27,440 --> 00:40:29,359
so the other there aren't really any

1171
00:40:29,359 --> 00:40:31,920
other tesla ecu's that i've focused on

1172
00:40:31,920 --> 00:40:33,839
i'm just aware that several of the other

1173
00:40:33,839 --> 00:40:36,400
ecu's actually have the tms 320 so those

1174
00:40:36,400 --> 00:40:37,359
techniques could

1175
00:40:37,359 --> 00:40:39,839
be very similar

1176
00:40:44,880 --> 00:40:47,200
so i think that's about it again check

1177
00:40:47,200 --> 00:40:48,640
out the car hacking village talk or the

1178
00:40:48,640 --> 00:40:49,440
defcon talk

1179
00:40:49,440 --> 00:40:51,520
later this week there's no charge for

1180
00:40:51,520 --> 00:40:52,720
either of those and

1181
00:40:52,720 --> 00:40:58,160
hopefully love some other q a

