1
00:00:04,280 --> 00:00:14,710
[Music]

2
00:00:14,719 --> 00:00:16,079
hello welcome to our talk today on

3
00:00:16,079 --> 00:00:17,760
healthcare application security

4
00:00:17,760 --> 00:00:20,160
um my name is seth foggy i've been doing

5
00:00:20,160 --> 00:00:21,680
security in various forms and functions

6
00:00:21,680 --> 00:00:23,359
for about 20 years the last 10 of which

7
00:00:23,359 --> 00:00:24,960
have been with penn medicine

8
00:00:24,960 --> 00:00:27,119
really specifically focused on health

9
00:00:27,119 --> 00:00:28,800
care applications and embedded in the

10
00:00:28,800 --> 00:00:29,679
health

11
00:00:29,679 --> 00:00:31,519
security environments with the various

12
00:00:31,519 --> 00:00:33,200
healthcare organizations

13
00:00:33,200 --> 00:00:35,040
so a point of reference 16 years ago i

14
00:00:35,040 --> 00:00:36,960
happened to be presenting a black cat

15
00:00:36,960 --> 00:00:38,800
that subject was on pocket pc abuse a

16
00:00:38,800 --> 00:00:40,160
few things have changed since then i've

17
00:00:40,160 --> 00:00:41,200
got less hair

18
00:00:41,200 --> 00:00:43,760
got more kids and pocket pc really isn't

19
00:00:43,760 --> 00:00:45,039
a thing anymore

20
00:00:45,039 --> 00:00:46,960
but it's it's kind of underlying

21
00:00:46,960 --> 00:00:48,320
architecture um

22
00:00:48,320 --> 00:00:51,280
windows ce still is actually in use

23
00:00:51,280 --> 00:00:52,160
inside of

24
00:00:52,160 --> 00:00:54,239
the healthcare environments along with

25
00:00:54,239 --> 00:00:56,000
hl7 and dicom

26
00:00:56,000 --> 00:00:58,719
these particular subjects have been of

27
00:00:58,719 --> 00:00:59,920
of interest and have gotten a lot of

28
00:00:59,920 --> 00:01:01,280
tension i just want to give a nod to

29
00:01:01,280 --> 00:01:02,079
those people who have been doing

30
00:01:02,079 --> 00:01:03,359
research in that including

31
00:01:03,359 --> 00:01:04,559
one of our very own dependent medicine

32
00:01:04,559 --> 00:01:06,400
dr benoit who's been focused on dot com

33
00:01:06,400 --> 00:01:07,439
security

34
00:01:07,439 --> 00:01:09,600
but this talk is not about those things

35
00:01:09,600 --> 00:01:11,360
instead we're going to be focused on the

36
00:01:11,360 --> 00:01:12,640
application security

37
00:01:12,640 --> 00:01:14,159
and by application security i mean those

38
00:01:14,159 --> 00:01:15,680
applications that deal with

39
00:01:15,680 --> 00:01:17,680
the patient records and the patient

40
00:01:17,680 --> 00:01:18,720
workflows

41
00:01:18,720 --> 00:01:21,920
that really kind of address a a definite

42
00:01:21,920 --> 00:01:23,759
concern in the security field and that

43
00:01:23,759 --> 00:01:26,159
that these are actively being exploited

44
00:01:26,159 --> 00:01:27,119
and being

45
00:01:27,119 --> 00:01:28,799
the patient records are being sold and

46
00:01:28,799 --> 00:01:30,240
there's a real monetized value about

47
00:01:30,240 --> 00:01:30,960
these things

48
00:01:30,960 --> 00:01:33,280
so on that note these are one day

49
00:01:33,280 --> 00:01:34,880
vulnerabilities and that

50
00:01:34,880 --> 00:01:37,119
vendors are aware and certain members of

51
00:01:37,119 --> 00:01:39,040
hisac aware as we try and get awareness

52
00:01:39,040 --> 00:01:40,400
around that but there's

53
00:01:40,400 --> 00:01:41,920
no guarantee that the patches have been

54
00:01:41,920 --> 00:01:43,119
deployed if there's even patches

55
00:01:43,119 --> 00:01:43,680
available

56
00:01:43,680 --> 00:01:45,840
so as a result the vendor names and

57
00:01:45,840 --> 00:01:47,040
products are going to be censored from

58
00:01:47,040 --> 00:01:47,600
this talk

59
00:01:47,600 --> 00:01:50,399
thus the the fuzzy screen however

60
00:01:50,399 --> 00:01:51,759
certain goals we do have today and the

61
00:01:51,759 --> 00:01:52,079
first

62
00:01:52,079 --> 00:01:53,759
is to really bring awareness to

63
00:01:53,759 --> 00:01:55,439
healthcare security professionals on

64
00:01:55,439 --> 00:01:57,119
some of the methods and things they can

65
00:01:57,119 --> 00:01:58,640
look at in their own environment

66
00:01:58,640 --> 00:02:00,719
as well as bring attention to the

67
00:02:00,719 --> 00:02:02,479
vendors as to what we don't like to see

68
00:02:02,479 --> 00:02:03,600
in their software so they can

69
00:02:03,600 --> 00:02:05,119
proactively remove this kind of stuff

70
00:02:05,119 --> 00:02:06,240
from their solutions

71
00:02:06,240 --> 00:02:07,920
and finally provide some insight to the

72
00:02:07,920 --> 00:02:09,360
security community what they can be

73
00:02:09,360 --> 00:02:10,959
looking for whether they're assessors or

74
00:02:10,959 --> 00:02:11,840
auditors

75
00:02:11,840 --> 00:02:14,239
or pen testers to help really raise the

76
00:02:14,239 --> 00:02:15,280
bar when it comes to healthcare

77
00:02:15,280 --> 00:02:17,200
application security

78
00:02:17,200 --> 00:02:19,040
now we can't have a talk about security

79
00:02:19,040 --> 00:02:20,560
without alice and bob

80
00:02:20,560 --> 00:02:22,239
and we're be using alice and bob in a

81
00:02:22,239 --> 00:02:23,920
kind of a fictional overlay and official

82
00:02:23,920 --> 00:02:24,800
context

83
00:02:24,800 --> 00:02:27,280
as they as they are interfaced with the

84
00:02:27,280 --> 00:02:28,319
black hat clinic

85
00:02:28,319 --> 00:02:30,080
now conveniently the black hat clinic is

86
00:02:30,080 --> 00:02:31,840
about the same size as penn medicine so

87
00:02:31,840 --> 00:02:33,360
there's some correlation there

88
00:02:33,360 --> 00:02:35,840
in in the numbers but again this is

89
00:02:35,840 --> 00:02:37,440
going to be a fictional overlay

90
00:02:37,440 --> 00:02:40,400
with some fictional elements using bob

91
00:02:40,400 --> 00:02:41,840
and alice to really drive home

92
00:02:41,840 --> 00:02:43,440
the patient perspective because we can't

93
00:02:43,440 --> 00:02:46,080
lose fact that there is a patient behind

94
00:02:46,080 --> 00:02:48,319
all these technical issues ultimately

95
00:02:48,319 --> 00:02:49,920
and we want to make sure that patient

96
00:02:49,920 --> 00:02:50,720
care

97
00:02:50,720 --> 00:02:53,599
is one of the key priorities here so you

98
00:02:53,599 --> 00:02:53,840
know

99
00:02:53,840 --> 00:02:56,160
alice and bob been with us since the 70s

100
00:02:56,160 --> 00:02:56,879
um

101
00:02:56,879 --> 00:02:58,319
in the 80s apparently they went through

102
00:02:58,319 --> 00:02:59,840
some kind of divorce something to do

103
00:02:59,840 --> 00:03:00,400
with

104
00:03:00,400 --> 00:03:02,000
lack of communication and keeping

105
00:03:02,000 --> 00:03:04,159
secrets but they were able to get

106
00:03:04,159 --> 00:03:06,239
reconciled and have grown old with each

107
00:03:06,239 --> 00:03:07,440
other over the past

108
00:03:07,440 --> 00:03:09,440
what 40 50 years and now in their 60s or

109
00:03:09,440 --> 00:03:11,920
70s with age some come some healthcare

110
00:03:11,920 --> 00:03:12,640
issues and

111
00:03:12,640 --> 00:03:14,239
and bob is with us now at blackhat

112
00:03:14,239 --> 00:03:15,680
clinic where he's getting his pancreas

113
00:03:15,680 --> 00:03:17,040
taken care of and some

114
00:03:17,040 --> 00:03:18,959
some analysis done there he lost his

115
00:03:18,959 --> 00:03:21,200
diabetes and alice is beside him and

116
00:03:21,200 --> 00:03:22,720
helping him through this process

117
00:03:22,720 --> 00:03:24,239
so currently bob is off getting this

118
00:03:24,239 --> 00:03:26,480
procedure and alice is sitting

119
00:03:26,480 --> 00:03:28,640
inside of his room doing what most loved

120
00:03:28,640 --> 00:03:29,760
ones do at this point

121
00:03:29,760 --> 00:03:32,720
watching tv and at this point we're

122
00:03:32,720 --> 00:03:33,599
going to introduce

123
00:03:33,599 --> 00:03:35,680
mallory mallory is the bad guy in this

124
00:03:35,680 --> 00:03:38,000
in this um kind of fictional overlay

125
00:03:38,000 --> 00:03:39,920
he's the one that's a threat and he's

126
00:03:39,920 --> 00:03:41,360
kind of interjected himself

127
00:03:41,360 --> 00:03:43,440
right on alice's screen with this

128
00:03:43,440 --> 00:03:45,519
message that kind of really throws alice

129
00:03:45,519 --> 00:03:47,200
off now alice is a security person she

130
00:03:47,200 --> 00:03:48,000
understands that

131
00:03:48,000 --> 00:03:49,599
there's risks here but she also knows

132
00:03:49,599 --> 00:03:50,959
who to contact and she contacts the

133
00:03:50,959 --> 00:03:52,799
security team at black hat clinic and

134
00:03:52,799 --> 00:03:54,959
we come in and and start talking to

135
00:03:54,959 --> 00:03:55,840
alice about

136
00:03:55,840 --> 00:03:58,080
this particular system um ali's first

137
00:03:58,080 --> 00:04:00,000
question is this is a tv

138
00:04:00,000 --> 00:04:01,360
how is somebody able to take over this

139
00:04:01,360 --> 00:04:03,519
tv and we're well we want to clarify

140
00:04:03,519 --> 00:04:04,239
that and that

141
00:04:04,239 --> 00:04:06,080
analysis isn't really tv anymore this is

142
00:04:06,080 --> 00:04:07,760
a patient entertainment system

143
00:04:07,760 --> 00:04:09,439
meaning it's a system that has all kinds

144
00:04:09,439 --> 00:04:11,280
of integrations behind the scenes to

145
00:04:11,280 --> 00:04:13,439
not just entertainment but to meal

146
00:04:13,439 --> 00:04:15,519
ordering and education and nurse call

147
00:04:15,519 --> 00:04:16,478
systems

148
00:04:16,478 --> 00:04:18,160
in addition to that it does have a

149
00:04:18,160 --> 00:04:19,918
screencast feature which allows doctors

150
00:04:19,918 --> 00:04:20,399
to take

151
00:04:20,399 --> 00:04:22,560
their screen and throw it up onto the

152
00:04:22,560 --> 00:04:23,840
patient's screen or to their patient

153
00:04:23,840 --> 00:04:24,800
device

154
00:04:24,800 --> 00:04:27,680
so um it looks like mallory got into

155
00:04:27,680 --> 00:04:28,240
this now

156
00:04:28,240 --> 00:04:29,440
we're going to take a look at that

157
00:04:29,440 --> 00:04:31,840
because from a bad guy's perspective if

158
00:04:31,840 --> 00:04:33,280
mallory's in there he can obviously

159
00:04:33,280 --> 00:04:34,880
impact the patient experience but

160
00:04:34,880 --> 00:04:37,440
also potentially access patient records

161
00:04:37,440 --> 00:04:39,280
and as you're experiencing ellis

162
00:04:39,280 --> 00:04:41,680
it can raise some stress issues and also

163
00:04:41,680 --> 00:04:43,120
there's some potential issues about data

164
00:04:43,120 --> 00:04:45,040
and security privacy

165
00:04:45,040 --> 00:04:46,320
so we take a look inside of our

166
00:04:46,320 --> 00:04:48,240
application database of about 250

167
00:04:48,240 --> 00:04:49,199
applications

168
00:04:49,199 --> 00:04:51,040
and find the application listed there

169
00:04:51,040 --> 00:04:52,880
and get it installed and note that it's

170
00:04:52,880 --> 00:04:53,280
a

171
00:04:53,280 --> 00:04:55,120
it's a client server architecture with

172
00:04:55,120 --> 00:04:56,720
some web interfacing behind the scenes

173
00:04:56,720 --> 00:04:58,240
so we integrate burp into this which is

174
00:04:58,240 --> 00:05:00,000
a good proxy program

175
00:05:00,000 --> 00:05:01,360
and when we launch the program we're

176
00:05:01,360 --> 00:05:02,479
expecting to see some kind of

177
00:05:02,479 --> 00:05:03,840
authentication prompt but

178
00:05:03,840 --> 00:05:05,680
so we come right to the screen we can

179
00:05:05,680 --> 00:05:07,039
see bob's room there

180
00:05:07,039 --> 00:05:09,680
room number five no authentication so we

181
00:05:09,680 --> 00:05:10,720
want to see what happened behind the

182
00:05:10,720 --> 00:05:12,479
scenes we take a look inside our burp

183
00:05:12,479 --> 00:05:13,600
records and

184
00:05:13,600 --> 00:05:14,880
the logs there and see that there is

185
00:05:14,880 --> 00:05:17,120
indeed a web request no authentication

186
00:05:17,120 --> 00:05:18,400
this web request but

187
00:05:18,400 --> 00:05:20,479
more concerning it returns a whole lot

188
00:05:20,479 --> 00:05:21,520
of xml

189
00:05:21,520 --> 00:05:24,240
and this xml contains date of birth

190
00:05:24,240 --> 00:05:25,039
patient name

191
00:05:25,039 --> 00:05:27,520
patient number room number and it's

192
00:05:27,520 --> 00:05:28,800
important to note here that

193
00:05:28,800 --> 00:05:31,520
that this is kind of kind of setting a

194
00:05:31,520 --> 00:05:32,400
line in the sand

195
00:05:32,400 --> 00:05:34,080
and hitting a bar that we don't want to

196
00:05:34,080 --> 00:05:35,759
ever see and that

197
00:05:35,759 --> 00:05:38,000
it actually sent more than 500 records

198
00:05:38,000 --> 00:05:39,199
back and that's kind of a

199
00:05:39,199 --> 00:05:40,960
line of sand because when you get above

200
00:05:40,960 --> 00:05:42,320
500 records and

201
00:05:42,320 --> 00:05:44,320
and if this was a breach it would be

202
00:05:44,320 --> 00:05:46,160
posted to a wall of shame

203
00:05:46,160 --> 00:05:47,680
there's potential investigations

204
00:05:47,680 --> 00:05:48,960
actually there will be investigations

205
00:05:48,960 --> 00:05:50,479
with potential fines

206
00:05:50,479 --> 00:05:52,720
not to say that less than 500 records

207
00:05:52,720 --> 00:05:54,240
isn't important definitely for patient

208
00:05:54,240 --> 00:05:56,800
safety and privacy and security

209
00:05:56,800 --> 00:05:58,800
and also it may not get some attention

210
00:05:58,800 --> 00:06:00,960
but that 500 line is definitely a mark

211
00:06:00,960 --> 00:06:02,319
in the sand

212
00:06:02,319 --> 00:06:04,240
but that's not how mallory got access to

213
00:06:04,240 --> 00:06:05,600
the screen so

214
00:06:05,600 --> 00:06:08,240
we go back to the program and hit bob's

215
00:06:08,240 --> 00:06:09,840
room number and it comes with

216
00:06:09,840 --> 00:06:11,759
this prompt enter the number one two

217
00:06:11,759 --> 00:06:13,440
three four in there

218
00:06:13,440 --> 00:06:15,199
and we look behind the scenes and don't

219
00:06:15,199 --> 00:06:17,280
see anything that's being passed from

220
00:06:17,280 --> 00:06:18,400
the client to the server which is

221
00:06:18,400 --> 00:06:19,759
unexpected because we would expect to

222
00:06:19,759 --> 00:06:21,440
see that authentication occur

223
00:06:21,440 --> 00:06:23,280
so we do take a look and we see that

224
00:06:23,280 --> 00:06:24,639
there is a websocket

225
00:06:24,639 --> 00:06:26,080
upgrade request and inside that

226
00:06:26,080 --> 00:06:27,919
websocket data there is

227
00:06:27,919 --> 00:06:29,759
a reference to this four digit number

228
00:06:29,759 --> 00:06:32,800
here 9284 which we plug into the prompt

229
00:06:32,800 --> 00:06:34,479
and sure enough that allows us to know

230
00:06:34,479 --> 00:06:35,840
the screen so

231
00:06:35,840 --> 00:06:37,840
in this just basic kind of simple

232
00:06:37,840 --> 00:06:40,080
example we kind of illustrated

233
00:06:40,080 --> 00:06:42,720
that that there's some unauthenticated

234
00:06:42,720 --> 00:06:44,400
api requests that we

235
00:06:44,400 --> 00:06:46,639
are able to allow you to retrieve over

236
00:06:46,639 --> 00:06:48,479
500 records and there's no

237
00:06:48,479 --> 00:06:50,400
validation other than on the client so

238
00:06:50,400 --> 00:06:52,240
you've got a client created pin a client

239
00:06:52,240 --> 00:06:53,280
validated pin

240
00:06:53,280 --> 00:06:55,280
and really the bins only the pins only

241
00:06:55,280 --> 00:06:56,319
pass to the

242
00:06:56,319 --> 00:06:57,680
the server just for informational

243
00:06:57,680 --> 00:07:00,319
purposes so not very complex

244
00:07:00,319 --> 00:07:02,160
definitely a high issue and we got

245
00:07:02,160 --> 00:07:04,160
patient records over 500 so we got what

246
00:07:04,160 --> 00:07:04,560
we would

247
00:07:04,560 --> 00:07:07,280
consider a high risk issue in this case

248
00:07:07,280 --> 00:07:07,680
now

249
00:07:07,680 --> 00:07:09,680
we start reaching out to the vendor and

250
00:07:09,680 --> 00:07:11,280
we talk with our internal team and

251
00:07:11,280 --> 00:07:12,400
realize that we can probably just

252
00:07:12,400 --> 00:07:13,680
disable this feature and get rid of it

253
00:07:13,680 --> 00:07:14,560
all together

254
00:07:14,560 --> 00:07:15,759
so we go back to alice with these

255
00:07:15,759 --> 00:07:17,680
findings and explain to her that well we

256
00:07:17,680 --> 00:07:18,720
figured out what was going on we're

257
00:07:18,720 --> 00:07:20,000
being shutting it down

258
00:07:20,000 --> 00:07:22,000
so we're gonna get that taken care of at

259
00:07:22,000 --> 00:07:23,759
this moment the doctor walks in and

260
00:07:23,759 --> 00:07:25,039
and says well bob is done with his

261
00:07:25,039 --> 00:07:26,560
procedure and we're documenting

262
00:07:26,560 --> 00:07:27,599
everything up and

263
00:07:27,599 --> 00:07:29,680
we're getting prepared for for the the

264
00:07:29,680 --> 00:07:31,599
documentation you can take home so you

265
00:07:31,599 --> 00:07:33,039
know how to treat bob at home and what

266
00:07:33,039 --> 00:07:34,960
you can do afterwards and making sure

267
00:07:34,960 --> 00:07:36,639
that everything's everything's properly

268
00:07:36,639 --> 00:07:37,840
uh proceduralized

269
00:07:37,840 --> 00:07:40,000
away in the system we'll be back then

270
00:07:40,000 --> 00:07:41,360
very soon with some more information

271
00:07:41,360 --> 00:07:43,120
about his mri system and

272
00:07:43,120 --> 00:07:44,960
and doctor walks out and alice turns us

273
00:07:44,960 --> 00:07:46,479
and says well you know mallory's already

274
00:07:46,479 --> 00:07:47,120
threatened

275
00:07:47,120 --> 00:07:48,800
us is this something that he can take

276
00:07:48,800 --> 00:07:50,160
advantage of and

277
00:07:50,160 --> 00:07:52,160
well we we tell alice this is a system

278
00:07:52,160 --> 00:07:54,160
that kind of captures all the

279
00:07:54,160 --> 00:07:56,160
the procedural parts of what occurred

280
00:07:56,160 --> 00:07:58,000
and allows a

281
00:07:58,000 --> 00:08:00,000
physician or clinical care team to

282
00:08:00,000 --> 00:08:01,919
provide instructions and follow up

283
00:08:01,919 --> 00:08:03,440
workflow there's auditing capability

284
00:08:03,440 --> 00:08:04,720
built into it there's

285
00:08:04,720 --> 00:08:06,639
a lot of really important information

286
00:08:06,639 --> 00:08:08,080
here so yeah

287
00:08:08,080 --> 00:08:10,479
if if mallory was into the system he

288
00:08:10,479 --> 00:08:11,840
could access the information at a

289
00:08:11,840 --> 00:08:12,720
minimum

290
00:08:12,720 --> 00:08:14,560
and maybe modify which could be a

291
00:08:14,560 --> 00:08:15,599
problem because from a patient

292
00:08:15,599 --> 00:08:16,479
perspective

293
00:08:16,479 --> 00:08:18,720
that could lead to a misdiagnosis it

294
00:08:18,720 --> 00:08:20,000
could actually lead a higher cost for

295
00:08:20,000 --> 00:08:21,520
care because there's coding which ties

296
00:08:21,520 --> 00:08:22,400
to insurance

297
00:08:22,400 --> 00:08:24,560
there's also definitely the the loss of

298
00:08:24,560 --> 00:08:26,879
data and private security issues

299
00:08:26,879 --> 00:08:28,720
so we tell us we're going to take a look

300
00:08:28,720 --> 00:08:30,479
pull up our application database again

301
00:08:30,479 --> 00:08:32,080
and this time we have 300 applications

302
00:08:32,080 --> 00:08:34,159
now we're digging through we find the

303
00:08:34,159 --> 00:08:35,599
application get it installed

304
00:08:35,599 --> 00:08:38,000
and start a different approach on this

305
00:08:38,000 --> 00:08:39,200
one where we're going to take a look at

306
00:08:39,200 --> 00:08:40,000
the code

307
00:08:40,000 --> 00:08:41,919
that represents the client software and

308
00:08:41,919 --> 00:08:43,440
we like to do this because we sometimes

309
00:08:43,440 --> 00:08:44,640
learn a little bit about how the

310
00:08:44,640 --> 00:08:46,240
the program operates by just

311
00:08:46,240 --> 00:08:48,080
investigating how the

312
00:08:48,080 --> 00:08:49,680
the logic of the code works some key

313
00:08:49,680 --> 00:08:51,120
functions that might be in there that

314
00:08:51,120 --> 00:08:53,440
that indicate there's some issues in

315
00:08:53,440 --> 00:08:55,200
particular we're going to use dnspy it's

316
00:08:55,200 --> 00:08:56,720
a freely available and really great

317
00:08:56,720 --> 00:08:58,000
tool that we'll use a couple times in

318
00:08:58,000 --> 00:09:00,320
this presentation but

319
00:09:00,320 --> 00:09:02,399
we look for keywords like encryption

320
00:09:02,399 --> 00:09:04,640
backdoor seed secret username

321
00:09:04,640 --> 00:09:07,279
and it's really up to the the tester

322
00:09:07,279 --> 00:09:09,040
kind of build their own library but

323
00:09:09,040 --> 00:09:11,519
in in doing this we we end up drilling

324
00:09:11,519 --> 00:09:13,040
into the program we find a

325
00:09:13,040 --> 00:09:14,560
a point called validate user and

326
00:09:14,560 --> 00:09:16,480
password sounds interesting so we drill

327
00:09:16,480 --> 00:09:17,760
down into it

328
00:09:17,760 --> 00:09:19,279
get to the snippet of code and at this

329
00:09:19,279 --> 00:09:21,519
point we noticed two particularly

330
00:09:21,519 --> 00:09:23,120
disturbing issues one is that there's a

331
00:09:23,120 --> 00:09:24,880
backdoor reference and the other is the

332
00:09:24,880 --> 00:09:26,480
daily password function

333
00:09:26,480 --> 00:09:27,920
we drill down in the daily password

334
00:09:27,920 --> 00:09:29,920
function and at that point

335
00:09:29,920 --> 00:09:32,320
we see the snippet of code here that we

336
00:09:32,320 --> 00:09:33,920
just basically just copy out

337
00:09:33,920 --> 00:09:35,240
drop into an online site

338
00:09:35,240 --> 00:09:37,360
called.netfiddler and hit the run button

339
00:09:37,360 --> 00:09:37,839
and it

340
00:09:37,839 --> 00:09:40,880
produces a 8 character value

341
00:09:40,880 --> 00:09:42,800
this this looks like a password of sort

342
00:09:42,800 --> 00:09:44,959
so we take that username backdoor

343
00:09:44,959 --> 00:09:46,240
and we take the password that was just

344
00:09:46,240 --> 00:09:48,240
generated plug it into

345
00:09:48,240 --> 00:09:51,040
the the client interface and bang we're

346
00:09:51,040 --> 00:09:52,080
now into the system

347
00:09:52,080 --> 00:09:54,160
as a back door account with full access

348
00:09:54,160 --> 00:09:55,920
to all the data all the information in

349
00:09:55,920 --> 00:09:57,440
there for all the patients

350
00:09:57,440 --> 00:09:58,880
definitely a major issue that we

351
00:09:58,880 --> 00:10:00,800
discovered here now

352
00:10:00,800 --> 00:10:02,240
in addition to that we did find several

353
00:10:02,240 --> 00:10:04,880
other issues that are equally as bad but

354
00:10:04,880 --> 00:10:06,399
really end up with the same result and

355
00:10:06,399 --> 00:10:06,720
that

356
00:10:06,720 --> 00:10:10,160
the system's fully compromisable um and

357
00:10:10,160 --> 00:10:12,240
the complexity is not that high the

358
00:10:12,240 --> 00:10:13,440
impact is definitely pretty

359
00:10:13,440 --> 00:10:14,720
significantly high

360
00:10:14,720 --> 00:10:16,399
but what frames is a little differently

361
00:10:16,399 --> 00:10:17,600
is we got over a hundred thousand

362
00:10:17,600 --> 00:10:19,040
patient records now that are potentially

363
00:10:19,040 --> 00:10:19,839
exposed to this

364
00:10:19,839 --> 00:10:22,320
particular bug so we go to the vendor

365
00:10:22,320 --> 00:10:24,000
and the vendor recognizes the issue and

366
00:10:24,000 --> 00:10:25,839
starts remediating it and looking for

367
00:10:25,839 --> 00:10:27,440
the how to how to fix the problems for

368
00:10:27,440 --> 00:10:29,839
their clients and go back to allison

369
00:10:29,839 --> 00:10:31,920
and tell us well it looks like there

370
00:10:31,920 --> 00:10:33,440
were some bugs there we don't see any

371
00:10:33,440 --> 00:10:34,800
indication that bob was in there messing

372
00:10:34,800 --> 00:10:36,240
with anything we're double checking and

373
00:10:36,240 --> 00:10:37,600
making sure that nothing happened to his

374
00:10:37,600 --> 00:10:38,560
record

375
00:10:38,560 --> 00:10:40,720
so at that moment the nurse walks in and

376
00:10:40,720 --> 00:10:42,399
it's time for bob who's back from the

377
00:10:42,399 --> 00:10:44,000
procedure he's lying there he's got a

378
00:10:44,000 --> 00:10:45,279
little bit of pain

379
00:10:45,279 --> 00:10:47,360
nurse comes in with some drugs alice

380
00:10:47,360 --> 00:10:48,720
stops her and just takes a look at the

381
00:10:48,720 --> 00:10:49,839
drugs notes the

382
00:10:49,839 --> 00:10:52,880
the number stamp on them and allows that

383
00:10:52,880 --> 00:10:53,519
to go on

384
00:10:53,519 --> 00:10:56,000
because bob's got some allergies so

385
00:10:56,000 --> 00:10:57,600
knowing that alice turns to listen

386
00:10:57,600 --> 00:10:59,519
and says well you know he got allergies

387
00:10:59,519 --> 00:11:01,360
how do i know that that malory couldn't

388
00:11:01,360 --> 00:11:01,760
end up

389
00:11:01,760 --> 00:11:03,519
impacting like the drugs could he mess

390
00:11:03,519 --> 00:11:05,120
with something in that system

391
00:11:05,120 --> 00:11:06,959
so we tell us well you know this is part

392
00:11:06,959 --> 00:11:08,399
of a bigger system it's a drug

393
00:11:08,399 --> 00:11:09,839
dispensary system

394
00:11:09,839 --> 00:11:11,440
we've got centralized medicine

395
00:11:11,440 --> 00:11:13,519
management that allows you to distribute

396
00:11:13,519 --> 00:11:16,399
medication out to the floor where it

397
00:11:16,399 --> 00:11:18,000
needs to be closest to the patient

398
00:11:18,000 --> 00:11:19,760
but integrated into that is a lot of

399
00:11:19,760 --> 00:11:22,079
automation a lot of auditing

400
00:11:22,079 --> 00:11:24,720
diversion control which is theft control

401
00:11:24,720 --> 00:11:25,360
so

402
00:11:25,360 --> 00:11:27,360
i mean yes you're right if mallory did

403
00:11:27,360 --> 00:11:28,880
get in there he could do something you

404
00:11:28,880 --> 00:11:30,399
could access patient records

405
00:11:30,399 --> 00:11:32,240
modify the drug information maybe even

406
00:11:32,240 --> 00:11:34,560
steal drugs from a patient perspective

407
00:11:34,560 --> 00:11:36,720
that could lead to drug misoverdose or

408
00:11:36,720 --> 00:11:37,680
mis

409
00:11:37,680 --> 00:11:39,760
the wrong kind of drugs which could be

410
00:11:39,760 --> 00:11:41,440
an underdose as a result of theft in

411
00:11:41,440 --> 00:11:42,800
addition to that there's the patient's

412
00:11:42,800 --> 00:11:44,560
privacy and security issues

413
00:11:44,560 --> 00:11:46,320
so again we take a look at our

414
00:11:46,320 --> 00:11:47,760
application database and we tell alice

415
00:11:47,760 --> 00:11:48,800
that we're going to take a look

416
00:11:48,800 --> 00:11:52,000
we're up to like 400 applications now

417
00:11:52,000 --> 00:11:54,399
and we just find the application and a

418
00:11:54,399 --> 00:11:56,079
quick quick look at the server we see

419
00:11:56,079 --> 00:11:57,040
that there's this open

420
00:11:57,040 --> 00:11:58,399
share file that's part of the

421
00:11:58,399 --> 00:12:00,320
application install it's

422
00:12:00,320 --> 00:12:02,160
an authenticated user share which means

423
00:12:02,160 --> 00:12:04,000
anybody on really on the network who's

424
00:12:04,000 --> 00:12:06,160
authenticated can get into the share

425
00:12:06,160 --> 00:12:08,480
exposed in the share are two kind of

426
00:12:08,480 --> 00:12:10,079
issues one is a configuration

427
00:12:10,079 --> 00:12:11,839
file which you have a snippet here on

428
00:12:11,839 --> 00:12:13,600
the screen you can see the second is

429
00:12:13,600 --> 00:12:15,120
that you have a bunch of binaries

430
00:12:15,120 --> 00:12:17,200
now we kind of illustrated in the last

431
00:12:17,200 --> 00:12:18,160
issue that

432
00:12:18,160 --> 00:12:19,839
you if you have the binaries you can get

433
00:12:19,839 --> 00:12:21,440
a good understanding of what's in the

434
00:12:21,440 --> 00:12:22,000
program

435
00:12:22,000 --> 00:12:25,440
and how it operates so we drill

436
00:12:25,440 --> 00:12:27,839
into the program start taking apart and

437
00:12:27,839 --> 00:12:29,680
start focusing on the the sql account

438
00:12:29,680 --> 00:12:31,120
decryption first and note that there is

439
00:12:31,120 --> 00:12:32,560
actually a function there called

440
00:12:32,560 --> 00:12:34,639
the crypt sql credentials what's

441
00:12:34,639 --> 00:12:35,839
important about this is

442
00:12:35,839 --> 00:12:37,680
we've got the code and since it's in a

443
00:12:37,680 --> 00:12:39,920
dll we can really just take all the

444
00:12:39,920 --> 00:12:41,519
functionality of that dll

445
00:12:41,519 --> 00:12:44,000
import it into our own visualstudio.net

446
00:12:44,000 --> 00:12:44,959
program

447
00:12:44,959 --> 00:12:46,720
and have access to that functionality

448
00:12:46,720 --> 00:12:48,399
and really within one line of code

449
00:12:48,399 --> 00:12:50,000
decrypt that value that's in the config

450
00:12:50,000 --> 00:12:52,240
file it's open to the network so we do

451
00:12:52,240 --> 00:12:54,000
that find out it's the essay account for

452
00:12:54,000 --> 00:12:55,360
the the database

453
00:12:55,360 --> 00:12:57,200
and it has a password that appears to be

454
00:12:57,200 --> 00:12:58,720
a pretty much a

455
00:12:58,720 --> 00:13:01,680
probably as a vendor default password um

456
00:13:01,680 --> 00:13:02,000
but

457
00:13:02,000 --> 00:13:04,000
still we have that that account we go

458
00:13:04,000 --> 00:13:06,480
back to the user accounts this time

459
00:13:06,480 --> 00:13:07,839
and we start looking at what we can do

460
00:13:07,839 --> 00:13:10,160
there now in this case the decryption

461
00:13:10,160 --> 00:13:12,160
functionality is in some exe files so

462
00:13:12,160 --> 00:13:13,519
it's not just a matter of

463
00:13:13,519 --> 00:13:15,920
referencing a dll but we can still copy

464
00:13:15,920 --> 00:13:18,160
out the hard-coded aes value

465
00:13:18,160 --> 00:13:20,320
and the and the algorithms used to

466
00:13:20,320 --> 00:13:21,760
decrypt these strings

467
00:13:21,760 --> 00:13:23,760
and still paste them and piecemeal them

468
00:13:23,760 --> 00:13:25,279
together and own visual studio.net

469
00:13:25,279 --> 00:13:26,160
program

470
00:13:26,160 --> 00:13:27,839
so we do that and we discover that

471
00:13:27,839 --> 00:13:31,200
inside of these uh encrypted values is a

472
00:13:31,200 --> 00:13:32,399
local administrator account for the

473
00:13:32,399 --> 00:13:33,839
server as well as some other key

474
00:13:33,839 --> 00:13:35,920
critical accounts for the application

475
00:13:35,920 --> 00:13:37,760
so in other words we have full system

476
00:13:37,760 --> 00:13:39,199
access to the database

477
00:13:39,199 --> 00:13:42,800
full system full access to the server

478
00:13:42,800 --> 00:13:44,720
we take a look inside the database now

479
00:13:44,720 --> 00:13:46,800
and discover that there is

480
00:13:46,800 --> 00:13:49,040
a user table and there's usernames but

481
00:13:49,040 --> 00:13:50,399
there's also a bunch of passwords that

482
00:13:50,399 --> 00:13:51,839
are encrypted

483
00:13:51,839 --> 00:13:54,000
do a little testing on on those

484
00:13:54,000 --> 00:13:55,440
encrypted passwords and discover that's

485
00:13:55,440 --> 00:13:57,519
the same encryption algorithm used to be

486
00:13:57,519 --> 00:13:59,040
used to encrypt the user accounts from

487
00:13:59,040 --> 00:14:01,839
before so we'd run through and decrypt

488
00:14:01,839 --> 00:14:03,279
all those accounts as well and discover

489
00:14:03,279 --> 00:14:04,079
that there's

490
00:14:04,079 --> 00:14:05,680
a bunch of vendor accounts in there that

491
00:14:05,680 --> 00:14:07,839
have a the same default password

492
00:14:07,839 --> 00:14:10,639
um in addition to that uh we really have

493
00:14:10,639 --> 00:14:12,079
just compromised the whole entire user

494
00:14:12,079 --> 00:14:12,480
table

495
00:14:12,480 --> 00:14:15,360
database so we take that information and

496
00:14:15,360 --> 00:14:17,279
now actually log into the application

497
00:14:17,279 --> 00:14:19,040
interface and gain access to the

498
00:14:19,040 --> 00:14:22,240
the the drug distribution

499
00:14:22,240 --> 00:14:24,560
tool that's used to basically put

500
00:14:24,560 --> 00:14:26,079
medication in the cabinets control

501
00:14:26,079 --> 00:14:27,440
medication and cabinets tell us what

502
00:14:27,440 --> 00:14:29,120
medications in the cabinets

503
00:14:29,120 --> 00:14:30,880
um in addition that we can add ourselves

504
00:14:30,880 --> 00:14:32,560
as a user to the whole entire

505
00:14:32,560 --> 00:14:36,800
uh application back in at any level of

506
00:14:36,800 --> 00:14:39,120
permissions we want and to make a long

507
00:14:39,120 --> 00:14:40,000
story short

508
00:14:40,000 --> 00:14:41,680
we now have access to one of the patient

509
00:14:41,680 --> 00:14:43,360
cabinets as well or that's right the the

510
00:14:43,360 --> 00:14:44,880
drug cabinets as well

511
00:14:44,880 --> 00:14:46,720
and we decided to get some acetaminophen

512
00:14:46,720 --> 00:14:48,240
for the headache we now have

513
00:14:48,240 --> 00:14:49,600
just kidding we wouldn't actually do

514
00:14:49,600 --> 00:14:52,240
that at blackhead clinic um but still at

515
00:14:52,240 --> 00:14:52,959
the end of the day

516
00:14:52,959 --> 00:14:55,360
we have fully compromised the system in

517
00:14:55,360 --> 00:14:56,240
the server

518
00:14:56,240 --> 00:14:57,519
and again we have over a hundred

519
00:14:57,519 --> 00:14:59,279
thousand patient records in here

520
00:14:59,279 --> 00:15:00,959
the complexity really wasn't all that

521
00:15:00,959 --> 00:15:03,440
high the impact is definitely high

522
00:15:03,440 --> 00:15:05,040
so this is this is again what we would

523
00:15:05,040 --> 00:15:07,199
consider a high risk issue

524
00:15:07,199 --> 00:15:09,199
oh we immediately contact a vendor the

525
00:15:09,199 --> 00:15:10,800
vendor starts making changes right away

526
00:15:10,800 --> 00:15:12,079
and there's some simple changes that can

527
00:15:12,079 --> 00:15:13,600
really reduce the risk of this which

528
00:15:13,600 --> 00:15:15,600
were put in place

529
00:15:15,600 --> 00:15:17,920
we tell alice about this and and alice

530
00:15:17,920 --> 00:15:19,600
is thankful she understands that there's

531
00:15:19,600 --> 00:15:21,120
issues and it's good that we're

532
00:15:21,120 --> 00:15:22,800
we're on top of it and making changes

533
00:15:22,800 --> 00:15:24,160
here but

534
00:15:24,160 --> 00:15:26,320
bob has an insulin issue related to his

535
00:15:26,320 --> 00:15:27,440
diabetes and

536
00:15:27,440 --> 00:15:29,040
she asked the question you know i think

537
00:15:29,040 --> 00:15:31,040
insulin is supposed to be kept in a in a

538
00:15:31,040 --> 00:15:32,560
secure safe environment when it comes to

539
00:15:32,560 --> 00:15:33,440
temperature

540
00:15:33,440 --> 00:15:34,399
do you guys have a temperature

541
00:15:34,399 --> 00:15:35,600
monitoring system on that is that

542
00:15:35,600 --> 00:15:37,040
something malaria can mess with

543
00:15:37,040 --> 00:15:39,519
well we tell us that this is we do have

544
00:15:39,519 --> 00:15:41,519
a temporary money system it's part of a

545
00:15:41,519 --> 00:15:43,600
overall system that monitors our drugs

546
00:15:43,600 --> 00:15:44,800
our food and

547
00:15:44,800 --> 00:15:46,800
and blood in the organization and you

548
00:15:46,800 --> 00:15:48,720
know it's used in many different

549
00:15:48,720 --> 00:15:51,199
industry types but yeah if mallory were

550
00:15:51,199 --> 00:15:52,800
to get in here he could disable honoring

551
00:15:52,800 --> 00:15:54,880
he could break the monitoring um

552
00:15:54,880 --> 00:15:56,959
which could in turn have an impact on

553
00:15:56,959 --> 00:15:58,639
patient safety and that they could get

554
00:15:58,639 --> 00:16:01,839
poisoned or ineffective medication

555
00:16:01,839 --> 00:16:03,440
um but we tell us we're going to take a

556
00:16:03,440 --> 00:16:05,120
look because this is again another

557
00:16:05,120 --> 00:16:07,440
critical system of patient care so we

558
00:16:07,440 --> 00:16:09,759
pull up our application database of 425

559
00:16:09,759 --> 00:16:10,880
applications now

560
00:16:10,880 --> 00:16:13,680
and and in this case we installed the

561
00:16:13,680 --> 00:16:14,959
client but we're going to take a little

562
00:16:14,959 --> 00:16:16,240
bit of a different approach and start to

563
00:16:16,240 --> 00:16:16,959
look at the

564
00:16:16,959 --> 00:16:18,560
data traffic behind the scenes because

565
00:16:18,560 --> 00:16:20,320
this isn't just a standard web

566
00:16:20,320 --> 00:16:22,959
kind of vish bish client server

567
00:16:22,959 --> 00:16:24,079
architecture

568
00:16:24,079 --> 00:16:25,920
so we get ourselves a test account and

569
00:16:25,920 --> 00:16:27,600
plug it in and run wireshark behind the

570
00:16:27,600 --> 00:16:28,320
scenes and

571
00:16:28,320 --> 00:16:29,680
immediately start to notice that there's

572
00:16:29,680 --> 00:16:31,680
a pattern typically what we

573
00:16:31,680 --> 00:16:34,880
what you see is that there's a there's a

574
00:16:34,880 --> 00:16:38,000
integer value followed by a

575
00:16:38,000 --> 00:16:40,000
couple variables called which then

576
00:16:40,000 --> 00:16:41,279
result in a

577
00:16:41,279 --> 00:16:44,639
return data um for example we have 12 as

578
00:16:44,639 --> 00:16:46,240
an auth code we have

579
00:16:46,240 --> 00:16:49,360
34 as a change password code we have 67

580
00:16:49,360 --> 00:16:51,440
as an ad update user code

581
00:16:51,440 --> 00:16:54,079
uh 42 is a get group detail code and

582
00:16:54,079 --> 00:16:56,240
kind of build out this library here and

583
00:16:56,240 --> 00:16:58,240
we kind of just want to test this out in

584
00:16:58,240 --> 00:16:59,839
our own little program and see if we can

585
00:16:59,839 --> 00:17:01,440
just simply throw the request at the

586
00:17:01,440 --> 00:17:03,440
server using something like scappy so we

587
00:17:03,440 --> 00:17:04,959
create a scappy script which allows us

588
00:17:04,959 --> 00:17:05,520
to

589
00:17:05,520 --> 00:17:06,959
send raw data right to the server

590
00:17:06,959 --> 00:17:08,720
interface and

591
00:17:08,720 --> 00:17:10,400
put this together see if we can query

592
00:17:10,400 --> 00:17:11,760
back our own user account and sure

593
00:17:11,760 --> 00:17:12,319
enough

594
00:17:12,319 --> 00:17:15,280
we end up with our user id the user name

595
00:17:15,280 --> 00:17:16,880
and the password that we had set up

596
00:17:16,880 --> 00:17:18,959
and yes the password is alpha one not a

597
00:17:18,959 --> 00:17:20,240
very secure one for this testing

598
00:17:20,240 --> 00:17:21,520
experiment but still

599
00:17:21,520 --> 00:17:24,079
we get that password now we don't have

600
00:17:24,079 --> 00:17:25,839
to use scappy we can just simply use

601
00:17:25,839 --> 00:17:28,559
a netcat command essentially and we try

602
00:17:28,559 --> 00:17:30,000
and test out what we can get from the

603
00:17:30,000 --> 00:17:31,679
administrators group and sure enough we

604
00:17:31,679 --> 00:17:32,880
unback we end up with

605
00:17:32,880 --> 00:17:34,480
all the usernames and passwords of the

606
00:17:34,480 --> 00:17:36,400
administrators group as well

607
00:17:36,400 --> 00:17:38,080
so we take that administrator account we

608
00:17:38,080 --> 00:17:40,080
log into the server and we see that

609
00:17:40,080 --> 00:17:41,600
there's actually a t

610
00:17:41,600 --> 00:17:42,880
monitoring device that appears to be

611
00:17:42,880 --> 00:17:45,440
offline this is suspicious because it is

612
00:17:45,440 --> 00:17:46,000
associated

613
00:17:46,000 --> 00:17:47,600
to where bob's at in the in the

614
00:17:47,600 --> 00:17:49,679
organization so we get the ip address

615
00:17:49,679 --> 00:17:50,880
out of the system

616
00:17:50,880 --> 00:17:52,880
connect to this little iot monitoring

617
00:17:52,880 --> 00:17:54,240
device which collects the data for

618
00:17:54,240 --> 00:17:55,120
various different

619
00:17:55,120 --> 00:17:57,360
temperature monitors notice there's a

620
00:17:57,360 --> 00:17:59,280
simple login password

621
00:17:59,280 --> 00:18:00,880
but we take a look at the html see

622
00:18:00,880 --> 00:18:03,280
there's a reference to this w directory

623
00:18:03,280 --> 00:18:04,960
take a look at that directory it's got

624
00:18:04,960 --> 00:18:06,400
file indexing enabled

625
00:18:06,400 --> 00:18:08,160
and we can see that there's some uh

626
00:18:08,160 --> 00:18:10,320
pearl files here drill down inside those

627
00:18:10,320 --> 00:18:12,160
pearl files and sure enough there's yet

628
00:18:12,160 --> 00:18:13,679
another password of the day function

629
00:18:13,679 --> 00:18:15,520
here and a completely different program

630
00:18:15,520 --> 00:18:17,600
seems that this is a not so uncommon

631
00:18:17,600 --> 00:18:18,799
thing to find

632
00:18:18,799 --> 00:18:20,799
but in addition to that we also have a

633
00:18:20,799 --> 00:18:23,840
reference to a hard-coded

634
00:18:23,840 --> 00:18:26,400
cookie value that can be set and gives

635
00:18:26,400 --> 00:18:28,160
you administrator access to the iot

636
00:18:28,160 --> 00:18:28,720
device

637
00:18:28,720 --> 00:18:31,280
hard coded in these profiles as well we

638
00:18:31,280 --> 00:18:32,400
use our cookie editor

639
00:18:32,400 --> 00:18:34,160
just simply set that value in there

640
00:18:34,160 --> 00:18:36,480
refresh the web page to iot device

641
00:18:36,480 --> 00:18:39,120
and bang we're now in so i mean this is

642
00:18:39,120 --> 00:18:40,640
starting to feel like a capture the flag

643
00:18:40,640 --> 00:18:42,320
or some kind of sans event where

644
00:18:42,320 --> 00:18:43,840
where you're following through and some

645
00:18:43,840 --> 00:18:45,520
pretty stereotypical hacks so

646
00:18:45,520 --> 00:18:47,280
we're not so surprised to see a ping out

647
00:18:47,280 --> 00:18:49,120
test here and one of the

648
00:18:49,120 --> 00:18:50,640
more common ways that those type of

649
00:18:50,640 --> 00:18:53,280
tests can be exploited is to simply

650
00:18:53,280 --> 00:18:55,280
concatenate another command on the end

651
00:18:55,280 --> 00:18:57,280
of the the ip address which we attempt

652
00:18:57,280 --> 00:18:58,080
to do with the

653
00:18:58,080 --> 00:18:59,840
cat etsy password file which should

654
00:18:59,840 --> 00:19:01,440
return the whole password file

655
00:19:01,440 --> 00:19:03,280
of course it does and we now have

656
00:19:03,280 --> 00:19:05,200
passwords for the iot device

657
00:19:05,200 --> 00:19:07,360
take those throw those into john in

658
00:19:07,360 --> 00:19:09,039
about two seconds we end up cracking one

659
00:19:09,039 --> 00:19:10,400
of the passwords it's not the

660
00:19:10,400 --> 00:19:12,160
root account but it is one of the

661
00:19:12,160 --> 00:19:15,120
passwords to be able to allow us to ssh

662
00:19:15,120 --> 00:19:17,840
into the device once we're in the device

663
00:19:17,840 --> 00:19:19,280
we start looking around and

664
00:19:19,280 --> 00:19:21,679
there's an index.cgi file now that file

665
00:19:21,679 --> 00:19:23,200
is the the main page that

666
00:19:23,200 --> 00:19:24,640
is that is used to piecemeal all

667
00:19:24,640 --> 00:19:26,799
together the the web requests and

668
00:19:26,799 --> 00:19:28,640
we find this reference to a run su

669
00:19:28,640 --> 00:19:30,720
command now that looks suspicious

670
00:19:30,720 --> 00:19:31,360
because it

671
00:19:31,360 --> 00:19:32,480
looks like it's going to give us the

672
00:19:32,480 --> 00:19:34,799
ability to run a super user command

673
00:19:34,799 --> 00:19:37,200
on the system so we swap out one of

674
00:19:37,200 --> 00:19:38,640
those values there we kind of

675
00:19:38,640 --> 00:19:40,400
actually just add our own we're going to

676
00:19:40,400 --> 00:19:41,840
try and run a reverse shell

677
00:19:41,840 --> 00:19:43,360
and get that reverse shell pointed back

678
00:19:43,360 --> 00:19:46,080
to our server we refresh the index.cgi

679
00:19:46,080 --> 00:19:47,679
page and sure enough we are now

680
00:19:47,679 --> 00:19:49,919
have root access to the device since

681
00:19:49,919 --> 00:19:51,200
it's not working anyway we ask

682
00:19:51,200 --> 00:19:52,000
permission to reboot

683
00:19:52,000 --> 00:19:53,600
the device reboot it it comes back

684
00:19:53,600 --> 00:19:55,200
online so it looks like a more of a fast

685
00:19:55,200 --> 00:19:57,200
positive just a glitch in the system

686
00:19:57,200 --> 00:19:59,520
but at the end of the day we still have

687
00:19:59,520 --> 00:20:01,679
unauthenticated access to the server

688
00:20:01,679 --> 00:20:03,600
gain administrator account access and

689
00:20:03,600 --> 00:20:05,440
iot device as well

690
00:20:05,440 --> 00:20:06,799
we have full system control of both

691
00:20:06,799 --> 00:20:09,840
those parts of the the application

692
00:20:09,840 --> 00:20:12,080
now there's no patient records exposed

693
00:20:12,080 --> 00:20:13,600
but this is a compliance and kind of

694
00:20:13,600 --> 00:20:15,039
regulatory issue

695
00:20:15,039 --> 00:20:18,400
uh wasn't very complex the impact is

696
00:20:18,400 --> 00:20:19,520
rated a little bit less higher because

697
00:20:19,520 --> 00:20:20,960
there's no patient records but still in

698
00:20:20,960 --> 00:20:23,120
his own that we don't like to see

699
00:20:23,120 --> 00:20:25,440
oh we go back to alice and we tell us

700
00:20:25,440 --> 00:20:26,400
that we're going to be actually

701
00:20:26,400 --> 00:20:27,200
architecting this

702
00:20:27,200 --> 00:20:28,720
kind of off the network and segment this

703
00:20:28,720 --> 00:20:30,400
whole system out so

704
00:20:30,400 --> 00:20:32,640
so it's it's uh we can reduce the risk

705
00:20:32,640 --> 00:20:34,400
for this environment

706
00:20:34,400 --> 00:20:36,320
again alice thanks us for our work and

707
00:20:36,320 --> 00:20:38,320
at this point um

708
00:20:38,320 --> 00:20:39,840
uh bob mentions that he's a little

709
00:20:39,840 --> 00:20:41,760
hungry and and so alex picks up the

710
00:20:41,760 --> 00:20:42,960
nurse call system

711
00:20:42,960 --> 00:20:45,039
kind of pauses and says you know this

712
00:20:45,039 --> 00:20:46,320
nurse call system

713
00:20:46,320 --> 00:20:47,600
is it just going to ring a bell or is

714
00:20:47,600 --> 00:20:49,520
there more to it well

715
00:20:49,520 --> 00:20:50,720
just like the patient entertainment

716
00:20:50,720 --> 00:20:52,320
system these have evolved over time as

717
00:20:52,320 --> 00:20:52,960
well

718
00:20:52,960 --> 00:20:55,440
and they're kind of baked into a whole

719
00:20:55,440 --> 00:20:56,080
back end

720
00:20:56,080 --> 00:20:59,120
environment where we can basically uh

721
00:20:59,120 --> 00:21:00,880
monitor the resources that are used

722
00:21:00,880 --> 00:21:02,640
across the organization from

723
00:21:02,640 --> 00:21:06,000
from who's the most needy patient to

724
00:21:06,000 --> 00:21:08,559
to how fast as nurses can reply and and

725
00:21:08,559 --> 00:21:10,320
help us allocate where resources need to

726
00:21:10,320 --> 00:21:10,880
be put

727
00:21:10,880 --> 00:21:13,679
as well as tracking devices and nurses

728
00:21:13,679 --> 00:21:13,919
and

729
00:21:13,919 --> 00:21:16,880
in that whole entire process as well so

730
00:21:16,880 --> 00:21:17,520
from

731
00:21:17,520 --> 00:21:19,120
mallory's perspective he gained access

732
00:21:19,120 --> 00:21:20,960
he could probably get access to patient

733
00:21:20,960 --> 00:21:21,840
data

734
00:21:21,840 --> 00:21:23,840
take over the nurse call system locate

735
00:21:23,840 --> 00:21:26,320
patients if it has rtls enabled

736
00:21:26,320 --> 00:21:27,840
from a patient perspective they could

737
00:21:27,840 --> 00:21:29,360
end up getting woken up repeatedly at 2

738
00:21:29,360 --> 00:21:30,640
a.m in the morning if somebody wanted to

739
00:21:30,640 --> 00:21:32,000
be really pain and start doing nurse

740
00:21:32,000 --> 00:21:32,720
slotting

741
00:21:32,720 --> 00:21:34,799
in addition there's the the loss of data

742
00:21:34,799 --> 00:21:36,960
and privacy security issues

743
00:21:36,960 --> 00:21:38,240
so we take a look at our application

744
00:21:38,240 --> 00:21:39,919
database and if you haven't noticed this

745
00:21:39,919 --> 00:21:40,559
is growing

746
00:21:40,559 --> 00:21:43,039
which is indicative of what is happening

747
00:21:43,039 --> 00:21:44,000
in healthcare

748
00:21:44,000 --> 00:21:45,919
we're seeing more and more applications

749
00:21:45,919 --> 00:21:48,159
being thrown onto the stack to provide

750
00:21:48,159 --> 00:21:49,600
all kinds of different functionality and

751
00:21:49,600 --> 00:21:50,880
a lot of these applications have some

752
00:21:50,880 --> 00:21:51,919
really great use

753
00:21:51,919 --> 00:21:55,039
and some key patient

754
00:21:55,039 --> 00:21:59,120
care value but the stack keeps growing

755
00:21:59,120 --> 00:22:00,240
which means

756
00:22:00,240 --> 00:22:02,559
the security teams have greater risk

757
00:22:02,559 --> 00:22:04,480
exposure as well

758
00:22:04,480 --> 00:22:06,320
well in this particular application we

759
00:22:06,320 --> 00:22:07,679
get it installed and

760
00:22:07,679 --> 00:22:08,640
we're going to take a little bit of a

761
00:22:08,640 --> 00:22:09,760
different approach because it's got a

762
00:22:09,760 --> 00:22:10,880
client and a server

763
00:22:10,880 --> 00:22:12,880
but we want to see if if maybe this

764
00:22:12,880 --> 00:22:14,720
client has some logic errors that

765
00:22:14,720 --> 00:22:16,320
really allow us to completely bypass

766
00:22:16,320 --> 00:22:18,000
authentication altogether

767
00:22:18,000 --> 00:22:20,640
so we drill down inside of it and on the

768
00:22:20,640 --> 00:22:21,280
on the

769
00:22:21,280 --> 00:22:24,080
left side of the screen we have the the

770
00:22:24,080 --> 00:22:25,760
logic flow of the program you can see

771
00:22:25,760 --> 00:22:27,360
there

772
00:22:27,360 --> 00:22:29,600
it basically throws the password and the

773
00:22:29,600 --> 00:22:30,880
username off to the database and the

774
00:22:30,880 --> 00:22:33,039
database returns an integer value

775
00:22:33,039 --> 00:22:34,159
one of the values is sitting in the

776
00:22:34,159 --> 00:22:36,080
table layer on the right

777
00:22:36,080 --> 00:22:38,000
so looking inside that table we see that

778
00:22:38,000 --> 00:22:39,600
there's some some values there but in

779
00:22:39,600 --> 00:22:40,960
this case we want to

780
00:22:40,960 --> 00:22:43,360
take the take the program and debug it

781
00:22:43,360 --> 00:22:44,159
and again

782
00:22:44,159 --> 00:22:45,280
there's a couple different ways to do

783
00:22:45,280 --> 00:22:47,440
this but dot net spy makes it very easy

784
00:22:47,440 --> 00:22:48,400
so we

785
00:22:48,400 --> 00:22:50,799
we simply connect the application to it

786
00:22:50,799 --> 00:22:52,559
we hit the debug button

787
00:22:52,559 --> 00:22:54,960
on the menu and and start debugging the

788
00:22:54,960 --> 00:22:56,720
program and this gives us the ability

789
00:22:56,720 --> 00:22:59,760
to watch the program work in memory and

790
00:22:59,760 --> 00:23:01,360
see the values that are actually

791
00:23:01,360 --> 00:23:02,880
being passed around in variables inside

792
00:23:02,880 --> 00:23:04,960
the program so we drill down on

793
00:23:04,960 --> 00:23:06,799
the verify login function here and you

794
00:23:06,799 --> 00:23:08,000
can see in a little small

795
00:23:08,000 --> 00:23:09,440
type there there's an admin account the

796
00:23:09,440 --> 00:23:12,000
password asdf we let it flow through the

797
00:23:12,000 --> 00:23:12,720
program

798
00:23:12,720 --> 00:23:14,240
and at the bottom there it returns a

799
00:23:14,240 --> 00:23:16,240
result now that's not the right password

800
00:23:16,240 --> 00:23:16,640
so

801
00:23:16,640 --> 00:23:18,159
and in addition that the account appears

802
00:23:18,159 --> 00:23:19,919
to be locked out so it's returning

803
00:23:19,919 --> 00:23:21,520
that integer value that's associated

804
00:23:21,520 --> 00:23:23,039
with the uh

805
00:23:23,039 --> 00:23:25,200
the account being locked out but we can

806
00:23:25,200 --> 00:23:26,880
change that value so we can just go in

807
00:23:26,880 --> 00:23:28,240
there and switch it to a zero

808
00:23:28,240 --> 00:23:29,679
now we could do this every time we

809
00:23:29,679 --> 00:23:31,440
restart the program

810
00:23:31,440 --> 00:23:33,760
but since we have the capability we can

811
00:23:33,760 --> 00:23:36,080
also just simply modify the binary and

812
00:23:36,080 --> 00:23:38,159
make this value hard-coded so it always

813
00:23:38,159 --> 00:23:39,600
returns a zero no matter

814
00:23:39,600 --> 00:23:41,360
what password you then enter it's going

815
00:23:41,360 --> 00:23:43,600
to be valid so we do that we save off

816
00:23:43,600 --> 00:23:44,720
the new binary

817
00:23:44,720 --> 00:23:47,679
and we relaunch the application use the

818
00:23:47,679 --> 00:23:49,360
username admin with with whatever

819
00:23:49,360 --> 00:23:51,679
password and bang we're now into the

820
00:23:51,679 --> 00:23:54,880
the the system as an administrator which

821
00:23:54,880 --> 00:23:56,080
gives us the ability to

822
00:23:56,080 --> 00:23:58,320
control all the user accounts and

823
00:23:58,320 --> 00:23:59,840
basically make nurse calls

824
00:23:59,840 --> 00:24:02,840
to any room any floor anybody we want to

825
00:24:02,840 --> 00:24:05,600
um now that's definitely a big problem

826
00:24:05,600 --> 00:24:08,159
but we also you know note that there's a

827
00:24:08,159 --> 00:24:09,840
server side component to this

828
00:24:09,840 --> 00:24:10,799
we just want to take a look at the

829
00:24:10,799 --> 00:24:12,720
server side we're going to drill in a

830
00:24:12,720 --> 00:24:14,480
little bit and see what kind of

831
00:24:14,480 --> 00:24:17,360
um references using that same example we

832
00:24:17,360 --> 00:24:18,159
used in

833
00:24:18,159 --> 00:24:19,679
in the clinical documentation system to

834
00:24:19,679 --> 00:24:20,880
see if there's anything important in

835
00:24:20,880 --> 00:24:21,440
there

836
00:24:21,440 --> 00:24:23,520
and we do that here's the user interface

837
00:24:23,520 --> 00:24:24,880
and while we're looking around we happen

838
00:24:24,880 --> 00:24:25,360
to find

839
00:24:25,360 --> 00:24:27,360
a reverse still back door account except

840
00:24:27,360 --> 00:24:29,120
not just one back door three back doors

841
00:24:29,120 --> 00:24:30,320
in this case

842
00:24:30,320 --> 00:24:31,679
and this is a little bit interesting

843
00:24:31,679 --> 00:24:32,960
because we go back to the vendor and the

844
00:24:32,960 --> 00:24:33,760
vendor's

845
00:24:33,760 --> 00:24:35,520
basically kind of stuck because this was

846
00:24:35,520 --> 00:24:37,440
part of a merger and acquisition

847
00:24:37,440 --> 00:24:39,120
where they've kind of acquired some of

848
00:24:39,120 --> 00:24:40,880
this code and don't really have the

849
00:24:40,880 --> 00:24:41,840
capability

850
00:24:41,840 --> 00:24:43,200
at least to really fix it they're going

851
00:24:43,200 --> 00:24:45,360
to focus on a new version so

852
00:24:45,360 --> 00:24:46,640
you know we've got the capability to

853
00:24:46,640 --> 00:24:48,480
patch it so instead of

854
00:24:48,480 --> 00:24:50,480
asking a vendor for a patch we've looked

855
00:24:50,480 --> 00:24:51,840
into patching it ourselves and just

856
00:24:51,840 --> 00:24:53,200
simply changing those passwords to

857
00:24:53,200 --> 00:24:54,960
something a lot more complex and not so

858
00:24:54,960 --> 00:24:55,760
standard

859
00:24:55,760 --> 00:24:57,600
and we do that reboot the program it

860
00:24:57,600 --> 00:24:58,960
comes back up and now we

861
00:24:58,960 --> 00:25:00,799
we've passed our own issue regarding

862
00:25:00,799 --> 00:25:02,400
this back door but

863
00:25:02,400 --> 00:25:03,760
we have access to the administrator

864
00:25:03,760 --> 00:25:05,520
interface of the nurse call system

865
00:25:05,520 --> 00:25:06,880
all the patient data that's flowing in

866
00:25:06,880 --> 00:25:10,640
between and the adt feeds are called

867
00:25:10,640 --> 00:25:12,159
at the end of the day the system's fully

868
00:25:12,159 --> 00:25:14,799
compromised um wasn't really that

869
00:25:14,799 --> 00:25:15,520
complex

870
00:25:15,520 --> 00:25:17,360
and the impact's definitely high we're

871
00:25:17,360 --> 00:25:18,640
over our 500 count

872
00:25:18,640 --> 00:25:21,039
and this 500 counts a little bit of a of

873
00:25:21,039 --> 00:25:23,360
a fuzzy number because it's a per day

874
00:25:23,360 --> 00:25:24,960
account maybe a per week account and

875
00:25:24,960 --> 00:25:26,799
that number is going to grow over time

876
00:25:26,799 --> 00:25:28,880
as more patients come through the system

877
00:25:28,880 --> 00:25:30,880
if somebody was actively monitoring or

878
00:25:30,880 --> 00:25:32,400
it's going to be a snapshot in time if

879
00:25:32,400 --> 00:25:33,919
somebody just found that

880
00:25:33,919 --> 00:25:37,120
found this issue at a point of uh

881
00:25:37,120 --> 00:25:40,960
of exploitation so we go back to alice

882
00:25:40,960 --> 00:25:42,000
and tell her that you know we found

883
00:25:42,000 --> 00:25:43,840
some issues we're working to get those

884
00:25:43,840 --> 00:25:45,760
remediated segmentation

885
00:25:45,760 --> 00:25:48,480
and patching um alice replies thank you

886
00:25:48,480 --> 00:25:49,200
and

887
00:25:49,200 --> 00:25:52,000
and at this point the doctor comes back

888
00:25:52,000 --> 00:25:53,039
and says well we took a look at the

889
00:25:53,039 --> 00:25:54,640
radiology images and

890
00:25:54,640 --> 00:25:57,679
and everything looks fine um you know

891
00:25:57,679 --> 00:25:59,039
we just need to make sure we keep an eye

892
00:25:59,039 --> 00:26:00,480
on bob but you know we're going to wrap

893
00:26:00,480 --> 00:26:01,600
this up and you'll be able to get out of

894
00:26:01,600 --> 00:26:02,640
here soon

895
00:26:02,640 --> 00:26:04,159
so alice turns us and says what's this

896
00:26:04,159 --> 00:26:06,240
radiology system is that another system

897
00:26:06,240 --> 00:26:07,679
that potentially could put

898
00:26:07,679 --> 00:26:09,679
you know bob at risk if mallory got in

899
00:26:09,679 --> 00:26:10,880
so we tell

900
00:26:10,880 --> 00:26:12,559
what this is a clinically immune system

901
00:26:12,559 --> 00:26:14,320
there's numerous ones out there

902
00:26:14,320 --> 00:26:16,640
this one you know they kind of all serve

903
00:26:16,640 --> 00:26:18,480
the same general purpose and that

904
00:26:18,480 --> 00:26:20,880
they allow you to look at the images and

905
00:26:20,880 --> 00:26:22,480
analyze them they have baked in tools

906
00:26:22,480 --> 00:26:22,840
for

907
00:26:22,840 --> 00:26:25,679
analyzing uh track the images over time

908
00:26:25,679 --> 00:26:27,679
allow your document against it

909
00:26:27,679 --> 00:26:29,360
and share that with other other

910
00:26:29,360 --> 00:26:30,960
radiologists um

911
00:26:30,960 --> 00:26:33,279
and doctors and you know if a bad guy

912
00:26:33,279 --> 00:26:34,960
got in yes they could access it they

913
00:26:34,960 --> 00:26:36,559
could modify they could delete

914
00:26:36,559 --> 00:26:37,919
obviously that's going to have potential

915
00:26:37,919 --> 00:26:40,080
to impact patient care from from bob's

916
00:26:40,080 --> 00:26:41,440
perspective

917
00:26:41,440 --> 00:26:42,640
in addition to the loss of data and

918
00:26:42,640 --> 00:26:44,960
privacy security so

919
00:26:44,960 --> 00:26:47,600
we pull up our application database of

920
00:26:47,600 --> 00:26:49,679
500 applications now

921
00:26:49,679 --> 00:26:51,360
find the application get it installed

922
00:26:51,360 --> 00:26:52,960
and this time it's not a

923
00:26:52,960 --> 00:26:54,559
net program but we want to make sure

924
00:26:54,559 --> 00:26:56,320
that that we still take a look and we

925
00:26:56,320 --> 00:26:57,200
use ida

926
00:26:57,200 --> 00:26:58,640
which kind of allows us to do much of

927
00:26:58,640 --> 00:27:00,400
the same thing we can

928
00:27:00,400 --> 00:27:02,159
search through the program fight find

929
00:27:02,159 --> 00:27:03,679
key elements that are important in there

930
00:27:03,679 --> 00:27:06,080
and we do that and find a reference to

931
00:27:06,080 --> 00:27:09,279
um password match hash and and password

932
00:27:09,279 --> 00:27:10,880
is valid and we start to look at those

933
00:27:10,880 --> 00:27:11,760
and

934
00:27:11,760 --> 00:27:13,520
in addition we can still also patch the

935
00:27:13,520 --> 00:27:15,440
program now it's a little bit different

936
00:27:15,440 --> 00:27:16,640
inside of a c

937
00:27:16,640 --> 00:27:19,279
plus plus or c compiled program but at

938
00:27:19,279 --> 00:27:20,399
the end of the day there's

939
00:27:20,399 --> 00:27:22,159
there's op codes that operate behind the

940
00:27:22,159 --> 00:27:24,320
scene and these op codes

941
00:27:24,320 --> 00:27:26,320
uh work with the we're kind of the same

942
00:27:26,320 --> 00:27:27,520
way and

943
00:27:27,520 --> 00:27:29,120
in the current program there's a jump

944
00:27:29,120 --> 00:27:31,039
not zero which basically says that the

945
00:27:31,039 --> 00:27:32,720
password doesn't match go this way

946
00:27:32,720 --> 00:27:35,120
if it matches go this way we can change

947
00:27:35,120 --> 00:27:37,039
that to a jump zero which means if the

948
00:27:37,039 --> 00:27:38,240
password matches

949
00:27:38,240 --> 00:27:41,200
fail if the password doesn't match open

950
00:27:41,200 --> 00:27:41,600
so

951
00:27:41,600 --> 00:27:43,279
the difference between the two op codes

952
00:27:43,279 --> 00:27:45,679
is really just a 75 versus a 74

953
00:27:45,679 --> 00:27:48,480
which we can find in in the binary we

954
00:27:48,480 --> 00:27:49,679
swap that out

955
00:27:49,679 --> 00:27:52,320
save it off have a new binary and we

956
00:27:52,320 --> 00:27:53,840
have the old and the new noun that you

957
00:27:53,840 --> 00:27:55,200
can see on the screen here from a jump

958
00:27:55,200 --> 00:27:57,120
not zero converter to jump zero

959
00:27:57,120 --> 00:27:58,960
and as a result when we go back to the

960
00:27:58,960 --> 00:28:00,799
program plug in this user account of

961
00:28:00,799 --> 00:28:02,559
support which is provided to us

962
00:28:02,559 --> 00:28:04,559
as a result of some other issues with

963
00:28:04,559 --> 00:28:05,840
the system

964
00:28:05,840 --> 00:28:07,679
we plug in a password of a and sure

965
00:28:07,679 --> 00:28:09,200
enough we are now logged in and are able

966
00:28:09,200 --> 00:28:11,120
to see bob's records but

967
00:28:11,120 --> 00:28:13,279
we don't really know what this means at

968
00:28:13,279 --> 00:28:14,840
the end of the day though it still is

969
00:28:14,840 --> 00:28:17,679
exposed in addition to that because we

970
00:28:17,679 --> 00:28:18,960
patched that particular part of the

971
00:28:18,960 --> 00:28:20,480
program it also allows us into the

972
00:28:20,480 --> 00:28:21,760
administrator tool

973
00:28:21,760 --> 00:28:24,000
with the same support account um and we

974
00:28:24,000 --> 00:28:25,440
can access to all the users

975
00:28:25,440 --> 00:28:26,880
and change their passwords change the

976
00:28:26,880 --> 00:28:28,559
configuration of the system

977
00:28:28,559 --> 00:28:31,120
and so on so the system's fully

978
00:28:31,120 --> 00:28:32,080
compromised

979
00:28:32,080 --> 00:28:35,120
um the con the the complexity it may be

980
00:28:35,120 --> 00:28:35,919
a medium but

981
00:28:35,919 --> 00:28:38,080
i mean it wasn't super complicated the

982
00:28:38,080 --> 00:28:40,080
impact is definitely high

983
00:28:40,080 --> 00:28:41,440
and in this case we've got over a

984
00:28:41,440 --> 00:28:42,960
thousand records just because the

985
00:28:42,960 --> 00:28:43,520
program

986
00:28:43,520 --> 00:28:46,399
is a little bit more of a niche program

987
00:28:46,399 --> 00:28:46,799
so

988
00:28:46,799 --> 00:28:48,640
we go back to alice we we also work with

989
00:28:48,640 --> 00:28:50,399
the vendor before that and the vendor's

990
00:28:50,399 --> 00:28:52,399
going to get us a patch for this and and

991
00:28:52,399 --> 00:28:54,640
remediate the issue go back to alice and

992
00:28:54,640 --> 00:28:55,840
explain what happened

993
00:28:55,840 --> 00:28:57,200
and i always thanks us for all the work

994
00:28:57,200 --> 00:28:58,640
that we've been doing related to this

995
00:28:58,640 --> 00:28:59,840
application security

996
00:28:59,840 --> 00:29:01,520
you know raising the bar for for this

997
00:29:01,520 --> 00:29:02,960
getting some vendors to pay attention to

998
00:29:02,960 --> 00:29:04,399
the software issues

999
00:29:04,399 --> 00:29:07,039
um but she asked other additional

1000
00:29:07,039 --> 00:29:08,000
questions

1001
00:29:08,000 --> 00:29:09,679
and says well you know you guys are

1002
00:29:09,679 --> 00:29:11,679
working with these applications

1003
00:29:11,679 --> 00:29:12,880
they all sit in the data center

1004
00:29:12,880 --> 00:29:14,399
somewhere and i know you're working on

1005
00:29:14,399 --> 00:29:16,559
the confidentiality and integrity of

1006
00:29:16,559 --> 00:29:16,960
that

1007
00:29:16,960 --> 00:29:18,799
that cia triad but what about the

1008
00:29:18,799 --> 00:29:20,159
availability um

1009
00:29:20,159 --> 00:29:21,840
what if that data center goes offline

1010
00:29:21,840 --> 00:29:23,440
how are patients able to

1011
00:29:23,440 --> 00:29:25,440
to maintain their care and and how the

1012
00:29:25,440 --> 00:29:27,919
the patient

1013
00:29:27,919 --> 00:29:29,360
care teams able to know what the

1014
00:29:29,360 --> 00:29:31,360
patient's even there for we tell

1015
00:29:31,360 --> 00:29:32,880
alice well this is part of an emr

1016
00:29:32,880 --> 00:29:34,640
downtime device solution

1017
00:29:34,640 --> 00:29:36,080
because you're right you know you have a

1018
00:29:36,080 --> 00:29:38,000
have an organization all the

1019
00:29:38,000 --> 00:29:40,320
databases and the software runs in the

1020
00:29:40,320 --> 00:29:41,440
data center but

1021
00:29:41,440 --> 00:29:43,360
there are some times where where the

1022
00:29:43,360 --> 00:29:45,120
network goes down or a piece of hardware

1023
00:29:45,120 --> 00:29:46,640
goes down and kind of isolates

1024
00:29:46,640 --> 00:29:48,240
a piece of the the network whether it's

1025
00:29:48,240 --> 00:29:50,480
an outpatient facility a small hospital

1026
00:29:50,480 --> 00:29:51,919
or clinic or

1027
00:29:51,919 --> 00:29:54,720
even a floor in the hospital but we have

1028
00:29:54,720 --> 00:29:56,080
these things called downtime devices

1029
00:29:56,080 --> 00:29:56,399
that

1030
00:29:56,399 --> 00:29:57,440
we distribute throughout the

1031
00:29:57,440 --> 00:29:58,720
organization and they have enough

1032
00:29:58,720 --> 00:30:00,159
information on them for

1033
00:30:00,159 --> 00:30:02,559
the patients in those in those areas

1034
00:30:02,559 --> 00:30:03,600
that allow

1035
00:30:03,600 --> 00:30:06,000
the care teams to maybe know allergies

1036
00:30:06,000 --> 00:30:08,080
what the patient's there for um

1037
00:30:08,080 --> 00:30:09,360
key critical things that they need to

1038
00:30:09,360 --> 00:30:11,200
understand about what the patients

1039
00:30:11,200 --> 00:30:13,279
you know that they need to know in order

1040
00:30:13,279 --> 00:30:15,440
to treat the patient

1041
00:30:15,440 --> 00:30:17,360
um i mean these are sensitive obviously

1042
00:30:17,360 --> 00:30:18,960
so we encrypt the hard drives they have

1043
00:30:18,960 --> 00:30:20,480
username and passwords in them

1044
00:30:20,480 --> 00:30:22,080
you know for hipaa compliance and the

1045
00:30:22,080 --> 00:30:23,760
patient reports are encrypted

1046
00:30:23,760 --> 00:30:25,600
the user everything i mean the user

1047
00:30:25,600 --> 00:30:27,120
table is encrypted

1048
00:30:27,120 --> 00:30:29,600
um so alice just kind of stops and

1049
00:30:29,600 --> 00:30:31,440
pauses for a second and says well

1050
00:30:31,440 --> 00:30:32,880
you've kind of illustrated that

1051
00:30:32,880 --> 00:30:34,640
client-side security is really hard to

1052
00:30:34,640 --> 00:30:35,120
do and

1053
00:30:35,120 --> 00:30:37,200
these all kind of sound like they're

1054
00:30:37,200 --> 00:30:38,159
self-embodied

1055
00:30:38,159 --> 00:30:40,240
clients that have all the data in them

1056
00:30:40,240 --> 00:30:41,440
we pause

1057
00:30:41,440 --> 00:30:43,200
you're right alice so you know we're

1058
00:30:43,200 --> 00:30:45,200
going to take a look at one of these and

1059
00:30:45,200 --> 00:30:47,520
we pull up one of the downtime devices

1060
00:30:47,520 --> 00:30:49,679
and find a login prompt and

1061
00:30:49,679 --> 00:30:50,960
start taking a look at the code behind

1062
00:30:50,960 --> 00:30:53,279
the scenes using the same process before

1063
00:30:53,279 --> 00:30:56,000
with dan spy find a part of the program

1064
00:30:56,000 --> 00:30:56,799
there that

1065
00:30:56,799 --> 00:30:58,799
that the password is basically doing a

1066
00:30:58,799 --> 00:31:00,320
matching validation

1067
00:31:00,320 --> 00:31:03,919
and from there we we strip that out and

1068
00:31:03,919 --> 00:31:04,480
we

1069
00:31:04,480 --> 00:31:07,519
resave the binaries and we basically set

1070
00:31:07,519 --> 00:31:09,039
the program up so all it checks to see

1071
00:31:09,039 --> 00:31:10,240
if the user is locked

1072
00:31:10,240 --> 00:31:12,000
if the user isn't locked we find that we

1073
00:31:12,000 --> 00:31:13,360
can gain access to the patient records

1074
00:31:13,360 --> 00:31:15,679
inside the downtime device

1075
00:31:15,679 --> 00:31:17,919
now that's a small subset of patients

1076
00:31:17,919 --> 00:31:20,080
but while we're in there we also happen

1077
00:31:20,080 --> 00:31:20,720
to really

1078
00:31:20,720 --> 00:31:21,919
we notice that there's a load and

1079
00:31:21,919 --> 00:31:24,240
decrypt user table function in there

1080
00:31:24,240 --> 00:31:26,399
so again you know if it's pulling those

1081
00:31:26,399 --> 00:31:28,080
values into memory then we can probably

1082
00:31:28,080 --> 00:31:28,640
take

1083
00:31:28,640 --> 00:31:30,320
the opportunity to write those values

1084
00:31:30,320 --> 00:31:32,640
out and we patched the program again to

1085
00:31:32,640 --> 00:31:34,799
to just simply write the user table out

1086
00:31:34,799 --> 00:31:36,960
using just some more c sharp code and

1087
00:31:36,960 --> 00:31:39,279
plug it in there save the binary off uh

1088
00:31:39,279 --> 00:31:40,080
relaunch the

1089
00:31:40,080 --> 00:31:42,640
the computer and program and and it

1090
00:31:42,640 --> 00:31:44,720
gives us a copy of the user table

1091
00:31:44,720 --> 00:31:46,559
now the user hash kind of looks like

1092
00:31:46,559 --> 00:31:47,919
this um

1093
00:31:47,919 --> 00:31:50,399
it's got pieces of information in it but

1094
00:31:50,399 --> 00:31:52,080
again we have access to the

1095
00:31:52,080 --> 00:31:54,240
code that we can create our own

1096
00:31:54,240 --> 00:31:55,120
basically

1097
00:31:55,120 --> 00:31:57,600
uh representation of of how the hash is

1098
00:31:57,600 --> 00:31:58,640
created when it's entered from a

1099
00:31:58,640 --> 00:32:00,240
username and password perspective

1100
00:32:00,240 --> 00:32:01,840
the hash has to be created so it can be

1101
00:32:01,840 --> 00:32:03,519
bounced against the

1102
00:32:03,519 --> 00:32:05,919
the table there so we recreate our own

1103
00:32:05,919 --> 00:32:07,120
hash creation process

1104
00:32:07,120 --> 00:32:09,279
and effectively allow us to do a hash

1105
00:32:09,279 --> 00:32:10,559
cracking um

1106
00:32:10,559 --> 00:32:13,600
type of program that we can do offline

1107
00:32:13,600 --> 00:32:15,600
it's important to note that that inside

1108
00:32:15,600 --> 00:32:17,279
the user table is a copy of

1109
00:32:17,279 --> 00:32:20,320
every single emr user's username and

1110
00:32:20,320 --> 00:32:20,880
hash

1111
00:32:20,880 --> 00:32:22,559
which is pretty significant number of

1112
00:32:22,559 --> 00:32:24,480
the the employees at

1113
00:32:24,480 --> 00:32:27,679
blackhat clinic but we we do that we run

1114
00:32:27,679 --> 00:32:28,000
it through

1115
00:32:28,000 --> 00:32:30,000
and sure enough um after a few minutes

1116
00:32:30,000 --> 00:32:31,600
we we discover that we can

1117
00:32:31,600 --> 00:32:33,360
actually crack some of the passwords

1118
00:32:33,360 --> 00:32:35,120
it's slow but it's offline

1119
00:32:35,120 --> 00:32:37,039
and and it's just a matter of time and

1120
00:32:37,039 --> 00:32:38,880
resources

1121
00:32:38,880 --> 00:32:41,120
and while doing that we kind of took a

1122
00:32:41,120 --> 00:32:42,000
step back and realized

1123
00:32:42,000 --> 00:32:44,080
that we had another issue here in that

1124
00:32:44,080 --> 00:32:45,919
the the authentication prompt

1125
00:32:45,919 --> 00:32:47,679
sat in generic user space but it

1126
00:32:47,679 --> 00:32:49,120
interfaced with a

1127
00:32:49,120 --> 00:32:51,120
service account running in system space

1128
00:32:51,120 --> 00:32:52,880
which was using dlls

1129
00:32:52,880 --> 00:32:55,200
that were in what were effective that's

1130
00:32:55,200 --> 00:32:57,679
effectively generic user space and has

1131
00:32:57,679 --> 00:33:00,399
the ability to um be modified and

1132
00:33:00,399 --> 00:33:00,960
written to

1133
00:33:00,960 --> 00:33:03,919
by authenticated users again meaning we

1134
00:33:03,919 --> 00:33:05,840
have a traditional dll

1135
00:33:05,840 --> 00:33:08,240
injection or overwrite issue that has

1136
00:33:08,240 --> 00:33:09,200
been allowing us to do

1137
00:33:09,200 --> 00:33:11,279
some of these um rewrites and and

1138
00:33:11,279 --> 00:33:12,480
patches in the first place

1139
00:33:12,480 --> 00:33:14,880
inside of the application on the

1140
00:33:14,880 --> 00:33:16,000
downtime devices

1141
00:33:16,000 --> 00:33:18,000
so we take advantage of this and there's

1142
00:33:18,000 --> 00:33:20,080
many ways to do this but we simply just

1143
00:33:20,080 --> 00:33:22,000
patch it again and point it to a batch

1144
00:33:22,000 --> 00:33:23,360
file which gives us the capability to

1145
00:33:23,360 --> 00:33:24,000
run any

1146
00:33:24,000 --> 00:33:26,399
particular script or program we want we

1147
00:33:26,399 --> 00:33:27,840
just want to get admin on the box so we

1148
00:33:27,840 --> 00:33:29,679
just put in the command to add admin

1149
00:33:29,679 --> 00:33:31,760
and we now have admin to the box and

1150
00:33:31,760 --> 00:33:33,919
once we have admin on the box we

1151
00:33:33,919 --> 00:33:36,399
we can now configure the downtime device

1152
00:33:36,399 --> 00:33:38,480
and we do it the first thing we do is we

1153
00:33:38,480 --> 00:33:40,080
configure the downtime device to

1154
00:33:40,080 --> 00:33:42,159
basically be a downtime device for the

1155
00:33:42,159 --> 00:33:43,519
entire organization

1156
00:33:43,519 --> 00:33:45,919
which means all the patients in all the

1157
00:33:45,919 --> 00:33:46,559
other

1158
00:33:46,559 --> 00:33:48,159
pieces and parts of the organization all

1159
00:33:48,159 --> 00:33:50,080
their records now also come to just this

1160
00:33:50,080 --> 00:33:51,840
one downtime device so we get all those

1161
00:33:51,840 --> 00:33:52,880
records

1162
00:33:52,880 --> 00:33:54,559
um and while doing that we we kind of

1163
00:33:54,559 --> 00:33:56,080
discovered there's a key that

1164
00:33:56,080 --> 00:33:57,679
that syncs the downtime device to the

1165
00:33:57,679 --> 00:33:59,200
downtime server

1166
00:33:59,200 --> 00:34:00,880
it's the same key for all the downtime

1167
00:34:00,880 --> 00:34:02,799
devices so it's a per

1168
00:34:02,799 --> 00:34:06,159
organization key now the key is securely

1169
00:34:06,159 --> 00:34:07,039
stored

1170
00:34:07,039 --> 00:34:10,239
on the downtime device but because we

1171
00:34:10,239 --> 00:34:11,679
have access to the code whereas

1172
00:34:11,679 --> 00:34:13,280
administrator now in the box we can

1173
00:34:13,280 --> 00:34:15,119
again just simply find the location in

1174
00:34:15,119 --> 00:34:16,320
the program

1175
00:34:16,320 --> 00:34:18,879
export that key out and now we we've got

1176
00:34:18,879 --> 00:34:21,199
a process by which we can export a key

1177
00:34:21,199 --> 00:34:22,879
out for the downtime devices for an

1178
00:34:22,879 --> 00:34:24,079
organization

1179
00:34:24,079 --> 00:34:26,159
so we go down the street to defcon

1180
00:34:26,159 --> 00:34:27,760
clinic and we see if this is actually

1181
00:34:27,760 --> 00:34:29,040
going to be something that that can be

1182
00:34:29,040 --> 00:34:30,159
exploited

1183
00:34:30,159 --> 00:34:32,480
we take our patch dll throw it into a

1184
00:34:32,480 --> 00:34:34,320
downtown device in defcon clinic

1185
00:34:34,320 --> 00:34:36,480
reboot the device and it produces the

1186
00:34:36,480 --> 00:34:37,520
key for us

1187
00:34:37,520 --> 00:34:40,159
we've got the key we have our our device

1188
00:34:40,159 --> 00:34:40,879
here we

1189
00:34:40,879 --> 00:34:42,320
we've managed to get it on the network

1190
00:34:42,320 --> 00:34:44,000
which is is is the first

1191
00:34:44,000 --> 00:34:47,119
um a hurdle to overcome not necessarily

1192
00:34:47,119 --> 00:34:49,599
a really difficult hurdle so

1193
00:34:49,599 --> 00:34:52,800
we get that um our own downtime device

1194
00:34:52,800 --> 00:34:55,440
uh like a fake one a spoofed one onto

1195
00:34:55,440 --> 00:34:56,399
the network

1196
00:34:56,399 --> 00:34:58,640
insert the key into that downtime device

1197
00:34:58,640 --> 00:35:00,480
by just modifying memory

1198
00:35:00,480 --> 00:35:02,240
patching it um a couple different ways

1199
00:35:02,240 --> 00:35:04,079
we could do that but the downtime device

1200
00:35:04,079 --> 00:35:04,800
now has

1201
00:35:04,800 --> 00:35:07,119
that def con clinics key points to

1202
00:35:07,119 --> 00:35:08,240
defcon clinics

1203
00:35:08,240 --> 00:35:10,480
downtime server and now we have all the

1204
00:35:10,480 --> 00:35:11,440
records

1205
00:35:11,440 --> 00:35:15,119
for the um for the defcon clinic as well

1206
00:35:15,119 --> 00:35:17,040
in addition to that we already know how

1207
00:35:17,040 --> 00:35:18,720
to bypass authentication so we don't

1208
00:35:18,720 --> 00:35:20,000
need to worry about actually logging

1209
00:35:20,000 --> 00:35:21,760
into it because we can just do that

1210
00:35:21,760 --> 00:35:25,040
and the the uh part of the

1211
00:35:25,040 --> 00:35:26,800
information downloaded is also the user

1212
00:35:26,800 --> 00:35:28,880
table for defcon clinic so we can now

1213
00:35:28,880 --> 00:35:30,320
access the user accounts and the

1214
00:35:30,320 --> 00:35:32,000
passwords there

1215
00:35:32,000 --> 00:35:35,280
and um as a result we've basically

1216
00:35:35,280 --> 00:35:37,440
expanded our scope of uh

1217
00:35:37,440 --> 00:35:39,599
of compromise to other organizations

1218
00:35:39,599 --> 00:35:41,599
with this particular issue

1219
00:35:41,599 --> 00:35:44,160
so again the complexity is a little bit

1220
00:35:44,160 --> 00:35:44,960
more challenging

1221
00:35:44,960 --> 00:35:48,000
putting everything in on the table the

1222
00:35:48,000 --> 00:35:50,640
the impact is definitely high 13 000

1223
00:35:50,640 --> 00:35:51,920
records exposed

1224
00:35:51,920 --> 00:35:54,880
um in our scenario here and again this

1225
00:35:54,880 --> 00:35:56,240
is a kind of like a per

1226
00:35:56,240 --> 00:35:59,280
day or per patient while they're in the

1227
00:35:59,280 --> 00:36:00,240
organization

1228
00:36:00,240 --> 00:36:02,560
rolling number so that number kind of

1229
00:36:02,560 --> 00:36:04,240
could grow over time or just be a simple

1230
00:36:04,240 --> 00:36:05,200
snapshot

1231
00:36:05,200 --> 00:36:08,000
as as the uh if somebody were to exploit

1232
00:36:08,000 --> 00:36:09,599
this bug

1233
00:36:09,599 --> 00:36:11,839
um so i mean kind of wrapping it all up

1234
00:36:11,839 --> 00:36:13,200
if you look at what we did

1235
00:36:13,200 --> 00:36:14,640
we started with something simple

1236
00:36:14,640 --> 00:36:16,240
relatively speaking with burp

1237
00:36:16,240 --> 00:36:18,000
looking behind the scenes noticing that

1238
00:36:18,000 --> 00:36:19,760
there's just client-side code with

1239
00:36:19,760 --> 00:36:21,440
client-side validation

1240
00:36:21,440 --> 00:36:22,880
then we start looking at some of the

1241
00:36:22,880 --> 00:36:24,160
code and see if there's anything

1242
00:36:24,160 --> 00:36:25,520
suspicious in there that's hidden away

1243
00:36:25,520 --> 00:36:26,720
inside the code

1244
00:36:26,720 --> 00:36:29,119
that could be exploited we we also

1245
00:36:29,119 --> 00:36:30,480
looked at some of the tcp

1246
00:36:30,480 --> 00:36:32,960
protocols and the the activity on the

1247
00:36:32,960 --> 00:36:34,000
network

1248
00:36:34,000 --> 00:36:36,320
looked at how we could modify some of

1249
00:36:36,320 --> 00:36:37,680
the logic behind the scenes

1250
00:36:37,680 --> 00:36:40,320
for net programs and then also use that

1251
00:36:40,320 --> 00:36:42,640
for our c plus plus program

1252
00:36:42,640 --> 00:36:44,240
and patch the program and kind of

1253
00:36:44,240 --> 00:36:46,079
wrapped it all up in a final example

1254
00:36:46,079 --> 00:36:47,359
with the downtime devices

1255
00:36:47,359 --> 00:36:48,720
where he took that kind of to the next

1256
00:36:48,720 --> 00:36:50,960
level and just showed how far

1257
00:36:50,960 --> 00:36:52,480
it you can get if one of these

1258
00:36:52,480 --> 00:36:54,160
particular web

1259
00:36:54,160 --> 00:36:57,280
sorry application security issues

1260
00:36:57,280 --> 00:36:59,119
so the reason why this is again

1261
00:36:59,119 --> 00:37:00,320
important is that

1262
00:37:00,320 --> 00:37:02,560
you know just in our example here with

1263
00:37:02,560 --> 00:37:04,400
the sizing of black hat clinic and

1264
00:37:04,400 --> 00:37:06,160
defcon clinic thrown in there

1265
00:37:06,160 --> 00:37:08,079
we effectively were able to illustrate a

1266
00:37:08,079 --> 00:37:10,960
compromise of about 225 000 records

1267
00:37:10,960 --> 00:37:12,960
now these records can go for depending

1268
00:37:12,960 --> 00:37:15,040
who you talk to a thousand dollars or

1269
00:37:15,040 --> 00:37:16,960
ten dollars a record either way we're

1270
00:37:16,960 --> 00:37:19,200
talking about you know 2.25 million or

1271
00:37:19,200 --> 00:37:20,560
225 million

1272
00:37:20,560 --> 00:37:23,359
for just one ecosystem or one one

1273
00:37:23,359 --> 00:37:24,240
environment

1274
00:37:24,240 --> 00:37:26,079
now if we extrapolate that out and you

1275
00:37:26,079 --> 00:37:28,720
look at all the hospitals inside of the

1276
00:37:28,720 --> 00:37:31,359
the country or even broader i mean i

1277
00:37:31,359 --> 00:37:32,480
could have probably named this the

1278
00:37:32,480 --> 00:37:33,839
trillion dollar healthcare application

1279
00:37:33,839 --> 00:37:35,119
security issue because we're talking

1280
00:37:35,119 --> 00:37:36,400
about some pretty significant numbers

1281
00:37:36,400 --> 00:37:37,599
when you go that big

1282
00:37:37,599 --> 00:37:41,280
of real data records that are

1283
00:37:41,280 --> 00:37:43,280
have a real value out there in the real

1284
00:37:43,280 --> 00:37:45,040
world

1285
00:37:45,040 --> 00:37:48,160
um so some pointers that we do go

1286
00:37:48,160 --> 00:37:49,200
through when we look at these

1287
00:37:49,200 --> 00:37:50,320
applications

1288
00:37:50,320 --> 00:37:52,079
is we just kind of spend two to four

1289
00:37:52,079 --> 00:37:53,520
hours looking for what i'll call red

1290
00:37:53,520 --> 00:37:54,880
flag indicators

1291
00:37:54,880 --> 00:37:56,800
default credentials playing plain text

1292
00:37:56,800 --> 00:37:57,920
credentials um

1293
00:37:57,920 --> 00:37:59,920
it's a badly designed apis with no

1294
00:37:59,920 --> 00:38:01,040
credentials or

1295
00:38:01,040 --> 00:38:04,079
or secrets that are embedded in code

1296
00:38:04,079 --> 00:38:05,839
really kind of help us understand where

1297
00:38:05,839 --> 00:38:07,359
we may need to pay more attention and

1298
00:38:07,359 --> 00:38:08,640
dig in deeper

1299
00:38:08,640 --> 00:38:11,040
in addition to that we have found many

1300
00:38:11,040 --> 00:38:11,920
cases where

1301
00:38:11,920 --> 00:38:13,520
where the credentials themselves are

1302
00:38:13,520 --> 00:38:15,040
stored in a database

1303
00:38:15,040 --> 00:38:17,440
but you know they we are told that their

1304
00:38:17,440 --> 00:38:18,960
credentials are secure but when we

1305
00:38:18,960 --> 00:38:20,160
actually reverse

1306
00:38:20,160 --> 00:38:22,400
out the the way those credentials are

1307
00:38:22,400 --> 00:38:23,760
secured they

1308
00:38:23,760 --> 00:38:25,119
number one aren't really that well

1309
00:38:25,119 --> 00:38:27,200
secured number two often have really bad

1310
00:38:27,200 --> 00:38:29,040
passwords and password management baked

1311
00:38:29,040 --> 00:38:30,640
into the program

1312
00:38:30,640 --> 00:38:32,720
so these are all the different the

1313
00:38:32,720 --> 00:38:33,680
different ways that we

1314
00:38:33,680 --> 00:38:35,520
we look inside the organization and we

1315
00:38:35,520 --> 00:38:37,200
do this doing what i'll call light pen

1316
00:38:37,200 --> 00:38:38,800
test against new products

1317
00:38:38,800 --> 00:38:40,400
um in addition to that because we want

1318
00:38:40,400 --> 00:38:41,839
the team to continue to grow their

1319
00:38:41,839 --> 00:38:42,480
skills and

1320
00:38:42,480 --> 00:38:44,880
and have have an understanding of these

1321
00:38:44,880 --> 00:38:46,720
the the the security issues that are

1322
00:38:46,720 --> 00:38:47,440
current

1323
00:38:47,440 --> 00:38:49,200
in the past or even that are coming up

1324
00:38:49,200 --> 00:38:51,520
in the future we do team pace uh

1325
00:38:51,520 --> 00:38:52,320
team-based pen

1326
00:38:52,320 --> 00:38:55,119
test exercise practices where we let the

1327
00:38:55,119 --> 00:38:55,599
team

1328
00:38:55,599 --> 00:38:57,359
play on capture the flags or internal

1329
00:38:57,359 --> 00:38:59,119
products or even self-develop ones

1330
00:38:59,119 --> 00:39:01,520
that some of our team have helped create

1331
00:39:01,520 --> 00:39:04,880
in fact this one the cso 2020 award

1332
00:39:04,880 --> 00:39:07,440
for just just pushing that bar a little

1333
00:39:07,440 --> 00:39:08,640
bit further

1334
00:39:08,640 --> 00:39:10,320
we have the security testing back into

1335
00:39:10,320 --> 00:39:13,200
our goals we have a program

1336
00:39:13,200 --> 00:39:15,280
for our team that that again encourages

1337
00:39:15,280 --> 00:39:16,640
them to learn more

1338
00:39:16,640 --> 00:39:18,960
and and understand more about these bugs

1339
00:39:18,960 --> 00:39:20,720
we also are working with hisac which is

1340
00:39:20,720 --> 00:39:21,760
a healthcare

1341
00:39:21,760 --> 00:39:24,880
um consortium for for those in the

1342
00:39:24,880 --> 00:39:25,839
healthcare field

1343
00:39:25,839 --> 00:39:27,920
to share information and we're moving in

1344
00:39:27,920 --> 00:39:29,119
that direction where we can share some

1345
00:39:29,119 --> 00:39:30,240
of these vulnerabilities because that is

1346
00:39:30,240 --> 00:39:31,760
a big challenge for healthcare is

1347
00:39:31,760 --> 00:39:33,040
we don't want to just post this stuff

1348
00:39:33,040 --> 00:39:34,800
out there publicly when we find it and

1349
00:39:34,800 --> 00:39:36,079
it's hard to kind of get

1350
00:39:36,079 --> 00:39:37,680
traction sometimes on getting

1351
00:39:37,680 --> 00:39:39,599
remediation moving

1352
00:39:39,599 --> 00:39:41,119
but we want other healthcare providers

1353
00:39:41,119 --> 00:39:42,560
to understand that there's some risk

1354
00:39:42,560 --> 00:39:44,000
inside their network as well

1355
00:39:44,000 --> 00:39:45,520
and if they have the same product they

1356
00:39:45,520 --> 00:39:47,119
probably want to do something about it

1357
00:39:47,119 --> 00:39:48,240
so we're gonna we're looking at

1358
00:39:48,240 --> 00:39:50,800
leveraging hisac for that particular

1359
00:39:50,800 --> 00:39:53,920
aspect of this and i mean finally where

1360
00:39:53,920 --> 00:39:54,880
to from here

1361
00:39:54,880 --> 00:39:57,920
healthcare security teams we encourage

1362
00:39:57,920 --> 00:39:58,320
you to

1363
00:39:58,320 --> 00:40:00,079
start using some of these tactics and

1364
00:40:00,079 --> 00:40:02,000
methods to kind of look through your own

1365
00:40:02,000 --> 00:40:03,040
security software

1366
00:40:03,040 --> 00:40:06,400
our own applications for security issues

1367
00:40:06,400 --> 00:40:08,240
um we would like to be able to share if

1368
00:40:08,240 --> 00:40:09,839
you remember hisac

1369
00:40:09,839 --> 00:40:11,520
that seems to be a good place to do it

1370
00:40:11,520 --> 00:40:13,839
uh it's more of an enclosed environment

1371
00:40:13,839 --> 00:40:15,839
and we just really need to share a lot

1372
00:40:15,839 --> 00:40:17,839
more um security community

1373
00:40:17,839 --> 00:40:20,640
i ask that if you guys and women have an

1374
00:40:20,640 --> 00:40:22,000
opportunity to

1375
00:40:22,000 --> 00:40:24,000
get out there and when you're doing

1376
00:40:24,000 --> 00:40:26,880
audits or assessments or pen tests and

1377
00:40:26,880 --> 00:40:29,200
look at the applications just don't look

1378
00:40:29,200 --> 00:40:29,920
at the

1379
00:40:29,920 --> 00:40:32,880
the how active directory works or or

1380
00:40:32,880 --> 00:40:34,560
just you know the normal stuff that

1381
00:40:34,560 --> 00:40:36,480
you look for in a pen test add in the

1382
00:40:36,480 --> 00:40:38,319
scope a healthcare application

1383
00:40:38,319 --> 00:40:40,079
and you might find something interesting

1384
00:40:40,079 --> 00:40:41,440
and different instead of just going to

1385
00:40:41,440 --> 00:40:42,400
main admin

1386
00:40:42,400 --> 00:40:45,440
and finally the healthcare vendors

1387
00:40:45,440 --> 00:40:47,200
i mean us healthcare security

1388
00:40:47,200 --> 00:40:48,480
professionals already

1389
00:40:48,480 --> 00:40:50,800
have multiple hats in many cases

1390
00:40:50,800 --> 00:40:52,000
especially for smaller healthcare

1391
00:40:52,000 --> 00:40:53,200
organizations

1392
00:40:53,200 --> 00:40:55,359
um we also have to maintain all the

1393
00:40:55,359 --> 00:40:56,960
normal things that the security teams

1394
00:40:56,960 --> 00:40:58,960
have to do with firewalls and end users

1395
00:40:58,960 --> 00:40:59,280
and

1396
00:40:59,280 --> 00:41:01,680
training and and and maintaining a

1397
00:41:01,680 --> 00:41:03,920
secure edge and patching and all that

1398
00:41:03,920 --> 00:41:05,839
this healthcare application issue just

1399
00:41:05,839 --> 00:41:07,599
makes it that much more challenging to

1400
00:41:07,599 --> 00:41:09,040
keep things secure at the end of the day

1401
00:41:09,040 --> 00:41:10,079
we're really talking about

1402
00:41:10,079 --> 00:41:13,200
patience and patient care and that

1403
00:41:13,200 --> 00:41:16,240
this is a in many ways a patient data

1404
00:41:16,240 --> 00:41:19,599
and privacy security issue so um i'd

1405
00:41:19,599 --> 00:41:21,040
just like to thank the penn medicine

1406
00:41:21,040 --> 00:41:23,119
security team uh everybody on the team

1407
00:41:23,119 --> 00:41:23,839
has had some

1408
00:41:23,839 --> 00:41:26,640
impact on this presentation um and i

1409
00:41:26,640 --> 00:41:28,160
just not like to thank black hat for

1410
00:41:28,160 --> 00:41:29,200
making this possible

1411
00:41:29,200 --> 00:41:31,440
and with that i'll take your questions

1412
00:41:31,440 --> 00:41:33,680
inside the chat channel

1413
00:41:33,680 --> 00:41:35,839
thanks

1414
00:41:37,040 --> 00:41:40,160
hello um i only have 10 seconds uh

1415
00:41:40,160 --> 00:41:42,000
to really say thank you for all those

1416
00:41:42,000 --> 00:41:44,160
who have been interacting with me on the

1417
00:41:44,160 --> 00:41:46,240
chat there i'll be around the chat for

1418
00:41:46,240 --> 00:41:47,920
another 20 minutes or so

1419
00:41:47,920 --> 00:41:49,200
thanks for the question thanks for the

1420
00:41:49,200 --> 00:41:51,040
feedback i hope this is enlightening

1421
00:41:51,040 --> 00:41:52,960
and brought some uh really much needed

1422
00:41:52,960 --> 00:41:54,079
attention to

1423
00:41:54,079 --> 00:41:56,000
healthcare data healthcare application

1424
00:41:56,000 --> 00:41:57,440
security so

1425
00:41:57,440 --> 00:42:01,920
thanks and hope to talk to you later

