1
00:00:03,820 --> 00:00:15,440
[Music]

2
00:00:15,440 --> 00:00:16,239
do we have any

3
00:00:16,239 --> 00:00:20,320
iphone or macbook users listening

4
00:00:20,320 --> 00:00:23,359
what about samsung galaxy amazon echo

5
00:00:23,359 --> 00:00:26,480
or raspberry pi users

6
00:00:26,480 --> 00:00:28,240
now i can't see you as we're streaming

7
00:00:28,240 --> 00:00:30,000
virtually but i'm pretty

8
00:00:30,000 --> 00:00:31,920
sure a lot of virtual hands were just

9
00:00:31,920 --> 00:00:34,320
raised

10
00:00:34,559 --> 00:00:37,200
now what if i told you that anyone could

11
00:00:37,200 --> 00:00:37,600
break

12
00:00:37,600 --> 00:00:41,440
into your encrypted wi-fi communication

13
00:00:41,440 --> 00:00:44,000
when you connect to a wpa2 protected

14
00:00:44,000 --> 00:00:46,000
encrypted wi-fi network

15
00:00:46,000 --> 00:00:48,640
then even without tls on the application

16
00:00:48,640 --> 00:00:49,280
layer

17
00:00:49,280 --> 00:00:51,039
no one should be able to read the data

18
00:00:51,039 --> 00:00:52,320
exchanged between

19
00:00:52,320 --> 00:00:54,719
your device and the wireless access

20
00:00:54,719 --> 00:00:56,160
point

21
00:00:56,160 --> 00:00:58,000
but that was not the case because your

22
00:00:58,000 --> 00:01:00,079
devices and not only those that i

23
00:01:00,079 --> 00:01:01,039
mentioned

24
00:01:01,039 --> 00:01:05,039
had this serious wi-fi vulnerability

25
00:01:05,280 --> 00:01:07,600
that was the discovery of eset's iot

26
00:01:07,600 --> 00:01:08,799
research team

27
00:01:08,799 --> 00:01:09,920
that's dedicated to finding

28
00:01:09,920 --> 00:01:12,159
vulnerabilities in popular devices used

29
00:01:12,159 --> 00:01:13,040
at home

30
00:01:13,040 --> 00:01:16,240
and in the enterprise we feel this type

31
00:01:16,240 --> 00:01:18,799
of research is really important

32
00:01:18,799 --> 00:01:20,960
we participated on a forester report

33
00:01:20,960 --> 00:01:23,200
that went out earlier this year

34
00:01:23,200 --> 00:01:25,280
and the conclusions were that consumer

35
00:01:25,280 --> 00:01:26,960
iot devices

36
00:01:26,960 --> 00:01:28,960
are expanding the enterprise attack

37
00:01:28,960 --> 00:01:30,240
surface

38
00:01:30,240 --> 00:01:32,720
now couple that with the fact that most

39
00:01:32,720 --> 00:01:36,000
consumer iot devices can be exploited

40
00:01:36,000 --> 00:01:40,000
and it's a disaster waiting to happen

41
00:01:40,000 --> 00:01:42,799
our iot research team found flaws in a

42
00:01:42,799 --> 00:01:43,439
bunch of

43
00:01:43,439 --> 00:01:46,880
different devices in smart cameras that

44
00:01:46,880 --> 00:01:49,680
allowed an unauthorized adversary to see

45
00:01:49,680 --> 00:01:51,119
whatever that camera saw

46
00:01:51,119 --> 00:01:55,040
you don't want that right in amazon echo

47
00:01:55,040 --> 00:01:57,920
in insecure smart home hubs by various

48
00:01:57,920 --> 00:02:00,000
different manufacturers

49
00:02:00,000 --> 00:02:02,079
and smart home hubs are the gateway to

50
00:02:02,079 --> 00:02:03,040
your whole home

51
00:02:03,040 --> 00:02:05,200
or potentially your your company if

52
00:02:05,200 --> 00:02:08,479
you're using them in a small home office

53
00:02:08,479 --> 00:02:11,599
and the

54
00:02:11,599 --> 00:02:14,560
effect of that depends on what's

55
00:02:14,560 --> 00:02:16,319
connected to that smart home so you can

56
00:02:16,319 --> 00:02:18,560
use your imagination

57
00:02:18,560 --> 00:02:20,800
but crook is our most impactful

58
00:02:20,800 --> 00:02:22,640
discovery yet

59
00:02:22,640 --> 00:02:25,200
that's because it goes beyond iot in the

60
00:02:25,200 --> 00:02:27,760
sense of cool smart gadgets like your

61
00:02:27,760 --> 00:02:31,519
smart watch or your smart toaster

62
00:02:31,519 --> 00:02:34,160
crook affected billions of wi-fi capable

63
00:02:34,160 --> 00:02:36,560
devices including your laptops

64
00:02:36,560 --> 00:02:39,760
tablets and phones

65
00:02:40,400 --> 00:02:42,800
i'm robert lipowski he sets senior

66
00:02:42,800 --> 00:02:43,920
malware researcher

67
00:02:43,920 --> 00:02:45,920
and my co-speaker today is stefan

68
00:02:45,920 --> 00:02:47,360
svodenchik

69
00:02:47,360 --> 00:02:50,480
hi he says head of experimental research

70
00:02:50,480 --> 00:02:51,840
and detection

71
00:02:51,840 --> 00:02:54,640
but credit also goes to milos cermak who

72
00:02:54,640 --> 00:02:56,080
was the lead researcher behind this

73
00:02:56,080 --> 00:02:57,040
discovery

74
00:02:57,040 --> 00:02:58,720
as well as issa researcher martin

75
00:02:58,720 --> 00:03:01,359
kalosnik

76
00:03:01,680 --> 00:03:05,040
this and other types of threat research

77
00:03:05,040 --> 00:03:07,599
are in eset's dna and it goes hand in

78
00:03:07,599 --> 00:03:09,599
hand with our focus for the past 30

79
00:03:09,599 --> 00:03:12,239
years on proactive detection

80
00:03:12,239 --> 00:03:14,239
so this is our agenda for today we'll

81
00:03:14,239 --> 00:03:15,360
talk about crook

82
00:03:15,360 --> 00:03:19,040
what it is and how it works its impact

83
00:03:19,040 --> 00:03:21,360
how it can affect you and the security

84
00:03:21,360 --> 00:03:23,120
of your devices

85
00:03:23,120 --> 00:03:26,239
and what you can do about it also

86
00:03:26,239 --> 00:03:28,000
for the first time we're going to

87
00:03:28,000 --> 00:03:29,599
disclose our latest findings into

88
00:03:29,599 --> 00:03:30,879
vulnerabilities which

89
00:03:30,879 --> 00:03:35,599
aren't strictly crook but are similar

90
00:03:36,480 --> 00:03:39,120
now before we get into the specifics of

91
00:03:39,120 --> 00:03:41,120
the vulnerability and its impact

92
00:03:41,120 --> 00:03:43,200
let's quickly go over some wi-fi

93
00:03:43,200 --> 00:03:45,040
security basics which are needed to

94
00:03:45,040 --> 00:03:48,400
understand how crook works

95
00:03:48,720 --> 00:03:51,280
first i'm going to talk about wi-fi

96
00:03:51,280 --> 00:03:53,920
associations and disassociations

97
00:03:53,920 --> 00:03:57,040
and the four-way handshake so

98
00:03:57,040 --> 00:03:58,959
the first thing that happens when you

99
00:03:58,959 --> 00:04:01,760
connect your device to an access point

100
00:04:01,760 --> 00:04:04,159
is called the association basically a

101
00:04:04,159 --> 00:04:04,959
connection

102
00:04:04,959 --> 00:04:08,319
for our purpose when talking about crook

103
00:04:08,319 --> 00:04:10,080
we're mostly going to be interested in

104
00:04:10,080 --> 00:04:12,640
the reverse disassociations

105
00:04:12,640 --> 00:04:14,319
and these happen for a multitude of

106
00:04:14,319 --> 00:04:16,079
reasons they can

107
00:04:16,079 --> 00:04:17,839
actually occur naturally for example

108
00:04:17,839 --> 00:04:19,279
when a client

109
00:04:19,279 --> 00:04:22,079
roams from one wi-fi station to another

110
00:04:22,079 --> 00:04:22,479
and

111
00:04:22,479 --> 00:04:25,520
then we're talking about a reassociation

112
00:04:25,520 --> 00:04:27,759
or they happen manually simply when you

113
00:04:27,759 --> 00:04:29,440
turn off the wi-fi connection of your

114
00:04:29,440 --> 00:04:31,360
device

115
00:04:31,360 --> 00:04:32,919
all of these associations and

116
00:04:32,919 --> 00:04:34,639
disassociations are governed by

117
00:04:34,639 --> 00:04:35,600
so-called

118
00:04:35,600 --> 00:04:38,240
management frames and an important thing

119
00:04:38,240 --> 00:04:39,199
to note

120
00:04:39,199 --> 00:04:42,080
these are most often unauthenticated and

121
00:04:42,080 --> 00:04:43,360
unencrypted

122
00:04:43,360 --> 00:04:46,080
and also can be triggered manually what

123
00:04:46,080 --> 00:04:48,719
could go wrong

124
00:04:49,759 --> 00:04:52,160
the four-way handshake establishes

125
00:04:52,160 --> 00:04:52,880
secure

126
00:04:52,880 --> 00:04:55,919
wireless communication now without going

127
00:04:55,919 --> 00:04:57,919
into the technical details

128
00:04:57,919 --> 00:05:00,240
or the group key used for multicast and

129
00:05:00,240 --> 00:05:01,360
broadcast

130
00:05:01,360 --> 00:05:03,199
i'll just mention that the handshake

131
00:05:03,199 --> 00:05:04,639
serves two main purposes

132
00:05:04,639 --> 00:05:07,600
first it's authentication to ensure that

133
00:05:07,600 --> 00:05:08,560
the client is

134
00:05:08,560 --> 00:05:11,360
authorized to connect to the wi-fi for

135
00:05:11,360 --> 00:05:13,360
example knows the wi-fi password

136
00:05:13,360 --> 00:05:15,360
and secondly for confidentiality and

137
00:05:15,360 --> 00:05:16,880
integrity

138
00:05:16,880 --> 00:05:19,199
so a unique per session encryption key

139
00:05:19,199 --> 00:05:20,639
is constructed

140
00:05:20,639 --> 00:05:23,120
it's called the pairwise transient key

141
00:05:23,120 --> 00:05:25,120
the ptk

142
00:05:25,120 --> 00:05:28,320
and a part of that ptk is the tk

143
00:05:28,320 --> 00:05:30,800
which stands for temporal key and this

144
00:05:30,800 --> 00:05:32,560
is used to encrypt unicast data

145
00:05:32,560 --> 00:05:34,400
exchanged between the client

146
00:05:34,400 --> 00:05:37,440
and the access point

147
00:05:37,520 --> 00:05:39,280
so let's take a closer look at how that

148
00:05:39,280 --> 00:05:40,720
tk is used

149
00:05:40,720 --> 00:05:44,800
how encryption is done in wpa2 with ccmp

150
00:05:44,800 --> 00:05:46,560
which is the most ubiquitous standard

151
00:05:46,560 --> 00:05:47,759
today

152
00:05:47,759 --> 00:05:49,680
now i'm going to simplify the scheme not

153
00:05:49,680 --> 00:05:51,280
going into the details of

154
00:05:51,280 --> 00:05:54,720
counter mode and cbc mac here we have

155
00:05:54,720 --> 00:05:56,319
some plain text data

156
00:05:56,319 --> 00:05:59,120
that we are going to transmit and needs

157
00:05:59,120 --> 00:06:00,319
to be encrypted

158
00:06:00,319 --> 00:06:02,240
the cipher being used in this scheme is

159
00:06:02,240 --> 00:06:04,400
aes so we have that

160
00:06:04,400 --> 00:06:07,039
session key the tk which was established

161
00:06:07,039 --> 00:06:08,960
in the four-way handshake

162
00:06:08,960 --> 00:06:12,560
we have a so-called nonce a number which

163
00:06:12,560 --> 00:06:13,680
is only supposed to be

164
00:06:13,680 --> 00:06:16,080
used once this also includes the packet

165
00:06:16,080 --> 00:06:16,960
number

166
00:06:16,960 --> 00:06:18,880
uh these are used to generate the key

167
00:06:18,880 --> 00:06:20,639
stream that key stream

168
00:06:20,639 --> 00:06:23,440
is then xored with the plaintext data to

169
00:06:23,440 --> 00:06:24,000
get

170
00:06:24,000 --> 00:06:26,319
the encrypted data then along with the

171
00:06:26,319 --> 00:06:28,400
packet header this is then transmitted

172
00:06:28,400 --> 00:06:29,840
into the air

173
00:06:29,840 --> 00:06:31,840
and the decryption is the reverse and

174
00:06:31,840 --> 00:06:33,440
schedule will talk about

175
00:06:33,440 --> 00:06:36,479
that in his part

176
00:06:36,479 --> 00:06:38,800
so let now that we covered the basics

177
00:06:38,800 --> 00:06:40,240
let's get to the main part

178
00:06:40,240 --> 00:06:44,560
what is crook aka cve 2019

179
00:06:44,560 --> 00:06:49,840
15 126

180
00:06:51,360 --> 00:06:53,360
this is a typical wi-fi connection

181
00:06:53,360 --> 00:06:54,479
between a device

182
00:06:54,479 --> 00:06:57,599
and an access point secured by the wpa2

183
00:06:57,599 --> 00:06:59,120
protocol

184
00:06:59,120 --> 00:07:01,039
the communication is encrypted using

185
00:07:01,039 --> 00:07:03,280
that tk the pairwise session key that

186
00:07:03,280 --> 00:07:05,440
was established in the handshake

187
00:07:05,440 --> 00:07:07,919
so even if someone else captures those

188
00:07:07,919 --> 00:07:08,880
wireless

189
00:07:08,880 --> 00:07:11,360
network packets flying through the air

190
00:07:11,360 --> 00:07:13,039
they wouldn't be able to decrypt them

191
00:07:13,039 --> 00:07:15,680
and read the content right

192
00:07:15,680 --> 00:07:19,840
well the crook vulnerability breaks that

193
00:07:19,840 --> 00:07:21,599
here's an example of how an attacker

194
00:07:21,599 --> 00:07:24,080
could exploit the bug

195
00:07:24,080 --> 00:07:26,880
they could transmit a crafted

196
00:07:26,880 --> 00:07:28,319
disassociation frame

197
00:07:28,319 --> 00:07:30,400
address to the victim the victim device

198
00:07:30,400 --> 00:07:31,520
accepts it

199
00:07:31,520 --> 00:07:34,240
and disassociates and data transmission

200
00:07:34,240 --> 00:07:36,319
stops

201
00:07:36,319 --> 00:07:38,479
up to this point everything happened as

202
00:07:38,479 --> 00:07:40,639
it should have

203
00:07:40,639 --> 00:07:43,759
but after that disassociation one last

204
00:07:43,759 --> 00:07:46,080
fragment of data is transmitted

205
00:07:46,080 --> 00:07:48,160
only this time as you can see it's

206
00:07:48,160 --> 00:07:49,840
encrypted with an all zero

207
00:07:49,840 --> 00:07:53,280
trans uh transient key and the attacker

208
00:07:53,280 --> 00:07:54,479
can intercept it

209
00:07:54,479 --> 00:07:58,000
and easily decrypt the content

210
00:07:58,000 --> 00:08:00,800
so how was all that possible well to

211
00:08:00,800 --> 00:08:01,520
answer that

212
00:08:01,520 --> 00:08:04,560
let's rewind and

213
00:08:04,560 --> 00:08:06,639
take a closer look under the hood of

214
00:08:06,639 --> 00:08:10,000
that vulnerable device

215
00:08:10,639 --> 00:08:13,520
spoiler alert this is the culprit behind

216
00:08:13,520 --> 00:08:14,160
crook

217
00:08:14,160 --> 00:08:17,120
a full mac wi-fi chip by the way this

218
00:08:17,120 --> 00:08:20,160
particular one is from an amazon kindle

219
00:08:20,160 --> 00:08:22,400
and it's only an eighth of an inch wide

220
00:08:22,400 --> 00:08:24,479
so taking this photograph was

221
00:08:24,479 --> 00:08:27,520
took a bit of an effort steven tell us

222
00:08:27,520 --> 00:08:30,560
more about these chips

223
00:08:37,760 --> 00:08:41,120
so every mobile device your phone your

224
00:08:41,120 --> 00:08:43,120
laptop your smart watch

225
00:08:43,120 --> 00:08:44,800
which doesn't stop reminding you that

226
00:08:44,800 --> 00:08:46,320
you're gonna probably die tomorrow if

227
00:08:46,320 --> 00:08:48,959
you don't make those 10 000 steps today

228
00:08:48,959 --> 00:08:50,880
and even your intelligent vacuum cleaner

229
00:08:50,880 --> 00:08:52,640
if there ever be intelligent enough to

230
00:08:52,640 --> 00:08:54,240
vacuum properly

231
00:08:54,240 --> 00:08:56,800
everything has his own wi-fi chip which

232
00:08:56,800 --> 00:08:59,440
handles all the wi-fi communication

233
00:08:59,440 --> 00:09:01,040
in all reasons mobile device is a full

234
00:09:01,040 --> 00:09:03,600
mag chip tend to be the most used kind

235
00:09:03,600 --> 00:09:05,200
of chips in the market

236
00:09:05,200 --> 00:09:07,920
fullmax offer better performance in

237
00:09:07,920 --> 00:09:09,440
terms of power consumption

238
00:09:09,440 --> 00:09:11,279
and speed and they are easier to

239
00:09:11,279 --> 00:09:14,640
integrate in complete products

240
00:09:14,640 --> 00:09:17,120
this is a block diagram of one of them

241
00:09:17,120 --> 00:09:19,279
as you can see it's fairly complicated

242
00:09:19,279 --> 00:09:20,959
this one also includes the bluetooth

243
00:09:20,959 --> 00:09:23,600
part but we won't bother with it

244
00:09:23,600 --> 00:09:25,279
we'll look only at the small part of it

245
00:09:25,279 --> 00:09:26,800
which manages the whole wi-fi

246
00:09:26,800 --> 00:09:29,279
encryption

247
00:09:30,160 --> 00:09:32,640
and this

248
00:09:33,760 --> 00:09:36,320
is where the magic happens this is a mac

249
00:09:36,320 --> 00:09:38,080
layer short for media access control

250
00:09:38,080 --> 00:09:39,040
architecture

251
00:09:39,040 --> 00:09:40,480
these are the small parts which handle

252
00:09:40,480 --> 00:09:42,240
all the communication encryption

253
00:09:42,240 --> 00:09:44,160
buffers are used to store order

254
00:09:44,160 --> 00:09:45,279
communication frames

255
00:09:45,279 --> 00:09:46,800
for the time they are being encrypted or

256
00:09:46,800 --> 00:09:49,279
decrypted the transmit engine

257
00:09:49,279 --> 00:09:51,440
constitutes the transmit data to and

258
00:09:51,440 --> 00:09:52,880
from the transmit buffer

259
00:09:52,880 --> 00:09:54,399
receive engine does the same for the

260
00:09:54,399 --> 00:09:55,920
receive buffer

261
00:09:55,920 --> 00:09:57,680
the web engine encapsulates all the

262
00:09:57,680 --> 00:09:59,440
hardware accelerators to perform the

263
00:09:59,440 --> 00:10:00,160
encryption

264
00:10:00,160 --> 00:10:02,839
and encryption it implements all cypher

265
00:10:02,839 --> 00:10:04,880
algorithms

266
00:10:04,880 --> 00:10:09,839
s wep wpa wpa2

267
00:10:09,839 --> 00:10:12,399
psm is a microcontroller that is highly

268
00:10:12,399 --> 00:10:13,279
optimized

269
00:10:13,279 --> 00:10:15,920
for flow control operation it also

270
00:10:15,920 --> 00:10:17,200
determines

271
00:10:17,200 --> 00:10:19,200
based on the frame type and association

272
00:10:19,200 --> 00:10:21,040
information the appropriate cipher

273
00:10:21,040 --> 00:10:24,160
algorithm to be used

274
00:10:24,959 --> 00:10:27,360
so how the encryption goes as robert

275
00:10:27,360 --> 00:10:28,800
explained before

276
00:10:28,800 --> 00:10:30,399
every time a device is connected or

277
00:10:30,399 --> 00:10:32,560
reconnected to an access point

278
00:10:32,560 --> 00:10:35,040
after authentication and association a

279
00:10:35,040 --> 00:10:37,120
session encryption key is generated

280
00:10:37,120 --> 00:10:38,480
which is then used for all the

281
00:10:38,480 --> 00:10:42,000
encryption empty location ends

282
00:10:43,760 --> 00:10:46,959
the transit buffer

283
00:10:46,959 --> 00:10:49,680
is being filled with data frames which

284
00:10:49,680 --> 00:10:51,360
need to be send out

285
00:10:51,360 --> 00:10:54,640
web engine encrypts the data per frame

286
00:10:54,640 --> 00:10:56,480
with the generated encryption key and

287
00:10:56,480 --> 00:11:01,040
the transit engine sends them away

288
00:11:01,040 --> 00:11:02,720
so what happens after the association

289
00:11:02,720 --> 00:11:04,320
occurs

290
00:11:04,320 --> 00:11:06,000
the disassociation frame comes through

291
00:11:06,000 --> 00:11:08,240
the receive engine to receive buffer

292
00:11:08,240 --> 00:11:10,320
state machine evaluates the frame and

293
00:11:10,320 --> 00:11:11,360
sends the information

294
00:11:11,360 --> 00:11:14,480
up the ladder there the information is

295
00:11:14,480 --> 00:11:15,440
interpreted as

296
00:11:15,440 --> 00:11:17,760
okay we are about to disconnect let's

297
00:11:17,760 --> 00:11:20,079
drop all the encryption keys

298
00:11:20,079 --> 00:11:22,079
a command to drop generated session

299
00:11:22,079 --> 00:11:24,640
encryption key is then send

300
00:11:24,640 --> 00:11:26,320
since in computing you don't erase

301
00:11:26,320 --> 00:11:28,560
anything properly you just replace it

302
00:11:28,560 --> 00:11:30,160
with zeros

303
00:11:30,160 --> 00:11:31,839
decision encryption key is after

304
00:11:31,839 --> 00:11:36,160
dissociation overwritten by zeros

305
00:11:36,720 --> 00:11:38,640
here comes the term all zero encryption

306
00:11:38,640 --> 00:11:39,760
key

307
00:11:39,760 --> 00:11:42,160
this is expected behavior as no further

308
00:11:42,160 --> 00:11:44,240
data is supposed to be transmitted after

309
00:11:44,240 --> 00:11:45,519
the association

310
00:11:45,519 --> 00:11:47,120
and it stays that way until a new

311
00:11:47,120 --> 00:11:48,640
session is generated

312
00:11:48,640 --> 00:11:50,800
after the new reassociation and the new

313
00:11:50,800 --> 00:11:52,160
four-way handshake

314
00:11:52,160 --> 00:11:55,200
but until that happens the transmit

315
00:11:55,200 --> 00:11:57,760
buffer still may contain data the

316
00:11:57,760 --> 00:11:59,680
transmit engine needs to send them away

317
00:11:59,680 --> 00:12:03,600
and continues to do so as usual

318
00:12:03,600 --> 00:12:05,360
so all data which were left in that

319
00:12:05,360 --> 00:12:06,959
buffer after dissociation

320
00:12:06,959 --> 00:12:09,760
occurred are now sent away encrypted

321
00:12:09,760 --> 00:12:10,000
with

322
00:12:10,000 --> 00:12:13,519
an all zero encryption key

323
00:12:17,120 --> 00:12:19,600
so when you can grab these frames you

324
00:12:19,600 --> 00:12:21,200
can easily decrypt them into plugin text

325
00:12:21,200 --> 00:12:22,160
data

326
00:12:22,160 --> 00:12:25,680
you know the encryption algorithm

327
00:12:25,680 --> 00:12:28,880
you know the encryption key

328
00:12:29,040 --> 00:12:32,240
you get the nouns from the header

329
00:12:32,240 --> 00:12:38,399
and you can easily decrypt them then

330
00:12:38,399 --> 00:12:40,480
the question is how do you identify

331
00:12:40,480 --> 00:12:42,480
these particular frames in the air

332
00:12:42,480 --> 00:12:45,839
the answer is simple you don't you just

333
00:12:45,839 --> 00:12:47,519
try to decrypt everything you see with

334
00:12:47,519 --> 00:12:48,639
an all zero key

335
00:12:48,639 --> 00:12:50,720
and those frames which after description

336
00:12:50,720 --> 00:12:52,399
match binary pattern of the plaintext

337
00:12:52,399 --> 00:12:53,519
data frames

338
00:12:53,519 --> 00:12:56,639
which is something like aaaa03

339
00:12:56,639 --> 00:12:58,560
those are the ones which are formerly

340
00:12:58,560 --> 00:13:01,760
encrypted within all zero key

341
00:13:01,760 --> 00:13:03,839
one can ask how much data can you

342
00:13:03,839 --> 00:13:06,399
decrypt after one disassociation

343
00:13:06,399 --> 00:13:08,560
well the transit buffer has a memory

344
00:13:08,560 --> 00:13:10,399
space of 32 kilobytes

345
00:13:10,399 --> 00:13:12,720
for comparison one kilobyte is a couple

346
00:13:12,720 --> 00:13:14,399
of hundred words of plain text

347
00:13:14,399 --> 00:13:18,079
so 32 kilobytes will be about 10 to 20

348
00:13:18,079 --> 00:13:20,560
000 words which is quite a few pages of

349
00:13:20,560 --> 00:13:22,000
a book

350
00:13:22,000 --> 00:13:25,040
but you must understand that the buffer

351
00:13:25,040 --> 00:13:27,120
isn't always full when the dissociation

352
00:13:27,120 --> 00:13:27,920
happens

353
00:13:27,920 --> 00:13:31,680
it really depends on the timing

354
00:13:32,720 --> 00:13:34,240
so what can an attack do with this

355
00:13:34,240 --> 00:13:36,639
vulnerability well there are two ways to

356
00:13:36,639 --> 00:13:38,320
an adversary can eavesdrop on these

357
00:13:38,320 --> 00:13:42,480
frames a passive one and an active one

358
00:13:42,480 --> 00:13:45,279
let's begin with the passive one as was

359
00:13:45,279 --> 00:13:46,639
already mentioned

360
00:13:46,639 --> 00:13:48,800
the disassociation occurs naturally

361
00:13:48,800 --> 00:13:50,240
moving around

362
00:13:50,240 --> 00:13:52,240
changing access points low signal

363
00:13:52,240 --> 00:13:53,519
strength

364
00:13:53,519 --> 00:13:56,639
or just due to single interference most

365
00:13:56,639 --> 00:13:58,240
of the time you won't even notice

366
00:13:58,240 --> 00:13:59,760
because of the quick subsequent

367
00:13:59,760 --> 00:14:01,360
reassociation

368
00:14:01,360 --> 00:14:03,519
so let's do the math since this issue

369
00:14:03,519 --> 00:14:05,360
concerns many wi-fi chips

370
00:14:05,360 --> 00:14:07,279
somewhere where there are many of these

371
00:14:07,279 --> 00:14:09,120
mobile devices in one place

372
00:14:09,120 --> 00:14:11,600
like a workspace for example there

373
00:14:11,600 --> 00:14:13,519
should be a lot of them vulnerable

374
00:14:13,519 --> 00:14:15,279
combining with the fact that natural

375
00:14:15,279 --> 00:14:17,600
dissociation occurs quite often

376
00:14:17,600 --> 00:14:19,279
there should be all zero encrypted

377
00:14:19,279 --> 00:14:21,279
frames just flying around

378
00:14:21,279 --> 00:14:25,920
and yes they are so let's grab them

379
00:14:26,399 --> 00:14:28,160
so what do you think have we tried to

380
00:14:28,160 --> 00:14:30,320
eavesdrow at our workplace

381
00:14:30,320 --> 00:14:33,120
of course we did because you know

382
00:14:33,120 --> 00:14:34,880
sticking your own into things of people

383
00:14:34,880 --> 00:14:38,000
you know is always interesting

384
00:14:38,000 --> 00:14:40,959
and what did you saw first we saw all

385
00:14:40,959 --> 00:14:42,639
vulnerable devices and access points to

386
00:14:42,639 --> 00:14:44,399
which they are connecting

387
00:14:44,399 --> 00:14:47,040
but then after decryption we saw what

388
00:14:47,040 --> 00:14:49,279
kind of data are actually exposed

389
00:14:49,279 --> 00:14:52,560
dns requests tcp http requests

390
00:14:52,560 --> 00:14:55,199
website that people owed you name it

391
00:14:55,199 --> 00:14:56,639
actually everything

392
00:14:56,639 --> 00:14:59,519
that wasn't tls encrypted because that's

393
00:14:59,519 --> 00:15:01,279
another layer of encryption on the ip

394
00:15:01,279 --> 00:15:03,600
level

395
00:15:04,720 --> 00:15:07,839
now when we identified all vulnerable

396
00:15:07,839 --> 00:15:08,639
devices

397
00:15:08,639 --> 00:15:11,440
we can get them to drop even more than

398
00:15:11,440 --> 00:15:14,000
they would normally give up for free

399
00:15:14,000 --> 00:15:16,399
how i can trigger this association

400
00:15:16,399 --> 00:15:17,360
between them

401
00:15:17,360 --> 00:15:21,519
and their access points wherever i want

402
00:15:24,320 --> 00:15:27,839
and again

403
00:15:28,720 --> 00:15:31,279
and again

404
00:15:34,560 --> 00:15:37,279
and just like captain america i can do

405
00:15:37,279 --> 00:15:40,079
this all day

406
00:15:40,079 --> 00:15:41,360
and this is the most dangerous thing

407
00:15:41,360 --> 00:15:43,360
about this vulnerability because now you

408
00:15:43,360 --> 00:15:43,839
can gather

409
00:15:43,839 --> 00:15:45,920
these partial information let me get one

410
00:15:45,920 --> 00:15:47,839
thing straight the nature of the data

411
00:15:47,839 --> 00:15:49,680
frames which are eventually only a zero

412
00:15:49,680 --> 00:15:50,399
key

413
00:15:50,399 --> 00:15:52,399
encrypted and can be eventually

414
00:15:52,399 --> 00:15:53,680
decrypted to plaintext

415
00:15:53,680 --> 00:15:56,720
is quite random it really depends on the

416
00:15:56,720 --> 00:15:58,720
timing of the dissociation

417
00:15:58,720 --> 00:16:01,519
but if you can now invoke it over and

418
00:16:01,519 --> 00:16:02,399
over again

419
00:16:02,399 --> 00:16:04,800
the vulnerability will manifest will

420
00:16:04,800 --> 00:16:05,920
manifest itself

421
00:16:05,920 --> 00:16:09,040
over and over again and now you're in

422
00:16:09,040 --> 00:16:10,800
the information gathering business

423
00:16:10,800 --> 00:16:12,959
just waiting until something interesting

424
00:16:12,959 --> 00:16:14,000
pops out

425
00:16:14,000 --> 00:16:23,839
and it always does

426
00:16:26,480 --> 00:16:29,040
as much as i enjoyed those animations

427
00:16:29,040 --> 00:16:31,040
let's demonstrate that this stuff really

428
00:16:31,040 --> 00:16:32,320
works

429
00:16:32,320 --> 00:16:34,880
so we prepared a little demo in our lab

430
00:16:34,880 --> 00:16:37,199
so you can see the attack in action

431
00:16:37,199 --> 00:16:39,120
we're going to use a wireless adapter in

432
00:16:39,120 --> 00:16:41,040
a so-called monitor mode

433
00:16:41,040 --> 00:16:42,639
now some of you that played around with

434
00:16:42,639 --> 00:16:44,160
wireshark

435
00:16:44,160 --> 00:16:46,480
are surely familiar with promiscuous

436
00:16:46,480 --> 00:16:48,399
mode which is also used for packet

437
00:16:48,399 --> 00:16:49,360
sniffing

438
00:16:49,360 --> 00:16:51,600
monitor mode is similar but it allows

439
00:16:51,600 --> 00:16:52,880
packets to be captured

440
00:16:52,880 --> 00:16:55,279
without having to be associated with an

441
00:16:55,279 --> 00:16:56,639
access point

442
00:16:56,639 --> 00:16:59,199
in other words an attacker can carry out

443
00:16:59,199 --> 00:17:01,360
this attack without knowing the wi-fi

444
00:17:01,360 --> 00:17:02,560
password

445
00:17:02,560 --> 00:17:06,720
okay so this is our would be victim

446
00:17:06,720 --> 00:17:09,520
uses his phone is connected to our work

447
00:17:09,520 --> 00:17:10,079
wi-fi

448
00:17:10,079 --> 00:17:13,359
see work wi-fi and

449
00:17:13,359 --> 00:17:15,359
they're gonna check on their smart home

450
00:17:15,359 --> 00:17:16,720
so

451
00:17:16,720 --> 00:17:19,919
connect to the smart home

452
00:17:19,919 --> 00:17:24,319
command interface enters

453
00:17:24,319 --> 00:17:27,359
his credentials

454
00:17:28,960 --> 00:17:32,559
clicks on login and if those credentials

455
00:17:32,559 --> 00:17:35,360
were correct which they were

456
00:17:35,360 --> 00:17:38,400
in a moment he's connected

457
00:17:38,400 --> 00:17:42,559
and can check up on his smart home

458
00:17:42,559 --> 00:17:46,240
see how his nuclear power plant

459
00:17:46,240 --> 00:17:49,280
is doing turn it on off

460
00:17:49,280 --> 00:17:51,440
whatever now let's switch over to the

461
00:17:51,440 --> 00:17:52,400
perspective

462
00:17:52,400 --> 00:17:55,840
of the attacker so

463
00:17:55,840 --> 00:17:59,360
the attacker has prepared his script for

464
00:17:59,360 --> 00:18:00,799
invoking crook

465
00:18:00,799 --> 00:18:03,360
uh the parameters there are the victim's

466
00:18:03,360 --> 00:18:05,280
mac address which was

467
00:18:05,280 --> 00:18:07,600
uh would had to be known in a different

468
00:18:07,600 --> 00:18:08,880
way and also

469
00:18:08,880 --> 00:18:12,240
uh that wi-fi that targeted wi-fi ssid

470
00:18:12,240 --> 00:18:14,240
and know that as i mentioned earlier it

471
00:18:14,240 --> 00:18:16,799
doesn't need to know the wi-fi password

472
00:18:16,799 --> 00:18:20,320
uh as you can see uh some packets

473
00:18:20,320 --> 00:18:23,039
were captured and we're letting the

474
00:18:23,039 --> 00:18:23,760
script run

475
00:18:23,760 --> 00:18:26,960
so it's running continuously so uh we're

476
00:18:26,960 --> 00:18:28,480
continuing to

477
00:18:28,480 --> 00:18:31,679
uh capture more packets now let's go

478
00:18:31,679 --> 00:18:32,480
back

479
00:18:32,480 --> 00:18:35,120
and see what happened over there so in

480
00:18:35,120 --> 00:18:35,919
the beginning

481
00:18:35,919 --> 00:18:38,799
we sent out that this script sent out

482
00:18:38,799 --> 00:18:41,760
that disassociation frame to the victim

483
00:18:41,760 --> 00:18:42,400
uh

484
00:18:42,400 --> 00:18:44,000
now we can see that the victim

485
00:18:44,000 --> 00:18:45,760
reconnected to that wi-fi so the

486
00:18:45,760 --> 00:18:47,919
disassociation frame was accepted and

487
00:18:47,919 --> 00:18:50,480
and it worked and now we figured that

488
00:18:50,480 --> 00:18:52,080
the device is vulnerable

489
00:18:52,080 --> 00:18:54,240
because we were able to successfully

490
00:18:54,240 --> 00:18:55,440
decrypt

491
00:18:55,440 --> 00:18:57,600
uh this packet as shtevo mentioned this

492
00:18:57,600 --> 00:18:58,799
is that

493
00:18:58,799 --> 00:19:02,080
magic identifier aaaa03

494
00:19:02,080 --> 00:19:03,840
and now we can see we can read it in

495
00:19:03,840 --> 00:19:06,400
plain text that we were able to

496
00:19:06,400 --> 00:19:10,640
uh decrypt with an all zero key uh

497
00:19:10,640 --> 00:19:13,200
this packet okay scroll down there's

498
00:19:13,200 --> 00:19:14,799
another packet

499
00:19:14,799 --> 00:19:16,960
uh we can choose whichever one is

500
00:19:16,960 --> 00:19:18,160
interesting uh

501
00:19:18,160 --> 00:19:21,520
is useful for our needs and more packets

502
00:19:21,520 --> 00:19:25,440
continue coming in so let's select

503
00:19:25,440 --> 00:19:30,080
this one this http packet

504
00:19:30,400 --> 00:19:34,160
wireshark helps us

505
00:19:34,160 --> 00:19:37,360
parse some of those fields over there so

506
00:19:37,360 --> 00:19:39,600
let's let's select that session id so

507
00:19:39,600 --> 00:19:40,559
this particular one

508
00:19:40,559 --> 00:19:42,799
contains the session id copy to the

509
00:19:42,799 --> 00:19:43,600
clipboard

510
00:19:43,600 --> 00:19:47,200
switch over to our browser and then

511
00:19:47,200 --> 00:19:50,559
the attacker is able without knowing the

512
00:19:50,559 --> 00:19:51,440
password

513
00:19:51,440 --> 00:19:53,120
to the smart home interface without

514
00:19:53,120 --> 00:19:54,690
knowing password to the wi-fi

515
00:19:54,690 --> 00:19:56,160
[Music]

516
00:19:56,160 --> 00:19:59,440
able to connect to that interface

517
00:19:59,440 --> 00:20:03,840
and do whatever malicious mischief

518
00:20:03,840 --> 00:20:06,159
and we will be releasing that testing

519
00:20:06,159 --> 00:20:07,760
script that we used

520
00:20:07,760 --> 00:20:12,240
in the demo on our github after the

521
00:20:18,840 --> 00:20:20,240
presentation

522
00:20:20,240 --> 00:20:22,480
but that's not all here's a different

523
00:20:22,480 --> 00:20:23,440
scenario

524
00:20:23,440 --> 00:20:25,280
where it's the access point that is

525
00:20:25,280 --> 00:20:28,480
susceptible to this vulnerability

526
00:20:28,480 --> 00:20:31,600
similarly to the previous example an

527
00:20:31,600 --> 00:20:33,440
attacker would be able to intercept and

528
00:20:33,440 --> 00:20:35,120
encrypt private data that was being

529
00:20:35,120 --> 00:20:36,559
addressed from the access point to your

530
00:20:36,559 --> 00:20:37,760
decline device

531
00:20:37,760 --> 00:20:39,280
even if your client device wasn't

532
00:20:39,280 --> 00:20:40,960
vulnerable itself

533
00:20:40,960 --> 00:20:43,200
he can still get information about your

534
00:20:43,200 --> 00:20:44,000
connection

535
00:20:44,000 --> 00:20:45,919
directly from the access point the

536
00:20:45,919 --> 00:20:49,120
difference is only that he will get to

537
00:20:49,120 --> 00:20:49,840
see

538
00:20:49,840 --> 00:20:52,799
only responses now dns and http

539
00:20:52,799 --> 00:20:54,240
responses for example

540
00:20:54,240 --> 00:20:56,320
or a document being sent to wi-fi

541
00:20:56,320 --> 00:20:57,520
printer

542
00:20:57,520 --> 00:20:59,919
the fact that wireless routers and

543
00:20:59,919 --> 00:21:01,679
access points are also affected by this

544
00:21:01,679 --> 00:21:02,960
vulnerability

545
00:21:02,960 --> 00:21:04,960
greatly increases the scope of the

546
00:21:04,960 --> 00:21:06,880
attack

547
00:21:06,880 --> 00:21:08,960
and it's also more difficult to protect

548
00:21:08,960 --> 00:21:10,880
protect against it

549
00:21:10,880 --> 00:21:13,200
since the security of access points is

550
00:21:13,200 --> 00:21:15,280
typically beyond your control

551
00:21:15,280 --> 00:21:18,919
a solution to this is to treat even

552
00:21:18,919 --> 00:21:22,400
wpa2 protected networks as insecure

553
00:21:22,400 --> 00:21:24,880
and make sure you always use encryption

554
00:21:24,880 --> 00:21:26,159
on the ip level

555
00:21:26,159 --> 00:21:31,840
tls or vpn

556
00:21:40,000 --> 00:21:43,039
crook affected devices with cyprus and

557
00:21:43,039 --> 00:21:43,679
broadcom

558
00:21:43,679 --> 00:21:46,000
wi-fi chips and these chips are really

559
00:21:46,000 --> 00:21:48,000
prevalent

560
00:21:48,000 --> 00:21:49,919
these are just the examples of devices

561
00:21:49,919 --> 00:21:51,600
we confirmed to have been vulnerable

562
00:21:51,600 --> 00:21:53,679
in our lab but we know there were many

563
00:21:53,679 --> 00:21:56,400
more and the total number of affected

564
00:21:56,400 --> 00:21:59,840
devices was well over a billion

565
00:21:59,840 --> 00:22:01,600
when we were doing our initial crook

566
00:22:01,600 --> 00:22:03,360
testing last year

567
00:22:03,360 --> 00:22:04,880
we did not see the vulnerability

568
00:22:04,880 --> 00:22:07,120
manifest itself on devices with wi-fi

569
00:22:07,120 --> 00:22:07,679
chips from

570
00:22:07,679 --> 00:22:09,600
other manufacturers like qualcomm

571
00:22:09,600 --> 00:22:12,480
realtek raylink or mediatek

572
00:22:12,480 --> 00:22:14,320
but we later found out that some of

573
00:22:14,320 --> 00:22:15,600
those companies had

574
00:22:15,600 --> 00:22:18,080
other similar issues and stefan will

575
00:22:18,080 --> 00:22:21,600
tell you more about that in a minute

576
00:22:22,640 --> 00:22:25,200
so what happened after that discovery

577
00:22:25,200 --> 00:22:26,559
well we work with

578
00:22:26,559 --> 00:22:28,320
the affected manufacturers through a

579
00:22:28,320 --> 00:22:30,880
responsible disclosure process

580
00:22:30,880 --> 00:22:33,600
and considering the complexity of the

581
00:22:33,600 --> 00:22:34,000
bug

582
00:22:34,000 --> 00:22:36,400
and the two-step patching process

583
00:22:36,400 --> 00:22:37,039
involving

584
00:22:37,039 --> 00:22:39,760
chip manufacturers and then oems or

585
00:22:39,760 --> 00:22:41,440
device manufacturers

586
00:22:41,440 --> 00:22:43,440
we agreed on a longer than usual grace

587
00:22:43,440 --> 00:22:47,120
period of a 120 days

588
00:22:47,120 --> 00:22:49,520
as far as we know most major vendors

589
00:22:49,520 --> 00:22:52,720
have released patches

590
00:22:52,799 --> 00:22:55,120
now not only would it be difficult for

591
00:22:55,120 --> 00:22:56,960
us to communicate with

592
00:22:56,960 --> 00:22:59,120
every individual device manufacturer

593
00:22:59,120 --> 00:23:01,200
that could possibly be using

594
00:23:01,200 --> 00:23:03,840
these chips in their devices it would

595
00:23:03,840 --> 00:23:05,280
also be impossible

596
00:23:05,280 --> 00:23:07,440
i mean there is no public comprehensive

597
00:23:07,440 --> 00:23:09,120
list

598
00:23:09,120 --> 00:23:11,520
clients of broadcom in cyprus that's

599
00:23:11,520 --> 00:23:13,600
proprietary information of broadcom and

600
00:23:13,600 --> 00:23:14,720
cyprus

601
00:23:14,720 --> 00:23:17,520
and they didn't tell us so what we did

602
00:23:17,520 --> 00:23:18,880
in order to ensure that

603
00:23:18,880 --> 00:23:20,960
all possibly affected parties became

604
00:23:20,960 --> 00:23:22,799
aware of the bug

605
00:23:22,799 --> 00:23:25,919
was we work with ikaze an organization

606
00:23:25,919 --> 00:23:27,840
that helps coordinate such complicated

607
00:23:27,840 --> 00:23:29,120
disclosures

608
00:23:29,120 --> 00:23:30,480
and we strongly encourage other

609
00:23:30,480 --> 00:23:32,640
researchers in similar situations to do

610
00:23:32,640 --> 00:23:37,600
so they were very helpful

611
00:23:37,600 --> 00:23:39,760
now i'm going to go back in time and

612
00:23:39,760 --> 00:23:41,840
explain how our research started

613
00:23:41,840 --> 00:23:43,760
but more importantly the connections to

614
00:23:43,760 --> 00:23:46,480
previous work

615
00:23:47,200 --> 00:23:50,240
i'm sure for a lot of you all of this

616
00:23:50,240 --> 00:23:52,559
probably reminds you of other weaknesses

617
00:23:52,559 --> 00:23:54,640
in wpa2 from the past

618
00:23:54,640 --> 00:23:58,400
such as crack crack being short for key

619
00:23:58,400 --> 00:24:00,400
reinstallation attacks

620
00:24:00,400 --> 00:24:02,880
was researched from 2017 by matthew

621
00:24:02,880 --> 00:24:04,000
fanhoff

622
00:24:04,000 --> 00:24:05,679
which he also presented at blackhat

623
00:24:05,679 --> 00:24:08,159
europe 2017.

624
00:24:08,159 --> 00:24:10,720
and the point with crack as the acronym

625
00:24:10,720 --> 00:24:11,919
suggests

626
00:24:11,919 --> 00:24:14,320
it's all about reinstalling an already

627
00:24:14,320 --> 00:24:16,240
in-use encryption key

628
00:24:16,240 --> 00:24:18,159
but resetting that nonce that i

629
00:24:18,159 --> 00:24:21,120
mentioned in the beginning

630
00:24:21,360 --> 00:24:23,039
and in the beginning of our research we

631
00:24:23,039 --> 00:24:25,200
discovered that amazon echo the first

632
00:24:25,200 --> 00:24:26,320
generation

633
00:24:26,320 --> 00:24:29,360
was vulnerable to crack so we did

634
00:24:29,360 --> 00:24:32,159
responsible disclosure and while amazon

635
00:24:32,159 --> 00:24:33,840
was working on the patch

636
00:24:33,840 --> 00:24:35,919
we were looking into the second

637
00:24:35,919 --> 00:24:38,000
generation of echo

638
00:24:38,000 --> 00:24:39,919
now the second generation was not

639
00:24:39,919 --> 00:24:43,279
vulnerable to the original crack attack

640
00:24:43,279 --> 00:24:46,240
but it was vulnerable to a modification

641
00:24:46,240 --> 00:24:48,320
of that attack

642
00:24:48,320 --> 00:24:50,799
and this modification led to an all-zero

643
00:24:50,799 --> 00:24:52,880
key being installed

644
00:24:52,880 --> 00:24:56,559
and the cause of that was you guessed it

645
00:24:56,559 --> 00:25:00,080
crook so we continued

646
00:25:00,080 --> 00:25:02,480
our discussions with amazon we continued

647
00:25:02,480 --> 00:25:04,080
our research

648
00:25:04,080 --> 00:25:06,240
until we came to realize that the

649
00:25:06,240 --> 00:25:08,480
problem was actually in the wi-fi chip

650
00:25:08,480 --> 00:25:09,840
itself

651
00:25:09,840 --> 00:25:12,480
in the case of this device the chip by

652
00:25:12,480 --> 00:25:13,760
cyprus

653
00:25:13,760 --> 00:25:16,159
now cyprus bought the iot division of

654
00:25:16,159 --> 00:25:17,840
broadcom

655
00:25:17,840 --> 00:25:20,240
and from our perspective or from the

656
00:25:20,240 --> 00:25:22,559
perspective of the crook vulnerability

657
00:25:22,559 --> 00:25:25,360
the chips are basically the same but

658
00:25:25,360 --> 00:25:26,720
since broadcom chips

659
00:25:26,720 --> 00:25:28,799
were so widespread even more so than

660
00:25:28,799 --> 00:25:30,080
cyprus

661
00:25:30,080 --> 00:25:32,400
that's when we realized the scale of

662
00:25:32,400 --> 00:25:34,880
this vulnerability

663
00:25:34,880 --> 00:25:37,279
and that's how cracking amazon echo

664
00:25:37,279 --> 00:25:42,240
brought us to discovering crook

665
00:25:42,240 --> 00:25:45,440
i put together this table to explain how

666
00:25:45,440 --> 00:25:46,080
the two

667
00:25:46,080 --> 00:25:49,520
are related and how they differ

668
00:25:49,520 --> 00:25:51,760
both of them could lead to similar

669
00:25:51,760 --> 00:25:52,559
outcomes

670
00:25:52,559 --> 00:25:55,200
unauthorized decryption of encrypted

671
00:25:55,200 --> 00:25:57,039
wireless traffic

672
00:25:57,039 --> 00:26:00,799
but there are also two separate issues

673
00:26:00,799 --> 00:26:03,840
crack is an attack an

674
00:26:03,840 --> 00:26:06,880
exploit and crook as we've explained is

675
00:26:06,880 --> 00:26:09,360
a vulnerability a bug

676
00:26:09,360 --> 00:26:12,159
the point with crack is that a nonce is

677
00:26:12,159 --> 00:26:14,799
being reused to acquire the key stream

678
00:26:14,799 --> 00:26:16,720
with crook it's about data being

679
00:26:16,720 --> 00:26:17,840
encrypted with an

680
00:26:17,840 --> 00:26:21,279
all zero session key crack is triggered

681
00:26:21,279 --> 00:26:23,440
during that four-way handshake

682
00:26:23,440 --> 00:26:25,080
crook is triggered after a

683
00:26:25,080 --> 00:26:27,760
disassociation

684
00:26:27,760 --> 00:26:30,960
as far as the impact crack affected most

685
00:26:30,960 --> 00:26:32,880
wi-fi capable devices because it was

686
00:26:32,880 --> 00:26:33,760
about the

687
00:26:33,760 --> 00:26:37,360
protocols themselves crook affected

688
00:26:37,360 --> 00:26:40,559
most most widespread wi-fi chips out

689
00:26:40,559 --> 00:26:44,000
there by broadcom and cyprus

690
00:26:44,240 --> 00:26:46,880
now the most severe manifestation of

691
00:26:46,880 --> 00:26:48,080
crack

692
00:26:48,080 --> 00:26:51,840
is the installation of an all-zero key

693
00:26:51,840 --> 00:26:52,480
and

694
00:26:52,480 --> 00:26:54,960
crook is also one of the possible

695
00:26:54,960 --> 00:26:55,919
reasons why

696
00:26:55,919 --> 00:26:58,159
encryption with an all-zero key can

697
00:26:58,159 --> 00:27:00,000
happen so that's something they have in

698
00:27:00,000 --> 00:27:02,640
common too

699
00:27:04,159 --> 00:27:06,559
i mentioned that our initial scripts for

700
00:27:06,559 --> 00:27:08,000
testing crook didn't reveal the

701
00:27:08,000 --> 00:27:09,120
vulnerability on

702
00:27:09,120 --> 00:27:12,640
other chipsets than broadcom or cyprus

703
00:27:12,640 --> 00:27:15,360
that was true but we did find something

704
00:27:15,360 --> 00:27:16,559
nevertheless

705
00:27:16,559 --> 00:27:21,840
and stefan will tell you more

706
00:27:24,640 --> 00:27:28,159
so after our former rsa presentation in

707
00:27:28,159 --> 00:27:29,039
february

708
00:27:29,039 --> 00:27:30,720
the issue was brought to attention of

709
00:27:30,720 --> 00:27:32,960
many other chipset manufacturers

710
00:27:32,960 --> 00:27:35,039
one of the chips we were looking into

711
00:27:35,039 --> 00:27:37,120
aside from broadcom and cyprus were from

712
00:27:37,120 --> 00:27:38,159
qualcomm

713
00:27:38,159 --> 00:27:40,399
our investigation found that their wifi

714
00:27:40,399 --> 00:27:41,840
chips are also vulnerable

715
00:27:41,840 --> 00:27:45,279
but the exploit manifests itself

716
00:27:46,840 --> 00:27:48,080
differently

717
00:27:48,080 --> 00:27:50,320
this is wireshark lock of a residual

718
00:27:50,320 --> 00:27:52,399
frame after the association was invoked

719
00:27:52,399 --> 00:27:54,080
on a qualcomm router

720
00:27:54,080 --> 00:27:56,960
as you can see protected flag is set

721
00:27:56,960 --> 00:27:58,320
true

722
00:27:58,320 --> 00:28:00,320
and the frame appears to have a ccmp

723
00:28:00,320 --> 00:28:02,480
parameter but the data

724
00:28:02,480 --> 00:28:04,159
aren't encrypted at all as they should

725
00:28:04,159 --> 00:28:05,679
be this frame

726
00:28:05,679 --> 00:28:10,240
is an icmp echo from ping command

727
00:28:10,640 --> 00:28:13,919
we reported this the issue to them

728
00:28:13,919 --> 00:28:15,200
and they approached it as a crook

729
00:28:15,200 --> 00:28:17,039
variant and assigned

730
00:28:17,039 --> 00:28:21,440
cve 2020 3702

731
00:28:21,440 --> 00:28:25,200
the affected chip was qca 9531

732
00:28:25,200 --> 00:28:26,720
which is a highly integrated and

733
00:28:26,720 --> 00:28:28,320
feature-rich system-on-chip

734
00:28:28,320 --> 00:28:31,600
for advanced wi-fi platforms

735
00:28:31,600 --> 00:28:34,720
it is used mainly in network routers

736
00:28:34,720 --> 00:28:36,399
they resolve the issue with updating

737
00:28:36,399 --> 00:28:39,360
their proprietary linux driver in july

738
00:28:39,360 --> 00:28:41,360
the only problem is that not all devices

739
00:28:41,360 --> 00:28:42,720
with qualcomm chips

740
00:28:42,720 --> 00:28:45,279
use this proprietary driver in some

741
00:28:45,279 --> 00:28:46,240
cases

742
00:28:46,240 --> 00:28:50,320
open source linux drivers are also used

743
00:28:50,320 --> 00:28:53,520
such as upstream adh9k

744
00:28:53,520 --> 00:28:56,880
driver for example so a word of caution

745
00:28:56,880 --> 00:28:58,320
that these may or may not be

746
00:28:58,320 --> 00:29:00,799
patched yet the good news is the new

747
00:29:00,799 --> 00:29:02,880
mobile devices with integrated

748
00:29:02,880 --> 00:29:05,520
system on chips specific specifically

749
00:29:05,520 --> 00:29:08,159
for android and windows on snapdragon

750
00:29:08,159 --> 00:29:10,640
should be not affected by this issue

751
00:29:10,640 --> 00:29:13,120
other widespread wi-fi chips that were

752
00:29:13,120 --> 00:29:15,919
that we looked into were from mediatek

753
00:29:15,919 --> 00:29:18,000
we observed a vulnerable behavior very

754
00:29:18,000 --> 00:29:18,960
similar to the one

755
00:29:18,960 --> 00:29:21,600
observed on qualcomm devices on an older

756
00:29:21,600 --> 00:29:22,880
asus router

757
00:29:22,880 --> 00:29:25,440
but what was far more interesting we

758
00:29:25,440 --> 00:29:26,480
observed it

759
00:29:26,480 --> 00:29:28,080
on the current microsoft azure sphere

760
00:29:28,080 --> 00:29:30,600
development kit which uses mediatek

761
00:29:30,600 --> 00:29:34,080
mt-3630 microcontroller

762
00:29:34,080 --> 00:29:36,720
the mt3620 is a highly integrated

763
00:29:36,720 --> 00:29:39,440
high-performance iot mcu

764
00:29:39,440 --> 00:29:41,200
with the high level of security

765
00:29:41,200 --> 00:29:43,120
necessary for modern rubbers internet

766
00:29:43,120 --> 00:29:45,440
connected devices

767
00:29:45,440 --> 00:29:47,120
it targets wide range of iot

768
00:29:47,120 --> 00:29:49,440
applications including smart homes

769
00:29:49,440 --> 00:29:52,840
commercial industrial and many other

770
00:29:52,840 --> 00:29:54,799
domains

771
00:29:54,799 --> 00:29:56,320
we've contacted mediatek about this

772
00:29:56,320 --> 00:29:58,880
discovery discovered vulnerabilities

773
00:29:58,880 --> 00:30:01,760
mediatek has informed us that they aware

774
00:30:01,760 --> 00:30:02,799
of the issue

775
00:30:02,799 --> 00:30:06,000
and reviewed all wi-fi products and the

776
00:30:06,000 --> 00:30:07,760
corresponding software patches to

777
00:30:07,760 --> 00:30:09,279
impacted projects

778
00:30:09,279 --> 00:30:10,480
have been released to different

779
00:30:10,480 --> 00:30:13,600
customers around march and april already

780
00:30:13,600 --> 00:30:15,200
a separate question remains whether all

781
00:30:15,200 --> 00:30:17,120
device manufacturers have implemented

782
00:30:17,120 --> 00:30:19,360
these patches

783
00:30:19,360 --> 00:30:22,640
with regard to other sphere mt3620

784
00:30:22,640 --> 00:30:24,480
the patch should be integrated in the

785
00:30:24,480 --> 00:30:28,320
latest operational system update

786
00:30:28,640 --> 00:30:30,320
and how the one liberty manifested

787
00:30:30,320 --> 00:30:31,840
itself on mediatek devices

788
00:30:31,840 --> 00:30:34,399
very similar as on the qualcomm devices

789
00:30:34,399 --> 00:30:36,159
this is a very sharp lock

790
00:30:36,159 --> 00:30:38,799
of a residual frame after dissociation

791
00:30:38,799 --> 00:30:39,679
was invoked on

792
00:30:39,679 --> 00:30:43,120
azure sphere mt-3620

793
00:30:43,120 --> 00:30:45,360
as you can see the protected flag is set

794
00:30:45,360 --> 00:30:47,200
through

795
00:30:47,200 --> 00:30:49,520
but the frame doesn't have any ccmp

796
00:30:49,520 --> 00:30:51,679
parameters

797
00:30:51,679 --> 00:30:54,720
and the beginning of the data is falsely

798
00:30:54,720 --> 00:30:58,720
identified as a wep header

799
00:30:58,720 --> 00:31:01,600
here we didn't use icmp echo because of

800
00:31:01,600 --> 00:31:03,519
the device limitations

801
00:31:03,519 --> 00:31:05,600
but an application which sends udp

802
00:31:05,600 --> 00:31:08,159
friends with a simple pattern

803
00:31:08,159 --> 00:31:19,679
as you can see the frame isn't encrypted

804
00:31:19,679 --> 00:31:22,799
okay let's wrap up

805
00:31:23,279 --> 00:31:26,240
first a hat tip to matthew fanhof whose

806
00:31:26,240 --> 00:31:27,919
great research on crack

807
00:31:27,919 --> 00:31:30,640
brought us here in the first place then

808
00:31:30,640 --> 00:31:32,080
to all these companies

809
00:31:32,080 --> 00:31:34,480
with whom the cooperation went really

810
00:31:34,480 --> 00:31:35,600
smoothly

811
00:31:35,600 --> 00:31:37,360
and they responded to our disclosures

812
00:31:37,360 --> 00:31:38,640
professionally

813
00:31:38,640 --> 00:31:41,279
especially amazon the joint effort

814
00:31:41,279 --> 00:31:43,120
trying to get to the bottom of what was

815
00:31:43,120 --> 00:31:44,080
going on

816
00:31:44,080 --> 00:31:47,440
was stellar and there are a lot of other

817
00:31:47,440 --> 00:31:49,519
companies with whom we did not have

818
00:31:49,519 --> 00:31:51,919
that much cooperation but they also

819
00:31:51,919 --> 00:31:53,679
handled the situation well released

820
00:31:53,679 --> 00:31:56,320
patches and so on

821
00:31:56,320 --> 00:31:57,760
and we've been providing links to any

822
00:31:57,760 --> 00:32:00,399
security advisories we could find to our

823
00:32:00,399 --> 00:32:02,559
crook web page

824
00:32:02,559 --> 00:32:05,840
so what are the takeaways for you

825
00:32:05,840 --> 00:32:08,159
the source of crook and the other

826
00:32:08,159 --> 00:32:10,000
related vulnerabilities

827
00:32:10,000 --> 00:32:13,120
is the wi-fi chip unfortunately you

828
00:32:13,120 --> 00:32:14,399
don't have to go

829
00:32:14,399 --> 00:32:16,159
and replace the chips on all your

830
00:32:16,159 --> 00:32:18,720
devices how would you do that

831
00:32:18,720 --> 00:32:21,039
and you don't have to be throwing away

832
00:32:21,039 --> 00:32:23,120
your iphones either

833
00:32:23,120 --> 00:32:24,799
um no you can mitigate the

834
00:32:24,799 --> 00:32:26,960
vulnerabilities with a firmware or or

835
00:32:26,960 --> 00:32:29,039
driver update

836
00:32:29,039 --> 00:32:31,840
the obvious advice that arose from our

837
00:32:31,840 --> 00:32:33,840
initial crook discovery was

838
00:32:33,840 --> 00:32:36,399
make sure that all of your devices with

839
00:32:36,399 --> 00:32:38,240
broadcom or cypress chips

840
00:32:38,240 --> 00:32:41,200
are running the latest software versions

841
00:32:41,200 --> 00:32:43,279
now that device has its limitations

842
00:32:43,279 --> 00:32:44,880
though first

843
00:32:44,880 --> 00:32:47,440
as a regular user you often have no way

844
00:32:47,440 --> 00:32:48,159
of knowing

845
00:32:48,159 --> 00:32:51,760
what vendor made the chip in your device

846
00:32:51,760 --> 00:32:54,960
and secondly as it turned out

847
00:32:54,960 --> 00:32:57,519
other similar vulnerabilities affected

848
00:32:57,519 --> 00:33:00,080
chips by other manufacturers

849
00:33:00,080 --> 00:33:03,360
so we're going back to the almighty

850
00:33:03,360 --> 00:33:04,080
advice

851
00:33:04,080 --> 00:33:05,919
just better to make sure to keep all of

852
00:33:05,919 --> 00:33:08,960
your devices up to date

853
00:33:08,960 --> 00:33:10,720
and it goes for access points in wi-fi

854
00:33:10,720 --> 00:33:12,240
routers too

855
00:33:12,240 --> 00:33:14,799
because as stable talked about crook

856
00:33:14,799 --> 00:33:15,600
affects those

857
00:33:15,600 --> 00:33:21,120
too and it also affects wpa2 enterprise

858
00:33:21,120 --> 00:33:23,360
now in case you're a manufacturer of

859
00:33:23,360 --> 00:33:25,840
wi-fi capable devices yourself

860
00:33:25,840 --> 00:33:27,279
and you're hearing about crook for the

861
00:33:27,279 --> 00:33:29,840
first time i highly recommend you get in

862
00:33:29,840 --> 00:33:31,760
touch with the wi-fi alliance

863
00:33:31,760 --> 00:33:35,039
and your chip manufacturer

864
00:33:35,120 --> 00:33:38,399
a final general note many of those

865
00:33:38,399 --> 00:33:39,760
devices

866
00:33:39,760 --> 00:33:42,159
we talked about that were vulnerable

867
00:33:42,159 --> 00:33:43,840
like smartphones

868
00:33:43,840 --> 00:33:45,279
they get over-the-air updates

869
00:33:45,279 --> 00:33:47,840
automatically or the user is at least

870
00:33:47,840 --> 00:33:50,080
prompted to install them

871
00:33:50,080 --> 00:33:53,039
but others like some wi-fi routers for

872
00:33:53,039 --> 00:33:53,760
example

873
00:33:53,760 --> 00:33:56,080
need to be updated manually and this is

874
00:33:56,080 --> 00:33:57,760
often problematic

875
00:33:57,760 --> 00:34:00,240
it could lead to attack scenarios like

876
00:34:00,240 --> 00:34:00,799
those

877
00:34:00,799 --> 00:34:03,840
stefan talked about and this is cause

878
00:34:03,840 --> 00:34:06,159
for concern in normal situations

879
00:34:06,159 --> 00:34:08,239
but even more so when more people are

880
00:34:08,239 --> 00:34:09,440
working from home

881
00:34:09,440 --> 00:34:13,760
due to covet 19. so these are employees

882
00:34:13,760 --> 00:34:16,560
accessing corporate resources that are

883
00:34:16,560 --> 00:34:18,079
responsible for their own

884
00:34:18,079 --> 00:34:21,119
home wi-fi security so crook is

885
00:34:21,119 --> 00:34:23,280
something that company csos definitely

886
00:34:23,280 --> 00:34:26,800
need to be paying attention to

887
00:34:28,000 --> 00:34:29,839
for more technical details on the crook

888
00:34:29,839 --> 00:34:31,839
vulnerability check out our

889
00:34:31,839 --> 00:34:34,399
research paper for up-to-date

890
00:34:34,399 --> 00:34:35,199
information

891
00:34:35,199 --> 00:34:38,000
frequently asked questions the script

892
00:34:38,000 --> 00:34:39,679
that we used in the demo

893
00:34:39,679 --> 00:34:42,159
and links to vendor advisories go to

894
00:34:42,159 --> 00:34:43,760
this web page we created

895
00:34:43,760 --> 00:34:48,159
dedicated to crook

896
00:34:48,159 --> 00:34:50,639
thank you for watching do make sure to

897
00:34:50,639 --> 00:34:52,879
check out our lab's twitter account

898
00:34:52,879 --> 00:34:56,119
at eset research and our blog we

899
00:34:56,119 --> 00:34:57,599
livesecurity.com

900
00:34:57,599 --> 00:35:00,320
for the latest research updates and now

901
00:35:00,320 --> 00:35:00,960
we will take

902
00:35:00,960 --> 00:35:04,079
questions if there are any

903
00:35:06,720 --> 00:35:10,640
okay so thanks for watching the talk

904
00:35:10,640 --> 00:35:13,359
uh to answer the questions i think some

905
00:35:13,359 --> 00:35:14,800
were answered already so the first

906
00:35:14,800 --> 00:35:16,079
question with the

907
00:35:16,079 --> 00:35:19,359
with the eight a thumbs up uh

908
00:35:19,359 --> 00:35:20,960
yes that was answered in the

909
00:35:20,960 --> 00:35:23,280
presentation so it was passion software

910
00:35:23,280 --> 00:35:26,000
no need to throw your devices away um

911
00:35:26,000 --> 00:35:28,320
then there was the other question

912
00:35:28,320 --> 00:35:31,599
uh that you need to know the mac address

913
00:35:31,599 --> 00:35:32,400
in order to

914
00:35:32,400 --> 00:35:34,560
carry out the attack but that's easy to

915
00:35:34,560 --> 00:35:36,480
get

916
00:35:36,480 --> 00:35:39,200
um how do you know short of running the

917
00:35:39,200 --> 00:35:41,040
crook script against the device how do

918
00:35:41,040 --> 00:35:42,400
you know if it's been

919
00:35:42,400 --> 00:35:45,440
patched um that's a very good question

920
00:35:45,440 --> 00:35:45,760
and

921
00:35:45,760 --> 00:35:48,960
and we're not aware of like any good way

922
00:35:48,960 --> 00:35:50,880
apart from testing it or asking your

923
00:35:50,880 --> 00:35:52,480
device vendor so

924
00:35:52,480 --> 00:35:55,680
ask your device vendor um we are hosting

925
00:35:55,680 --> 00:35:57,440
the advisories that we're aware of

926
00:35:57,440 --> 00:36:00,720
on the website in case there are any

927
00:36:00,720 --> 00:36:03,040
uh manufacturers in the audience and you

928
00:36:03,040 --> 00:36:04,720
want your

929
00:36:04,720 --> 00:36:07,280
advisory listed there feel free to reach

930
00:36:07,280 --> 00:36:07,839
out to us

931
00:36:07,839 --> 00:36:12,560
too um so what else is there

932
00:36:12,560 --> 00:36:16,480
uh is it also feasible for 802.11

933
00:36:16,480 --> 00:36:19,520
ax chips um that's also a really good

934
00:36:19,520 --> 00:36:21,040
question

935
00:36:21,040 --> 00:36:23,200
it's and it's hard to answer uh because

936
00:36:23,200 --> 00:36:24,320
these are really fast

937
00:36:24,320 --> 00:36:26,640
and we did not have the hardware to test

938
00:36:26,640 --> 00:36:29,040
that i mean capturing them

939
00:36:29,040 --> 00:36:31,680
and and basically do performing the

940
00:36:31,680 --> 00:36:32,800
attack

941
00:36:32,800 --> 00:36:34,359
uh causing the dissociate

942
00:36:34,359 --> 00:36:36,400
disassociations on these types of chips

943
00:36:36,400 --> 00:36:37,599
would require

944
00:36:37,599 --> 00:36:39,839
uh much faster hardware than we had

945
00:36:39,839 --> 00:36:42,000
access to

946
00:36:42,000 --> 00:36:46,560
um we answered that

947
00:36:46,560 --> 00:36:50,400
um since the

948
00:36:50,400 --> 00:36:54,000
packet is still valid for the receiver

949
00:36:54,000 --> 00:36:57,040
would a man in the middle

950
00:36:57,359 --> 00:37:00,240
would a man in the middle be possible to

951
00:37:00,240 --> 00:37:03,040
recreate the original packet

952
00:37:03,040 --> 00:37:05,200
and put malicious in oh i think they're

953
00:37:05,200 --> 00:37:07,040
asking about the injection injection

954
00:37:07,040 --> 00:37:07,359
yeah

955
00:37:07,359 --> 00:37:10,240
yeah yeah uh the injection part is uh

956
00:37:10,240 --> 00:37:11,119
not possible

957
00:37:11,119 --> 00:37:14,480
we actually broke it up uh with broken

958
00:37:14,480 --> 00:37:18,400
and they assured us that the uh

959
00:37:18,400 --> 00:37:21,520
this is not possible what's it there are

960
00:37:21,520 --> 00:37:24,480
other factors that that come into play

961
00:37:24,480 --> 00:37:27,359
uh there you need to recreate some

962
00:37:27,359 --> 00:37:28,480
parameters

963
00:37:28,480 --> 00:37:32,079
uh of the data frames and and

964
00:37:32,079 --> 00:37:34,880
injection it requires a lot more seven

965
00:37:34,880 --> 00:37:37,359
is altogether a lot more difficult

966
00:37:37,359 --> 00:37:37,940
um

967
00:37:37,940 --> 00:37:40,880
[Music]

968
00:37:40,880 --> 00:37:44,400
where will the poc be posted um

969
00:37:44,400 --> 00:37:46,800
if you go to the links that we have in

970
00:37:46,800 --> 00:37:49,359
the presentation i think that should be

971
00:37:49,359 --> 00:37:52,720
available or if you just google crook

972
00:37:52,720 --> 00:37:55,839
eset it should guide you to a web page

973
00:37:55,839 --> 00:37:57,920
we have dedicated to this

974
00:37:57,920 --> 00:38:00,400
and from there uh you will see that or

975
00:38:00,400 --> 00:38:02,079
we also have it on our blog wheel of

976
00:38:02,079 --> 00:38:03,040
security

977
00:38:03,040 --> 00:38:05,200
and then on he said he said research his

978
00:38:05,200 --> 00:38:06,640
github page

979
00:38:06,640 --> 00:38:09,680
the script will be there

980
00:38:10,160 --> 00:38:11,599
and i believe we answered all the

981
00:38:11,599 --> 00:38:14,079
questions

982
00:38:16,000 --> 00:38:17,599
i was thinking at first that it was a

983
00:38:17,599 --> 00:38:19,040
wi-fi chip

984
00:38:19,040 --> 00:38:21,760
implemented by specific any ideas why it

985
00:38:21,760 --> 00:38:22,640
showed up in

986
00:38:22,640 --> 00:38:26,640
okay that's a good question um

987
00:38:29,440 --> 00:38:32,480
well we have to say that crook

988
00:38:32,480 --> 00:38:34,560
that specific cde that we talked about

989
00:38:34,560 --> 00:38:36,079
in the beginning

990
00:38:36,079 --> 00:38:39,440
that did not manifest itself on on uh

991
00:38:39,440 --> 00:38:42,400
qualcomm and mediatek uh so that was

992
00:38:42,400 --> 00:38:44,800
also assigned a different cve

993
00:38:44,800 --> 00:38:48,000
um they're similar but

994
00:38:48,000 --> 00:38:49,440
they they manifest themselves

995
00:38:49,440 --> 00:38:51,280
differently we haven't

996
00:38:51,280 --> 00:38:52,880
we don't know all the details about the

997
00:38:52,880 --> 00:38:54,800
chipset architecture of

998
00:38:54,800 --> 00:38:56,720
every single chipset manufacturer of

999
00:38:56,720 --> 00:38:58,880
course

1000
00:38:58,880 --> 00:39:00,960
we do think that the source also is

1001
00:39:00,960 --> 00:39:02,320
similar in that they're

1002
00:39:02,320 --> 00:39:04,720
you know the the actual transmit buffers

1003
00:39:04,720 --> 00:39:05,599
but yeah yeah

1004
00:39:05,599 --> 00:39:08,400
the thing is in the buffers they handle

1005
00:39:08,400 --> 00:39:09,359
probably the

1006
00:39:09,359 --> 00:39:11,760
different size of the buffers and that's

1007
00:39:11,760 --> 00:39:12,960
the that's the

1008
00:39:12,960 --> 00:39:18,000
point that uh we saw the

1009
00:39:18,000 --> 00:39:20,079
mitigation of the attack a bit later a

1010
00:39:20,079 --> 00:39:21,040
bit

1011
00:39:21,040 --> 00:39:29,839
but yeah there were similar architecture

1012
00:39:30,240 --> 00:39:34,480
uh venetia is asking tls so tns

1013
00:39:34,480 --> 00:39:37,760
can help a lot of course

1014
00:39:37,760 --> 00:39:39,920
because as as we mentioned in the in the

1015
00:39:39,920 --> 00:39:41,200
presentation

1016
00:39:41,200 --> 00:39:44,800
crook does not break tls uh so when you

1017
00:39:44,800 --> 00:39:46,880
when you're using tls or when you're

1018
00:39:46,880 --> 00:39:48,320
using a vpn that

1019
00:39:48,320 --> 00:39:50,079
should protect you from from this so

1020
00:39:50,079 --> 00:39:52,560
those of really really crook

1021
00:39:52,560 --> 00:39:56,000
uh breaks uh the level of

1022
00:39:56,000 --> 00:39:58,960
encryption that wpa2 itself is supposed

1023
00:39:58,960 --> 00:40:00,240
to give you

1024
00:40:00,240 --> 00:40:02,480
uh but tls does protection from a

1025
00:40:02,480 --> 00:40:04,319
different layer

1026
00:40:04,319 --> 00:40:06,560
um

1027
00:40:09,119 --> 00:40:12,319
no no it's not plausible for this attack

1028
00:40:12,319 --> 00:40:14,480
to be executed remotely

1029
00:40:14,480 --> 00:40:17,760
uh the attacker needs to be in close

1030
00:40:17,760 --> 00:40:21,359
proximity of the wi-fi

1031
00:40:22,839 --> 00:40:25,839
signal

1032
00:40:26,720 --> 00:40:28,640
that's actually actually as in stefan's

1033
00:40:28,640 --> 00:40:32,240
home in bratislava slovakia

1034
00:40:32,319 --> 00:40:36,880
the hammock okay so um

1035
00:40:36,880 --> 00:40:38,319
that's all the questions i believe thank

1036
00:40:38,319 --> 00:40:40,400
you very much for listening

1037
00:40:40,400 --> 00:40:44,079
and enjoy the rest of the conference

1038
00:40:44,480 --> 00:40:46,359
[Music]

1039
00:40:46,359 --> 00:40:49,359
bye

