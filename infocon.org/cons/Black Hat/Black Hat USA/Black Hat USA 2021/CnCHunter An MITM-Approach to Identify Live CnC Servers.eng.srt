1
00:00:01,130 --> 00:00:14,690
[Music]

2
00:00:14,799 --> 00:00:17,279
hello everyone i am ali davanian a

3
00:00:17,279 --> 00:00:20,320
fourth year phd candidate joining me is

4
00:00:20,320 --> 00:00:23,039
ahmad we are very thrilled to

5
00:00:23,039 --> 00:00:26,720
present our work cnc hunter

6
00:00:26,720 --> 00:00:29,679
iot malware is on the rise and you

7
00:00:29,679 --> 00:00:30,960
probably all

8
00:00:30,960 --> 00:00:33,040
already know about this

9
00:00:33,040 --> 00:00:35,440
the question is how can we defend

10
00:00:35,440 --> 00:00:37,920
against iot malware

11
00:00:37,920 --> 00:00:39,040
and a

12
00:00:39,040 --> 00:00:41,520
key piece of the puzzle here

13
00:00:41,520 --> 00:00:43,840
is the command and control server or the

14
00:00:43,840 --> 00:00:45,360
cnc

15
00:00:45,360 --> 00:00:47,360
uh if we knew where the command and

16
00:00:47,360 --> 00:00:50,000
control servers are located

17
00:00:50,000 --> 00:00:52,399
then the defense would be easy we can

18
00:00:52,399 --> 00:00:55,520
easily take down the botnet or we can

19
00:00:55,520 --> 00:00:58,640
blacklist them at our network perimeter

20
00:00:58,640 --> 00:01:01,520
and our iot devices within the network

21
00:01:01,520 --> 00:01:03,359
would be safe and this is essentially

22
00:01:03,359 --> 00:01:05,760
important for iot devices because of

23
00:01:05,760 --> 00:01:08,479
their limited computing resource we

24
00:01:08,479 --> 00:01:11,600
cannot afford more expensive solutions

25
00:01:11,600 --> 00:01:14,880
like antivirus on the device

26
00:01:14,880 --> 00:01:18,080
uh so our goal in this work is finding

27
00:01:18,080 --> 00:01:20,960
all the live cnc servers i want you to

28
00:01:20,960 --> 00:01:23,680
picture this for a second right imagine

29
00:01:23,680 --> 00:01:28,000
that we knew we're only live cnc servers

30
00:01:28,000 --> 00:01:31,040
are located right this is very exciting

31
00:01:31,040 --> 00:01:33,680
i've been thinking about this uh gets me

32
00:01:33,680 --> 00:01:34,799
excited

33
00:01:34,799 --> 00:01:37,280
uh if we had this information then

34
00:01:37,280 --> 00:01:39,439
taking down a botnet

35
00:01:39,439 --> 00:01:42,799
or defending against them would be easy

36
00:01:42,799 --> 00:01:45,200
so what do we have to start with as

37
00:01:45,200 --> 00:01:48,159
independent security researchers we have

38
00:01:48,159 --> 00:01:50,799
malware binaries we have access to some

39
00:01:50,799 --> 00:01:53,200
ip blacklist and we have partial

40
00:01:53,200 --> 00:01:55,520
information about malware communication

41
00:01:55,520 --> 00:01:56,880
protocols

42
00:01:56,880 --> 00:01:59,280
what we don't have is access to the

43
00:01:59,280 --> 00:02:02,000
network traffic and also access to

44
00:02:02,000 --> 00:02:05,280
antivirus companies sensors right

45
00:02:05,280 --> 00:02:07,759
given that let's review the previous

46
00:02:07,759 --> 00:02:09,520
approaches

47
00:02:09,520 --> 00:02:12,640
so one method to identify cnc server is

48
00:02:12,640 --> 00:02:14,879
to statically analyze the binary and

49
00:02:14,879 --> 00:02:16,800
find the ip addresses that it might

50
00:02:16,800 --> 00:02:18,160
contact

51
00:02:18,160 --> 00:02:20,400
the limitation with this approach is

52
00:02:20,400 --> 00:02:22,959
when the binary is obfuscated right so

53
00:02:22,959 --> 00:02:24,959
it sometimes wouldn't work

54
00:02:24,959 --> 00:02:27,920
the second approach is to execute and

55
00:02:27,920 --> 00:02:29,840
activate the binary let it generate

56
00:02:29,840 --> 00:02:32,800
traffic and then watch

57
00:02:32,800 --> 00:02:35,840
what eyepiece it tries to contact again

58
00:02:35,840 --> 00:02:37,680
the limitation with this approach is

59
00:02:37,680 --> 00:02:40,640
that the ip address might not be live

60
00:02:40,640 --> 00:02:42,720
the third approach is to infer the

61
00:02:42,720 --> 00:02:45,280
network protocol right the protocol that

62
00:02:45,280 --> 00:02:47,840
the iot malware tries to use

63
00:02:47,840 --> 00:02:50,560
and then scan the internet you look for

64
00:02:50,560 --> 00:02:52,879
finger prints based on the protocol

65
00:02:52,879 --> 00:02:55,920
inference and then find the cnc servers

66
00:02:55,920 --> 00:02:58,159
the limitation with this approach is

67
00:02:58,159 --> 00:03:00,640
that iot malware proto communication

68
00:03:00,640 --> 00:03:03,440
protocols are too complex these days

69
00:03:03,440 --> 00:03:05,440
uh and you cannot have a generic

70
00:03:05,440 --> 00:03:07,920
solution and uh encryption also adds to

71
00:03:07,920 --> 00:03:09,519
the problem

72
00:03:09,519 --> 00:03:11,680
finally we could passively monitor the

73
00:03:11,680 --> 00:03:14,959
internet look at the malware traffic

74
00:03:14,959 --> 00:03:16,319
and then

75
00:03:16,319 --> 00:03:19,120
find the uh cnc addresses that the

76
00:03:19,120 --> 00:03:21,440
malware might contact the limitation

77
00:03:21,440 --> 00:03:23,280
with this approach again is the size of

78
00:03:23,280 --> 00:03:26,239
the traffic and the diversity in the

79
00:03:26,239 --> 00:03:29,200
number of iot malware communication

80
00:03:29,200 --> 00:03:30,400
protocols

81
00:03:30,400 --> 00:03:33,040
so what do we propose we propose cnc

82
00:03:33,040 --> 00:03:34,159
hunter

83
00:03:34,159 --> 00:03:37,360
and our solution is a novel solution

84
00:03:37,360 --> 00:03:40,560
that allows you to probe do the probing

85
00:03:40,560 --> 00:03:43,840
and cnc discovery using the real malware

86
00:03:43,840 --> 00:03:46,560
right so for the probing we don't want

87
00:03:46,560 --> 00:03:49,120
to understand the communication protocol

88
00:03:49,120 --> 00:03:52,319
but we want to use the real malware to

89
00:03:52,319 --> 00:03:54,640
uh communicate with the

90
00:03:54,640 --> 00:03:57,439
uh potential addresses that we might

91
00:03:57,439 --> 00:04:01,599
think uh are hosting cnc servers right

92
00:04:01,599 --> 00:04:04,080
uh as far as we know we are the first

93
00:04:04,080 --> 00:04:05,760
open source tool

94
00:04:05,760 --> 00:04:08,080
uh and we are specifically designing

95
00:04:08,080 --> 00:04:11,760
this tool for finding iot malware cncs

96
00:04:11,760 --> 00:04:14,159
uh the way we do this is by activating

97
00:04:14,159 --> 00:04:16,320
the iot malware meaning that we actually

98
00:04:16,320 --> 00:04:18,238
execute the malware we let it

99
00:04:18,238 --> 00:04:21,040
communicate with the outside world

100
00:04:21,040 --> 00:04:24,080
and uh we use many-in-the-middle

101
00:04:24,080 --> 00:04:25,520
techniques to

102
00:04:25,520 --> 00:04:28,800
redirect the cnc traffic to some uh

103
00:04:28,800 --> 00:04:30,800
candidate addresses these addresses are

104
00:04:30,800 --> 00:04:33,919
inputs we suspect that they might host

105
00:04:33,919 --> 00:04:36,320
uh cnc servers

106
00:04:36,320 --> 00:04:37,199
right

107
00:04:37,199 --> 00:04:39,520
uh with that uh this is the overview of

108
00:04:39,520 --> 00:04:41,680
the talk we are gonna cover some basics

109
00:04:41,680 --> 00:04:43,280
and then we are going to spend the rest

110
00:04:43,280 --> 00:04:44,400
of the talk

111
00:04:44,400 --> 00:04:45,280
uh

112
00:04:45,280 --> 00:04:47,520
discussing cnc hunter design and

113
00:04:47,520 --> 00:04:50,080
implementation okay so let's start with

114
00:04:50,080 --> 00:04:52,240
iot communication

115
00:04:52,240 --> 00:04:54,800
protocols now i don't want you to read

116
00:04:54,800 --> 00:04:57,919
over the text and learn every bit of uh

117
00:04:57,919 --> 00:05:00,080
detail about the iot

118
00:05:00,080 --> 00:05:02,639
malware communication protocols what i

119
00:05:02,639 --> 00:05:05,039
want you to see though is that the

120
00:05:05,039 --> 00:05:07,360
communication protocols are kind of

121
00:05:07,360 --> 00:05:10,240
diverse here right so we have custom

122
00:05:10,240 --> 00:05:12,160
application layer protocols that are

123
00:05:12,160 --> 00:05:15,520
binary based some are text-based we have

124
00:05:15,520 --> 00:05:17,360
sometimes encryption

125
00:05:17,360 --> 00:05:20,000
and this really makes generic probing

126
00:05:20,000 --> 00:05:22,160
very hard right if we were dealing with

127
00:05:22,160 --> 00:05:24,560
only one application layer protocol then

128
00:05:24,560 --> 00:05:26,800
probably we could design a probing

129
00:05:26,800 --> 00:05:30,000
technique and scandinavia right and

130
00:05:30,000 --> 00:05:33,120
scanning and you know actively probing

131
00:05:33,120 --> 00:05:36,000
is very important here

132
00:05:36,000 --> 00:05:38,479
uh if you look at the communication

133
00:05:38,479 --> 00:05:39,840
protocols

134
00:05:39,840 --> 00:05:43,280
then uh within a single family what we

135
00:05:43,280 --> 00:05:46,240
find is that they barely change right so

136
00:05:46,240 --> 00:05:48,160
what i'm going to show you in this slide

137
00:05:48,160 --> 00:05:49,039
is

138
00:05:49,039 --> 00:05:52,960
a generic irc say server communication

139
00:05:52,960 --> 00:05:56,080
with a gasket malware sample

140
00:05:56,080 --> 00:05:57,280
uh

141
00:05:57,280 --> 00:05:59,840
this is not the cnc server for the

142
00:05:59,840 --> 00:06:01,199
sample right

143
00:06:01,199 --> 00:06:04,240
but uh we made the sample talk to this

144
00:06:04,240 --> 00:06:06,400
generic irc server and it actually

145
00:06:06,400 --> 00:06:08,960
successfully communicated with it right

146
00:06:08,960 --> 00:06:11,120
the reason we chose gaffit is because

147
00:06:11,120 --> 00:06:13,600
it's textbit so it's easier for you to

148
00:06:13,600 --> 00:06:14,560
follow

149
00:06:14,560 --> 00:06:16,960
so the communication starts with the tcp

150
00:06:16,960 --> 00:06:19,680
handshake and after the tcp handshake

151
00:06:19,680 --> 00:06:21,600
the malware sends

152
00:06:21,600 --> 00:06:25,280
the irc nic command right the server

153
00:06:25,280 --> 00:06:28,560
responds and after that the malware

154
00:06:28,560 --> 00:06:31,360
sends a mode request right this is again

155
00:06:31,360 --> 00:06:34,319
an irc command the server responds and

156
00:06:34,319 --> 00:06:37,520
again uh the malware communicates it at

157
00:06:37,520 --> 00:06:39,840
this time it sends a join command says i

158
00:06:39,840 --> 00:06:42,400
want to join this irc channel the server

159
00:06:42,400 --> 00:06:44,319
again responds and then the malware

160
00:06:44,319 --> 00:06:45,520
finishes

161
00:06:45,520 --> 00:06:48,319
with a who request right to which again

162
00:06:48,319 --> 00:06:50,800
the server responds now here's the

163
00:06:50,800 --> 00:06:54,560
interesting fact using the same irc uh

164
00:06:54,560 --> 00:06:55,520
server

165
00:06:55,520 --> 00:06:57,840
it's a it's a generic server again it's

166
00:06:57,840 --> 00:07:00,960
not a cnc server we could communicate

167
00:07:00,960 --> 00:07:01,880
with

168
00:07:01,880 --> 00:07:05,599
99.5 percent of the gasket samples right

169
00:07:05,599 --> 00:07:08,800
and this is very exciting because this

170
00:07:08,800 --> 00:07:11,039
provides an opportunity for us right

171
00:07:11,039 --> 00:07:14,160
only with one gasket sample possibly old

172
00:07:14,160 --> 00:07:15,759
right uh

173
00:07:15,759 --> 00:07:19,440
years uh four years old malware samples

174
00:07:19,440 --> 00:07:22,880
we can search go and search for the cnc

175
00:07:22,880 --> 00:07:24,800
servers that are live right for the

176
00:07:24,800 --> 00:07:26,400
entire family

177
00:07:26,400 --> 00:07:29,120
and we need to do this because uh

178
00:07:29,120 --> 00:07:31,759
probably we are not aware of most of the

179
00:07:31,759 --> 00:07:33,440
cnc servers

180
00:07:33,440 --> 00:07:36,400
that are live and we didn't know they

181
00:07:36,400 --> 00:07:38,479
exist so what we did we manually

182
00:07:38,479 --> 00:07:41,840
analyzed 100 iot samples and we found

183
00:07:41,840 --> 00:07:44,319
their cnc servers right we started with

184
00:07:44,319 --> 00:07:47,280
the samples that were four years old

185
00:07:47,280 --> 00:07:50,800
and what we found is that only 3.5 of

186
00:07:50,800 --> 00:07:54,319
the samples have a live cnc server right

187
00:07:54,319 --> 00:07:57,039
so we reduce the age of the malware

188
00:07:57,039 --> 00:08:00,319
and this time we analyzed samples that

189
00:08:00,319 --> 00:08:01,240
were

190
00:08:01,240 --> 00:08:05,199
142 days old in this case uh none of the

191
00:08:05,199 --> 00:08:08,080
samples had a live cnc server

192
00:08:08,080 --> 00:08:11,039
we continued we again reduced the age of

193
00:08:11,039 --> 00:08:12,400
the malware by

194
00:08:12,400 --> 00:08:15,039
one order of magnitude and this times

195
00:08:15,039 --> 00:08:18,400
this time we analyze samples that

196
00:08:18,400 --> 00:08:21,919
were two weeks old and in this case 14

197
00:08:21,919 --> 00:08:24,400
of the samples had a live cnc server the

198
00:08:24,400 --> 00:08:27,280
the best we could do or you could do is

199
00:08:27,280 --> 00:08:30,160
analyzing samples that are one day old

200
00:08:30,160 --> 00:08:32,719
and in this case uh roughly half of the

201
00:08:32,719 --> 00:08:34,080
samples

202
00:08:34,080 --> 00:08:37,200
had a live cnc server what this means is

203
00:08:37,200 --> 00:08:40,399
that half of the other samples have a

204
00:08:40,399 --> 00:08:43,519
cnc seller that already moved to a new

205
00:08:43,519 --> 00:08:45,600
location right

206
00:08:45,600 --> 00:08:49,279
uh so these samples are hidden and we

207
00:08:49,279 --> 00:08:50,399
need to

208
00:08:50,399 --> 00:08:53,200
actually actively probe the internet and

209
00:08:53,200 --> 00:08:54,800
find them and with this i'm going to

210
00:08:54,800 --> 00:08:58,720
give the floor to my friend ahmad turkey

211
00:08:58,720 --> 00:09:00,399
thank you ali

212
00:09:00,399 --> 00:09:02,720
so in this part we're going to look into

213
00:09:02,720 --> 00:09:04,000
what are the

214
00:09:04,000 --> 00:09:06,240
active research or whatever has been

215
00:09:06,240 --> 00:09:09,600
done previously in identifying live cnc

216
00:09:09,600 --> 00:09:12,320
servers so there is this concept of

217
00:09:12,320 --> 00:09:14,720
active probing you send out certain

218
00:09:14,720 --> 00:09:16,880
traffic to the internet and doing

219
00:09:16,880 --> 00:09:18,720
scanning and then when there is a

220
00:09:18,720 --> 00:09:20,480
successful connection or there's a

221
00:09:20,480 --> 00:09:23,920
successful uh communication in general

222
00:09:23,920 --> 00:09:27,120
you deem uh the endpoint as a potential

223
00:09:27,120 --> 00:09:28,640
cnc server

224
00:09:28,640 --> 00:09:30,720
now we're gonna look into this from an

225
00:09:30,720 --> 00:09:33,680
iot uh malware perspective we're gonna

226
00:09:33,680 --> 00:09:37,360
look into mirai malware mirai had been

227
00:09:37,360 --> 00:09:40,800
uh notoriously famous for their uh the

228
00:09:40,800 --> 00:09:43,440
volumetric uh ddos attack that they

229
00:09:43,440 --> 00:09:46,959
carried out in both september 2016 on

230
00:09:46,959 --> 00:09:48,880
kryptonsecurity.com

231
00:09:48,880 --> 00:09:52,080
and october 2016 when they carried out

232
00:09:52,080 --> 00:09:55,680
the biggest ddos attack on dying dns and

233
00:09:55,680 --> 00:09:57,760
resulted in disrupting github twitter

234
00:09:57,760 --> 00:10:00,240
and some of the major uh you know

235
00:10:00,240 --> 00:10:03,360
services like spotify shopify and all of

236
00:10:03,360 --> 00:10:05,920
those and the source code was released

237
00:10:05,920 --> 00:10:08,640
and that led to a lot more

238
00:10:08,640 --> 00:10:12,000
malware samples coming from this malware

239
00:10:12,000 --> 00:10:15,440
family that you can see it in any

240
00:10:15,440 --> 00:10:17,760
malware repositories that

241
00:10:17,760 --> 00:10:20,160
the malware family with the highest

242
00:10:20,160 --> 00:10:23,040
number of samples is something like

243
00:10:23,040 --> 00:10:25,120
exactly mirai

244
00:10:25,120 --> 00:10:27,920
so we're going to look into how does the

245
00:10:27,920 --> 00:10:30,560
communication look like when a malware

246
00:10:30,560 --> 00:10:34,160
like mirai infects a an iot device and

247
00:10:34,160 --> 00:10:35,760
how does an active probing would look

248
00:10:35,760 --> 00:10:38,399
like so for an active probing say an

249
00:10:38,399 --> 00:10:40,880
infection has happened and

250
00:10:40,880 --> 00:10:43,120
malware will send out

251
00:10:43,120 --> 00:10:45,519
after initiating a scene the tcp

252
00:10:45,519 --> 00:10:47,920
connection with the cnc server it will

253
00:10:47,920 --> 00:10:51,279
send out a byte pattern uh for in this

254
00:10:51,279 --> 00:10:53,519
example it's it could be

255
00:10:53,519 --> 00:10:56,399
zero zero zeros and the one at the end

256
00:10:56,399 --> 00:10:58,720
and then the server acts the whatever

257
00:10:58,720 --> 00:11:01,760
packet it receives and then uh it uh the

258
00:11:01,760 --> 00:11:04,079
bot would proceed with authenticating

259
00:11:04,079 --> 00:11:06,079
itself sort of like sending certain

260
00:11:06,079 --> 00:11:07,839
patterns so that the cnc server would

261
00:11:07,839 --> 00:11:09,600
know this is a button

262
00:11:09,600 --> 00:11:11,279
um

263
00:11:11,279 --> 00:11:14,320
a botnet instance and then uh it will

264
00:11:14,320 --> 00:11:16,560
continue the connection and they will uh

265
00:11:16,560 --> 00:11:18,240
maintain the connection like going back

266
00:11:18,240 --> 00:11:19,440
and forth like something like a ping

267
00:11:19,440 --> 00:11:21,120
pong and after that when there is a

268
00:11:21,120 --> 00:11:23,839
successful uh recruitment of the butt

269
00:11:23,839 --> 00:11:26,959
the cnc will command the uh bob to for

270
00:11:26,959 --> 00:11:30,240
instance start doing a dos attack or or

271
00:11:30,240 --> 00:11:32,320
something like that on crimson security

272
00:11:32,320 --> 00:11:35,040
for instance on certain port

273
00:11:35,040 --> 00:11:36,720
so this is how the active probing would

274
00:11:36,720 --> 00:11:39,360
look like on the other hand we do things

275
00:11:39,360 --> 00:11:42,320
a little bit differently we look into

276
00:11:42,320 --> 00:11:44,640
actually using a malware

277
00:11:44,640 --> 00:11:47,279
malwarebinder and sets of ip address uh

278
00:11:47,279 --> 00:11:49,440
and then port numbers

279
00:11:49,440 --> 00:11:51,760
to do the probing for us

280
00:11:51,760 --> 00:11:55,040
and the way we are doing it we pro uh we

281
00:11:55,040 --> 00:11:57,440
look into the malware using some static

282
00:11:57,440 --> 00:12:00,320
analysis uh information to create an

283
00:12:00,320 --> 00:12:02,560
effective emulation mechanism so that we

284
00:12:02,560 --> 00:12:04,959
can have the malware start executing

285
00:12:04,959 --> 00:12:07,600
properly and then we do the recording on

286
00:12:07,600 --> 00:12:10,079
this traffic and we uh identify what is

287
00:12:10,079 --> 00:12:11,839
what is the cnc server is trying to

288
00:12:11,839 --> 00:12:13,839
communicate with and then we redirect

289
00:12:13,839 --> 00:12:17,360
that to the input ip addresses that uh

290
00:12:17,360 --> 00:12:18,959
we have

291
00:12:18,959 --> 00:12:19,760
so

292
00:12:19,760 --> 00:12:21,839
going a little bit into details of how

293
00:12:21,839 --> 00:12:23,760
the sandbox and the profile module would

294
00:12:23,760 --> 00:12:26,720
look like so in this project we're using

295
00:12:26,720 --> 00:12:28,000
kmu

296
00:12:28,000 --> 00:12:29,839
kmu enables

297
00:12:29,839 --> 00:12:32,240
emulating

298
00:12:32,240 --> 00:12:35,600
some of the not common cpu architectures

299
00:12:35,600 --> 00:12:38,800
like mips power pc or mips cell

300
00:12:38,800 --> 00:12:40,800
so this is something that we chose to go

301
00:12:40,800 --> 00:12:41,600
with

302
00:12:41,600 --> 00:12:43,120
um and then we are

303
00:12:43,120 --> 00:12:45,600
uh we are attaching kernel to it so that

304
00:12:45,600 --> 00:12:47,760
we will have the kenya running and then

305
00:12:47,760 --> 00:12:50,160
we will also attach file system to it

306
00:12:50,160 --> 00:12:52,560
this will allow us to have

307
00:12:52,560 --> 00:12:54,399
some sort of a recording

308
00:12:54,399 --> 00:12:57,680
and snapshotting of whatever uh the

309
00:12:57,680 --> 00:13:00,480
malware is doing in the recording it's

310
00:13:00,480 --> 00:13:03,600
you know a system called traces um and

311
00:13:03,600 --> 00:13:05,040
so on and so forth

312
00:13:05,040 --> 00:13:09,040
we also attach a tap device to

313
00:13:09,040 --> 00:13:10,079
the

314
00:13:10,079 --> 00:13:12,480
2k mute so that we can redirect the

315
00:13:12,480 --> 00:13:14,000
traffic to

316
00:13:14,000 --> 00:13:15,279
the proxy that

317
00:13:15,279 --> 00:13:17,920
later we will get into and tap device

318
00:13:17,920 --> 00:13:21,279
would also allow us to

319
00:13:21,279 --> 00:13:24,000
do a recording of network traffic

320
00:13:24,000 --> 00:13:26,800
and later we will what we call it up

321
00:13:26,800 --> 00:13:30,240
implanting the malware into the uh

322
00:13:30,240 --> 00:13:34,399
emulation so that uh so that we can uh

323
00:13:34,399 --> 00:13:37,040
realistically execute the malware

324
00:13:37,040 --> 00:13:38,639
collected

325
00:13:38,639 --> 00:13:41,519
and then recorded system called traces

326
00:13:41,519 --> 00:13:44,720
and have everything uh collected like

327
00:13:44,720 --> 00:13:47,920
execution uh is entirely collected via

328
00:13:47,920 --> 00:13:51,279
the profiler which will later on will be

329
00:13:51,279 --> 00:13:52,959
fed into other

330
00:13:52,959 --> 00:13:55,839
parts of the cnc hunter

331
00:13:55,839 --> 00:13:58,639
with that i will yield back to ali

332
00:13:58,639 --> 00:14:01,199
please ali take it away

333
00:14:01,199 --> 00:14:03,839
thank you ahmed uh so

334
00:14:03,839 --> 00:14:06,560
for the rest of the talk i'm gonna uh

335
00:14:06,560 --> 00:14:08,880
discuss the details of the mitm

336
00:14:08,880 --> 00:14:10,959
component and already covered the

337
00:14:10,959 --> 00:14:14,320
sandbox component of cnc hunter

338
00:14:14,320 --> 00:14:16,959
uh the goal of uh demanding the middle

339
00:14:16,959 --> 00:14:19,600
component mitm component is to redirect

340
00:14:19,600 --> 00:14:22,480
the cnc traffic to candidate addresses

341
00:14:22,480 --> 00:14:24,399
as we mentioned a few times these

342
00:14:24,399 --> 00:14:27,279
candidate addresses are inputs right we

343
00:14:27,279 --> 00:14:30,480
suspect that they are hosting cnc uh

344
00:14:30,480 --> 00:14:33,519
servers the man in the middle

345
00:14:33,519 --> 00:14:34,880
is

346
00:14:34,880 --> 00:14:37,120
ip based here

347
00:14:37,120 --> 00:14:40,480
and uh we are gonna tap the traffic and

348
00:14:40,480 --> 00:14:42,720
also provide internet from the sammers

349
00:14:42,720 --> 00:14:45,040
right uh so we are actually men in the

350
00:14:45,040 --> 00:14:47,279
middling the real traffic that goes to

351
00:14:47,279 --> 00:14:50,079
internet all right so let's start with

352
00:14:50,079 --> 00:14:53,519
uh the design alternatives that we have

353
00:14:53,519 --> 00:14:54,320
uh

354
00:14:54,320 --> 00:14:57,440
for placing the mitm module right where

355
00:14:57,440 --> 00:15:00,320
should we place this mitm module we have

356
00:15:00,320 --> 00:15:02,480
the sandbox module right the maverick

357
00:15:02,480 --> 00:15:05,199
executes there you also have the network

358
00:15:05,199 --> 00:15:09,600
perimeter and that uh as i said proxies

359
00:15:09,600 --> 00:15:12,560
the traffic to the internet right

360
00:15:12,560 --> 00:15:16,079
zooming in uh the sandbox component

361
00:15:16,079 --> 00:15:17,680
there are different parts there is the

362
00:15:17,680 --> 00:15:21,040
qmu component that runs the an operating

363
00:15:21,040 --> 00:15:23,519
system with the malware that malware

364
00:15:23,519 --> 00:15:26,480
executes in the user space and for every

365
00:15:26,480 --> 00:15:29,279
network request it sends the request to

366
00:15:29,279 --> 00:15:31,759
the network driver which resides in the

367
00:15:31,759 --> 00:15:35,440
os kernel and this network driver driver

368
00:15:35,440 --> 00:15:37,680
closely communicates with the sandbox

369
00:15:37,680 --> 00:15:39,600
driver handler right

370
00:15:39,600 --> 00:15:42,160
three of the design alternatives that we

371
00:15:42,160 --> 00:15:43,040
have

372
00:15:43,040 --> 00:15:45,839
uh would be placing the

373
00:15:45,839 --> 00:15:47,680
mitm module

374
00:15:47,680 --> 00:15:48,560
uh

375
00:15:48,560 --> 00:15:52,079
at this sandbox component different

376
00:15:52,079 --> 00:15:54,079
parts of the sandbox component they

377
00:15:54,079 --> 00:15:56,240
suffer all from the same problem and the

378
00:15:56,240 --> 00:15:58,240
problem is that if we

379
00:15:58,240 --> 00:16:00,000
wanted to

380
00:16:00,000 --> 00:16:04,240
go for a solution like this we had to

381
00:16:04,240 --> 00:16:07,440
provide an implementation for every

382
00:16:07,440 --> 00:16:08,959
different

383
00:16:08,959 --> 00:16:11,199
you know implementation that there is

384
00:16:11,199 --> 00:16:13,279
for the layer for instance different

385
00:16:13,279 --> 00:16:15,120
operating systems

386
00:16:15,120 --> 00:16:17,440
uh on the other hand we can you know

387
00:16:17,440 --> 00:16:20,639
place the mi atm module

388
00:16:20,639 --> 00:16:22,800
at the network perimeter and this is our

389
00:16:22,800 --> 00:16:24,639
choice it doesn't have the previous

390
00:16:24,639 --> 00:16:25,839
problems

391
00:16:25,839 --> 00:16:27,279
right so

392
00:16:27,279 --> 00:16:30,399
uh we would place the mitm module at the

393
00:16:30,399 --> 00:16:32,880
network perimeter and

394
00:16:32,880 --> 00:16:36,240
our goal is to replace the original cnc

395
00:16:36,240 --> 00:16:38,160
address that the malware tries to

396
00:16:38,160 --> 00:16:40,240
communicate with with the candidate

397
00:16:40,240 --> 00:16:42,320
address right and this candidate address

398
00:16:42,320 --> 00:16:44,320
is an input

399
00:16:44,320 --> 00:16:46,800
so if we were to write the rule for ip

400
00:16:46,800 --> 00:16:49,199
tables it would look like this right we

401
00:16:49,199 --> 00:16:51,920
would simply tell iptables to

402
00:16:51,920 --> 00:16:55,360
replace the uh original rp address with

403
00:16:55,360 --> 00:16:58,480
the input ip address that we want right

404
00:16:58,480 --> 00:17:00,240
however this wouldn't work

405
00:17:00,240 --> 00:17:01,279
right

406
00:17:01,279 --> 00:17:03,600
uh we spent quite some time trying to

407
00:17:03,600 --> 00:17:05,679
figure out how we can you know make

408
00:17:05,679 --> 00:17:06,799
iptel

409
00:17:06,799 --> 00:17:09,679
ip tables work and do this by default ip

410
00:17:09,679 --> 00:17:12,000
tables wouldn't allow this so we are

411
00:17:12,000 --> 00:17:14,880
stuck right what should we do

412
00:17:14,880 --> 00:17:16,319
and uh

413
00:17:16,319 --> 00:17:19,439
after you know some time and kind of

414
00:17:19,439 --> 00:17:21,439
banging our head we

415
00:17:21,439 --> 00:17:23,359
came up with a creative solution the

416
00:17:23,359 --> 00:17:25,839
solution is to move the iep tables from

417
00:17:25,839 --> 00:17:28,799
the network perimeter to the sandbox and

418
00:17:28,799 --> 00:17:31,360
if we do so then we can change the rule

419
00:17:31,360 --> 00:17:32,400
to

420
00:17:32,400 --> 00:17:35,440
from the post routing chain to the

421
00:17:35,440 --> 00:17:37,760
output chain and then this works right

422
00:17:37,760 --> 00:17:39,440
this allows us to

423
00:17:39,440 --> 00:17:42,080
uh replace the ip address with something

424
00:17:42,080 --> 00:17:45,600
that we want great now we have the man

425
00:17:45,600 --> 00:17:47,360
in the middle functionality we can

426
00:17:47,360 --> 00:17:50,320
redirect the traffic but how about the

427
00:17:50,320 --> 00:17:53,200
dns based cnc addresses right as i said

428
00:17:53,200 --> 00:17:55,760
iptables is ip based we don't know

429
00:17:55,760 --> 00:17:58,720
anything about dns in iep tables how can

430
00:17:58,720 --> 00:18:01,120
we handle dns based cnc addresses and

431
00:18:01,120 --> 00:18:04,799
the answer is we need to manipulate the

432
00:18:04,799 --> 00:18:08,320
local dns resolution process we actually

433
00:18:08,320 --> 00:18:11,360
need to resolve the cnc dns address the

434
00:18:11,360 --> 00:18:14,480
original uh address dns address that the

435
00:18:14,480 --> 00:18:16,720
malware tries to communicate with

436
00:18:16,720 --> 00:18:20,160
uh with the candidate address right that

437
00:18:20,160 --> 00:18:21,520
we provide

438
00:18:21,520 --> 00:18:24,160
uh how do we do that so it turns out

439
00:18:24,160 --> 00:18:26,000
there's a uh

440
00:18:26,000 --> 00:18:28,799
we tried different things the clean and

441
00:18:28,799 --> 00:18:31,200
easy solution is to change the

442
00:18:31,200 --> 00:18:32,880
uh host file

443
00:18:32,880 --> 00:18:36,559
uh on the guest operating system and add

444
00:18:36,559 --> 00:18:39,200
a line that says in the host file that

445
00:18:39,200 --> 00:18:43,039
says translate resolve this dns address

446
00:18:43,039 --> 00:18:45,360
to the candidate ip address again the

447
00:18:45,360 --> 00:18:47,760
candidate address is suspected to host

448
00:18:47,760 --> 00:18:49,440
the cnc server

449
00:18:49,440 --> 00:18:51,840
great okay so we have the mitm function

450
00:18:51,840 --> 00:18:54,400
already the next question is what

451
00:18:54,400 --> 00:18:56,880
traffic should be redirected right

452
00:18:56,880 --> 00:18:59,120
uh probably you know it by now only the

453
00:18:59,120 --> 00:19:02,000
traffic to the cnc but is it the only

454
00:19:02,000 --> 00:19:03,840
traffic that the malware generates the

455
00:19:03,840 --> 00:19:06,160
answer is no right so there are other

456
00:19:06,160 --> 00:19:07,919
types of traffic that the matter would

457
00:19:07,919 --> 00:19:10,240
generate there's the traffic for

458
00:19:10,240 --> 00:19:12,240
scanning the malware goes and scan

459
00:19:12,240 --> 00:19:14,480
different ports to find vulnerable hosts

460
00:19:14,480 --> 00:19:16,160
and you know infect them as well there's

461
00:19:16,160 --> 00:19:18,000
the background traffic that comes from

462
00:19:18,000 --> 00:19:20,240
the virtual machine and every now and

463
00:19:20,240 --> 00:19:22,720
then the malware some malware uh

464
00:19:22,720 --> 00:19:25,520
generated random traffic to for instance

465
00:19:25,520 --> 00:19:28,559
google or other addresses so fun finding

466
00:19:28,559 --> 00:19:31,600
the traffic is to the cnc is actually

467
00:19:31,600 --> 00:19:33,039
not trivial

468
00:19:33,039 --> 00:19:35,760
uh here you can see a snapshot of the

469
00:19:35,760 --> 00:19:37,120
new

470
00:19:37,120 --> 00:19:39,679
uh traffic you know this is just a

471
00:19:39,679 --> 00:19:41,440
portion of the traffic that mirai

472
00:19:41,440 --> 00:19:44,240
generates there is the cnc address in

473
00:19:44,240 --> 00:19:45,919
this traffic

474
00:19:45,919 --> 00:19:47,520
and what we are going to do we are going

475
00:19:47,520 --> 00:19:50,880
to start uh from some observations right

476
00:19:50,880 --> 00:19:53,600
something some observations that we have

477
00:19:53,600 --> 00:19:56,799
about the cnc traffic cnc address

478
00:19:56,799 --> 00:19:59,200
uh so the

479
00:19:59,200 --> 00:20:02,480
logic here is that the cnc address is

480
00:20:02,480 --> 00:20:04,559
going to be contacted quite uh

481
00:20:04,559 --> 00:20:06,480
frequently by the malware

482
00:20:06,480 --> 00:20:08,960
and the port that the

483
00:20:08,960 --> 00:20:12,000
cnc address has right the cnc server has

484
00:20:12,000 --> 00:20:14,400
is kind of unique now if you take all

485
00:20:14,400 --> 00:20:16,000
the ports that the malware tries to

486
00:20:16,000 --> 00:20:18,720
communicate with the one that belongs to

487
00:20:18,720 --> 00:20:21,120
the cnc server is kind of unique there

488
00:20:21,120 --> 00:20:23,919
are the details i'm not going to cover

489
00:20:23,919 --> 00:20:25,120
them now

490
00:20:25,120 --> 00:20:27,280
but let's go to the you know the main

491
00:20:27,280 --> 00:20:29,360
part that is

492
00:20:29,360 --> 00:20:31,840
the frequency of the connection to the

493
00:20:31,840 --> 00:20:34,640
cnc address and the port

494
00:20:34,640 --> 00:20:36,159
so what we are going to use is the

495
00:20:36,159 --> 00:20:39,120
parshark for the traffic analysis

496
00:20:39,120 --> 00:20:41,600
and we would have an algorithm that

497
00:20:41,600 --> 00:20:44,960
helps us identify the cnc address so

498
00:20:44,960 --> 00:20:46,159
what we are going to do we are going to

499
00:20:46,159 --> 00:20:48,559
assign a score to each iv address in the

500
00:20:48,559 --> 00:20:51,120
malware traffic and the s core is based

501
00:20:51,120 --> 00:20:52,880
on the observations that i just

502
00:20:52,880 --> 00:20:55,440
mentioned right we know that this score

503
00:20:55,440 --> 00:20:57,520
is proportionally related to the

504
00:20:57,520 --> 00:21:00,799
connection frequency and it's inversely

505
00:21:00,799 --> 00:21:03,039
proportional to the port frequency right

506
00:21:03,039 --> 00:21:06,080
so we can uh write this simple formula

507
00:21:06,080 --> 00:21:08,880
that the score uh is

508
00:21:08,880 --> 00:21:10,720
a connection frequency over port

509
00:21:10,720 --> 00:21:13,679
frequency times a coefficient right and

510
00:21:13,679 --> 00:21:14,720
the

511
00:21:14,720 --> 00:21:17,360
cnc address is the one that has the

512
00:21:17,360 --> 00:21:19,039
highest score

513
00:21:19,039 --> 00:21:22,159
right great so now we have this formula

514
00:21:22,159 --> 00:21:24,559
how do we calculate connection frequency

515
00:21:24,559 --> 00:21:26,559
and port frequency

516
00:21:26,559 --> 00:21:29,280
we have two data structures uh we store

517
00:21:29,280 --> 00:21:31,039
the connection frequency and port

518
00:21:31,039 --> 00:21:32,880
frequency in these data structures so

519
00:21:32,880 --> 00:21:35,919
the first data structure stores the data

520
00:21:35,919 --> 00:21:38,559
about the connection frequency uh we

521
00:21:38,559 --> 00:21:41,760
would have the ip port cards and also

522
00:21:41,760 --> 00:21:44,000
the dns addresses that the malware tries

523
00:21:44,000 --> 00:21:46,480
to communicate with for each of these

524
00:21:46,480 --> 00:21:49,039
addresses we keep track of the number of

525
00:21:49,039 --> 00:21:51,520
times that the rst flag the syn flag and

526
00:21:51,520 --> 00:21:54,080
the act flag were on and also the number

527
00:21:54,080 --> 00:21:56,640
of times that the dns address could not

528
00:21:56,640 --> 00:21:57,440
be

529
00:21:57,440 --> 00:22:00,559
found right this gives us the connection

530
00:22:00,559 --> 00:22:03,039
frequency for the port frequency we have

531
00:22:03,039 --> 00:22:03,919
another

532
00:22:03,919 --> 00:22:05,600
uh hash table

533
00:22:05,600 --> 00:22:08,159
it maps port numbers to the number of

534
00:22:08,159 --> 00:22:10,320
times that they were seen

535
00:22:10,320 --> 00:22:12,400
in the malware traffic right

536
00:22:12,400 --> 00:22:14,159
using these two

537
00:22:14,159 --> 00:22:17,280
uh parameters we can calculate the score

538
00:22:17,280 --> 00:22:19,039
for each address and you know find the

539
00:22:19,039 --> 00:22:21,440
one that has the highest score that one

540
00:22:21,440 --> 00:22:24,240
is the cnc there are other details based

541
00:22:24,240 --> 00:22:26,240
on other observations that i mentioned

542
00:22:26,240 --> 00:22:28,400
i'm not covering them here

543
00:22:28,400 --> 00:22:31,520
but our source code is uh open source so

544
00:22:31,520 --> 00:22:33,440
you can go check it out you have the

545
00:22:33,440 --> 00:22:35,520
port filtering and the reputation

546
00:22:35,520 --> 00:22:37,760
filtering functionalities

547
00:22:37,760 --> 00:22:40,400
okay great so now cnc hunter can

548
00:22:40,400 --> 00:22:42,720
redirect the cnc traffic to some

549
00:22:42,720 --> 00:22:45,280
candidate addresses right

550
00:22:45,280 --> 00:22:48,320
but which of these candidate addresses

551
00:22:48,320 --> 00:22:49,760
is a cnc

552
00:22:49,760 --> 00:22:52,320
right again this is not a trivial

553
00:22:52,320 --> 00:22:55,360
uh problem uh

554
00:22:55,360 --> 00:22:58,799
because not only the cnc server uh would

555
00:22:58,799 --> 00:23:01,200
communicate back right would respond to

556
00:23:01,200 --> 00:23:04,400
our request as a matter of fact every

557
00:23:04,400 --> 00:23:06,640
address that is live every ip address

558
00:23:06,640 --> 00:23:08,880
that is live listens to our target port

559
00:23:08,880 --> 00:23:10,880
and is not filtered

560
00:23:10,880 --> 00:23:13,919
will respond right

561
00:23:13,919 --> 00:23:18,159
so which one is the cnc server

562
00:23:18,320 --> 00:23:20,640
the criteria that i just mentioned could

563
00:23:20,640 --> 00:23:23,679
be uh simply filtered based on the you

564
00:23:23,679 --> 00:23:27,039
know tcp communication the tcp layer if

565
00:23:27,039 --> 00:23:28,960
there is a response of course we can see

566
00:23:28,960 --> 00:23:31,760
that the ip address is live uh listens

567
00:23:31,760 --> 00:23:34,080
we can check whether the tcp handshake

568
00:23:34,080 --> 00:23:36,480
is successful and for

569
00:23:36,480 --> 00:23:38,960
being not filtered we can check the rc

570
00:23:38,960 --> 00:23:41,039
flag but rd is enough

571
00:23:41,039 --> 00:23:42,159
uh no

572
00:23:42,159 --> 00:23:45,039
right uh for instance in this example we

573
00:23:45,039 --> 00:23:48,080
have two addresses that listen on port

574
00:23:48,080 --> 00:23:52,320
443 right the first one is a cnc server

575
00:23:52,320 --> 00:23:54,480
but the second one uh happens to

576
00:23:54,480 --> 00:23:56,480
randomly you know listen

577
00:23:56,480 --> 00:23:58,320
on the port that you're interested in

578
00:23:58,320 --> 00:24:01,200
443 and in this case probably it's a

579
00:24:01,200 --> 00:24:03,760
https web server but anyway it would

580
00:24:03,760 --> 00:24:04,880
respond

581
00:24:04,880 --> 00:24:08,159
it would respond to our requests right

582
00:24:08,159 --> 00:24:10,880
so how can we distinguish the first one

583
00:24:10,880 --> 00:24:13,360
from the second one we are on we are

584
00:24:13,360 --> 00:24:15,600
only interested in the first address

585
00:24:15,600 --> 00:24:16,720
right

586
00:24:16,720 --> 00:24:18,960
what we found what we observed is that

587
00:24:18,960 --> 00:24:22,559
the cnc's respond with significantly

588
00:24:22,559 --> 00:24:25,120
lower uh number of times that the sim

589
00:24:25,120 --> 00:24:27,440
flag is set right and in order to

590
00:24:27,440 --> 00:24:30,320
understand this think about the human

591
00:24:30,320 --> 00:24:32,720
communication right if two individuals

592
00:24:32,720 --> 00:24:34,400
are chatting and they don't understand

593
00:24:34,400 --> 00:24:37,080
each other what would they do right they

594
00:24:37,080 --> 00:24:40,640
restart they repeat themselves and the

595
00:24:40,640 --> 00:24:43,039
way that this pattern appears in network

596
00:24:43,039 --> 00:24:46,240
communication is by resetting the syn

597
00:24:46,240 --> 00:24:48,640
flag right uh setting it again and

598
00:24:48,640 --> 00:24:51,440
sending the packet uh out

599
00:24:51,440 --> 00:24:54,720
uh so we are finding the uh

600
00:24:54,720 --> 00:24:57,440
communications with lower number of uh

601
00:24:57,440 --> 00:25:00,240
times that the sim flag is on the way we

602
00:25:00,240 --> 00:25:03,600
do that is by doing outlier detection

603
00:25:03,600 --> 00:25:05,919
based on a standard deviation it's a

604
00:25:05,919 --> 00:25:08,080
very simple formula we just calculate

605
00:25:08,080 --> 00:25:10,880
the standard deviation and we find those

606
00:25:10,880 --> 00:25:15,919
that you know are on the lower back okay

607
00:25:15,919 --> 00:25:18,400
we evaluated cnc hunter

608
00:25:18,400 --> 00:25:21,679
on a set of 100 samples we evaluated the

609
00:25:21,679 --> 00:25:24,240
cnc finding functionality

610
00:25:24,240 --> 00:25:27,600
we could activate 90 of the samples that

611
00:25:27,600 --> 00:25:30,799
be analyzed and out of this uh we could

612
00:25:30,799 --> 00:25:33,600
achieve a precision of 92 percent right

613
00:25:33,600 --> 00:25:36,880
this is pretty much very accurate right

614
00:25:36,880 --> 00:25:39,760
uh and i'm glad to say that

615
00:25:39,760 --> 00:25:40,880
18

616
00:25:40,880 --> 00:25:44,000
of the live cnc servers that we found

617
00:25:44,000 --> 00:25:47,200
were exclusively found by us right the

618
00:25:47,200 --> 00:25:50,240
other 82 percent also via solo reports

619
00:25:50,240 --> 00:25:53,039
as malicious but uh these

620
00:25:53,039 --> 00:25:55,600
18 percent were only found by us if you

621
00:25:55,600 --> 00:25:58,559
check them on virustotal uh

622
00:25:58,559 --> 00:26:01,440
they are not reported malicious

623
00:26:01,440 --> 00:26:04,480
okay great so uh

624
00:26:04,480 --> 00:26:06,880
i'm gonna start the demos now

625
00:26:06,880 --> 00:26:09,279
we are gonna have two demos the first

626
00:26:09,279 --> 00:26:12,960
demo uh is for finding the cnc server of

627
00:26:12,960 --> 00:26:15,600
the sample right so we provide an iot

628
00:26:15,600 --> 00:26:17,600
malware binary we know nothing about

629
00:26:17,600 --> 00:26:19,840
this malware binder right we don't know

630
00:26:19,840 --> 00:26:21,360
the architecture we don't know the

631
00:26:21,360 --> 00:26:23,279
malware family we don't know anything

632
00:26:23,279 --> 00:26:25,760
about the traffic that it generates you

633
00:26:25,760 --> 00:26:28,159
know the ports that it tries to scan and

634
00:26:28,159 --> 00:26:30,640
then exploit nothing

635
00:26:30,640 --> 00:26:32,960
and uh we don't provide any

636
00:26:32,960 --> 00:26:35,440
configuration for cnc hunter we just run

637
00:26:35,440 --> 00:26:37,679
this script and it reports the cnc

638
00:26:37,679 --> 00:26:38,799
server

639
00:26:38,799 --> 00:26:42,080
uh for the second demo we go one step

640
00:26:42,080 --> 00:26:44,960
further and what we do is

641
00:26:44,960 --> 00:26:46,720
provide uh

642
00:26:46,720 --> 00:26:49,520
some ip addresses that that we suspect

643
00:26:49,520 --> 00:26:53,760
are hosting a cnc server

644
00:26:53,760 --> 00:26:56,000
and we are using old samples you are

645
00:26:56,000 --> 00:26:59,200
using four years old gasket samples we

646
00:26:59,200 --> 00:27:01,840
expect these gasket samples to

647
00:27:01,840 --> 00:27:04,480
communicate with the addresses that are

648
00:27:04,480 --> 00:27:06,880
hosting a cnc server right and this is

649
00:27:06,880 --> 00:27:09,840
very exciting right the they they have a

650
00:27:09,840 --> 00:27:11,600
dead cnc server they would not

651
00:27:11,600 --> 00:27:14,240
communicate generate any traffic but we

652
00:27:14,240 --> 00:27:16,080
met in the middle and we want to see

653
00:27:16,080 --> 00:27:17,520
whether they can successfully

654
00:27:17,520 --> 00:27:20,240
communicate these addresses if they do

655
00:27:20,240 --> 00:27:23,200
these addresses are hosting cnc server

656
00:27:23,200 --> 00:27:27,600
okay so let's start from the uh

657
00:27:27,679 --> 00:27:30,399
first demo so here i'm placing the

658
00:27:30,399 --> 00:27:33,279
binary in the malware malware folder

659
00:27:33,279 --> 00:27:35,440
this is a mirai sample i'm telling you

660
00:27:35,440 --> 00:27:37,919
that it's memorized samples so you know

661
00:27:37,919 --> 00:27:40,080
but i'm not providing this information

662
00:27:40,080 --> 00:27:43,039
to cnc hunter uh the command is just

663
00:27:43,039 --> 00:27:46,159
running this script around that py i'm

664
00:27:46,159 --> 00:27:49,760
using the p option this is for filtering

665
00:27:49,760 --> 00:27:50,799
the

666
00:27:50,799 --> 00:27:53,200
ports that we are not interested in

667
00:27:53,200 --> 00:27:54,080
right

668
00:27:54,080 --> 00:27:55,919
i'm just showing you that we have this

669
00:27:55,919 --> 00:27:58,880
option but even without providing these

670
00:27:58,880 --> 00:28:01,039
options since your hunter is able to

671
00:28:01,039 --> 00:28:04,159
find the cnc address for you right so

672
00:28:04,159 --> 00:28:07,360
what cnc hunter does is analyzing the

673
00:28:07,360 --> 00:28:09,679
executing the matter and analyzing the

674
00:28:09,679 --> 00:28:11,679
traffic that it generates

675
00:28:11,679 --> 00:28:14,080
so let's take a look at the traffic that

676
00:28:14,080 --> 00:28:14,840
is

677
00:28:14,840 --> 00:28:16,880
generated uh

678
00:28:16,880 --> 00:28:18,399
i'm gonna fire

679
00:28:18,399 --> 00:28:20,640
wireshark and take a look at the p-cap

680
00:28:20,640 --> 00:28:22,880
traffic that is generated this is the

681
00:28:22,880 --> 00:28:25,200
traffic that the mirai malware generates

682
00:28:25,200 --> 00:28:27,039
right and as you can see by yourself

683
00:28:27,039 --> 00:28:29,520
there are lots of ip addresses right

684
00:28:29,520 --> 00:28:31,600
these are the scanning activities that

685
00:28:31,600 --> 00:28:33,039
the malware has

686
00:28:33,039 --> 00:28:35,919
there is the cnc communication

687
00:28:35,919 --> 00:28:38,480
uh the analysis is going to take time by

688
00:28:38,480 --> 00:28:41,279
default uh by default we spent five

689
00:28:41,279 --> 00:28:44,000
minutes but here i'm gonna fast forward

690
00:28:44,000 --> 00:28:46,799
boom we found the cnc address and here

691
00:28:46,799 --> 00:28:49,679
in this case it's a dns based address

692
00:28:49,679 --> 00:28:52,399
it's a live cnc server because the

693
00:28:52,399 --> 00:28:54,559
malware was recent

694
00:28:54,559 --> 00:28:57,120
and we are going to check the dns

695
00:28:57,120 --> 00:29:00,080
address in virustotal and the virustotal

696
00:29:00,080 --> 00:29:02,559
reports that it's not malicious right we

697
00:29:02,559 --> 00:29:04,640
are aware that this is not like the

698
00:29:04,640 --> 00:29:05,679
ultimate

699
00:29:05,679 --> 00:29:09,919
uh oracle but we are just saying that uh

700
00:29:09,919 --> 00:29:12,880
this is what we see on virustotal

701
00:29:12,880 --> 00:29:15,520
all right uh the address is also

702
00:29:15,520 --> 00:29:18,640
reported in the in a csv format this is

703
00:29:18,640 --> 00:29:20,799
very useful if you have you know

704
00:29:20,799 --> 00:29:24,000
uh a bunch of binaries not only one you

705
00:29:24,000 --> 00:29:26,159
can see the report at the end in the

706
00:29:26,159 --> 00:29:28,880
cnc's that csv file we also have an

707
00:29:28,880 --> 00:29:31,120
analysis folder

708
00:29:31,120 --> 00:29:33,679
under the result uh directory with the

709
00:29:33,679 --> 00:29:36,559
name of the malware and there you have

710
00:29:36,559 --> 00:29:38,960
the pcap traffic and also the system

711
00:29:38,960 --> 00:29:42,080
call trace for the malware execution

712
00:29:42,080 --> 00:29:43,440
uh

713
00:29:43,440 --> 00:29:46,159
i'm gonna move to the second demo now

714
00:29:46,159 --> 00:29:48,559
and in this demo as i mentioned we are

715
00:29:48,559 --> 00:29:50,480
using the uh man in the middle

716
00:29:50,480 --> 00:29:53,120
functionality right so in addition to

717
00:29:53,120 --> 00:29:55,360
the malware that we provide these are

718
00:29:55,360 --> 00:29:57,360
the matter that we use for the mitm

719
00:29:57,360 --> 00:29:59,120
attack these are two

720
00:29:59,120 --> 00:30:02,000
four years old gasket samples and we are

721
00:30:02,000 --> 00:30:04,799
also uh providing an ip atlas in

722
00:30:04,799 --> 00:30:06,720
practice it would be a wrench but since

723
00:30:06,720 --> 00:30:08,320
you know we don't have enough time i'm

724
00:30:08,320 --> 00:30:10,159
going to just show you

725
00:30:10,159 --> 00:30:12,080
uh the communication with the you know

726
00:30:12,080 --> 00:30:14,000
candidate address that is hosting the

727
00:30:14,000 --> 00:30:16,240
cnc cnc server

728
00:30:16,240 --> 00:30:20,080
again the analysis starts by uh finding

729
00:30:20,080 --> 00:30:23,200
the cnc address of these two samples

730
00:30:23,200 --> 00:30:25,039
it's going to take time but here we are

731
00:30:25,039 --> 00:30:26,799
going to fast forward

732
00:30:26,799 --> 00:30:28,080
uh

733
00:30:28,080 --> 00:30:31,120
boom we found the cnc address of the

734
00:30:31,120 --> 00:30:33,360
uh these samples

735
00:30:33,360 --> 00:30:35,360
now in the next step what we are gonna

736
00:30:35,360 --> 00:30:39,679
do we are gonna redirect the uh cnc

737
00:30:39,679 --> 00:30:41,360
traffic right it would go to these

738
00:30:41,360 --> 00:30:43,840
addresses by default but we are gonna

739
00:30:43,840 --> 00:30:46,240
redirect this traffic man in the middle

740
00:30:46,240 --> 00:30:48,399
and send the traffic to

741
00:30:48,399 --> 00:30:52,240
uh the candidate address right if you

742
00:30:52,240 --> 00:30:54,720
provide a range in each iteration one of

743
00:30:54,720 --> 00:30:56,720
these addresses would be tried but here

744
00:30:56,720 --> 00:30:59,120
it's only a single address

745
00:30:59,120 --> 00:30:59,919
uh

746
00:30:59,919 --> 00:31:02,720
so the malware tries to communicate with

747
00:31:02,720 --> 00:31:05,039
this hyper atlas and you're gonna

748
00:31:05,039 --> 00:31:06,960
analyze their traffic again it's gonna

749
00:31:06,960 --> 00:31:09,039
take time but you're gonna hear fast

750
00:31:09,039 --> 00:31:10,159
forward

751
00:31:10,159 --> 00:31:11,519
uh

752
00:31:11,519 --> 00:31:12,399
great

753
00:31:12,399 --> 00:31:14,799
perfect we found the successful

754
00:31:14,799 --> 00:31:16,159
communication

755
00:31:16,159 --> 00:31:18,559
it still gives me goosebumps this is

756
00:31:18,559 --> 00:31:20,880
really exciting right so we found a live

757
00:31:20,880 --> 00:31:22,799
cnc server

758
00:31:22,799 --> 00:31:25,600
right by using a four years old gasket

759
00:31:25,600 --> 00:31:26,799
sample

760
00:31:26,799 --> 00:31:28,640
right the malware would have talked to a

761
00:31:28,640 --> 00:31:30,399
different cnc server it would have been

762
00:31:30,399 --> 00:31:33,679
that but here no we used it to find a

763
00:31:33,679 --> 00:31:36,399
real cnc server and now i'm gonna show

764
00:31:36,399 --> 00:31:38,799
you the traffic if you see the traffic

765
00:31:38,799 --> 00:31:41,200
since it's text based you would find by

766
00:31:41,200 --> 00:31:43,600
yourself that it's actually a successful

767
00:31:43,600 --> 00:31:46,159
communication

768
00:31:46,159 --> 00:31:51,039
so let's take a look at the pcap traffic

769
00:31:51,600 --> 00:31:53,279
this is the traffic that is generated

770
00:31:53,279 --> 00:31:56,399
the malware starts by doing the tcp

771
00:31:56,399 --> 00:31:58,399
handshake

772
00:31:58,399 --> 00:32:02,080
and uh after the tcp handshake uh

773
00:32:02,080 --> 00:32:04,640
there's this command that the malware

774
00:32:04,640 --> 00:32:07,679
sends sorry for the language builddonk

775
00:32:07,679 --> 00:32:08,640
and

776
00:32:08,640 --> 00:32:11,519
the server responds with an act says i

777
00:32:11,519 --> 00:32:12,480
got it

778
00:32:12,480 --> 00:32:14,720
and then here's the interesting part the

779
00:32:14,720 --> 00:32:18,320
server sends the pin command right to

780
00:32:18,320 --> 00:32:20,399
the malware and the malware response

781
00:32:20,399 --> 00:32:21,760
with the punch

782
00:32:21,760 --> 00:32:23,679
great so this shows the successful

783
00:32:23,679 --> 00:32:26,159
exploitation of the malware and the mitm

784
00:32:26,159 --> 00:32:27,200
attack

785
00:32:27,200 --> 00:32:30,159
and with that we actually found a live

786
00:32:30,159 --> 00:32:32,960
cnc server using four years old gasket

787
00:32:32,960 --> 00:32:35,360
samples it's very exciting

788
00:32:35,360 --> 00:32:36,240
uh

789
00:32:36,240 --> 00:32:39,919
okay so this is the demo that we had

790
00:32:39,919 --> 00:32:42,799
we would be really happy to collaborate

791
00:32:42,799 --> 00:32:44,640
if you're interested in

792
00:32:44,640 --> 00:32:47,120
if you have an active honeypot uh or

793
00:32:47,120 --> 00:32:50,880
have you know iot devices file systems

794
00:32:50,880 --> 00:32:52,799
for different architectures if you have

795
00:32:52,799 --> 00:32:55,360
intelligence on iot malware cnc is we

796
00:32:55,360 --> 00:32:57,360
would really appreciate it we could use

797
00:32:57,360 --> 00:33:00,080
that in for for evaluating our system or

798
00:33:00,080 --> 00:33:02,000
if you just use our tool and you have

799
00:33:02,000 --> 00:33:03,600
feedback for us

800
00:33:03,600 --> 00:33:06,480
we would be very happy to talk to you

801
00:33:06,480 --> 00:33:08,880
and if you have insight also on iot

802
00:33:08,880 --> 00:33:11,600
madwear antivirus evasion

803
00:33:11,600 --> 00:33:12,880
that's something that we want to you

804
00:33:12,880 --> 00:33:15,919
know support in future please talk to us

805
00:33:15,919 --> 00:33:16,880
uh

806
00:33:16,880 --> 00:33:19,679
a shout out to martina lindelofer she's

807
00:33:19,679 --> 00:33:21,440
collaborating with us

808
00:33:21,440 --> 00:33:24,080
uh also to virustotal for providing us

809
00:33:24,080 --> 00:33:25,679
the samples

810
00:33:25,679 --> 00:33:28,000
i am ali davanian i will be in the job

811
00:33:28,000 --> 00:33:30,080
market in six months if you're looking

812
00:33:30,080 --> 00:33:32,159
for additions to your team please talk

813
00:33:32,159 --> 00:33:33,120
to me

814
00:33:33,120 --> 00:33:35,440
and with that i'm gonna conclude the uh

815
00:33:35,440 --> 00:33:37,039
presentation

816
00:33:37,039 --> 00:33:39,679
uh so in short we need to proactively

817
00:33:39,679 --> 00:33:41,840
scan the internet and find the cnc

818
00:33:41,840 --> 00:33:44,559
servers and that's because cnc servers

819
00:33:44,559 --> 00:33:46,799
are very short-lived they are hidden

820
00:33:46,799 --> 00:33:49,600
from us just by analyzing the samples we

821
00:33:49,600 --> 00:33:52,880
cannot find all of them and since iot

822
00:33:52,880 --> 00:33:54,960
communication protocols are diverse and

823
00:33:54,960 --> 00:33:56,880
complex we need to use their real

824
00:33:56,880 --> 00:33:59,679
malware right to have a generic solution

825
00:33:59,679 --> 00:34:02,080
and that's what cnc hunter does for you

826
00:34:02,080 --> 00:34:04,640
right we do cnc discovery using the man

827
00:34:04,640 --> 00:34:08,320
in the middling and i i'm happy to tell

828
00:34:08,320 --> 00:34:10,800
you that cnc hunter is fully automated

829
00:34:10,800 --> 00:34:12,320
as i showed you you don't need to

830
00:34:12,320 --> 00:34:14,239
provide any configuration just the

831
00:34:14,239 --> 00:34:17,119
malware and your ip address branch and

832
00:34:17,119 --> 00:34:18,560
it's open source

833
00:34:18,560 --> 00:34:21,440
uh please use it use it and give us

834
00:34:21,440 --> 00:34:23,760
feedback thank you very much and with

835
00:34:23,760 --> 00:34:25,760
that we are gonna

836
00:34:25,760 --> 00:34:29,240
take the questions

