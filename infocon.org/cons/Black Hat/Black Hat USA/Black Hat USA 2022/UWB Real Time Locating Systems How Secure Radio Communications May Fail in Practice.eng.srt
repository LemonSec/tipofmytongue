1
00:00:01,700 --> 00:00:04,810
[Music]

2
00:00:06,859 --> 00:00:09,859
thank you

3
00:00:10,860 --> 00:00:12,360
picture this

4
00:00:12,360 --> 00:00:14,519
you're in a manufacturing plant

5
00:00:14,519 --> 00:00:16,260
you're standing next to a dangerous

6
00:00:16,260 --> 00:00:17,640
piece of equipment

7
00:00:17,640 --> 00:00:20,279
it's powered off but it doesn't sense

8
00:00:20,279 --> 00:00:21,840
that you're close by

9
00:00:21,840 --> 00:00:24,180
so it suddenly restarts

10
00:00:24,180 --> 00:00:26,699
talk about a bad day

11
00:00:26,699 --> 00:00:28,800
real-time locating systems aren't just

12
00:00:28,800 --> 00:00:31,500
used to find a parked car or a lost item

13
00:00:31,500 --> 00:00:33,899
in your home so security flaws in this

14
00:00:33,899 --> 00:00:36,120
technology especially in industrial

15
00:00:36,120 --> 00:00:38,280
environments can be deadly

16
00:00:38,280 --> 00:00:41,160
I'm Roya Gordon this is Andre palanca

17
00:00:41,160 --> 00:00:43,320
and Luca cremona we're on the research

18
00:00:43,320 --> 00:00:45,660
team at nazomi networks and today we're

19
00:00:45,660 --> 00:00:47,520
presenting on Ultra wide band real-time

20
00:00:47,520 --> 00:00:50,039
locating systems and how seemingly

21
00:00:50,039 --> 00:00:52,200
secure radio communications May Fail in

22
00:00:52,200 --> 00:00:52,980
practice

23
00:00:52,980 --> 00:00:54,600
this is the first time we will be

24
00:00:54,600 --> 00:00:56,100
revealing these zero days and we're

25
00:00:56,100 --> 00:00:57,539
happy to be doing it on the black hat

26
00:00:57,539 --> 00:00:59,899
stage

27
00:01:00,180 --> 00:01:03,539
okay so what is ultra wideband and what

28
00:01:03,539 --> 00:01:04,680
does it have to do with real-time

29
00:01:04,680 --> 00:01:07,200
locating systems and for the remainder

30
00:01:07,200 --> 00:01:08,880
of the talk we will be using the terms

31
00:01:08,880 --> 00:01:11,040
uwb and rtls

32
00:01:11,040 --> 00:01:13,619
so Ultra wide band is a radio frequency

33
00:01:13,619 --> 00:01:15,840
used to transmit information quickly

34
00:01:15,840 --> 00:01:18,479
over short distances and through solid

35
00:01:18,479 --> 00:01:21,720
objects it's preferred for rtls which is

36
00:01:21,720 --> 00:01:23,580
mostly used indoors where there's lots

37
00:01:23,580 --> 00:01:26,240
of barriers

38
00:01:26,759 --> 00:01:28,799
a real-time locating system is a

39
00:01:28,799 --> 00:01:31,200
technology that uses signals to locate

40
00:01:31,200 --> 00:01:33,479
stationary and mobile objects if you

41
00:01:33,479 --> 00:01:34,979
take a look at the diagram on the screen

42
00:01:34,979 --> 00:01:37,140
you'll see the three main components to

43
00:01:37,140 --> 00:01:39,479
this technology you have the tags that's

44
00:01:39,479 --> 00:01:41,880
attached to a person or asset it

45
00:01:41,880 --> 00:01:43,920
transmits location data to the anchors

46
00:01:43,920 --> 00:01:46,380
the anchors submit that data to a server

47
00:01:46,380 --> 00:01:47,939
where it does all the processing and the

48
00:01:47,939 --> 00:01:49,920
Computing and then displays it in the

49
00:01:49,920 --> 00:01:52,340
screenshot

50
00:01:53,340 --> 00:01:55,799
so rtls is used throughout several

51
00:01:55,799 --> 00:01:58,500
Industries it's used in smart cities for

52
00:01:58,500 --> 00:02:01,140
management of mass transit it's used in

53
00:02:01,140 --> 00:02:03,479
smart buildings for Access Control it's

54
00:02:03,479 --> 00:02:05,640
used in smart retail for hands-free

55
00:02:05,640 --> 00:02:07,680
payments I mean the use cases are

56
00:02:07,680 --> 00:02:10,139
endless so any security flaws in this

57
00:02:10,139 --> 00:02:14,480
technology can be pretty widespread

58
00:02:14,580 --> 00:02:18,239
alright so what motivated us to do this

59
00:02:18,239 --> 00:02:21,480
so in 2020 the IEEE released an updated

60
00:02:21,480 --> 00:02:23,700
standard increasing the security of

61
00:02:23,700 --> 00:02:26,040
wireless network communications they

62
00:02:26,040 --> 00:02:28,980
added cryptography and random number

63
00:02:28,980 --> 00:02:31,379
generation to prevent threat actors from

64
00:02:31,379 --> 00:02:32,640
eavesdropping and doing other

65
00:02:32,640 --> 00:02:36,000
manipulation tactics on uwb great

66
00:02:36,000 --> 00:02:37,860
everything is secure we can all go home

67
00:02:37,860 --> 00:02:38,940
right

68
00:02:38,940 --> 00:02:40,680
not quite

69
00:02:40,680 --> 00:02:43,680
upon further research we saw that the

70
00:02:43,680 --> 00:02:45,420
synchronization and exchange of location

71
00:02:45,420 --> 00:02:48,239
data was considered out of scope by the

72
00:02:48,239 --> 00:02:50,700
standard leaving the burden of securing

73
00:02:50,700 --> 00:02:52,980
these communications strictly up to the

74
00:02:52,980 --> 00:02:56,160
vendors which can be puzzling

75
00:02:56,160 --> 00:02:57,660
challenging

76
00:02:57,660 --> 00:03:00,480
and even a little intimidating

77
00:03:00,480 --> 00:03:03,480
upon further further review we saw that

78
00:03:03,480 --> 00:03:04,980
there wasn't really much research out

79
00:03:04,980 --> 00:03:08,040
there on this specific topic and so the

80
00:03:08,040 --> 00:03:10,080
research was born and with that being

81
00:03:10,080 --> 00:03:11,819
said I'll pass it over to Luca and

82
00:03:11,819 --> 00:03:13,080
Andrea to get into the scope and

83
00:03:13,080 --> 00:03:15,560
methodology

84
00:03:18,659 --> 00:03:20,400
Okay so

85
00:03:20,400 --> 00:03:22,860
during the introduction we see how

86
00:03:22,860 --> 00:03:25,260
ultimate vendor TLs are widespreaded

87
00:03:25,260 --> 00:03:27,480
technology can that can be deployed in

88
00:03:27,480 --> 00:03:30,180
many situations for a large variety of

89
00:03:30,180 --> 00:03:32,459
use cases in the following slides we

90
00:03:32,459 --> 00:03:34,440
will see the scope of our research but

91
00:03:34,440 --> 00:03:36,900
in terms of industrial scope and

92
00:03:36,900 --> 00:03:39,120
Technical scope

93
00:03:39,120 --> 00:03:42,060
so for our research we focused on two

94
00:03:42,060 --> 00:03:44,580
different sectors Healthcare and

95
00:03:44,580 --> 00:03:47,099
Industrial the reason why our choice is

96
00:03:47,099 --> 00:03:49,920
to fold from one side those sectors were

97
00:03:49,920 --> 00:03:51,780
affected by an increasing number of

98
00:03:51,780 --> 00:03:53,879
cyber attacks in these last years

99
00:03:53,879 --> 00:03:56,400
while for the other side those sectors

100
00:03:56,400 --> 00:03:59,400
use ultra webender TLS for safety

101
00:03:59,400 --> 00:04:02,940
purposes such as employee and patient

102
00:04:02,940 --> 00:04:04,459
tracking

103
00:04:04,459 --> 00:04:07,680
then for for contact racing you know

104
00:04:07,680 --> 00:04:10,519
that in those last years with the kovid

105
00:04:10,519 --> 00:04:13,980
we need a system that is able to raise

106
00:04:13,980 --> 00:04:16,560
alert Whenever two people get close too

107
00:04:16,560 --> 00:04:18,959
close to each other so contact traces

108
00:04:18,959 --> 00:04:22,079
for this and then geofencing geofencing

109
00:04:22,079 --> 00:04:25,639
is can be seen as a set of rules that

110
00:04:25,639 --> 00:04:29,759
can manage the access of people in maybe

111
00:04:29,759 --> 00:04:33,180
restricted access areas

112
00:04:33,180 --> 00:04:36,900
so once we defined the industrial scope

113
00:04:36,900 --> 00:04:39,840
we moved on with an analysis of the

114
00:04:39,840 --> 00:04:42,180
ultra wet band rtls kits that are

115
00:04:42,180 --> 00:04:44,699
available in the market we consider some

116
00:04:44,699 --> 00:04:47,580
aspects such as availability time to

117
00:04:47,580 --> 00:04:49,500
delivery cost

118
00:04:49,500 --> 00:04:52,440
reposit feature and at the end they will

119
00:04:52,440 --> 00:04:54,960
choose these two ultimate band kits as

120
00:04:54,960 --> 00:04:57,540
representative for the market the first

121
00:04:57,540 --> 00:04:59,880
one is the savior indoor tracking rtls

122
00:04:59,880 --> 00:05:02,400
Ultra wet band the Wi-Fi kit and the

123
00:05:02,400 --> 00:05:05,220
second one is the availability Artemis

124
00:05:05,220 --> 00:05:07,620
Enterprise kit

125
00:05:07,620 --> 00:05:12,060
so normally in Ultimate band rtls

126
00:05:12,060 --> 00:05:14,220
scenario there is a target which is

127
00:05:14,220 --> 00:05:15,900
communicating with the set of anchors

128
00:05:15,900 --> 00:05:19,380
deployed in specific positions of a room

129
00:05:19,380 --> 00:05:22,919
by means of ultrawide band signals those

130
00:05:22,919 --> 00:05:25,320
anchors besides communicating with each

131
00:05:25,320 --> 00:05:26,660
other again

132
00:05:26,660 --> 00:05:29,400
by ultimate band signals are

133
00:05:29,400 --> 00:05:31,620
communicating with a central server

134
00:05:31,620 --> 00:05:34,740
using a standard media technology such

135
00:05:34,740 --> 00:05:38,300
as Ethernet or Wi-Fi

136
00:05:38,300 --> 00:05:41,280
security researcher is exclusively

137
00:05:41,280 --> 00:05:43,560
focused on the analysis of ultra wet

138
00:05:43,560 --> 00:05:45,780
band signals this is the first

139
00:05:45,780 --> 00:05:48,180
researcher that is analyzed in the

140
00:05:48,180 --> 00:05:52,820
communication on the Internet or Wi-Fi

141
00:05:53,820 --> 00:05:56,100
Okay so

142
00:05:56,100 --> 00:05:58,320
there are many algorithms to locate

143
00:05:58,320 --> 00:06:00,660
Assets in any kind of environment

144
00:06:00,660 --> 00:06:02,580
to better clarify the procedure and

145
00:06:02,580 --> 00:06:04,080
understand the preconditions that are

146
00:06:04,080 --> 00:06:05,820
necessary for an attack it is worth

147
00:06:05,820 --> 00:06:07,320
doing a brief analysis of the

148
00:06:07,320 --> 00:06:09,360
fundamentals

149
00:06:09,360 --> 00:06:11,699
oh sorry

150
00:06:11,699 --> 00:06:14,400
okay so there are two kinds of packets

151
00:06:14,400 --> 00:06:16,080
exchanged among anchors on server

152
00:06:16,080 --> 00:06:18,300
synchronization packets and positioning

153
00:06:18,300 --> 00:06:20,880
packets delcos clocks are usually not in

154
00:06:20,880 --> 00:06:22,319
sync with each other for a variety of

155
00:06:22,319 --> 00:06:25,319
reasons a clock drives different buttons

156
00:06:25,319 --> 00:06:28,020
Etc thus a synchronization schema is

157
00:06:28,020 --> 00:06:30,300
necessary one of the most common ones is

158
00:06:30,300 --> 00:06:32,720
the Wallace synchronization schema so

159
00:06:32,720 --> 00:06:35,400
periodically a reference anchor sends an

160
00:06:35,400 --> 00:06:37,380
auto advance signal that is reserved by

161
00:06:37,380 --> 00:06:39,539
all other rankers the reference one

162
00:06:39,539 --> 00:06:41,699
stands to the artilla server the instant

163
00:06:41,699 --> 00:06:43,560
at which it has transmitted it inside

164
00:06:43,560 --> 00:06:45,900
the synchronization packet the reference

165
00:06:45,900 --> 00:06:47,520
was the insert at which they have

166
00:06:47,520 --> 00:06:49,740
reserved it the server uses the

167
00:06:49,740 --> 00:06:51,780
information to build a common notion of

168
00:06:51,780 --> 00:06:54,780
time positioning pocket instead are used

169
00:06:54,780 --> 00:06:56,819
for tax localization purposes as

170
00:06:56,819 --> 00:06:58,880
anticipated by lookup a Target medicine

171
00:06:58,880 --> 00:07:01,680
that is received by all anchors this

172
00:07:01,680 --> 00:07:03,419
sent to the server there isn't at which

173
00:07:03,419 --> 00:07:05,160
they have received it inside position in

174
00:07:05,160 --> 00:07:06,600
packets

175
00:07:06,600 --> 00:07:08,880
okay so you can see our formulas at the

176
00:07:08,880 --> 00:07:11,100
bottom of this slide but don't be scared

177
00:07:11,100 --> 00:07:12,900
he will give you the main Concepts

178
00:07:12,900 --> 00:07:15,300
however for the hacker Galaxy our white

179
00:07:15,300 --> 00:07:18,720
paper contains all details now there are

180
00:07:18,720 --> 00:07:20,220
many synchronization of algorithm and

181
00:07:20,220 --> 00:07:22,380
literature in this work we use the

182
00:07:22,380 --> 00:07:24,419
linear interpolation algorithm that is a

183
00:07:24,419 --> 00:07:26,099
simple yet effective way to achieve

184
00:07:26,099 --> 00:07:28,919
synchronization in nutshell the idea is

185
00:07:28,919 --> 00:07:31,080
that the rtls server at each algorithm

186
00:07:31,080 --> 00:07:32,699
iteration and on the basis of the

187
00:07:32,699 --> 00:07:34,680
synchronization packet process so far

188
00:07:34,680 --> 00:07:37,020
estimates the clock skews between each

189
00:07:37,020 --> 00:07:38,880
non-reference anchor and the reference

190
00:07:38,880 --> 00:07:41,639
one and then converts all positioning

191
00:07:41,639 --> 00:07:43,919
packets to the global transform domain

192
00:07:43,919 --> 00:07:46,139
those converted timestamps are called

193
00:07:46,139 --> 00:07:48,599
Global times we cannot immediately

194
00:07:48,599 --> 00:07:50,280
derive the distances from the global

195
00:07:50,280 --> 00:07:51,660
times because we are missing a

196
00:07:51,660 --> 00:07:53,400
transmission instance the target doesn't

197
00:07:53,400 --> 00:07:55,500
send this information to other rtls

198
00:07:55,500 --> 00:07:58,020
server what we can do though is to

199
00:07:58,020 --> 00:07:59,880
correlate the difference of global times

200
00:07:59,880 --> 00:08:02,340
with the difference of distances this is

201
00:08:02,340 --> 00:08:03,900
exactly why this algorithm is called

202
00:08:03,900 --> 00:08:06,060
time difference of arrival

203
00:08:06,060 --> 00:08:08,160
finally by putting together all

204
00:08:08,160 --> 00:08:10,380
equations this is the final linear

205
00:08:10,380 --> 00:08:12,000
system of equations that allows to get

206
00:08:12,000 --> 00:08:14,099
the position of the tag as you can see

207
00:08:14,099 --> 00:08:16,020
from the system in order to obtain the

208
00:08:16,020 --> 00:08:17,819
position of the tag we need three pieces

209
00:08:17,819 --> 00:08:19,800
of information or coordinates of the

210
00:08:19,800 --> 00:08:21,539
anchors involved the synchronization

211
00:08:21,539 --> 00:08:23,220
timestamps and the position in

212
00:08:23,220 --> 00:08:25,879
timestamps

213
00:08:28,560 --> 00:08:31,979
okay so after studying the background

214
00:08:31,979 --> 00:08:35,700
and the theory about tdoe algorithm we

215
00:08:35,700 --> 00:08:39,240
move on with the reverse engineering

216
00:08:39,240 --> 00:08:42,919
activity in order to understand the tdoa

217
00:08:42,919 --> 00:08:45,420
procedures that are executed by the

218
00:08:45,420 --> 00:08:48,180
anchor and the server in order to be

219
00:08:48,180 --> 00:08:50,459
able to dissect all the traffic

220
00:08:50,459 --> 00:08:52,920
understand how the network traffic is

221
00:08:52,920 --> 00:08:55,320
processed and then we did also some

222
00:08:55,320 --> 00:08:59,399
Security checks on this system

223
00:08:59,399 --> 00:09:02,580
these lights show a virtual screenshot

224
00:09:02,580 --> 00:09:06,380
taken while while analyzing the Savior

225
00:09:06,380 --> 00:09:08,600
Network traffic

226
00:09:08,600 --> 00:09:11,700
as you can see save your Ultra weapon

227
00:09:11,700 --> 00:09:15,060
kit but also the value one use a custom

228
00:09:15,060 --> 00:09:17,700
unknown binary Network protocol for the

229
00:09:17,700 --> 00:09:19,500
communication between the anchors and

230
00:09:19,500 --> 00:09:20,519
the server

231
00:09:20,519 --> 00:09:23,580
no common data structure can be found so

232
00:09:23,580 --> 00:09:27,120
a reversing engineer activity was needed

233
00:09:27,120 --> 00:09:29,820
in order to be able to dissect all the

234
00:09:29,820 --> 00:09:32,540
the traffic

235
00:09:32,580 --> 00:09:36,300
so we started from the source code you

236
00:09:36,300 --> 00:09:39,600
can find on the left of the rtls server

237
00:09:39,600 --> 00:09:41,820
for both the Savior and the value value

238
00:09:41,820 --> 00:09:44,940
Ultra wet band kits we were able to

239
00:09:44,940 --> 00:09:47,399
completely dissect the traffic by

240
00:09:47,399 --> 00:09:50,160
analyzing the source code and then we

241
00:09:50,160 --> 00:09:53,880
formalized all our activity in two

242
00:09:53,880 --> 00:09:56,420
Wireshark this sector that can be

243
00:09:56,420 --> 00:09:58,800
downloaded from The Briefing page of

244
00:09:58,800 --> 00:10:03,300
this session or from the GitHub page of

245
00:10:03,300 --> 00:10:05,899
our company

246
00:10:06,240 --> 00:10:09,180
while performing the reversing engineer

247
00:10:09,180 --> 00:10:12,120
activity we also focused on some

248
00:10:12,120 --> 00:10:15,080
security aspect about the communication

249
00:10:15,080 --> 00:10:17,940
from the anchors to the server

250
00:10:17,940 --> 00:10:20,760
we mainly focused on two aspects which

251
00:10:20,760 --> 00:10:23,519
are confidentiality and the Integrity of

252
00:10:23,519 --> 00:10:26,360
the data and guess what

253
00:10:26,360 --> 00:10:29,339
both save you and the value ultraviolet

254
00:10:29,339 --> 00:10:31,700
bed kits are not able to guarantee

255
00:10:31,700 --> 00:10:35,279
either data confidentiality or data

256
00:10:35,279 --> 00:10:37,339
integrity

257
00:10:37,339 --> 00:10:40,440
data confidentiality as you can see from

258
00:10:40,440 --> 00:10:42,899
the top right picture all the location

259
00:10:42,899 --> 00:10:44,820
timestamp and the synchronization

260
00:10:44,820 --> 00:10:48,300
timestamp are sending clear so no

261
00:10:48,300 --> 00:10:50,820
confidentiality can be guaranteed for a

262
00:10:50,820 --> 00:10:53,220
concern data Integrity both the ultra

263
00:10:53,220 --> 00:10:55,920
Ultra wet band kits using non-secure

264
00:10:55,920 --> 00:10:59,100
Integrity mechanism for example say if

265
00:10:59,100 --> 00:11:02,899
you use a crc16

266
00:11:02,899 --> 00:11:06,060
while a value as you can see from the

267
00:11:06,060 --> 00:11:10,380
bottom right picture use a bytewise sum

268
00:11:10,380 --> 00:11:14,720
of all packets as a hxm

269
00:11:15,060 --> 00:11:17,940
okay so in the previous section we were

270
00:11:17,940 --> 00:11:19,500
able to conclude that there is neither

271
00:11:19,500 --> 00:11:21,480
confidentiality nor Integrity protecting

272
00:11:21,480 --> 00:11:23,640
the timestamps however in order to get

273
00:11:23,640 --> 00:11:25,320
the position of the tag we still need

274
00:11:25,320 --> 00:11:27,480
the anchors coordinates according to the

275
00:11:27,480 --> 00:11:29,339
test done the uncose coordinates are

276
00:11:29,339 --> 00:11:30,959
manually input of the first installation

277
00:11:30,959 --> 00:11:33,420
of an rtls and then never transmitted

278
00:11:33,420 --> 00:11:35,339
again through the network this turned

279
00:11:35,339 --> 00:11:36,420
out to be the most challenging

280
00:11:36,420 --> 00:11:38,640
requirement for an attacker I can make a

281
00:11:38,640 --> 00:11:40,140
difference in the ultimate ability of

282
00:11:40,140 --> 00:11:42,959
estimating the position of attack or not

283
00:11:42,959 --> 00:11:44,820
if the attacker has physical access to

284
00:11:44,820 --> 00:11:46,320
the monitored area this problem can be

285
00:11:46,320 --> 00:11:48,660
solved in a variety of ways if tankers

286
00:11:48,660 --> 00:11:51,120
are visible it is Trivial if dankers are

287
00:11:51,120 --> 00:11:53,399
not visible attacker can still estimate

288
00:11:53,399 --> 00:11:55,320
their location for instance by measuring

289
00:11:55,320 --> 00:11:56,880
the overall level of that transmitted

290
00:11:56,880 --> 00:11:58,800
Wallace signals with them with the web

291
00:11:58,800 --> 00:12:01,500
and Wi-Fi or other as a matter of fact

292
00:12:01,500 --> 00:12:04,079
according to the test done the anchors

293
00:12:04,079 --> 00:12:06,540
code yes do not need to be super precise

294
00:12:06,540 --> 00:12:08,240
in order to get the position of attack

295
00:12:08,240 --> 00:12:10,260
distracted you can see on the slide

296
00:12:10,260 --> 00:12:12,660
correlates the average error of the

297
00:12:12,660 --> 00:12:14,519
attack coordinates while buying the

298
00:12:14,519 --> 00:12:16,200
error the Anchor's coordinates used as

299
00:12:16,200 --> 00:12:18,180
the import as you can see from this

300
00:12:18,180 --> 00:12:19,980
chart if 10 cross coordinates are

301
00:12:19,980 --> 00:12:21,720
estimated with the neglect is less than

302
00:12:21,720 --> 00:12:24,779
10 percent or about 10 percent the is

303
00:12:24,779 --> 00:12:26,040
that intact position is going to be

304
00:12:26,040 --> 00:12:27,720
estimated with inaugural it is less than

305
00:12:27,720 --> 00:12:29,880
20 percent but this is about 50

306
00:12:29,880 --> 00:12:31,620
centimeters in a six times four meter

307
00:12:31,620 --> 00:12:33,779
room and is definitely enough to perform

308
00:12:33,779 --> 00:12:35,820
attacks per centimeter level Precision

309
00:12:35,820 --> 00:12:37,980
is not really required

310
00:12:37,980 --> 00:12:40,860
however what if the attacker is removed

311
00:12:40,860 --> 00:12:43,440
as a matter of fact this information is

312
00:12:43,440 --> 00:12:45,320
never transmitted through the network

313
00:12:45,320 --> 00:12:48,240
nevertheless there is a technique that

314
00:12:48,240 --> 00:12:50,459
remote attackers can apply that we

315
00:12:50,459 --> 00:12:52,380
devise and we are presented to you right

316
00:12:52,380 --> 00:12:53,399
now

317
00:12:53,399 --> 00:12:55,980
so together with the time stones and

318
00:12:55,980 --> 00:12:58,260
Constance me to the rtls server also the

319
00:12:58,260 --> 00:12:59,639
power level information of the

320
00:12:59,639 --> 00:13:02,100
resultable band signal this allows the

321
00:13:02,100 --> 00:13:04,440
rtls server to filter out polar reserved

322
00:13:04,440 --> 00:13:05,700
Communications

323
00:13:05,700 --> 00:13:08,100
with this information the rtls server

324
00:13:08,100 --> 00:13:09,779
computes two different metrics the first

325
00:13:09,779 --> 00:13:11,519
part of our level that is the power

326
00:13:11,519 --> 00:13:13,620
level just for the first pass signal and

327
00:13:13,620 --> 00:13:15,240
the recipient power level that is the

328
00:13:15,240 --> 00:13:16,980
overall power level of the autonomous

329
00:13:16,980 --> 00:13:19,620
signal unfortunately we cannot derive

330
00:13:19,620 --> 00:13:21,540
immediately the distances from the power

331
00:13:21,540 --> 00:13:23,639
level information because those wouldn't

332
00:13:23,639 --> 00:13:25,920
be precise enough as a matter of fact

333
00:13:25,920 --> 00:13:27,360
they are too dependent on the

334
00:13:27,360 --> 00:13:29,220
environmental conditions that exist in a

335
00:13:29,220 --> 00:13:31,920
given moment however if in a given

336
00:13:31,920 --> 00:13:34,079
moment the power level information that

337
00:13:34,079 --> 00:13:35,820
comes from all angles is almost

338
00:13:35,820 --> 00:13:38,459
identical the targeted emitted diesel

339
00:13:38,459 --> 00:13:41,279
turbine signals can be considered about

340
00:13:41,279 --> 00:13:43,200
exactly the same distance from all of

341
00:13:43,200 --> 00:13:46,079
them but if this is true the first

342
00:13:46,079 --> 00:13:49,200
equation goes to zero and remembering

343
00:13:49,200 --> 00:13:51,540
that by definition the clock screw of

344
00:13:51,540 --> 00:13:52,860
the reference Uncle with respect to

345
00:13:52,860 --> 00:13:54,779
itself is one and the time of flight of

346
00:13:54,779 --> 00:13:55,980
the reference cycle with respect to

347
00:13:55,980 --> 00:13:58,800
itself is zero an attacker can now have

348
00:13:58,800 --> 00:14:01,500
enough information to estimate all time

349
00:14:01,500 --> 00:14:03,000
of flights between each new reference

350
00:14:03,000 --> 00:14:05,279
Sanko and the reference one and thus

351
00:14:05,279 --> 00:14:07,079
their distances

352
00:14:07,079 --> 00:14:09,300
okay but having the differences is still

353
00:14:09,300 --> 00:14:12,060
not enough we need the coordinates to

354
00:14:12,060 --> 00:14:14,100
this accident an attacker can leverage

355
00:14:14,100 --> 00:14:17,519
an installation constraint of rtls as a

356
00:14:17,519 --> 00:14:19,260
matter of fact thanks to the dilution of

357
00:14:19,260 --> 00:14:21,660
precision phenomena that correlates the

358
00:14:21,660 --> 00:14:23,720
position error with the ankles geometry

359
00:14:23,720 --> 00:14:26,700
ACLS vendors require that anchors are

360
00:14:26,700 --> 00:14:28,260
deployed in a shape that is as regular

361
00:14:28,260 --> 00:14:30,899
as possible ideally it must be a square

362
00:14:30,899 --> 00:14:34,380
at most a rectangle however given that

363
00:14:34,380 --> 00:14:36,540
we know the distances and given that now

364
00:14:36,540 --> 00:14:38,279
we know that the anchors map is going to

365
00:14:38,279 --> 00:14:40,139
be as regular as possible and most times

366
00:14:40,139 --> 00:14:42,600
the rectangle by arbitrary stacked in

367
00:14:42,600 --> 00:14:44,279
the reference anchor in position zero

368
00:14:44,279 --> 00:14:46,320
zero the coordinates of volada rankos

369
00:14:46,320 --> 00:14:47,760
can be easily estimated because they

370
00:14:47,760 --> 00:14:49,560
will be given simply by the two shortest

371
00:14:49,560 --> 00:14:51,839
distances and of course an attacker can

372
00:14:51,839 --> 00:14:54,300
adapt to estimated shape on on the basis

373
00:14:54,300 --> 00:14:56,459
of the number of uncles detected in the

374
00:14:56,459 --> 00:14:58,019
communications

375
00:14:58,019 --> 00:14:59,880
this was actually faster than the value

376
00:14:59,880 --> 00:15:03,060
of TLS by monitoring a moving tag for

377
00:15:03,060 --> 00:15:05,940
about two hours notably this chart is

378
00:15:05,940 --> 00:15:08,220
depicted in the slide correlates the

379
00:15:08,220 --> 00:15:09,839
average error of the uncose coordinates

380
00:15:09,839 --> 00:15:11,760
while bearing the acceptance threshold

381
00:15:11,760 --> 00:15:13,500
of the first popular level

382
00:15:13,500 --> 00:15:15,540
this shot means that if we set

383
00:15:15,540 --> 00:15:17,220
acceptance threshold the first power

384
00:15:17,220 --> 00:15:20,339
level to one percent the anchors

385
00:15:20,339 --> 00:15:21,600
coordinates are going to be estimated

386
00:15:21,600 --> 00:15:22,980
with the negot it is less than 10

387
00:15:22,980 --> 00:15:25,199
percent but if we remember from the

388
00:15:25,199 --> 00:15:27,420
previous chart this translates to a

389
00:15:27,420 --> 00:15:29,220
novel error of the attack position it is

390
00:15:29,220 --> 00:15:31,440
less than 20 percent and that's those 50

391
00:15:31,440 --> 00:15:32,880
centimeters that was previously

392
00:15:32,880 --> 00:15:36,060
mentioning but this means overall the

393
00:15:36,060 --> 00:15:39,060
completely remote attack can have an

394
00:15:39,060 --> 00:15:40,740
estimation of the anchors coordinates

395
00:15:40,740 --> 00:15:42,720
and thus can have an estimation of the

396
00:15:42,720 --> 00:15:45,060
attack position and thus practically

397
00:15:45,060 --> 00:15:47,220
Mount attacks against this system which

398
00:15:47,220 --> 00:15:51,480
attacks I will let Luca explain you all

399
00:15:51,480 --> 00:15:55,019
okay so in the previous slides we saw

400
00:15:55,019 --> 00:15:57,540
how to get the tag position starting

401
00:15:57,540 --> 00:16:00,360
from the timestamp that are sent from

402
00:16:00,360 --> 00:16:02,459
the anchors to the server

403
00:16:02,459 --> 00:16:04,680
in these slides we will see the

404
00:16:04,680 --> 00:16:07,079
adversary taxi tactics techniques and

405
00:16:07,079 --> 00:16:09,360
procedures that is the behavior of an

406
00:16:09,360 --> 00:16:13,380
attacker that wants to do an attack to

407
00:16:13,380 --> 00:16:16,019
those kind of kids

408
00:16:16,019 --> 00:16:18,839
so to perform any meaningful attacks

409
00:16:18,839 --> 00:16:21,420
against rtls an attacker first need to

410
00:16:21,420 --> 00:16:23,940
intercept all the network packets

411
00:16:23,940 --> 00:16:27,180
to do this first of all he needs to to

412
00:16:27,180 --> 00:16:30,899
get a foothold on the network that is

413
00:16:30,899 --> 00:16:33,420
used as for the communication between

414
00:16:33,420 --> 00:16:36,480
this the anchors and the server and then

415
00:16:36,480 --> 00:16:39,300
if needed he needs to execute a man in

416
00:16:39,300 --> 00:16:41,519
the middle attack in order to fetch all

417
00:16:41,519 --> 00:16:43,139
the packets

418
00:16:43,139 --> 00:16:46,560
so both save you and a value Ultra Ultra

419
00:16:46,560 --> 00:16:49,440
wet band kits allows Ethernet or Wi-Fi

420
00:16:49,440 --> 00:16:53,360
to access to the network backhaul

421
00:16:53,360 --> 00:16:56,820
in case of ethernet in order to access

422
00:16:56,820 --> 00:17:00,180
the network an attacker either needs to

423
00:17:00,180 --> 00:17:02,399
compromise a computer which is inside

424
00:17:02,399 --> 00:17:06,179
the network or add a rock device that

425
00:17:06,179 --> 00:17:09,359
will act as a network tap the complexity

426
00:17:09,359 --> 00:17:12,900
of those kind of attacks depends on the

427
00:17:12,900 --> 00:17:16,140
network topology and more precisely on

428
00:17:16,140 --> 00:17:19,199
how the net the the anchors are deployed

429
00:17:19,199 --> 00:17:22,140
within the networks for example if the

430
00:17:22,140 --> 00:17:25,380
anchors are deployed in more than one

431
00:17:25,380 --> 00:17:28,079
sub networks for an attacker it is

432
00:17:28,079 --> 00:17:30,900
sufficient to gain a foothold on one

433
00:17:30,900 --> 00:17:34,260
Subnet in order to be a be able to see

434
00:17:34,260 --> 00:17:36,960
all the traffic

435
00:17:36,960 --> 00:17:40,919
so for what concerned Wi-Fi uh both the

436
00:17:40,919 --> 00:17:43,200
ultimate band kit We examined the

437
00:17:43,200 --> 00:17:47,160
support vpa to psk as a protocol for

438
00:17:47,160 --> 00:17:50,820
secure the network communication so uh

439
00:17:50,820 --> 00:17:53,640
this time to gain access to a Wi-Fi an

440
00:17:53,640 --> 00:17:57,299
attacker needs to either know the vp2

441
00:17:57,299 --> 00:18:00,360
psk password or exploit some

442
00:18:00,360 --> 00:18:03,900
vulnerabilities if any in a network

443
00:18:03,900 --> 00:18:06,419
appliance which is inside the network

444
00:18:06,419 --> 00:18:08,940
where we wanted to do the attack

445
00:18:08,940 --> 00:18:10,940
as for the first point

446
00:18:10,940 --> 00:18:14,100
out of the box both the solution provide

447
00:18:14,100 --> 00:18:15,720
a custom

448
00:18:15,720 --> 00:18:18,539
um a default password which is the

449
00:18:18,539 --> 00:18:20,760
publicly available on the documentation

450
00:18:20,760 --> 00:18:22,799
which is on the internet and everyone

451
00:18:22,799 --> 00:18:26,280
can access it so the asset owner the

452
00:18:26,280 --> 00:18:29,160
final asset owner if is not going to

453
00:18:29,160 --> 00:18:32,039
change this default password on this kit

454
00:18:32,039 --> 00:18:34,080
for an attacker it is Trivial to access

455
00:18:34,080 --> 00:18:36,600
this network

456
00:18:36,600 --> 00:18:37,980
so

457
00:18:37,980 --> 00:18:40,140
as I told you before

458
00:18:40,140 --> 00:18:42,660
as a second step an attacker may need to

459
00:18:42,660 --> 00:18:45,000
perform a man in the middle attack

460
00:18:45,000 --> 00:18:48,600
in these slides we show the output of

461
00:18:48,600 --> 00:18:51,380
our men in the middle attack and the

462
00:18:51,380 --> 00:18:55,020
screenshot from water shark showing that

463
00:18:55,020 --> 00:18:56,940
once the event in the middle attack is

464
00:18:56,940 --> 00:18:59,400
launched we are able to see all the

465
00:18:59,400 --> 00:19:02,100
network traffic from the anchors to the

466
00:19:02,100 --> 00:19:04,860
server and vice versa

467
00:19:04,860 --> 00:19:07,620
noticing that for both the kit we

468
00:19:07,620 --> 00:19:11,039
realized it was sufficient to execute

469
00:19:11,039 --> 00:19:14,720
the standard ARP attack to be able to

470
00:19:14,720 --> 00:19:18,179
execute them in the middle attack and

471
00:19:18,179 --> 00:19:21,000
also it is worth noticing that the

472
00:19:21,000 --> 00:19:23,760
attacks were completely undetected by

473
00:19:23,760 --> 00:19:27,059
the rtls and no warnings or abnormal

474
00:19:27,059 --> 00:19:29,039
behavior that may alert an operator

475
00:19:29,039 --> 00:19:32,000
version

476
00:19:32,220 --> 00:19:36,960
so at this point we launched the men in

477
00:19:36,960 --> 00:19:39,059
the middle attack we get access to the

478
00:19:39,059 --> 00:19:41,580
network then we are ready to start

479
00:19:41,580 --> 00:19:44,880
fetching the position of the tags

480
00:19:44,880 --> 00:19:48,179
so picture number one show a possible

481
00:19:48,179 --> 00:19:50,760
position of a Target in a certain

482
00:19:50,760 --> 00:19:53,160
environment

483
00:19:53,160 --> 00:19:56,160
then we need to intercept all the

484
00:19:56,160 --> 00:19:59,640
traffic and now we know how to do it and

485
00:19:59,640 --> 00:20:02,640
then we need to apply a standard time

486
00:20:02,640 --> 00:20:05,460
difference of arrival algorithm that are

487
00:20:05,460 --> 00:20:07,740
available in literature to be able to

488
00:20:07,740 --> 00:20:10,380
compute the position of the target which

489
00:20:10,380 --> 00:20:13,340
is shown in each number four in our own

490
00:20:13,340 --> 00:20:17,220
application or environment

491
00:20:17,220 --> 00:20:20,760
at this point a logic question is it is

492
00:20:20,760 --> 00:20:23,580
possible to perform an active traffic

493
00:20:23,580 --> 00:20:25,260
manipulation attack

494
00:20:25,260 --> 00:20:29,820
well the answer is yes of course to do

495
00:20:29,820 --> 00:20:31,679
this an attacker needs to perform a

496
00:20:31,679 --> 00:20:34,080
two-step procedure from the first step

497
00:20:34,080 --> 00:20:37,679
he needs to perform a tag a target a

498
00:20:37,679 --> 00:20:40,799
recognizance and mimicking the aim of

499
00:20:40,799 --> 00:20:45,539
this step is to monitor the normal

500
00:20:45,539 --> 00:20:48,539
behavior and the normal movement of the

501
00:20:48,539 --> 00:20:52,559
tag within the environment it is in in

502
00:20:52,559 --> 00:20:55,020
order to be able to replicate this

503
00:20:55,020 --> 00:20:59,840
behavior and so a possible

504
00:20:59,840 --> 00:21:03,660
a possible monitoring system is not able

505
00:21:03,660 --> 00:21:08,340
to detect uh some abnormal behavior of

506
00:21:08,340 --> 00:21:09,720
this tag

507
00:21:09,720 --> 00:21:12,600
the Second Step consists in an active

508
00:21:12,600 --> 00:21:16,980
traffic filtering the key idea in this

509
00:21:16,980 --> 00:21:20,340
for this step is to leave the traffic as

510
00:21:20,340 --> 00:21:24,059
it is as far as possible so all the

511
00:21:24,059 --> 00:21:26,820
synchronization packets and the location

512
00:21:26,820 --> 00:21:29,400
packets that are

513
00:21:29,400 --> 00:21:32,280
um that refers to tag we are not

514
00:21:32,280 --> 00:21:33,900
interested in

515
00:21:33,900 --> 00:21:36,720
needs to be directly forwarded to the

516
00:21:36,720 --> 00:21:40,679
destination while location packets that

517
00:21:40,679 --> 00:21:43,320
are referring to the tag we are

518
00:21:43,320 --> 00:21:46,520
interested in in attacking needs to be

519
00:21:46,520 --> 00:21:49,919
change and modified change the payload

520
00:21:49,919 --> 00:21:53,280
change the timestamp and then send it to

521
00:21:53,280 --> 00:21:55,559
the destination for this work and for

522
00:21:55,559 --> 00:21:59,400
our demos we leverage nfq which is a

523
00:21:59,400 --> 00:22:02,280
flexible user user space packet Handler

524
00:22:02,280 --> 00:22:06,900
provided by iptables and the key idea

525
00:22:06,900 --> 00:22:10,020
behind the nfq is to store all the

526
00:22:10,020 --> 00:22:12,780
packets in a temporary queue then so

527
00:22:12,780 --> 00:22:15,960
that we can process one by one and then

528
00:22:15,960 --> 00:22:18,780
we can send the modified packet to the

529
00:22:18,780 --> 00:22:20,700
destination

530
00:22:20,700 --> 00:22:25,380
so now we know everything the last thing

531
00:22:25,380 --> 00:22:29,700
we need to do before really be able to

532
00:22:29,700 --> 00:22:33,480
perform an attack is to really modify

533
00:22:33,480 --> 00:22:36,780
the packet content

534
00:22:36,780 --> 00:22:40,620
um so to do this uh you can notice in

535
00:22:40,620 --> 00:22:43,260
this slide that the four bottom picture

536
00:22:43,260 --> 00:22:46,620
are the same one as for the passive if

537
00:22:46,620 --> 00:22:48,380
this dropping attack we showed before

538
00:22:48,380 --> 00:22:52,320
but in the reverse order the reason why

539
00:22:52,320 --> 00:22:56,220
is that in in the previous case we

540
00:22:56,220 --> 00:22:58,080
started from the network times

541
00:22:58,080 --> 00:23:01,140
temperature to reach the tag position in

542
00:23:01,140 --> 00:23:03,299
this case we start from a certain type

543
00:23:03,299 --> 00:23:05,520
position which is the one we need we we

544
00:23:05,520 --> 00:23:09,299
want that the tag is or the tag will

545
00:23:09,299 --> 00:23:11,159
appear to the operator

546
00:23:11,159 --> 00:23:16,200
and to obtain the timestamp that makes

547
00:23:16,200 --> 00:23:19,559
this tag be in that position okay so

548
00:23:19,559 --> 00:23:22,980
this time we choose a certain position

549
00:23:22,980 --> 00:23:25,860
like in picture number one that we apply

550
00:23:25,860 --> 00:23:29,280
the tdoa algorithm in backwards

551
00:23:29,280 --> 00:23:32,880
so that we can compute and we can get

552
00:23:32,880 --> 00:23:36,720
the timestamp we need for the the for a

553
00:23:36,720 --> 00:23:38,940
certain position of the tag we need to

554
00:23:38,940 --> 00:23:41,400
recompute all the checksum reapply the

555
00:23:41,400 --> 00:23:43,860
checksum and then we can send the packet

556
00:23:43,860 --> 00:23:46,559
to the destination

557
00:23:46,559 --> 00:23:48,059
all right

558
00:23:48,059 --> 00:23:50,340
it's demo time

559
00:23:50,340 --> 00:23:53,100
so we're going to demonstrate how an

560
00:23:53,100 --> 00:23:54,840
attacker can exploit the vulnerabilities

561
00:23:54,840 --> 00:23:56,820
we discovered

562
00:23:56,820 --> 00:24:00,139
um in three attack scenarios

563
00:24:00,299 --> 00:24:03,419
so our first scenario is locating and

564
00:24:03,419 --> 00:24:06,240
targeting people in assets we show how a

565
00:24:06,240 --> 00:24:08,039
threat actor eavesdrops on the network

566
00:24:08,039 --> 00:24:12,240
traffic in order to locate and Target an

567
00:24:12,240 --> 00:24:13,919
asset why would they want to do this

568
00:24:13,919 --> 00:24:16,200
they could want to stalk someone they

569
00:24:16,200 --> 00:24:18,000
could want to locate and steal something

570
00:24:18,000 --> 00:24:20,400
or they could just simply want to learn

571
00:24:20,400 --> 00:24:24,260
the environment let's take a look

572
00:24:25,080 --> 00:24:26,940
this is our victim in the first video

573
00:24:26,940 --> 00:24:30,080
wearing the tag

574
00:24:30,480 --> 00:24:32,340
so we're first going to see how tag

575
00:24:32,340 --> 00:24:35,480
tracking works as normal

576
00:24:36,299 --> 00:24:38,820
so Andre has been working all day

577
00:24:38,820 --> 00:24:40,740
sitting at his desk he wants to stretch

578
00:24:40,740 --> 00:24:42,419
his legs so he's taking a stroll around

579
00:24:42,419 --> 00:24:45,900
the office beautiful day in Switzerland

580
00:24:45,900 --> 00:24:47,700
now because he's wearing the tag the

581
00:24:47,700 --> 00:24:50,159
rtls server shows his movement and as

582
00:24:50,159 --> 00:24:52,380
you can see everything is accurate all

583
00:24:52,380 --> 00:24:54,799
is normal

584
00:24:55,919 --> 00:24:57,840
now let's see how a threat actor can

585
00:24:57,840 --> 00:25:00,000
manipulate this to eavesdrop eavesdrop

586
00:25:00,000 --> 00:25:02,580
on the network traffic

587
00:25:02,580 --> 00:25:05,400
so on the left is a Wireshark packet

588
00:25:05,400 --> 00:25:07,620
capture it shows that there's no

589
00:25:07,620 --> 00:25:10,080
location data populated therefore the

590
00:25:10,080 --> 00:25:12,179
Red Dot that's up at the right it

591
00:25:12,179 --> 00:25:13,980
doesn't move but once the man in the

592
00:25:13,980 --> 00:25:15,900
middle attack is launched all of that

593
00:25:15,900 --> 00:25:18,179
location data is loaded and now we start

594
00:25:18,179 --> 00:25:20,159
to see the Red Dot moving so this is

595
00:25:20,159 --> 00:25:22,440
what the attacker is able to see

596
00:25:22,440 --> 00:25:24,179
now let's compare it with the actual

597
00:25:24,179 --> 00:25:27,260
rtls server

598
00:25:28,559 --> 00:25:30,419
so on the right you have the attacker

599
00:25:30,419 --> 00:25:32,580
view which is identical to the actual

600
00:25:32,580 --> 00:25:35,340
rtls view what's most concerning about

601
00:25:35,340 --> 00:25:37,200
this is that there's not even an alert

602
00:25:37,200 --> 00:25:39,539
generated of this compromise so this is

603
00:25:39,539 --> 00:25:41,580
what eavesdropping on an rtls server

604
00:25:41,580 --> 00:25:43,939
looks like

605
00:25:50,400 --> 00:25:53,760
okay so in our second attack scenario we

606
00:25:53,760 --> 00:25:55,380
show how a threat actor can manipulate

607
00:25:55,380 --> 00:25:58,320
an rtls server that's used for contact

608
00:25:58,320 --> 00:26:01,020
tracing like in covid-19 and for the

609
00:26:01,020 --> 00:26:02,520
purpose of this you know no one has

610
00:26:02,520 --> 00:26:04,799
covid but for the purpose of the demo

611
00:26:04,799 --> 00:26:06,779
someone has covid so we can show what it

612
00:26:06,779 --> 00:26:10,440
looks like to fake contact or to be in

613
00:26:10,440 --> 00:26:12,900
contact with someone who has covid but

614
00:26:12,900 --> 00:26:14,340
it looks like you weren't in contact

615
00:26:14,340 --> 00:26:18,379
don't worry we'll explain it in the demo

616
00:26:19,679 --> 00:26:22,980
okay we have the two victims in the in

617
00:26:22,980 --> 00:26:25,440
the demo here wearing the tag now we're

618
00:26:25,440 --> 00:26:27,059
going to show you how contact tracing

619
00:26:27,059 --> 00:26:29,840
works as normal

620
00:26:34,679 --> 00:26:37,080
okay they're both wearing the tags you

621
00:26:37,080 --> 00:26:38,580
see they come into contact with each

622
00:26:38,580 --> 00:26:41,760
other and an alert is generated showing

623
00:26:41,760 --> 00:26:45,500
that there was a covid encounter

624
00:26:45,720 --> 00:26:47,820
so let's see how a threat actor can

625
00:26:47,820 --> 00:26:51,379
manipulate this to fake contact

626
00:26:52,500 --> 00:26:55,260
Andrea just walks past Luca no high no

627
00:26:55,260 --> 00:26:57,500
nothing

628
00:27:00,179 --> 00:27:02,159
now when the attacker launches the

629
00:27:02,159 --> 00:27:03,480
attack

630
00:27:03,480 --> 00:27:05,580
it shows that they in fact came in

631
00:27:05,580 --> 00:27:07,140
contact with each other which is not

632
00:27:07,140 --> 00:27:09,539
accurate

633
00:27:09,539 --> 00:27:11,520
and then an alert is generated to show

634
00:27:11,520 --> 00:27:13,440
that someone came in contact with kovid

635
00:27:13,440 --> 00:27:15,840
again which is not accurate

636
00:27:15,840 --> 00:27:17,460
now let's see how an attacker can

637
00:27:17,460 --> 00:27:21,200
manipulate this to fake avoidance

638
00:27:24,000 --> 00:27:28,220
Andrea's feeling more social today

639
00:27:28,799 --> 00:27:31,260
now when the attack is launched the

640
00:27:31,260 --> 00:27:32,880
threat actor is able to manipulate the

641
00:27:32,880 --> 00:27:34,500
positions to show that they didn't even

642
00:27:34,500 --> 00:27:36,720
come in contact with each other

643
00:27:36,720 --> 00:27:39,779
and because of this there's no alert to

644
00:27:39,779 --> 00:27:41,159
show that someone came in contact with

645
00:27:41,159 --> 00:27:42,900
covid and we know how damaging that

646
00:27:42,900 --> 00:27:45,200
could be

647
00:27:48,539 --> 00:27:50,580
so our last and final

648
00:27:50,580 --> 00:27:53,159
demo is geofencing so

649
00:27:53,159 --> 00:27:55,260
we configured a scada system from our

650
00:27:55,260 --> 00:27:57,179
production line demo in our lab to

651
00:27:57,179 --> 00:28:00,240
listen to rtls geofencing alerts to

652
00:28:00,240 --> 00:28:02,580
control a motor in two ways to either

653
00:28:02,580 --> 00:28:05,220
start or stop depending on if a worker

654
00:28:05,220 --> 00:28:07,200
is inside or outside of the geo-fencing

655
00:28:07,200 --> 00:28:09,059
Zone let's take a look at what this

656
00:28:09,059 --> 00:28:11,480
looks like

657
00:28:12,900 --> 00:28:15,539
here's our victim in this demo wearing

658
00:28:15,539 --> 00:28:16,980
the tag

659
00:28:16,980 --> 00:28:19,260
now this is our production line demo in

660
00:28:19,260 --> 00:28:21,840
our lab it shows the motor rotating the

661
00:28:21,840 --> 00:28:23,400
flasks and then there's a machine that's

662
00:28:23,400 --> 00:28:26,299
scanning the barcodes

663
00:28:26,820 --> 00:28:29,100
now here's how safety geofencing works

664
00:28:29,100 --> 00:28:31,699
as normal

665
00:28:34,559 --> 00:28:36,240
so you have the worker approaching the

666
00:28:36,240 --> 00:28:38,400
production line everything shuts down

667
00:28:38,400 --> 00:28:40,919
because he's within the geosensing zone

668
00:28:40,919 --> 00:28:43,320
however when he leaves production

669
00:28:43,320 --> 00:28:45,000
resumes as normal because he's outside

670
00:28:45,000 --> 00:28:47,520
of that safety zone and you can see it

671
00:28:47,520 --> 00:28:50,039
in the rtls server here the tag is

672
00:28:50,039 --> 00:28:52,500
within the geofencing zone

673
00:28:52,500 --> 00:28:54,299
an alert is generated to shut down

674
00:28:54,299 --> 00:28:55,860
production

675
00:28:55,860 --> 00:28:57,480
and then when the workers outside of

676
00:28:57,480 --> 00:28:59,640
that zone there's another alert

677
00:28:59,640 --> 00:29:01,020
generated

678
00:29:01,020 --> 00:29:04,200
to resume the production line

679
00:29:04,200 --> 00:29:05,940
now let's see how a threat actor can

680
00:29:05,940 --> 00:29:09,620
manipulate this to stop a production

681
00:29:09,799 --> 00:29:12,779
so as you can see no one is around the

682
00:29:12,779 --> 00:29:15,059
production line all of a sudden there's

683
00:29:15,059 --> 00:29:18,860
an alert and production stops

684
00:29:19,440 --> 00:29:22,679
let's see how an attacker did this

685
00:29:22,679 --> 00:29:24,419
so they launched an attack and they

686
00:29:24,419 --> 00:29:26,940
manipulated a tag and put it inside of

687
00:29:26,940 --> 00:29:29,580
the geosensing Zone because of this it

688
00:29:29,580 --> 00:29:31,260
generated an alert in it shut down

689
00:29:31,260 --> 00:29:33,059
production

690
00:29:33,059 --> 00:29:35,279
but as you can see there's no one around

691
00:29:35,279 --> 00:29:38,940
the production line and all is safe

692
00:29:38,940 --> 00:29:40,799
now let's see how a threat actor can do

693
00:29:40,799 --> 00:29:42,600
this to restart a production line with

694
00:29:42,600 --> 00:29:45,500
workers nearby

695
00:29:45,960 --> 00:29:48,659
okay so we have our worker at the

696
00:29:48,659 --> 00:29:50,880
production line the warning light comes

697
00:29:50,880 --> 00:29:53,100
on everything stops as normal but when

698
00:29:53,100 --> 00:29:55,380
the attack is launched the threat actor

699
00:29:55,380 --> 00:29:57,059
is able to manipulate that tag and take

700
00:29:57,059 --> 00:29:59,520
it outside of the geofencing zone

701
00:29:59,520 --> 00:30:01,620
and because of that

702
00:30:01,620 --> 00:30:04,740
production now restarts putting the

703
00:30:04,740 --> 00:30:06,720
worker In Harm's Way

704
00:30:06,720 --> 00:30:08,580
just imagine this happening in a

705
00:30:08,580 --> 00:30:10,500
manufacturing plant and the harm that it

706
00:30:10,500 --> 00:30:13,399
could do to workers

707
00:30:14,580 --> 00:30:17,159
this concludes our demos thank you

708
00:30:17,159 --> 00:30:19,020
okay

709
00:30:19,020 --> 00:30:22,980
so having shown do I guess this system

710
00:30:22,980 --> 00:30:25,140
it is not work nationally without the

711
00:30:25,140 --> 00:30:27,000
possible mitigations that an acetona can

712
00:30:27,000 --> 00:30:28,260
apply

713
00:30:28,260 --> 00:30:30,240
the first logical mitigation is the

714
00:30:30,240 --> 00:30:32,520
modern TLS into a segregator network and

715
00:30:32,520 --> 00:30:34,260
security success both physically and

716
00:30:34,260 --> 00:30:36,299
logically this is not mandated by San

717
00:30:36,299 --> 00:30:38,820
Martellus vendors the advantages of this

718
00:30:38,820 --> 00:30:40,860
solution is that it is relatively quick

719
00:30:40,860 --> 00:30:42,360
to deploy and can be enacted basically

720
00:30:42,360 --> 00:30:43,980
using very traditional Network Security

721
00:30:43,980 --> 00:30:46,260
Solutions however some challenges need

722
00:30:46,260 --> 00:30:48,659
to be considered first things first the

723
00:30:48,659 --> 00:30:50,399
atlas server usually has two network

724
00:30:50,399 --> 00:30:52,500
interfaces when I touch the background

725
00:30:52,500 --> 00:30:53,880
Network the other attached to the

726
00:30:53,880 --> 00:30:55,559
management network from which operators

727
00:30:55,559 --> 00:30:56,640
connect

728
00:30:56,640 --> 00:31:00,000
if the square Network it also by default

729
00:31:00,000 --> 00:31:03,240
the most rtls Services tend to expose

730
00:31:03,240 --> 00:31:04,679
the core network security services are

731
00:31:04,679 --> 00:31:06,899
not interfaces by default for Simplicity

732
00:31:06,899 --> 00:31:09,299
reasons so if those core Network

733
00:31:09,299 --> 00:31:11,100
Services are not adequately filtered

734
00:31:11,100 --> 00:31:13,020
from the management Network there could

735
00:31:13,020 --> 00:31:15,179
be room for general service attacks an

736
00:31:15,179 --> 00:31:16,679
attacker wouldn't be able to enact the

737
00:31:16,679 --> 00:31:17,940
attacks we have shown so far because

738
00:31:17,940 --> 00:31:20,279
this missing Vital Information however

739
00:31:20,279 --> 00:31:22,200
by fasting packets against the score

740
00:31:22,200 --> 00:31:23,940
Network Security Services it might

741
00:31:23,940 --> 00:31:26,100
actually be able to block the update of

742
00:31:26,100 --> 00:31:28,799
that position and thus tamper with Joe

743
00:31:28,799 --> 00:31:30,299
fencing and the contact racing roosters

744
00:31:30,299 --> 00:31:31,980
we are just we are just sure

745
00:31:31,980 --> 00:31:34,200
additionally if an attacker managed to

746
00:31:34,200 --> 00:31:36,179
physically touch the wild or compromise

747
00:31:36,179 --> 00:31:37,860
the wallet password at that point there

748
00:31:37,860 --> 00:31:39,299
would be nothing preventing them from

749
00:31:39,299 --> 00:31:40,919
successfully enacting all attack shown

750
00:31:40,919 --> 00:31:42,659
so far

751
00:31:42,659 --> 00:31:44,520
the second mitigation is to add an

752
00:31:44,520 --> 00:31:45,779
intrusion attraction system to the

753
00:31:45,779 --> 00:31:48,240
Buckle Network as a matter of fact as an

754
00:31:48,240 --> 00:31:49,860
attacker is bound to drama in the middle

755
00:31:49,860 --> 00:31:51,899
attack by monitoring for signatures such

756
00:31:51,899 --> 00:31:54,059
as new links between nodes and intuition

757
00:31:54,059 --> 00:31:55,559
detection system available on the market

758
00:31:55,559 --> 00:31:58,020
can perform these kinds of attacks the

759
00:31:58,020 --> 00:31:59,880
advantages is that it's very quick to

760
00:31:59,880 --> 00:32:01,440
deploy it's pretty much like on play

761
00:32:01,440 --> 00:32:04,020
however again it is inherently

762
00:32:04,020 --> 00:32:05,520
vulnerable to a physical man in the

763
00:32:05,520 --> 00:32:07,500
middle as a matter of fact even the

764
00:32:07,500 --> 00:32:08,640
worst case the active traffic

765
00:32:08,640 --> 00:32:10,919
manipulation attack the crafted traffic

766
00:32:10,919 --> 00:32:12,840
will be undistinguishable from the

767
00:32:12,840 --> 00:32:14,880
legitimate traffic if it precisely

768
00:32:14,880 --> 00:32:18,120
mimics the natural movements of a Target

769
00:32:18,120 --> 00:32:20,279
ultimately the main problem is the lack

770
00:32:20,279 --> 00:32:22,440
of Transport protection measures thus

771
00:32:22,440 --> 00:32:24,059
the most effective Mitigation Of An

772
00:32:24,059 --> 00:32:25,860
acetona can apply is to add an

773
00:32:25,860 --> 00:32:27,539
encryption Integrity layer on top of the

774
00:32:27,539 --> 00:32:29,700
existing Communications as a proof of

775
00:32:29,700 --> 00:32:31,679
concept and with the goal of using

776
00:32:31,679 --> 00:32:34,500
already well-known tools we attempted to

777
00:32:34,500 --> 00:32:37,080
to add the sssh tunnel on top of the

778
00:32:37,080 --> 00:32:39,419
value rtls as you can see from this

779
00:32:39,419 --> 00:32:40,980
Slide the pure series are the successful

780
00:32:40,980 --> 00:32:42,480
we were able to encrypt all traffic

781
00:32:42,480 --> 00:32:44,399
while preserving the Articles

782
00:32:44,399 --> 00:32:46,919
functionalities however again some

783
00:32:46,919 --> 00:32:49,500
challenges need to be considered the SSH

784
00:32:49,500 --> 00:32:51,659
tunnel increased the load on the anchors

785
00:32:51,659 --> 00:32:55,260
and in the end are the noticeable delays

786
00:32:55,260 --> 00:32:57,419
we were able to counteract this affect

787
00:32:57,419 --> 00:32:58,799
by decreasing the Synchro

788
00:32:58,799 --> 00:33:01,140
synchronization frequency but this also

789
00:33:01,140 --> 00:33:03,179
reduce the accuracy and this might be a

790
00:33:03,179 --> 00:33:04,559
problem for us at owners that want

791
00:33:04,559 --> 00:33:06,440
real-time precise stack position

792
00:33:06,440 --> 00:33:08,640
additionally this entire mitigation

793
00:33:08,640 --> 00:33:10,559
depends on the accessibility of the Ida

794
00:33:10,559 --> 00:33:12,360
direct LS server or the anchors by the

795
00:33:12,360 --> 00:33:15,240
band if one of them does not allow admin

796
00:33:15,240 --> 00:33:17,039
access in acting dissolution either

797
00:33:17,039 --> 00:33:19,019
requires an extensive work of firmware

798
00:33:19,019 --> 00:33:21,000
modification or would be simply not

799
00:33:21,000 --> 00:33:23,340
viable and with that said I will leave

800
00:33:23,340 --> 00:33:25,019
to Royal for the conclusions

801
00:33:25,019 --> 00:33:29,399
all right we unpacked a lot so let's do

802
00:33:29,399 --> 00:33:31,559
a quick recap

803
00:33:31,559 --> 00:33:33,059
security standards don't cover

804
00:33:33,059 --> 00:33:35,580
everything but with rtls being widely

805
00:33:35,580 --> 00:33:37,260
used we can't afford to have those

806
00:33:37,260 --> 00:33:39,000
loopholes and standards

807
00:33:39,000 --> 00:33:41,880
we disclose zero-day vulnerabilities in

808
00:33:41,880 --> 00:33:45,240
two popular uwb rtls's they're used for

809
00:33:45,240 --> 00:33:47,159
personnel tracking geofencing and

810
00:33:47,159 --> 00:33:49,559
contact tracing and we even demonstrated

811
00:33:49,559 --> 00:33:51,120
how a threat actor could launch a

812
00:33:51,120 --> 00:33:52,980
man-in-the-middle attack to eavesdrop or

813
00:33:52,980 --> 00:33:55,919
do other manipulation tactics we also

814
00:33:55,919 --> 00:33:58,260
provided some mitigations

815
00:33:58,260 --> 00:33:59,940
now if you don't remember anything else

816
00:33:59,940 --> 00:34:01,679
during this presentation we want you to

817
00:34:01,679 --> 00:34:03,779
walk away with these three things number

818
00:34:03,779 --> 00:34:06,360
one weak security requirements in

819
00:34:06,360 --> 00:34:08,099
critical software can lead to safety

820
00:34:08,099 --> 00:34:10,440
issues that cannot be ignored safety

821
00:34:10,440 --> 00:34:11,639
critical software should have

822
00:34:11,639 --> 00:34:15,000
well-defined security standards period

823
00:34:15,000 --> 00:34:17,940
number two there are attack surfaces out

824
00:34:17,940 --> 00:34:19,859
there that no one is looking at but they

825
00:34:19,859 --> 00:34:21,540
have significant consequences if

826
00:34:21,540 --> 00:34:23,520
compromised so while everyone was

827
00:34:23,520 --> 00:34:25,500
focusing on the communications between

828
00:34:25,500 --> 00:34:28,139
the anchors and the tags no one was

829
00:34:28,139 --> 00:34:29,699
focusing on the communications between

830
00:34:29,699 --> 00:34:31,800
the anchor and the servers

831
00:34:31,800 --> 00:34:34,260
so it's important to look at the entire

832
00:34:34,260 --> 00:34:36,179
attack surface and not just focus on one

833
00:34:36,179 --> 00:34:38,599
part while ignoring others and last

834
00:34:38,599 --> 00:34:40,918
exploiting secondary Communications in

835
00:34:40,918 --> 00:34:44,280
uwb rtls can be challenging but it's

836
00:34:44,280 --> 00:34:46,739
doable now prior to this talk these

837
00:34:46,739 --> 00:34:48,239
attack scenarios were considered

838
00:34:48,239 --> 00:34:50,339
unlikely but clearly in this

839
00:34:50,339 --> 00:34:52,020
presentation we showed that even though

840
00:34:52,020 --> 00:34:54,060
it does require specific knowledge it

841
00:34:54,060 --> 00:34:56,820
can be done and the devastating effects

842
00:34:56,820 --> 00:34:57,960
it can cause

843
00:34:57,960 --> 00:34:59,940
at the end of the day you can't have

844
00:34:59,940 --> 00:35:02,580
safety without security we hope this

845
00:35:02,580 --> 00:35:04,260
talk not only made you aware of security

846
00:35:04,260 --> 00:35:06,660
flaws but motivated you as researchers

847
00:35:06,660 --> 00:35:07,800
to continue to find those

848
00:35:07,800 --> 00:35:10,079
vulnerabilities to safeguard individuals

849
00:35:10,079 --> 00:35:12,359
businesses and the world

850
00:35:12,359 --> 00:35:16,680
security can be puzzling challenging and

851
00:35:16,680 --> 00:35:19,380
maybe even a little intimidating but it

852
00:35:19,380 --> 00:35:21,880
can be done thank you

853
00:35:21,880 --> 00:35:25,720
[Applause]

854
00:35:25,720 --> 00:35:28,830
[Music]

855
00:35:32,670 --> 00:35:35,780
[Music]

