1
00:00:01,730 --> 00:00:03,720
[Music]

2
00:00:03,720 --> 00:00:06,720
foreign

3
00:00:07,820 --> 00:00:10,500
hello everyone welcome to today's

4
00:00:10,500 --> 00:00:11,880
briefing

5
00:00:11,880 --> 00:00:14,219
I'm really excited to be talking here

6
00:00:14,219 --> 00:00:16,260
today with you

7
00:00:16,260 --> 00:00:17,580
um and I would like to say that my name

8
00:00:17,580 --> 00:00:20,039
is Clara Maine I'm originally from New

9
00:00:20,039 --> 00:00:22,080
York but I come to you as a recently

10
00:00:22,080 --> 00:00:24,000
graduated student from radboud

11
00:00:24,000 --> 00:00:26,160
University in the Netherlands

12
00:00:26,160 --> 00:00:28,859
and I wanted to talk to you today about

13
00:00:28,859 --> 00:00:31,380
a very exciting project that I and a few

14
00:00:31,380 --> 00:00:33,480
others have started which is about

15
00:00:33,480 --> 00:00:36,239
eliminating triage intermediaries for

16
00:00:36,239 --> 00:00:38,579
zero day exploits using a decentralized

17
00:00:38,579 --> 00:00:40,379
payout protocol

18
00:00:40,379 --> 00:00:42,780
so that's a bit of a mouthful of a title

19
00:00:42,780 --> 00:00:44,940
but in shorter words the story that I'm

20
00:00:44,940 --> 00:00:48,000
going to be telling today is it involves

21
00:00:48,000 --> 00:00:51,180
hackers bugs companies middle persons

22
00:00:51,180 --> 00:00:54,140
and a new protocol to mediate them all

23
00:00:54,140 --> 00:00:56,820
so I'll begin by making a fairly

24
00:00:56,820 --> 00:00:59,160
uncontroversial point which is that

25
00:00:59,160 --> 00:01:00,960
cyber security vulnerabilities are

26
00:01:00,960 --> 00:01:03,539
becoming increasingly relevant

27
00:01:03,539 --> 00:01:05,400
as more of the infrastructure which we

28
00:01:05,400 --> 00:01:07,200
use and depend upon daily becomes

29
00:01:07,200 --> 00:01:09,960
digitized ensuring the security of

30
00:01:09,960 --> 00:01:12,060
software is becoming as important as

31
00:01:12,060 --> 00:01:15,060
ensuring the security and safety of our

32
00:01:15,060 --> 00:01:16,740
physical world because the consequences

33
00:01:16,740 --> 00:01:19,979
can be just as devastating in some cases

34
00:01:19,979 --> 00:01:23,100
our work concerns bug bounties which are

35
00:01:23,100 --> 00:01:24,840
an important tool for addressing these

36
00:01:24,840 --> 00:01:26,820
vulnerabilities in a mutually beneficial

37
00:01:26,820 --> 00:01:29,640
way so hackers receive compensation for

38
00:01:29,640 --> 00:01:32,040
finding and disclosing exploits and

39
00:01:32,040 --> 00:01:33,659
companies are alerted of the

40
00:01:33,659 --> 00:01:36,240
vulnerabilities in their software from a

41
00:01:36,240 --> 00:01:38,400
Global Network of intelligence it's a

42
00:01:38,400 --> 00:01:41,119
pretty good system

43
00:01:42,000 --> 00:01:44,400
so I'll begin this talk by walking

44
00:01:44,400 --> 00:01:46,320
through what we believe to be a typical

45
00:01:46,320 --> 00:01:49,200
process of vulnerability disclosure from

46
00:01:49,200 --> 00:01:51,960
the perspective of an ethical hacker

47
00:01:51,960 --> 00:01:55,920
it begins with exploit identification so

48
00:01:55,920 --> 00:01:57,540
let's say that our hacker is

49
00:01:57,540 --> 00:01:59,579
investigating a software stack that

50
00:01:59,579 --> 00:02:02,040
they're interested in or perhaps they're

51
00:02:02,040 --> 00:02:03,960
already trying to apply a more

52
00:02:03,960 --> 00:02:06,420
generalized vulnerability

53
00:02:06,420 --> 00:02:08,459
um and they're looking to apply that

54
00:02:08,459 --> 00:02:11,038
after a bit of work they're successful

55
00:02:11,038 --> 00:02:13,200
they have found something that no one

56
00:02:13,200 --> 00:02:15,840
else has and they managed to write the

57
00:02:15,840 --> 00:02:18,300
code for a zero day exploit

58
00:02:18,300 --> 00:02:21,120
so now another question stands what can

59
00:02:21,120 --> 00:02:23,760
our ethical hacker do with this

60
00:02:23,760 --> 00:02:25,080
yeah

61
00:02:25,080 --> 00:02:28,800
there are a few barriers as to why the

62
00:02:28,800 --> 00:02:30,540
hacker might not go directly to the

63
00:02:30,540 --> 00:02:32,940
company or software developers which I

64
00:02:32,940 --> 00:02:35,160
would like to mention before moving on

65
00:02:35,160 --> 00:02:37,620
the first of these barriers is legality

66
00:02:37,620 --> 00:02:39,660
so the exploit May indeed be very

67
00:02:39,660 --> 00:02:41,819
important to share but the hacker may

68
00:02:41,819 --> 00:02:43,980
have found it in less than legal ways

69
00:02:43,980 --> 00:02:46,200
which might bring some hesitation to the

70
00:02:46,200 --> 00:02:48,360
disclosure of the exploit

71
00:02:48,360 --> 00:02:50,640
second even if it was found completely

72
00:02:50,640 --> 00:02:52,920
legally it might be hard to convince the

73
00:02:52,920 --> 00:02:55,860
owners of the software the owners of the

74
00:02:55,860 --> 00:02:58,019
software of the severity of the exploit

75
00:02:58,019 --> 00:03:01,080
and negotiate a fair price from that so

76
00:03:01,080 --> 00:03:02,819
if they approach with full transparency

77
00:03:02,819 --> 00:03:04,620
this is the exploit this is how I found

78
00:03:04,620 --> 00:03:06,180
it then they give up their leverage to

79
00:03:06,180 --> 00:03:08,420
receive compensation

80
00:03:08,420 --> 00:03:12,000
and finally a third barrier is that

81
00:03:12,000 --> 00:03:14,159
small firms and users of the software

82
00:03:14,159 --> 00:03:16,140
who are still affected if an exploit is

83
00:03:16,140 --> 00:03:18,840
found uh and leveraged they might not

84
00:03:18,840 --> 00:03:20,519
have the technical knowledge or budget

85
00:03:20,519 --> 00:03:22,200
to properly deal with the zero day

86
00:03:22,200 --> 00:03:27,360
exploit so these were a few reasons uh

87
00:03:27,360 --> 00:03:29,040
as to why this process can't be

88
00:03:29,040 --> 00:03:32,760
completely transparent and direct

89
00:03:32,760 --> 00:03:35,400
so given this the solution that has been

90
00:03:35,400 --> 00:03:37,200
found for these issues are so-called

91
00:03:37,200 --> 00:03:39,780
triage intermediaries

92
00:03:39,780 --> 00:03:41,940
these intermediaries act as middle

93
00:03:41,940 --> 00:03:44,760
persons they perform the task of

94
00:03:44,760 --> 00:03:46,980
evaluating the exploit independent of

95
00:03:46,980 --> 00:03:50,119
conflicting interests

96
00:03:50,340 --> 00:03:51,840
and they're also very useful in

97
00:03:51,840 --> 00:03:53,519
negotiating a payout between the

98
00:03:53,519 --> 00:03:56,720
companies and the hacker

99
00:03:57,000 --> 00:04:00,299
so for a long time this has been a fine

100
00:04:00,299 --> 00:04:03,299
way to go about this process

101
00:04:03,299 --> 00:04:05,340
but there are a few problems which

102
00:04:05,340 --> 00:04:07,860
should not be ignored

103
00:04:07,860 --> 00:04:11,220
this triage process is very taxing on

104
00:04:11,220 --> 00:04:13,799
time and money because the

105
00:04:13,799 --> 00:04:15,959
intermediaries need to take the time to

106
00:04:15,959 --> 00:04:18,540
understand the exploit which can be

107
00:04:18,540 --> 00:04:19,978
really complicated depending on how

108
00:04:19,978 --> 00:04:22,740
complex it is and they assess the value

109
00:04:22,740 --> 00:04:24,600
of the exploit to the company which

110
00:04:24,600 --> 00:04:26,520
requires knowing a lot about the company

111
00:04:26,520 --> 00:04:29,220
and how it functions

112
00:04:29,220 --> 00:04:30,780
so these are both things which the

113
00:04:30,780 --> 00:04:32,639
hacker and the company know much better

114
00:04:32,639 --> 00:04:35,639
than any uh intermediary because the

115
00:04:35,639 --> 00:04:37,620
hacker knows if the bug applies because

116
00:04:37,620 --> 00:04:40,080
they wrote it and the company itself

117
00:04:40,080 --> 00:04:42,120
should be able to better assess what

118
00:04:42,120 --> 00:04:44,460
exactly the impact of the exploit may be

119
00:04:44,460 --> 00:04:46,919
on their operation granted that they

120
00:04:46,919 --> 00:04:51,020
have a technical expertise to do so

121
00:04:51,660 --> 00:04:53,100
so

122
00:04:53,100 --> 00:04:55,259
if direct vulnerability disclosure is

123
00:04:55,259 --> 00:04:58,080
not feasible and triage intermediaries

124
00:04:58,080 --> 00:05:01,500
are expensive

125
00:05:01,500 --> 00:05:04,020
could there be a better way of mediating

126
00:05:04,020 --> 00:05:06,360
these two parties

127
00:05:06,360 --> 00:05:08,220
of course because I am standing in front

128
00:05:08,220 --> 00:05:10,199
of you here today I'd like to reassure

129
00:05:10,199 --> 00:05:12,780
you that the answer is yes

130
00:05:12,780 --> 00:05:14,820
and in our white paper we present the

131
00:05:14,820 --> 00:05:17,040
true sex protocol which provides an

132
00:05:17,040 --> 00:05:18,900
automated solution to vulnerability

133
00:05:18,900 --> 00:05:20,759
disclosure

134
00:05:20,759 --> 00:05:23,039
it is useful to both hackers interested

135
00:05:23,039 --> 00:05:24,900
in the process with more certainty on

136
00:05:24,900 --> 00:05:27,360
how much and when they will be paid for

137
00:05:27,360 --> 00:05:29,220
an exploit before they begin working on

138
00:05:29,220 --> 00:05:30,840
it

139
00:05:30,840 --> 00:05:32,580
and it's also useful to companies

140
00:05:32,580 --> 00:05:34,919
letting them demonstrate quantitatively

141
00:05:34,919 --> 00:05:37,740
how secure their software is in terms of

142
00:05:37,740 --> 00:05:39,360
dollar Stakes against these

143
00:05:39,360 --> 00:05:41,460
deterministically verifiable zero-day

144
00:05:41,460 --> 00:05:44,120
exploits

145
00:05:44,280 --> 00:05:46,500
so our approach to improving this

146
00:05:46,500 --> 00:05:49,080
process is with a decentralized payout

147
00:05:49,080 --> 00:05:51,840
protocol and to explain how and why we

148
00:05:51,840 --> 00:05:53,880
use this approach I'd like to give a

149
00:05:53,880 --> 00:05:56,100
little backstory for our team and why we

150
00:05:56,100 --> 00:05:57,600
developed this protocol in the first

151
00:05:57,600 --> 00:05:59,840
place

152
00:06:00,240 --> 00:06:03,660
so this is the portion of the team who

153
00:06:03,660 --> 00:06:06,720
made the cut to the slides and in 2020

154
00:06:06,720 --> 00:06:08,280
we were working on a different Project

155
00:06:08,280 --> 00:06:10,620
without the time and knowledge to do all

156
00:06:10,620 --> 00:06:12,240
the programming ourselves

157
00:06:12,240 --> 00:06:14,460
and we wanted to set some programming

158
00:06:14,460 --> 00:06:15,600
bounties

159
00:06:15,600 --> 00:06:17,880
but on every platform we encountered

160
00:06:17,880 --> 00:06:20,100
middle persons there was no way to get

161
00:06:20,100 --> 00:06:22,199
100 of what we were spending to the

162
00:06:22,199 --> 00:06:24,060
person actually doing the work that we

163
00:06:24,060 --> 00:06:25,199
needed

164
00:06:25,199 --> 00:06:28,500
so in 2012 so in 2021 we assembled a

165
00:06:28,500 --> 00:06:31,199
student team competed at eth Denver and

166
00:06:31,199 --> 00:06:32,699
developed what we call the true call

167
00:06:32,699 --> 00:06:34,440
protocol

168
00:06:34,440 --> 00:06:36,539
we presented that at the ethereum

169
00:06:36,539 --> 00:06:39,000
conference in Paris last year and we're

170
00:06:39,000 --> 00:06:40,319
really excited to be presenting the

171
00:06:40,319 --> 00:06:42,780
cyber security variant at black hat this

172
00:06:42,780 --> 00:06:44,819
year

173
00:06:44,819 --> 00:06:47,460
so whereas the true call protocol was

174
00:06:47,460 --> 00:06:49,919
about programming bounties today we're

175
00:06:49,919 --> 00:06:52,860
presenting true SEC which is the cyber

176
00:06:52,860 --> 00:06:55,199
security version of this protocol

177
00:06:55,199 --> 00:06:57,360
we found that zero day exploits

178
00:06:57,360 --> 00:06:59,340
translate really well to Smart contracts

179
00:06:59,340 --> 00:07:01,740
and intermediaries exist both in the bug

180
00:07:01,740 --> 00:07:04,380
Bounty and programming Bounty spaces

181
00:07:04,380 --> 00:07:06,600
so it translated very well and we're

182
00:07:06,600 --> 00:07:08,280
excited to bring this protocol to the

183
00:07:08,280 --> 00:07:11,400
infosec community here

184
00:07:11,400 --> 00:07:14,039
we think that it would be a really

185
00:07:14,039 --> 00:07:16,500
beneficial thing for this field

186
00:07:16,500 --> 00:07:18,840
because the way that it works is that

187
00:07:18,840 --> 00:07:20,940
Collective staking means collective

188
00:07:20,940 --> 00:07:23,520
security so the more entities that we

189
00:07:23,520 --> 00:07:25,919
have who depend upon a software

190
00:07:25,919 --> 00:07:28,259
the more entities who choose to invest

191
00:07:28,259 --> 00:07:30,720
in its Security in the more secure the

192
00:07:30,720 --> 00:07:32,819
software then becomes

193
00:07:32,819 --> 00:07:34,199
we also think it would be really great

194
00:07:34,199 --> 00:07:36,000
because it allows for this quantitative

195
00:07:36,000 --> 00:07:38,280
demonstration of security in terms of

196
00:07:38,280 --> 00:07:40,639
dollar Stakes against these exploits

197
00:07:40,639 --> 00:07:42,840
deterministically verifiable zero-day

198
00:07:42,840 --> 00:07:45,120
exploits

199
00:07:45,120 --> 00:07:46,919
um and we also think it'd be really

200
00:07:46,919 --> 00:07:48,960
valuable because of the guaranteed

201
00:07:48,960 --> 00:07:51,240
payout for hackers who rely on this kind

202
00:07:51,240 --> 00:07:53,880
of work and would like some indication

203
00:07:53,880 --> 00:07:57,539
of stability

204
00:07:57,539 --> 00:08:01,500
so I've explained to you the why but how

205
00:08:01,500 --> 00:08:04,560
could this really work in practice

206
00:08:04,560 --> 00:08:07,440
so this is the protocol from our white

207
00:08:07,440 --> 00:08:09,419
paper I'm just going to leave this up

208
00:08:09,419 --> 00:08:12,000
for around 10 minutes the text is sort

209
00:08:12,000 --> 00:08:13,620
of small but we've included some

210
00:08:13,620 --> 00:08:15,840
binoculars under your street under your

211
00:08:15,840 --> 00:08:17,460
seat so that you can follow along for

212
00:08:17,460 --> 00:08:20,419
the rest of the presentation

213
00:08:21,300 --> 00:08:23,160
cool I'm joking

214
00:08:23,160 --> 00:08:24,720
um I have a much better present

215
00:08:24,720 --> 00:08:27,000
explanation coming in the next part of

216
00:08:27,000 --> 00:08:28,620
this talk but I thought that it was

217
00:08:28,620 --> 00:08:30,660
still important to show you this uh just

218
00:08:30,660 --> 00:08:31,740
to give you a sense of the general

219
00:08:31,740 --> 00:08:33,599
structure and flow of the protocol

220
00:08:33,599 --> 00:08:36,479
before we get into the nitty-gritty

221
00:08:36,479 --> 00:08:37,799
so

222
00:08:37,799 --> 00:08:40,740
here we have these columns which

223
00:08:40,740 --> 00:08:42,240
represent a different entity or

224
00:08:42,240 --> 00:08:45,240
technical element to the left we have

225
00:08:45,240 --> 00:08:48,720
big company a and small Company B uh

226
00:08:48,720 --> 00:08:50,399
with software Stacks that they'd like to

227
00:08:50,399 --> 00:08:53,100
have secured and in the middle we have a

228
00:08:53,100 --> 00:08:55,200
decentralized virtual machine containing

229
00:08:55,200 --> 00:08:56,940
some software stack as well as the

230
00:08:56,940 --> 00:08:58,459
actual exploit

231
00:08:58,459 --> 00:09:00,680
another entity

232
00:09:00,680 --> 00:09:03,420
and the associated smart contract for

233
00:09:03,420 --> 00:09:06,300
the exploit which has been identified

234
00:09:06,300 --> 00:09:08,100
and of course to the right we also have

235
00:09:08,100 --> 00:09:11,040
our ethical hacker so from this overview

236
00:09:11,040 --> 00:09:13,440
you can just see vaguely that the

237
00:09:13,440 --> 00:09:15,420
protocol begins with the companies and

238
00:09:15,420 --> 00:09:17,880
sort of flows to the decentralized

239
00:09:17,880 --> 00:09:19,800
virtual machine and then to the ethical

240
00:09:19,800 --> 00:09:22,080
hacker who then begins this process of

241
00:09:22,080 --> 00:09:24,300
automated triage

242
00:09:24,300 --> 00:09:25,800
um which is basically just checking the

243
00:09:25,800 --> 00:09:28,320
applicability of the exploit to the

244
00:09:28,320 --> 00:09:29,279
software

245
00:09:29,279 --> 00:09:30,360
Etc

246
00:09:30,360 --> 00:09:32,519
and then the protocol circles back to

247
00:09:32,519 --> 00:09:34,560
the companies who can patch and redeploy

248
00:09:34,560 --> 00:09:36,660
their systems in this sort of iterative

249
00:09:36,660 --> 00:09:38,240
process

250
00:09:38,240 --> 00:09:42,480
but that was a bit vague

251
00:09:42,480 --> 00:09:44,580
um so let's get into this protocol with

252
00:09:44,580 --> 00:09:47,459
a little more detail and style

253
00:09:47,459 --> 00:09:49,699
foreign

254
00:09:52,040 --> 00:09:55,440
so the protocol begins with companies

255
00:09:55,440 --> 00:09:57,540
collectively staking security bounties

256
00:09:57,540 --> 00:10:00,180
into a smart contract

257
00:10:00,180 --> 00:10:02,880
so this smart contract contains

258
00:10:02,880 --> 00:10:04,920
information like how much money has been

259
00:10:04,920 --> 00:10:06,000
staked

260
00:10:06,000 --> 00:10:09,240
compounded uh the minimum disclosure

261
00:10:09,240 --> 00:10:11,339
time so that's basically the time that

262
00:10:11,339 --> 00:10:12,839
the companies would need to patch the

263
00:10:12,839 --> 00:10:14,820
product and also how much time the

264
00:10:14,820 --> 00:10:16,260
hacker would have to weigh to get paid

265
00:10:16,260 --> 00:10:17,339
out

266
00:10:17,339 --> 00:10:20,399
it includes a public key corresponding

267
00:10:20,399 --> 00:10:22,320
to all of the stakeholders so there

268
00:10:22,320 --> 00:10:24,240
would be a public key for big company a

269
00:10:24,240 --> 00:10:26,040
and small Company B

270
00:10:26,040 --> 00:10:28,500
uh as well as information possibly

271
00:10:28,500 --> 00:10:30,300
differentiating payout amounts for

272
00:10:30,300 --> 00:10:32,580
different kinds of exploits so you may

273
00:10:32,580 --> 00:10:36,060
have pay out a one sum for read exploit

274
00:10:36,060 --> 00:10:38,459
or one some for right to exploit

275
00:10:38,459 --> 00:10:41,519
this smart contract controls this

276
00:10:41,519 --> 00:10:44,399
decentralized virtual machine which has

277
00:10:44,399 --> 00:10:47,579
the software stack and some Secret

278
00:10:47,579 --> 00:10:49,680
which if compromise would create a

279
00:10:49,680 --> 00:10:51,360
vulnerability and this is what the

280
00:10:51,360 --> 00:10:53,399
hackers ethical hackers are going to be

281
00:10:53,399 --> 00:10:56,339
looking for as they peruse these uh

282
00:10:56,339 --> 00:10:57,720
software stacks

283
00:10:57,720 --> 00:10:59,760
so this is the first phase of the

284
00:10:59,760 --> 00:11:02,579
protocol companies staking money on

285
00:11:02,579 --> 00:11:04,980
software uh and putting it into a smart

286
00:11:04,980 --> 00:11:07,459
contract

287
00:11:07,980 --> 00:11:10,860
so from the other perspective we have

288
00:11:10,860 --> 00:11:12,959
hackers scanning the blockchain for

289
00:11:12,959 --> 00:11:15,480
smart contract bounties they can see the

290
00:11:15,480 --> 00:11:17,040
amount staked when they'll get the

291
00:11:17,040 --> 00:11:19,380
reward and which software stack they're

292
00:11:19,380 --> 00:11:20,519
looking at

293
00:11:20,519 --> 00:11:23,339
and uh investigating these decentralized

294
00:11:23,339 --> 00:11:25,920
virtual machines and software stacks for

295
00:11:25,920 --> 00:11:28,740
exploits we also see exactly how much

296
00:11:28,740 --> 00:11:31,140
the payout could be and when

297
00:11:31,140 --> 00:11:34,680
and like before a hacker finds a zero

298
00:11:34,680 --> 00:11:37,019
day exploit

299
00:11:37,019 --> 00:11:39,360
so this exploit is placed in a

300
00:11:39,360 --> 00:11:41,640
decentralized vault which is set to open

301
00:11:41,640 --> 00:11:43,620
at the end of the longer of the

302
00:11:43,620 --> 00:11:45,360
responsible disclosure times in this

303
00:11:45,360 --> 00:11:47,279
case it's 90 days which is the

304
00:11:47,279 --> 00:11:50,160
disclosure time of the small company

305
00:11:50,160 --> 00:11:52,320
and the vault is represented by this

306
00:11:52,320 --> 00:11:54,600
Square here

307
00:11:54,600 --> 00:11:55,260
um

308
00:11:55,260 --> 00:11:57,300
finally

309
00:11:57,300 --> 00:12:00,959
oh wait yeah Additionally the public

310
00:12:00,959 --> 00:12:03,240
keys of the stakeholders are included so

311
00:12:03,240 --> 00:12:04,920
that they can access the exploit before

312
00:12:04,920 --> 00:12:07,140
the public which is pretty important if

313
00:12:07,140 --> 00:12:09,660
you want to patch your software in time

314
00:12:09,660 --> 00:12:12,240
and finally the hacker writes a smart

315
00:12:12,240 --> 00:12:14,220
contract themselves

316
00:12:14,220 --> 00:12:16,019
um which points to the decentralized

317
00:12:16,019 --> 00:12:18,720
locker location and with it also covers

318
00:12:18,720 --> 00:12:20,820
any energy expenses which are needed for

319
00:12:20,820 --> 00:12:22,800
the evaluation

320
00:12:22,800 --> 00:12:25,560
so this uh point about covering the

321
00:12:25,560 --> 00:12:27,660
expenses can really help avoid clogging

322
00:12:27,660 --> 00:12:29,820
the network with unnecessary evaluation

323
00:12:29,820 --> 00:12:31,380
since the hacker has to put their own

324
00:12:31,380 --> 00:12:34,320
money down for it

325
00:12:34,320 --> 00:12:37,860
um yes so this is it companies stake

326
00:12:37,860 --> 00:12:40,079
money on software hackers find exploits

327
00:12:40,079 --> 00:12:42,360
and put it in these decentralized faults

328
00:12:42,360 --> 00:12:45,120
with their Associated smart contract

329
00:12:45,120 --> 00:12:48,360
pretty simple so far

330
00:12:48,360 --> 00:12:51,240
so simultaneously to all of that and

331
00:12:51,240 --> 00:12:53,700
this is where we sort of get to where uh

332
00:12:53,700 --> 00:12:56,880
the more automated process

333
00:12:56,880 --> 00:13:00,180
the contract with the exploit reaches

334
00:13:00,180 --> 00:13:01,800
out to the decentralized virtual machine

335
00:13:01,800 --> 00:13:04,500
smart contract and asks for evaluation

336
00:13:04,500 --> 00:13:07,019
basically hey I found a bug please check

337
00:13:07,019 --> 00:13:08,639
if it applies

338
00:13:08,639 --> 00:13:10,680
uh and the companies you see are

339
00:13:10,680 --> 00:13:12,779
notified that an exploit has been

340
00:13:12,779 --> 00:13:13,500
uncovered

341
00:13:13,500 --> 00:13:16,500
[Music]

342
00:13:16,500 --> 00:13:18,899
so now in the meantime the companies are

343
00:13:18,899 --> 00:13:21,300
able to exclusively read the exploit via

344
00:13:21,300 --> 00:13:24,000
a private key

345
00:13:24,000 --> 00:13:26,160
and they work to patch their systems

346
00:13:26,160 --> 00:13:28,260
before the responsibility disclosure

347
00:13:28,260 --> 00:13:31,399
times are up

348
00:13:33,959 --> 00:13:35,579
all right

349
00:13:35,579 --> 00:13:37,560
so that was sort of the first phase of

350
00:13:37,560 --> 00:13:38,880
the protocol

351
00:13:38,880 --> 00:13:40,920
uh and all of that happens before the

352
00:13:40,920 --> 00:13:43,440
responsible disclosure time is up but

353
00:13:43,440 --> 00:13:45,240
after 90 days

354
00:13:45,240 --> 00:13:48,899
uh their time is up and the zero date

355
00:13:48,899 --> 00:13:50,880
exploit is released publicly for all the

356
00:13:50,880 --> 00:13:54,540
world to see and also learn from

357
00:13:54,540 --> 00:13:57,240
um and after that the exploit is then

358
00:13:57,240 --> 00:13:58,440
applied

359
00:13:58,440 --> 00:14:00,959
to the unpatched software in the

360
00:14:00,959 --> 00:14:02,639
decentralized virtual machine with

361
00:14:02,639 --> 00:14:04,860
evaluation costs being covered by the

362
00:14:04,860 --> 00:14:07,260
hacker as mentioned before

363
00:14:07,260 --> 00:14:10,139
so if the exploit manages to

364
00:14:10,139 --> 00:14:12,360
successfully compromise a secret in the

365
00:14:12,360 --> 00:14:15,240
decentralized virtual machine then the

366
00:14:15,240 --> 00:14:16,920
smart contract associated with the

367
00:14:16,920 --> 00:14:18,839
decentralized virtual machine pays out

368
00:14:18,839 --> 00:14:21,600
to the hackers exploit contract

369
00:14:21,600 --> 00:14:25,380
and that is essentially one full pass of

370
00:14:25,380 --> 00:14:27,480
our protocol

371
00:14:27,480 --> 00:14:31,459
hopefully you got most of that

372
00:14:33,959 --> 00:14:37,200
as for the companies

373
00:14:37,200 --> 00:14:39,120
they can continue this cycle by

374
00:14:39,120 --> 00:14:42,060
continually patching and redeploying

375
00:14:42,060 --> 00:14:44,399
their software while collectively

376
00:14:44,399 --> 00:14:46,440
staking money on the security of the

377
00:14:46,440 --> 00:14:50,100
software against zero day exploits

378
00:14:50,100 --> 00:14:53,639
and with each iteration of this sort of

379
00:14:53,639 --> 00:14:56,160
simplified Circle the software can

380
00:14:56,160 --> 00:14:58,279
become a bit more secure

381
00:14:58,279 --> 00:15:01,019
benefiting companies and also hackers

382
00:15:01,019 --> 00:15:05,720
without the presence of a middle person

383
00:15:06,240 --> 00:15:07,920
so

384
00:15:07,920 --> 00:15:10,199
that answers the how

385
00:15:10,199 --> 00:15:12,839
but there are still a few howevers that

386
00:15:12,839 --> 00:15:14,639
we'd like to mention before the end of

387
00:15:14,639 --> 00:15:17,240
this talk

388
00:15:19,560 --> 00:15:21,180
um the first is about the scope of the

389
00:15:21,180 --> 00:15:22,199
protocol

390
00:15:22,199 --> 00:15:24,240
so the scope is most specifically

391
00:15:24,240 --> 00:15:26,220
designed for these zero day exploits as

392
00:15:26,220 --> 00:15:28,579
I have mentioned a bunch of times before

393
00:15:28,579 --> 00:15:31,800
uh and it possibly also is applicable to

394
00:15:31,800 --> 00:15:33,180
some supply chain attacks and

395
00:15:33,180 --> 00:15:35,519
misconfiguration exploits

396
00:15:35,519 --> 00:15:36,959
but it's clearly not going to cover

397
00:15:36,959 --> 00:15:39,300
social engineering or other attack

398
00:15:39,300 --> 00:15:42,480
surfaces and so we admit that most hacks

399
00:15:42,480 --> 00:15:45,720
do not reply actually rely solely on

400
00:15:45,720 --> 00:15:48,779
pure zero day exploits so the scope is

401
00:15:48,779 --> 00:15:50,459
limited with respect to the complete

402
00:15:50,459 --> 00:15:52,130
cyber security landscape

403
00:15:52,130 --> 00:15:55,189
[Music]

404
00:15:56,279 --> 00:15:58,380
some more limitations

405
00:15:58,380 --> 00:16:01,440
we have a couple the first point is that

406
00:16:01,440 --> 00:16:03,540
the protocol is pretty All or Nothing

407
00:16:03,540 --> 00:16:06,300
the Bounty contract must be correctly

408
00:16:06,300 --> 00:16:08,339
specified because there are no

409
00:16:08,339 --> 00:16:10,500
intermediaries to soften the blow of an

410
00:16:10,500 --> 00:16:13,380
incorrectly specified Bounty contract so

411
00:16:13,380 --> 00:16:15,120
if the hackers exploit satisfies the

412
00:16:15,120 --> 00:16:17,699
contract the Bounty is paid

413
00:16:17,699 --> 00:16:20,040
uh we are working on a softer version of

414
00:16:20,040 --> 00:16:21,839
the protocol and if anyone has any idea

415
00:16:21,839 --> 00:16:23,459
for that please do join us in the wrap

416
00:16:23,459 --> 00:16:25,680
room

417
00:16:25,680 --> 00:16:28,500
um a second limitation is that the

418
00:16:28,500 --> 00:16:29,940
protocol only applies to

419
00:16:29,940 --> 00:16:32,160
deterministically verifiable zero-day

420
00:16:32,160 --> 00:16:33,779
exploits

421
00:16:33,779 --> 00:16:36,959
so this means that security compromises

422
00:16:36,959 --> 00:16:37,560
um

423
00:16:37,560 --> 00:16:39,959
which are not sort of clearly predefined

424
00:16:39,959 --> 00:16:43,079
deterministically verifiable read or

425
00:16:43,079 --> 00:16:45,120
write compromises would be sort of

426
00:16:45,120 --> 00:16:46,860
difficult to include as part of the

427
00:16:46,860 --> 00:16:49,920
protocol we are also interested in

428
00:16:49,920 --> 00:16:51,720
compliance applications as well but

429
00:16:51,720 --> 00:16:54,420
we're just getting started on that

430
00:16:54,420 --> 00:16:56,639
um and also if a hacker manages to gain

431
00:16:56,639 --> 00:16:59,279
read access but the contract only pays

432
00:16:59,279 --> 00:17:01,320
out for right access then the hacker

433
00:17:01,320 --> 00:17:03,060
gets nothing for a potentially very

434
00:17:03,060 --> 00:17:06,000
valuable exploit so the specification is

435
00:17:06,000 --> 00:17:07,859
important in this case too although the

436
00:17:07,859 --> 00:17:09,959
hacker would be able to see

437
00:17:09,959 --> 00:17:12,000
um that the contract only pays out for

438
00:17:12,000 --> 00:17:13,740
byte access

439
00:17:13,740 --> 00:17:14,760
but

440
00:17:14,760 --> 00:17:18,119
our third point is that uh decentralized

441
00:17:18,119 --> 00:17:20,280
virtual machines are very costly to

442
00:17:20,280 --> 00:17:21,240
operate

443
00:17:21,240 --> 00:17:23,160
so due to the high degree of

444
00:17:23,160 --> 00:17:25,559
decentralization a single ethereum

445
00:17:25,559 --> 00:17:27,780
transaction was around fifty dollars at

446
00:17:27,780 --> 00:17:29,460
the time that our white paper was

447
00:17:29,460 --> 00:17:31,919
written but of course that might change

448
00:17:31,919 --> 00:17:34,460
in the future

449
00:17:34,559 --> 00:17:37,320
um and our fourth point and last

450
00:17:37,320 --> 00:17:39,120
limitations that we're going to mention

451
00:17:39,120 --> 00:17:41,520
today is it does allow the over

452
00:17:41,520 --> 00:17:45,179
emphasizing uh of a quantitative level

453
00:17:45,179 --> 00:17:46,919
of security

454
00:17:46,919 --> 00:17:49,260
so this quantitative metric that we

455
00:17:49,260 --> 00:17:51,900
mentioned only really covers the money

456
00:17:51,900 --> 00:17:54,299
staked on these deterministically

457
00:17:54,299 --> 00:17:57,059
verifiable zero-day exploits

458
00:17:57,059 --> 00:17:58,020
um

459
00:17:58,020 --> 00:18:01,140
and which and also those which can be

460
00:18:01,140 --> 00:18:03,000
found in the software stack put within

461
00:18:03,000 --> 00:18:04,620
the virtual machine

462
00:18:04,620 --> 00:18:07,140
so we find it really important as a team

463
00:18:07,140 --> 00:18:09,720
that these this numerical value of the

464
00:18:09,720 --> 00:18:12,000
amount staked on the zde security level

465
00:18:12,000 --> 00:18:14,400
is not abused to convey a false sense of

466
00:18:14,400 --> 00:18:16,799
security by the staking companies to

467
00:18:16,799 --> 00:18:18,720
their customers right it only covers a

468
00:18:18,720 --> 00:18:21,000
portion of the security level but it's

469
00:18:21,000 --> 00:18:23,160
still we think a really valuable number

470
00:18:23,160 --> 00:18:26,820
to have in the Arsenal of describing how

471
00:18:26,820 --> 00:18:29,940
security secure the software is

472
00:18:29,940 --> 00:18:33,440
so these were some limitations

473
00:18:33,900 --> 00:18:34,860
um

474
00:18:34,860 --> 00:18:37,919
and to summarize

475
00:18:37,919 --> 00:18:39,900
uh this is important for hackers and

476
00:18:39,900 --> 00:18:42,960
companies and decision makers uh where

477
00:18:42,960 --> 00:18:43,980
hackers

478
00:18:43,980 --> 00:18:46,220
they get automatic payout uh without

479
00:18:46,220 --> 00:18:49,080
disputes of these bug bounties they know

480
00:18:49,080 --> 00:18:51,539
how much they earn up front and they

481
00:18:51,539 --> 00:18:53,400
will know when they get the money so

482
00:18:53,400 --> 00:18:54,960
that's pretty good for them

483
00:18:54,960 --> 00:18:57,240
companies are able to show how secure

484
00:18:57,240 --> 00:18:59,880
their software is and they also gain

485
00:18:59,880 --> 00:19:02,100
transparency in the zero day exploit

486
00:19:02,100 --> 00:19:03,600
Market which we also find really

487
00:19:03,600 --> 00:19:04,799
important

488
00:19:04,799 --> 00:19:07,380
decision makers within companies are

489
00:19:07,380 --> 00:19:09,179
also able to allocate cyber security

490
00:19:09,179 --> 00:19:12,000
resources much more efficiently because

491
00:19:12,000 --> 00:19:13,860
a hundred percent of what they allocate

492
00:19:13,860 --> 00:19:15,720
actually goes to the hackers working on

493
00:19:15,720 --> 00:19:17,940
the problem rather than a portion to the

494
00:19:17,940 --> 00:19:20,720
intermediaries

495
00:19:21,120 --> 00:19:23,100
and they're also able to say how much

496
00:19:23,100 --> 00:19:24,600
they're going to put on different parts

497
00:19:24,600 --> 00:19:27,320
of the software

498
00:19:27,419 --> 00:19:28,679
so

499
00:19:28,679 --> 00:19:31,140
now to get into a little bit of a robot

500
00:19:31,140 --> 00:19:34,380
a robot a road map of what our team uh

501
00:19:34,380 --> 00:19:36,419
would like to do in the future we're

502
00:19:36,419 --> 00:19:38,820
very excited we have a lot of plans

503
00:19:38,820 --> 00:19:40,860
the first is that we would like to ask

504
00:19:40,860 --> 00:19:42,720
the cyber security Community for input

505
00:19:42,720 --> 00:19:45,360
on what they find important

506
00:19:45,360 --> 00:19:46,500
um

507
00:19:46,500 --> 00:19:47,940
which is what we're doing here today

508
00:19:47,940 --> 00:19:49,740
please do join us in the wrap room and

509
00:19:49,740 --> 00:19:52,740
please ask us difficult questions

510
00:19:52,740 --> 00:19:54,840
um and then we would aim to attract some

511
00:19:54,840 --> 00:19:56,640
expertise on decentralized Virtual

512
00:19:56,640 --> 00:19:57,840
machines

513
00:19:57,840 --> 00:19:59,700
we're currently a student team so we

514
00:19:59,700 --> 00:20:01,020
don't quite have this sufficient

515
00:20:01,020 --> 00:20:03,720
experience with that uh let alone in an

516
00:20:03,720 --> 00:20:05,220
adversarial environment so we would

517
00:20:05,220 --> 00:20:06,360
really like to have someone who knows

518
00:20:06,360 --> 00:20:08,280
what they're doing with that

519
00:20:08,280 --> 00:20:09,840
and once we know what the community

520
00:20:09,840 --> 00:20:12,179
wants we aim to select the platforms on

521
00:20:12,179 --> 00:20:13,860
which we would build the protocol like

522
00:20:13,860 --> 00:20:15,720
the ethereum chain or possibly a

523
00:20:15,720 --> 00:20:17,580
separate chain

524
00:20:17,580 --> 00:20:20,460
and we would also like to then raise

525
00:20:20,460 --> 00:20:23,039
funds to be able to build a minimum

526
00:20:23,039 --> 00:20:25,320
working example

527
00:20:25,320 --> 00:20:28,620
uh really get this into something that

528
00:20:28,620 --> 00:20:31,320
is workable uh take that back to Vim

529
00:20:31,320 --> 00:20:33,419
Community for feedback adjust our

530
00:20:33,419 --> 00:20:36,600
implementation to match your needs

531
00:20:36,600 --> 00:20:39,179
um move forward with a complete Security

532
00:20:39,179 --> 00:20:40,940
audit

533
00:20:40,940 --> 00:20:43,620
and after the audit we would really like

534
00:20:43,620 --> 00:20:46,500
to go for live deployment we intend to

535
00:20:46,500 --> 00:20:48,720
sort of gradually increase the state's

536
00:20:48,720 --> 00:20:50,760
bounties over time and we actually

537
00:20:50,760 --> 00:20:52,919
expect that the first hacks are going to

538
00:20:52,919 --> 00:20:55,080
actually to be on our protocol

539
00:20:55,080 --> 00:20:56,539
implementation

540
00:20:56,539 --> 00:20:59,340
and after a while after a few iterations

541
00:20:59,340 --> 00:21:02,220
of that Loop we aim to have these fixed

542
00:21:02,220 --> 00:21:04,260
such that the hacks will actually apply

543
00:21:04,260 --> 00:21:05,940
to the state software stack so we think

544
00:21:05,940 --> 00:21:08,039
it's really cool that we can use our own

545
00:21:08,039 --> 00:21:10,799
tool to improve the security of the tool

546
00:21:10,799 --> 00:21:13,320
that we're using

547
00:21:13,320 --> 00:21:17,100
so this is our road map

548
00:21:17,100 --> 00:21:18,539
um

549
00:21:18,539 --> 00:21:20,880
let me see so yeah moving forward again

550
00:21:20,880 --> 00:21:23,280
companies we'd really like to ask what's

551
00:21:23,280 --> 00:21:25,260
important to you in terms of compliance

552
00:21:25,260 --> 00:21:27,120
or the types of exploits that you'd like

553
00:21:27,120 --> 00:21:28,980
to see

554
00:21:28,980 --> 00:21:31,320
um you would love it if someone could

555
00:21:31,320 --> 00:21:33,480
please advise us on the decentralized

556
00:21:33,480 --> 00:21:36,780
virtual machines and developers this is

557
00:21:36,780 --> 00:21:39,120
our GitHub please send us a message send

558
00:21:39,120 --> 00:21:41,460
us an email

559
00:21:41,460 --> 00:21:42,480
um

560
00:21:42,480 --> 00:21:45,360
yeah that brings us to acknowledgments

561
00:21:45,360 --> 00:21:47,100
we'd really like to express our

562
00:21:47,100 --> 00:21:49,380
gratitude to Tony Smith Leon bothrose

563
00:21:49,380 --> 00:21:51,120
and zauter for providing us with

564
00:21:51,120 --> 00:21:52,740
guidance and advice during the early

565
00:21:52,740 --> 00:21:55,140
stages of the protocol development they

566
00:21:55,140 --> 00:21:57,419
really took the time to assist us when

567
00:21:57,419 --> 00:21:59,580
this was merely an idea

568
00:21:59,580 --> 00:22:01,679
and last but not least I would love to

569
00:22:01,679 --> 00:22:03,840
thank Lydia Giuliano for providing us

570
00:22:03,840 --> 00:22:06,419
with direct and excellent feedback and

571
00:22:06,419 --> 00:22:08,039
guidance toward the preparation of this

572
00:22:08,039 --> 00:22:09,360
presentation

573
00:22:09,360 --> 00:22:11,700
if you want to ask any question please

574
00:22:11,700 --> 00:22:13,860
come join us in the wrap room which is

575
00:22:13,860 --> 00:22:16,620
Mandalay Bay room B it's in the other

576
00:22:16,620 --> 00:22:19,320
hallway and we can we would love to

577
00:22:19,320 --> 00:22:21,600
discuss the protocol further please tell

578
00:22:21,600 --> 00:22:23,220
us all of your questions and concerns

579
00:22:23,220 --> 00:22:25,690
thank you

580
00:22:25,690 --> 00:22:28,979
[Music]

581
00:22:32,820 --> 00:22:35,919
[Music]

