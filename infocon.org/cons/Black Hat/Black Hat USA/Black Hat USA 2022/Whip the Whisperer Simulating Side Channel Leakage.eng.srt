1
00:00:01,700 --> 00:00:04,810
[Music]

2
00:00:07,460 --> 00:00:10,380
now it is my pleasure to Welcome to the

3
00:00:10,380 --> 00:00:14,099
stage Jasper Von vundenberg

4
00:00:14,099 --> 00:00:17,839
thank you have a good time thanks

5
00:00:18,539 --> 00:00:20,039
thanks everybody for coming it's great

6
00:00:20,039 --> 00:00:22,740
to be black at black and back back at

7
00:00:22,740 --> 00:00:25,039
black hat geez that's a tongue twister

8
00:00:25,039 --> 00:00:27,660
a couple of months ago I came across

9
00:00:27,660 --> 00:00:29,640
this picture and

10
00:00:29,640 --> 00:00:32,279
I just stared at it in awe for for a

11
00:00:32,279 --> 00:00:33,960
little while even though I know what it

12
00:00:33,960 --> 00:00:36,660
is it's kind of a cool piece of art and

13
00:00:36,660 --> 00:00:38,160
Technology it almost looks like alien

14
00:00:38,160 --> 00:00:41,160
technology if you if you look at it

15
00:00:41,160 --> 00:00:42,840
um so I've been in security for about 20

16
00:00:42,840 --> 00:00:46,440
years Hardware security about 15. so I

17
00:00:46,440 --> 00:00:48,899
know what this this bad boy is

18
00:00:48,899 --> 00:00:51,360
um and you know if you don't you

19
00:00:51,360 --> 00:00:53,280
probably are carrying a couple million

20
00:00:53,280 --> 00:00:54,480
or a couple billion of this in your

21
00:00:54,480 --> 00:00:56,760
pocket as well

22
00:00:56,760 --> 00:00:58,020
um

23
00:00:58,020 --> 00:01:00,000
it's also the hero and the villain of

24
00:01:00,000 --> 00:01:02,940
our of our story today but I'll get into

25
00:01:02,940 --> 00:01:04,559
that into a second

26
00:01:04,559 --> 00:01:05,939
so

27
00:01:05,939 --> 00:01:07,920
like I mentioned I'm into security for a

28
00:01:07,920 --> 00:01:08,640
while

29
00:01:08,640 --> 00:01:10,619
um since last year I can call myself an

30
00:01:10,619 --> 00:01:12,180
author as well together with Colin

31
00:01:12,180 --> 00:01:14,100
offline I wrote a book on Hardware

32
00:01:14,100 --> 00:01:15,780
hacking

33
00:01:15,780 --> 00:01:18,600
and you might not be able to see it from

34
00:01:18,600 --> 00:01:19,920
the distance that picture is a little

35
00:01:19,920 --> 00:01:24,080
outdated it's more like like this now

36
00:01:24,119 --> 00:01:26,280
let's get back to that uh that pretty

37
00:01:26,280 --> 00:01:27,360
picture

38
00:01:27,360 --> 00:01:28,619
so

39
00:01:28,619 --> 00:01:31,259
what this actually is it's a um it's a

40
00:01:31,259 --> 00:01:33,659
flip-flop and the flip-flop is nothing

41
00:01:33,659 --> 00:01:36,780
more than sort of a one bit memory that

42
00:01:36,780 --> 00:01:39,900
is um inside any chip so it kind of

43
00:01:39,900 --> 00:01:42,600
holds the current state of the chip

44
00:01:42,600 --> 00:01:44,520
and

45
00:01:44,520 --> 00:01:47,520
it's both what we need to have chips

46
00:01:47,520 --> 00:01:52,020
operate but it also has a problem

47
00:01:52,020 --> 00:01:53,939
and to understand that problem we have

48
00:01:53,939 --> 00:01:55,439
to dig into a little bit on how these

49
00:01:55,439 --> 00:01:57,360
these things work so

50
00:01:57,360 --> 00:01:59,220
um a flip flop it's like a one bit

51
00:01:59,220 --> 00:02:01,920
memory cell if you will it takes two

52
00:02:01,920 --> 00:02:05,579
inputs a d which is zero or one and a

53
00:02:05,579 --> 00:02:06,899
clock

54
00:02:06,899 --> 00:02:10,739
and it has an output Q signal and all it

55
00:02:10,739 --> 00:02:12,420
does is as soon as there's a rising Edge

56
00:02:12,420 --> 00:02:15,120
in the clock it stores the value of D

57
00:02:15,120 --> 00:02:18,000
and from that moment on the value of Q

58
00:02:18,000 --> 00:02:20,819
the output becomes D and it holds this

59
00:02:20,819 --> 00:02:24,120
as long as the clock is stable or or on

60
00:02:24,120 --> 00:02:26,160
a falling Edge

61
00:02:26,160 --> 00:02:27,840
not so far so good that's sort of what

62
00:02:27,840 --> 00:02:29,879
it functionally does

63
00:02:29,879 --> 00:02:31,739
the problem that I was alluding to is

64
00:02:31,739 --> 00:02:33,780
that it actually leaks a bit of

65
00:02:33,780 --> 00:02:35,280
information

66
00:02:35,280 --> 00:02:38,340
so when the output switches from zero to

67
00:02:38,340 --> 00:02:40,680
one or one to zero the consumption the

68
00:02:40,680 --> 00:02:43,080
power consumption of the flip flop is

69
00:02:43,080 --> 00:02:44,040
actually

70
00:02:44,040 --> 00:02:45,840
a little bit of a spike

71
00:02:45,840 --> 00:02:48,680
not much obviously it's just one cell

72
00:02:48,680 --> 00:02:51,780
but it's it's more than if it's not

73
00:02:51,780 --> 00:02:54,000
switching

74
00:02:54,000 --> 00:02:55,560
so

75
00:02:55,560 --> 00:02:59,160
conceptually what you can do is if it's

76
00:02:59,160 --> 00:03:01,920
time equals zero let's say we know that

77
00:03:01,920 --> 00:03:03,720
the input value

78
00:03:03,720 --> 00:03:06,420
um is a is a zero or it's actually

79
00:03:06,420 --> 00:03:08,640
stored at zero

80
00:03:08,640 --> 00:03:11,459
and we measure a power Spike now we

81
00:03:11,459 --> 00:03:13,440
actually know that this bit has flipped

82
00:03:13,440 --> 00:03:15,180
from a zero to a one

83
00:03:15,180 --> 00:03:17,400
and if we measure the power being

84
00:03:17,400 --> 00:03:19,800
constant then we know that has remained

85
00:03:19,800 --> 00:03:22,040
the same

86
00:03:22,500 --> 00:03:24,720
so this becomes problematic when you

87
00:03:24,720 --> 00:03:27,959
look at algorithms like AES

88
00:03:27,959 --> 00:03:30,420
so AES is an encryption algorithm it

89
00:03:30,420 --> 00:03:33,900
takes in 128 bits of plain text it has

90
00:03:33,900 --> 00:03:36,900
128 bits of key and it produces 128-bit

91
00:03:36,900 --> 00:03:38,580
cyber text then if you have a hardware

92
00:03:38,580 --> 00:03:41,040
implementation oftentimes you'll have

93
00:03:41,040 --> 00:03:44,519
128 flip-flops that each store one bit

94
00:03:44,519 --> 00:03:47,120
of the state

95
00:03:47,519 --> 00:03:50,159
one of the first operations in AES is

96
00:03:50,159 --> 00:03:52,620
what's called a round key Edition

97
00:03:52,620 --> 00:03:54,299
and it basically takes the plain text

98
00:03:54,299 --> 00:03:57,360
and it exhorts the key onto it

99
00:03:57,360 --> 00:03:58,860
now

100
00:03:58,860 --> 00:04:01,200
the problem here

101
00:04:01,200 --> 00:04:05,220
at least it might be a problem is if we

102
00:04:05,220 --> 00:04:07,080
can measure the power consumption of

103
00:04:07,080 --> 00:04:09,420
each of these 128 bit flip flops

104
00:04:09,420 --> 00:04:11,400
individually because we can assume we

105
00:04:11,400 --> 00:04:13,439
know the plain text and if there's a

106
00:04:13,439 --> 00:04:15,120
power Spike that we know that the key

107
00:04:15,120 --> 00:04:17,100
bit was actually one because the value

108
00:04:17,100 --> 00:04:19,260
changed we xored it

109
00:04:19,260 --> 00:04:21,660
if the power stays pretty flat we know

110
00:04:21,660 --> 00:04:23,820
that the key equals zero so this is a

111
00:04:23,820 --> 00:04:25,380
problem

112
00:04:25,380 --> 00:04:26,699
I'm

113
00:04:26,699 --> 00:04:28,800
I'm gonna in this presentation skim over

114
00:04:28,800 --> 00:04:30,419
lots of details

115
00:04:30,419 --> 00:04:33,180
um so you can ask me afterwards but I'm

116
00:04:33,180 --> 00:04:35,820
not not intending to make this into a 30

117
00:04:35,820 --> 00:04:37,380
minute power analysis lecture so there's

118
00:04:37,380 --> 00:04:39,120
some incorrectness here but you know

119
00:04:39,120 --> 00:04:41,160
just intuitively try to understand that

120
00:04:41,160 --> 00:04:44,460
this power relates to keys

121
00:04:44,460 --> 00:04:45,720
um

122
00:04:45,720 --> 00:04:47,280
there's not a problem though in my

123
00:04:47,280 --> 00:04:49,500
arguments which is that I'm somehow

124
00:04:49,500 --> 00:04:51,060
assuming that I can measure the power

125
00:04:51,060 --> 00:04:53,520
consumption of a single flip-flop

126
00:04:53,520 --> 00:04:57,180
now this terms to be a practical problem

127
00:04:57,180 --> 00:04:59,280
and even though it may leak you can

128
00:04:59,280 --> 00:05:02,160
really easily measure that

129
00:05:02,160 --> 00:05:07,340
so let's take a look at what we can do

130
00:05:08,940 --> 00:05:12,840
so what you see here is

131
00:05:12,840 --> 00:05:14,699
same flip flop again but now in its

132
00:05:14,699 --> 00:05:18,000
context inside of the chip design

133
00:05:18,000 --> 00:05:19,680
so you see all this quickly lines that's

134
00:05:19,680 --> 00:05:21,780
sort of inside the Flip Flop and all the

135
00:05:21,780 --> 00:05:23,520
other ones are the connections to the

136
00:05:23,520 --> 00:05:25,560
neighboring cells so this can be other

137
00:05:25,560 --> 00:05:28,020
flip-flops and anguits and or Gates and

138
00:05:28,020 --> 00:05:30,240
all that fine Boolean logic that that

139
00:05:30,240 --> 00:05:32,400
sits on a chip so let's zoom out a

140
00:05:32,400 --> 00:05:35,100
little bit so this is what it looks like

141
00:05:35,100 --> 00:05:37,800
you'll see more of these cells if we

142
00:05:37,800 --> 00:05:39,960
zoom out even further you see in these

143
00:05:39,960 --> 00:05:41,759
yellow bands you see part of the What's

144
00:05:41,759 --> 00:05:44,400
called the power distribution Network

145
00:05:44,400 --> 00:05:46,440
in the black squiggly still is our

146
00:05:46,440 --> 00:05:48,479
flip-flop there then we zoom out even

147
00:05:48,479 --> 00:05:50,880
further you start seeing sort of the

148
00:05:50,880 --> 00:05:52,979
edges of the IP block that this is in so

149
00:05:52,979 --> 00:05:54,900
on the left it's a little bit wider a

150
00:05:54,900 --> 00:05:56,400
little bit more space there that's

151
00:05:56,400 --> 00:05:58,080
actually the edge where sort of the bus

152
00:05:58,080 --> 00:06:00,360
comes out

153
00:06:00,360 --> 00:06:02,759
if we see about even further now you can

154
00:06:02,759 --> 00:06:05,400
start seeing a couple of other blocks

155
00:06:05,400 --> 00:06:08,580
so the one on the right is actually um

156
00:06:08,580 --> 00:06:11,880
Pico rv32 core which is a risk 5 really

157
00:06:11,880 --> 00:06:14,759
small CPU there's some memory

158
00:06:14,759 --> 00:06:16,620
interfacing Logic on the on the left

159
00:06:16,620 --> 00:06:20,220
bottom side and at the top you see a

160
00:06:20,220 --> 00:06:22,740
one kilobyte SRAM

161
00:06:22,740 --> 00:06:24,900
amazing the size we have

162
00:06:24,900 --> 00:06:26,520
did I mention this is a really old

163
00:06:26,520 --> 00:06:29,460
technology this tip

164
00:06:29,460 --> 00:06:31,860
so this is actually the full tip we we

165
00:06:31,860 --> 00:06:34,620
date this out as a test tip somewhere in

166
00:06:34,620 --> 00:06:36,300
June

167
00:06:36,300 --> 00:06:40,380
um on a 150 nanometer process so it's

168
00:06:40,380 --> 00:06:43,380
like like 20 years old or something but

169
00:06:43,380 --> 00:06:44,520
it's something you can do on a very

170
00:06:44,520 --> 00:06:47,400
small budget

171
00:06:47,400 --> 00:06:49,380
um so there's a couple of Pico cores in

172
00:06:49,380 --> 00:06:51,000
here and a couple as scores and that

173
00:06:51,000 --> 00:06:53,759
memory Etc we're just gonna play with it

174
00:06:53,759 --> 00:06:55,800
once we get it back do some side tunnel

175
00:06:55,800 --> 00:06:59,060
and fold experiments on it

176
00:06:59,639 --> 00:07:01,319
so

177
00:07:01,319 --> 00:07:03,060
we've sort of zoomed out from this one

178
00:07:03,060 --> 00:07:05,819
flip all the way to an entire chip and

179
00:07:05,819 --> 00:07:07,740
that we can measure

180
00:07:07,740 --> 00:07:10,680
so we can take a chip

181
00:07:10,680 --> 00:07:12,300
you see on the right hand side of this

182
00:07:12,300 --> 00:07:13,620
picture in the

183
00:07:13,620 --> 00:07:16,139
the green PCB you see another chip not

184
00:07:16,139 --> 00:07:17,940
the one I just showed you but you see a

185
00:07:17,940 --> 00:07:19,199
PCB

186
00:07:19,199 --> 00:07:22,080
we can do electromagnetic probing of

187
00:07:22,080 --> 00:07:23,520
that so you see a little probe over it

188
00:07:23,520 --> 00:07:25,380
we can do current probing that's the

189
00:07:25,380 --> 00:07:27,720
little yellow box to the side of it and

190
00:07:27,720 --> 00:07:29,280
I'm on the left you see an oscilloscope

191
00:07:29,280 --> 00:07:32,160
where we capture these these signals

192
00:07:32,160 --> 00:07:34,440
and for the purpose of this talk I'm

193
00:07:34,440 --> 00:07:35,960
going to talk about power analysis

194
00:07:35,960 --> 00:07:39,060
electromagnetic analysis is similar in a

195
00:07:39,060 --> 00:07:41,039
way enough that I don't have to talk

196
00:07:41,039 --> 00:07:44,419
about the differences here

197
00:07:45,539 --> 00:07:48,720
so how can we

198
00:07:48,720 --> 00:07:50,880
use these signals to actually extract

199
00:07:50,880 --> 00:07:52,979
the full key because we we can't measure

200
00:07:52,979 --> 00:07:54,960
the individual flip flops but what we

201
00:07:54,960 --> 00:07:56,280
can do is we can take lots of

202
00:07:56,280 --> 00:07:58,860
measurements of AF operating take power

203
00:07:58,860 --> 00:08:03,240
traces take en traces and then perform a

204
00:08:03,240 --> 00:08:05,220
magic trick called correlation power

205
00:08:05,220 --> 00:08:06,720
analysis

206
00:08:06,720 --> 00:08:10,440
and what's CPA for short what CPA does

207
00:08:10,440 --> 00:08:13,440
is you take an AES engine you send it

208
00:08:13,440 --> 00:08:16,020
various plain texts differing plain

209
00:08:16,020 --> 00:08:17,120
texts

210
00:08:17,120 --> 00:08:20,160
and what you're going to try to do is

211
00:08:20,160 --> 00:08:22,139
you're going to try to model what the

212
00:08:22,139 --> 00:08:24,000
power would look like

213
00:08:24,000 --> 00:08:27,300
if a certain key byte would be correct

214
00:08:27,300 --> 00:08:29,160
so I'm going to say well if my key byte

215
00:08:29,160 --> 00:08:32,640
is zero then I kind of know by the

216
00:08:32,640 --> 00:08:34,860
design of IES what bits flips I should

217
00:08:34,860 --> 00:08:36,839
see given a certain plain text and I can

218
00:08:36,839 --> 00:08:39,240
match that against the trace

219
00:08:39,240 --> 00:08:42,779
if my match is correct and I say well

220
00:08:42,779 --> 00:08:44,880
that's probably a right part of the kit

221
00:08:44,880 --> 00:08:47,279
I'm doing this for a sub key so in this

222
00:08:47,279 --> 00:08:50,880
case a key bite I'm making 200 256

223
00:08:50,880 --> 00:08:52,620
predictions

224
00:08:52,620 --> 00:08:55,279
I'm going to do that for each key byte

225
00:08:55,279 --> 00:08:58,380
and sort of the one that matches my

226
00:08:58,380 --> 00:09:00,360
where the model matches my link it's

227
00:09:00,360 --> 00:09:01,800
best I'm going to call that the right

228
00:09:01,800 --> 00:09:04,080
key and I read some repeat this 16 times

229
00:09:04,080 --> 00:09:06,600
and then I have the full key

230
00:09:06,600 --> 00:09:08,640
um so this is again bit hand wavy but

231
00:09:08,640 --> 00:09:10,380
just for you to get an understanding we

232
00:09:10,380 --> 00:09:12,060
can apply statistics

233
00:09:12,060 --> 00:09:15,420
and sort of using this modeled power

234
00:09:15,420 --> 00:09:16,740
consumption we can match it against

235
00:09:16,740 --> 00:09:18,600
reality and find out what the what the

236
00:09:18,600 --> 00:09:21,200
key should look like

237
00:09:22,620 --> 00:09:24,720
there's a problem here

238
00:09:24,720 --> 00:09:25,620
um

239
00:09:25,620 --> 00:09:27,899
we're doing this post silicon so we have

240
00:09:27,899 --> 00:09:31,080
a chip actually in our lab and you know

241
00:09:31,080 --> 00:09:32,459
as soon as you find leakage you're too

242
00:09:32,459 --> 00:09:35,279
late you can't fix that chip anymore you

243
00:09:35,279 --> 00:09:36,720
you know you feed it back to the

244
00:09:36,720 --> 00:09:38,820
manufacturers and they say thank you and

245
00:09:38,820 --> 00:09:39,959
we're going to fix the next chip

246
00:09:39,959 --> 00:09:42,000
iteration or maybe two down the line

247
00:09:42,000 --> 00:09:43,860
depending on what their manufacturing

248
00:09:43,860 --> 00:09:45,899
pipeline looks like

249
00:09:45,899 --> 00:09:47,640
um so yeah with post silicon we can fix

250
00:09:47,640 --> 00:09:49,680
the next chip and what I'm going to try

251
00:09:49,680 --> 00:09:51,660
to argue today is pre-silic and we can

252
00:09:51,660 --> 00:09:54,439
fix the current chip

253
00:09:55,440 --> 00:09:57,600
and we do that by simulation the chip

254
00:09:57,600 --> 00:10:00,000
doesn't exist yet so this is the best we

255
00:10:00,000 --> 00:10:01,140
can do

256
00:10:01,140 --> 00:10:03,959
so what are the ingredients that we we

257
00:10:03,959 --> 00:10:06,560
need for this

258
00:10:08,040 --> 00:10:10,740
that's sort of four basic uh ones one is

259
00:10:10,740 --> 00:10:12,779
is that chip design

260
00:10:12,779 --> 00:10:14,820
so you need what's called a net list

261
00:10:14,820 --> 00:10:16,980
and the net list is nothing more than

262
00:10:16,980 --> 00:10:18,660
basically all the gates in the chip and

263
00:10:18,660 --> 00:10:20,880
their connections so much if and Gates

264
00:10:20,880 --> 00:10:22,620
or Gates not Gates Etc plus the

265
00:10:22,620 --> 00:10:24,360
connections between them

266
00:10:24,360 --> 00:10:26,839
that's a net list

267
00:10:26,839 --> 00:10:29,100
ideally you also want to know where

268
00:10:29,100 --> 00:10:31,380
things are placed but for the purpose of

269
00:10:31,380 --> 00:10:33,440
some simulations you don't

270
00:10:33,440 --> 00:10:36,480
then we need to know the behavior as

271
00:10:36,480 --> 00:10:38,700
well so if we send a particular plain

272
00:10:38,700 --> 00:10:39,720
text to

273
00:10:39,720 --> 00:10:42,180
to this net list what are all the

274
00:10:42,180 --> 00:10:44,040
toggles that are sort of logically

275
00:10:44,040 --> 00:10:45,000
happening

276
00:10:45,000 --> 00:10:46,800
so for each of the gates you kind of

277
00:10:46,800 --> 00:10:48,480
capture the state is it you know

278
00:10:48,480 --> 00:10:51,240
outputting a one or a zero over time and

279
00:10:51,240 --> 00:10:54,060
you put this in what's called a vcd file

280
00:10:54,060 --> 00:10:56,940
so that's sort of the logic side then in

281
00:10:56,940 --> 00:10:59,940
order to convert that logic to power we

282
00:10:59,940 --> 00:11:02,040
need models for each cell

283
00:11:02,040 --> 00:11:03,959
and these are contained in what's called

284
00:11:03,959 --> 00:11:05,660
Liberty files

285
00:11:05,660 --> 00:11:08,760
basically for every cell it explains

286
00:11:08,760 --> 00:11:11,160
when transitions happen what the power

287
00:11:11,160 --> 00:11:13,260
consumption is

288
00:11:13,260 --> 00:11:15,060
so all of these inputs you feed into

289
00:11:15,060 --> 00:11:17,220
your favorite Power simulation tool and

290
00:11:17,220 --> 00:11:18,839
you run it on your your beautiful

291
00:11:18,839 --> 00:11:21,180
Mainframe that you have in your lab

292
00:11:21,180 --> 00:11:23,040
and then

293
00:11:23,040 --> 00:11:25,800
you can essentially do the same

294
00:11:25,800 --> 00:11:28,260
we did before with the power traces but

295
00:11:28,260 --> 00:11:30,300
before I get into that

296
00:11:30,300 --> 00:11:32,459
that Mainframe isn't very fast don't do

297
00:11:32,459 --> 00:11:34,019
it on that one actually

298
00:11:34,019 --> 00:11:34,680
um

299
00:11:34,680 --> 00:11:37,440
but on a modern CPU these simulations

300
00:11:37,440 --> 00:11:41,519
are actually quite doable so if you

301
00:11:41,519 --> 00:11:44,160
focus on what you see in the Stables is

302
00:11:44,160 --> 00:11:46,019
a number of AES cores we've tried this

303
00:11:46,019 --> 00:11:47,040
on

304
00:11:47,040 --> 00:11:50,339
and in the right most three columns you

305
00:11:50,339 --> 00:11:53,640
see for different simulation accuracies

306
00:11:53,640 --> 00:11:56,579
so one at RTL one both synthesis and one

307
00:11:56,579 --> 00:11:58,680
post placing round how long it took for

308
00:11:58,680 --> 00:12:01,680
us to simulate 256 traces and this all

309
00:12:01,680 --> 00:12:04,920
varies from half an hour to like 13

310
00:12:04,920 --> 00:12:07,079
hours or so

311
00:12:07,079 --> 00:12:10,620
um so definitely not like entering you

312
00:12:10,620 --> 00:12:11,880
have your results but this is something

313
00:12:11,880 --> 00:12:14,579
you can run overnight and still get a

314
00:12:14,579 --> 00:12:17,479
bunch of traces

315
00:12:18,899 --> 00:12:20,519
so just like with your oscilloscope

316
00:12:20,519 --> 00:12:23,160
before we now take these same traces we

317
00:12:23,160 --> 00:12:25,800
run plain text so we run our modeling we

318
00:12:25,800 --> 00:12:30,779
run our CPA and out comes leakage or not

319
00:12:30,779 --> 00:12:32,579
and

320
00:12:32,579 --> 00:12:35,459
that usually shows up like you know some

321
00:12:35,459 --> 00:12:37,260
sort of correlation Trace as we call it

322
00:12:37,260 --> 00:12:39,240
with a peak somewhere and that Peak

323
00:12:39,240 --> 00:12:40,880
indicates well at this point in time

324
00:12:40,880 --> 00:12:43,620
there's a statistically

325
00:12:43,620 --> 00:12:44,399
um

326
00:12:44,399 --> 00:12:46,440
significant leakage it's something that

327
00:12:46,440 --> 00:12:48,959
could be exploited to get keys out of a

328
00:12:48,959 --> 00:12:51,180
system

329
00:12:51,180 --> 00:12:53,220
um there's a problem with this

330
00:12:53,220 --> 00:12:55,680
how do I how do I go from this to

331
00:12:55,680 --> 00:12:57,660
actually fixing my design

332
00:12:57,660 --> 00:12:59,220
and that's kind of where the research

333
00:12:59,220 --> 00:13:01,440
that we did starts

334
00:13:01,440 --> 00:13:03,200
so

335
00:13:03,200 --> 00:13:05,700
when something leaks doesn't actually

336
00:13:05,700 --> 00:13:08,519
help fix it you can only observe that it

337
00:13:08,519 --> 00:13:10,740
leaks and at what point in time but it

338
00:13:10,740 --> 00:13:12,060
doesn't tell you like you know these are

339
00:13:12,060 --> 00:13:14,760
the gates if you have to go and fix

340
00:13:14,760 --> 00:13:16,740
so that's where our research called

341
00:13:16,740 --> 00:13:20,820
skate comes in it's all blue team stuff

342
00:13:20,820 --> 00:13:22,560
we're going to go fix stuff now so if

343
00:13:22,560 --> 00:13:24,660
you're a red team or you know go on to

344
00:13:24,660 --> 00:13:26,279
hacking

345
00:13:26,279 --> 00:13:27,720
um

346
00:13:27,720 --> 00:13:29,760
so we know when

347
00:13:29,760 --> 00:13:31,620
in time something's happening but but

348
00:13:31,620 --> 00:13:33,300
where is it leaking

349
00:13:33,300 --> 00:13:34,860
so

350
00:13:34,860 --> 00:13:38,639
the idea behind this is that we are

351
00:13:38,639 --> 00:13:42,000
going to correlate net switches to uh to

352
00:13:42,000 --> 00:13:43,380
a leakage model

353
00:13:43,380 --> 00:13:45,300
so essentially what we're going to do is

354
00:13:45,300 --> 00:13:49,500
we're going to take the logic on a chip

355
00:13:49,500 --> 00:13:51,959
and remember as soon as something

356
00:13:51,959 --> 00:13:54,360
switches it consumes more power

357
00:13:54,360 --> 00:13:57,600
so if we see during the when period so

358
00:13:57,600 --> 00:14:00,060
on the right hand side we call the red

359
00:14:00,060 --> 00:14:01,740
box the leakage time interval but

360
00:14:01,740 --> 00:14:03,839
basically the part of the time when

361
00:14:03,839 --> 00:14:05,100
something leaks

362
00:14:05,100 --> 00:14:08,220
and we can statistically look at

363
00:14:08,220 --> 00:14:10,200
um you know the peaks in power there as

364
00:14:10,200 --> 00:14:11,160
well

365
00:14:11,160 --> 00:14:14,700
now if a particular net

366
00:14:14,700 --> 00:14:16,620
always sort of seems to correspond to

367
00:14:16,620 --> 00:14:18,420
its switches with a higher Peak on the

368
00:14:18,420 --> 00:14:20,160
right hand side you can argue there's

369
00:14:20,160 --> 00:14:21,660
actually a statistical relation between

370
00:14:21,660 --> 00:14:24,440
those two so you can start going down to

371
00:14:24,440 --> 00:14:26,820
Nets that leak

372
00:14:26,820 --> 00:14:30,180
inside of a chip and what comes out of

373
00:14:30,180 --> 00:14:33,720
this is basically a ranked list of leaky

374
00:14:33,720 --> 00:14:37,200
Gates so you can start arguing you know

375
00:14:37,200 --> 00:14:40,860
in in this small contrived example it's

376
00:14:40,860 --> 00:14:43,320
actually the S boxes that seem to leak

377
00:14:43,320 --> 00:14:46,079
so let's take a little bit deeper look

378
00:14:46,079 --> 00:14:48,240
at the math here so

379
00:14:48,240 --> 00:14:49,440
um

380
00:14:49,440 --> 00:14:52,199
when we have these vcd traces what we're

381
00:14:52,199 --> 00:14:53,279
actually going to do is we're going to

382
00:14:53,279 --> 00:14:56,040
apply a very simple transformation on it

383
00:14:56,040 --> 00:14:57,779
because the theory is as soon as

384
00:14:57,779 --> 00:14:59,279
something switches it will consume more

385
00:14:59,279 --> 00:15:00,360
power

386
00:15:00,360 --> 00:15:03,360
so our power model is as soon as a

387
00:15:03,360 --> 00:15:05,339
particular net switches

388
00:15:05,339 --> 00:15:07,680
it consumes power one

389
00:15:07,680 --> 00:15:09,420
if something doesn't switch then it

390
00:15:09,420 --> 00:15:11,760
assumes power minus one

391
00:15:11,760 --> 00:15:13,440
and that's enough of a power model like

392
00:15:13,440 --> 00:15:14,880
we're doing correlations on this we

393
00:15:14,880 --> 00:15:16,980
don't have to do anything too fancy

394
00:15:16,980 --> 00:15:19,740
and we calculate this for every net

395
00:15:19,740 --> 00:15:23,899
and for every simulation that we run

396
00:15:24,540 --> 00:15:27,120
then we take these these test vectors

397
00:15:27,120 --> 00:15:29,639
and we're going to match for every net

398
00:15:29,639 --> 00:15:32,519
for every simulation where do the

399
00:15:32,519 --> 00:15:34,320
toggles basically align with small

400
00:15:34,320 --> 00:15:36,120
increases in power and if something

401
00:15:36,120 --> 00:15:38,279
doesn't toggle where does it align with

402
00:15:38,279 --> 00:15:41,040
a lower power consumption

403
00:15:41,040 --> 00:15:43,980
and from that we do basically a Pearson

404
00:15:43,980 --> 00:15:46,079
correlation so we can correlate for

405
00:15:46,079 --> 00:15:48,120
every net

406
00:15:48,120 --> 00:15:51,360
how much it contributes to the uh the

407
00:15:51,360 --> 00:15:52,920
power linkage and that gives us

408
00:15:52,920 --> 00:15:55,260
basically the point in the tip where the

409
00:15:55,260 --> 00:15:57,540
league is at the very lowest level like

410
00:15:57,540 --> 00:15:59,220
we're talking about Nets which you can

411
00:15:59,220 --> 00:16:01,019
which are driven by an output gate and

412
00:16:01,019 --> 00:16:02,940
you can go back to the gate where it

413
00:16:02,940 --> 00:16:05,300
leaks

414
00:16:05,639 --> 00:16:07,320
so once we've established that we can

415
00:16:07,320 --> 00:16:09,660
start sort of zooming out again because

416
00:16:09,660 --> 00:16:12,240
individual gates are also it's

417
00:16:12,240 --> 00:16:13,860
if you're a software person it's looking

418
00:16:13,860 --> 00:16:16,019
like at like individual bits of a binary

419
00:16:16,019 --> 00:16:17,820
right that don't make a lot of sense

420
00:16:17,820 --> 00:16:19,800
until you start sort of reverse

421
00:16:19,800 --> 00:16:21,899
engineering and ideally going back to

422
00:16:21,899 --> 00:16:23,880
your source code where where that

423
00:16:23,880 --> 00:16:25,800
particular piece has has meaning again

424
00:16:25,800 --> 00:16:29,579
so similar in in Hardware design so

425
00:16:29,579 --> 00:16:32,220
um Hardware Designs are always sort of

426
00:16:32,220 --> 00:16:34,639
hierarchical so what I showed you before

427
00:16:34,639 --> 00:16:37,139
in terms of the chip layout we have the

428
00:16:37,139 --> 00:16:38,820
top level as they call it then we have

429
00:16:38,820 --> 00:16:41,100
you know the risk five cores and a bunch

430
00:16:41,100 --> 00:16:43,500
of AES scores and I zoom into AES and

431
00:16:43,500 --> 00:16:45,959
that has like a round logic and inside

432
00:16:45,959 --> 00:16:48,240
the round logic there's s boxes and you

433
00:16:48,240 --> 00:16:49,380
know it goes all the way down and

434
00:16:49,380 --> 00:16:51,779
eventually you get to individual Gates

435
00:16:51,779 --> 00:16:54,899
so if you tell your synthesis tool like

436
00:16:54,899 --> 00:16:57,540
maintain the hierarchy or track the

437
00:16:57,540 --> 00:17:00,139
hierarchy you can go back from gates to

438
00:17:00,139 --> 00:17:04,140
basically parts of the original design

439
00:17:04,140 --> 00:17:05,520
and

440
00:17:05,520 --> 00:17:07,380
what I find kind of cool this is one of

441
00:17:07,380 --> 00:17:10,559
our earlier results where you know you

442
00:17:10,559 --> 00:17:12,059
never know when you start applying your

443
00:17:12,059 --> 00:17:13,740
method what's what it's going to come up

444
00:17:13,740 --> 00:17:14,459
with

445
00:17:14,459 --> 00:17:16,980
but immediately we saw that that the S

446
00:17:16,980 --> 00:17:20,280
boxes sort of floated to the top so this

447
00:17:20,280 --> 00:17:23,040
long list is basically parts of the

448
00:17:23,040 --> 00:17:24,119
hierarchy

449
00:17:24,119 --> 00:17:25,919
the individual dots you see are

450
00:17:25,919 --> 00:17:27,660
individual Gates

451
00:17:27,660 --> 00:17:29,880
and the shading is that that correlation

452
00:17:29,880 --> 00:17:33,059
value so the the darker the color the

453
00:17:33,059 --> 00:17:34,740
higher the correlation the more it leaks

454
00:17:34,740 --> 00:17:36,539
and the more dots the more of these

455
00:17:36,539 --> 00:17:38,039
Gates there are in a particular part of

456
00:17:38,039 --> 00:17:41,100
the hierarchy so you see those S boxes

457
00:17:41,100 --> 00:17:42,900
they have the most Gates and also the

458
00:17:42,900 --> 00:17:44,100
highest leakage and that's where you

459
00:17:44,100 --> 00:17:46,140
would expect it this was an unprotected

460
00:17:46,140 --> 00:17:48,059
implementation so this was really sort

461
00:17:48,059 --> 00:17:50,160
of a nice validation of what we were

462
00:17:50,160 --> 00:17:53,400
doing there's also some other parts of

463
00:17:53,400 --> 00:17:55,080
the hierarchy where

464
00:17:55,080 --> 00:17:56,880
it's obvious like there's round key

465
00:17:56,880 --> 00:17:58,740
generation and key memory but there's

466
00:17:58,740 --> 00:18:00,660
other stuff that where the name doesn't

467
00:18:00,660 --> 00:18:02,700
really say hey I'm leaking to me at

468
00:18:02,700 --> 00:18:05,100
least like block registers and who knows

469
00:18:05,100 --> 00:18:07,320
what so this analysis already starts

470
00:18:07,320 --> 00:18:10,020
showing some areas where you won't

471
00:18:10,020 --> 00:18:14,240
necessarily think there's leakage

472
00:18:15,360 --> 00:18:17,700
we can go up even further this was

473
00:18:17,700 --> 00:18:20,100
another experiment where we took yet

474
00:18:20,100 --> 00:18:23,340
another AES core on the left top left

475
00:18:23,340 --> 00:18:26,400
you see this Picos slash g something so

476
00:18:26,400 --> 00:18:29,160
these are the gate numbers that come out

477
00:18:29,160 --> 00:18:31,740
of the synthesis tool

478
00:18:31,740 --> 00:18:34,380
and each of them is related back to

479
00:18:34,380 --> 00:18:36,120
basically a line and a character in The

480
00:18:36,120 --> 00:18:37,620
Source Code file

481
00:18:37,620 --> 00:18:40,200
and this is part of that leaky gate list

482
00:18:40,200 --> 00:18:42,419
and it was kind of cool to see that at

483
00:18:42,419 --> 00:18:44,700
least these four Gates they all went

484
00:18:44,700 --> 00:18:46,440
back literally to the xor operation

485
00:18:46,440 --> 00:18:48,600
where we took data and key and we mix

486
00:18:48,600 --> 00:18:50,940
them together so this is that add Brown

487
00:18:50,940 --> 00:18:52,260
key operation I was talking about

488
00:18:52,260 --> 00:18:54,720
earlier as well

489
00:18:54,720 --> 00:18:55,919
um

490
00:18:55,919 --> 00:18:59,100
so yeah from from sort of

491
00:18:59,100 --> 00:19:01,200
very high level and doing statistics we

492
00:19:01,200 --> 00:19:02,700
went down the gates and then we went

493
00:19:02,700 --> 00:19:04,980
back up to the source code but now we're

494
00:19:04,980 --> 00:19:07,080
sort of in in the land where developers

495
00:19:07,080 --> 00:19:08,700
can do something about it right now you

496
00:19:08,700 --> 00:19:11,900
know where your problem is

497
00:19:12,539 --> 00:19:14,340
so

498
00:19:14,340 --> 00:19:17,700
the next step is counter major testing

499
00:19:17,700 --> 00:19:19,740
so the attacks that I'm just talking

500
00:19:19,740 --> 00:19:21,539
about they've been around for two and a

501
00:19:21,539 --> 00:19:23,160
half decades or so now so people have

502
00:19:23,160 --> 00:19:25,559
been thinking about all kinds of counter

503
00:19:25,559 --> 00:19:27,539
measures for a while

504
00:19:27,539 --> 00:19:29,520
um and obviously when you put them in

505
00:19:29,520 --> 00:19:32,220
Silicon you can measure them and again

506
00:19:32,220 --> 00:19:34,440
there the problem is if you find leakage

507
00:19:34,440 --> 00:19:36,900
it's too late so let's do counter

508
00:19:36,900 --> 00:19:40,580
measure testing in simulation

509
00:19:43,679 --> 00:19:44,940
and really the question that you're

510
00:19:44,940 --> 00:19:47,640
asking is it doesn't work right before

511
00:19:47,640 --> 00:19:49,559
you write your code you don't really

512
00:19:49,559 --> 00:19:51,240
know if it's very heavily armored or

513
00:19:51,240 --> 00:19:52,559
whether it's

514
00:19:52,559 --> 00:19:55,280
fluffy

515
00:19:55,620 --> 00:19:57,720
um

516
00:19:57,720 --> 00:19:59,280
I have to bore you a little bit with

517
00:19:59,280 --> 00:20:00,679
with

518
00:20:00,679 --> 00:20:04,440
masking so masking is a a common

519
00:20:04,440 --> 00:20:06,360
countermeasure you can look up there's

520
00:20:06,360 --> 00:20:08,520
various literature about it

521
00:20:08,520 --> 00:20:09,900
um

522
00:20:09,900 --> 00:20:12,360
really what it's doing intuitively it's

523
00:20:12,360 --> 00:20:14,580
it's trying to break the relation that

524
00:20:14,580 --> 00:20:16,559
CPA is exploiting

525
00:20:16,559 --> 00:20:19,679
so with CPA we take like data which we

526
00:20:19,679 --> 00:20:22,559
know and an unknown key and we're going

527
00:20:22,559 --> 00:20:24,059
to start making predictions about this

528
00:20:24,059 --> 00:20:26,700
key what masking does is it adds a third

529
00:20:26,700 --> 00:20:27,900
variable

530
00:20:27,900 --> 00:20:30,240
so we have data a key and some random

531
00:20:30,240 --> 00:20:31,740
variable that keeps on changing every

532
00:20:31,740 --> 00:20:34,260
time and we can't predict this it

533
00:20:34,260 --> 00:20:37,320
actually breaks our ability to

534
00:20:37,320 --> 00:20:39,660
um to match the leakage model to the

535
00:20:39,660 --> 00:20:41,580
data that's being processed

536
00:20:41,580 --> 00:20:44,700
and masking work this is masking in AES

537
00:20:44,700 --> 00:20:46,500
on the left hand side it's sort of

538
00:20:46,500 --> 00:20:48,720
vanilla as on the right it's with

539
00:20:48,720 --> 00:20:50,280
masking you see everywhere these plus

540
00:20:50,280 --> 00:20:52,620
x's and these are basically xor

541
00:20:52,620 --> 00:20:55,679
operations where we xor some mask onto

542
00:20:55,679 --> 00:20:56,940
the data

543
00:20:56,940 --> 00:20:58,799
and what's really important is that you

544
00:20:58,799 --> 00:21:00,539
make sure that your data is always

545
00:21:00,539 --> 00:21:02,520
masked and that the mask regularly

546
00:21:02,520 --> 00:21:04,559
rotates there's some other attacks that

547
00:21:04,559 --> 00:21:06,840
you can do if the mask is constant

548
00:21:06,840 --> 00:21:08,760
everywhere so you see this variable X

549
00:21:08,760 --> 00:21:10,500
keeps on keeps on changing and then

550
00:21:10,500 --> 00:21:12,960
eventually sort of at the end of AES you

551
00:21:12,960 --> 00:21:14,820
unmask your value and then you have the

552
00:21:14,820 --> 00:21:17,480
ciphertext

553
00:21:19,500 --> 00:21:22,919
so we did a case study so we implemented

554
00:21:22,919 --> 00:21:25,400
our own AES design

555
00:21:25,400 --> 00:21:28,380
and we added some just off the shelf

556
00:21:28,380 --> 00:21:31,620
literature masking to that

557
00:21:31,620 --> 00:21:34,440
and first we turned off the masking so

558
00:21:34,440 --> 00:21:36,000
we're the same design but we could turn

559
00:21:36,000 --> 00:21:38,159
it off or I think we basically made the

560
00:21:38,159 --> 00:21:39,780
mask always zero or something like that

561
00:21:39,780 --> 00:21:41,340
so we didn't change the design we just

562
00:21:41,340 --> 00:21:43,020
turned off masking

563
00:21:43,020 --> 00:21:48,360
and what we can do then is run our CPA

564
00:21:48,360 --> 00:21:49,140
um

565
00:21:49,140 --> 00:21:52,260
in this case tvla but let's let's just

566
00:21:52,260 --> 00:21:54,840
say CVA the CPA and we see these red

567
00:21:54,840 --> 00:21:57,299
dots which basically indicate when

568
00:21:57,299 --> 00:21:59,100
there's leakage so we know that this

569
00:21:59,100 --> 00:22:01,500
thing leaks that's as predicted there

570
00:22:01,500 --> 00:22:04,380
were you know counter measures were off

571
00:22:04,380 --> 00:22:07,200
so what we're expecting is now that we

572
00:22:07,200 --> 00:22:09,720
when once we turn the countermeasures on

573
00:22:09,720 --> 00:22:12,000
all these red dots should disappear

574
00:22:12,000 --> 00:22:15,559
according to Theory at least

575
00:22:15,659 --> 00:22:18,179
of course that didn't happen

576
00:22:18,179 --> 00:22:20,940
so on the left hand side you see the no

577
00:22:20,940 --> 00:22:22,320
masking picture on the right hand side

578
00:22:22,320 --> 00:22:25,440
you see it with masking and even though

579
00:22:25,440 --> 00:22:27,000
the number of leakage points went from

580
00:22:27,000 --> 00:22:29,760
10 to 5 there was still leakage there

581
00:22:29,760 --> 00:22:31,440
and it was significant and it would be

582
00:22:31,440 --> 00:22:33,960
enough to to break this implementation

583
00:22:33,960 --> 00:22:37,020
and we kind of

584
00:22:37,020 --> 00:22:39,000
we didn't understand it at first because

585
00:22:39,000 --> 00:22:41,039
when we looked at the source code

586
00:22:41,039 --> 00:22:43,380
it all looked fine like The Masks were

587
00:22:43,380 --> 00:22:45,200
being passed

588
00:22:45,200 --> 00:22:48,000
so we used skate and we started going

589
00:22:48,000 --> 00:22:49,559
down to the gate level and trying to

590
00:22:49,559 --> 00:22:51,419
figure out in this case we actually had

591
00:22:51,419 --> 00:22:52,799
to stay at gate level to figure out what

592
00:22:52,799 --> 00:22:53,940
was going on

593
00:22:53,940 --> 00:22:56,520
and what turned out is that

594
00:22:56,520 --> 00:22:58,860
um the synthesis tool for software

595
00:22:58,860 --> 00:23:01,620
people your compiler

596
00:23:01,620 --> 00:23:03,659
decided to optimize this design and it

597
00:23:03,659 --> 00:23:06,659
flipped two X4 operations around

598
00:23:06,659 --> 00:23:08,700
now these two operations happen to be

599
00:23:08,700 --> 00:23:10,440
the remasking so normally when you

600
00:23:10,440 --> 00:23:13,320
remask you first apply the new mask with

601
00:23:13,320 --> 00:23:15,720
an xor and then you xor out the old mask

602
00:23:15,720 --> 00:23:17,820
so that you never have sort of an

603
00:23:17,820 --> 00:23:20,460
unmasked value but the synthetics tool

604
00:23:20,460 --> 00:23:23,039
is optimizing and somehow these tools

605
00:23:23,039 --> 00:23:25,460
never optimized for security

606
00:23:25,460 --> 00:23:27,840
and it flipped these things around so it

607
00:23:27,840 --> 00:23:29,520
first unmasked

608
00:23:29,520 --> 00:23:32,760
which means that the values are in the

609
00:23:32,760 --> 00:23:34,080
clear for a little while and then it

610
00:23:34,080 --> 00:23:35,280
remastered

611
00:23:35,280 --> 00:23:37,140
so it completely threw off the

612
00:23:37,140 --> 00:23:39,539
countermeasure

613
00:23:39,539 --> 00:23:41,940
so yeah once you have that insight and

614
00:23:41,940 --> 00:23:43,620
you dig into it then you can find out

615
00:23:43,620 --> 00:23:45,659
what's going on you can tell your since

616
00:23:45,659 --> 00:23:47,280
the synthesis tool basically don't

617
00:23:47,280 --> 00:23:49,980
optimize certain things and then it

618
00:23:49,980 --> 00:23:52,919
maintained the operation and on the

619
00:23:52,919 --> 00:23:55,080
right hand side take note of the y-axis

620
00:23:55,080 --> 00:23:57,659
here that's a bit zoomed in there's no

621
00:23:57,659 --> 00:23:59,340
more red dots essentially the leakage is

622
00:23:59,340 --> 00:24:01,260
gone as we as we would have originally

623
00:24:01,260 --> 00:24:03,720
expected and when you looked into that

624
00:24:03,720 --> 00:24:06,720
list yeah the orders of the Mask was was

625
00:24:06,720 --> 00:24:09,440
maintained

626
00:24:10,860 --> 00:24:15,419
well that's all uh really nice but

627
00:24:15,419 --> 00:24:18,000
it's not just about the AES core itself

628
00:24:18,000 --> 00:24:19,559
and that's I think

629
00:24:19,559 --> 00:24:21,539
an Insight that we've gradually been

630
00:24:21,539 --> 00:24:23,640
been getting as we dig more into the

631
00:24:23,640 --> 00:24:25,740
details because historically sites at

632
00:24:25,740 --> 00:24:28,080
least from our point of view as a lab we

633
00:24:28,080 --> 00:24:30,120
were just testing chips we didn't have

634
00:24:30,120 --> 00:24:31,500
designs we didn't have this kind of

635
00:24:31,500 --> 00:24:32,940
insight like it either leaked or it

636
00:24:32,940 --> 00:24:34,559
didn't and we kind of knew what the

637
00:24:34,559 --> 00:24:36,059
position on the chip was where it leads

638
00:24:36,059 --> 00:24:38,039
if you're doing em

639
00:24:38,039 --> 00:24:39,299
um

640
00:24:39,299 --> 00:24:41,700
but now we have sort of an unprecedented

641
00:24:41,700 --> 00:24:43,620
look into all the details of what was

642
00:24:43,620 --> 00:24:45,900
going on so like let's let's just zoom

643
00:24:45,900 --> 00:24:48,600
out a little bit and take an entire SOC

644
00:24:48,600 --> 00:24:50,340
and then try to simulate that because

645
00:24:50,340 --> 00:24:52,260
maybe the AES score is fine but we don't

646
00:24:52,260 --> 00:24:55,760
know if the rest of the house is on fire

647
00:24:56,760 --> 00:24:58,919
so

648
00:24:58,919 --> 00:25:00,960
we took an SOC which is a little

649
00:25:00,960 --> 00:25:03,240
different than the one I just showed you

650
00:25:03,240 --> 00:25:05,580
um but it's basically a small SOC with a

651
00:25:05,580 --> 00:25:08,220
CPU cord some peripherals some memory

652
00:25:08,220 --> 00:25:10,140
and an as accelerator

653
00:25:10,140 --> 00:25:12,960
and we loaded this piece of software on

654
00:25:12,960 --> 00:25:13,860
it

655
00:25:13,860 --> 00:25:16,020
and basically what you're seeing here is

656
00:25:16,020 --> 00:25:18,600
that it's in sort of in the blue

657
00:25:18,600 --> 00:25:20,220
instructions there it's first loading

658
00:25:20,220 --> 00:25:22,500
the plain text so it's loading 32 bits

659
00:25:22,500 --> 00:25:24,419
for memory and then it's storing it in

660
00:25:24,419 --> 00:25:26,880
as engine and doing that four times so

661
00:25:26,880 --> 00:25:29,279
it transfers 128 bits

662
00:25:29,279 --> 00:25:31,380
and it does the same for the key so it's

663
00:25:31,380 --> 00:25:33,240
loading 32 bits at a time storing it in

664
00:25:33,240 --> 00:25:35,640
the as engine and then the CPU Basics

665
00:25:35,640 --> 00:25:39,000
says go encrypt and it's going into a

666
00:25:39,000 --> 00:25:40,740
busy weight so it actually just kind of

667
00:25:40,740 --> 00:25:42,480
pulls the as engine for you know are you

668
00:25:42,480 --> 00:25:45,480
not 999 are you done are you done

669
00:25:45,480 --> 00:25:46,620
um so we

670
00:25:46,620 --> 00:25:49,679
put this in our power simulations

671
00:25:49,679 --> 00:25:51,480
and

672
00:25:51,480 --> 00:25:55,260
this is sort of a very common look if

673
00:25:55,260 --> 00:25:56,760
you you're used to looking at powered

674
00:25:56,760 --> 00:25:58,860
faces where you sort of see the CPU

675
00:25:58,860 --> 00:26:01,200
doing something first on this case we

676
00:26:01,200 --> 00:26:03,360
know it's writing the plain text in the

677
00:26:03,360 --> 00:26:06,299
key then it switches to the AES engine

678
00:26:06,299 --> 00:26:09,000
says you know go and you see sort of

679
00:26:09,000 --> 00:26:11,580
this higher active like as engines that

680
00:26:11,580 --> 00:26:13,260
have a lot of switching activity way

681
00:26:13,260 --> 00:26:15,600
more than the simple CPU here so you

682
00:26:15,600 --> 00:26:18,299
expect more power consumption and you

683
00:26:18,299 --> 00:26:21,179
see that here if you squint a little bit

684
00:26:21,179 --> 00:26:23,640
you can see like a rep like 10 round

685
00:26:23,640 --> 00:26:25,559
repetitions happening as well we started

686
00:26:25,559 --> 00:26:28,140
10 rounds of AES and after that the CPU

687
00:26:28,140 --> 00:26:30,000
takes over again and retrieves the the

688
00:26:30,000 --> 00:26:32,600
ciphertext

689
00:26:32,640 --> 00:26:33,480
um

690
00:26:33,480 --> 00:26:35,220
what I found really cool is you can

691
00:26:35,220 --> 00:26:37,200
actually see some of the sort of the

692
00:26:37,200 --> 00:26:40,500
internals of the CPU Behavior as well so

693
00:26:40,500 --> 00:26:41,520
um

694
00:26:41,520 --> 00:26:43,740
from your computer architecture 101

695
00:26:43,740 --> 00:26:46,020
class you may remember pipeline hazards

696
00:26:46,020 --> 00:26:48,720
and pipeline stalls so what's happening

697
00:26:48,720 --> 00:26:51,059
in the CPU is when it fetches to 32 bits

698
00:26:51,059 --> 00:26:53,640
from memory it actually already starts

699
00:26:53,640 --> 00:26:56,220
executing that store instruction but the

700
00:26:56,220 --> 00:26:57,659
store instruction needs to wait for the

701
00:26:57,659 --> 00:27:00,000
data to come in to the CPU before it can

702
00:27:00,000 --> 00:27:02,100
actually do the store and you see that

703
00:27:02,100 --> 00:27:04,559
in these little divots in the in the

704
00:27:04,559 --> 00:27:06,240
power consumption there so you see this

705
00:27:06,240 --> 00:27:08,880
really you can kind of kind of Trace

706
00:27:08,880 --> 00:27:10,980
every instruction through its execution

707
00:27:10,980 --> 00:27:13,799
and then near the end the CPU kicks off

708
00:27:13,799 --> 00:27:16,080
the as accelerator and then it's kind of

709
00:27:16,080 --> 00:27:18,299
holds there

710
00:27:18,299 --> 00:27:20,220
now

711
00:27:20,220 --> 00:27:22,020
apart from geeking out over that let's

712
00:27:22,020 --> 00:27:24,840
let's go back to leakage so

713
00:27:24,840 --> 00:27:27,000
this was again an AES Engine with no

714
00:27:27,000 --> 00:27:28,620
counter measure so we expect leakage

715
00:27:28,620 --> 00:27:30,299
here

716
00:27:30,299 --> 00:27:31,320
um

717
00:27:31,320 --> 00:27:34,380
but what we also saw

718
00:27:34,380 --> 00:27:37,200
maybe not entirely unexpected was a

719
00:27:37,200 --> 00:27:38,840
whole bunch of leakage

720
00:27:38,840 --> 00:27:42,480
before the as engine even started

721
00:27:42,480 --> 00:27:45,360
so you see a couple of little Peaks that

722
00:27:45,360 --> 00:27:47,400
align with round one of the AES that's

723
00:27:47,400 --> 00:27:49,440
just leakage from the as engine but

724
00:27:49,440 --> 00:27:50,880
there's a whole bunch of stuff happening

725
00:27:50,880 --> 00:27:53,460
before that and

726
00:27:53,460 --> 00:27:55,320
it's kind of interesting if you look at

727
00:27:55,320 --> 00:27:57,000
this from from a designer's point of

728
00:27:57,000 --> 00:27:59,520
view because very often you have a

729
00:27:59,520 --> 00:28:01,620
hardware designer who makes an AES

730
00:28:01,620 --> 00:28:03,360
engine and they'll work on the counter

731
00:28:03,360 --> 00:28:05,400
measures and maybe they'll even simulate

732
00:28:05,400 --> 00:28:08,100
it and they figure out it's all fine

733
00:28:08,100 --> 00:28:10,260
um and then there's also a software

734
00:28:10,260 --> 00:28:12,299
developer who says you know I'm just

735
00:28:12,299 --> 00:28:15,299
following my the you know I'm writing my

736
00:28:15,299 --> 00:28:16,460
code in C

737
00:28:16,460 --> 00:28:19,919
micro architecture or sock layouts are

738
00:28:19,919 --> 00:28:21,419
not my domain I can't really fix

739
00:28:21,419 --> 00:28:23,000
anything there

740
00:28:23,000 --> 00:28:25,500
but maybe there's a whole bunch of

741
00:28:25,500 --> 00:28:26,580
leakage that's happening there so

742
00:28:26,580 --> 00:28:28,919
there's sort of a gap when you when you

743
00:28:28,919 --> 00:28:31,080
engineer these chips and who really

744
00:28:31,080 --> 00:28:32,940
looks at the leakage that's happening

745
00:28:32,940 --> 00:28:36,740
outside of the AES engine

746
00:28:38,520 --> 00:28:40,080
and we can zoom into that a little bit

747
00:28:40,080 --> 00:28:41,700
further

748
00:28:41,700 --> 00:28:44,159
because we can locate where these gates

749
00:28:44,159 --> 00:28:45,480
are we can locate where they are in

750
00:28:45,480 --> 00:28:47,460
hierarchy and we actually find that

751
00:28:47,460 --> 00:28:49,200
there's a whole bunch of leakage that's

752
00:28:49,200 --> 00:28:52,799
happening in the risk 5 CPU which you

753
00:28:52,799 --> 00:28:54,480
may expect right it's handling key

754
00:28:54,480 --> 00:28:56,400
material

755
00:28:56,400 --> 00:28:58,020
um it's kind of cool that you can kind

756
00:28:58,020 --> 00:29:00,000
of see where it is it's in alus and in

757
00:29:00,000 --> 00:29:02,700
the register files Etc but what

758
00:29:02,700 --> 00:29:04,380
surprises is that's actually the

759
00:29:04,380 --> 00:29:06,539
peripherals were leaking key material as

760
00:29:06,539 --> 00:29:08,100
well

761
00:29:08,100 --> 00:29:09,539
and that's surprising because they're

762
00:29:09,539 --> 00:29:11,400
not it's not their job to deal with key

763
00:29:11,400 --> 00:29:13,140
material at all

764
00:29:13,140 --> 00:29:14,820
um the problem is they're hanging off at

765
00:29:14,820 --> 00:29:18,240
the same bus as the CPU and as engine

766
00:29:18,240 --> 00:29:19,860
so as soon as key material is being

767
00:29:19,860 --> 00:29:21,899
transferred over that bus

768
00:29:21,899 --> 00:29:24,360
there's some transistor activity there

769
00:29:24,360 --> 00:29:26,340
even though they might not actually do

770
00:29:26,340 --> 00:29:28,200
anything with that data there's still

771
00:29:28,200 --> 00:29:30,419
some switching activity there that sort

772
00:29:30,419 --> 00:29:33,419
of amplifies the the leakage

773
00:29:33,419 --> 00:29:36,000
so yeah one of our conclusions here here

774
00:29:36,000 --> 00:29:37,679
really was look it's just found an

775
00:29:37,679 --> 00:29:39,600
unexpected places if you don't look here

776
00:29:39,600 --> 00:29:42,678
you're not going to find it

777
00:29:42,840 --> 00:29:44,340
so

778
00:29:44,340 --> 00:29:47,520
um a little bit about future work

779
00:29:47,520 --> 00:29:49,320
um

780
00:29:49,320 --> 00:29:51,419
future work meaning we dream of this it

781
00:29:51,419 --> 00:29:53,460
doesn't exist today

782
00:29:53,460 --> 00:29:54,179
um

783
00:29:54,179 --> 00:29:56,760
one of the insights we had is

784
00:29:56,760 --> 00:29:59,279
um if you look at the Leaky Gates only

785
00:29:59,279 --> 00:30:01,320
in the design it's actually quite a

786
00:30:01,320 --> 00:30:03,419
subset of the full design

787
00:30:03,419 --> 00:30:04,980
so I'm going to talk for instance about

788
00:30:04,980 --> 00:30:08,580
AES counter or AES mask encounter

789
00:30:08,580 --> 00:30:11,399
measures these things doubled area which

790
00:30:11,399 --> 00:30:13,740
is expensive

791
00:30:13,740 --> 00:30:16,080
um if we can isolate the leakage to like

792
00:30:16,080 --> 00:30:20,520
10 30 of the design even if we would

793
00:30:20,520 --> 00:30:23,880
like double the area on only those Gates

794
00:30:23,880 --> 00:30:25,860
we'd still be cheaper than doing a

795
00:30:25,860 --> 00:30:27,480
full-blown masking

796
00:30:27,480 --> 00:30:30,179
so we're sort of looking at this from

797
00:30:30,179 --> 00:30:31,860
an encounter measure injection

798
00:30:31,860 --> 00:30:33,720
standpoint like if we have this list of

799
00:30:33,720 --> 00:30:35,820
gates can we do a netless transformation

800
00:30:35,820 --> 00:30:39,320
to get a more secure design out

801
00:30:39,320 --> 00:30:41,520
once you have that you can also start

802
00:30:41,520 --> 00:30:44,220
thinking about design space exploration

803
00:30:44,220 --> 00:30:46,860
so Hardware designers are often trading

804
00:30:46,860 --> 00:30:49,340
off power performance area

805
00:30:49,340 --> 00:30:51,720
and security is actually a fourth

806
00:30:51,720 --> 00:30:53,039
dimension in that

807
00:30:53,039 --> 00:30:55,200
so security comes at a cost tighter

808
00:30:55,200 --> 00:30:57,840
power performs their area so once you

809
00:30:57,840 --> 00:31:01,020
start looking at security as hey we have

810
00:31:01,020 --> 00:31:02,700
a list of leaky Gates

811
00:31:02,700 --> 00:31:04,380
I can try applying countermeasures on

812
00:31:04,380 --> 00:31:06,360
the top 10 Gates and on the top 100

813
00:31:06,360 --> 00:31:09,059
gates in the top 1000 Gates and see how

814
00:31:09,059 --> 00:31:11,520
it affects my power performance in area

815
00:31:11,520 --> 00:31:13,559
and as a designer I can start making

816
00:31:13,559 --> 00:31:15,600
these trade-offs between security and

817
00:31:15,600 --> 00:31:19,039
you know the cost of it

818
00:31:19,440 --> 00:31:21,840
and then finally in um in Hardware

819
00:31:21,840 --> 00:31:23,520
design there's sort of an important

820
00:31:23,520 --> 00:31:25,200
Point called sign off

821
00:31:25,200 --> 00:31:28,200
where you take various metrics over your

822
00:31:28,200 --> 00:31:30,059
design you say okay this is good enough

823
00:31:30,059 --> 00:31:31,860
to go into fabrication

824
00:31:31,860 --> 00:31:34,080
and really what we would love to see is

825
00:31:34,080 --> 00:31:36,240
basically a security sign off as well or

826
00:31:36,240 --> 00:31:38,279
we said this is secure enough to go into

827
00:31:38,279 --> 00:31:40,260
fabrication and we can come up with a

828
00:31:40,260 --> 00:31:41,820
bunch of metrics based on on side

829
00:31:41,820 --> 00:31:44,220
Channel analysis that that could help

830
00:31:44,220 --> 00:31:46,460
that

831
00:31:47,520 --> 00:31:49,559
um before I get into conclusions some

832
00:31:49,559 --> 00:31:53,279
some caveats so these simulations are

833
00:31:53,279 --> 00:31:55,500
limited by how many CPU cores you throw

834
00:31:55,500 --> 00:31:59,100
at it but also the design size so you

835
00:31:59,100 --> 00:32:02,240
didn't see the latest you know Intel

836
00:32:02,240 --> 00:32:04,799
12th generation 4 in my slides because

837
00:32:04,799 --> 00:32:07,380
that's not stuff we can simulate but you

838
00:32:07,380 --> 00:32:11,100
know AES scores simple socs definitely

839
00:32:11,100 --> 00:32:13,500
something that's that's within reach and

840
00:32:13,500 --> 00:32:16,679
you could theoretically throw more CPU

841
00:32:16,679 --> 00:32:18,299
core than the simulation as well and

842
00:32:18,299 --> 00:32:20,760
speed it up that way

843
00:32:20,760 --> 00:32:23,820
um accuracy wise we're relying on these

844
00:32:23,820 --> 00:32:27,000
Eda simulators so the reason we taped

845
00:32:27,000 --> 00:32:28,919
out that chip which is coming back in

846
00:32:28,919 --> 00:32:30,419
October keep your fingers crossed that

847
00:32:30,419 --> 00:32:32,279
they actually work

848
00:32:32,279 --> 00:32:34,620
um is so we have a full design we can

849
00:32:34,620 --> 00:32:36,179
run it through skate and we can look at

850
00:32:36,179 --> 00:32:38,820
the Chip And basically cross cross check

851
00:32:38,820 --> 00:32:41,640
our our results with with reality now

852
00:32:41,640 --> 00:32:44,340
these EDI simulators aren't

853
00:32:44,340 --> 00:32:47,159
new they've been you know trusted and

854
00:32:47,159 --> 00:32:49,080
tried for a long time but

855
00:32:49,080 --> 00:32:51,360
there's been new in this side Channel or

856
00:32:51,360 --> 00:32:53,640
new users inside sales is kind of new so

857
00:32:53,640 --> 00:32:54,899
that's that's really the use case we're

858
00:32:54,899 --> 00:32:57,120
testing

859
00:32:57,120 --> 00:32:59,340
so concluding

860
00:32:59,340 --> 00:33:02,100
um both silicon we can fix the next chip

861
00:33:02,100 --> 00:33:04,020
if we find leakage but with pre-silicon

862
00:33:04,020 --> 00:33:06,480
we can fix the current chip but only if

863
00:33:06,480 --> 00:33:08,279
we know where the leakage is if you just

864
00:33:08,279 --> 00:33:12,299
know when that's that's not actionable

865
00:33:12,299 --> 00:33:14,880
um we also find that it's just doing

866
00:33:14,880 --> 00:33:17,580
manual review of designs is not

867
00:33:17,580 --> 00:33:19,799
sufficient you really want to approach

868
00:33:19,799 --> 00:33:22,440
this with Statistics simulations Etc

869
00:33:22,440 --> 00:33:24,179
because the leakage is found in in

870
00:33:24,179 --> 00:33:26,039
unexpected places and you're not going

871
00:33:26,039 --> 00:33:27,659
to find it if you don't know don't know

872
00:33:27,659 --> 00:33:28,980
where to look

873
00:33:28,980 --> 00:33:29,880
um

874
00:33:29,880 --> 00:33:31,919
what gets me excited actually even

875
00:33:31,919 --> 00:33:33,320
though I

876
00:33:33,320 --> 00:33:35,159
apparently know a little bit about side

877
00:33:35,159 --> 00:33:37,380
Channel analysis to actually do this

878
00:33:37,380 --> 00:33:38,940
analysis you don't need that much

879
00:33:38,940 --> 00:33:42,659
knowledge about it so these tools are

880
00:33:42,659 --> 00:33:44,340
sort of within the domain of Hardware

881
00:33:44,340 --> 00:33:45,899
developers and those are the people who

882
00:33:45,899 --> 00:33:47,940
really have to fix it in the end we

883
00:33:47,940 --> 00:33:50,279
don't want everybody to have to become a

884
00:33:50,279 --> 00:33:53,100
side Channel expert

885
00:33:53,100 --> 00:33:54,600
and then yeah there's a couple of

886
00:33:54,600 --> 00:33:56,640
interesting uh future directions in

887
00:33:56,640 --> 00:33:58,919
terms of automatic counter measures sign

888
00:33:58,919 --> 00:34:01,080
off and the Silicon validation that I

889
00:34:01,080 --> 00:34:03,678
just spoke about

890
00:34:04,679 --> 00:34:06,960
so I didn't do this alone

891
00:34:06,960 --> 00:34:07,740
um

892
00:34:07,740 --> 00:34:10,679
I stole a bunch of slides from

893
00:34:10,679 --> 00:34:12,899
um one of my Escape colleagues Patrick

894
00:34:12,899 --> 00:34:15,359
Soma the WPI

895
00:34:15,359 --> 00:34:16,020
um

896
00:34:16,020 --> 00:34:18,239
yeah I've worked together with a number

897
00:34:18,239 --> 00:34:21,599
of institutes so WPI Purdue and then

898
00:34:21,599 --> 00:34:23,399
rescue and intrinsics are two industry

899
00:34:23,399 --> 00:34:25,800
Partners we all made this happening

900
00:34:25,800 --> 00:34:27,839
happen

901
00:34:27,839 --> 00:34:30,179
um one cool shout out I want to do is to

902
00:34:30,179 --> 00:34:32,280
the zero to Asic course if you want to

903
00:34:32,280 --> 00:34:34,199
get into Hardware

904
00:34:34,199 --> 00:34:35,820
um maybe even tape out your own chips

905
00:34:35,820 --> 00:34:38,699
design go talk to medfin and follow this

906
00:34:38,699 --> 00:34:40,080
course I've done it I've had a lot of

907
00:34:40,080 --> 00:34:42,000
fun and you know with the basic basis

908
00:34:42,000 --> 00:34:44,399
for the chip chip out we did and I don't

909
00:34:44,399 --> 00:34:46,139
consider myself a hardware designer at

910
00:34:46,139 --> 00:34:50,399
all I'm not but I made it work

911
00:34:50,399 --> 00:34:52,020
um and then there's a scientific paper

912
00:34:52,020 --> 00:34:53,760
here on an architecture correlation

913
00:34:53,760 --> 00:34:56,159
analysis can have a look at and if

914
00:34:56,159 --> 00:34:58,200
you're interested in the Hands-On not

915
00:34:58,200 --> 00:35:00,359
the simulated side of Hardware hacking

916
00:35:00,359 --> 00:35:02,099
you can also check out the book that

917
00:35:02,099 --> 00:35:05,400
Carl and I wrote and with that I have

918
00:35:05,400 --> 00:35:07,740
four minutes and four seconds for

919
00:35:07,740 --> 00:35:08,520
questions

920
00:35:08,520 --> 00:35:12,910
[Applause]

921
00:35:12,910 --> 00:35:16,020
[Music]

922
00:35:19,870 --> 00:35:22,960
[Music]

