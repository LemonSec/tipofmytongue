1
00:00:01,730 --> 00:00:03,720
[Music]

2
00:00:03,720 --> 00:00:06,720
foreign

3
00:00:07,580 --> 00:00:09,599
good afternoon good evening everyone

4
00:00:09,599 --> 00:00:11,940
here in person and in the virtual room

5
00:00:11,940 --> 00:00:14,040
this talk is about evaluating the

6
00:00:14,040 --> 00:00:16,020
security posture of graph neural network

7
00:00:16,020 --> 00:00:18,779
models the main contributor is Dr Young

8
00:00:18,779 --> 00:00:21,180
Zhang and his research group from cispa

9
00:00:21,180 --> 00:00:23,580
Germany

10
00:00:23,580 --> 00:00:26,340
for the past decades we have seen many

11
00:00:26,340 --> 00:00:27,840
successful machine learning models

12
00:00:27,840 --> 00:00:30,359
ranging from facial recognition to voice

13
00:00:30,359 --> 00:00:31,920
recognition and to the latest

14
00:00:31,920 --> 00:00:35,219
large-scale language models and text to

15
00:00:35,219 --> 00:00:36,960
image generators

16
00:00:36,960 --> 00:00:39,840
but today we're gonna stay away from the

17
00:00:39,840 --> 00:00:43,440
images and text audio video we're going

18
00:00:43,440 --> 00:00:46,440
to talk about graph

19
00:00:46,440 --> 00:00:47,640
graph

20
00:00:47,640 --> 00:00:49,800
they are everywhere

21
00:00:49,800 --> 00:00:52,559
this is not a unfamiliar concept we have

22
00:00:52,559 --> 00:00:55,199
arbitrary sizes and the examples are

23
00:00:55,199 --> 00:00:57,420
plenty social graph

24
00:00:57,420 --> 00:00:59,940
knowledge graphs your pictures history

25
00:00:59,940 --> 00:01:02,699
like the user item interaction graphs

26
00:01:02,699 --> 00:01:04,559
even the molecular they can be

27
00:01:04,559 --> 00:01:07,740
represented as a molecular graphs

28
00:01:07,740 --> 00:01:10,200
as applications that also everywhere as

29
00:01:10,200 --> 00:01:13,380
well you go on the e-commerce website

30
00:01:13,380 --> 00:01:15,240
they have a recommendation for you we

31
00:01:15,240 --> 00:01:17,820
found the item you may be interested and

32
00:01:17,820 --> 00:01:19,920
you go on the social network they will

33
00:01:19,920 --> 00:01:21,479
actually tell you that

34
00:01:21,479 --> 00:01:23,880
do you know someone you want to connect

35
00:01:23,880 --> 00:01:25,979
it with him or her

36
00:01:25,979 --> 00:01:28,140
all sorts of the things and recently

37
00:01:28,140 --> 00:01:30,080
there is the new trend for the drug

38
00:01:30,080 --> 00:01:33,420
e-discovery so instead of looking at the

39
00:01:33,420 --> 00:01:36,479
toxicities of the molecules in the lab

40
00:01:36,479 --> 00:01:39,720
you can use the graph neural networks to

41
00:01:39,720 --> 00:01:41,579
do the toxicity prediction

42
00:01:41,579 --> 00:01:44,460
so these pretty much pervasive the graph

43
00:01:44,460 --> 00:01:46,439
applications

44
00:01:46,439 --> 00:01:48,960
and the traditional deep neural networks

45
00:01:48,960 --> 00:01:51,119
they have been proven pretty much

46
00:01:51,119 --> 00:01:53,880
successful for the past decades but

47
00:01:53,880 --> 00:01:55,740
they're designed for grids like images

48
00:01:55,740 --> 00:01:58,860
or sequences for text

49
00:01:58,860 --> 00:02:02,520
in light of the success graph neural

50
00:02:02,520 --> 00:02:04,860
network was invented

51
00:02:04,860 --> 00:02:07,920
back in 2014-15

52
00:02:07,920 --> 00:02:11,879
basically the goal is to Mark a input

53
00:02:11,879 --> 00:02:13,920
graph like the graph is not readily

54
00:02:13,920 --> 00:02:16,860
consumable by our computers into the

55
00:02:16,860 --> 00:02:19,260
euclidean space into vectors

56
00:02:19,260 --> 00:02:21,540
so they are in that case you can start

57
00:02:21,540 --> 00:02:24,239
consuming that in the computers

58
00:02:24,239 --> 00:02:26,340
to do that there's a technology called

59
00:02:26,340 --> 00:02:27,959
the messaging passing used by

60
00:02:27,959 --> 00:02:29,520
graphenewal Network

61
00:02:29,520 --> 00:02:31,260
so basically

62
00:02:31,260 --> 00:02:33,420
they just aggregate your Labor's

63
00:02:33,420 --> 00:02:36,360
information in a recursive way and based

64
00:02:36,360 --> 00:02:37,920
on the different Technologies you have

65
00:02:37,920 --> 00:02:40,140
different aggregators such as graph

66
00:02:40,140 --> 00:02:41,760
convolutional Network

67
00:02:41,760 --> 00:02:44,640
or graph isomorphism Networks

68
00:02:44,640 --> 00:02:47,099
and once you map the node into the

69
00:02:47,099 --> 00:02:48,720
euclidean space you can start doing the

70
00:02:48,720 --> 00:02:50,700
node classification link prediction

71
00:02:50,700 --> 00:02:52,739
based on the distance between the

72
00:02:52,739 --> 00:02:54,540
vectors

73
00:02:54,540 --> 00:02:56,760
and if we go further into the graph

74
00:02:56,760 --> 00:02:59,280
level you will actually have one thing

75
00:02:59,280 --> 00:03:01,800
is the the core concept of graph level

76
00:03:01,800 --> 00:03:04,440
mapping is you have the node embeddings

77
00:03:04,440 --> 00:03:07,440
you have a graph you have K nodes

78
00:03:07,440 --> 00:03:09,900
and you want to compress them into a

79
00:03:09,900 --> 00:03:12,180
single Vector so the entire graph is

80
00:03:12,180 --> 00:03:14,760
represented by a single vector

81
00:03:14,760 --> 00:03:17,220
if you do that you can go there and do

82
00:03:17,220 --> 00:03:19,260
the graph classification and matching

83
00:03:19,260 --> 00:03:21,300
the visualization you can also do the

84
00:03:21,300 --> 00:03:22,920
toxicity prediction as I mentioned

85
00:03:22,920 --> 00:03:24,599
before

86
00:03:24,599 --> 00:03:26,400
so these are the applications and the

87
00:03:26,400 --> 00:03:28,800
graph levels just some background

88
00:03:28,800 --> 00:03:31,800
and all these big companies you name it

89
00:03:31,800 --> 00:03:33,780
Google Twitter

90
00:03:33,780 --> 00:03:36,659
and the different applications they are

91
00:03:36,659 --> 00:03:39,599
all doing this graph new network been

92
00:03:39,599 --> 00:03:42,720
just pretty much invisible but this in

93
00:03:42,720 --> 00:03:45,060
the background in the back end to

94
00:03:45,060 --> 00:03:48,060
support your daily life

95
00:03:48,060 --> 00:03:52,140
and yes we are talking about the bright

96
00:03:52,140 --> 00:03:55,739
side of machine learning here comes the

97
00:03:55,739 --> 00:03:57,060
dark side

98
00:03:57,060 --> 00:03:59,640
talk about the adversary of machine

99
00:03:59,640 --> 00:04:01,680
learning if you do that in the Google

100
00:04:01,680 --> 00:04:03,480
News you probably see all the

101
00:04:03,480 --> 00:04:06,480
screenshots you're doing here this is a

102
00:04:06,480 --> 00:04:08,280
big topic recently it's about the

103
00:04:08,280 --> 00:04:09,900
machine the security of the machine

104
00:04:09,900 --> 00:04:12,360
learning models themselves

105
00:04:12,360 --> 00:04:15,239
we pretty much agree with the Air Force

106
00:04:15,239 --> 00:04:17,820
magazine it's like does AI represent the

107
00:04:17,820 --> 00:04:20,399
attack surface for the adversaries

108
00:04:20,399 --> 00:04:23,400
so that's a talk about

109
00:04:23,400 --> 00:04:26,460
if the Cooperative network is actually a

110
00:04:26,460 --> 00:04:28,680
new attack surface

111
00:04:28,680 --> 00:04:31,080
I will talk about the four attacks

112
00:04:31,080 --> 00:04:33,540
and I will start with linkery identify

113
00:04:33,540 --> 00:04:36,960
link re-identification attack the goal

114
00:04:36,960 --> 00:04:39,060
of this attack is to identify if two

115
00:04:39,060 --> 00:04:42,540
nodes are connected in the private data

116
00:04:42,540 --> 00:04:46,020
right here is actually the scenario we

117
00:04:46,020 --> 00:04:48,360
frame our graphene Network in the node

118
00:04:48,360 --> 00:04:49,979
classification

119
00:04:49,979 --> 00:04:50,940
task

120
00:04:50,940 --> 00:04:53,100
and its attackers capability is that

121
00:04:53,100 --> 00:04:55,080
they can be able to breach

122
00:04:55,080 --> 00:04:58,380
where you store your posterior scores

123
00:04:58,380 --> 00:05:01,800
why it is a valid scenario let us take

124
00:05:01,800 --> 00:05:04,800
this gigantic social network for example

125
00:05:04,800 --> 00:05:07,800
you pump that into the group new network

126
00:05:07,800 --> 00:05:10,380
you take just a few hours and you

127
00:05:10,380 --> 00:05:14,220
generate posters of each node and you

128
00:05:14,220 --> 00:05:16,380
don't do that where we frankly so you

129
00:05:16,380 --> 00:05:18,120
store in the database

130
00:05:18,120 --> 00:05:21,360
upon the adversary breach this database

131
00:05:21,360 --> 00:05:23,639
where you store the results they can

132
00:05:23,639 --> 00:05:25,680
start inferring if two nodes are

133
00:05:25,680 --> 00:05:27,660
actually connected in your private graph

134
00:05:27,660 --> 00:05:28,919
you don't want to discuss that

135
00:05:28,919 --> 00:05:31,560
information just put that into the

136
00:05:31,560 --> 00:05:33,419
contact reason

137
00:05:33,419 --> 00:05:34,800
framework right you don't want to

138
00:05:34,800 --> 00:05:36,419
discuss that if two patients are

139
00:05:36,419 --> 00:05:37,680
connected together it is too much

140
00:05:37,680 --> 00:05:40,020
priority information there

141
00:05:40,020 --> 00:05:42,300
how do they do that so this is actually

142
00:05:42,300 --> 00:05:45,180
we talk about the incredibly fishing

143
00:05:45,180 --> 00:05:47,220
attack

144
00:05:47,220 --> 00:05:49,919
so the one upon the get the posterior

145
00:05:49,919 --> 00:05:52,139
scores they are literally just two

146
00:05:52,139 --> 00:05:54,360
vectors right just simplify the example

147
00:05:54,360 --> 00:05:56,940
here they can immediately just use the

148
00:05:56,940 --> 00:05:59,520
posterior similarity to calculate that

149
00:05:59,520 --> 00:06:01,919
if it is greater than a threshold there

150
00:06:01,919 --> 00:06:04,199
is a link exists between these two nodes

151
00:06:04,199 --> 00:06:06,900
otherwise not

152
00:06:06,900 --> 00:06:09,120
even we take this very straightforward

153
00:06:09,120 --> 00:06:12,000
approach the performance is reasonably

154
00:06:12,000 --> 00:06:13,080
okay

155
00:06:13,080 --> 00:06:16,320
but not really good

156
00:06:16,320 --> 00:06:18,660
then we think about the second scenario

157
00:06:18,660 --> 00:06:21,300
since the attackers already know that

158
00:06:21,300 --> 00:06:23,940
this posterior School are generated by a

159
00:06:23,940 --> 00:06:26,699
graph neural network model how about I

160
00:06:26,699 --> 00:06:28,800
use a shadow data set and build the

161
00:06:28,800 --> 00:06:31,740
model by myself then

162
00:06:31,740 --> 00:06:33,660
here's what they can do

163
00:06:33,660 --> 00:06:36,419
after stress they do that in their local

164
00:06:36,419 --> 00:06:39,000
environment there is no interaction with

165
00:06:39,000 --> 00:06:41,460
a remote model they are targeting what

166
00:06:41,460 --> 00:06:43,199
they do is that they have a shadow model

167
00:06:43,199 --> 00:06:45,360
that they have the shutter data set they

168
00:06:45,360 --> 00:06:47,759
will build their own shadow model still

169
00:06:47,759 --> 00:06:49,860
as a craft new network

170
00:06:49,860 --> 00:06:52,380
from there they look at the posterior

171
00:06:52,380 --> 00:06:54,660
scores of all the nodes because they

172
00:06:54,660 --> 00:06:57,539
actually control the whole environment

173
00:06:57,539 --> 00:07:00,600
then could create a MLP as their attack

174
00:07:00,600 --> 00:07:03,060
model for example they can use the

175
00:07:03,060 --> 00:07:05,100
concatenation of these two posterior

176
00:07:05,100 --> 00:07:07,620
schools together and the trend with the

177
00:07:07,620 --> 00:07:11,360
positive and negative edges

178
00:07:11,460 --> 00:07:14,520
once they do that okay they'll be pretty

179
00:07:14,520 --> 00:07:17,940
much as it is take this one for example

180
00:07:17,940 --> 00:07:20,340
if the posterior scores they are

181
00:07:20,340 --> 00:07:22,740
actually four if they contact them

182
00:07:22,740 --> 00:07:25,500
together you look at a dimension eight

183
00:07:25,500 --> 00:07:26,819
vector

184
00:07:26,819 --> 00:07:29,639
suppose the database you Bridge

185
00:07:29,639 --> 00:07:32,780
is actually returning you a

186
00:07:32,780 --> 00:07:36,240
density vectors contacting them together

187
00:07:36,240 --> 00:07:40,020
that means a dimension of six so there

188
00:07:40,020 --> 00:07:42,300
is a dimension mismatch you cannot just

189
00:07:42,300 --> 00:07:44,039
easily do that

190
00:07:44,039 --> 00:07:46,860
a simple solution just goes through what

191
00:07:46,860 --> 00:07:48,120
we tried

192
00:07:48,120 --> 00:07:51,240
is to unify the input of this attack

193
00:07:51,240 --> 00:07:53,819
model so we have a different distance

194
00:07:53,819 --> 00:07:56,400
functions to unify the

195
00:07:56,400 --> 00:07:59,039
posterior score at the same time we use

196
00:07:59,039 --> 00:08:01,199
four different entropies to calculate

197
00:08:01,199 --> 00:08:03,720
the difference between the

198
00:08:03,720 --> 00:08:05,580
posterior scores that we are supposed to

199
00:08:05,580 --> 00:08:09,419
train then we build this attack model

200
00:08:09,419 --> 00:08:12,960
and once you breach the database you can

201
00:08:12,960 --> 00:08:14,220
see that

202
00:08:14,220 --> 00:08:17,160
you have the unified input then your

203
00:08:17,160 --> 00:08:18,780
model works

204
00:08:18,780 --> 00:08:21,840
performance wise it increased the

205
00:08:21,840 --> 00:08:23,819
previous

206
00:08:23,819 --> 00:08:25,800
Simple Solution like just directly

207
00:08:25,800 --> 00:08:27,780
calculating the similarities between the

208
00:08:27,780 --> 00:08:30,000
posterior scores and one important thing

209
00:08:30,000 --> 00:08:31,740
you're looking at here is like you don't

210
00:08:31,740 --> 00:08:33,539
actually need to use the same thing as a

211
00:08:33,539 --> 00:08:35,458
the Target Model is training

212
00:08:35,458 --> 00:08:37,740
for example you can use a sightseer it's

213
00:08:37,740 --> 00:08:40,559
a citation graph it can actually improve

214
00:08:40,559 --> 00:08:43,140
the link re-identification from the

215
00:08:43,140 --> 00:08:45,720
protein data set

216
00:08:45,720 --> 00:08:47,640
from there

217
00:08:47,640 --> 00:08:49,980
we just switch the gear

218
00:08:49,980 --> 00:08:52,620
we talk about the posterior scores what

219
00:08:52,620 --> 00:08:55,260
if the attackers actually get the

220
00:08:55,260 --> 00:08:58,320
graphing values from your environment

221
00:08:58,320 --> 00:09:00,480
here I put these two together it'll be

222
00:09:00,480 --> 00:09:03,660
easier to see the values or the

223
00:09:03,660 --> 00:09:05,580
consequence of these two attacks

224
00:09:05,580 --> 00:09:07,560
together the first one is property

225
00:09:07,560 --> 00:09:09,420
influence attack

226
00:09:09,420 --> 00:09:11,580
so basically the attacker can actually

227
00:09:11,580 --> 00:09:15,360
infer the basic graph properties from a

228
00:09:15,360 --> 00:09:16,800
graph embedding

229
00:09:16,800 --> 00:09:18,959
the second one is they can actually

230
00:09:18,959 --> 00:09:22,320
infer if a certain software application

231
00:09:22,320 --> 00:09:25,620
a graph violates graph embedding

232
00:09:25,620 --> 00:09:28,200
I started with a

233
00:09:28,200 --> 00:09:30,420
this one just a quick recap graph

234
00:09:30,420 --> 00:09:33,060
embedding just bear in mind the entire

235
00:09:33,060 --> 00:09:35,519
graph is represented by a single Vector

236
00:09:35,519 --> 00:09:38,160
just a quick recap this before we move

237
00:09:38,160 --> 00:09:40,080
forward

238
00:09:40,080 --> 00:09:43,260
and here's a scenario

239
00:09:43,260 --> 00:09:45,959
we frame the graphing neural network

240
00:09:45,959 --> 00:09:48,959
models task is graph classification

241
00:09:48,959 --> 00:09:52,440
and attacker capabilities first they

242
00:09:52,440 --> 00:09:54,600
breach your database and get the graph

243
00:09:54,600 --> 00:09:57,540
embeddings second they can query the

244
00:09:57,540 --> 00:09:59,700
graph new network model so this is a

245
00:09:59,700 --> 00:10:02,519
different between the property inverse

246
00:10:02,519 --> 00:10:06,240
attack and Link real identity attack

247
00:10:06,240 --> 00:10:09,480
and just a big background it's like for

248
00:10:09,480 --> 00:10:11,399
the you have this private graphs

249
00:10:11,399 --> 00:10:13,920
database you pump them into a graph new

250
00:10:13,920 --> 00:10:17,160
network and you get the graph embeddings

251
00:10:17,160 --> 00:10:18,720
for the graphing value you don't

252
00:10:18,720 --> 00:10:20,220
necessarily need to do that every time

253
00:10:20,220 --> 00:10:22,620
unless you have a new graph new network

254
00:10:22,620 --> 00:10:25,019
model so this is pretty much like a

255
00:10:25,019 --> 00:10:27,779
natural process to do that only once and

256
00:10:27,779 --> 00:10:30,720
store in the database

257
00:10:30,720 --> 00:10:32,940
upon the attacker actually breach the

258
00:10:32,940 --> 00:10:33,779
database

259
00:10:33,779 --> 00:10:35,519
what can they do right because you will

260
00:10:35,519 --> 00:10:37,320
think that they are just vectors the

261
00:10:37,320 --> 00:10:40,320
property won't be that much harm

262
00:10:40,320 --> 00:10:42,660
and the first one they can do is to

263
00:10:42,660 --> 00:10:45,540
infer from this Vector that this is

264
00:10:45,540 --> 00:10:47,940
actually a graph with approximately four

265
00:10:47,940 --> 00:10:50,160
notes just for example

266
00:10:50,160 --> 00:10:53,220
how do you achieve this goal

267
00:10:53,220 --> 00:10:55,200
first the attackers they have to have

268
00:10:55,200 --> 00:10:57,959
their own auxiliary graphs if we firm

269
00:10:57,959 --> 00:10:59,459
that into the molecular graph

270
00:10:59,459 --> 00:11:01,620
environment right suppose you do the

271
00:11:01,620 --> 00:11:04,680
molecular toxicity prediction it's easy

272
00:11:04,680 --> 00:11:07,079
for them to obtain a

273
00:11:07,079 --> 00:11:10,980
set of this auxiliary molecular graphs

274
00:11:10,980 --> 00:11:13,380
which is a curry the graph new network

275
00:11:13,380 --> 00:11:14,279
model

276
00:11:14,279 --> 00:11:16,800
and get a response like the graph

277
00:11:16,800 --> 00:11:18,060
embeddings

278
00:11:18,060 --> 00:11:20,459
so from there on they will build the

279
00:11:20,459 --> 00:11:22,800
attack model locally after stress they

280
00:11:22,800 --> 00:11:24,959
do that take one stick at the graph

281
00:11:24,959 --> 00:11:26,820
embeddings there is no further

282
00:11:26,820 --> 00:11:29,940
interaction with the Target Model

283
00:11:29,940 --> 00:11:32,519
let's just build a MLP model literally

284
00:11:32,519 --> 00:11:35,100
like the attack model that you can use

285
00:11:35,100 --> 00:11:36,000
the

286
00:11:36,000 --> 00:11:38,220
estimated

287
00:11:38,220 --> 00:11:40,680
number of nodes with the grand choose

288
00:11:40,680 --> 00:11:42,240
because they've already controlled the

289
00:11:42,240 --> 00:11:44,100
auxiliary graph so for example they

290
00:11:44,100 --> 00:11:45,600
already know that the first auxiliary

291
00:11:45,600 --> 00:11:47,880
graph has

292
00:11:47,880 --> 00:11:49,920
four nodes and the second one actually

293
00:11:49,920 --> 00:11:51,899
have five nodes so they put into the

294
00:11:51,899 --> 00:11:54,660
different buckets they'll help them to

295
00:11:54,660 --> 00:11:58,500
roughly estimates the size of the graph

296
00:11:58,500 --> 00:12:01,500
and upon doing that the trender attack

297
00:12:01,500 --> 00:12:03,899
model they just pump the graphene

298
00:12:03,899 --> 00:12:05,640
variants they bridged into this attack

299
00:12:05,640 --> 00:12:08,940
model they can successfully estimate

300
00:12:08,940 --> 00:12:12,180
the number of nodes from this graph

301
00:12:12,180 --> 00:12:14,640
and the performance wise

302
00:12:14,640 --> 00:12:18,600
it is okay ish we use five publicly used

303
00:12:18,600 --> 00:12:20,640
dependent data set

304
00:12:20,640 --> 00:12:22,620
for example if we take the enzymes for

305
00:12:22,620 --> 00:12:24,899
example the very first row the second

306
00:12:24,899 --> 00:12:28,200
figure you can see that the attacker if

307
00:12:28,200 --> 00:12:31,380
the further the fangular fun granularity

308
00:12:31,380 --> 00:12:33,540
information cannot be inferred

309
00:12:33,540 --> 00:12:36,300
but they can actually infer a reasonably

310
00:12:36,300 --> 00:12:40,680
like rough size of this graph

311
00:12:40,680 --> 00:12:43,800
but it doesn't add much value to the

312
00:12:43,800 --> 00:12:46,019
attackers so here's a graph I estimated

313
00:12:46,019 --> 00:12:48,240
is actually there are four nodes

314
00:12:48,240 --> 00:12:50,519
there's not much I can get

315
00:12:50,519 --> 00:12:54,180
however there is one further attack we

316
00:12:54,180 --> 00:12:56,279
talked about is the subgraph inference

317
00:12:56,279 --> 00:12:58,920
attack the attacker can infer if this

318
00:12:58,920 --> 00:13:01,800
graph contains a specific subgraph for

319
00:13:01,800 --> 00:13:04,200
example here a triangle

320
00:13:04,200 --> 00:13:07,260
recall that we can estimate the size of

321
00:13:07,260 --> 00:13:08,639
the graph

322
00:13:08,639 --> 00:13:12,360
together it will further reduce the

323
00:13:12,360 --> 00:13:14,700
search space of the attacker to

324
00:13:14,700 --> 00:13:16,440
reconstruct your graph

325
00:13:16,440 --> 00:13:18,899
if we further frame that into the

326
00:13:18,899 --> 00:13:20,940
molecular graph

327
00:13:20,940 --> 00:13:22,200
concept

328
00:13:22,200 --> 00:13:24,600
it's like if you have this a million

329
00:13:24,600 --> 00:13:25,560
dollar

330
00:13:25,560 --> 00:13:28,139
molecular graph right

331
00:13:28,139 --> 00:13:30,360
and the attacker just get this embedding

332
00:13:30,360 --> 00:13:32,279
they can actually just infer if they

333
00:13:32,279 --> 00:13:35,459
have a specific subgraph in this

334
00:13:35,459 --> 00:13:38,880
molecular graph then by estimating the

335
00:13:38,880 --> 00:13:40,860
size of the graph they can gradually

336
00:13:40,860 --> 00:13:43,079
just reduce their search size

337
00:13:43,079 --> 00:13:45,899
to replicate your molecular's graph

338
00:13:45,899 --> 00:13:47,220
right

339
00:13:47,220 --> 00:13:48,660
that's

340
00:13:48,660 --> 00:13:51,420
the impact of this attack

341
00:13:51,420 --> 00:13:53,040
how do they do that

342
00:13:53,040 --> 00:13:55,079
but the same thing the attackers still

343
00:13:55,079 --> 00:13:57,200
have to have have the auxiliary graphs

344
00:13:57,200 --> 00:14:00,839
they talk to the query the remote graph

345
00:14:00,839 --> 00:14:03,060
neural network model and getting the

346
00:14:03,060 --> 00:14:04,860
graphing values out

347
00:14:04,860 --> 00:14:07,320
the special treatment they have to do is

348
00:14:07,320 --> 00:14:10,200
have to build a local model and this

349
00:14:10,200 --> 00:14:12,779
local model the only functionality is to

350
00:14:12,779 --> 00:14:15,060
generate the subgraph embeddings you are

351
00:14:15,060 --> 00:14:17,940
interested ways right of stress this is

352
00:14:17,940 --> 00:14:19,560
actually a local model

353
00:14:19,560 --> 00:14:22,200
and then the combine the graph

354
00:14:22,200 --> 00:14:24,600
embeddings the queried with this

355
00:14:24,600 --> 00:14:26,399
subgraph embeddings

356
00:14:26,399 --> 00:14:28,800
and they can generate the negative pair

357
00:14:28,800 --> 00:14:30,959
because they know that this triangle

358
00:14:30,959 --> 00:14:32,760
does not exist in the auxiliary graph

359
00:14:32,760 --> 00:14:34,320
the top one

360
00:14:34,320 --> 00:14:36,300
and also they can generate the positive

361
00:14:36,300 --> 00:14:37,860
queries because they know that the

362
00:14:37,860 --> 00:14:40,019
triangle exists in the auxiliary graph

363
00:14:40,019 --> 00:14:43,500
number two and so on so forth once they

364
00:14:43,500 --> 00:14:45,300
do that they can just build the amp

365
00:14:45,300 --> 00:14:47,339
model literally just converting this one

366
00:14:47,339 --> 00:14:50,820
into a binary classification problem

367
00:14:50,820 --> 00:14:53,699
same thing like once they get the graph

368
00:14:53,699 --> 00:14:55,980
embeddings from your database they can

369
00:14:55,980 --> 00:14:58,260
start in getting the subgraph embedding

370
00:14:58,260 --> 00:15:00,720
combine them together pumping to the

371
00:15:00,720 --> 00:15:02,820
attack model and give you estimation

372
00:15:02,820 --> 00:15:05,399
whether this embedding contains a

373
00:15:05,399 --> 00:15:08,399
triangle or not

374
00:15:08,399 --> 00:15:10,980
our evaluation shows that

375
00:15:10,980 --> 00:15:13,680
the best way to combine these two things

376
00:15:13,680 --> 00:15:16,019
together is to use the graph embedding

377
00:15:16,019 --> 00:15:18,180
difference like using the difference

378
00:15:18,180 --> 00:15:20,040
between graph embeddings and subgraph

379
00:15:20,040 --> 00:15:22,740
embeddings to train the attack model the

380
00:15:22,740 --> 00:15:25,560
performance look at the old code or

381
00:15:25,560 --> 00:15:28,220
score his property between

382
00:15:28,220 --> 00:15:32,160
0.6 to 0.85 or something like that but

383
00:15:32,160 --> 00:15:33,720
it's reasonably

384
00:15:33,720 --> 00:15:36,740
reasonably good

385
00:15:37,139 --> 00:15:40,019
if we take just switch the the Brick a

386
00:15:40,019 --> 00:15:41,880
bit we look at the

387
00:15:41,880 --> 00:15:44,760
SE attacks we already covered

388
00:15:44,760 --> 00:15:46,500
basically the

389
00:15:46,500 --> 00:15:48,600
the basics of the foundation is like the

390
00:15:48,600 --> 00:15:49,800
attacker can actually breach your

391
00:15:49,800 --> 00:15:50,820
database

392
00:15:50,820 --> 00:15:52,019
right

393
00:15:52,019 --> 00:15:55,860
if you secure your database all these

394
00:15:55,860 --> 00:15:57,600
things that you store it look storing

395
00:15:57,600 --> 00:15:59,519
your environment you can pretty much

396
00:15:59,519 --> 00:16:03,000
prevent these two attacks from happening

397
00:16:03,000 --> 00:16:04,500
right because they don't have the

398
00:16:04,500 --> 00:16:06,180
embeddings they don't have the posterior

399
00:16:06,180 --> 00:16:08,579
scores they cannot carry out

400
00:16:08,579 --> 00:16:10,500
these attacks

401
00:16:10,500 --> 00:16:13,440
so here it comes the takeaway part one

402
00:16:13,440 --> 00:16:16,920
it's securely infrastructure and also at

403
00:16:16,920 --> 00:16:19,139
the same time audit your graph neural

404
00:16:19,139 --> 00:16:21,360
network-based machine learning pipeline

405
00:16:21,360 --> 00:16:23,339
you may have heard of this

406
00:16:23,339 --> 00:16:25,560
recommendations but the machine learning

407
00:16:25,560 --> 00:16:27,660
model you have don't take a cover layer

408
00:16:27,660 --> 00:16:29,579
attitude towards this graph neonative

409
00:16:29,579 --> 00:16:30,540
model

410
00:16:30,540 --> 00:16:33,779
their output has meaningful information

411
00:16:33,779 --> 00:16:38,040
inside so they're not just numbers

412
00:16:38,040 --> 00:16:41,220
yeah what's next you secure your

413
00:16:41,220 --> 00:16:43,320
database you prevent the Linker

414
00:16:43,320 --> 00:16:45,240
identification attack property inference

415
00:16:45,240 --> 00:16:47,699
attack subgraphy inverse attack

416
00:16:47,699 --> 00:16:49,920
what can they do so along the pipeline

417
00:16:49,920 --> 00:16:52,680
the model itself

418
00:16:52,680 --> 00:16:54,480
you spend the money to connect your data

419
00:16:54,480 --> 00:16:56,519
you spend the money to build the growth

420
00:16:56,519 --> 00:16:58,199
new network model

421
00:16:58,199 --> 00:17:00,120
under the model itself is really

422
00:17:00,120 --> 00:17:02,160
valuable right

423
00:17:02,160 --> 00:17:04,260
normally you just open up this model and

424
00:17:04,260 --> 00:17:05,939
serve the customers

425
00:17:05,939 --> 00:17:08,520
that's probably you're gonna do

426
00:17:08,520 --> 00:17:10,199
that's what we're going to talk about

427
00:17:10,199 --> 00:17:12,419
with the model extract extraction attack

428
00:17:12,419 --> 00:17:15,179
is the attacker is going to physically

429
00:17:15,179 --> 00:17:17,359
replicate the model's functionality

430
00:17:17,359 --> 00:17:19,919
remotely and they don't want to bridge

431
00:17:19,919 --> 00:17:22,500
your security boundary as well

432
00:17:22,500 --> 00:17:25,079
let's talk about the details

433
00:17:25,079 --> 00:17:27,480
so you have this model you build it you

434
00:17:27,480 --> 00:17:30,299
turn it and you offer the response to

435
00:17:30,299 --> 00:17:32,040
the customers

436
00:17:32,040 --> 00:17:34,980
and you secure your infrastructure you

437
00:17:34,980 --> 00:17:37,919
take all advice we just mentioned

438
00:17:37,919 --> 00:17:40,440
and you open up to the customer you

439
00:17:40,440 --> 00:17:43,320
provide a secure API so the customer can

440
00:17:43,320 --> 00:17:45,179
query the Cooper neural network model

441
00:17:45,179 --> 00:17:48,360
and get a response from the model and

442
00:17:48,360 --> 00:17:50,400
build their Downstream applications

443
00:17:50,400 --> 00:17:52,620
everything is fine

444
00:17:52,620 --> 00:17:55,440
however if you look at from the attacker

445
00:17:55,440 --> 00:17:56,460
perspective

446
00:17:56,460 --> 00:17:58,740
they can pretend to be a customer they

447
00:17:58,740 --> 00:18:01,260
pay for your subscription the steel goes

448
00:18:01,260 --> 00:18:03,660
to the secure API there is nothing you

449
00:18:03,660 --> 00:18:05,039
can detect here because they're

450
00:18:05,039 --> 00:18:06,059
customers

451
00:18:06,059 --> 00:18:09,240
their goal is to get the response and

452
00:18:09,240 --> 00:18:11,820
response replicate the functionality of

453
00:18:11,820 --> 00:18:13,980
your model

454
00:18:13,980 --> 00:18:15,600
and the Hope process work like this

455
00:18:15,600 --> 00:18:18,539
don't be scared by this workflow I will

456
00:18:18,539 --> 00:18:21,240
explain to them one by one I will start

457
00:18:21,240 --> 00:18:23,280
with learning the discrete graph

458
00:18:23,280 --> 00:18:25,620
structure

459
00:18:25,620 --> 00:18:27,840
it is pretty straightforward if the

460
00:18:27,840 --> 00:18:29,940
attackers already have the graph they

461
00:18:29,940 --> 00:18:32,100
can just do the query to the Target

462
00:18:32,100 --> 00:18:33,000
Model

463
00:18:33,000 --> 00:18:35,400
then you can just get the response

464
00:18:35,400 --> 00:18:37,200
but potentially

465
00:18:37,200 --> 00:18:39,000
they may actually not have the growth

466
00:18:39,000 --> 00:18:40,799
structure suppose that it only has the

467
00:18:40,799 --> 00:18:42,960
user profile but they don't have the

468
00:18:42,960 --> 00:18:44,880
connection between the users

469
00:18:44,880 --> 00:18:47,820
what do they have to do is to build

470
00:18:47,820 --> 00:18:50,880
a graph I mean some structures there

471
00:18:50,880 --> 00:18:54,299
and to query the Target Model

472
00:18:54,299 --> 00:18:57,299
we use the idgo framework

473
00:18:57,299 --> 00:19:00,000
to learn the discrete graph structure

474
00:19:00,000 --> 00:19:02,280
I will not go into the details you have

475
00:19:02,280 --> 00:19:04,919
the reference and in the worst case if

476
00:19:04,919 --> 00:19:06,480
you don't have this framework in your

477
00:19:06,480 --> 00:19:08,880
system the attacker can actually just

478
00:19:08,880 --> 00:19:12,059
use the KN algorithm to have a bare

479
00:19:12,059 --> 00:19:15,660
minimum bare minimum structure and query

480
00:19:15,660 --> 00:19:17,760
the Target Model

481
00:19:17,760 --> 00:19:20,220
that's the step one they just have to

482
00:19:20,220 --> 00:19:22,679
build a graph somewhere from the data

483
00:19:22,679 --> 00:19:24,539
that they have

484
00:19:24,539 --> 00:19:26,220
upon they actually have the graph

485
00:19:26,220 --> 00:19:27,720
structure

486
00:19:27,720 --> 00:19:29,880
they will have to make the full use of

487
00:19:29,880 --> 00:19:33,480
the response from the Target Model we we

488
00:19:33,480 --> 00:19:35,700
actually talk about three scenarios the

489
00:19:35,700 --> 00:19:37,860
Target Model can return loading values

490
00:19:37,860 --> 00:19:40,320
they can use returning the posterior

491
00:19:40,320 --> 00:19:42,419
scores or they can just return the

492
00:19:42,419 --> 00:19:44,640
Disney projection scores I mean Disney

493
00:19:44,640 --> 00:19:47,960
is a popular data visualization

494
00:19:47,960 --> 00:19:50,460
framework they just projected the high

495
00:19:50,460 --> 00:19:53,760
dimension data into three or d three 3D

496
00:19:53,760 --> 00:19:56,820
or 2D space you can just visualize them

497
00:19:56,820 --> 00:19:58,700
easily

498
00:19:58,700 --> 00:20:01,080
how do they do that

499
00:20:01,080 --> 00:20:03,900
back to the query graph they just pump

500
00:20:03,900 --> 00:20:07,020
this choreograph to the Target Model

501
00:20:07,020 --> 00:20:08,880
and the Target Model gonna send the

502
00:20:08,880 --> 00:20:10,080
response back

503
00:20:10,080 --> 00:20:12,240
and record that what we have talked

504
00:20:12,240 --> 00:20:15,539
about before is they're gonna return you

505
00:20:15,539 --> 00:20:17,160
the vectors right regardless this

506
00:20:17,160 --> 00:20:19,440
embedding or prediction or twisting

507
00:20:19,440 --> 00:20:21,179
projection they're just

508
00:20:21,179 --> 00:20:22,860
float number

509
00:20:22,860 --> 00:20:25,919
is you map them into the euclidean space

510
00:20:25,919 --> 00:20:29,340
probably something look like this

511
00:20:29,340 --> 00:20:32,220
but at the same time the same curly

512
00:20:32,220 --> 00:20:35,220
graph going to be pumping to the type of

513
00:20:35,220 --> 00:20:38,039
surrogate model and they will get

514
00:20:38,039 --> 00:20:40,200
the response from the surrogate model as

515
00:20:40,200 --> 00:20:42,120
well they may not

516
00:20:42,120 --> 00:20:44,039
let's say they're not they're not

517
00:20:44,039 --> 00:20:46,559
matching each other at the moment the

518
00:20:46,559 --> 00:20:49,740
attackers go the first goal is to make

519
00:20:49,740 --> 00:20:52,679
sure that they use this first loss

520
00:20:52,679 --> 00:20:56,160
function to move the triangle close to

521
00:20:56,160 --> 00:20:57,900
the squares

522
00:20:57,900 --> 00:21:00,840
the Foundation of this

523
00:21:00,840 --> 00:21:03,780
loss function is to maintain the similar

524
00:21:03,780 --> 00:21:06,299
spatial connectivity in the euclidian

525
00:21:06,299 --> 00:21:09,059
space between the surrogator model and

526
00:21:09,059 --> 00:21:11,580
the Target Model

527
00:21:11,580 --> 00:21:14,100
once they do that

528
00:21:14,100 --> 00:21:16,440
the second goal they want to achieve is

529
00:21:16,440 --> 00:21:18,660
a classification because we frame that

530
00:21:18,660 --> 00:21:20,460
this attack is in the load

531
00:21:20,460 --> 00:21:22,980
classification task

532
00:21:22,980 --> 00:21:25,500
suppose that these two nodes they have

533
00:21:25,500 --> 00:21:27,780
different classes and from the Target

534
00:21:27,780 --> 00:21:29,820
Model perspective they have different

535
00:21:29,820 --> 00:21:32,460
decision boundaries the attackers just

536
00:21:32,460 --> 00:21:34,200
need to make sure that these triangles

537
00:21:34,200 --> 00:21:37,799
they are put into the same boundary

538
00:21:37,799 --> 00:21:40,799
with the same classes

539
00:21:40,799 --> 00:21:43,500
that's why we use a cross entropy loss

540
00:21:43,500 --> 00:21:47,400
as the second step to push this to make

541
00:21:47,400 --> 00:21:49,380
sure that the surrogate model going to

542
00:21:49,380 --> 00:21:51,360
make the same decision as the Target

543
00:21:51,360 --> 00:21:53,100
Model does

544
00:21:53,100 --> 00:21:55,580
right

545
00:21:56,280 --> 00:21:59,520
now talking about the results

546
00:21:59,520 --> 00:22:02,880
so the results is quite fascinating is

547
00:22:02,880 --> 00:22:05,340
the first thing is like

548
00:22:05,340 --> 00:22:08,280
the attacker they can conduct the attack

549
00:22:08,280 --> 00:22:10,140
with a low in the Target models

550
00:22:10,140 --> 00:22:12,600
architecture all they need to know is

551
00:22:12,600 --> 00:22:15,720
that the Target Model is using the graph

552
00:22:15,720 --> 00:22:17,580
neural network models

553
00:22:17,580 --> 00:22:19,559
all right so they can just have

554
00:22:19,559 --> 00:22:21,000
different

555
00:22:21,000 --> 00:22:22,919
surrogate models such as graph

556
00:22:22,919 --> 00:22:24,960
convolution Network or they can use

557
00:22:24,960 --> 00:22:28,320
graph isomorphism Network as long as the

558
00:22:28,320 --> 00:22:30,000
project

559
00:22:30,000 --> 00:22:31,620
the

560
00:22:31,620 --> 00:22:34,140
I mean just mimicking the behavior of

561
00:22:34,140 --> 00:22:36,299
the Target Model so everything's going

562
00:22:36,299 --> 00:22:38,340
to be the triangle and the squares

563
00:22:38,340 --> 00:22:40,320
they're going to be pushed together

564
00:22:40,320 --> 00:22:43,320
all right so that's the the call Core

565
00:22:43,320 --> 00:22:45,059
goal of the attacker

566
00:22:45,059 --> 00:22:48,900
and the evaluation results shows that

567
00:22:48,900 --> 00:22:51,360
the attacker can only use about three

568
00:22:51,360 --> 00:22:52,380
percent

569
00:22:52,380 --> 00:22:54,780
of the target model's training data like

570
00:22:54,780 --> 00:22:57,480
so for example if you use

571
00:22:57,480 --> 00:22:59,820
100k

572
00:22:59,820 --> 00:23:01,679
so I mean the size of the training data

573
00:23:01,679 --> 00:23:04,080
set is 100k nodes

574
00:23:04,080 --> 00:23:06,539
the attacker only you need to use a 3K

575
00:23:06,539 --> 00:23:10,020
queries to replicate the performance of

576
00:23:10,020 --> 00:23:12,480
your target I mean of your model

577
00:23:12,480 --> 00:23:14,520
our evaluation shows that here you can

578
00:23:14,520 --> 00:23:17,039
see that suppose that the Target Model

579
00:23:17,039 --> 00:23:19,559
is built by graph Sage

580
00:23:19,559 --> 00:23:21,960
and the attacker actually use the Gin

581
00:23:21,960 --> 00:23:25,260
which is graph isomorphism Network

582
00:23:25,260 --> 00:23:27,840
to replicate your functionality just

583
00:23:27,840 --> 00:23:30,059
like about two percent difference in

584
00:23:30,059 --> 00:23:33,980
terms of the prediction accuracy

585
00:23:34,380 --> 00:23:37,679
the second thing that we find out is a

586
00:23:37,679 --> 00:23:39,840
two-dimension tissue projection can be

587
00:23:39,840 --> 00:23:41,940
the new attack surface

588
00:23:41,940 --> 00:23:44,340
this is pretty scary because the Disney

589
00:23:44,340 --> 00:23:47,159
projection we test is a two-dimensional

590
00:23:47,159 --> 00:23:49,260
one that means one node will be

591
00:23:49,260 --> 00:23:50,760
represented by

592
00:23:50,760 --> 00:23:52,740
two coordinates right you just project

593
00:23:52,740 --> 00:23:55,620
that like the square or triangle

594
00:23:55,620 --> 00:23:57,539
it has better it has very minimum

595
00:23:57,539 --> 00:23:59,760
information in this

596
00:23:59,760 --> 00:24:03,179
vectors I mean just as we projected

597
00:24:03,179 --> 00:24:05,100
but it's not the case

598
00:24:05,100 --> 00:24:08,880
we evaluated that we showed that yes

599
00:24:08,880 --> 00:24:11,520
there is a performance job because you

600
00:24:11,520 --> 00:24:14,400
only have the node is represented by two

601
00:24:14,400 --> 00:24:17,760
float numbers but still the attacker can

602
00:24:17,760 --> 00:24:19,620
actually replicate the functionality

603
00:24:19,620 --> 00:24:22,500
with reasonably good performance so for

604
00:24:22,500 --> 00:24:24,720
example if you look at the Target Model

605
00:24:24,720 --> 00:24:27,600
as git the graph attention

606
00:24:27,600 --> 00:24:31,140
Network and the surrogate model is Gen

607
00:24:31,140 --> 00:24:32,220
again

608
00:24:32,220 --> 00:24:35,159
the difference is about 40 percent

609
00:24:35,159 --> 00:24:38,760
right it is a big job but if you look at

610
00:24:38,760 --> 00:24:42,000
the the Target Model as a gene and the

611
00:24:42,000 --> 00:24:44,340
Target Model as graph Sage the

612
00:24:44,340 --> 00:24:47,220
performance drop is only seven percent

613
00:24:47,220 --> 00:24:49,919
that means that attacker can really

614
00:24:49,919 --> 00:24:52,020
replicate certain functionalities out of

615
00:24:52,020 --> 00:24:53,220
your model

616
00:24:53,220 --> 00:24:55,500
that's pretty pretty much the

617
00:24:55,500 --> 00:24:58,980
information I want to pass on here

618
00:24:58,980 --> 00:25:02,100
what can we do for the defense

619
00:25:02,100 --> 00:25:05,880
the defense is a tricky one

620
00:25:05,880 --> 00:25:08,700
the usual approach is to add

621
00:25:08,700 --> 00:25:11,580
perturbation like add some random noise

622
00:25:11,580 --> 00:25:14,220
to your response so for example here if

623
00:25:14,220 --> 00:25:15,659
you use a

624
00:25:15,659 --> 00:25:18,780
gaussian noise right so these

625
00:25:18,780 --> 00:25:21,600
squares are going to be randomly pushed

626
00:25:21,600 --> 00:25:24,600
somewhere else in the I mean rather than

627
00:25:24,600 --> 00:25:26,159
the original position that we push

628
00:25:26,159 --> 00:25:27,600
somewhere else

629
00:25:27,600 --> 00:25:29,700
however if you look at the first loss

630
00:25:29,700 --> 00:25:32,460
function the functionality the core

631
00:25:32,460 --> 00:25:34,860
functionality of this loss is to make

632
00:25:34,860 --> 00:25:38,400
sure that whatever you have

633
00:25:38,400 --> 00:25:41,700
project into the euclidean space will be

634
00:25:41,700 --> 00:25:45,000
tracked by the attacker model

635
00:25:45,000 --> 00:25:48,720
so in this case you won't be able to

636
00:25:48,720 --> 00:25:51,299
staying away from just just by

637
00:25:51,299 --> 00:25:54,659
perturbation you won't be able to

638
00:25:54,659 --> 00:25:58,320
like say reduce the attack

639
00:25:58,320 --> 00:26:01,559
our evaluation shows that

640
00:26:01,559 --> 00:26:03,840
the teeth need let's say take these two

641
00:26:03,840 --> 00:26:05,880
figures for example both tissue and

642
00:26:05,880 --> 00:26:07,860
embedding embedding contains the most

643
00:26:07,860 --> 00:26:10,200
information and Tiffany contains List

644
00:26:10,200 --> 00:26:12,960
information in terms of the

645
00:26:12,960 --> 00:26:16,320
Target model's response and the Delta is

646
00:26:16,320 --> 00:26:17,940
a standard deviation of the gaussian

647
00:26:17,940 --> 00:26:21,120
Noise We vary that noise and it shows

648
00:26:21,120 --> 00:26:22,440
that

649
00:26:22,440 --> 00:26:24,600
the attacker can still pretty much just

650
00:26:24,600 --> 00:26:27,840
like track your target model

651
00:26:27,840 --> 00:26:30,360
and still return a reasonable

652
00:26:30,360 --> 00:26:33,000
performance

653
00:26:33,000 --> 00:26:35,580
so I mean we put this one as a future

654
00:26:35,580 --> 00:26:38,460
research direction to see how we can

655
00:26:38,460 --> 00:26:41,400
figure out the way like without reducing

656
00:26:41,400 --> 00:26:44,100
the functionality of your model and at

657
00:26:44,100 --> 00:26:46,980
the same time the attacker cannot

658
00:26:46,980 --> 00:26:50,039
replicate the functionality of your your

659
00:26:50,039 --> 00:26:53,299
Target Model right

660
00:26:53,400 --> 00:26:56,159
so here comes the takeaway part two

661
00:26:56,159 --> 00:26:59,279
the first thing is monitor your model

662
00:26:59,279 --> 00:27:02,039
logs for anomalies the one thing that

663
00:27:02,039 --> 00:27:04,860
you can look into is to understand the

664
00:27:04,860 --> 00:27:07,500
customer if they actually send some

665
00:27:07,500 --> 00:27:09,900
strange queries to your system because

666
00:27:09,900 --> 00:27:11,760
you will see if you're a legit customer

667
00:27:11,760 --> 00:27:14,700
maybe at the beginning they will send

668
00:27:14,700 --> 00:27:16,980
you the graphs and the predictions May

669
00:27:16,980 --> 00:27:18,600
fluctuate a little bit

670
00:27:18,600 --> 00:27:21,480
but as a mature customer

671
00:27:21,480 --> 00:27:23,940
if the study needs send you some

672
00:27:23,940 --> 00:27:25,740
information and you notice that the

673
00:27:25,740 --> 00:27:29,460
performance drops for no reason and for

674
00:27:29,460 --> 00:27:31,020
the other customers the performance

675
00:27:31,020 --> 00:27:34,200
still pretty good that means something

676
00:27:34,200 --> 00:27:36,419
that something is off you probably have

677
00:27:36,419 --> 00:27:38,279
to keep an eye on your

678
00:27:38,279 --> 00:27:40,860
logs for that kind of customers figure

679
00:27:40,860 --> 00:27:43,200
out what kind of data they pump into

680
00:27:43,200 --> 00:27:45,179
your system

681
00:27:45,179 --> 00:27:47,700
and the second thing is to evaluate the

682
00:27:47,700 --> 00:27:49,679
security in a privacy posture of your

683
00:27:49,679 --> 00:27:51,720
graph neural network models

684
00:27:51,720 --> 00:27:55,020
personally speaking I would go as far as

685
00:27:55,020 --> 00:27:57,299
pen testing your graphenewal network

686
00:27:57,299 --> 00:27:58,559
models

687
00:27:58,559 --> 00:28:00,900
this is represent a new attack service

688
00:28:00,900 --> 00:28:02,340
like

689
00:28:02,340 --> 00:28:04,260
take this previous example for example

690
00:28:04,260 --> 00:28:05,940
like this mod extraction

691
00:28:05,940 --> 00:28:08,700
you have your secure boundary you have

692
00:28:08,700 --> 00:28:12,240
your secure API everything is by book

693
00:28:12,240 --> 00:28:14,820
secure but still

694
00:28:14,820 --> 00:28:17,460
your model can be replicated by its

695
00:28:17,460 --> 00:28:20,880
attackers that's pretty scary that means

696
00:28:20,880 --> 00:28:23,100
you have to

697
00:28:23,100 --> 00:28:25,020
seriously figure out the different ways

698
00:28:25,020 --> 00:28:26,940
to pen test your

699
00:28:26,940 --> 00:28:29,520
model security posture and understand

700
00:28:29,520 --> 00:28:31,320
what would be the consequence by

701
00:28:31,320 --> 00:28:34,559
exposing your model to the customers

702
00:28:34,559 --> 00:28:37,919
and what kind of defense mechanism you

703
00:28:37,919 --> 00:28:40,980
can apply to the model to make sure that

704
00:28:40,980 --> 00:28:43,140
everything is fine and your

705
00:28:43,140 --> 00:28:45,120
functionalities will not be replicated

706
00:28:45,120 --> 00:28:48,139
by the attackers

707
00:28:48,419 --> 00:28:50,460
I mean to facilitate the the community

708
00:28:50,460 --> 00:28:53,159
we release the code they are all open

709
00:28:53,159 --> 00:28:56,580
sourced you can feel free to to grab the

710
00:28:56,580 --> 00:28:59,760
source code and adapt to your framework

711
00:28:59,760 --> 00:29:02,340
or environment to understand to what

712
00:29:02,340 --> 00:29:05,279
extent your system is exposed to the

713
00:29:05,279 --> 00:29:07,740
different attacks

714
00:29:07,740 --> 00:29:11,039
and for that I conclude my presentation

715
00:29:11,039 --> 00:29:14,720
I'm ready to take questions

716
00:29:31,799 --> 00:29:35,100
the Privacy posture it's pretty hard to

717
00:29:35,100 --> 00:29:38,840
let me just go back to the

718
00:29:40,380 --> 00:29:42,539
to the pipeline here

719
00:29:42,539 --> 00:29:44,820
the Privacy things that you can do the

720
00:29:44,820 --> 00:29:47,460
first thing you mean like talk about

721
00:29:47,460 --> 00:29:49,559
that auditing the

722
00:29:49,559 --> 00:29:52,919
graph new network learning pipeline the

723
00:29:52,919 --> 00:29:54,659
first thing you can do is to make sure

724
00:29:54,659 --> 00:29:56,460
that your training graph is not accessed

725
00:29:56,460 --> 00:29:58,860
by unauthorized the personnel

726
00:29:58,860 --> 00:30:00,720
that's the first thing

727
00:30:00,720 --> 00:30:04,159
the second thing is like

728
00:30:04,500 --> 00:30:06,419
don't expose

729
00:30:06,419 --> 00:30:09,419
the posteriors to unauthorized person as

730
00:30:09,419 --> 00:30:12,059
well so in that case they don't have the

731
00:30:12,059 --> 00:30:14,460
original posterior scores embeddings of

732
00:30:14,460 --> 00:30:16,200
your training data

733
00:30:16,200 --> 00:30:19,200
the key message is like the raw chaining

734
00:30:19,200 --> 00:30:22,679
graph they are private for sure

735
00:30:22,679 --> 00:30:25,679
but the transformed vectors of the

736
00:30:25,679 --> 00:30:28,740
training data is also

737
00:30:28,740 --> 00:30:31,320
but let's say it's still quite sensitive

738
00:30:31,320 --> 00:30:33,299
the private information so you have to

739
00:30:33,299 --> 00:30:36,360
secure both the raw data and the

740
00:30:36,360 --> 00:30:38,279
transform data

741
00:30:38,279 --> 00:30:41,940
please please head to the microphone to

742
00:30:41,940 --> 00:30:44,279
give your questions please it's in the

743
00:30:44,279 --> 00:30:47,779
middle Ohio thank you

744
00:30:56,580 --> 00:30:58,860
can you talk a bit uh more about size

745
00:30:58,860 --> 00:31:02,279
and scale with uh very large models

746
00:31:02,279 --> 00:31:03,899
coming up these days do you think these

747
00:31:03,899 --> 00:31:06,480
kinds of attacks and defenses apply

748
00:31:06,480 --> 00:31:08,940
equally to billion parameter models or

749
00:31:08,940 --> 00:31:11,340
100 billion parameter models

750
00:31:11,340 --> 00:31:14,399
can you repeat your question again

751
00:31:14,399 --> 00:31:16,980
can you talk a bit about the

752
00:31:16,980 --> 00:31:21,120
if this changes with scale so we have

753
00:31:21,120 --> 00:31:24,299
very large parameter models uh flying

754
00:31:24,299 --> 00:31:25,919
around doing cool things in the first

755
00:31:25,919 --> 00:31:28,679
few slides of your presentation

756
00:31:28,679 --> 00:31:30,059
just

757
00:31:30,059 --> 00:31:31,919
uh some of the techniques you talked

758
00:31:31,919 --> 00:31:34,260
about change when you're going Beyond

759
00:31:34,260 --> 00:31:38,039
100K no training sets into much much

760
00:31:38,039 --> 00:31:40,020
larger models

761
00:31:40,020 --> 00:31:42,960
so your question is like if the training

762
00:31:42,960 --> 00:31:45,899
data is big can the function still be

763
00:31:45,899 --> 00:31:48,360
replicated by the queries

764
00:31:48,360 --> 00:31:49,799
yeah

765
00:31:49,799 --> 00:31:52,380
that's a good question I mean

766
00:31:52,380 --> 00:31:54,960
if let us take this functionality for

767
00:31:54,960 --> 00:31:57,419
example if you take the social network

768
00:31:57,419 --> 00:32:00,059
right social network always reaches tons

769
00:32:00,059 --> 00:32:01,380
of minutes

770
00:32:01,380 --> 00:32:03,360
the first thing that

771
00:32:03,360 --> 00:32:04,919
you catch your model going to be quite

772
00:32:04,919 --> 00:32:06,539
complicated

773
00:32:06,539 --> 00:32:09,059
to understand the decision boundary that

774
00:32:09,059 --> 00:32:10,980
probably is easier for me just go down

775
00:32:10,980 --> 00:32:14,059
to the discrete boundary here

776
00:32:15,059 --> 00:32:17,460
just give me one second here so the

777
00:32:17,460 --> 00:32:20,279
design boundary can be complicated I

778
00:32:20,279 --> 00:32:22,260
have to say it is really complex

779
00:32:22,260 --> 00:32:25,020
once in that you can I mean from the

780
00:32:25,020 --> 00:32:28,320
attacker perspective they can pump into

781
00:32:28,320 --> 00:32:30,240
slightly larger

782
00:32:30,240 --> 00:32:33,659
query data to understand to what extent

783
00:32:33,659 --> 00:32:35,940
I mean just for example

784
00:32:35,940 --> 00:32:37,559
in this

785
00:32:37,559 --> 00:32:40,500
euclidean space right you pump into your

786
00:32:40,500 --> 00:32:43,020
query and you can always understand the

787
00:32:43,020 --> 00:32:46,200
same boundaries of your query data right

788
00:32:46,200 --> 00:32:49,020
that is one thing that you can do and

789
00:32:49,020 --> 00:32:52,020
from there you can just fine tune your

790
00:32:52,020 --> 00:32:54,480
queries to a certain perspectives so for

791
00:32:54,480 --> 00:32:56,640
example you vary your load features the

792
00:32:56,640 --> 00:32:58,919
DC in boundary can change or not change

793
00:32:58,919 --> 00:33:01,260
so you'll be under able to understand if

794
00:33:01,260 --> 00:33:03,480
the load features I mean the graph

795
00:33:03,480 --> 00:33:05,580
Universe graph neural network is

796
00:33:05,580 --> 00:33:07,799
sensitive to the node features what is

797
00:33:07,799 --> 00:33:09,059
actually sensitive to the graph

798
00:33:09,059 --> 00:33:10,200
structure

799
00:33:10,200 --> 00:33:12,960
you will be able to understand that and

800
00:33:12,960 --> 00:33:14,940
to answer your question

801
00:33:14,940 --> 00:33:18,360
without exception the attackers they

802
00:33:18,360 --> 00:33:20,399
have to pump into more data to

803
00:33:20,399 --> 00:33:22,620
understand the design boundary if your

804
00:33:22,620 --> 00:33:25,799
data is reached 10 billions

805
00:33:25,799 --> 00:33:28,140
I would say the attacker has to stay

806
00:33:28,140 --> 00:33:30,299
with your customer as your customer for

807
00:33:30,299 --> 00:33:32,760
at least a couple months

808
00:33:32,760 --> 00:33:34,860
to cover up their trades

809
00:33:34,860 --> 00:33:36,360
and hopefully they will be able to

810
00:33:36,360 --> 00:33:39,240
replace your model's functionality but

811
00:33:39,240 --> 00:33:42,200
still it is possible

812
00:33:42,200 --> 00:33:46,200
five minutes five minutes Professor sang

813
00:33:46,200 --> 00:33:49,260
uh you mentioned about three percent of

814
00:33:49,260 --> 00:33:51,360
the size yeah

815
00:33:51,360 --> 00:33:52,980
you think that

816
00:33:52,980 --> 00:33:57,659
uh changes with scale say to like if you

817
00:33:57,659 --> 00:34:00,779
were trying to replicate a billion uh

818
00:34:00,779 --> 00:34:03,419
model on Facebook

819
00:34:03,419 --> 00:34:05,340
for that

820
00:34:05,340 --> 00:34:07,740
we haven't done any large-scale tests

821
00:34:07,740 --> 00:34:09,899
because for our test is reaching about

822
00:34:09,899 --> 00:34:11,879
let's say

823
00:34:11,879 --> 00:34:14,460
20 I mean not 20ish it is probably

824
00:34:14,460 --> 00:34:18,119
between 100K and 20K

825
00:34:18,119 --> 00:34:21,659
we reach that scale to three percent

826
00:34:21,659 --> 00:34:24,960
we envisioned that for graphs there

827
00:34:24,960 --> 00:34:27,599
there is a property called assault

828
00:34:27,599 --> 00:34:30,359
activity in the classic graph Theory

829
00:34:30,359 --> 00:34:32,040
it's like

830
00:34:32,040 --> 00:34:34,679
the nodes that share similar features

831
00:34:34,679 --> 00:34:36,239
they're going to be

832
00:34:36,239 --> 00:34:40,139
close in the graph so in that case maybe

833
00:34:40,139 --> 00:34:43,320
if you use the social network let's say

834
00:34:43,320 --> 00:34:45,119
the size is still big like tens of

835
00:34:45,119 --> 00:34:47,460
minutes but the UTC in boundary can be

836
00:34:47,460 --> 00:34:49,739
quite straightforward because you have a

837
00:34:49,739 --> 00:34:51,418
cluster of data that grouped together so

838
00:34:51,418 --> 00:34:53,699
for example you have people that they

839
00:34:53,699 --> 00:34:55,440
are interested into black hat right

840
00:34:55,440 --> 00:34:56,580
they're probably going to be connected

841
00:34:56,580 --> 00:34:59,880
to each other like a very

842
00:34:59,880 --> 00:35:02,640
close like this complete graph almost

843
00:35:02,640 --> 00:35:05,099
quite dense graph and from the decision

844
00:35:05,099 --> 00:35:07,680
boundary perspective once the map into

845
00:35:07,680 --> 00:35:09,060
the new Canadian space

846
00:35:09,060 --> 00:35:11,099
the nodes are going to be close to each

847
00:35:11,099 --> 00:35:13,859
other like almost a cluster

848
00:35:13,859 --> 00:35:15,720
so in that case your design boundary is

849
00:35:15,720 --> 00:35:17,640
quite straightforward

850
00:35:17,640 --> 00:35:19,800
and the cut the attacker can still use

851
00:35:19,800 --> 00:35:20,839
quite

852
00:35:20,839 --> 00:35:23,880
reasonably less data to query your model

853
00:35:23,880 --> 00:35:28,220
and get the functionality replicated

854
00:35:28,380 --> 00:35:31,619
I mean again we require large skill

855
00:35:31,619 --> 00:35:33,980
tests

856
00:35:34,660 --> 00:35:37,770
[Music]

857
00:35:40,579 --> 00:35:41,610
thank you

858
00:35:41,610 --> 00:35:44,699
[Music]

