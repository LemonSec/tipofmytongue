1
00:00:00,000 --> 00:00:05,990
and you're here for a talk entitled
abusing X LTE for practical attacks

2
00:00:05,990 --> 00:00:23,390
speaker is Fernando Arnoldi Thank You
Think You Black for the invitation my

3
00:00:23,390 --> 00:00:26,279
name is phenomenal goalie and they work
as a security consultant and researcher

4
00:00:26,279 --> 00:00:31,179
for I liked it alot to show you today
how excellent implementations are

5
00:00:31,179 --> 00:00:35,969
vulnerable to multiple practical attacks
for them out of the very first question

6
00:00:35,969 --> 00:00:40,190
there are like to address today will be
this one why are we talking about XSLT

7
00:00:40,190 --> 00:00:45,809
couple of years ago I was working with a
real scientists or co-worker from I

8
00:00:45,809 --> 00:00:51,209
liked it on a penetration test and his
career milestone entity expansion attack

9
00:00:51,210 --> 00:00:56,820
they're pretty common we are here this
year black and we have two presentations

10
00:00:56,820 --> 00:01:01,050
related to those type of availability so
I decided to explore a little bit more

11
00:01:01,050 --> 00:01:09,130
about the topic to learn more about XML
schema house and XSLT who somehow all

12
00:01:09,130 --> 00:01:15,890
these technologies may work together the
objectives of this log is to analyze how

13
00:01:15,890 --> 00:01:22,810
this witness's can be abused like the
idea of having a presentation where you

14
00:01:22,810 --> 00:01:27,860
could have practical things to abuse and
hopefully this will be the case and

15
00:01:27,860 --> 00:01:34,310
you'll see how the different
implementations can be abused so whether

16
00:01:34,310 --> 00:01:39,579
you are reviewing could if you're
looking for security issues from time to

17
00:01:39,579 --> 00:01:46,100
time you may come across 60 still files
like salty files or XML files that are

18
00:01:46,100 --> 00:01:51,780
related to XSLT files which may be
vulnerable or if you're developing XML

19
00:01:51,780 --> 00:01:57,229
XSLT there will be a dry awake Lee meant
for you or eventually if you're trying

20
00:01:57,229 --> 00:02:03,970
to us to the Guinness something that is
using this type of the colleges

21
00:02:03,970 --> 00:02:10,810
the thing about me is his dad processes
are still affected by these flaws and as

22
00:02:10,810 --> 00:02:15,480
I was researching for this review
different programming languages for that

23
00:02:15,480 --> 00:02:21,299
matter that are different books that you
can use when it comes to XSLT

24
00:02:21,300 --> 00:02:26,920
couldn't find valuable information so
today I will be talking about five

25
00:02:26,920 --> 00:02:32,799
issues that hopefully will help you to
make the confidentiality and integrity

26
00:02:32,800 --> 00:02:36,160
of the applications using this
technology little bit less secure if

27
00:02:36,160 --> 00:02:44,490
you're able to get your hands on this
and the good thing is that the all the

28
00:02:44,490 --> 00:02:48,390
flaws I will be talking today that are
there will be exploited on the

29
00:02:48,390 --> 00:02:53,208
implementations these are all these are
how the implementations where created

30
00:02:53,209 --> 00:02:58,540
according to the standard supposedly so
no 12 years will be detecting we're

31
00:02:58,540 --> 00:03:04,480
going to show today so quickly going
through the agenda I will tell you a

32
00:03:04,480 --> 00:03:08,518
little bit how an attack you will be
able to use this how we all get to

33
00:03:08,519 --> 00:03:15,870
identify who's a target and then I will
go through how numbers maybe use either

34
00:03:15,870 --> 00:03:22,190
to steal money or to the integrity of
the information how to run the numbers

35
00:03:22,190 --> 00:03:29,859
may give the application seems secure
they may be predictable I will bypass

36
00:03:29,860 --> 00:03:34,209
the same origin policy on a web browser
using XSLT and finally we'll talk a

37
00:03:34,209 --> 00:03:41,840
little bit about information disclosure
through our messages

38
00:03:41,840 --> 00:03:50,110
so briefly will start saying about what
he does how are going to use it to

39
00:03:50,110 --> 00:03:55,209
attack the implementations and how we
could eventually identify who is our

40
00:03:55,209 --> 00:04:02,400
target here so as I was saying exercise
using language that is was created along

41
00:04:02,400 --> 00:04:07,849
with XML and is commonly used to
transform XML document so receive as an

42
00:04:07,849 --> 00:04:12,069
input an XML document it produces an
output a new document which could be

43
00:04:12,069 --> 00:04:20,519
again an XML file on HTML document when
his was created they thought that ok

44
00:04:20,519 --> 00:04:24,110
will be cool to have the XML data here
and if we have something there

45
00:04:24,110 --> 00:04:31,250
transformed the information contained on
the email a programming language we

46
00:04:31,250 --> 00:04:36,600
could have the alliance to automatically
process the information that is here and

47
00:04:36,600 --> 00:04:42,910
we do not need to do this on services
like so the first person that was

48
00:04:42,910 --> 00:04:48,940
created was successful TV one and it
should be noted vs here didn't mean

49
00:04:48,940 --> 00:04:54,550
different things that it comprises of so
forty here 32 adds more functionality

50
00:04:54,550 --> 00:05:01,150
overview on mp3 does the same of a
V-chip the fans that exercise TV juan

51
00:05:01,150 --> 00:05:05,289
has been the most implemented version of
course this is because it has been

52
00:05:05,289 --> 00:05:10,680
implemented by v2 and v3 Moises arias
and also because it is supported by web

53
00:05:10,680 --> 00:05:14,930
browsers and any technology supported by
web browsers it is while these employees

54
00:05:14,930 --> 00:05:20,539
there are two types of software that was
tested for this matter and that's the

55
00:05:20,539 --> 00:05:27,690
service on processors this will be the
standalone stand-alone processes that

56
00:05:27,690 --> 00:05:31,919
can run from call maligned and you can
execute had a likely to persist on XML

57
00:05:31,919 --> 00:05:37,479
and XSLT file or libraries which can be
used on different programming languages

58
00:05:37,479 --> 00:05:44,750
you can use either by 10 and important
exercise the library for PHP Ruby

59
00:05:44,750 --> 00:05:50,690
whatever and then you have the clients
are processes basically I focused my air

60
00:05:50,690 --> 00:05:54,080
force on the web browsers but you have
all the time

61
00:05:54,080 --> 00:06:03,159
processes available I trouble the latest
versions available and when it counts as

62
00:06:03,159 --> 00:06:07,349
a service on processors there are three
that I will be focusing today there

63
00:06:07,349 --> 00:06:13,310
would be leaving saudi double by no sale
on developing a paci and Saxon developed

64
00:06:13,310 --> 00:06:20,169
by tectonic is the only implementation
is not free

65
00:06:20,169 --> 00:06:25,049
brought all the guys would take more
seriously about XSLT all these

66
00:06:25,050 --> 00:06:29,150
implementations have an unstable number
shown on a library that can be used by

67
00:06:29,150 --> 00:06:34,719
programming languages again from this
implementation probably the most widely

68
00:06:34,719 --> 00:06:38,909
employees leave it too salty because
that's the person is being used for item

69
00:06:38,909 --> 00:06:48,340
PHP Perl Ruby processor as well when it
comes to what brought source or the find

70
00:06:48,340 --> 00:06:57,710
top web browsers I just the latest
version that I could get but let's move

71
00:06:57,710 --> 00:07:04,109
on I'm how an attacker could all these
different plantations through different

72
00:07:04,110 --> 00:07:12,969
factors the first possibility would be
an XML or index HTML document that is

73
00:07:12,969 --> 00:07:20,000
using an XSLT to create a new document
is a common scenario for us or service

74
00:07:20,000 --> 00:07:25,930
processor your writing and come alive
the name of this time along processor an

75
00:07:25,930 --> 00:07:32,879
XML file on an XSLT file and then he
will produce a new document so this is

76
00:07:32,879 --> 00:07:39,310
how I started developing Nexus LG five
years ago I receive an initial document

77
00:07:39,310 --> 00:07:45,479
XML I look for the most common language
to process this document and I hope she

78
00:07:45,479 --> 00:07:49,710
will be an alternative is the fastest
way to produce a new document when

79
00:07:49,710 --> 00:07:57,849
you're having us an input on XML in here
we are feeding the XSLT persistent with

80
00:07:57,849 --> 00:08:04,200
a to harm another approach would be the
XSLT processor will get the XSLT fun

81
00:08:04,200 --> 00:08:10,539
this will be in a scenario where the XML
document refers to an XSLT document on

82
00:08:10,540 --> 00:08:17,380
the other it's rather stylish that is
being stored in this location is a

83
00:08:17,380 --> 00:08:21,090
common thing when you when you're trying
to exploit an external entity expansion

84
00:08:21,090 --> 00:08:27,239
and you're trying to retrieve an Excel
document warning tonal system file to be

85
00:08:27,240 --> 00:08:32,479
read your require an external file that
is being used so here we can say that

86
00:08:32,479 --> 00:08:37,540
persists or grab this fine for me and
then produced a new document just may be

87
00:08:37,539 --> 00:08:43,289
used by web browsers but probably when
you're hurting that web browser and you

88
00:08:43,289 --> 00:08:48,140
want the web browser to be sure that is
going to read the exercise chief are you

89
00:08:48,140 --> 00:08:53,460
better embed the XSLT along with the XML
and you have one unique fog and this is

90
00:08:53,460 --> 00:08:57,400
better because chrome doesn't get the
files directly if you're trying to use

91
00:08:57,400 --> 00:09:02,390
the the second a doctor so this attack
make sure we have the XML the excess of

92
00:09:02,390 --> 00:09:11,790
team to pay lower all together into one
single phone once you know how you're

93
00:09:11,790 --> 00:09:19,420
going to attack the victim you may want
to know who's going to be your target so

94
00:09:19,420 --> 00:09:23,969
this will be an insane area where black
how to approach he's being taken because

95
00:09:23,970 --> 00:09:28,390
you do you're not revealing call you're
just trying to get the information

96
00:09:28,390 --> 00:09:34,510
without a light without knowing what you
have on the other side so the personal

97
00:09:34,510 --> 00:09:43,260
terms he would be to see what all the
XSLT properties available

98
00:09:43,260 --> 00:09:47,340
there are three key properties commonly
used these are the two most common the

99
00:09:47,340 --> 00:09:54,080
version under bender using these sin
taxes for XSLT we can get the person

100
00:09:54,080 --> 00:10:00,760
remembers being used but we can also
rely on JavaScript if you are targeting

101
00:10:00,760 --> 00:10:06,140
to the web browser see will be nonsense
known to use it if we are trying to

102
00:10:06,140 --> 00:10:11,530
receive a little bit more information of
our own victims so beware bras we will

103
00:10:11,530 --> 00:10:15,890
go through the navigator offsets to try
to retrieve the information typically

104
00:10:15,890 --> 00:10:26,880
story in a usurpation so once we get all
the information we may create a summary

105
00:10:26,880 --> 00:10:32,290
of what are the possibilities for our
targets after resection I will show you

106
00:10:32,290 --> 00:10:39,599
a summary disclose which are the
server-side implementations that I

107
00:10:39,600 --> 00:10:45,400
checked which are the client-side
implementations and what is the

108
00:10:45,400 --> 00:10:50,100
information basically that we are able
to get all the areas that we are able to

109
00:10:50,100 --> 00:11:00,090
exploit the first call shows the the
names of the different implementations

110
00:11:00,090 --> 00:11:01,380
we have sailings

111
00:11:01,380 --> 00:11:04,820
super sale and implementation and
implementation

112
00:11:04,820 --> 00:11:11,030
sonic society program that's the
standalone parser for the team's

113
00:11:11,030 --> 00:11:16,850
annotation PHP Python Perl Ruby Safari
open or chrome far from Nissan's

114
00:11:16,850 --> 00:11:25,490
exploder all of them are using GV one
except for four sacks and natively uses

115
00:11:25,490 --> 00:11:32,230
exercise TV too even though supposed
exercise TV wall and defender well the

116
00:11:32,230 --> 00:11:38,570
first two are related to a paci the
third one section is from sex on ago and

117
00:11:38,570 --> 00:11:43,210
didn't you will notice that is a bunch
of leaving for sale team that ago the

118
00:11:43,210 --> 00:11:46,320
bridge from the server-side
implementation to the client-side

119
00:11:46,320 --> 00:11:52,330
implementation does it because it is the
library is being used by both sides of

120
00:11:52,330 --> 00:11:55,170
the different pieces of software

121
00:11:55,170 --> 00:12:03,389
that being said not always the
implementations behave on the very same

122
00:12:03,389 --> 00:12:10,610
way a lot of source speaking of the fun
things how are you going to try to take

123
00:12:10,610 --> 00:12:17,339
advantage of the numbers on the exit
implementations what we're talking about

124
00:12:17,339 --> 00:12:19,269
numbers I'm talking about

125
00:12:19,269 --> 00:12:24,300
compilations floating point numbers into
what you do on any preventive than which

126
00:12:24,300 --> 00:12:30,540
nothing else than that so numbers will
be present always inclined sign on

127
00:12:30,540 --> 00:12:36,490
server-side processors either you're
doing a calculation or you're storing

128
00:12:36,490 --> 00:12:42,149
information you're moving any type of
number you had to consider that the

129
00:12:42,149 --> 00:12:49,769
integrity could be affected the problem
I initially funded with the real numbers

130
00:12:49,769 --> 00:12:55,760
floating point numbers just a common
thing does not you for the computer

131
00:12:55,760 --> 00:13:02,470
security industry that they're my BG
fickle the procession to be except when

132
00:13:02,470 --> 00:13:07,300
you're dealing with very small numbers
the promise that but also how but also

133
00:13:07,300 --> 00:13:11,939
with large number so you have the
problem both sides of the equation here

134
00:13:11,940 --> 00:13:18,459
so it is a little bit confusing when
you're trying to make a simple

135
00:13:18,459 --> 00:13:22,709
calculation a trivial compilation and
that may not work as he expected to be

136
00:13:22,709 --> 00:13:30,310
so I initially tried to make a simple
thing to finding a style shoot well it

137
00:13:30,310 --> 00:13:36,790
will turn to so simple calculation

138
00:13:36,790 --> 00:13:47,170
you can recognize that I think society
because we'll have it will help it may

139
00:13:47,170 --> 00:13:52,260
or may not have the first line where it
says that this is an XML it will have

140
00:13:52,260 --> 00:13:58,330
the style she saying that okay i
moustache you this is the version that

141
00:13:58,330 --> 00:14:05,480
I'm using it may or may not have the all
good that is trying to produce and of

142
00:14:05,480 --> 00:14:11,930
course it will close the tag at the end
just like we would use it on a HTML on

143
00:14:11,930 --> 00:14:22,969
the middle who have that I will try to
do this calculation 0.10% to + see

144
00:14:22,970 --> 00:14:29,840
reporting 1-0 point three the result of
that should be serious the problem is

145
00:14:29,840 --> 00:14:35,520
that programming languages are somehow
unable to fully argue ladies and this is

146
00:14:35,520 --> 00:14:40,780
because they're symbols are not
represented in the same way in binary

147
00:14:40,780 --> 00:14:47,380
notation for example 0.19% rotation is
an international number that is

148
00:14:47,380 --> 00:14:52,439
difficult to be represented so some time
at any given moment you need to put an

149
00:14:52,440 --> 00:14:56,110
end to that whenever you're doing that
you didn't you don't have the exact

150
00:14:56,110 --> 00:15:03,960
number so programming languages what
they do is they run the numbers so this

151
00:15:03,960 --> 00:15:08,650
calculation should round up to number
zero that's the is an area for open

152
00:15:08,650 --> 00:15:15,329
Chrome for the rest all of them will say
it is almost zero it is almost this

153
00:15:15,330 --> 00:15:18,940
number and this goes for all of them

154
00:15:18,940 --> 00:15:29,200
Firefox or Internet Explorer sale and
PHP whatever so the problem is across

155
00:15:29,200 --> 00:15:37,020
all the different implementations here
so you just call I

156
00:15:37,020 --> 00:15:43,040
problem that I saw this to my colleagues
and I say listen look they said to me

157
00:15:43,040 --> 00:15:52,630
ok this is what we're gonna do it ok so
last week I was trying to provide

158
00:15:52,630 --> 00:15:58,400
another example of these so excellent is
good for Paris for parsing XML data but

159
00:15:58,400 --> 00:16:04,819
is not good not good for building on
internal application but this product is

160
00:16:04,820 --> 00:16:07,560
this problem is present in all
programming languages I decided to

161
00:16:07,560 --> 00:16:14,209
create a very small implementation on
JavaScript and what I was trying to do

162
00:16:14,210 --> 00:16:20,000
was to grab one of those decimos broke
the remaining that you were seen and put

163
00:16:20,000 --> 00:16:25,340
it somewhere else so I created a I don't
know how by complications work but I

164
00:16:25,340 --> 00:16:28,050
decided to create my own mind
complications because for obvious

165
00:16:28,050 --> 00:16:31,740
reasons I cannot do this with my bank
because if you are there will be a

166
00:16:31,740 --> 00:16:37,750
problem so I created a bank application
which has two accounts on account number

167
00:16:37,750 --> 00:16:44,970
0 has a million dollars and I kind of
want it has $0 the total balance with my

168
00:16:44,970 --> 00:16:51,890
bank is $1,000,000 the thing is I will
try to grab the smallest possible number

169
00:16:51,890 --> 00:16:57,120
make it as highest possible but without
making the million dollars account

170
00:16:57,120 --> 00:17:03,980
smaller than what are these and more
than number to the second account and

171
00:17:03,980 --> 00:17:09,250
hopefully will I would be able to do
will be to increase the amount in the

172
00:17:09,250 --> 00:17:14,800
second account but the first second will
never be decreased what I did basically

173
00:17:14,800 --> 00:17:19,030
was a function that receives them a very
small number decreases the account

174
00:17:19,030 --> 00:17:24,260
number 01 increases the Oconomowoc but
since he the value on their phone

175
00:17:24,260 --> 00:17:30,850
numbers are so low it would never the
crease so let's move to a practical them

176
00:17:30,850 --> 00:17:36,709
of his first I will try to find which is
the largest smaller number of possible

177
00:17:36,710 --> 00:17:43,720
to be transfer that will not decrease my
middle account this is the first part of

178
00:17:43,720 --> 00:17:45,880
the program

179
00:17:45,880 --> 00:17:54,540
1841 study found that number is a number
04 by a coma and 1100 you start to

180
00:17:54,540 --> 00:18:00,600
transfer that amount to my second
account that's my profit account by end

181
00:18:00,600 --> 00:18:06,669
of there will be making $200 having this
running all day long this is doing me

182
00:18:06,670 --> 00:18:30,100
liane cisterns transfers from one
account to you though so we are not so

183
00:18:30,100 --> 00:18:31,480
what are they

184
00:18:31,480 --> 00:18:35,590
this is a number one followed by a bunch
of zeros was what I was trying to see

185
00:18:35,590 --> 00:18:43,689
and hear his how processes may inject
errors in here so for that matter what

186
00:18:43,690 --> 00:18:48,200
I'm trying to do first is to bring the
original value and then print the exergy

187
00:18:48,200 --> 00:18:52,730
representation of that this function for
my number what it does is it as the

188
00:18:52,730 --> 00:18:57,670
comma it has been region in there every
3 per session

189
00:18:57,670 --> 00:19:02,730
some numbers will be more readable so
you're expecting to see when you're Ryan

190
00:19:02,730 --> 00:19:11,210
these insects until it so first you have
the number the original number 122 that

191
00:19:11,210 --> 00:19:18,350
the number 12 zeros and that's what you
get blood stains were again working with

192
00:19:18,350 --> 00:19:23,050
numbers that a person may not be able to
use sometimes they may have problems

193
00:19:23,050 --> 00:19:29,169
either Explorer Firefox did what I was
expecting them to do but they were not

194
00:19:29,170 --> 00:19:35,620
able to rip to show the exponential
notation believe it's also team was also

195
00:19:35,620 --> 00:19:40,290
able to these was not able to her arms
up and started to show we are things

196
00:19:40,290 --> 00:19:49,830
again so this is affecting a few of the
implementation in 2011 I was trying to

197
00:19:49,830 --> 00:19:54,199
move to salen where

198
00:19:54,200 --> 00:20:05,630
sorry we're missing children one of the
numbers and say look for see i dont know

199
00:20:05,630 --> 00:20:13,670
so there is no justification for this
also put the floating-point numbers

200
00:20:13,670 --> 00:20:18,420
programming languages only can download
a certain amount of precision and that's

201
00:20:18,420 --> 00:20:18,750
it

202
00:20:18,750 --> 00:20:24,320
nevertheless implementations and all the
different solutions they do not all

203
00:20:24,320 --> 00:20:32,240
behaved very same way so what it was
reporting these I wasn't happy with

204
00:20:32,240 --> 00:20:36,920
whoever was seen even though it is
supported 1 I'm doing her a consolation

205
00:20:36,920 --> 00:20:40,980
I'm expected down certain regulations to
be the same as I'm doing on a piece of

206
00:20:40,980 --> 00:20:46,210
paper in particular is something
something so basic I'm not trying to go

207
00:20:46,210 --> 00:20:55,150
Glapion here so I was sharing this with
the security teams I was told that the

208
00:20:55,150 --> 00:20:58,890
very first scene will be to read
Wikipedia to see how the plane floating

209
00:20:58,890 --> 00:21:06,050
point numbers work and I was interesting
then I was referenced the another

210
00:21:06,050 --> 00:21:09,760
specification know the specification
that it was taking that was really

211
00:21:09,760 --> 00:21:13,690
interesting to think more fun one

212
00:21:13,690 --> 00:21:17,910
JavaScript was read for us as the
explanation of why this was happening

213
00:21:17,910 --> 00:21:25,880
ok let's move on and Lindsay that ok
eros are everywhere we had a similar

214
00:21:25,880 --> 00:21:31,570
table for the floating-point things but
now we don't have that same also we went

215
00:21:31,570 --> 00:21:36,290
into hers I'll try to do similar things
to do before before these matter I

216
00:21:36,290 --> 00:21:42,840
created a creep to a currency
application being that said I know

217
00:21:42,840 --> 00:21:47,459
nothing about group differences I
created what I believe is normal into

218
00:21:47,460 --> 00:21:53,030
currency application again with two
accounts I bought me lunch on a hundred

219
00:21:53,030 --> 00:21:55,889
$100,000

220
00:21:55,890 --> 00:21:58,950
coins now have a lot of coins

221
00:21:58,950 --> 00:22:09,190
calling name think calling again what I
was trying to do is grab I will buy a

222
00:22:09,190 --> 00:22:15,420
number one followed by 1700 of course
this fake going and I was so struck the

223
00:22:15,420 --> 00:22:21,240
number one from this account I would
transfer one calling from the account

224
00:22:21,240 --> 00:22:28,640
number 02 the account number one since
it is such a large number of the account

225
00:22:28,640 --> 00:22:34,290
number zero will never be diminished in
amount and number two it will get

226
00:22:34,290 --> 00:22:42,700
diminished but number one doesn't affect
the first account so your notice of the

227
00:22:42,700 --> 00:22:47,820
application works of the previous
application first he tries to the

228
00:22:47,820 --> 00:22:51,340
certainly the the largest possible
amount that would not get noticed when

229
00:22:51,340 --> 00:22:57,409
it is missing and then it will try to
move as much noise as possible to try to

230
00:22:57,410 --> 00:23:07,430
get the largest amount of money

231
00:23:07,430 --> 00:23:18,540
of JavaScript so here I have a little
profit at the end of the day I am a keen

232
00:23:18,540 --> 00:23:26,409
$2,300 per day making a lot of
transactions and you can see their

233
00:23:26,410 --> 00:23:30,750
number one is increasing your real value
for the application he believes that he

234
00:23:30,750 --> 00:23:35,470
has more money than it actually but it
doesn't it just doesn't the thing is

235
00:23:35,470 --> 00:23:44,370
done check on them as he was never the
crease so let's run the numbers this is

236
00:23:44,370 --> 00:23:49,889
something that is on service I will not
see these on client-side process as a

237
00:23:49,890 --> 00:23:54,260
general rule when you're talking about
run the numbers we should note not in

238
00:23:54,260 --> 00:23:57,960
Iran the number generators should be
useful creature off opposes this is a

239
00:23:57,960 --> 00:24:03,750
very basic thing when it comes to
programming so random numbers in XSLT

240
00:24:03,750 --> 00:24:05,770
maybe a little bit different

241
00:24:05,770 --> 00:24:11,660
first of all you need is not part of the
deal for the original specification of

242
00:24:11,660 --> 00:24:18,550
XSLT this is something like this on the
extent of the specification but being

243
00:24:18,550 --> 00:24:23,139
able to prove myself I believe that
random numbers is very basic thing from

244
00:24:23,140 --> 00:24:27,150
any programming languages and he's a
very basic thing use on any exit

245
00:24:27,150 --> 00:24:34,320
implementation so we're using a function
that is called run them and ensure

246
00:24:34,320 --> 00:24:40,800
returned a number between 0 and one and
as much I'm lost from the number

247
00:24:40,800 --> 00:24:44,560
implementations you would expect this
number it doesn't have any pattern

248
00:24:44,560 --> 00:24:49,070
you're not able to see to know where
this number came from a weird you know

249
00:24:49,070 --> 00:24:57,149
what will be the next number for that
matter so normally women used the wrong

250
00:24:57,150 --> 00:25:01,280
numbers for simple things for example
because cold there

251
00:25:01,280 --> 00:25:04,560
pick a name something like that that we
use

252
00:25:04,560 --> 00:25:12,360
run them implementations which are do
not have a lot of security but they may

253
00:25:12,360 --> 00:25:15,320
be used good for wood you're trying to
use them

254
00:25:15,320 --> 00:25:19,220
but we may rely on capitol graphically
secure so the roman numbers when it

255
00:25:19,220 --> 00:25:22,810
comes to sensitive stuff if we're trying
to catch something if we're trying to

256
00:25:22,810 --> 00:25:24,210
generate a new password

257
00:25:24,210 --> 00:25:30,910
we require when it comes up I don't
system run them instead of run it will

258
00:25:30,910 --> 00:25:36,100
grab a better entropy will be less
predictable so how about the

259
00:25:36,100 --> 00:25:39,360
implementation that I was analyzed and
we're open source so you're able to see

260
00:25:39,360 --> 00:25:44,629
how the code looks like when it comes to
run them implementations and as you can

261
00:25:44,630 --> 00:25:48,040
see all of the implementation are you
seem so the random number generators

262
00:25:48,040 --> 00:25:53,920
that's not bad per se the thing is that
if you see someone who's using up so the

263
00:25:53,920 --> 00:25:55,720
Roman number

264
00:25:55,720 --> 00:25:59,630
inaccessible team it is using on so the
run the number

265
00:25:59,630 --> 00:26:03,350
implementation and not a
cryptographically secure from the number

266
00:26:03,350 --> 00:26:11,959
so we have three types of functions ron
is ron brown them they all returned so

267
00:26:11,960 --> 00:26:13,220
the wrong number

268
00:26:13,220 --> 00:26:19,790
lawyers when I was analyzing what was
the implication of these iPhone that the

269
00:26:19,790 --> 00:26:39,629
man page of is wrong said it all so it's
ok if they are things and if they are

270
00:26:39,630 --> 00:26:43,620
using a certain implementation things
get a little bit more interesting so

271
00:26:43,620 --> 00:26:48,379
when you don't have an initialization
vector on cryptographic so the Roman

272
00:26:48,380 --> 00:26:53,480
number generator you may always get the
very same number and of course

273
00:26:53,480 --> 00:26:57,440
ridiculous if you are dealing with a
random number that's not running anymore

274
00:26:57,440 --> 00:27:02,760
and then the meaning of this is that you
will know what genre which numbers will

275
00:27:02,760 --> 00:27:08,810
be generated so you will always like
random function to have the

276
00:27:08,810 --> 00:27:16,780
initialization volume it will be good
for your security so let's review again

277
00:27:16,780 --> 00:27:24,090
how the implementations we're relying on
the initialization vector we have here

278
00:27:24,090 --> 00:27:26,379
again the same quarter we saw before

279
00:27:26,380 --> 00:27:32,380
will notice here that leave it all to
you the most widely deployed version is

280
00:27:32,380 --> 00:27:42,140
an all using nav is that dangerous for
the past nine years do you know this I

281
00:27:42,140 --> 00:27:47,010
don't have these kill steal the they
give this is the way it is but I will

282
00:27:47,010 --> 00:27:51,920
show the implication of having these the
way it is so again we have a stye should

283
00:27:51,920 --> 00:27:58,410
as you can see again we have the time
she opened up the beginning we closing

284
00:27:58,410 --> 00:28:03,350
up before the end and we have about the
offer which will be treated which will

285
00:28:03,350 --> 00:28:10,020
get the mount run them function result
which should be as we saw before a

286
00:28:10,020 --> 00:28:17,710
number between 0 and one so this will be
the result the would be obtaining if we

287
00:28:17,710 --> 00:28:22,300
are executing this program on a
standalone version as you can see there

288
00:28:22,300 --> 00:28:26,790
will be the same result over and over
again he just how many times you write

289
00:28:26,790 --> 00:28:31,520
this program it will always give you
their number is seven point angle

290
00:28:31,520 --> 00:28:41,000
ok not be the same if you are running
the library because if you're running

291
00:28:41,000 --> 00:28:48,650
the library was it has been executed for
the very first time you will get a new

292
00:28:48,650 --> 00:28:57,800
number the second time so what they did
is I rode I created to terminal also my

293
00:28:57,800 --> 00:29:02,419
computer and I created two executions in
part time and I was trying to correlate

294
00:29:02,420 --> 00:29:08,460
help item behaves and how how the wrong
impression from item behavior versus how

295
00:29:08,460 --> 00:29:17,050
the excess energy random function
behaves so the very first thing I did

296
00:29:17,050 --> 00:29:23,020
was to get around the number from Python
and his is the random basic transform

297
00:29:23,020 --> 00:29:28,100
these and all the the secure around one
thing and here we're getting a result we

298
00:29:28,100 --> 00:29:31,419
have our assault on the lab furnace
different result in the wrong

299
00:29:31,420 --> 00:29:34,430
but when it comes to leave for Saudi
would give that number remember the

300
00:29:34,430 --> 00:29:39,510
previous number is the same number if we
tried to get around the number again we

301
00:29:39,510 --> 00:29:44,500
find will get again different numbers we
have four different numbers from you

302
00:29:44,500 --> 00:29:50,030
want to come back to school team we're
getting the same the same not run them

303
00:29:50,030 --> 00:29:58,230
number on both sides of the of the
terminal 0.13% that execution after

304
00:29:58,230 --> 00:30:03,180
execution the lyrics as a team from them
functional would produce the same

305
00:30:03,180 --> 00:30:14,560
pattern of result so if the wrong
impression is being used on a block

306
00:30:14,560 --> 00:30:19,330
cipher you can know what will be the
next cycle because you always know which

307
00:30:19,330 --> 00:30:25,220
is the next number is going to be used
by these implementation so without

308
00:30:25,220 --> 00:30:31,770
having a number of the exchange tonight
to time in the HindIII when the

309
00:30:31,770 --> 00:30:38,230
functions are being caught the same
numbers will be generated so in case the

310
00:30:38,230 --> 00:30:41,740
Roman function is being used for
sensitive information

311
00:30:41,740 --> 00:30:52,659
the results may not be good you may get
what they were trying to high

312
00:30:52,659 --> 00:30:56,710
service stations

313
00:30:56,710 --> 00:30:59,419
let's go to the client-side
implementation mile in the same origin

314
00:30:59,419 --> 00:31:09,999
policy so again this is a client side
and this is basically something that's

315
00:31:09,999 --> 00:31:14,470
the browser should keep on the very same
way pays an overachiever information

316
00:31:14,470 --> 00:31:22,249
from nowhere else and that's how we're
process are supposed to work if they

317
00:31:22,249 --> 00:31:26,580
didn't work this way we can be able to
read information private information

318
00:31:26,580 --> 00:31:33,129
from other websites we are pleased I
don't lie about idea the same origin

319
00:31:33,129 --> 00:31:39,629
policy said basic goal is here for web
browsers and that says that when you

320
00:31:39,629 --> 00:31:43,609
have a URL you will have the scheme of
the very beginning the HTTP or HTTPS

321
00:31:43,609 --> 00:31:52,119
protocol you have the host example.com
black dot com and you may have the poor

322
00:31:52,119 --> 00:32:00,999
state or not I will be putting a deeper
level 43 whatever the moment that one of

323
00:32:00,999 --> 00:32:06,700
these three things is being change it is
not the same origin and something the

324
00:32:06,700 --> 00:32:12,109
information should be accessed by the
web browsers because what patients

325
00:32:12,109 --> 00:32:15,529
should be isolated from each other's
they should react they should be

326
00:32:15,529 --> 00:32:21,200
different in different rooms in a house
they shouldn't communicate at all if any

327
00:32:21,200 --> 00:32:27,629
of these three things are change
normally when you're trying to have used

328
00:32:27,629 --> 00:32:32,389
these you may rely on JavaScript but it
does not the only preliminary studies

329
00:32:32,389 --> 00:32:39,719
capable of using the same origin policy
typically badly is an area we have made

330
00:32:39,720 --> 00:32:44,389
simple dot com application running on
http on the port 80 and he's trying to

331
00:32:44,389 --> 00:32:50,859
access a second web page that has been
causing the same web server the web

332
00:32:50,859 --> 00:32:56,158
browser will say it's okay go ahead I
trust you you have the same scheme that

333
00:32:56,159 --> 00:33:01,029
same hold the same poor you are good to
go you know why you can access all the

334
00:33:01,029 --> 00:33:04,210
web pages on these web server

335
00:33:04,210 --> 00:33:13,210
differently would be when it comes to
when you're altering the scheme the host

336
00:33:13,210 --> 00:33:19,280
of the port in here the web browser will
say no way will they just see I will use

337
00:33:19,280 --> 00:33:24,200
the same two days before you will not
use the same cool can hear you will not

338
00:33:24,200 --> 00:33:28,960
use the same cooking here if you change
the hostname and definitely no doing

339
00:33:28,960 --> 00:33:37,350
this if you're changing the board so
again when you are honest same domain on

340
00:33:37,350 --> 00:33:41,159
the same port on the same scheme that's
when you're seeing your cookies that's

341
00:33:41,160 --> 00:33:47,550
when you're sending private for-profit
hey there's a related to that website so

342
00:33:47,550 --> 00:33:55,129
what I heard was what if I don't care
about this what if I'm trying to do

343
00:33:55,130 --> 00:34:02,570
something with this so there is only one
from there would read files and would

344
00:34:02,570 --> 00:34:04,300
eventually be capable of doing this

345
00:34:04,300 --> 00:34:10,920
that's not meant for sure what does it
drops an XML document and try to parse

346
00:34:10,920 --> 00:34:14,540
would seem science then you do something
this is a common way to nexus of

347
00:34:14,540 --> 00:34:19,029
teaching manipulated document it should
be noted that since we're dealing with

348
00:34:19,030 --> 00:34:24,590
what browsers we normally will see annex
HTML document text HTML document it is a

349
00:34:24,590 --> 00:34:26,500
combination gmail.com

350
00:34:26,500 --> 00:34:31,409
but the feelings are just more straight
sometimes an HMO we may miss one of the

351
00:34:31,409 --> 00:34:37,870
attacks on the application will still
work index HTML it is very strict with a

352
00:34:37,870 --> 00:34:44,049
low that but the thing is that index
HTML document low so low you an XSLT

353
00:34:44,050 --> 00:34:50,810
document to be embedded so certain
service have migrated their

354
00:34:50,810 --> 00:34:56,489
configurations to XACML to be compliant
to have more specific documents and they

355
00:34:56,489 --> 00:35:01,120
were very indirect sake of St should
render there would be no meeting tax so

356
00:35:01,120 --> 00:35:05,339
once we're retrieving the document we
may want to manipulate the information

357
00:35:05,340 --> 00:35:10,320
out there are two financial data will be
used after accessing it would be called

358
00:35:10,320 --> 00:35:12,250
off and value of

359
00:35:12,250 --> 00:35:20,260
for practical races J will show the
information that is being stored so I

360
00:35:20,260 --> 00:35:27,330
mention that I X HMO thing so I look for
next week's HTML website making a claim

361
00:35:27,330 --> 00:35:35,759
uses so if I open my web browser

362
00:35:35,760 --> 00:35:42,320
you'll see my name will be in the upper
right corner that's the normal behavior

363
00:35:42,320 --> 00:35:49,070
for being so calm and the lower portion
of the of this creation will show you

364
00:35:49,070 --> 00:35:56,670
that my name is song this tack named
idea on the score and and that's where

365
00:35:56,670 --> 00:36:07,090
my name is so the only possible that is
able to access this information

366
00:36:07,090 --> 00:36:15,350
these are americans listen HTTP or HTTPS
bodies was an HTTPS being all calm on

367
00:36:15,350 --> 00:36:23,420
the board of War 3 so let's try to
access this so we saw that we need to

368
00:36:23,420 --> 00:36:34,000
document function too so let's taxes
being woken without then we will be many

369
00:36:34,000 --> 00:36:38,890
believed that that information will get
it we're in here we will use copy off

370
00:36:38,890 --> 00:36:47,890
I'm better with JavaScript I with XSLT
ones that have that in place I would get

371
00:36:47,890 --> 00:36:54,220
the idea on their score in value that
holds my name and I would printed so

372
00:36:54,220 --> 00:37:05,399
I'll show you what I first you will see
a safari being open and then I will open

373
00:37:05,400 --> 00:37:10,870
the findings on the script on the
desktop

374
00:37:10,870 --> 00:37:17,160
that high will try to access my being
Okami information using the kooky that

375
00:37:17,160 --> 00:37:22,350
is being sung to being but instead of
being so instead of excess in the

376
00:37:22,350 --> 00:37:26,750
correct scheme it was trying to access a
file that is locally stored on my

377
00:37:26,750 --> 00:37:30,810
computer

378
00:37:30,810 --> 00:37:38,080
there you go see my name on the upper
right corner and there I'm accessing the

379
00:37:38,080 --> 00:37:44,460
the final they say able to retrieve my
name and printed over there would you

380
00:37:44,460 --> 00:37:50,300
see him to take Syria over that is some
code of the bingo com that is being

381
00:37:50,300 --> 00:37:56,880
retrieved when I G the the documenting
so are you trying to get across

382
00:37:56,880 --> 00:38:01,190
different web browsers and I was only
able to do it on safari I tried on the

383
00:38:01,190 --> 00:38:09,200
Internet Explorer but it was not sending
the cookie and the other grocers didn't

384
00:38:09,200 --> 00:38:16,970
do anything with it so the last thing
that i will like to talk about is how

385
00:38:16,970 --> 00:38:23,540
errors may help you to get passwords so
this is something that you may get on

386
00:38:23,540 --> 00:38:28,970
server-side and client-side the things
that are trying to retrieve information

387
00:38:28,970 --> 00:38:34,939
it is better to do it all server side in
particular because all web also we have

388
00:38:34,940 --> 00:38:41,280
the restriction that will will not be
able to go below the place we're trying

389
00:38:41,280 --> 00:38:46,350
to access and I find that I directory
service processes will allow that

390
00:38:46,350 --> 00:38:54,520
so the fun thing about this is dad one
onyx on TNT expansion is being used in a

391
00:38:54,520 --> 00:39:00,490
file that is the law that allows a file
to be read but here we have no functions

392
00:39:00,490 --> 00:39:04,799
to read those files those ones where I
don't exercise TV too which is not

393
00:39:04,800 --> 00:39:09,780
supported by the majority of these
implementations it is also the wide web

394
00:39:09,780 --> 00:39:13,700
browsers announcing not supported by
limit facility

395
00:39:13,700 --> 00:39:19,529
so we hear multiple times is not
possible but we do what if we try we

396
00:39:19,530 --> 00:39:25,480
travel what if we force the applications
are trying to read this so again we talk

397
00:39:25,480 --> 00:39:29,670
about document a moment ago we were
trying to access D a different origin

398
00:39:29,670 --> 00:39:36,790
but here we're trying to access
something that it's not possible so I

399
00:39:36,790 --> 00:39:41,500
will try to use any possible function
available I will try to use include an

400
00:39:41,500 --> 00:39:45,050
important window which are meant for
XSLT

401
00:39:45,050 --> 00:39:50,100
something that we cannot persist
theoretically we tried to use whatever

402
00:39:50,100 --> 00:39:55,990
we have it so i cant a simple text file
with three lines here you can see how

403
00:39:55,990 --> 00:40:00,660
the finds creative and what though the
contest when you're really a

404
00:40:00,660 --> 00:40:07,540
specification you'll notice that the
behavior should be there is either an

405
00:40:07,540 --> 00:40:12,250
error being shoved to the end user or
you will see that the content is not

406
00:40:12,250 --> 00:40:19,480
allow for implementation said this or
you're either showing an empty note said

407
00:40:19,480 --> 00:40:29,000
that means an empty XML document so
that's ok he doesn't do that because he

408
00:40:29,000 --> 00:40:36,070
will show you the first line of the file
and this is where it gets interesting

409
00:40:36,070 --> 00:40:42,100
only one line from one hot and you're
able to control the XML all the excess

410
00:40:42,100 --> 00:40:47,250
ot you could try to get valuable
information if you're only able to

411
00:40:47,250 --> 00:40:55,470
rebound long line so there are specific
fires which will be interesting to axis

412
00:40:55,470 --> 00:41:01,410
when you have it for me when you have
access to this clearly isn't a password

413
00:41:01,410 --> 00:41:06,080
but holds the the root password even
better if you have proven through taxes

414
00:41:06,080 --> 00:41:10,990
go for this situation shadow root
password is being always stored on the

415
00:41:10,990 --> 00:41:18,200
very first line HDD password password
directly on the very first line and

416
00:41:18,200 --> 00:41:24,339
again for example of that have been
storing passwords on the very first line

417
00:41:24,339 --> 00:41:28,529
so this is what you will get if you're
trying to create a tutor possible when

418
00:41:28,529 --> 00:41:35,059
using XSLT prague there you have an
encrypted password so somehow I could be

419
00:41:35,059 --> 00:41:39,779
our swan neck scientific special because
you could try to use all the languages

420
00:41:39,779 --> 00:41:45,859
if someone is having issues PHB with
Olympics in Sochi library they could

421
00:41:45,859 --> 00:41:53,239
trick someone to use and access to files
I was trying to acces again a password

422
00:41:53,239 --> 00:41:59,890
encrypted password or even better if
you're running if the victim is Ryan

423
00:41:59,890 --> 00:42:04,940
this shrewd let's go for the adventurous
shadow here I'm showing an example using

424
00:42:04,940 --> 00:42:10,609
Groovy retrieving the very first line of
the etcetera shadow that's where the

425
00:42:10,609 --> 00:42:18,900
root password he's so I'm sure here only
the service implementations are you will

426
00:42:18,900 --> 00:42:23,269
notice the weird thing that really
doesn't have the document thing but you

427
00:42:23,269 --> 00:42:28,019
have a lot of possibilities so early
there if you're trying to reunify

428
00:42:28,019 --> 00:42:36,439
through hours so basically if you're
living someone control the XML file the

429
00:42:36,440 --> 00:42:44,519
XSLT you will be compromising the
security on any given way sometimes the

430
00:42:44,519 --> 00:42:48,160
confidentiality and integrity will also
be exposed depending on how they're

431
00:42:48,160 --> 00:42:54,598
created this finally my recommendation
would be for you to check the court or

432
00:42:54,599 --> 00:43:02,849
someone else for that matter if you want
to deal with the possibilities someone

433
00:43:02,849 --> 00:43:11,550
has any questions

434
00:43:11,550 --> 00:43:17,520
question is what are you trying to read
a very large file like deborah know it

435
00:43:17,520 --> 00:43:22,120
will it will only be the very first 80
characters so it will stop immediately

436
00:43:22,120 --> 00:43:34,140
after their show you that any other
question

437
00:43:34,140 --> 00:43:36,720
yes

438
00:43:36,720 --> 00:43:46,240
are reported all the ability to say no
one has in fact so thank you very much

439
00:43:46,240 --> 00:43:50,910
for coming I will be here for a while if
you want to thank you

