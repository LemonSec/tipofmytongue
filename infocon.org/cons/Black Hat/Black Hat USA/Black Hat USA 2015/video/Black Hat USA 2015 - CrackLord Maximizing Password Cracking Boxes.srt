1
00:00:00,000 --> 00:00:05,560
good morning and welcome today to a
black cat 20155 couple of announcements

2
00:00:05,560 --> 00:00:11,410
somali business ha located in Shoreline
a four sponsors sessions and theatre A&B

3
00:00:11,410 --> 00:00:18,910
be sure to check out all the black at
Arsenal and breakers DJK sponsored

4
00:00:18,910 --> 00:00:27,300
workshops workshops are in Mandalay JKL
you are in lagoon K for the session

5
00:00:27,300 --> 00:00:34,739
crack lord maximizing password cracking
boxes with Lucas Morris and Michael

6
00:00:34,739 --> 00:00:42,870
McAtee please ask that you put your
phone's on vibrate makes it easier for

7
00:00:42,870 --> 00:00:45,940
the rest of us to ignore the ringing
were you a for the voicemail to pick up

8
00:00:45,940 --> 00:00:56,289
so good morning everybody and welcome
our speakers

9
00:00:56,289 --> 00:01:01,559
everybody's awake I know there's a
couple people there were half asleep

10
00:01:01,559 --> 00:01:08,670
when we walked in about 15 minutes ago
self wake up good morning so we are here

11
00:01:08,670 --> 00:01:13,030
this morning to talk about a tool to
methodology that Michael and I have put

12
00:01:13,030 --> 00:01:18,759
together heater over the last year
basically we call the store crack lord

13
00:01:18,759 --> 00:01:21,479
we thought the name was funny

14
00:01:21,479 --> 00:01:26,740
talk a little bit about it we had some
rejected names too but I thought that

15
00:01:26,740 --> 00:01:30,619
basically what we want to talk about
today's really for things that just a 25

16
00:01:30,619 --> 00:01:33,810
minute talk we're actually gonna leave
some time for questions at the end so

17
00:01:33,810 --> 00:01:38,659
you know we're going to be very brief
that being said there are four things

18
00:01:38,659 --> 00:01:40,920
that we want to talk through wanna give
you a little bit of an introduction

19
00:01:40,920 --> 00:01:43,880
right what talk doesn't have an
introduction so that bullet points

20
00:01:43,880 --> 00:01:47,589
probably little superfluous but whatever
we're going to talk about the intensity

21
00:01:47,590 --> 00:01:51,470
of resources and tools that we use
penetration testers and how

22
00:01:51,470 --> 00:01:56,929
in effect we are very lazy people and we
like being lazy wanna make sure that we

23
00:01:56,930 --> 00:02:01,399
are being efficient in the time we spend
obviously we're here to talk about a

24
00:02:01,399 --> 00:02:04,270
tool so we're going to talk about the
tool and then we are gonna have some

25
00:02:04,270 --> 00:02:07,850
demos we decided not to do live once so
sorry we're gonna have to stick with

26
00:02:07,850 --> 00:02:09,609
videos at least for now

27
00:02:09,610 --> 00:02:13,750
because we don't trust the wifi so who
are we

28
00:02:13,750 --> 00:02:17,190
my name is Lucas Morris Michael and I
both work for a company called Crowe

29
00:02:17,190 --> 00:02:22,020
Horwath we're just an accounting and
consulting firm I'm a senior manager I'm

30
00:02:22,020 --> 00:02:25,850
a manager in quotes and that I don't do
a lot of managing I do a lot of doing so

31
00:02:25,850 --> 00:02:30,150
it's actually pretty cool gag and I am a
pen tester bitrate so do spend most of

32
00:02:30,150 --> 00:02:33,510
my time actually breaking into systems
and I'm also a bit of a code monkey

33
00:02:33,510 --> 00:02:36,620
someone michael says jump I need to
write this I tend to disappear for a few

34
00:02:36,620 --> 00:02:42,670
weeks I michael McAtee I am a manager
crow I spent half my time doing

35
00:02:42,670 --> 00:02:47,700
penthouse the other half doing sysadmin
work I also run our labs where we do our

36
00:02:47,700 --> 00:02:52,250
assessments research testing all that
stuff out of so besides doing some of

37
00:02:52,250 --> 00:02:56,580
her clients I also do it internally for
all of us and then I'm not creative

38
00:02:56,580 --> 00:03:01,560
enough to think of something funny so
please insert your own joke here so

39
00:03:01,560 --> 00:03:07,320
let's talk about why we're here first
question how many of you have a GPU

40
00:03:07,320 --> 00:03:14,630
cracker I mean if you wish you had a GPU
cracker and how many of you have a car

41
00:03:14,630 --> 00:03:18,230
that's a pain in the butt to manage
people you know Columbia light on each

42
00:03:18,230 --> 00:03:22,609
other people are you know stopping each
other's jobs are over at each other

43
00:03:22,610 --> 00:03:29,010
yeah okay well so did we and in fact
that's why we're here but before we talk

44
00:03:29,010 --> 00:03:32,399
about cracking which you want to take a
step back so one of the things that we

45
00:03:32,400 --> 00:03:36,709
have found here over the last few years
especially with Michael running the lab

46
00:03:36,709 --> 00:03:40,190
the assessments that we're doing and do
the work that we do for our client is

47
00:03:40,190 --> 00:03:44,920
that we are starting to create Purpose
Driven resources GPU crackers were the

48
00:03:44,920 --> 00:03:48,640
first but we have a lot of dedicated
resources in our labs to things like

49
00:03:48,640 --> 00:03:54,260
processing in GSD files running nmap
scans and other things that they exist

50
00:03:54,260 --> 00:03:59,560
solely for that purpose and in a lot of
cases we do have issues with managing

51
00:03:59,560 --> 00:04:04,660
them so we have this purpose built
hardware but

52
00:04:04,660 --> 00:04:10,380
how do we manage that right how do we
make sure that people are able to use it

53
00:04:10,380 --> 00:04:14,650
together so you know we're not really
sure people are sharing because I'm sure

54
00:04:14,650 --> 00:04:17,680
you have that guy like we do that if he
wants to run something you just killed

55
00:04:17,680 --> 00:04:22,310
everybody else stuff makes it go right
we have the guy that well we're not

56
00:04:22,310 --> 00:04:26,270
quite quite right yet the internet
didn't run it and it's not resumable so

57
00:04:26,270 --> 00:04:29,460
what am I supposed to do you know he's
running the crack of every password on

58
00:04:29,460 --> 00:04:31,888
the lady domain for some audit and

59
00:04:31,889 --> 00:04:35,620
and I just cracked the workstation that
got a damn mad men looked into it I need

60
00:04:35,620 --> 00:04:38,840
an MS cash password now now now now now

61
00:04:38,840 --> 00:04:41,289
well he didn't get resumable can I
killed it

62
00:04:41,289 --> 00:04:45,748
maybe not so sometimes we also what we
don't really know where the output is

63
00:04:45,749 --> 00:04:49,289
you know again see the intern problem
but you know people write stuff all over

64
00:04:49,289 --> 00:04:53,610
disc home directories may be attached
Kathy got it all in the hashtag users so

65
00:04:53,610 --> 00:05:00,289
that we can relax we're running on top
of each other gets really odd so for us

66
00:05:00,289 --> 00:05:04,710
to share we had to break some rules
Michael runs our labs to not only we

67
00:05:04,710 --> 00:05:07,589
have to break the minister rules we
bring some his rules and he's not the

68
00:05:07,589 --> 00:05:14,389
type of person you want to piss off so
he wins a lot and makes you regret so

69
00:05:14,389 --> 00:05:18,240
you know what we have to do well we had
shared accounts right we don't like to

70
00:05:18,240 --> 00:05:23,169
do that but everybody had to ssh into
our GPU cracker or GPU crackers with

71
00:05:23,169 --> 00:05:27,498
that user will be needed x11 running
toward running so they had to use that

72
00:05:27,499 --> 00:05:31,520
we had ever shared password we had
people start stuff in the screen

73
00:05:31,520 --> 00:05:34,839
hopefully they put their name on it so
you know who to talk to in the event you

74
00:05:34,839 --> 00:05:38,919
need deposit and until we had to do
manual data cleanup a lot of times

75
00:05:38,919 --> 00:05:42,649
because you know I Renault was as you
know in general

76
00:05:42,649 --> 00:05:45,830
workers but we don't do a good job of
cleaning up after ourselves sometimes so

77
00:05:45,830 --> 00:05:49,609
you know we had a process is labeled
menswear we go through and clean up data

78
00:05:49,610 --> 00:05:54,569
because we didn't want things sitting
out there for our our clients and

79
00:05:54,569 --> 00:05:58,120
frankly we're not even sure people use
the right options you know can we even

80
00:05:58,120 --> 00:06:04,199
resuming we had some problems with that
so the last pieces we spent a lot of

81
00:06:04,199 --> 00:06:07,399
money right we have multiple GPU
crackers we have a lot of big boxes in

82
00:06:07,399 --> 00:06:12,029
our lap some of my running VMWare some
of my purpose built and well sometimes

83
00:06:12,029 --> 00:06:17,719
this box was sitting idle management
thought we had a nice extensive play and

84
00:06:17,719 --> 00:06:22,139
really didn't know how much we were
using it and you know are we using all

85
00:06:22,139 --> 00:06:25,969
the resources are GPU crackers have
really powerful CPUs we never touched

86
00:06:25,969 --> 00:06:32,879
him we never really thought about what
we were doing with them so with that our

87
00:06:32,879 --> 00:06:38,529
solution is correct word right so far
solutions crack lord is a distributed

88
00:06:38,529 --> 00:06:43,558
system intend to solve these problems
for one or more of these dedicated

89
00:06:43,559 --> 00:06:48,809
systems the input-output mechanisms are
generic we have a scheme to follow to

90
00:06:48,809 --> 00:06:52,490
make things easier so that's easy for a
plug-in to

91
00:06:52,490 --> 00:06:56,139
a foreman to spit out put out in a
standard format the people comparison

92
00:06:56,139 --> 00:07:01,430
use but generally your tools are free to
do whatever makes sense for the toolkit

93
00:07:01,430 --> 00:07:04,770
obviously if you're say running and map
the output of maps can be a lot

94
00:07:04,770 --> 00:07:09,198
different than the output of hash cat or
if you're parsing and NTDs that debt

95
00:07:09,199 --> 00:07:13,800
that outputs gonna be a lot different
than say and map or John or has kept

96
00:07:13,800 --> 00:07:20,020
whatever it may be we also buy a nice
featured to get a couple of some outside

97
00:07:20,020 --> 00:07:24,940
people involved we don't we don't use
this one internally but having some

98
00:07:24,940 --> 00:07:29,130
ability to spin up cloud instances
especially the ability to maybe spend

99
00:07:29,130 --> 00:07:33,280
about cloud instance just for a little
bit for that really important job that

100
00:07:33,280 --> 00:07:37,780
you need to run and then finally the
whole thing is based on a RESTful API

101
00:07:37,780 --> 00:07:43,150
and we're going to show you in the demos
are GUI which just cause that API but if

102
00:07:43,150 --> 00:07:48,068
you have existing workflows automation
scripts tools whatever that may be

103
00:07:48,069 --> 00:07:54,400
there's a RESTful API you can't I write
in to connect in cement jobs hold data

104
00:07:54,400 --> 00:07:58,698
how it's so you can and that's
documented as well on the get her page

105
00:07:58,699 --> 00:08:04,409
so few I write your own automation stuff
it's there for you to do so the first

106
00:08:04,409 --> 00:08:09,509
two components of the system are the
queue in the API and this is what people

107
00:08:09,509 --> 00:08:13,909
using the system are gonna see they are
going to either be using the provided to

108
00:08:13,909 --> 00:08:18,650
fall GUI which is the angular website or
they're going to be using maybe some

109
00:08:18,650 --> 00:08:23,239
script or something customer and that
hit capi and is communicating with the Q

110
00:08:23,240 --> 00:08:29,419
and the Q manages everything else it
keeps track of the jobs it stores the

111
00:08:29,419 --> 00:08:35,010
result stores what you submitted and
lets you do some nice things for

112
00:08:35,010 --> 00:08:39,529
instance pausing and resuming so when
you have that individual who really

113
00:08:39,529 --> 00:08:43,559
needs to run a crack right now and other
people are using the resources they can

114
00:08:43,559 --> 00:08:45,250
drag there's to the top

115
00:08:45,250 --> 00:08:49,209
pauses everybody's jobs runs their job
when it's done

116
00:08:49,209 --> 00:08:55,239
picks up and resume some because no one
is dropping their own command line

117
00:08:55,240 --> 00:09:00,180
arguments in 20 has Kara whatever it is
they're all controlled by the plugin you

118
00:09:00,180 --> 00:09:03,370
can make sure that they're doing the
right things so their job is reasonable

119
00:09:03,370 --> 00:09:07,670
and there's regularly saving state so
that when you deposit you don't lose you

120
00:09:07,670 --> 00:09:16,240
know too many guesses as we said API
text is extendable every tool kind of

121
00:09:16,240 --> 00:09:21,470
set up its own thing you'll see that
during demos and then the Q communicates

122
00:09:21,470 --> 00:09:24,440
with everything else through TLS and is
mutually authenticated so that

123
00:09:24,440 --> 00:09:27,440
connection where you are going to
potentially be some extensive data to

124
00:09:27,440 --> 00:09:32,100
your resources that's going to be over a
mutually authenticated mechanism that

125
00:09:32,100 --> 00:09:37,130
either are appalled installer packages
will generate for you or if you are an

126
00:09:37,130 --> 00:09:43,600
existing PKS environment you can set up
your own certificates the last two

127
00:09:43,600 --> 00:09:47,190
pieces of the system are the resources
now these are those dedicated pieces of

128
00:09:47,190 --> 00:09:53,140
hardware the GPU boxes maybe a boxer and
map whatever this may be beyond physical

129
00:09:53,140 --> 00:09:59,439
hardware this runs on that and manages
the resources are managed as the the

130
00:09:59,440 --> 00:10:05,339
capacity you have their bit CPU GPU
maybe some custom a six does work both

131
00:10:05,339 --> 00:10:08,829
on Windows and Linux as far as our
testing has gone and that has been our

132
00:10:08,829 --> 00:10:13,130
goals so far so that if you do have
something maybe a Windows tool that you

133
00:10:13,130 --> 00:10:17,529
need to run on a Windows box you can
have a resource running on that Windows

134
00:10:17,529 --> 00:10:23,130
system to execute that the tools are
where we get you can write your own

135
00:10:23,130 --> 00:10:26,720
these are the extensible pieces right
now they're written in go there go

136
00:10:26,720 --> 00:10:32,260
packages and that usually wrap some kind
of external tool but you can also write

137
00:10:32,260 --> 00:10:39,050
ago package that just is a go package to
do some kind of task you set up what

138
00:10:39,050 --> 00:10:43,219
parameters you need the user to provide
and you set up a format that you return

139
00:10:43,220 --> 00:10:47,449
them to an all you have to do is
implement five functions are pretty

140
00:10:47,449 --> 00:10:53,520
simple run pause quit a way to get to
your standard and standard out and

141
00:10:53,520 --> 00:10:59,730
there's one more this is why we document
until this is the overall design and as

142
00:10:59,730 --> 00:11:03,670
you can see we have users who talked to
the queue queue then manages over

143
00:11:03,670 --> 00:11:07,399
resources which may have some number of
tools running on each of those resources

144
00:11:07,399 --> 00:11:12,439
if you have identical tools between
resources it shows up once in the queue

145
00:11:12,439 --> 00:11:15,510
so you submit that it goes to the first
opened resource

146
00:11:15,510 --> 00:11:19,850
as far as authentication right now we
have standard just three user

147
00:11:19,850 --> 00:11:24,590
authentication with regroup levels one
of them being administrator so the

148
00:11:24,590 --> 00:11:28,070
admins the other being a standard user
who can run cracks but can't manage

149
00:11:28,070 --> 00:11:31,140
resources and the last one being read
only so if you have scripts that are

150
00:11:31,140 --> 00:11:35,630
pulling statistics or maybe collecting
data in an automated fashion you can

151
00:11:35,630 --> 00:11:39,700
give it a read only account for that
purpose we also have included a nadie

152
00:11:39,700 --> 00:11:42,930
authentication module because that's
what we use them internally in our labs

153
00:11:42,930 --> 00:11:53,199
so if you want I this Sunday D it does
work and now demo time we prayed to the

154
00:11:53,200 --> 00:12:01,340
demigods hopefully our videos work

155
00:12:01,340 --> 00:12:06,690
ok so you can see here the default going
and basically this is what our users

156
00:12:06,690 --> 00:12:12,190
presented with so we put a name for a
tool for the crack itself it will track

157
00:12:12,190 --> 00:12:15,010
who's using it so you don't have to do
that but this is where we put client

158
00:12:15,010 --> 00:12:21,120
name and other things so what you will
see here is each tool does have the

159
00:12:21,120 --> 00:12:26,420
ability to present a form this is all
agnostic there's a standard schema that

160
00:12:26,420 --> 00:12:32,030
we use in each told gives this so they
the GUI the cue the resource they really

161
00:12:32,030 --> 00:12:37,819
don't care it's the tool that processes
and presents this forum schema we just

162
00:12:37,820 --> 00:12:38,660
display it

163
00:12:38,660 --> 00:12:42,600
process it up to some bootstrap so
what's nice here is each talkin ask for

164
00:12:42,600 --> 00:12:46,310
drastically different things in this
case has cat we have configured to allow

165
00:12:46,310 --> 00:12:50,119
both dictionary attacks and brute force
attacks so we are first going to of

166
00:12:50,120 --> 00:12:54,250
course given our hash type we're going
to select our dictionaries and other

167
00:12:54,250 --> 00:12:59,690
things we are going to put all of the
San and then we will click Go

168
00:12:59,690 --> 00:13:03,240
hashes for anybody that cares for those
playing the home game the user names are

169
00:13:03,240 --> 00:13:07,420
in fact the passwords so please feel
free to crack it will be just generated

170
00:13:07,420 --> 00:13:11,780
them so once you hit submit the job is
immediately created you will see a

171
00:13:11,780 --> 00:13:15,569
couple of things here one we just have a
single job it does take a little bit of

172
00:13:15,570 --> 00:13:19,340
time there is actually a process
internal to the Q is now sending stuff

173
00:13:19,340 --> 00:13:23,130
off to the resource the resources gonna
start it up and eventually what you will

174
00:13:23,130 --> 00:13:27,780
see here is as it just did we now have
statistics running how many jobs we

175
00:13:27,780 --> 00:13:31,189
completed you will see the little little
play button

176
00:13:31,190 --> 00:13:38,090
kind of appeared and we have everything
we need

177
00:13:38,090 --> 00:13:44,540
yes so we can also actually look at
detailed statistics of the job again

178
00:13:44,540 --> 00:13:48,890
this is all agnostic the tool decides
what it's going to present we do have

179
00:13:48,890 --> 00:13:52,230
data over time which if Michael skipped
ahead a little bit you'll start to see a

180
00:13:52,230 --> 00:13:57,240
graph build it will update for you I'm
so lonesome of our long running jobs you

181
00:13:57,240 --> 00:14:01,040
will see hash cat and map of the things
they're they're process goes up and down

182
00:14:01,040 --> 00:14:05,569
it's actually kinda need to look at you
also see we have the results here at the

183
00:14:05,570 --> 00:14:09,610
bottom and you can export those out to
CSV if you do want them so that it's

184
00:14:09,610 --> 00:14:13,460
just you know for us at least on our
jobs we will come in you will have ten

185
00:14:13,460 --> 00:14:14,690
fifteen jobs

186
00:14:14,690 --> 00:14:19,200
more teams all running and everybody can
kind of see come in click exactly what

187
00:14:19,200 --> 00:14:27,710
their results are where they are what
they need to be doing

188
00:14:27,710 --> 00:14:36,040
similar to what we just went through we
also can add multiple jobs with multiple

189
00:14:36,040 --> 00:14:40,699
different types of tools so each tool
says I use this type of resource it's

190
00:14:40,700 --> 00:14:45,640
just a string in the code it says I use
GPU I use CPU I used network I use

191
00:14:45,640 --> 00:14:49,410
whatever the person wide writing the
tool wants to configure and what the Q

192
00:14:49,410 --> 00:14:53,980
will manages it will say okay well this
resource server has GPU so I'm going to

193
00:14:53,980 --> 00:14:59,150
let one GPU tool run on it at the time
the case of our GPU crackers in our lab

194
00:14:59,150 --> 00:15:03,189
well those have some pretty powerful
CPUs as well so we will actually let CPU

195
00:15:03,190 --> 00:15:07,310
and GPU jobs run on those she will
sometimes see lots of different things

196
00:15:07,310 --> 00:15:20,310
running ahead just a little bit more
importantly as we said before each tool

197
00:15:20,310 --> 00:15:26,219
can also take many different types of
things so you will see here you know for

198
00:15:26,220 --> 00:15:31,170
and map we have one type of form that
asked for in a different pieces of

199
00:15:31,170 --> 00:15:35,260
information miss you know video just
kind of goes to the different types the

200
00:15:35,260 --> 00:15:40,660
GUI is very straightforward tried to
keep it simple it hides a lot of logic

201
00:15:40,660 --> 00:15:45,230
which sometimes can be something that
people don't want but in general we have

202
00:15:45,230 --> 00:15:48,590
found especially with our teams that
this is actually been better at first

203
00:15:48,590 --> 00:15:51,620
people were frustrated that they
couldn't go and run the exact like they

204
00:15:51,620 --> 00:15:55,190
wanted when I started to think about it
they realized I didn't really use a lot

205
00:15:55,190 --> 00:15:59,150
of those flags anyway so what you'll see
here is this at this point is connected

206
00:15:59,150 --> 00:16:03,370
to multiple resources each one is given
a color and so you can see we actually

207
00:16:03,370 --> 00:16:07,720
have three Krash three stand map scans
running on three separate boxes here

208
00:16:07,720 --> 00:16:12,710
they're all running simultaneously they
are all managed and are all actually

209
00:16:12,710 --> 00:16:19,510
running

210
00:16:19,510 --> 00:16:31,360
so we also do allow people to reorder
jobs and it is simple as drag and drop

211
00:16:31,360 --> 00:16:37,060
so you drag and drop you confirm the
system will pause every job and then it

212
00:16:37,060 --> 00:16:39,390
reevaluate the entire

213
00:16:39,390 --> 00:16:45,460
entire list entire stack what needs to
be run so in this case we driving job up

214
00:16:45,460 --> 00:16:49,290
we had confirmed at that point the
system made a request off to the cue

215
00:16:49,290 --> 00:16:53,110
thank you stopped every resource and
then you will actually start to see here

216
00:16:53,110 --> 00:16:57,460
in a minute that the other jobs will
start back up they will pick back up and

217
00:16:57,460 --> 00:17:02,210
it will evaluate so if you have three or
four resources yes things do stop but

218
00:17:02,210 --> 00:17:05,510
they will all pick back up where they
are all of the tools we have written

219
00:17:05,510 --> 00:17:10,369
thus far do support stopping and
resuming of the jobs in place it's very

220
00:17:10,369 --> 00:17:17,609
nice and here you can see now the very
top job started back up for it started

221
00:17:17,609 --> 00:17:22,189
161 finishes we won't make you sit
through the you know few hours that it's

222
00:17:22,190 --> 00:17:25,579
gonna take to run through the dictionary
it would actually again and move on to

223
00:17:25,579 --> 00:17:29,510
the next one so we can reorder as much
as we want just to show you the

224
00:17:29,510 --> 00:17:37,120
resumption that works to attract a job
that had been paused up to the top and

225
00:17:37,120 --> 00:17:44,879
now it's resumed picked up from from
where it left off so the last piece here

226
00:17:44,880 --> 00:17:47,350
in this is something is michael
mentioned we don't use internally

227
00:17:47,350 --> 00:17:51,100
because we do have the resources that we
need but we understand that not

228
00:17:51,100 --> 00:17:55,050
everybody has access to a GPU cracker
and we actually do have some clients

229
00:17:55,050 --> 00:18:00,110
that have started to use this because of
the way it provides them access so we

230
00:18:00,110 --> 00:18:06,399
actually wrote the ability to spawn ABS
instances in the tool to actually go to

231
00:18:06,400 --> 00:18:10,970
the resources area at the top it says
add resource you can actually direct

232
00:18:10,970 --> 00:18:15,820
connect to one or you can simply say
Amazon Web Services for mayor you see

233
00:18:15,820 --> 00:18:19,270
you get this nice format looks kind of
familiar the torn right same schema same

234
00:18:19,270 --> 00:18:23,330
same everything and you pick you pick
your subnet you pick what type you wanna

235
00:18:23,330 --> 00:18:26,949
running back to pick how many so you can
spawn as many different instances as you

236
00:18:26,950 --> 00:18:31,680
want and what will happen is on the back
end the Q will start a service will

237
00:18:31,680 --> 00:18:32,700
start to go routine

238
00:18:32,700 --> 00:18:38,430
that starts to listen it pings AWS every
60 seconds saying is this instance ready

239
00:18:38,430 --> 00:18:42,680
is it running and our instance we
actually have been a mi we put out it's

240
00:18:42,680 --> 00:18:47,020
it's a community available on uswest to
right now we will probably copied over

241
00:18:47,020 --> 00:18:50,950
to other places either does actually
have hash cat John and then map

242
00:18:50,950 --> 00:18:55,900
pre-configured with some basic
dictionaries for you so it will spawn

243
00:18:55,900 --> 00:18:59,790
that if you want your welcome to to load
the instance customize it there is

244
00:18:59,790 --> 00:19:03,139
actually a config file you can use to
change the idea of the image that you

245
00:19:03,140 --> 00:19:08,960
would like to load so what will happen
is that we're gonna have to skip forward

246
00:19:08,960 --> 00:19:12,650
a little bit here because it can take up
to five six seven minutes for an

247
00:19:12,650 --> 00:19:16,290
instance to become available is that
connects and you can actually see here

248
00:19:16,290 --> 00:19:19,540
we spawned two instances we have one
that's direct connected and we actually

249
00:19:19,540 --> 00:19:23,899
have two depending on what will happen
is this is checking into checking in and

250
00:19:23,900 --> 00:19:28,860
eventually we get to the point where if
we did the video right they are now

251
00:19:28,860 --> 00:19:33,379
running so now all three of these are
available all of the jobs anything that

252
00:19:33,380 --> 00:19:37,630
was sitting there well every 30 seconds
of lube runs it will see available

253
00:19:37,630 --> 00:19:42,280
resources and it will immediately start
adding the jobs based on the stack order

254
00:19:42,280 --> 00:19:46,670
we do also this is something we're still
working on a little bit but it will also

255
00:19:46,670 --> 00:19:50,480
removed the instances if they sit idle
for a certain period of time and by

256
00:19:50,480 --> 00:19:55,120
default we do have that fifteen minutes
because there's g2 GPU instances can get

257
00:19:55,120 --> 00:19:59,419
expensive if you let him run for a while
we found that out while testing this so

258
00:19:59,420 --> 00:20:06,790
what's so I being said we've got about
five minutes left this is our tool we

259
00:20:06,790 --> 00:20:13,180
hope you know you guys end up using it
it is available on github but really

260
00:20:13,180 --> 00:20:16,680
they're kind of three major things we
wanted to talk you know we wanted to

261
00:20:16,680 --> 00:20:20,360
take away it's very extensible so we
have some tools written right now but

262
00:20:20,360 --> 00:20:24,040
realistically you can if you can wrap it
and go you can run a command line you

263
00:20:24,040 --> 00:20:25,270
can put it in this

264
00:20:25,270 --> 00:20:28,310
some stuff probably doesn't make a lot
of sense but anything that's going to

265
00:20:28,310 --> 00:20:33,250
take time that's really where we see
this being useful right and maps cans

266
00:20:33,250 --> 00:20:38,410
processing large like in TDS you know ed
database files cracking passwords that's

267
00:20:38,410 --> 00:20:41,650
where we are using this internally and
that's where we have found a lot of the

268
00:20:41,650 --> 00:20:41,870
house

269
00:20:41,870 --> 00:20:46,500
frankly but you've got to maximize the
hardware investment so we will put

270
00:20:46,500 --> 00:20:50,550
cracks the bottom of the Q and the stack
that just run whenever it's got into

271
00:20:50,550 --> 00:20:54,950
space to to get stuff done it's actually
quite nice and the last thing is you

272
00:20:54,950 --> 00:20:58,680
know plugins are awesome so if you guys
have any you'd like button issue on get

273
00:20:58,680 --> 00:20:59,790
how we'll do our best

274
00:20:59,790 --> 00:21:03,610
or sensible request we like it was even
better does come with hugs when we see

275
00:21:03,610 --> 00:21:11,429
you next and come on they're worth it so
you know here are the links we do we

276
00:21:11,430 --> 00:21:16,520
have tried to document this as much as
we can so the dial page actually has

277
00:21:16,520 --> 00:21:20,679
instructions on how to install this
there are Deb files so it is literally a

278
00:21:20,679 --> 00:21:26,350
simple as apt-get install crack lord I
can keep record high for resourced it

279
00:21:26,350 --> 00:21:29,428
will automatically generate certificates
for you it will get everything installed

280
00:21:29,429 --> 00:21:33,470
if you have it all on the same box if
you have multiple resource service you

281
00:21:33,470 --> 00:21:35,850
will have to generate your own
certificates but we also have some

282
00:21:35,850 --> 00:21:39,699
information on the wiki on this get home
page that will try and help you through

283
00:21:39,700 --> 00:21:44,610
that so documentation is poor yell at us
we'll do our best

284
00:21:44,610 --> 00:21:48,610
yeah and please please find bugs next
few weeks give this a try

285
00:21:48,610 --> 00:21:52,169
was no its not working we try and turn
away you look at this long enough to get

286
00:21:52,170 --> 00:21:56,470
into your patterns maybe don't notice it
doesn't do one thing that most people

287
00:21:56,470 --> 00:21:59,360
are going to use or maybe we use the law
definitely internally so we'd love to

288
00:21:59,360 --> 00:22:00,189
see you

289
00:22:00,190 --> 00:22:04,130
you know other people go spend this hour
plus know what's not working so we can

290
00:22:04,130 --> 00:22:09,470
work on making a better and and get a
run running as smoothly as possible with

291
00:22:09,470 --> 00:22:13,040
that we want to leave a little time for
questions I think there are Mikes here

292
00:22:13,040 --> 00:22:19,220
in each row if you have a question and
then feel free to jump up and if not we

293
00:22:19,220 --> 00:22:27,290
can meet you outside we don't last that
front of everybody agreed to i think

294
00:22:27,290 --> 00:22:31,040
it's funny that we sorely need something
like this

295
00:22:31,040 --> 00:22:37,700
you mentioned before you are able to
drag and drop jobs see which ones

296
00:22:37,700 --> 00:22:44,250
currently active is there any support
for currency between jobs has cats birds

297
00:22:44,250 --> 00:22:50,650
like the dashed so you can address so
did you use for your support better

298
00:22:50,650 --> 00:22:58,260
could be extended so yes I could we
actually in the config file or ASCAP we

299
00:22:58,260 --> 00:23:02,730
actually have a place it is at your own
arguments by the fall during our testing

300
00:23:02,730 --> 00:23:08,470
we actually a bad GPU and so we had to
use that to avoid using that the only

301
00:23:08,470 --> 00:23:11,620
thing it doesn't support right now but
we we have an idea of how to implement

302
00:23:11,620 --> 00:23:17,050
it is if I have one box and maybe I for
GPUs and I wanna run two jobs on to

303
00:23:17,050 --> 00:23:21,340
right now it doesn't support that
directly although you could you could

304
00:23:21,340 --> 00:23:25,379
kind of hack around that by making that
to resources running at twice and then

305
00:23:25,380 --> 00:23:28,670
doing the dash teasing each other
configs so you can make it work

306
00:23:28,670 --> 00:23:33,460
it's not as easy as a just right on
these GPUs and and then you know run

307
00:23:33,460 --> 00:23:42,700
something else on what's left if if it's
only requesting that any other questions

308
00:23:42,700 --> 00:23:46,380
alright well have good morning everybody
thinks are buying from an early

