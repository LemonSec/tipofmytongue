1
00:00:00,000 --> 00:00:05,009
hi everybody this is taking a
correlation with you my name is Rob King

2
00:00:05,009 --> 00:00:11,460
and that is the last time I'm going to
just read us lied to you so I am

3
00:00:11,460 --> 00:00:15,860
required by in about a law to tell you I
am so I'm rocking there's my email

4
00:00:15,860 --> 00:00:23,689
address and yes it is actually J not our
middle name thing I actually grew up in

5
00:00:23,689 --> 00:00:27,260
tinseltown taxes and I was like 27
before I realized that my nickname could

6
00:00:27,260 --> 00:00:32,050
have been Jim Bob so gay anyway but
that's my email address and repeated at

7
00:00:32,049 --> 00:00:35,000
the end of the talk so that if you
decide it's actually interesting you an

8
00:00:35,000 --> 00:00:38,870
email me you can do so the rest of the
stuff is not really interesting except

9
00:00:38,870 --> 00:00:47,140
that I kind of have done this sort of
stuff before so you know the talks so I

10
00:00:47,140 --> 00:00:49,860
always wanted to do professional
presentation that started with Webster's

11
00:00:49,860 --> 00:00:53,809
Dictionary defines but there's no actual
definition of a correlation in webster's

12
00:00:53,809 --> 00:00:58,209
dictionary so what do I mean when I talk
about a correlation whitewater events

13
00:00:58,210 --> 00:01:04,409
events are all the little things that
you might care about right

14
00:01:04,409 --> 00:01:11,000
going on in your network a web request a
login anything like that anything can be

15
00:01:11,000 --> 00:01:16,229
modeled as an event right and event
correlation is extracting information

16
00:01:16,229 --> 00:01:21,320
from that aggregates set of events from
that stream of events right and that's

17
00:01:21,320 --> 00:01:26,149
what we're that's what we're going to
talk about during this talk and the gold

18
00:01:26,150 --> 00:01:30,180
this presentation specifically is to
introduce a new open source tool called

19
00:01:30,180 --> 00:01:37,170
Giles right and Giles is a compiler that
makes it easy to build of a correlation

20
00:01:37,170 --> 00:01:39,939
engine styles itself is not the bank
relation to help you build up a

21
00:01:39,939 --> 00:01:47,679
correlation engine teach someone to fish
vs giving him a fish kind of metaphor so

22
00:01:47,680 --> 00:01:50,869
it makes it easy to build the kind of
event correlation engines that we're

23
00:01:50,869 --> 00:01:56,659
talking about and it makes it easy to
find patterns defined by complex

24
00:01:56,659 --> 00:02:00,729
predicates so what I mean when I say
complex I don't mean difficult I mean

25
00:02:00,729 --> 00:02:05,939
multiple relationships right not simple
not just a will be right

26
00:02:05,939 --> 00:02:11,579
complex predicates in large constantly
changing data sets and that's also

27
00:02:11,580 --> 00:02:13,310
something that may be important

28
00:02:13,310 --> 00:02:17,959
to note constantly changing data sets
you know you often have in the sort of

29
00:02:17,959 --> 00:02:21,910
any sort of systems you might be able to
deal with large datasets but only

30
00:02:21,910 --> 00:02:26,410
through a very narrow window right so
the last five logins the last 10 minutes

31
00:02:26,410 --> 00:02:31,190
something like that right and i wanna
talk about engines that are holistic

32
00:02:31,190 --> 00:02:36,050
they deal with your entire dataset even
as changes trickle in a trickle alder

33
00:02:36,050 --> 00:02:42,349
you know how are they coming now and
then and this is this is the the gimmick

34
00:02:42,349 --> 00:02:48,260
Giles it makes it very easy to integrate
this sort of stuff into your existing

35
00:02:48,260 --> 00:02:52,269
environment right and I don't just mean
your existing software I mean you're

36
00:02:52,269 --> 00:02:56,730
programmers already know how to use
violence right and it's it's a little

37
00:02:56,730 --> 00:02:59,470
gimmicky it's not that can give you
actually read the blurb for the talk but

38
00:02:59,470 --> 00:03:06,140
it's it's pretty cool so before I talk
though about how Giles actually works i

39
00:03:06,140 --> 00:03:10,679
wanna talk a little bit about how it
came to be because that that informs the

40
00:03:10,680 --> 00:03:19,299
the design decisions why we designed it
the way we did so back in 2010-2011 I

41
00:03:19,299 --> 00:03:20,510
don't know long time ago

42
00:03:20,510 --> 00:03:27,390
CoreLogic was contracted by DARPA the
Defense Advanced Research Projects

43
00:03:27,390 --> 00:03:31,578
Agency they invented the internet along
with al gore

44
00:03:31,579 --> 00:03:37,220
never gets old timely timely joke was
contracted by DARPA as part of a

45
00:03:37,220 --> 00:03:43,139
multi-year contract as part of these
cyber insider program center to develop

46
00:03:43,139 --> 00:03:46,700
a product that protected the

47
00:03:46,700 --> 00:03:50,679
the software development lifecycle right
specifically it was monitoring for

48
00:03:50,680 --> 00:03:56,930
malicious insiders in your source code
management system so not looking like

49
00:03:56,930 --> 00:03:59,450
shellcode in your source code anything
like that but looking instead for

50
00:03:59,450 --> 00:04:05,230
nefarious behaviour in your source code
management system right and that product

51
00:04:05,230 --> 00:04:08,750
was called dirt which stands for
detecting inside a repository hampering

52
00:04:08,750 --> 00:04:11,510
its fascinating product is completely
awesome but it's it's not the subject of

53
00:04:11,510 --> 00:04:19,089
this talk yet sort of but dirt you know
delivered as an appliance it was actual

54
00:04:19,089 --> 00:04:22,500
physical thing that went there because
people didn't want their source code you

55
00:04:22,500 --> 00:04:25,200
know leaving their their network which
which makes sense

56
00:04:25,200 --> 00:04:31,510
and dirt modeled the source code
repositories as sequences change events

57
00:04:31,510 --> 00:04:35,640
right so it wasn't just looking at the
source code repository it was actually

58
00:04:35,640 --> 00:04:38,360
saying okay now this change now this
change change change change change

59
00:04:38,360 --> 00:04:43,510
change right so we need to have a
correlation engine right but because it

60
00:04:43,510 --> 00:04:46,789
was an appliance and because it was not
gonna be under our direct control you

61
00:04:46,790 --> 00:04:50,420
know it had some pretty strict
requirements from the engineering

62
00:04:50,420 --> 00:04:55,470
standpoint it needed to be able to run
unattended needed to be able to handle

63
00:04:55,470 --> 00:05:03,130
large amounts of data right reliably and
it needed to integrate well impose very

64
00:05:03,130 --> 00:05:07,719
few additional requirements because it
was just one piece of a bigger puzzle

65
00:05:07,720 --> 00:05:14,450
right and so that ended up being a tool
called Giles Giles is now open source

66
00:05:14,450 --> 00:05:20,710
and you know you can download it that's
awesome so that's what we're gonna talk

67
00:05:20,710 --> 00:05:24,289
about his job so how does Giles see the
world

68
00:05:24,290 --> 00:05:31,440
Brian Giles sees the world as a
collection of fact right and I realize

69
00:05:31,440 --> 00:05:34,270
that we talked about events in events
and facts are interchangeable you can

70
00:05:34,270 --> 00:05:38,010
use the terms interchangeably we call
them fax because Giles can be used to

71
00:05:38,010 --> 00:05:41,250
build things that are having correlation
instance right ankle also describing

72
00:05:41,250 --> 00:05:47,370
events but it's just a statement that's
true in our problem domain whatever our

73
00:05:47,370 --> 00:05:51,350
problem domain it's right so like you
know could be a statement about a person

74
00:05:51,350 --> 00:05:55,660
or an object of suzanne is master could
be an event something that happened like

75
00:05:55,660 --> 00:06:00,230
train arrived a platform nine and three
quarters which you know I'm not big dork

76
00:06:00,230 --> 00:06:06,950
that's awesome train i guess its ok
whatever you know you can also state of

77
00:06:06,950 --> 00:06:11,060
things about notions like the user's
preferred languages you know Canadian

78
00:06:11,060 --> 00:06:17,110
French which isn't everybody's or more
salient to the kind of thing that we

79
00:06:17,110 --> 00:06:22,270
deal with it depends on your network
right john doe walked into terminal 33

80
00:06:22,270 --> 00:06:26,030
at 5:10 right that's a that's a fact
that's something that we assert to be

81
00:06:26,030 --> 00:06:30,760
true and then just repeating myself
that's we call them back

82
00:06:30,760 --> 00:06:37,360
so all of the facts that we're dealing
with right at one time is called are

83
00:06:37,360 --> 00:06:43,000
working memory right and so here's
here's a collection of facts that we got

84
00:06:43,000 --> 00:06:47,370
from file called bar logins which
probably doesn't really exist but you

85
00:06:47,370 --> 00:06:50,110
know whatever and that's that's
important facts can come from anywhere

86
00:06:50,110 --> 00:06:54,980
we don't care where they come from we
just care that they are what they are so

87
00:06:54,980 --> 00:06:57,840
here's this collection of facts just
kind of a bag you know we can extract

88
00:06:57,840 --> 00:07:01,250
some information out of it you know we
can see that there's a failed login we

89
00:07:01,250 --> 00:07:05,260
can see that there's no user names that
sort of thing but what we really want to

90
00:07:05,260 --> 00:07:08,990
do is is get as much information as
possible out of expects right I got to

91
00:07:08,990 --> 00:07:14,920
the point of having correlation so what
we can do is we impose structure on

92
00:07:14,920 --> 00:07:21,820
facts right so we immediately becomes
much more clear what we're talking about

93
00:07:21,820 --> 00:07:27,260
right and the preferred nomenclature
dude 44 that is feels those are the

94
00:07:27,260 --> 00:07:32,409
fields of facts right and so you can
immediately see that this is much more

95
00:07:32,410 --> 00:07:35,340
clear you have the status of the
username login time terminal all that

96
00:07:35,340 --> 00:07:39,330
good stuff right and and enjoy it even
goes one step further and actually

97
00:07:39,330 --> 00:07:43,070
imposes type information on those fields
right so you're not just dealing with

98
00:07:43,070 --> 00:07:46,750
login successful and can be whatever you
know that it's going to be a boolean

99
00:07:46,750 --> 00:07:50,540
right and the the type system is it's
very simple

100
00:07:50,540 --> 00:07:54,030
you know it's billion straying into real
you know nothing nothing crazy nothing

101
00:07:54,030 --> 00:07:58,119
complex and we'll get into it will get
into actual practical trials here in the

102
00:07:58,120 --> 00:08:00,850
second I just wanna make sure we're all
on the same page about the problem we're

103
00:08:00,850 --> 00:08:07,950
trying to solve but you know facts or
just data just information right the

104
00:08:07,950 --> 00:08:11,740
whole point of it is that we want to get
knowledge when extracting knowledge out

105
00:08:11,740 --> 00:08:16,600
of those facts you know and and how can
we do that while we do that by looking

106
00:08:16,600 --> 00:08:22,050
at patterns of facts by asking questions
by saying what sets of facts match a

107
00:08:22,050 --> 00:08:25,680
given pattern right and you know
sometimes all you gotta do is do crap

108
00:08:25,680 --> 00:08:29,420
right i mean you could too great for
failed logins and you immediately know

109
00:08:29,420 --> 00:08:32,520
if you delete all your help markets
right that's just it's very simple

110
00:08:32,520 --> 00:08:36,210
you're correlating events there but it's
just one event at a time which is just

111
00:08:36,210 --> 00:08:40,979
fine and I'm a big fan of doing the
least amount necessary I'm very lazy so

112
00:08:40,979 --> 00:08:43,099
you know group works

113
00:08:43,099 --> 00:08:46,639
more power to you please grab but that's
not what I thought that's what I'm

114
00:08:46,639 --> 00:08:51,259
talking about when I say complex event
correlation right let's make it let's

115
00:08:51,259 --> 00:08:55,279
make it a little bit more complex right
now we're gonna say we don't want to see

116
00:08:55,279 --> 00:08:59,959
one failed login all the failed logins
really wanna see things where you have

117
00:08:59,959 --> 00:09:06,329
some number of failed logins any given
time frame right and suddenly that makes

118
00:09:06,329 --> 00:09:10,508
things much more complex right and this
isn't even more complex than this but

119
00:09:10,509 --> 00:09:14,509
immediately we have to deal with
restoring state right we have to store

120
00:09:14,509 --> 00:09:17,850
the user name we have to store the start
time you know we have to our current

121
00:09:17,850 --> 00:09:21,329
count right so we're suddenly suddenly
it's a little bit more than just

122
00:09:21,329 --> 00:09:26,569
watching extreme events go by we have to
maintain some state on the back and and

123
00:09:26,569 --> 00:09:30,529
and it also starts raising some
questions like who clocked we use you

124
00:09:30,529 --> 00:09:36,319
know let's say for example the wall to
wall clock we can say oh this happens in

125
00:09:36,319 --> 00:09:37,430
five minutes

126
00:09:37,430 --> 00:09:43,050
three failed logins and five minutes but
what if one of those was too late right

127
00:09:43,050 --> 00:09:46,319
but if there is a network outage and
that never made it to our censored made

128
00:09:46,319 --> 00:09:50,729
it you know to let you know ten minutes
later we don't want to miss it right so

129
00:09:50,730 --> 00:09:56,000
we need to use the time field in the
records themselves and we do have to

130
00:09:56,000 --> 00:09:59,189
trust that our sensors populate their
times correctly but if you can't trust

131
00:09:59,189 --> 00:10:04,509
them to do that you can trust to tell
you anything anyway and then went to be

132
00:10:04,509 --> 00:10:09,410
reset the timer right looking at this
example here let's say let's say that he

133
00:10:09,410 --> 00:10:14,980
wanted to see two failed logins in five
minutes right there are three ways that

134
00:10:14,980 --> 00:10:18,720
you can calculate to fail bargains in
five minutes of the first to you could

135
00:10:18,720 --> 00:10:24,100
have a second to the first and the last
night so do we want all those we want

136
00:10:24,100 --> 00:10:28,579
just one you know that there's no right
or wrong answer there but you know if

137
00:10:28,579 --> 00:10:33,930
you're like me and I know I am i wanna
see it all right so that's that's not

138
00:10:33,930 --> 00:10:38,010
there's no right or wrong answer but
that's the right answer to everything

139
00:10:38,010 --> 00:10:42,970
but now let's do something really
complex let's ask a very complex

140
00:10:42,970 --> 00:10:49,180
question about a set of facts right we
wanna see and this is a world problem

141
00:10:49,180 --> 00:10:53,849
because I can't draw we want to see if
somebody may be sharing their password

142
00:10:53,850 --> 00:10:58,850
right or or somebody's password has been
compromised so let's look at Bob Bob

143
00:10:58,850 --> 00:11:02,750
work somewhere where there are physical
terminals but you can't login to

144
00:11:02,750 --> 00:11:07,810
simultaneously there you can remote into
them right and I worked it up for Whole

145
00:11:07,810 --> 00:11:11,130
Foods for a long time in their corporate
headquarters during networking stuff and

146
00:11:11,130 --> 00:11:13,820
so when I was thinking of this i was
thinkin cash registers Ryan like you

147
00:11:13,820 --> 00:11:17,440
don't want people logging into two
different ones because the world might

148
00:11:17,440 --> 00:11:22,130
end but it could be anything else you
have done better so if bob logs into

149
00:11:22,130 --> 00:11:28,450
terminal one at 1:47 and in terminal 2
149 and we know that terminals one into

150
00:11:28,450 --> 00:11:34,690
our are geographically separated right
in space and he did it in such a short

151
00:11:34,690 --> 00:11:40,280
span of time then we can conclude that
at least one of those logins was

152
00:11:40,280 --> 00:11:44,810
impersonated right at least one of those
logins was not be ok and so this this is

153
00:11:44,810 --> 00:11:47,859
getting a little more complex this isn't
just looking at you know one event at a

154
00:11:47,860 --> 00:11:52,650
time or anything like that it's actually
looking at more complex things so let's

155
00:11:52,650 --> 00:11:57,180
let's see how it would actually asked
that question right what we say so I

156
00:11:57,180 --> 00:12:01,189
would say well there's log in fact one
right bob logged in there is a terminal

157
00:12:01,190 --> 00:12:09,790
one at 1:47 logged in again at terminal
2 149 and then we can ask ourselves

158
00:12:09,790 --> 00:12:13,160
okay and and by the way my point I was
making a slide my four-year-old pointed

159
00:12:13,160 --> 00:12:16,510
out that the slide does look like a but
I know what looked like a but you don't

160
00:12:16,510 --> 00:12:23,220
need to tell me so thank you James for
saying that but it does anyway but it's

161
00:12:23,220 --> 00:12:28,560
a comparison right we're looking at the
comparison so we're asking a complex

162
00:12:28,560 --> 00:12:32,520
question the question is these these
collections this conjunction of products

163
00:12:32,520 --> 00:12:38,010
down here at the bottom we want to see
user one equals user to we don't care if

164
00:12:38,010 --> 00:12:42,700
its success or fail we might but in this
case we don't terminal one can't equal

165
00:12:42,700 --> 00:12:47,980
terminal 2 and time one is less than or
equal the time to time do you mind this

166
00:12:47,980 --> 00:12:49,670
time what is less than or equal to two
min

167
00:12:49,670 --> 00:12:52,949
time which you know whatever that is we
could calculate that dynamically we

168
00:12:52,950 --> 00:12:58,360
could set it at that point as that's how
we ask that question right so we'd asked

169
00:12:58,360 --> 00:13:02,710
the question but now how do we get the
answer out how do we how do we know how

170
00:13:02,710 --> 00:13:05,540
do we get our answer back from from
whatever our system is in this case

171
00:13:05,540 --> 00:13:10,110
child and there's no different systems
do it in different ways but the way

172
00:13:10,110 --> 00:13:15,630
Giles does it is very simple it just
asserts that right so you're working

173
00:13:15,630 --> 00:13:20,780
memory after it sees these two facts
with that comparison down there it will

174
00:13:20,780 --> 00:13:24,339
suddenly get a new fact that you're
working memory that's an alert and

175
00:13:24,340 --> 00:13:27,990
there's nothing magical or just a name
that there's no predefined alert or

176
00:13:27,990 --> 00:13:30,660
anything like that and so that right
there

177
00:13:30,660 --> 00:13:36,449
opens up sort of the general working
mechanism of how you work with with the

178
00:13:36,450 --> 00:13:41,290
sort of engines you the facts and then
you occasionally ask hey is there

179
00:13:41,290 --> 00:13:44,410
anything interesting that happened any
new facts that I care about right like

180
00:13:44,410 --> 00:13:50,199
any new works and so this this thing at
the bottom here and I really wish that I

181
00:13:50,200 --> 00:13:53,550
had put like a circle around it or
something but i didnt this thing at the

182
00:13:53,550 --> 00:14:01,260
bottom is called a rule right are you
really feel like I said that funny the

183
00:14:01,260 --> 00:14:05,680
things that comparison is called the
predicate and the assertion of that new

184
00:14:05,680 --> 00:14:10,130
facts called the action right so when
you're predicate matches your action

185
00:14:10,130 --> 00:14:13,810
fires and you get a new event or
whatever you can also press event and

186
00:14:13,810 --> 00:14:18,400
other things but you know whatever so
rules our products plus actions also

187
00:14:18,400 --> 00:14:22,010
called production control system that
the global

188
00:14:22,010 --> 00:14:28,870
lots and lots of nomenclature there's so
many to choose from so now we got this

189
00:14:28,870 --> 00:14:31,810
idea of how we're doing it week we have
more questions though right

190
00:14:31,810 --> 00:14:36,449
like now that things got a little more
complex we have to ask ok do we want to

191
00:14:36,450 --> 00:14:42,340
detect everything like I said I do I do
want to take them so how do we detect

192
00:14:42,340 --> 00:14:46,520
all of those impersonating audience
right so let's look at what's look at

193
00:14:46,520 --> 00:14:51,410
Bobby long senator Milan got lost a lot
he does get a lot of logging in many

194
00:14:51,410 --> 00:14:55,949
logs and terminal to be logged in again
at terminal 2 right and you'll notice

195
00:14:55,950 --> 00:15:00,330
there's only one minute difference
between each right well if we only kept

196
00:15:00,330 --> 00:15:02,410
track of say the last of the door

197
00:15:02,410 --> 00:15:05,529
or you know we just watched as a
sequence or something the most we would

198
00:15:05,529 --> 00:15:09,709
get is one word of this right we were
just getting to work for the first log

199
00:15:09,709 --> 00:15:14,500
into terminal 2 because the second log
into Terminal two isn't bad if we only

200
00:15:14,500 --> 00:15:18,730
have a little bit of state because
remember our our rule says the two

201
00:15:18,730 --> 00:15:22,829
terminal names can be equal right so
that this is not what we want what we

202
00:15:22,829 --> 00:15:29,378
want is something more like that right
where we detect both of those more just

203
00:15:29,379 --> 00:15:35,660
like it and and you know and logins is
just an example you know I was playing

204
00:15:35,660 --> 00:15:39,269
around with this I credit card swipes
you know like if I swipe my credit card

205
00:15:39,269 --> 00:15:43,879
in Austin Texas and then I swipe again
in Las Vegas again in Las Vegas maybe

206
00:15:43,879 --> 00:15:46,589
something's up you know just because I
did it twice in Las Vegas doesn't mean

207
00:15:46,589 --> 00:15:50,000
you should play in Vegas always wins

208
00:15:50,000 --> 00:15:55,379
so so we wanted to take that right so
this is a question that we need to ask

209
00:15:55,379 --> 00:16:00,430
you know how do we protect both of those
malicious logins are suspicious

210
00:16:00,430 --> 00:16:06,829
suspicious to cast aspersions and then
how do we handle out of air out of order

211
00:16:06,829 --> 00:16:14,599
reporting right so let's say that the
building that has terminal 1 and it will

212
00:16:14,600 --> 00:16:19,220
call that building one has a network
outage oK so it's not it's not sending

213
00:16:19,220 --> 00:16:23,630
walking events to our central collector
right but the building has terminal to

214
00:16:23,630 --> 00:16:29,339
building a is Sunday if it's right it's
never going to be so what happens is it

215
00:16:29,339 --> 00:16:31,050
comes in order

216
00:16:31,050 --> 00:16:36,000
ok are coming out of order so you see
the two logins from terminal 2 before

217
00:16:36,000 --> 00:16:42,980
you see the logon from terminal one
right and that's obviously you know do

218
00:16:42,980 --> 00:16:46,259
we want to miss that I mean in some
situations that might be fine but you

219
00:16:46,259 --> 00:16:49,649
know not on my watch you know I wanna
see that you know when when network when

220
00:16:49,649 --> 00:16:52,910
building ones network connectivity comes
back up I want those events to come in

221
00:16:52,910 --> 00:16:56,059
this fax to come in and i wanna
correlate everything and I want to say

222
00:16:56,059 --> 00:17:02,019
hey I saw two suspicious logins right we
still want to see that

223
00:17:02,019 --> 00:17:06,520
but there's still even more how do you
handle retraction of facts right do you

224
00:17:06,520 --> 00:17:11,599
handle it all maybe you know although
actually there is if you don't handle

225
00:17:11,599 --> 00:17:16,198
retraction of facts doing out of order
stuff it's difficult to say for example

226
00:17:16,199 --> 00:17:21,169
manager in building one says oh yeah you
know I was testing something I used bob

227
00:17:21,169 --> 00:17:24,480
login that wasn't militias that wasn't
suspicious and so you want to retract

228
00:17:24,480 --> 00:17:30,669
that logon event from building one right
but when you do that you want to go away

229
00:17:30,669 --> 00:17:34,059
for those both of those words right you
don't want to leave you know spurious

230
00:17:34,059 --> 00:17:39,320
alerts so how do you handle that how do
you handle that particular thing and

231
00:17:39,320 --> 00:17:42,678
then how do you scaled out how do you
scaled out to thousands or millions of

232
00:17:42,679 --> 00:17:47,080
these facts floating around right and
the answer at least for the purposes of

233
00:17:47,080 --> 00:17:51,620
this talk is dials right now that we
know about the correlation we've come

234
00:17:51,620 --> 00:17:57,270
such a long way you when I so Giles this
is this is the cool thing about outright

235
00:17:57,270 --> 00:18:00,870
remember all of the engineering
decisions we had to make a run

236
00:18:00,870 --> 00:18:05,539
unattended had to be DataSafe had to do
all this cool stuff right so you know

237
00:18:05,539 --> 00:18:12,149
that sounds a lot like a database right
and so that's what Giles Giles takes a

238
00:18:12,149 --> 00:18:17,639
description of an event correlation
engine and spits out a schema for a

239
00:18:17,639 --> 00:18:21,490
sequel database right at it you can use
a single database you want as long as

240
00:18:21,490 --> 00:18:27,510
you like and you take that database and
when you create a database from that

241
00:18:27,510 --> 00:18:33,450
schema that database is a complete
standalone no external dependencies no

242
00:18:33,450 --> 00:18:37,690
runtime dependencies nitro libraries
nothin correlation that you interact

243
00:18:37,690 --> 00:18:41,720
with just by inserting and deleting and
selecting going out to do complex stuff

244
00:18:41,720 --> 00:18:48,690
is great and that's that immediately
wins some engineering winds to this

245
00:18:48,690 --> 00:18:51,789
right this approach immediately as
someone's right because you're

246
00:18:51,789 --> 00:18:54,559
programmers your programming team
already knows how to interact the

247
00:18:54,559 --> 00:18:58,250
database if they don't then they should
probably because these databases a lot

248
00:18:58,250 --> 00:19:02,840
you can use pretty much whatever
language you want right pretty much

249
00:19:02,840 --> 00:19:06,439
every programming language has bindings
for four databases right you might not

250
00:19:06,440 --> 00:19:11,020
have bindings for rules or something
like that some other big rule engine in

251
00:19:11,020 --> 00:19:14,918
your language you know because you're
you know you're you're also many writing

252
00:19:14,919 --> 00:19:19,879
haskell that's great but you know my
poor colleague who died during a vigil

253
00:19:19,879 --> 00:19:27,769
FoxPro that was painful and actually a
cool languages that nobody uses

254
00:19:27,769 --> 00:19:33,359
rubble rubble no gotten out a fine
whatever else was almost raped in

255
00:19:33,359 --> 00:19:39,009
trouble but it's it's not it's written
written in a beautiful dialect of Ruby

256
00:19:39,009 --> 00:19:46,700
that so much better than regular review
called Python and so those engines that

257
00:19:46,700 --> 00:19:51,039
dials creates they handle out of water
resources the fact that it's just using

258
00:19:51,039 --> 00:19:54,929
the media you get all those great
benefits just for free you also get you

259
00:19:54,929 --> 00:19:58,249
know it crafts crafts the steam in such
a way that you get out of order

260
00:19:58,249 --> 00:20:01,859
assertions are handled cleanly you scale
to millions of these facts because

261
00:20:01,859 --> 00:20:04,949
databases do a lot of works gone into
making them scalable right so you pick

262
00:20:04,950 --> 00:20:10,919
up on all that scalability just for free
you handle factor traction consistently

263
00:20:10,919 --> 00:20:15,720
very important and this and this is
really need like this is this is one of

264
00:20:15,720 --> 00:20:19,820
my favorite little Jimmy's you also the
engines can reveal their reasoning

265
00:20:19,820 --> 00:20:23,330
process to you right which means that
you know not only will they give you an

266
00:20:23,330 --> 00:20:29,090
answer but they'll tell you how they got
it right so in your face Prolog programs

267
00:20:29,090 --> 00:20:34,168
that you know so and then run
efficiently in time right end and this

268
00:20:34,169 --> 00:20:37,320
is important like a lot of people seem
to think that this is just doing some

269
00:20:37,320 --> 00:20:41,830
sort of complex queries during a joint
or something you know it does more than

270
00:20:41,830 --> 00:20:48,158
that it's much faster as a result and
I'll talk about that in a minute to a

271
00:20:48,159 --> 00:20:53,429
live demo before to a live demo demo god
help me before I do like them i wanna

272
00:20:53,429 --> 00:20:56,179
talk real quick about you know I want to
be very clear about this whole

273
00:20:56,179 --> 00:21:01,769
retraction reassertion thing right so
Giles engines have what's called the

274
00:21:01,769 --> 00:21:06,100
Giles guarantee right it's a fundamental
guarantee of how the engines work pretty

275
00:21:06,100 --> 00:21:09,748
pretty bald engine type there's the
developers and I'll has like statistical

276
00:21:09,749 --> 00:21:14,539
engines and stop the satellite but for
the default engine type this there's

277
00:21:14,539 --> 00:21:16,710
always works so

278
00:21:16,710 --> 00:21:21,270
when you give it a fact from outside the
engine right from a sensor from a person

279
00:21:21,270 --> 00:21:23,980
whatever we call that an axiom

280
00:21:23,980 --> 00:21:27,330
and that end and that's basically saying
that it isn't the fact that the engine

281
00:21:27,330 --> 00:21:32,220
produced as the result of some sort of
right like it was it came from outside

282
00:21:32,220 --> 00:21:39,070
the entrance and the guarantee is is
twofold all facts that can be derived

283
00:21:39,070 --> 00:21:43,889
from the current set of axioms given the
current rule set will be derived and no

284
00:21:43,890 --> 00:21:49,220
facts that cannot be derived from the
coral set right so you're never gonna

285
00:21:49,220 --> 00:21:54,529
get something that is unprovable right
everything everything in a Giles engine

286
00:21:54,529 --> 00:21:57,649
can be proved ok so in your face
Bertrand Russell

287
00:21:57,649 --> 00:22:04,520
so there should have been a delay here
ok so just give an example of how

288
00:22:04,520 --> 00:22:10,570
consistently this is applied let's say a
comes in right and you get rule one rule

289
00:22:10,570 --> 00:22:15,610
one sees fact that day and as its action
it creates a new fact be okay so that's

290
00:22:15,610 --> 00:22:18,709
that's pretty standard and then later on
down the line

291
00:22:18,710 --> 00:22:26,149
taxi comes along and will to seize facts
and rule to action is to retract back

292
00:22:26,149 --> 00:22:34,949
Ryan lasers or to retract back at what
happens back he is gone because fact he

293
00:22:34,950 --> 00:22:38,440
is no longer supportable because
something else destroyed fact that right

294
00:22:38,440 --> 00:22:42,190
now here's here's the kicker this is
what's really fun and I i wish i had it

295
00:22:42,190 --> 00:22:46,529
was rated this anybody want to guess
what happened in fact see got retracted

296
00:22:46,529 --> 00:22:53,340
becomes back a comeback in the becomes
back everything is consistent though

297
00:22:53,340 --> 00:22:58,709
it's it's it's really need it also I
pull my hair out my glorious luxurious

298
00:22:58,710 --> 00:23:01,570
hair pulled out over the network right

299
00:23:01,570 --> 00:23:06,460
ok now who wants to see a real live demo
everybody but me right because you know

300
00:23:06,460 --> 00:23:12,480
very nervous very nerve-wracking ok so
let's say here I've got two windows open

301
00:23:12,480 --> 00:23:17,960
alright so let's look at Giles engine

302
00:23:17,960 --> 00:23:22,809
and I'm gonna open up the house engineer
engines can be written in a variety of

303
00:23:22,809 --> 00:23:27,220
formats but the animal front end is is
the best supported and that was that was

304
00:23:27,220 --> 00:23:33,740
an executive decision because we wanted
to have engines be manipulative oil with

305
00:23:33,740 --> 00:23:37,190
external tools right you can write you
give your partner to write dials and

306
00:23:37,190 --> 00:23:44,470
useful so can every see this I don't my
vision is terrible so tell me if this is

307
00:23:44,470 --> 00:23:48,409
not if this is too small it could ever
be good if you give you can't tell me

308
00:23:48,409 --> 00:23:49,690
I'm serious

309
00:23:49,690 --> 00:23:55,830
ok all right so insurance option
description right and not told you in

310
00:23:55,830 --> 00:23:58,350
suspense but we're gonna write the
engine that we use for the examples

311
00:23:58,350 --> 00:24:03,908
right we're good attacked blog Institute
overtime and there are better ways to do

312
00:24:03,909 --> 00:24:06,690
this like you know I'm sure some of you
out there are deep thinking oh I could

313
00:24:06,690 --> 00:24:09,480
do this better yes you most certainly
could this is not the best way to do it

314
00:24:09,480 --> 00:24:14,370
but it's the easiest ok so there is no
description it's pretty simple just says

315
00:24:14,370 --> 00:24:19,889
you know this and that's just for that
for your benefit it done then compiled

316
00:24:19,890 --> 00:24:26,289
anywhere that we define the kinds of
facts that we care about so we're going

317
00:24:26,289 --> 00:24:31,000
to find three kinds of facts and call
these fact classes first one we just

318
00:24:31,000 --> 00:24:34,100
going to fight preferences and all that
is as we're gonna be able to set our

319
00:24:34,100 --> 00:24:37,428
minimum time that we don't hardcode it
thirty seconds or whatever right we can

320
00:24:37,429 --> 00:24:45,039
change it and then we're going to find
login record right and that's that's the

321
00:24:45,039 --> 00:24:48,549
login record that we've been dealing
with right so user names along internal

322
00:24:48,549 --> 00:24:52,408
auditor right and then finally we're
gonna find the clouds which is just what

323
00:24:52,409 --> 00:24:57,130
we sped out where we actually detect
suspicious logins and then you have some

324
00:24:57,130 --> 00:25:05,000
set of rules the only rule that we have
is logged in two different places right

325
00:25:05,000 --> 00:25:09,429
the rule itself also has a description
you can see that there's some magic

326
00:25:09,429 --> 00:25:17,549
going on there with this little bang
expert here so all that is if you

327
00:25:17,549 --> 00:25:24,918
haven't used only with tags which are
not anything like HTML tags are but that

328
00:25:24,919 --> 00:25:30,250
thang expert just says ok you know
process this differently and the Giles

329
00:25:30,250 --> 00:25:34,650
engine the dogs compiler when it seems
that it passes the it passes the string

330
00:25:34,650 --> 00:25:38,650
like this one or more just be progress
parses a strike by Amal but when child

331
00:25:38,650 --> 00:25:42,640
sees it happens it to a little shopping
yard parser operator precedence for sure

332
00:25:42,640 --> 00:25:47,680
to do math math so far in this case
string concatenation would you like math

333
00:25:47,680 --> 00:25:52,230
with strings so you can see there you
got this little you've got this little

334
00:25:52,230 --> 00:25:58,880
pearl ask dollar username going on right
that's a local variable assigning

335
00:25:58,880 --> 00:26:05,610
somewhere local variables are how we do
correlation between events right between

336
00:26:05,610 --> 00:26:13,149
thats ok every set of facts every set of
facts that matches the given signature

337
00:26:13,150 --> 00:26:18,290
gets its own instance of local variables
right excluding the empty set and ready

338
00:26:18,290 --> 00:26:21,500
made my interface Bertrand Russell joke
but her face again Bertrand Russell

339
00:26:21,500 --> 00:26:28,680
doesn't count here so and then you have
every engine has a match

340
00:26:28,680 --> 00:26:34,550
all right and all this is and you have
match all and matching done and then the

341
00:26:34,550 --> 00:26:37,760
developer version also out some other
crazy stuff like Ricky to match son and

342
00:26:37,760 --> 00:26:41,410
once again I don't want i dont wanna
sell anything that doesn't exist yet so

343
00:26:41,410 --> 00:26:47,620
right now imagine on which as the name
implies is everything for that one and

344
00:26:47,620 --> 00:26:52,050
then if any of those methods and you
don't match when you get in this little

345
00:26:52,050 --> 00:26:57,270
little dash here is just a gamble was on
a list so we've got a list of facts to

346
00:26:57,270 --> 00:26:59,600
match so first we go about your
preferences

347
00:26:59,600 --> 00:27:03,750
right meaning which is just a little
human readable string that we can spit

348
00:27:03,750 --> 00:27:07,040
out later that says this is what we mean
when we see this fact right is what this

349
00:27:07,040 --> 00:27:14,120
means to us and then we assign something
local variable called time interval

350
00:27:14,120 --> 00:27:20,219
using the fields of that event right of
that fact and so that's what this little

351
00:27:20,220 --> 00:27:25,910
asshole character over here means the
care it means extract the field from

352
00:27:25,910 --> 00:27:31,080
this from this event so we're saying
here meantime you know when you see a

353
00:27:31,080 --> 00:27:34,449
preference in fact grab them in time out
of its tough interminable and this can

354
00:27:34,450 --> 00:27:37,510
be more complex like it doesn't have to
be there are you could do that

355
00:27:37,510 --> 00:27:41,990
you can you know do that I matter in a
blah blah blah you can do it you can you

356
00:27:41,990 --> 00:27:44,820
crazy crazy stuff that matter it's an
expression but in this case the

357
00:27:44,820 --> 00:27:52,399
expression is just went on and then we
want our first login record right and

358
00:27:52,400 --> 00:27:55,990
remember there's no there's no checking
on air travel log on record we extract

359
00:27:55,990 --> 00:27:59,800
the username the terminal in a long time
right now we stopped in local variables

360
00:27:59,800 --> 00:28:06,419
again and then the magic happens with
the magic magic part says now we look

361
00:28:06,420 --> 00:28:10,960
for another walk and record this is this
a walk in fact to write and we attach a

362
00:28:10,960 --> 00:28:16,560
predicate to this one right and it says
at the depot products just everything so

363
00:28:16,560 --> 00:28:20,490
but in this case it's not even try to
get this matches only certain things and

364
00:28:20,490 --> 00:28:26,700
this is an encoding that comparison
table that i showed earlier right

365
00:28:26,700 --> 00:28:31,570
username username and you see how we're
looking for comparing the field to the

366
00:28:31,570 --> 00:28:36,740
local variable so the field user name of
our second song and record is equal to

367
00:28:36,740 --> 00:28:39,430
global variable user name that we
extracted from our first login record

368
00:28:39,430 --> 00:28:45,990
terminal does not equal terminal one
baggage time is greater than or equal to

369
00:28:45,990 --> 00:28:49,330
someone and then login time is less than
an all-time one-plus time interval right

370
00:28:49,330 --> 00:28:55,199
and then we have our action which is
just assert a new art right and there's

371
00:28:55,200 --> 00:29:00,110
a message so that you know hopefully
hopefully that doesn't look like super

372
00:29:00,110 --> 00:29:06,030
scary the syntax is not exceptionally
beautiful the original version had a I

373
00:29:06,030 --> 00:29:08,060
don't know if you can tell I like
writing compilers the original version

374
00:29:08,060 --> 00:29:13,310
had a over on syntax and everybody was
like our overall that's that's what I've

375
00:29:13,310 --> 00:29:17,960
never heard of it the syntax of 70 so we
don't get to do that anymore but one day

376
00:29:17,960 --> 00:29:26,150
one day to be over on texts were overrun
like everybody is a picnic Nicklaus

377
00:29:26,150 --> 00:29:32,220
where it has galvanized ok so I like
programming languages alright so what's

378
00:29:32,220 --> 00:29:39,800
compile that engine we're gonna compilat
example sequel that's a shout of GCC and

379
00:29:39,800 --> 00:29:43,530
pulling example yeah I'm old and let's
watch it not work because it's a live

380
00:29:43,530 --> 00:29:47,530
demo ok

381
00:29:47,530 --> 00:29:52,120
so now and just give me an idea let's
look at example sequel and when I say

382
00:29:52,120 --> 00:29:57,090
we've got a couple lines of it is intact
by large you got you just got 1600 lines

383
00:29:57,090 --> 00:30:01,629
of people that you are glad you don't
have to write so what's actually now

384
00:30:01,630 --> 00:30:07,250
create we're gonna we're gonna create
our own little not here right so I

385
00:30:07,250 --> 00:30:12,820
created a scripts and very very simple
all it does is sit there and select out

386
00:30:12,820 --> 00:30:13,770
alerts

387
00:30:13,770 --> 00:30:25,320
this is not seem dim sorry about her
maybe ok so I parts from the database

388
00:30:25,320 --> 00:30:31,200
and Justin away for just keeps like so
what's look out our words to be actually

389
00:30:31,200 --> 00:30:32,700
exist in now

390
00:30:32,700 --> 00:30:36,320
okay so it's actually create a real
quick you'll notice that that is just a

391
00:30:36,320 --> 00:30:40,689
regular old sequel light and Sanchez I'm
not gonna do anything special nothing up

392
00:30:40,690 --> 00:30:50,330
my sleeve and I'm gonna read in do as my
brother laptop and is like the world's

393
00:30:50,330 --> 00:30:56,949
slowest hard drive so just forget me not
want to go there we go and now it start

394
00:30:56,950 --> 00:31:02,930
watching for alerts which thankfully
there aren't any right now to be really

395
00:31:02,930 --> 00:31:07,220
confusing if their work ok now look at
me I'm going to start interacting with

396
00:31:07,220 --> 00:31:12,630
this completely normal database as if it
were just in fact the database so what's

397
00:31:12,630 --> 00:31:18,600
new what's inside our preferences first
ride so let's do preferences if I

398
00:31:18,600 --> 00:31:22,639
misspelled something lol cuz I don't
have to go back in time but i dont vs

399
00:31:22,640 --> 00:31:23,890
facts with him in time

400
00:31:23,890 --> 00:31:32,650
time six thirty 30 seconds no alerts you
know which is once again good and then

401
00:31:32,650 --> 00:31:38,220
now it's Bob login here

402
00:31:38,220 --> 00:31:42,250
anything magic I'm not doing anything
complex undertaking an answer I don't

403
00:31:42,250 --> 00:31:51,800
have to do anything crazy like that user
login times and terminal and let's also

404
00:31:51,800 --> 00:31:59,430
named Bob Bob Bob he walked out without
being like early in the morning on

405
00:31:59,430 --> 00:32:05,170
January 1st 1970 we're doing Unix epoch
so yeah so that's when he walked in it

406
00:32:05,170 --> 00:32:09,330
was a successful login and he walked
into terminal 1

407
00:32:09,330 --> 00:32:15,389
all right now there's no alerts notice
no alerts ok now what happened login

408
00:32:15,390 --> 00:32:28,600
again at 10:29 to terminal to downtown
know bob's password may be compromised

409
00:32:28,600 --> 00:32:30,449
right and there you go

410
00:32:30,450 --> 00:32:34,620
that that's the magic of trials right
there which ok remember remember in the

411
00:32:34,620 --> 00:32:40,080
in the iPad 2 iPad demo when they made
working with spreadsheets with your

412
00:32:40,080 --> 00:32:45,620
fingers like awesome I just did that was
quite so called so so yes this is how

413
00:32:45,620 --> 00:32:49,159
this is basically how it works you know
so so think about it for a second killer

414
00:32:49,160 --> 00:32:53,110
programmers instantly pick those up yes
they can you know you can instantly

415
00:32:53,110 --> 00:32:58,219
integrate this anywhere you want so now
let's say ok you know I'm getting a lot

416
00:32:58,220 --> 00:33:02,520
of false positives with that thirty
second window it's not working for me I

417
00:33:02,520 --> 00:33:08,530
don't like that thirty second window so
let's do let's let's increases so does

418
00:33:08,530 --> 00:33:09,360
go away

419
00:33:09,360 --> 00:33:14,169
alert goes away

420
00:33:14,170 --> 00:33:22,320
history let's call it 60 seconds right
at work

421
00:33:22,320 --> 00:33:27,730
63 the live demo is going to kill me I
did that work

422
00:33:27,730 --> 00:33:37,360
immediate sorry twenty seconds there we
go astray 22nd going bald spot sorry

423
00:33:37,360 --> 00:33:40,990
basic arithmetic their ago did not come
back

424
00:33:40,990 --> 00:33:47,460
ok got I thought I thought algebra was
broken for a minute okay so alright so

425
00:33:47,460 --> 00:33:53,800
singular did not come back right is a no
no now I am in fact that that that I i

426
00:33:53,800 --> 00:33:57,180
do want that sixty second window so it's
going to come back but okay now let's

427
00:33:57,180 --> 00:34:01,990
look at what those actually look lines
and show off something else real quick

428
00:34:01,990 --> 00:34:06,900
and we can go back to playing through so
let's look at it it's more than just

429
00:34:06,900 --> 00:34:11,760
like let's look at what they look like
in the database themselves so let's look

430
00:34:11,760 --> 00:34:17,860
at the works that came out all right
there's there's the alert that we just

431
00:34:17,860 --> 00:34:21,950
saw over the other window so some of the
trials can do for dolls engines can do

432
00:34:21,949 --> 00:34:25,750
is we get asked to justify its reasoning
right it's not enough to say that bob

433
00:34:25,750 --> 00:34:29,090
costra may be compromised we're we're
forensic minded crowd we want to know

434
00:34:29,090 --> 00:34:30,690
why bob's password

435
00:34:30,690 --> 00:34:34,900
why why we think bob has been
compromised so we can do this we can

436
00:34:34,900 --> 00:34:45,970
justify we can ask the database to
justify the fact that I'm alright so

437
00:34:45,969 --> 00:34:48,959
there's no justification the engine
speeds out a large number three was

438
00:34:48,960 --> 00:34:52,330
produced by rule logged in to replace
says maybe compromise blah blah blah

439
00:34:52,330 --> 00:34:58,100
justification there was a minimum time
period as specified by preferences

440
00:34:58,100 --> 00:35:01,110
number for you know so we can
recursively go back and look at this

441
00:35:01,110 --> 00:35:05,370
number four which was the 100 block in
terminal one at a time one thousand

442
00:35:05,370 --> 00:35:08,520
whatever whatever the point is you can
do this for any fact you can say I want

443
00:35:08,520 --> 00:35:14,640
to know why you believe this to be true
and then you can recursively justify

444
00:35:14,640 --> 00:35:17,160
stuff now the the justification of the
other things as a particularly

445
00:35:17,160 --> 00:35:20,520
interesting is there axiomatic but just
to show it

446
00:35:20,520 --> 00:35:21,550
justification

447
00:35:21,550 --> 00:35:35,530
what we call them login record catalogue
record where I D equals want that back

448
00:35:35,530 --> 00:35:43,660
just as it was injected from external
sources right because that's where we

449
00:35:43,660 --> 00:35:49,560
came from external sources say yes so
that's pretty much how am i doing on

450
00:35:49,560 --> 00:35:55,340
time I've got to get a little bit more I
want to talk about and then I won't let

451
00:35:55,340 --> 00:36:00,430
me let me show you just one thing real
quick if i wana

452
00:36:00,430 --> 00:36:05,480
let's let's just wait while I have it up
let's let's break for about a minute is

453
00:36:05,480 --> 00:36:10,010
there any questions about the live demo
that would be best answered right this

454
00:36:10,010 --> 00:36:14,550
second don't be shy you can also ask at
the end of the talk but then I won't

455
00:36:14,550 --> 00:36:22,370
have it up on the screen so the engine
is entirely inside people like it it

456
00:36:22,370 --> 00:36:27,100
converted it is running inside that
explain exactly how the second basically

457
00:36:27,100 --> 00:36:36,610
turns into an immigration it triggers
exactly it uses a lot of traders and

458
00:36:36,610 --> 00:36:42,770
that's actually a great segue which is
actually read the words it is not

459
00:36:42,770 --> 00:36:49,850
pronounced like its spelled let's talk
about how we actually well as bad as I

460
00:36:49,850 --> 00:36:54,700
already talked about this I don't wanna
keep going but you could run a

461
00:36:54,700 --> 00:36:56,480
correlation engine anywhere you like

462
00:36:56,480 --> 00:37:00,040
which is everywhere pretty much
including my phone which is why the talk

463
00:37:00,040 --> 00:37:03,410
is called taking a correlation with you
because people like running things on

464
00:37:03,410 --> 00:37:07,410
their phones but people do my wife
doesn't just got our first smartphone

465
00:37:07,410 --> 00:37:10,589
like medical phones out like a
smartphone or just a phone now we don't

466
00:37:10,590 --> 00:37:18,430
call in any way just gotta for
smartphones like two months ago and you

467
00:37:18,430 --> 00:37:21,830
can use your existing database API write
your existing expertise you already know

468
00:37:21,830 --> 00:37:23,590
how to access databases

469
00:37:23,590 --> 00:37:29,340
you can have transactional semantics
this is actually really cool that Giles

470
00:37:29,340 --> 00:37:33,120
guarantee I was telling you about every
time you insert a new fact you can do

471
00:37:33,120 --> 00:37:34,940
that inside a transaction

472
00:37:34,940 --> 00:37:38,940
indeed that when that that that
statement finishes all possible

473
00:37:38,940 --> 00:37:43,400
consequences of that fact have been
accounted for

474
00:37:43,400 --> 00:37:52,440
right like its its atomic transactional
semantics atomic and then the door is

475
00:37:52,440 --> 00:37:55,440
open source and commercial friendly so
please go do whatever you want to do

476
00:37:55,440 --> 00:38:06,940
with it it's it's really awesome right
now symbolizes the only database that

477
00:38:06,940 --> 00:38:12,060
support it there's a certain minimum set
of features the database has to support

478
00:38:12,060 --> 00:38:17,310
for this to work and Postgres I'm
currently researching Coast West Coast

479
00:38:17,310 --> 00:38:19,460
should be able to handle it just fine

480
00:38:19,460 --> 00:38:23,230
MariaDB and MySQL cannot handle it

481
00:38:23,230 --> 00:38:27,480
they they're they're trigger handling
just doesn't doesn't work right for this

482
00:38:27,480 --> 00:38:34,880
sort of thing Microsoft sequel might
work I don't know I never used it I will

483
00:38:34,880 --> 00:38:42,740
wait maybe people seem to like a $10,000
Allport adorable so it'll be great now

484
00:38:42,740 --> 00:38:46,410
that I like Oracle I'm not really sure
they're worth the money I just don't

485
00:38:46,410 --> 00:38:52,740
have to show you some 4,000 so just
power through this real quick

486
00:38:52,740 --> 00:38:58,609
obviously forensics you don't have to do
event correlation engines right Giles

487
00:38:58,609 --> 00:39:01,720
are thousands are actually instances
were called production rule systems

488
00:39:01,720 --> 00:39:06,450
which are the basis for a lot of expert
systems artificial intelligence tough

489
00:39:06,450 --> 00:39:10,859
action selection mechanisms blah blah
blah blah blah and so one of the cool

490
00:39:10,859 --> 00:39:14,970
ones his record linkage right so
remember that you have this this

491
00:39:14,970 --> 00:39:20,598
automatic guarantee of everything sort
of coming out in the wash right so what

492
00:39:20,599 --> 00:39:24,319
happens if you have a big collection of
documents and try to associate documents

493
00:39:24,319 --> 00:39:29,250
with people and you put in a rule that
says oh by the way today I want that a

494
00:39:29,250 --> 00:39:33,790
common nickname for robert is bob well
immediately not just for any documents

495
00:39:33,790 --> 00:39:37,430
that were added later but now documents
that have ever been added will say Obama

496
00:39:37,430 --> 00:39:41,640
oh that's also robert mckinley those two
records to get it right and happens you

497
00:39:41,640 --> 00:39:42,470
know more or less

498
00:39:42,470 --> 00:39:47,000
instantaneously log analysis and
correlation decision system diagnostic

499
00:39:47,000 --> 00:39:48,260
systems

500
00:39:48,260 --> 00:39:54,450
examples of the Giles source directory
is an expert system that detects reverse

501
00:39:54,450 --> 00:39:59,859
traffic flows in networks so if you say
this network as a security clearance of

502
00:39:59,860 --> 00:40:03,500
53 11:30 and then there's a
bidirectional connection between these

503
00:40:03,500 --> 00:40:07,760
three networks and blah blah blah you'll
get a large saying you can get traffic

504
00:40:07,760 --> 00:40:12,720
to this network by this route that you
didn't know about maybe so that's so

505
00:40:12,720 --> 00:40:17,919
cool stuff and if I have more time to
show you that that was called Targus

506
00:40:17,920 --> 00:40:22,270
Targus everything's a doctor who think
it's not as hard as it can obscure Buffy

507
00:40:22,270 --> 00:40:27,300
the Vampire Slayer joke as the name
dials so all the TARDIS also final of

508
00:40:27,300 --> 00:40:31,390
the doctor david gunn that alright so
performance you know so everybody asks

509
00:40:31,390 --> 00:40:36,700
you know how does this differ from those
running a sequel query right you know is

510
00:40:36,700 --> 00:40:39,480
this any faster than running a simple
green I'm gonna tell you the same thing

511
00:40:39,480 --> 00:40:46,810
I told them which is smoke bomb and run
away now it's so a regular database if

512
00:40:46,810 --> 00:40:50,710
you run a query and you already have
teeth at night in that database and you

513
00:40:50,710 --> 00:40:55,200
add and more than its gonna be on the
order of tea + in to check for new

514
00:40:55,200 --> 00:40:59,600
matches right every time whereas with
Giles and this is in the best case in

515
00:40:59,600 --> 00:41:02,569
the common case worst case it's just as
bad as the other thing you can write

516
00:41:02,570 --> 00:41:06,950
slow code in any language so don't don't
yell at me if this you know if you if if

517
00:41:06,950 --> 00:41:13,430
your engine does not perform at peak
efficiency but Giles advertises the cost

518
00:41:13,430 --> 00:41:20,810
of pattern matching over the cost of
insertion so adding and facts to a

519
00:41:20,810 --> 00:41:26,320
database to adults RTA has two packs
only takes time so if you have a million

520
00:41:26,320 --> 00:41:30,080
fact that one it still takes a lot of
times viewed inside of one back in the

521
00:41:30,080 --> 00:41:36,750
database with your facts right on on
average best case and it does that a

522
00:41:36,750 --> 00:41:42,160
magical algorithm called greedy and
before somebody else beyond this one too

523
00:41:42,160 --> 00:41:48,879
I have heard the 3d REIT rhett and ready
and it is I say REIT it's a Latin word

524
00:41:48,880 --> 00:41:53,380
if anybody out there and tell me how it
suppose to be pronounced because I i I

525
00:41:53,380 --> 00:41:58,160
just a treaty but it's probably ready
but i dont matter so

526
00:41:58,160 --> 00:42:02,480
so this crap I i'm not go into details
this crap is not meant to be

527
00:42:02,480 --> 00:42:05,730
illustrative of what actually happened
it is actually happening we're not gonna

528
00:42:05,730 --> 00:42:08,569
go over it is just to let you know that
there's something a little more magical

529
00:42:08,569 --> 00:42:15,700
happening under the hood this was
developed as part of the OPs 5 system

530
00:42:15,700 --> 00:42:21,288
expert system shell back in the
seventies I think now now now is later

531
00:42:21,289 --> 00:42:26,500
than that and what happens is it
basically built a discrimination network

532
00:42:26,500 --> 00:42:29,980
where you feed facts and they they
trickle down for this discrimination at

533
00:42:29,980 --> 00:42:34,609
work and then eventually I'll pops your
new facts right and that's that's what

534
00:42:34,609 --> 00:42:39,890
trials does Giles in a very real sense
Giles could be called an implementation

535
00:42:39,890 --> 00:42:43,710
of the Reedy algorithm in sequel lights

536
00:42:43,710 --> 00:42:47,140
language right at end when I say a very
real sense I mean literally like that's

537
00:42:47,140 --> 00:42:52,730
what its implementation of the algorithm
in sequel light struggling and so just

538
00:42:52,730 --> 00:42:56,319
you know it's it's these each one of
these little circles here is called a

539
00:42:56,319 --> 00:43:02,380
memory the memory is just become tables
each edge between those nodes becomes a

540
00:43:02,380 --> 00:43:08,349
trigger their products which we can use
to cheaply prove that fact will never

541
00:43:08,349 --> 00:43:11,529
match anything we just use those we
create triggers that suppress their

542
00:43:11,529 --> 00:43:14,119
insertion so we don't waste time
correlating fact they can never possibly

543
00:43:14,119 --> 00:43:20,140
match right we we rewrite the compiler
rewrites the expressions to be more

544
00:43:20,140 --> 00:43:25,109
amenable to query optimization so what's
a modern Perry optimizers and and you

545
00:43:25,109 --> 00:43:28,230
know figures out the best way to rewrite
the expression and it also computes a

546
00:43:28,230 --> 00:43:34,010
minimal covering index set of covering
it exits right so every expression is

547
00:43:34,010 --> 00:43:37,670
covered to the greatest extent possible
by an index so that you're never doing

548
00:43:37,670 --> 00:43:41,789
full table scan you can do for you can
do full table scans of you write your

549
00:43:41,789 --> 00:43:48,980
engine wrong but we tried really hard to
not make that happen so you know just to

550
00:43:48,980 --> 00:43:50,319
reiterate

551
00:43:50,319 --> 00:43:53,859
correlation engines have great
applications in right oh I said I was

552
00:43:53,859 --> 00:43:59,058
gonna read more slides so I won't read
it all just paraphrase

553
00:43:59,059 --> 00:44:04,589
complex you can write engines that
aren't that hard to use and they're just

554
00:44:04,589 --> 00:44:08,058
normal databases so you immediately get
all the benefits of normal weight of

555
00:44:08,059 --> 00:44:09,910
normal databases ease of use

556
00:44:09,910 --> 00:44:10,810
ease of access

557
00:44:10,810 --> 00:44:15,570
data safety transactional semantics fall
off and then you can reach me here is my

558
00:44:15,570 --> 00:44:18,960
email address again members j.r and yes
I could set up an alias but I'm not

559
00:44:18,960 --> 00:44:23,370
going to it's the principle of the thing
making a comment the Giles source code

560
00:44:23,370 --> 00:44:36,538
itself is available at CoreLogic get
repo at that URL right there

561
00:44:36,539 --> 00:45:07,329
some of the existing processing systems
like we did for a variety of reasons

562
00:45:07,329 --> 00:45:13,689
they're often they had to be zero cost
they had to be low maintenance they had

563
00:45:13,689 --> 00:45:16,779
to be accessible from both Perl and
Python they had to be permissive

564
00:45:16,779 --> 00:45:20,029
licensing that allow commercial use blah
blah blah blah blah so at the end of the

565
00:45:20,029 --> 00:45:27,310
day we ended up writing

566
00:45:27,310 --> 00:45:33,240
yes the role changes are that that is
something that is a little cash right

567
00:45:33,240 --> 00:45:37,720
now so the way it works is when you want
to rule change you recompile the schema

568
00:45:37,720 --> 00:45:44,549
and then there is a trigger program in
each database that serialize out all the

569
00:45:44,550 --> 00:45:48,680
facts as triples followed the axiomatic
faxes triples and then you attach the

570
00:45:48,680 --> 00:45:53,009
other day to raise the troubles back in
and Bob's your uncle it's not great but

571
00:45:53,010 --> 00:46:06,460
it it works pretty well supports the
question was when I was contradictory

572
00:46:06,460 --> 00:46:13,790
rules or cycles in events so Giles first
off if you try to compile an engine that

573
00:46:13,790 --> 00:46:19,080
has encountered rules the compiler will
error out if you compile an engine has

574
00:46:19,080 --> 00:46:24,740
cycles and the engine will complain
unless you pass the dash see flags and

575
00:46:24,740 --> 00:46:28,979
you acknowledge that there are cycles
and there is one of the actions in

576
00:46:28,980 --> 00:46:33,080
addition to assert there's also a
certain state which means this artifact

577
00:46:33,080 --> 00:46:37,440
if and only if it doesn't exist and that
also participate in the trials

578
00:46:37,440 --> 00:46:42,350
guarantees that back its gets bad debts
retracted somehow another rule that

579
00:46:42,350 --> 00:46:51,960
would have reduced it will reduce it any
other questions anybody

580
00:46:51,960 --> 00:46:58,580
you're right you're right so that's
that's that's what does an exercise to

581
00:46:58,580 --> 00:47:04,009
the reader so any other questions

582
00:47:04,010 --> 00:47:17,230
get the biggest temptation we got was
dirt which analyzed very large source

583
00:47:17,230 --> 00:47:22,460
code repositories including the git repo
for the Linux kernel which using dirt

584
00:47:22,460 --> 00:47:27,780
semantics came out to be 33 million
events on the first import and a process

585
00:47:27,780 --> 00:47:34,730
that in about two hours that's not it's
not the fastest engine but it's you know

586
00:47:34,730 --> 00:47:36,470
it's pretty good

587
00:47:36,470 --> 00:47:45,970
anybody else I'm sorry you plan for my
people supporting my sequel right now

588
00:47:45,970 --> 00:47:50,399
does not have the trigger support that
we need the the semantics Postgres I

589
00:47:50,400 --> 00:47:54,750
think does my school I tried to make it
more gonna just understanding it's going

590
00:47:54,750 --> 00:48:02,599
to sound like I would like to but i just
want to get well I don't I don't know it

591
00:48:02,599 --> 00:48:07,710
would require MySQL to change their the
way they handle triggers and I don't

592
00:48:07,710 --> 00:48:10,170
know if they're going to lie I wish they
would cause I've seen other people

593
00:48:10,170 --> 00:48:19,220
complaining about it for unrelated
reasons thank you may also email out

594
00:48:19,220 --> 00:48:23,209
somebody standing up for people are
setting up are you asking questions are

595
00:48:23,210 --> 00:48:28,510
leaving you can also leave ok alright
okay I will thank you very much

