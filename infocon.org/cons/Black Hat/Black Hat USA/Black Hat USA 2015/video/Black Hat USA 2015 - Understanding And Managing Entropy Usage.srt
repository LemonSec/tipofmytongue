1
00:00:00,000 --> 00:00:07,069
our first quarter normally start my
talks with the basic premise which is

2
00:00:07,069 --> 00:00:19,780
really like fence line so I'm just gonna

3
00:00:19,780 --> 00:00:25,790
I paid a lot of money to be going to
Mikes go to last post by talks are you

4
00:00:25,790 --> 00:00:30,830
sure this is likely due to rate outside
she would she did the research with me

5
00:00:30,830 --> 00:00:35,420
as well she's also with the key W
preparation normally start most my talks

6
00:00:35,420 --> 00:00:40,170
the same way which is you shouldn't tell
you in general I would encourage you to

7
00:00:40,170 --> 00:00:43,840
at least try to believe what I'm about
to tell you but take it with a grain of

8
00:00:43,840 --> 00:00:44,220
salt

9
00:00:44,220 --> 00:00:48,970
this is based on research that we're
done regarding attribute production and

10
00:00:48,970 --> 00:00:53,390
consumption that was funded by white
with encryption system so what would new

11
00:00:53,390 --> 00:00:57,879
company just came out of stealth gear
today actually at black hat and boots

12
00:00:57,879 --> 00:01:03,780
967 focused on number of things planned
crypto long-running number generation

13
00:01:03,780 --> 00:01:09,120
and interview management and as part of
that work they kind of had the question

14
00:01:09,120 --> 00:01:13,700
of how good or how bad his injury
management and enterprise they wanted us

15
00:01:13,700 --> 00:01:18,310
to actually go to support to try to find
the answer so workers led by Sasha and

16
00:01:18,310 --> 00:01:23,969
myself also we had some interns but like
their knowledge capital Cleveland

17
00:01:23,969 --> 00:01:29,408
Lycoming College in Pennsylvania and he
like so many graduates here not a

18
00:01:29,409 --> 00:01:36,530
particularly large organization we had
Jeremy products

19
00:01:36,530 --> 00:01:42,150
College of Technology PCT grads here

20
00:01:42,150 --> 00:01:45,850
PCT is wonderful institution where the
security guard group is in the same

21
00:01:45,850 --> 00:01:51,169
college as the wealthy folks and indeed
is actually a master welder like has a

22
00:01:51,170 --> 00:01:55,240
master's degree and well being so it's
it's actually a small college but a good

23
00:01:55,240 --> 00:01:59,770
program based out of central
Pennsylvania and then just Acquaviva who

24
00:01:59,770 --> 00:02:01,759
has the greatest last name in the world

25
00:02:01,759 --> 00:02:06,670
jeff is a great guys from Penn State so
we appreciate all the support we had

26
00:02:06,670 --> 00:02:11,170
former interns as well so I got
anchorage is stop by or about

27
00:02:11,170 --> 00:02:15,440
interviewed our booth but without
further ado talk about a research so

28
00:02:15,440 --> 00:02:22,800
when we started this we really wanted to
just get an understanding of entropy in

29
00:02:22,800 --> 00:02:27,650
the enterprise what produces a lot that
I guess conventional wisdom shaman

30
00:02:27,650 --> 00:02:33,040
knowledge about how is entropy generated
how is it consumed people kind of agreed

31
00:02:33,040 --> 00:02:37,069
tacit like this is how to colonel works
in a cell works but there wasn't a lot

32
00:02:37,069 --> 00:02:40,208
of hard data around it didn't appear
people actually read the source code

33
00:02:40,209 --> 00:02:45,030
they were surrounded by Linus basically
what the real adult deal with this and

34
00:02:45,030 --> 00:02:48,690
you all don't pretend to retire first
which I thought was a great white ass

35
00:02:48,690 --> 00:02:51,980
like that's typical white house taxes
why I know what all you don't know a

36
00:02:51,980 --> 00:02:58,250
damn thing so shut up that's his
business card actually day I guess we're

37
00:02:58,250 --> 00:03:03,620
gonna wear wallet and that she's also
the White has proved ever had to deal

38
00:03:03,620 --> 00:03:09,870
with so i feel like im talking up the 50
yard line we really want to look at also

39
00:03:09,870 --> 00:03:14,190
try to correlate random number
generation vs answer because the two

40
00:03:14,190 --> 00:03:17,060
concepts while tightly correlated are
not the same thing so what we're gonna

41
00:03:17,060 --> 00:03:23,030
cover today it is also finding some
research we had a space but the TLDR of

42
00:03:23,030 --> 00:03:28,420
the whole thing is no one really knows
or at least knew what we did what the

43
00:03:28,420 --> 00:03:32,839
hell's going on respect that unifies
there was a lot of conventional wisdom

44
00:03:32,840 --> 00:03:38,160
that I think we've proven to be wrong or
at least highly suspect and that's why

45
00:03:38,160 --> 00:03:43,359
it's a challenge this work because we
saw things that didn't align with our

46
00:03:43,359 --> 00:03:44,170
worldview

47
00:03:44,170 --> 00:03:47,569
of how we thought ran it offers an
interviewer handled we went back and

48
00:03:47,569 --> 00:03:51,760
reread tested reread test and tried to
hardware and take it in turns around and

49
00:03:51,760 --> 00:03:56,000
beatings continue until morale improves
kind of thing and at the end of the day

50
00:03:56,000 --> 00:04:00,550
this is our best results of this finding
so if you've got other data you disagree

51
00:04:00,550 --> 00:04:05,890
van Wyk throw the flag and let's have a
conversation about it first game so

52
00:04:05,890 --> 00:04:13,630
which one of these use more energy so
running a less or generating 1024 bit

53
00:04:13,630 --> 00:04:22,290
RSA key and he got no actually you're
wrong and it is actually generated are

54
00:04:22,290 --> 00:04:24,550
in

55
00:04:24,550 --> 00:04:32,099
the first one was not a trick question I
was so proud of myself right now have a

56
00:04:32,099 --> 00:04:38,710
generation of 4096 Vicky versus a 1024
biggie it is exactly the same good job

57
00:04:38,710 --> 00:04:46,378
you get all the prices we had a period
microphones to get away to talk so how

58
00:04:46,379 --> 00:04:51,220
about generated 4096 picky person is
doing 4096 the TLS with perfect forward

59
00:04:51,220 --> 00:04:55,389
secrecy so for those that don't know
purported secrecy effectively you're

60
00:04:55,389 --> 00:04:58,740
doing not just normal TLS tougher if
you're generating a federal deputy

61
00:04:58,740 --> 00:05:02,580
homing fee and doing all that kind of
nonsense so there's actually he

62
00:05:02,580 --> 00:05:07,568
generation involved in a PFS connection
as it turns out generator 4096 picky

63
00:05:07,569 --> 00:05:15,650
maybe unsurprisingly uses more HP what
about 1024 bit pls with no perfect

64
00:05:15,650 --> 00:05:21,650
forward secrecy so your standard-issue
non PCI compliant TLS connection to do

65
00:05:21,650 --> 00:05:26,900
PCR discussion later or 4096 but as it
turns out these are exactly the same

66
00:05:26,900 --> 00:05:34,120
same but it better be used in both and
then for the trick question simple there

67
00:05:34,120 --> 00:06:04,490
now as it actually uses more energy than
do it at Els connection so when you

68
00:06:04,490 --> 00:06:07,860
think that you're getting all this I
called interview to do some

69
00:06:07,860 --> 00:06:11,870
cryptographic operations to a web server
administrator who takes a license

70
00:06:11,870 --> 00:06:16,719
actually more HP out of the car and all
that you do with the TLS connection so

71
00:06:16,719 --> 00:06:19,360
we had a type it up soon

72
00:06:19,360 --> 00:06:25,110
but wait there's more where that is now
your turn I'm actually during my career

73
00:06:25,110 --> 00:06:48,610
people don't know that kind of a big
deal

74
00:06:48,610 --> 00:07:44,469
exactly as they decide my contact with
this random there quickly is not random

75
00:07:44,469 --> 00:07:47,349
but the only way you can tell the
difference is that I am attesting to you

76
00:07:47,349 --> 00:07:52,949
that I don't know anything about putting
it into P is that the notion of if I

77
00:07:52,949 --> 00:07:58,060
take time to put them all together I
don't know whether or not I don't know

78
00:07:58,060 --> 00:08:02,879
if it's me or did it get a string of
zeros and ones that I can look at that I

79
00:08:02,879 --> 00:08:35,940
can't say how much information is in
that figure 10 but they look like to you

80
00:08:35,940 --> 00:08:38,630
that data that look the same but
fundamental

81
00:08:38,630 --> 00:08:41,669
different the second one has no entry
fee because it's a copy of the first

82
00:08:41,669 --> 00:08:50,770
number generators random number
generators are now more commonly behold

83
00:08:50,770 --> 00:08:55,140
true random number generators use some
underlying physical process and I'm

84
00:08:55,140 --> 00:09:00,970
gonna come to what that is to generate
actual randomness but there's something

85
00:09:00,970 --> 00:09:10,300
in there is random dude a random number
generators use of this initially and

86
00:09:10,300 --> 00:09:15,430
they they set up a lot of data
historically these were kind of terrible

87
00:09:15,430 --> 00:09:20,120
but now we have great cryptographic
primitive and so they are really exploit

88
00:09:20,120 --> 00:09:26,310
you can read a number generator with 256
bits of entropy and then you're allowed

89
00:09:26,310 --> 00:09:29,989
to run it for 2 to 67 bit before you
need to proceed

90
00:09:29,990 --> 00:09:36,440
which is a lot according to miss this is
a point out of you know if you look at

91
00:09:36,440 --> 00:09:40,340
these guidelines on how long you can
lower your energy to run assuming you

92
00:09:40,340 --> 00:09:44,780
see did it appropriately you get a lot
of walks and some of these requests not

93
00:09:44,780 --> 00:09:49,339
just blocks of the request to be quite
large so we're talking about very very

94
00:09:49,340 --> 00:09:52,950
very very large number numbers I could
hold out of appearance she considered to

95
00:09:52,950 --> 00:10:00,050
be still probably safe from this
perspective helpful analogy perhaps to

96
00:10:00,050 --> 00:10:04,260
think about it if you imagine you have
an enormous deck of cards to the 256

97
00:10:04,260 --> 00:10:07,920
just a deck of cards that's more than
number of atoms in the universe but

98
00:10:07,920 --> 00:10:12,400
let's pretend that when you couple that
deck of cards that's what you are you

99
00:10:12,400 --> 00:10:15,730
are putting the entry into the system
and then once you do it so that's your

100
00:10:15,730 --> 00:10:18,940
red true random number generator once
you do it this year period piece bedding

101
00:10:18,940 --> 00:10:23,610
outdated deterministic at that point but
the better the entry that you put in the

102
00:10:23,610 --> 00:10:25,160
better the random numbers you're gonna
get it

103
00:10:25,160 --> 00:10:33,040
there to hear how limit basically does
stuff in the general sets so if I can

104
00:10:33,040 --> 00:10:38,319
interject that's what I do there are
very few comprehensive resources

105
00:10:38,319 --> 00:10:39,550
available

106
00:10:39,550 --> 00:10:45,550
sands actually reading the code to
understand how Linux with OpenSSL and

107
00:10:45,550 --> 00:10:50,620
Apache to take a particular use case
actually handle entropy and random

108
00:10:50,620 --> 00:10:55,759
number generation so in order to hold
this in later diagrams together we've

109
00:10:55,759 --> 00:11:00,910
been reading you know ran DOTC which is
effectively what resources are pulled

110
00:11:00,910 --> 00:11:05,500
from we've been reading OpenSSL source
code reading random new random source

111
00:11:05,500 --> 00:11:10,550
code Apache modest to sell all kinds of
things as well as running experiments

112
00:11:10,550 --> 00:11:16,329
against that so this is our
understanding entropy and random numbers

113
00:11:16,329 --> 00:11:21,439
and ecosystem within the next today this
does not necessarily marry up with what

114
00:11:21,439 --> 00:11:25,930
you would see on other websites and
other documentation today and that maybe

115
00:11:25,930 --> 00:11:29,560
it's because the system said change over
time or maybe that people just had ideas

116
00:11:29,560 --> 00:11:33,660
of how it works and as it turns out it
doesn't work that way that they thought

117
00:11:33,660 --> 00:11:38,219
so we're gonna walk our way through this
diagram over the next few slides you

118
00:11:38,220 --> 00:11:40,269
understand kinda discreetly

119
00:11:40,269 --> 00:11:44,220
production to consumption perspective
what actually is going on I think in

120
00:11:44,220 --> 00:11:49,019
fairness to the stuff you find online
thing people to change the code right

121
00:11:49,019 --> 00:11:53,000
and you know people don't go there or
not the documentation inside the code

122
00:11:53,000 --> 00:11:57,120
itself necessarily it's only the people
who have written explanations of the

123
00:11:57,120 --> 00:12:00,199
code or not the right there not being
notified the decadence change that this

124
00:12:00,199 --> 00:12:10,040
is all being done on Linux 32 take some
data from basically interrupt you move

125
00:12:10,040 --> 00:12:13,699
your mouse to move your keep you touch
on your keyboard you do some disk i/o

126
00:12:13,699 --> 00:12:18,139
you get a network message and it it gets
some empty out of that i'm gonna discuss

127
00:12:18,139 --> 00:12:22,399
how to decide how much interviewed get
to the second you can also have a harder

128
00:12:22,399 --> 00:12:25,329
random number generators that you plug
into your computer there are you

129
00:12:25,329 --> 00:12:29,049
demand things you can run like cabbage
that will add entry and gets all of

130
00:12:29,049 --> 00:12:33,389
these things these things'll get they
produce streams of zeros and ones with

131
00:12:33,389 --> 00:12:37,089
some kind of entry estimate attached to
them and that it's turned into the main

132
00:12:37,089 --> 00:12:41,059
entry pool which is that first thing
right there are two periods he is it

133
00:12:41,059 --> 00:12:46,350
take their data take their seed data out
of that man injured people the one that

134
00:12:46,350 --> 00:12:51,239
feeds dev random and when the peace
debut random there's a theme here indeed

135
00:12:51,239 --> 00:12:56,629
different underlying data but the same
basic mechanism and then you have

136
00:12:56,629 --> 00:13:01,160
applications that read from different
MRW ridden or you have OpenSSL that

137
00:13:01,160 --> 00:13:05,899
reads from mostly did you read them in
order to see its own currency and then

138
00:13:05,899 --> 00:13:08,720
your and then you get to date all the
way up here and get all the way up into

139
00:13:08,720 --> 00:13:15,470
your application fees are some software
sources of energy these are very low

140
00:13:15,470 --> 00:13:18,739
production rate and we're going to talk
about that in a little bit what what the

141
00:13:18,739 --> 00:13:24,649
looks at these events and it says
surprising is that of this is unusual

142
00:13:24,649 --> 00:13:30,389
that you typed left bracket is it it is
unusual to have to Pakistan came

143
00:13:30,389 --> 00:13:34,769
together that close and they they catch
some of that information together into

144
00:13:34,769 --> 00:13:40,629
their people

145
00:13:40,629 --> 00:13:48,660
aftermarket number generators so I V
bridge in the new Ivy Bridge whether or

146
00:13:48,660 --> 00:13:52,980
not so new anymore Ivy Bridge chips
there is a random number generator based

147
00:13:52,980 --> 00:13:56,389
on thermal noise that feeds into a
pseudo-random number generator and spits

148
00:13:56,389 --> 00:14:00,199
out sooo random number data with a real
good interview source at the beginning

149
00:14:00,199 --> 00:14:04,849
as fast as you could possibly want it
there's NTK which is a little USB dongle

150
00:14:04,850 --> 00:14:10,629
you can buy for 50 bucks and 72 computer
lava and actually will limp set up a

151
00:14:10,629 --> 00:14:14,819
camera looking at a level and use that
to generate and anyone actually done

152
00:14:14,819 --> 00:14:20,660
that we see I i've seen a production set
up a lot around like people do that as

153
00:14:20,660 --> 00:14:24,839
the things still so you giggle but there
are people who care enough about entropy

154
00:14:24,839 --> 00:14:28,299
and don't believe these other sources
they know they can audit there are a lot

155
00:14:28,299 --> 00:14:31,569
of laps in their cameras and it's very
important for them to be able to get

156
00:14:31,569 --> 00:14:34,370
those things and so the only failure
scenario

157
00:14:34,370 --> 00:14:38,640
the one that I'm aware of his win the
cleaning crew turn the lights off

158
00:14:38,640 --> 00:14:43,770
because they thought that we should all
be on at once and that it made a 100

159
00:14:43,770 --> 00:14:51,420
couple of days so might appear in Chico
I got you know to the forty eight blocks

160
00:14:51,420 --> 00:15:01,370
I can get out before I worry so it was
just it is fairly music internal piece

161
00:15:01,370 --> 00:15:10,980
of the Linux kernel PNG I'm going to
speed up because I know you're gonna get

162
00:15:10,980 --> 00:15:14,550
the data in it goes into this may need
she pull it sped out to the two periods

163
00:15:14,550 --> 00:15:19,939
he's the man has a maximum out of
storage of 4096 this in practice we

164
00:15:19,940 --> 00:15:24,520
never see again even close to that with
normal software stuff because software

165
00:15:24,520 --> 00:15:27,610
produces and should be very slowly

166
00:15:27,610 --> 00:15:33,420
you can increase the value but it
doesn't get up there doesn't really

167
00:15:33,420 --> 00:15:37,680
matter if you increase the available the
maximum available so you asked a

168
00:15:37,680 --> 00:15:41,560
question earlier about how we forgot how
much interview was being used we were

169
00:15:41,560 --> 00:15:46,529
using this call into the system this
interview avail hole which tells you how

170
00:15:46,529 --> 00:15:50,459
many bits are waiting in the main pool
to be stirred into either of the two

171
00:15:50,459 --> 00:15:56,500
periods he's yet to be careful with that
because it later slide you have to be

172
00:15:56,500 --> 00:16:01,540
careful with that because of this thing
where Ellis uses a whole bunch of random

173
00:16:01,540 --> 00:16:06,329
it so you can actually just cut that
file cause everytime you cut that file

174
00:16:06,330 --> 00:16:11,160
you're gonna use interview just to run
the camera if you wanna from a practical

175
00:16:11,160 --> 00:16:16,100
perspective if you want to actually
monitor available entropy you should not

176
00:16:16,100 --> 00:16:20,120
write a script that does it because
every time you invoke that script when

177
00:16:20,120 --> 00:16:24,400
it's actually use interpreter running
process of getting it cut to the chase

178
00:16:24,400 --> 00:16:29,020
what it does is it is there's other
concerns when I get the copy process

179
00:16:29,020 --> 00:16:32,449
function within fork actually

180
00:16:32,449 --> 00:16:36,569
consumes a lot of interview from the
pool and so when you go to check if you

181
00:16:36,569 --> 00:16:41,419
just like cat back you know you'll
actually cause you're you're it's like

182
00:16:41,419 --> 00:16:45,749
here's a quick look at every single time
you kill it by about two-thirds expects

183
00:16:45,749 --> 00:16:52,749
so can you go back to the other side so
you know you can write a program that

184
00:16:52,749 --> 00:16:56,009
was just costly moderate for you see
you're not actually in the process is

185
00:16:56,009 --> 00:17:00,669
really the forecast that causes the hit
now what's interesting here and we're

186
00:17:00,669 --> 00:17:04,138
expecting people to start to disagree so
there are three separate interview pools

187
00:17:04,138 --> 00:17:09,638
represented on this slide with colonel
32 we believe this to be true in this

188
00:17:09,638 --> 00:17:14,319
kind of defies conventional wisdom there
is the primary pool that the Colonels

189
00:17:14,319 --> 00:17:17,809
maintained at all times and then there's
a pool associated with random and W

190
00:17:17,809 --> 00:17:21,928
random and in general EOS is keeping
those close to zero and when they did

191
00:17:21,929 --> 00:17:25,659
entropy don't reach the primary pool and
steal from that to feed their own fear

192
00:17:25,659 --> 00:17:30,450
in G so the entropy estimation in the
primary pool will be reduced at entry

193
00:17:30,450 --> 00:17:34,909
estimation and the pool for ever and
ever you and will be increase and then

194
00:17:34,909 --> 00:17:38,370
the user and application will pull out
of one of those pools and a no go back

195
00:17:38,370 --> 00:17:42,299
to the primary goal pulled down and you
can go read the code and there are three

196
00:17:42,299 --> 00:17:45,649
separate PR in Jesus three separate
stations receptor pools all being

197
00:17:45,649 --> 00:17:49,830
tracked again there's a lot of
documentation out there this is one pool

198
00:17:49,830 --> 00:17:55,799
or there's 21 2010 you are and whatever
but this is why we found to be true

199
00:17:55,799 --> 00:18:06,710
entry is actually produced on PM's and
environmental system when you look over

200
00:18:06,710 --> 00:18:09,299
these numbers I have a summary slide on
the next I'm not going to read through

201
00:18:09,299 --> 00:18:13,460
all these numbers are the numbers are
really staggeringly low and unloaded be

202
00:18:13,460 --> 00:18:17,320
in complete about two bits per second if
I'm running

203
00:18:17,320 --> 00:18:22,759
p.m. I can get 12 bits of the second is
almost nothing in modern computing that

204
00:18:22,759 --> 00:18:25,759
runs at this low of a speed I was
actually looking at this before I came

205
00:18:25,759 --> 00:18:30,899
over here arises out of Pluto and it's
sending back data it's Anna back at two

206
00:18:30,899 --> 00:18:36,168
thousand bits per second so even these
just staggeringly low that this is what

207
00:18:36,169 --> 00:18:38,630
we're dealing with in a in a modern
machine

208
00:18:38,630 --> 00:18:42,730
the average call into Deborah never you
enter the code that we saw was asking

209
00:18:42,730 --> 00:18:45,679
for 32 bytes of random numbers

210
00:18:45,679 --> 00:18:49,289
beta for asking for Deb random you're
asking for a hundred percent after

211
00:18:49,289 --> 00:18:53,860
people to do that and so when you think
about you know on average every time

212
00:18:53,860 --> 00:19:01,008
again if you spent a process is looking
for 256 bits 230 bikes random number a

213
00:19:01,009 --> 00:19:04,529
man identifying is being poured into
these fools is relatively small by

214
00:19:04,529 --> 00:19:10,110
comparison that server without his
immense pressure on entry pools because

215
00:19:10,110 --> 00:19:14,350
the server is constantly asking more
more more but you know even a North

216
00:19:14,350 --> 00:19:19,019
moderately heavy loaded survey only
added to the order of 10 it's a second

217
00:19:19,019 --> 00:19:27,600
incident interesting things from that
previous slide that she can be slightly

218
00:19:27,600 --> 00:19:31,509
faster than an unloaded the end but not
a lot but if you paying the machine a

219
00:19:31,509 --> 00:19:32,899
thousand times a second

220
00:19:32,899 --> 00:19:36,539
you you get a lot of value for that on
your p.m. and even more environmental

221
00:19:36,539 --> 00:19:40,980
strangely heaven to make that much words
we don't leave replicated that but we

222
00:19:40,980 --> 00:19:44,720
have no idea what's going on there and
then there's this weird result down

223
00:19:44,720 --> 00:19:49,070
there with our dear if so often you
can't get through to our dear and in the

224
00:19:49,070 --> 00:19:53,039
VMware hypervisor have to expose our
dear and so we didn't look at a number

225
00:19:53,039 --> 00:19:56,720
of em side but if you have access to our
dear and on a bare metal machine

226
00:19:56,720 --> 00:20:01,629
something goes well with the kernel HP
production and we don't know if that is

227
00:20:01,629 --> 00:20:05,658
the the kernel adjusting its estimates
of how much interviews getting to

228
00:20:05,659 --> 00:20:08,220
provide a random thing we don't
understand why that's happening we would

229
00:20:08,220 --> 00:20:13,029
be interested to know so the kernel
explicitly does not include data comes

230
00:20:13,029 --> 00:20:16,860
from hard here and to have any
interpreted so you can feed into our

231
00:20:16,860 --> 00:20:20,899
dear and you know it for those who
played around with it can generate you

232
00:20:20,899 --> 00:20:25,739
know hundreds of megabytes of data
second and you can see below that rate

233
00:20:25,740 --> 00:20:27,530
in the kernel the kernel consuming

234
00:20:27,530 --> 00:20:31,490
but at the end of the day the kernel
does not make it is not increasing

235
00:20:31,490 --> 00:20:37,200
entropy estimation from that data and as
it turns out it's because the right

236
00:20:37,200 --> 00:20:42,640
people started to think that somebody
had back toward our dear and therefore

237
00:20:42,640 --> 00:20:46,160
somehow you could learn the state of
everyone Xbox in the world and all the

238
00:20:46,160 --> 00:20:51,930
PR and cheese therefore you know at one
point our dear and was the source of

239
00:20:51,930 --> 00:20:56,530
random numbers are trending data and
entropy going into the country pool and

240
00:20:56,530 --> 00:21:00,990
then it was totally removed and now it's
in there and 32 but it does increase

241
00:21:00,990 --> 00:21:04,210
entry estimation and then in that whole
process somehow the entropy estimation

242
00:21:04,210 --> 00:21:08,480
that the kernel provides end up being
even worse than if you didn't have

243
00:21:08,480 --> 00:21:12,450
already ran connected so this is the
point at which you should challenge I

244
00:21:12,450 --> 00:21:16,220
don't know the Colonels entropy
estimation discussion algorithm is

245
00:21:16,220 --> 00:21:22,370
correct right we didn't go down to
verify the appropriateness of that

246
00:21:22,370 --> 00:21:26,219
there's been studies around this
polynomial analysis that doesn't see how

247
00:21:26,220 --> 00:21:30,190
surprising I really want to see a
surprise colonel wow that was an amazing

248
00:21:30,190 --> 00:21:36,250
package and then the board colonel I saw
that one already guys you know there

249
00:21:36,250 --> 00:21:39,920
have been some critical analysis of that
that surprising algorithm

250
00:21:39,920 --> 00:21:44,140
but I don't think that there's been any
kind of a kind of conclusion drawn from

251
00:21:44,140 --> 00:21:48,850
it and I think in general people felt
like it's good enough so we went with it

252
00:21:48,850 --> 00:21:53,820
it's good enough this is what it spits
out I think that whenever anybody have

253
00:21:53,820 --> 00:21:57,520
to make a decision about current
estimation they always choose the most

254
00:21:57,520 --> 00:22:02,230
conservative route so this is going
along with that it with the RT Revd

255
00:22:02,230 --> 00:22:07,130
decision as well then we should not also
with a virtual machine vs bare metal

256
00:22:07,130 --> 00:22:10,790
there was a lot of you know bare metal
generates so much more interviewed and

257
00:22:10,790 --> 00:22:16,480
beyond the answer starts at but in
network cases I think probably cuz of

258
00:22:16,480 --> 00:22:19,810
our tentative network back at the
hardware level we did see at least about

259
00:22:19,810 --> 00:22:25,500
an order increase in how much HP you got
from heavy workload but still it's on

260
00:22:25,500 --> 00:22:27,810
the order of tens of business at its
still not very fast

261
00:22:27,810 --> 00:22:33,490
various Android devices see how much
they have they actually do much better

262
00:22:33,490 --> 00:22:38,360
you know but still in the tender bits
per second 2240 bits per second at

263
00:22:38,360 --> 00:22:43,300
VentureBeat we can you imagine yourself
in my pocket surely the accelerometers

264
00:22:43,300 --> 00:22:44,909
generating information all the time

265
00:22:44,910 --> 00:22:48,540
surely we could just use it doesn't seem
to be connected into the entry system at

266
00:22:48,540 --> 00:22:51,629
all on the cell phone even though it
would be we believe a pretty excellent

267
00:22:51,630 --> 00:22:56,930
source of HP it was actually fairly
amusing right here check this phone

268
00:22:56,930 --> 00:23:08,080
running 45 minutes just working so i
cant get runs around the house and

269
00:23:08,080 --> 00:23:11,649
Debbie random work in the Linux 32
colonel today based on what we've seen

270
00:23:11,650 --> 00:23:14,540
up there deborah in them

271
00:23:14,540 --> 00:23:18,860
provides output that if you get up at
four different in this roughly one did

272
00:23:18,860 --> 00:23:22,760
eventually going into the PNG and what
for everyone bit of output that you get

273
00:23:22,760 --> 00:23:24,540
out of the period G

274
00:23:24,540 --> 00:23:32,070
every time the way it works is you do
these are well I can do an interpretive

275
00:23:32,070 --> 00:23:40,200
dance for the new version if you like
when he has started to the way to the

276
00:23:40,200 --> 00:23:48,060
way the different appearance he works is
that you or 64 bit 64 bit machine it

277
00:23:48,060 --> 00:23:52,879
goes it get it there 64 bit of available
in Japan that main pool and it is it

278
00:23:52,880 --> 00:23:54,060
sucks them out

279
00:23:54,060 --> 00:23:59,379
gives you your 64 bit and then it take
that has it that it has to do to its own

280
00:23:59,380 --> 00:24:04,280
pool if there's not 64 bits of entry in
the main pool over there then different

281
00:24:04,280 --> 00:24:07,480
will block until there is and as we've
seen that you're gonna be sitting there

282
00:24:07,480 --> 00:24:12,920
for 30 seconds while it tries to build
itself up did you random worked a little

283
00:24:12,920 --> 00:24:18,230
bit differently you ask for 64 bit it
said to see if there's a hundred and

284
00:24:18,230 --> 00:24:22,820
ninety two bits of rid of this entropy
in the main pool if there is it happens

285
00:24:22,820 --> 00:24:27,110
that in and it does it will did that
passes it out it has to be put back into

286
00:24:27,110 --> 00:24:34,719
itself if there's not a doubt put back
into it so this is why did you read

287
00:24:34,720 --> 00:24:38,800
never blocks if there isn't available in
the main pool it will grow from it but

288
00:24:38,800 --> 00:24:42,320
if there's not if it does not care
there's one other way to access these

289
00:24:42,320 --> 00:24:45,720
pools and thats get random bites at the
kernel kool so that if you're inside the

290
00:24:45,720 --> 00:24:48,870
crew you don't actually have to go out
to users based on the character devices

291
00:24:48,870 --> 00:24:53,820
but it draws from the non-blocking pool
which is contrary to some of the

292
00:24:53,820 --> 00:24:58,159
documentation out there so get random
bytes is just a wrapper for a debut

293
00:24:58,160 --> 00:25:01,380
random and even look at the code it's
very simple and it's just a wrapper to

294
00:25:01,380 --> 00:25:05,340
get to the same functionality you read
it exposes so what what we see here is

295
00:25:05,340 --> 00:25:10,659
that random if you polled endeavor and
you just gotta run right back at him and

296
00:25:10,660 --> 00:25:14,430
that if you are available under plz just
goes to zero and then every once in a

297
00:25:14,430 --> 00:25:15,260
while to get a little

298
00:25:15,260 --> 00:25:23,450
about 64 bits as it as it hits that 228
floor so you can get you and you'll see

299
00:25:23,450 --> 00:25:29,710
the kernel estimation 226 there will
never call that last hundred twenty

300
00:25:29,710 --> 00:25:34,760
eight bits out the kernel doesn't let it
happen to those that last 64 bytes so it

301
00:25:34,760 --> 00:25:38,410
it's it's interesting to watch it again
it's kind of that there's no

302
00:25:38,410 --> 00:25:42,670
documentation that says that it does
this but this is what we saw for our

303
00:25:42,670 --> 00:25:51,140
experiment over and over and over 600
28th floor that that you ran enforces so

304
00:25:51,140 --> 00:25:57,880
here's some things that are not random
just got confused so R and which is a C

305
00:25:57,880 --> 00:26:04,780
functions been around since the sixties
red uses kind of linear random generator

306
00:26:04,780 --> 00:26:10,370
generator do not use three and I don't
know if you have a button then you like

307
00:26:10,370 --> 00:26:15,439
to be red green or blue for that but do
not use it for scientific data do not

308
00:26:15,440 --> 00:26:18,700
use it for money Carlo simulations
please please please do not use it for

309
00:26:18,700 --> 00:26:22,080
cryptographic get it because if you can
get to sample that a linear congressman

310
00:26:22,080 --> 00:26:25,389
Phil generator you can get the internal
stated that generator and then you know

311
00:26:25,390 --> 00:26:29,500
all the bits going forward and all the
bits going backwards that's bad

312
00:26:29,500 --> 00:26:33,220
not not very secure for you and it
didn't matter in the sixties right

313
00:26:33,220 --> 00:26:43,250
because I mean until the seventies at
least on the outside there are better to

314
00:26:43,250 --> 00:26:48,480
random number generators pipeline uses
percent with through C++ uses Mersenne

315
00:26:48,480 --> 00:26:51,630
Twister is even better because you need
six hundred and fifty outputs in order

316
00:26:51,630 --> 00:26:56,260
to back engineer the internal state of
the thing you should see these will see

317
00:26:56,260 --> 00:27:01,290
these with something from Debbie Deb you
read them but you should also add more

318
00:27:01,290 --> 00:27:05,649
and more CD into it every six hundred
close so that people can get into the

319
00:27:05,650 --> 00:27:10,220
internal state

320
00:27:10,220 --> 00:27:15,750
so this this is the part where we we
admit that a lot of our initial testing

321
00:27:15,750 --> 00:27:18,940
it was just kind of flawed because one
day we sit around with their interns are

322
00:27:18,940 --> 00:27:24,510
running some tests I run a series of
commands and I cat avail and I had some

323
00:27:24,510 --> 00:27:28,470
number and then I can actually began as
a shorter number then again is even

324
00:27:28,470 --> 00:27:33,020
smaller number of boxes unloaded
nothing's happened like what in the

325
00:27:33,020 --> 00:27:35,330
living hell is going on here

326
00:27:35,330 --> 00:27:41,299
slide and this is it turns out where we
found out that when Linux plans

327
00:27:41,299 --> 00:27:45,150
processes there's a whole bunch of
things it does to try to protect you

328
00:27:45,150 --> 00:27:51,090
protect memory try to you know masks
itself off as a separate attacks and it

329
00:27:51,090 --> 00:27:58,530
ends up asking for 32 bytes random
number often W random and if it's there

330
00:27:58,530 --> 00:28:05,220
documentary pool by yoy 206 but so at
the end of the day you know when you're

331
00:28:05,220 --> 00:28:10,630
on a workstation just caddy interview W
huge dance into the kernel its report

332
00:28:10,630 --> 00:28:14,520
without even realizing it and that's
where we get into this whole white hey

333
00:28:14,520 --> 00:28:18,470
these commands actually taking on repeat
and OpenSSL 0 to get into the OpenSSL

334
00:28:18,470 --> 00:28:22,100
stuff that we found out and in general
there colonel is very good about

335
00:28:22,100 --> 00:28:26,230
snagging a chubby when it needs it and
some of their profit margins that you

336
00:28:26,230 --> 00:28:30,940
would think would be very good at it or
not it it's interesting I should say

337
00:28:30,940 --> 00:28:36,950
that we validated that number system
some systems didn't demonstrate the same

338
00:28:36,950 --> 00:28:40,620
level of aggressiveness at a pool with
others and we couldn't find a common

339
00:28:40,620 --> 00:28:43,850
thread so there's still work to be done
there and if anyone goes and plays with

340
00:28:43,850 --> 00:28:48,260
this later and let us know why we saw
that some places not others we read a

341
00:28:48,260 --> 00:28:52,520
lot of code I'm not allowed to write
code anymore they're taking market power

342
00:28:52,520 --> 00:28:56,389
from me but I don't know how to read it
and we've got a lot of code and we can't

343
00:28:56,390 --> 00:29:01,100
really get a ground truth what's going
on there

344
00:29:01,100 --> 00:29:08,590
address relocation the red and the
senior has been pulled from the highest

345
00:29:08,590 --> 00:29:13,459
cryptographically best did you know that
has available as an unrestricted

346
00:29:13,460 --> 00:29:18,000
resources not address relocation need to
be that complicated

347
00:29:18,000 --> 00:29:28,429
well that's kind of a joke I mean it's
interesting because like last video

348
00:29:28,429 --> 00:29:32,500
lessons this relocation is that big of a
deal but there's all kinds of things

349
00:29:32,500 --> 00:29:36,730
that happened you know even by the
kernel compound conspiracy stuff that

350
00:29:36,730 --> 00:29:40,760
occurs they try to align processes of
each other so they can be traced back to

351
00:29:40,760 --> 00:29:44,169
his memory spaces so there's even like
an attraction that occurs the game CD

352
00:29:44,169 --> 00:29:49,240
stuff and so that's that's taking all
bad information to basically make each

353
00:29:49,240 --> 00:29:54,190
process more secure and discreet from
each other but i wanna talk about how

354
00:29:54,190 --> 00:29:58,890
OpenSSL does it open it still runs its
own here and she outside of the thing

355
00:29:58,890 --> 00:30:05,169
from the kernel it uses did you read
that and then it uses that same here in

356
00:30:05,169 --> 00:30:08,669
G four all cryptographic operations
long-term keys and on through the

357
00:30:08,669 --> 00:30:12,100
federal case everything that criminals
nothing about what's going on in the

358
00:30:12,100 --> 00:30:19,260
OpenSSL parent GE has been initially
seeded OpenSSL only see it once per

359
00:30:19,260 --> 00:30:24,919
runtime went with a process so this is
if you're generally long-term key to the

360
00:30:24,919 --> 00:30:29,010
command line OpenSSL generous 1824
everything's fine because you've got a

361
00:30:29,010 --> 00:30:34,460
nice you see it well and now you're off
to the races but if you're using OpenSSL

362
00:30:34,460 --> 00:30:37,730
as a library under Apache what you're
going to see is that that gets seated

363
00:30:37,730 --> 00:30:43,940
when the process is initially started so
few for you'll get a reseed the 14

364
00:30:43,940 --> 00:30:47,900
happened earlier but if you for computer
BC but you're going to use that same

365
00:30:47,900 --> 00:30:51,330
thing for as long as that of Paktia
processes running our data shows that

366
00:30:51,330 --> 00:30:55,280
appellant patchy perfect for secrecy
connection uses about 500 bytes of

367
00:30:55,280 --> 00:31:01,059
random numbers every time you set up an
SSL connection and so all of those are

368
00:31:01,059 --> 00:31:03,280
going to come out of the same pier in
DCA

369
00:31:03,280 --> 00:31:09,960
the same 256 bits so you can put for
those of you who can put limits on

370
00:31:09,960 --> 00:31:15,870
Apache disabled children apache server
data cases and every week or something

371
00:31:15,870 --> 00:31:21,020
shut it down and process Apache I think
last time I checked by the fall does not

372
00:31:21,020 --> 00:31:25,410
have a limit of normal thing you would
do to my performance situations but not

373
00:31:25,410 --> 00:31:30,650
something people do whatever but the
battle over without 1 seed that you gave

374
00:31:30,650 --> 00:31:32,730
it when it started and that's that's it

375
00:31:32,730 --> 00:31:39,270
the code off in the west where you want
to go track that down and OpenSSL gets

376
00:31:39,270 --> 00:31:43,290
initialized once and only one time and
it never goes back through that tucker

377
00:31:43,290 --> 00:31:49,899
ever done that happens one time one time
away for a batch of modest hour and

378
00:31:49,900 --> 00:31:55,010
every other thing that up necessarily
caused by later so there's no reason for

379
00:31:55,010 --> 00:31:55,580
this

380
00:31:55,580 --> 00:31:58,889
OpenSSL knows how many requests have
been made against it could be it could

381
00:31:58,890 --> 00:32:03,380
be tracking and receding from did you
read some good cryptographic dated but

382
00:32:03,380 --> 00:32:09,350
just as not a second issue with OpenSSL
is that when it pulled from WN it

383
00:32:09,350 --> 00:32:13,159
actually has no knowledge of how good
that seed is when you first start up a

384
00:32:13,160 --> 00:32:17,700
machine or if you copy of VMware you
could come from another one that have

385
00:32:17,700 --> 00:32:21,220
identical ran in this initially in
OpenSSL has no way of knowing that

386
00:32:21,220 --> 00:32:25,790
you're doing anything about that in
Linux FreeBSD the little different

387
00:32:25,790 --> 00:32:30,629
they're a little smarter actually
FreeBSD doesn't have it w random italy

388
00:32:30,630 --> 00:32:35,900
has a different and it might not help
with the Clooney movie M problem but it

389
00:32:35,900 --> 00:32:39,680
will block until I get seated in
correctly initially intended that it

390
00:32:39,680 --> 00:32:45,130
will run free after that if the way to
think about this is you could

391
00:32:45,130 --> 00:32:50,310
conceptualize a world in which OpenSSL
would look at the pool and say at least

392
00:32:50,310 --> 00:32:54,310
it's expensive and repeatable that i'm
gonna make a call and get it right

393
00:32:54,310 --> 00:32:56,620
ignoring any talk two issues or whatever

394
00:32:56,620 --> 00:33:00,709
do this and some say fashion and that it
could pull the entropy and then verified

395
00:33:00,710 --> 00:33:06,520
that I get high quality and yes no cause
you don't like random to get you to sign

396
00:33:06,520 --> 00:33:12,530
you random like you could envision that
code right it doesn't exist just like W

397
00:33:12,530 --> 00:33:17,710
bytes whether or not I was high quality
for colonel was under heavy pressure

398
00:33:17,710 --> 00:33:24,430
just takes it runs so I guess I think
conceptually expect a little better

399
00:33:24,430 --> 00:33:31,390
out of OpenSSL but it it just does not
care so petty interfaces tomorrow to

400
00:33:31,390 --> 00:33:39,590
OpenSSL modssl marginal Apache
initializes the OpenSSL library when it

401
00:33:39,590 --> 00:33:45,070
first close-up and then it later attempt
at a tribute to the openness is so she

402
00:33:45,070 --> 00:33:54,950
unfortunately its efforts are not racist
dude I just go off my talking like to

403
00:33:54,950 --> 00:34:01,660
actually this is entropy we generally
eight bits of entropy so far in this

404
00:34:01,660 --> 00:34:14,590
talk black to stand up and just get the
microphones working again because I'm a

405
00:34:14,590 --> 00:34:22,159
little ok go for it I will go for it so
modest I'll will attempt to does not

406
00:34:22,159 --> 00:34:25,840
ever received under previous slide we
had a thing where there is a way that

407
00:34:25,840 --> 00:34:30,290
you can receive OpenSSL but you can call
light rainfall intensity yourself and

408
00:34:30,290 --> 00:34:33,659
everything worked fine but at the end of
the day they don't do it instead of

409
00:34:33,659 --> 00:34:38,840
myself as I'm just gonna invent my own
way of receiving the TRNG and it does

410
00:34:38,840 --> 00:34:42,990
three things I want to take a date and
time for bite resolution which turns out

411
00:34:42,989 --> 00:34:47,479
is not a high-resolution time and that's
pretty low and is somewhat predictable

412
00:34:47,480 --> 00:34:52,469
the pic which is generally static for
most things like web servers you don't

413
00:34:52,469 --> 00:34:56,399
get like massive it changes all the time
if it's pretty constant and it does this

414
00:34:56,399 --> 00:35:00,940
trick where it takes two to six points
off the stack in just tried to read it

415
00:35:00,940 --> 00:35:05,000
so it makes like a random just will get
the next slide it just says others about

416
00:35:05,000 --> 00:35:06,420
dating here and probably change

417
00:35:06,420 --> 00:35:18,059
so you left the room worse that's real
good I think that the board was 6 p.m.

418
00:35:18,059 --> 00:35:25,450
and it's like it out here so this 256
bytes it comes off the stack it it's

419
00:35:25,450 --> 00:35:28,660
pretty much just said like a modest
health documentation like I we just

420
00:35:28,660 --> 00:35:33,190
declare this irate and we just read a
lot and we think it changes so we don't

421
00:35:33,190 --> 00:35:37,829
think it changes a lot it they realize
this array

422
00:35:37,829 --> 00:35:45,950
don't initialize declaring his thing and
then we just read it and we ran on a run

423
00:35:45,950 --> 00:35:52,470
for awhile 600,000 request just about
4000 4500 you devalue so it's very less

424
00:35:52,470 --> 00:35:56,660
than one percent of the time that we
read it so you got this source of

425
00:35:56,660 --> 00:36:00,490
attribute being fed into modest out
given credit is this every time you make

426
00:36:00,490 --> 00:36:06,098
a request by the amount of entropy
mounted kind of like surprising things

427
00:36:06,099 --> 00:36:12,099
here is very small because the day at a
time where is changed pretty slowly to

428
00:36:12,099 --> 00:36:15,770
pick doesn't change at all and then this
weeks doctoring the 3d doesn't really

429
00:36:15,770 --> 00:36:20,470
change much at all either so it's better
than nothing but it's a very complicated

430
00:36:20,470 --> 00:36:23,419
system to basically baby get better too

431
00:36:23,420 --> 00:36:27,079
in the process

432
00:36:27,079 --> 00:36:31,569
Nexus and Nexus come in Linux web server
out there and that sexy just doesn't

433
00:36:31,569 --> 00:36:35,410
even do as well as Apache just uses the
OpenSSL random number generator in and

434
00:36:35,410 --> 00:36:39,078
then that's the end of that never
proceeded to start up the engine next

435
00:36:39,079 --> 00:36:44,710
week you make some claim like yeah we
could do that probably should

436
00:36:44,710 --> 00:36:54,050
talk about it done that you wanna take
back oh yeah I guess I'll stand up now

437
00:36:54,050 --> 00:37:01,500
been kind of silence such as very good
to put up with me so now we want to look

438
00:37:01,500 --> 00:37:04,980
at it and see your legend like to talk
about interviewing you don't forget your

439
00:37:04,980 --> 00:37:08,390
estimation within the current so how
many megabytes how much rain today is

440
00:37:08,390 --> 00:37:13,259
actually can soon can you do kind of
basic things like generate keys and and

441
00:37:13,260 --> 00:37:17,859
you know there's a web page and then
that kind of thing so I mean that the

442
00:37:17,859 --> 00:37:24,369
data here is is largely unsurprising
again we're assuming when we do all

443
00:37:24,369 --> 00:37:29,930
these things that OpenSSL was seated
with high-quality entropy right like it

444
00:37:29,930 --> 00:37:33,460
wasn't just something that's been
started already and we've seen in the

445
00:37:33,460 --> 00:37:38,540
kernel did you get really good you know
random numbers but still has no way of

446
00:37:38,540 --> 00:37:43,259
knowing so we're just kind of guesses
says everything's ok so obviously

447
00:37:43,260 --> 00:37:50,310
unsurprisingly takes a lot more random
bytes for OpenSSL generator 4096 picky

448
00:37:50,310 --> 00:37:57,270
that generated 2010 20:44 the Apache
again he would say what is doing they're

449
00:37:57,270 --> 00:38:02,560
so that generated 4096 Mickey D's to
find a 4096 but Prime so it's

450
00:38:02,560 --> 00:38:07,640
essentially it picks a number it checks
whether its prime and subprime it at 2

451
00:38:07,640 --> 00:38:12,950
in the checks that I keep going until
Prime so the forty 9650 initial

452
00:38:12,950 --> 00:38:17,609
generations not a lot of data the extra
primarily as an extra random numbers are

453
00:38:17,609 --> 00:38:21,299
coming in the probability test they use
a probabilistic personality test does

454
00:38:21,300 --> 00:38:25,180
that they need a lot of numbers to
attest the members pride so much you

455
00:38:25,180 --> 00:38:29,279
might get lucky and find a primarily on
or you might have to go really far

456
00:38:29,280 --> 00:38:36,700
different from so the question here is
how much HP do you really need to be

457
00:38:36,700 --> 00:38:41,740
secure so you know it's interesting
because you have to think about the

458
00:38:41,740 --> 00:38:46,209
types of the taxes and fees are likely
to come under and one is control of

459
00:38:46,210 --> 00:38:47,390
entropy spaces

460
00:38:47,390 --> 00:38:50,960
resources right this is the fear that
are dear and has been back toward

461
00:38:50,960 --> 00:38:53,960
somehow someone is parked free said

462
00:38:53,960 --> 00:38:57,570
you know data at four hundred megabytes
a second or something like that I

463
00:38:57,570 --> 00:39:00,890
control the amount seized control of
things and therefore I I know all the

464
00:39:00,890 --> 00:39:05,359
inputs like to know the state the second
attack is I just know the internal state

465
00:39:05,359 --> 00:39:09,020
of your PR Eng and so does not know the
internal state I can know all possible

466
00:39:09,020 --> 00:39:12,480
forward stage at the very least it's a
half to go backwards like it we go

467
00:39:12,480 --> 00:39:17,660
forward and the other one is a refugee
kind of sucks and I could just a German

468
00:39:17,660 --> 00:39:24,049
trafficking for your weaknesses so
controlling it puts you know by default

469
00:39:24,050 --> 00:39:27,480
there's a bunch of different sources of
inputs and it's difficult to control all

470
00:39:27,480 --> 00:39:33,520
of them and in general for most PRN geez
once they hit that 256 bit of entropy

471
00:39:33,520 --> 00:39:38,089
Mart once they get 32 bits of entropy
they tend to perform pretty well this is

472
00:39:38,089 --> 00:39:41,670
made this claim other researchers have
made this claim you know we have a long

473
00:39:41,670 --> 00:39:45,450
way to go in analyzing that's was a
little out of scope for what we're

474
00:39:45,450 --> 00:39:49,770
trying to accomplish but at the end of
the day you can hit that rationale of

475
00:39:49,770 --> 00:39:53,720
actually having six kids eventually
things that you didn't surprising things

476
00:39:53,720 --> 00:39:58,640
to feed your PRG you're probably going
to be ok and even indication most

477
00:39:58,640 --> 00:40:06,700
necessary very hard to control all those
inputs knowledge of the state so there's

478
00:40:06,700 --> 00:40:09,970
one takeaway here like the internal
state of the Linux kernel we're also

479
00:40:09,970 --> 00:40:15,140
going on is complex you know it's very
difficult to know the state and even

480
00:40:15,140 --> 00:40:18,410
what we found is observing the state
gets like a shorter girls state it can

481
00:40:18,410 --> 00:40:21,348
be you know can perturb it so it's
difficult to figure out exactly what's

482
00:40:21,349 --> 00:40:24,070
going on there's probably race
conditions in there what have you tried

483
00:40:24,070 --> 00:40:28,210
to hold this thing apart and then know
the entire state Avenue allstate's board

484
00:40:28,210 --> 00:40:33,130
it may be very hard to get that snapshot
and observing the output again miss a

485
00:40:33,130 --> 00:40:38,740
lot of walks are you doing now the
caveats to all this is as it turns out

486
00:40:38,740 --> 00:40:44,560
like cryptography relies on things being
done correctly you know and we can make

487
00:40:44,560 --> 00:40:47,589
a lot of claims by how good these pure
injuries are but the beer and cheese

488
00:40:47,589 --> 00:40:51,460
when they've been analyzed it been the
claims are made based on being seated

489
00:40:51,460 --> 00:40:56,580
correctly right and what we found is in
a lot of cases it's not seated correctly

490
00:40:56,580 --> 00:41:02,500
so what the actual applied impacted this
is we're not really sure right now but

491
00:41:02,500 --> 00:41:04,410
we are sure is

492
00:41:04,410 --> 00:41:07,629
I'd say nine times out of ten you're not
see the way that you think your CD

493
00:41:07,630 --> 00:41:11,310
you're not the high-quality entropy into
friday it's the cryptographic impact in

494
00:41:11,310 --> 00:41:13,220
the back side is unknown

495
00:41:13,220 --> 00:41:19,450
that scared us from my perspective is
unknown eventually things go sideways so

496
00:41:19,450 --> 00:41:23,830
we're hoping to shed some light on this
in order to get people to care about

497
00:41:23,830 --> 00:41:28,529
this and address the concerns one of the
things that we've done also has created

498
00:41:28,530 --> 00:41:35,170
a client that you can use today you can
download it and try to address these

499
00:41:35,170 --> 00:41:39,010
issues rather than waiting for the Linux
kernel to be fixed in that kind of day

500
00:41:39,010 --> 00:41:47,600
so what this does is it actually sits
inside helping us out and replace random

501
00:41:47,600 --> 00:41:53,170
number generation engine we saw in a
cell is not necessarily making good

502
00:41:53,170 --> 00:41:59,550
decisions but we did good decisions on
its behalf so with this library you can

503
00:41:59,550 --> 00:42:04,530
select few sources are used to mess
around with the kernel you can choose

504
00:42:04,530 --> 00:42:10,390
you know how to see them which guarantee
you want to use you can you want to

505
00:42:10,390 --> 00:42:14,120
receded all kinds of things like that
you can get local you get network and

506
00:42:14,120 --> 00:42:18,210
get all kinds of different sources
venture be defeat into this thing and so

507
00:42:18,210 --> 00:42:21,830
we get past all the kernel nonsense all
the other stuff just replace whole hog

508
00:42:21,830 --> 00:42:26,060
what's happening inside of openness so
now you would ask why would we do that

509
00:42:26,060 --> 00:42:29,910
maybe we could just do a lot of kernel
patch or something like that I could

510
00:42:29,910 --> 00:42:31,480
just go to the status quo

511
00:42:31,480 --> 00:42:35,040
all right now the sad part ways it's all
kind of broken nobody seems to

512
00:42:35,040 --> 00:42:40,029
understand it so we figured we'd expect
their selves ETG and had package

513
00:42:40,030 --> 00:42:46,190
announced it had your results for us so
these usual and entropy damage and how

514
00:42:46,190 --> 00:42:48,480
many were sysadmin back in the nineties

515
00:42:48,480 --> 00:42:54,090
you can use your old you raise your hand

516
00:42:54,090 --> 00:43:00,160
you know it was like a first try to
stall usual and David for you like I say

517
00:43:00,160 --> 00:43:03,940
that as a generation reasonable keys
because the source of that you were so

518
00:43:03,940 --> 00:43:08,200
bad and there's a lot of you reading and
stuff it still occurs but you know from

519
00:43:08,200 --> 00:43:11,500
our analysis sometimes it's not as good
even as just leaving the system alone

520
00:43:11,500 --> 00:43:19,540
and so like I said we decided just to
scoop out what's there in OpenSSL and

521
00:43:19,540 --> 00:43:25,620
and replaces it with our own now a quote
from last colonel million less than a

522
00:43:25,620 --> 00:43:32,650
little bit of history so 2011 Matt
Mackall basically said Pedro

523
00:43:32,650 --> 00:43:38,060
heart-rendering how to use our dear and
assault because it's wicked fast and

524
00:43:38,060 --> 00:43:45,140
wicked good and that starting happened
actually gets her so took over the

525
00:43:45,140 --> 00:43:48,180
colonel and he added the other sources
back so that's kind of psychotic you

526
00:43:48,180 --> 00:43:51,390
don't put all your eggs in one basket
that's going to happen then there was a

527
00:43:51,390 --> 00:43:56,560
battle to remove our dear and all
together and then like Linus just like

528
00:43:56,560 --> 00:43:59,870
on court did basically said let adults
do you know what they're supposed to do

529
00:43:59,870 --> 00:44:04,060
with don't pretend to be good talkers
anymore it short answer we actually know

530
00:44:04,060 --> 00:44:05,100
what we're doing

531
00:44:05,100 --> 00:44:11,660
you don't now what we saw is when you
turn on our dear analytics you get the

532
00:44:11,660 --> 00:44:15,839
worst entropy estimation of any other
way that we had to put everything into

533
00:44:15,840 --> 00:44:19,870
that system so we expect a line is
claiming he knows what he's doing it we

534
00:44:19,870 --> 00:44:24,819
don't I will challenge that I don't
believe that to be true and that again

535
00:44:24,820 --> 00:44:28,780
is terrifying right cuz he's like the
arbiter of what the hell goes on and all

536
00:44:28,780 --> 00:44:33,060
these servers and he makes the decision
so I don't think he knows because of

537
00:44:33,060 --> 00:44:38,440
that we went up the stack and we went
into OpenSSL and so effectively there's

538
00:44:38,440 --> 00:44:42,330
two components of the library there's a
daemon itself that can hook into

539
00:44:42,330 --> 00:44:46,920
whatever source of entropy local and
remote that you want to feed it and then

540
00:44:46,920 --> 00:44:48,539
there's

541
00:44:48,539 --> 00:44:53,279
the library that gets installed in to
replace Friday OpenSSL source code so

542
00:44:53,279 --> 00:44:58,429
OpenSSL has a configuration file you can
specify the engines that you want to use

543
00:44:58,429 --> 00:45:03,219
and if you just want OpenSSL you change
your configuration appointed our library

544
00:45:03,219 --> 00:45:08,089
and it works great with all the readme
by the way when I'm telling you but it's

545
00:45:08,089 --> 00:45:10,929
interesting because anything that
anything but most things that call

546
00:45:10,929 --> 00:45:15,910
OpenSSL Joe Reed open a cell
configuration they just use the default

547
00:45:15,910 --> 00:45:18,269
so you have together OpenSSL

548
00:45:18,269 --> 00:45:22,649
hoping to sell configuration modest
allen wrenches next to not care about

549
00:45:22,650 --> 00:45:28,509
that they will just use OpenSSL its
default so you actually have to go back

550
00:45:28,509 --> 00:45:36,660
and I guess recompile modest or engine
exit you want to use our library and so

551
00:45:36,660 --> 00:45:42,229
it it once it's installed there's a high
chair here you know we didn't want to do

552
00:45:42,229 --> 00:45:47,229
a live demo in and talk to demo noms but
once you get it installed it is

553
00:45:47,229 --> 00:45:52,328
identical in process just OpenSSL as you
know it today you can generate keys you

554
00:45:52,329 --> 00:45:55,829
can generate certificates you know you
can check on the status of actually

555
00:45:55,829 --> 00:45:59,309
brought out extra information to say hey
here's what the injury situation looks

556
00:45:59,309 --> 00:46:02,919
like so that you can validate it looks
like it was in a good state right

557
00:46:02,919 --> 00:46:07,469
generated this certificate is key and
then continue on that's not something

558
00:46:07,469 --> 00:46:12,719
you get today right over us just like
here's your case was no one that went

559
00:46:12,719 --> 00:46:19,079
into that thing so it's very seriously
it's very transparent let's get

560
00:46:19,079 --> 00:46:23,499
installed just get out of the whole
universe apply to see the colonel and

561
00:46:23,499 --> 00:46:29,480
everything else going on so it's
currently available on tower.com

562
00:46:29,480 --> 00:46:34,470
actively developing the client still
we're looking to integrate with other

563
00:46:34,470 --> 00:46:39,279
components and integrated with other
suspects feel like why would he and

564
00:46:39,280 --> 00:46:43,109
other interview offerings that are out
there and also increases stability and

565
00:46:43,109 --> 00:46:46,680
things of that nature I want to make a
lot of claims about the stability we've

566
00:46:46,680 --> 00:46:50,560
tested it we started out pretty good if
you download it or break it

567
00:46:50,560 --> 00:46:54,790
let us know we would love to make it
better we'd love to get feedback on this

568
00:46:54,790 --> 00:47:01,440
I think this seems like an interesting
idea when we started it and as we got

569
00:47:01,440 --> 00:47:07,040
into it got scary few people really
understood what was going on and he came

570
00:47:07,040 --> 00:47:10,869
to see these are in G's and and and what
was happening with a limited

571
00:47:10,869 --> 00:47:15,220
attributable to colonel so I think we've
taken this on as a bit more holy word

572
00:47:15,220 --> 00:47:18,740
that we had in the beginning so pretty
passionate about it so be happy

573
00:47:18,740 --> 00:47:24,029
backward-looking so with that I'll take
a few minutes of questions you were

574
00:47:24,030 --> 00:47:34,210
there is like Mike's if you wanna be
heard you like now I want to listen to

575
00:47:34,210 --> 00:47:37,540
too much of a product pitch to their
security at the white with ruth they

576
00:47:37,540 --> 00:47:44,730
could stop by and take a look at that
time it's not like you like the guy who

577
00:47:44,730 --> 00:47:51,470
wrote James Bond Quantum RNG it's a PCIe
card that produces high-quality sources

578
00:47:51,470 --> 00:47:57,500
on there so other questions

579
00:47:57,500 --> 00:48:02,840
yeah just curious have you done any kind
of analysis on like an assessor modern

580
00:48:02,840 --> 00:48:07,190
assess any better now

581
00:48:07,190 --> 00:48:22,390
look at the boot up process for the
colonel and see what the attorney Paul

582
00:48:22,390 --> 00:48:30,470
was doing during the build up a demeanor
state that saving them brought back to

583
00:48:30,470 --> 00:48:37,910
life through that process at third of it
actually saves us as it started things

584
00:48:37,910 --> 00:48:40,589
up right to today and on the net

585
00:48:40,589 --> 00:48:44,460
start up it will use that to see today
but next time so this is a little funny

586
00:48:44,460 --> 00:48:47,730
it would make more sense to write that
little piece eventually the disc at the

587
00:48:47,730 --> 00:48:51,940
end but if you crash then you wouldn't
have that it be there for start-up we

588
00:48:51,940 --> 00:48:56,130
know that some stuff is seated in his
forces into that as the machine comes up

589
00:48:56,130 --> 00:48:59,150
because if you have two identical the
images and destroyed them up

590
00:48:59,150 --> 00:49:04,520
generate SSH keys they're different but
they might not be very different as we

591
00:49:04,520 --> 00:49:09,430
know from some other research where they
found that they were duplications in RSA

592
00:49:09,430 --> 00:49:15,980
keys and shared factors across the
internet

593
00:49:15,980 --> 00:49:23,440
open source software it runs and
resource

594
00:49:23,440 --> 00:49:32,770
number generators are everything that
which is also a source

595
00:49:32,770 --> 00:49:44,100
forces raided the same problems we have
today accepted the fact that will cost

596
00:49:44,100 --> 00:49:50,230
we see right so right now if you're in a
day but it will never received in any

597
00:49:50,230 --> 00:49:55,360
meaningful way you know we will
constantly so starts out somewhat

598
00:49:55,360 --> 00:49:59,960
suspect because you have limited entry
hopefully over time increasing

599
00:49:59,960 --> 00:50:03,020
increasing be better and better and
better what happens now which is just

600
00:50:03,020 --> 00:50:05,880
you take what you had to begin with it
forever

601
00:50:05,880 --> 00:50:11,820
Bruce question for you have you or any
of your organization submitted a

602
00:50:11,820 --> 00:50:18,430
contribution to OpenSSL to reseed after
X number of blocks sasha was saying that

603
00:50:18,430 --> 00:50:23,529
keeps track the number of blocks are
requested has any contribution been made

604
00:50:23,530 --> 00:50:30,290
to correct that problem with no
nothing's been made some circles kind of

605
00:50:30,290 --> 00:50:34,840
about four there's been discussion on
how to make this better I think what

606
00:50:34,840 --> 00:50:38,410
we're hoping to do is build enough
support to get a change I think this is

607
00:50:38,410 --> 00:50:43,220
an area where I guess to be played as a
lot of concern Iraq and the boat because

608
00:50:43,220 --> 00:50:54,000
as all get out so we are open to talk to
folks they're working on OpenSSL to make

609
00:50:54,000 --> 00:51:05,240
this better than we have not actually
agency would you speculate give us

610
00:51:05,240 --> 00:51:09,669
reasons why you found Android had a
higher rate of entropy generation then

611
00:51:09,670 --> 00:51:18,350
having a server so that one was
completely surprising everyone because I

612
00:51:18,350 --> 00:51:19,000
don't know

613
00:51:19,000 --> 00:51:25,750
Bitcoin recently like a wallet got home
because like developers didn't see the

614
00:51:25,750 --> 00:51:30,470
ball properly venture p.m. like the same
you can still watch it and it kind of

615
00:51:30,470 --> 00:51:38,180
was being like wow you know generating
entropy and must be just fired up it was

616
00:51:38,180 --> 00:51:43,310
like it ordered better you know it looks
server with the hell we'd have time to

617
00:51:43,310 --> 00:51:47,049
really dive into me that the current
code is the same and my guess is that

618
00:51:47,050 --> 00:51:49,890
the underlying thing that whatever the
hell happened this time workers probably

619
00:51:49,890 --> 00:51:55,430
really surprising and really helping
things out so versus network which is

620
00:51:55,430 --> 00:52:08,870
probably a lot less begin conjecture of
sales all do so it's not due to him I

621
00:52:08,870 --> 00:52:15,339
have you had any speculation as the kind
of attacks that could be modeled based

622
00:52:15,340 --> 00:52:19,370
on these flaws for example if you were
to exhaust the entry pool while it's

623
00:52:19,370 --> 00:52:25,049
blocking something something and that
isn't truly random or condition have you

624
00:52:25,050 --> 00:52:28,010
thought about you that kind of stuff to
you after effects of which researchers

625
00:52:28,010 --> 00:52:35,010
found so I mean it's not like I said you
know the survey about controlling me but

626
00:52:35,010 --> 00:52:39,660
stay here knowing the input state and
you're using a reasonably good and she

627
00:52:39,660 --> 00:52:45,828
liked it so hard it's a hard nut to
crack it starts to read

628
00:52:45,829 --> 00:52:51,099
basically the core of what you believe
you're generating any material things of

629
00:52:51,099 --> 00:52:55,289
that nature and would have to be
something that would fall we didn't see

630
00:52:55,289 --> 00:52:59,599
anything that directly led to compromise
but again we're looking at it we should

631
00:52:59,599 --> 00:53:00,779
OpenSSL

632
00:53:00,779 --> 00:53:05,309
heavyweight well well reviewed
algorithms that people are pretty

633
00:53:05,309 --> 00:53:09,209
familiar with it other people are using
this as a roadmap and engaging other

634
00:53:09,209 --> 00:53:13,440
algorithms likely be totally naked and
sideways but these 10 relatively

635
00:53:13,440 --> 00:53:31,300
resilient those types of attacks and
simple

636
00:53:31,300 --> 00:53:44,300
those kind of comments is everything
turns yeah we try to make this something

637
00:53:44,300 --> 00:53:51,150
that's the big question is if the client
to paraphrase not grab samples trying to

638
00:53:51,150 --> 00:53:56,090
say no I think it's pretty robust as
well documented as read these codes well

639
00:53:56,090 --> 00:53:59,420
commented I think it's well structured I
was actually pretty easy to read and

640
00:53:59,420 --> 00:54:06,810
like i said im so that people can pick
this up using extended and do something

641
00:54:06,810 --> 00:54:11,740
productive with it so there's there's a
number of test suites sorry there's a

642
00:54:11,740 --> 00:54:15,229
number of tests out there for measuring
entropy in a BSI runs their test suites

643
00:54:15,230 --> 00:54:17,910
are you can run this town measuring
randomness but you guys are actually

644
00:54:17,910 --> 00:54:21,850
kind of using random data to generate a
group of people so it's kind of inverted

645
00:54:21,850 --> 00:54:24,750
did you actually do any validation on
whether I put his by running beside her

646
00:54:24,750 --> 00:54:32,300
nest those could be interviewed tests
are designed to run on truman and data

647
00:54:32,300 --> 00:54:40,910
right and you guys can get a card and
you put it through a period you're gonna

648
00:54:40,910 --> 00:54:45,520
get updated that will absolutely prices
are to be test because because the peer

649
00:54:45,520 --> 00:54:49,230
into these are so good so anything that
comes out of a period you're not you

650
00:54:49,230 --> 00:54:54,800
can't you have to be elevated by looking
at is this a position where did this

651
00:54:54,800 --> 00:54:58,000
data come from back in the beginning
because one as soon as it goes to any

652
00:54:58,000 --> 00:55:01,570
kind of modern cryptographic primitive
you can't tell whether it's good or not

653
00:55:01,570 --> 00:55:05,060
well no I mean that's what this tester
for BSI is for testing interview the

654
00:55:05,060 --> 00:55:15,269
next test server actually testing
randomness with you were talking about

655
00:55:15,269 --> 00:55:24,348
other tests maybe we should talk about
this after alright alright I guess it's

656
00:55:24,349 --> 00:55:26,499
been fun hope you enjoy lunch thanks
very much

