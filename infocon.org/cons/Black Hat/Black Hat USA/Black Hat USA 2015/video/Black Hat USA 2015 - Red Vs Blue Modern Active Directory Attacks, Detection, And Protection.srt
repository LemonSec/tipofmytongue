1
00:00:00,000 --> 00:00:04,339
good afternoon I hope everybody had a
good lunch today welcomed to black hat

2
00:00:04,339 --> 00:00:09,340
2015 briefings they won just a couple of
announcements there will be a reception

3
00:00:09,340 --> 00:00:15,240
tonight in the business call at 5:30
that's located in Shoreline a the Pawnee

4
00:00:15,240 --> 00:00:23,230
awards are also this evening those are
in Mandalay Bay BCE at 6 p.m. you are in

5
00:00:23,230 --> 00:00:24,019
the room

6
00:00:24,019 --> 00:00:28,348
mentally yep right now for the session
Red vs Blue modern Active Directory

7
00:00:28,349 --> 00:00:33,710
attacks detection and protection John
Metcalf is your speaker that's where you

8
00:00:33,710 --> 00:00:40,640
intend to be great if not you know also
as with all talks really really would

9
00:00:40,640 --> 00:00:44,170
prefer not to hear your super cool
ringtones so let's make sure phones are

10
00:00:44,170 --> 00:00:54,790
on vibrate and with that shot away

11
00:00:54,790 --> 00:00:59,930
good afternoon i'm sure this is Red vs
Blue modern a character attacks

12
00:00:59,930 --> 00:01:05,199
detection prevention a long time but
effectively really talk about Active

13
00:01:05,199 --> 00:01:13,090
Directory attack and defense and the
city or Dan solutions which is a

14
00:01:13,090 --> 00:01:20,170
Microsoft solutions provider engineering
and security solutions are going to

15
00:01:20,170 --> 00:01:22,990
customers and talk to them about how
they can secure their Microsoft

16
00:01:22,990 --> 00:01:27,350
Enterprise specifically Active Directory
I do a lot of security research

17
00:01:27,350 --> 00:01:34,759
surrounding Active Directory and I post
that oftentimes 280 security door so the

18
00:01:34,759 --> 00:01:38,500
agenda simple we're gonna show some
attacks basically there's a lot of

19
00:01:38,500 --> 00:01:45,350
conversation in the news in the media
about malware to talk about now we're

20
00:01:45,350 --> 00:01:49,339
going to talk about what happens once a
malware gets on a computer and those

21
00:01:49,340 --> 00:01:54,550
attackers connected to that computer and
use it as their jumping point how does

22
00:01:54,550 --> 00:01:58,100
an attacker get from domaine user demand
admin we're gonna talk about some of

23
00:01:58,100 --> 00:02:06,820
those techniques so we know in the news
we have reaches seems like every week

24
00:02:06,820 --> 00:02:11,690
there's another one that's announced we
hear about them out there but how do

25
00:02:11,690 --> 00:02:16,030
they completely on environment don't we
have security to protect against this

26
00:02:16,030 --> 00:02:21,100
will the issue is that our traditional
security is easily bypass why because

27
00:02:21,100 --> 00:02:25,670
we've been focusing on the perimeter for
years our firewalls are primitive

28
00:02:25,670 --> 00:02:30,480
security devices are not doing what we
need them to do today

29
00:02:30,480 --> 00:02:34,829
email goes right through it right users
get Spearfish why did they click on

30
00:02:34,830 --> 00:02:39,580
links does it look like this it's way
too easy to get someone click on a link

31
00:02:39,580 --> 00:02:43,459
open up an attachment and then click on
that little but missus enable content

32
00:02:43,459 --> 00:02:48,450
that means when user nothing to user
that means click on this to see the

33
00:02:48,450 --> 00:02:54,440
contact ok we train them to view this
rising release our data breach

34
00:02:54,440 --> 00:02:57,069
investigations report last year and it
said

35
00:02:57,069 --> 00:03:02,458
why a lot of numbers seventy to ninety
percent of the malware that was used in

36
00:03:02,459 --> 00:03:10,840
these bridges was unique to that
organization 99.9% almost a hundred

37
00:03:10,840 --> 00:03:16,400
percent of the vulnerabilities exploited
these breaches how patches that came out

38
00:03:16,400 --> 00:03:23,469
a year before that 50% of the user's
spearfishing exercise actually opened up

39
00:03:23,469 --> 00:03:29,189
the email within an hour right so we
know email works right so let's talk

40
00:03:29,189 --> 00:03:34,709
about what the attackers are doing the
red team what their motivations are what

41
00:03:34,709 --> 00:03:38,609
are they after other than maybe I don't
know sharks with frickin laser beams on

42
00:03:38,609 --> 00:03:40,939
their heads or something

43
00:03:40,939 --> 00:03:46,349
attackers after they want data they want
to grab the data from organizations they

44
00:03:46,349 --> 00:03:49,310
want to put it on the Internet where
they can access it and they want to

45
00:03:49,310 --> 00:03:51,760
persist in the environment

46
00:03:51,760 --> 00:03:55,078
sometimes this includes vs Road
privilege escalation sometimes it

47
00:03:55,079 --> 00:03:56,159
doesn't

48
00:03:56,159 --> 00:04:00,060
lot of times it does why because it's
too easy to get to demand that you want

49
00:04:00,060 --> 00:04:03,599
to learn more about persistence I highly
recommend you go to Matt Grevers talk in

50
00:04:03,599 --> 00:04:07,888
this room at 4:20 because he'll talk
about the advanced techniques that

51
00:04:07,889 --> 00:04:13,909
attackers are using today to persist in
the network PowerShell lot of been

52
00:04:13,909 --> 00:04:17,728
talked about in PowerShell the past few
years

53
00:04:17,728 --> 00:04:22,490
PowerShell is an integrated component
Windows you cannot uninstall it on every

54
00:04:22,490 --> 00:04:27,919
version or every supported version of
Windows is out today why do attackers

55
00:04:27,919 --> 00:04:33,539
low-power show well there's a bunch of
tall kids they can use but the coolest

56
00:04:33,539 --> 00:04:36,990
thing about PowerShell to an attacker is
the fact that they can grab code off a

57
00:04:36,990 --> 00:04:42,889
web server have a download and execute
in memory nothing touches disk antivirus

58
00:04:42,889 --> 00:04:48,229
will not stop this week Powersports
involve many cash injecting shellcode

59
00:04:48,229 --> 00:04:51,449
into memory stealing tokens reusing
injecting

60
00:04:51,449 --> 00:04:56,639
prophecies are executables into existing
running process misha is another one

61
00:04:56,639 --> 00:05:01,620
that's very similar with additional
tools for recon environment power

62
00:05:01,620 --> 00:05:06,189
enables the attacker to identify who's
logged onto a computer with additional

63
00:05:06,189 --> 00:05:10,539
tools her recounting an actor director
environment and PowerShell empire which

64
00:05:10,539 --> 00:05:14,318
is being announced in about five minutes

65
00:05:14,319 --> 00:05:17,610
powerful empire check it out

66
00:05:17,610 --> 00:05:25,219
this is the evolution of PowerShell
attacks so that I can get on a system

67
00:05:25,219 --> 00:05:30,740
that the malware there they are
operating as it to mean user

68
00:05:30,740 --> 00:05:33,830
well they could use a traditional method
of getting information about the

69
00:05:33,830 --> 00:05:37,710
environment what is that network for its
can write a whole bunch of IP's on

70
00:05:37,710 --> 00:05:42,029
different ports information back we
don't need to do that and more active

71
00:05:42,029 --> 00:05:47,149
directory has all this information why
would an attacker needs to scan in order

72
00:05:47,149 --> 00:05:51,159
for a service to support Kerberos there
needs to be a service principal name

73
00:05:51,159 --> 00:05:55,069
associated with that account that
provides a search began a service

74
00:05:55,069 --> 00:05:59,110
account or computer account will that
information is an active directory

75
00:05:59,110 --> 00:06:04,469
service principal name or spin is
formatted like this you have the spin

76
00:06:04,469 --> 00:06:09,149
class you have the server name and was
sequel it even has the port number

77
00:06:09,149 --> 00:06:13,979
sequels running on here changes this
sequel port in order to be a little more

78
00:06:13,979 --> 00:06:17,990
tricky so that way no one knows what it
is right right here in Active Directory

79
00:06:17,990 --> 00:06:24,129
domain user we can request this
information I don't request it

80
00:06:24,129 --> 00:06:30,889
with our I can spend scan for every
single server in the domain or the

81
00:06:30,889 --> 00:06:35,939
forest by spin scanning when I do this I
get information about every single

82
00:06:35,939 --> 00:06:40,589
server including the port is running on
an instance name the sequel service

83
00:06:40,589 --> 00:06:45,889
account that they're so this means I can
also spend scamper service accounts

84
00:06:45,889 --> 00:06:50,819
that's really useful what if I can find
the secret service account that's the

85
00:06:50,819 --> 00:06:54,539
account that is the administrator on all
of these simple service here I have

86
00:06:54,539 --> 00:06:59,699
three ok what can I do with that

87
00:06:59,699 --> 00:07:04,439
well last year at Derby Conn timid in
released a python based or call Kerberos

88
00:07:04,439 --> 00:07:10,929
your defender your very scared of this
so he recognized that the way that

89
00:07:10,929 --> 00:07:17,109
Kerberos communication works is that the
user type in the username password prove

90
00:07:17,110 --> 00:07:22,729
their identity to the demand controller
and the domain controller looks them up

91
00:07:22,729 --> 00:07:26,209
in a diego's ok this user is a member of
these groups has his long gun

92
00:07:26,209 --> 00:07:28,009
restrictions etc

93
00:07:28,009 --> 00:07:32,949
bill to TGT a ticket granting ticket
effectively the authentication to get a

94
00:07:32,949 --> 00:07:37,800
proves that user is that user to the
directory to the domain controllers that

95
00:07:37,800 --> 00:07:41,300
teaches delivered to the user the user
turns around to the back to the domain

96
00:07:41,300 --> 00:07:46,949
controller says I need a service ticket
for this service principal name he

97
00:07:46,949 --> 00:07:50,759
doesn't care it goes alright you have a
ballot EDT I'm gonna take the data of

98
00:07:50,759 --> 00:07:52,539
the TGT respectively

99
00:07:52,539 --> 00:07:55,469
take your group membership that
information put into that service ticket

100
00:07:55,469 --> 00:08:00,689
that service ticket is encrypted with
the service account password that is

101
00:08:00,689 --> 00:08:04,999
running out of the context of that
service so began a user account or a

102
00:08:04,999 --> 00:08:08,720
computer does this mean

103
00:08:08,720 --> 00:08:16,670
this means that if an attacker request a
service ticket for a specific service

104
00:08:16,670 --> 00:08:20,090
principal name on the network it's a
service ticket for it

105
00:08:20,090 --> 00:08:25,789
using power so you can see in the bottom
here that I have that service ticket the

106
00:08:25,790 --> 00:08:29,460
domain controller doesn't care if I ever
actually talk to that server imma get

107
00:08:29,460 --> 00:08:35,520
the service ticket anyway so we can take
that service ticket out of memory save

108
00:08:35,520 --> 00:08:40,848
it using many cats or other tools to use
and then copy it up to the internet

109
00:08:40,849 --> 00:08:49,980
somewhere I can use my tackle box on AWS
serve as your wherever run run the

110
00:08:49,980 --> 00:08:54,210
Kerberos tool against it and what will
happen is I can have a whole bunch of

111
00:08:54,210 --> 00:09:00,140
service account related IT service
tickets and have Kerberos run through

112
00:09:00,140 --> 00:09:04,910
and brute force them based on my
dictionary file why does this work

113
00:09:04,910 --> 00:09:11,839
what is your domain password policy what
is the minimum eight characters 10

114
00:09:11,840 --> 00:09:15,780
characters 12:15

115
00:09:15,780 --> 00:09:19,949
25 now or higher

116
00:09:19,950 --> 00:09:22,670
you don't want your service counter be
the one that actually is the reason why

117
00:09:22,670 --> 00:09:29,300
your entire team gets popped her roses
way to me to run because the attacker

118
00:09:29,300 --> 00:09:36,609
can can crack those passwords offline
and they have months to do so they can

119
00:09:36,610 --> 00:09:41,190
use a Bitcoin ready even to really get
some good numbers but there's also

120
00:09:41,190 --> 00:09:45,890
manager discounting for managed service
accounts which can be used so they a

121
00:09:45,890 --> 00:09:49,510
deal actually manage that password it'll
be a really long complex password will

122
00:09:49,510 --> 00:09:54,270
never get cracked so another problem we
have is that Group Policy Preferences

123
00:09:54,270 --> 00:09:59,319
when it was dropped with sorry when it
was released with Windows Server 2008

124
00:09:59,320 --> 00:10:05,130
provided a great way for local admin
account passwords to be changed on

125
00:10:05,130 --> 00:10:10,180
hundreds and thousands of computers rate
it was a yes 256 bit encrypted that's

126
00:10:10,180 --> 00:10:19,650
how that Pastor restored but Microsoft
published the private key so all an

127
00:10:19,650 --> 00:10:21,050
attacker has to do

128
00:10:21,050 --> 00:10:26,329
do is scan this location which is this
fall look for XML files with a C

129
00:10:26,330 --> 00:10:30,830
password attribute full extract that a
yes

130
00:10:30,830 --> 00:10:35,959
encrypted blob that comes after it and
run a St crypt function against it but

131
00:10:35,959 --> 00:10:42,930
you can use PowerShell for leveraging
the private key so this means that the

132
00:10:42,930 --> 00:10:46,229
main user can scan sis fall and
potentially get the local admin account

133
00:10:46,230 --> 00:10:49,769
for thousands of computers and the
environment

134
00:10:49,769 --> 00:10:56,990
don't use this so mitigating this really
comes down to ensuring that

135
00:10:56,990 --> 00:10:59,990
administrators are not putting
credentials in a Group Policy

136
00:10:59,990 --> 00:11:04,769
Preferences Microsoft has a patch for
that there has to be applied on every

137
00:11:04,769 --> 00:11:10,089
system where an admin reduce Group
Policy Management Console to set that to

138
00:11:10,089 --> 00:11:15,220
apply those credentials are set them
into that policy but that doesn't remove

139
00:11:15,220 --> 00:11:19,790
those passwords from your policy or from
this fall if they're already there so

140
00:11:19,790 --> 00:11:22,920
you have to go through and scam
thankfully this KB article has a scanner

141
00:11:22,920 --> 00:11:27,719
that Microsoft without which seems to be
loosely based on the KGB password and

142
00:11:27,720 --> 00:11:33,529
Powersports we didn't hear that from me
so how do we protect this will the

143
00:11:33,529 --> 00:11:38,100
easiest ways to create XML file drop in
the system all which has some data and

144
00:11:38,100 --> 00:11:41,940
it doesn't really matter but you said
everyone deny access and then you said

145
00:11:41,940 --> 00:11:46,079
auditing on it and that way when someone
skinny through system all you can alert

146
00:11:46,079 --> 00:11:51,589
you get the van on your PC that you can
trigger off so the other issue is when

147
00:11:51,589 --> 00:11:58,440
every computer account or local account
in a domain or all across a lot of

148
00:11:58,440 --> 00:12:01,440
computers has the same account and
password specifically administrator

149
00:12:01,440 --> 00:12:05,810
accounts because Windows is very nice
about these things when there's a

150
00:12:05,810 --> 00:12:08,890
computer account over here a computer
here and here and here they the same

151
00:12:08,890 --> 00:12:11,449
local admin account name and password

152
00:12:11,449 --> 00:12:19,420
it works across the network so the whole
local thing is a bit of a misnomer so

153
00:12:19,420 --> 00:12:22,329
how do you protect that well to
different parts one you have to make

154
00:12:22,329 --> 00:12:26,219
sure that your local admin account
passwords are randomized you want to

155
00:12:26,220 --> 00:12:28,839
make sure their unique across all your
computers in your enterprise because

156
00:12:28,839 --> 00:12:30,499
obviously compromising

157
00:12:30,499 --> 00:12:35,459
one computer and it was an attacker to
compromise others the second part is you

158
00:12:35,459 --> 00:12:40,649
can install the KB 28 7 1997 patch which
is effectively a security back toward

159
00:12:40,649 --> 00:12:46,299
from Windows 2000 2012 are two and one
has a dot one and it adds some local

160
00:12:46,299 --> 00:12:50,499
cities to the computers is local said
say this is a local user on this

161
00:12:50,499 --> 00:12:54,579
computer and you can create a group
policy that prevents local cities from

162
00:12:54,579 --> 00:12:59,638
login across a network to another
computer I'm pretty sure everyone here's

163
00:12:59,639 --> 00:13:05,389
my guess right I call it the credential
multi-tool because it can double the

164
00:13:05,389 --> 00:13:11,939
credentials including Kerberos tickets
reuse them generate golden tickets over

165
00:13:11,939 --> 00:13:16,848
tickets for tickets whatever you want
and they saw me access you get all of

166
00:13:16,849 --> 00:13:21,639
them are the current users so this is
what it looks like on the left you have

167
00:13:21,639 --> 00:13:26,669
an admin console is a great server admin
he's logged onto the server the

168
00:13:26,669 --> 00:13:31,968
servicemen compromise which means that
now his account is compromised on the

169
00:13:31,969 --> 00:13:37,909
right side we all have service accounts
right we all have services that run

170
00:13:37,909 --> 00:13:42,279
across a large number of computers we
have that because we have vendors that

171
00:13:42,279 --> 00:13:46,499
say here's this product does all this
great stuff we fantastic what rights as

172
00:13:46,499 --> 00:13:52,239
a starter County domain admin ok I want
that functionality but the problem is

173
00:13:52,239 --> 00:13:57,499
that if a service is running into the
context of a service account those

174
00:13:57,499 --> 00:14:01,709
credentials are in Alsace which means
many cats can dump them so if you're

175
00:14:01,709 --> 00:14:07,608
running a service on workstations that
has demanded rights to your domain

176
00:14:07,609 --> 00:14:13,999
you're not gonna have a good day in the
future if you haven't already and you'll

177
00:14:13,999 --> 00:14:17,069
notice that the cleartext password is
there also

178
00:14:17,069 --> 00:14:23,019
well if you install that backward patch
Kb 287 1997 it will enable you said a

179
00:14:23,019 --> 00:14:29,989
Reg case of that password is in store
now says let's talk about Kurt Russell

180
00:14:29,989 --> 00:14:30,480
of it

181
00:14:30,480 --> 00:14:40,660
in the house like myself you're familiar
with the double issue when actor

182
00:14:40,660 --> 00:14:45,870
director was released microsoft said
let's use Kerberos great problem is that

183
00:14:45,870 --> 00:14:49,730
a service ticket the user gets to the
web server does not work on the database

184
00:14:49,730 --> 00:14:55,320
server so how they fix it came up with
unconstrained delegation probably seen

185
00:14:55,320 --> 00:15:00,120
this box on the metal that's
unconstrained delegation constrained

186
00:15:00,120 --> 00:15:01,630
delegation is one below it

187
00:15:01,630 --> 00:15:07,240
which constrains that delegation of that
impersonation to specific services

188
00:15:07,240 --> 00:15:15,380
running on specific servers you can find
these servers or systems or accounts by

189
00:15:15,380 --> 00:15:18,970
using power show that first brought the
box and I've highlighted thats

190
00:15:18,970 --> 00:15:22,510
unconstrained allegation after this talk
if you have any of those in the

191
00:15:22,510 --> 00:15:25,560
environment you know you wanna get rid
of them the second box is constrained

192
00:15:25,560 --> 00:15:30,589
delegation that's much better why is
unconstrained allegations about let's go

193
00:15:30,589 --> 00:15:35,170
back to the Kerberos diagram when the
user requests that service ticket for

194
00:15:35,170 --> 00:15:39,279
that service running on that server
which has unconstrained delegation the

195
00:15:39,279 --> 00:15:43,350
domain controller takes the copy of the
user's TGT and puts it into that sort of

196
00:15:43,350 --> 00:15:47,949
stick it delivers it back to the user
because I constrained delegation is

197
00:15:47,949 --> 00:15:52,769
configured for that server or account so
when the user provide that service

198
00:15:52,769 --> 00:15:59,860
ticket to the server that's hosting that
service that TGT is placed in Alcester

199
00:15:59,860 --> 00:16:06,569
place in the memory see why this is bad
I found environments are still have

200
00:16:06,569 --> 00:16:11,779
unconstrained delegation enabled and it
wouldn't take much of social engineer a

201
00:16:11,779 --> 00:16:16,060
domain admin like it all looks skywalker
to connect to the server over a Kerberos

202
00:16:16,060 --> 00:16:20,619
service he doesn't have to type in his
credentials he just needs to connect to

203
00:16:20,620 --> 00:16:27,620
a network share and you see the top this
is a network session but we have their

204
00:16:27,620 --> 00:16:32,680
have this user's TGT which then we
passed the ticket and using PowerShell

205
00:16:32,680 --> 00:16:36,000
remoting we can connect to a domain
controller and we can dump the current

206
00:16:36,000 --> 00:16:42,440
TGG account password hash which means we
can create golden tickets now

207
00:16:42,440 --> 00:16:47,510
as an easy way to fix this is don't use
on constrained delegation the other one

208
00:16:47,510 --> 00:16:54,290
is to check this box and your admin
accounts so attackers wanted dump the

209
00:16:54,290 --> 00:16:58,300
demand credentials that way they can be
anyone they wanna maybe create gold

210
00:16:58,300 --> 00:17:03,670
tickets so the first way to do that is
find the NTS I did file that directory

211
00:17:03,670 --> 00:17:10,500
database file the other ways to steal
credentials so where would it be

212
00:17:10,500 --> 00:17:16,079
everyone in an environment or demand
admin or security people for an

213
00:17:16,079 --> 00:17:19,290
organization do you know where you did
is maybe not

214
00:17:19,290 --> 00:17:23,800
backup of your domain controllers and
external storage for the demand

215
00:17:23,800 --> 00:17:28,639
controller such as a network device like
an azeris and or even just a bunch of

216
00:17:28,640 --> 00:17:34,520
this well who administers you're in your
virtual environment which has and hosts

217
00:17:34,520 --> 00:17:40,129
your virtual DC's you consider them two
main engines we probably should

218
00:17:40,130 --> 00:17:45,770
in VMware if I'm a VMware admin I can
clone a virtual Dec within VMware and

219
00:17:45,770 --> 00:17:49,450
once I have that clone I don't need to
start it I can copy down the storage

220
00:17:49,450 --> 00:17:55,590
files associated with that clone vc vc
no alarm bells are going off nada no

221
00:17:55,590 --> 00:17:59,750
alarm bells are going to go 10 events
can be triggered on ADC you're on a

222
00:17:59,750 --> 00:18:03,660
Windows system because I don't even
start that up I can delete that after I

223
00:18:03,660 --> 00:18:08,590
pull those files down now that I'm an
attacker and I get on a mission

224
00:18:08,590 --> 00:18:12,379
sensitive box I may not want to use a
hacker to or you know many cats or

225
00:18:12,380 --> 00:18:16,710
something like that I can use task
manager and dumped Elsass into analysis

226
00:18:16,710 --> 00:18:21,030
don't file I can copy that all somewhere
else and run many counts against their

227
00:18:21,030 --> 00:18:28,270
little more difficult to discover that I
was on that box but that Elsass dump

228
00:18:28,270 --> 00:18:33,950
file may actually have the demand admin
credentials and it looks like once I get

229
00:18:33,950 --> 00:18:37,280
to the domain controller or have access
to it where I can dump the credentials

230
00:18:37,280 --> 00:18:43,690
imma be imma have those the Centurion
password hashes or I can you tell what's

231
00:18:43,690 --> 00:18:49,100
insidious you tell it's a tool used by
administrators to administer directory

232
00:18:49,100 --> 00:18:53,730
database or manage it so when

233
00:18:53,730 --> 00:18:56,700
domain controllers are being stood up
especially when there's a large number

234
00:18:56,700 --> 00:19:00,300
of them are you have a branch office in
area where the bandwidth isn't great

235
00:19:00,300 --> 00:19:05,419
when you run Dec promo that server has
to copy from another domain controller

236
00:19:05,420 --> 00:19:10,930
all the demand information but if we use
NCSU till to create this offer media

237
00:19:10,930 --> 00:19:16,180
center I found it makes a copy of the
dip for us so an attacker could use this

238
00:19:16,180 --> 00:19:23,400
or go looking for and I found on the
network so in an environment where you

239
00:19:23,400 --> 00:19:27,070
have a domain controller that you need
to stand up and you have a service

240
00:19:27,070 --> 00:19:31,860
already staged you may drop and IFM on
there that service and IDC at so I may

241
00:19:31,860 --> 00:19:37,350
not be secured the same way and there
may even be an IBM on the network

242
00:19:37,350 --> 00:19:43,240
somewhere and share but the key point of
this is once an attacker has access to

243
00:19:43,240 --> 00:19:47,150
the diff I'll they own your demand
because they can dump all the

244
00:19:47,150 --> 00:19:51,320
credentials no 1 I've highlighted the
curb gt1 which means again I can create

245
00:19:51,320 --> 00:20:04,300
gold tickets well what can I do with
NTLM hashes can pass a hash but there's

246
00:20:04,300 --> 00:20:07,750
some detection for that but last year on
the stage

247
00:20:07,750 --> 00:20:11,310
benjamin LPN skeptic wall and their
golden ticket talked talked about

248
00:20:11,310 --> 00:20:16,060
overpass the hash and by clearing out
all the Kerberos encryption keys are on

249
00:20:16,060 --> 00:20:20,990
that system and injecting that until I'm
password hash I can take that password

250
00:20:20,990 --> 00:20:27,040
hash and switch it over to that I'm
using a Kerberos ticket which is a lot

251
00:20:27,040 --> 00:20:35,540
more difficult to detect just sunday
Benjamin dobie released Dec saying which

252
00:20:35,540 --> 00:20:39,740
is part of his khaki oh sweet what is
this a lot of people confuse some people

253
00:20:39,740 --> 00:20:43,360
got it right away he describes it as
such

254
00:20:43,360 --> 00:20:48,820
hey I'm IDC send me the password hashes
for these accounts and the DEC does it

255
00:20:48,820 --> 00:20:53,679
using standard official API is that
Microsoft has published yet to be a

256
00:20:53,680 --> 00:20:58,430
domain admin to do it but this is going
to be the next method of how people are

257
00:20:58,430 --> 00:21:03,740
pulling hashes password hashes which
includes the old passwords for accounts

258
00:21:03,740 --> 00:21:05,030
which could be interesting for a ride

259
00:21:05,030 --> 00:21:13,840
the reasons yeah I agree with the bat
Brad Pitt that's kind of an issue so how

260
00:21:13,840 --> 00:21:16,040
do you detect this very difficult
there's a lot of different methods

261
00:21:16,040 --> 00:21:21,050
ultimately comes down to protecting your
Dec storage the diff file and EDC

262
00:21:21,050 --> 00:21:28,870
backups protect their credentials and
ultimately separating your domain admins

263
00:21:28,870 --> 00:21:36,370
are your admin account on the network
from the other systems the last year in

264
00:21:36,370 --> 00:21:40,830
November Microsoft released an
out-of-band patch for Kerberos because

265
00:21:40,830 --> 00:21:44,800
many controllers were improper properly
validating the pack pack is the

266
00:21:44,800 --> 00:21:47,940
privilege attribute certificate which
source the group membership information

267
00:21:47,940 --> 00:21:53,550
within the Kerberos think it kind of him
for it so Gavin Millar to tenable

268
00:21:53,550 --> 00:21:57,460
tweeted about this what I thought was
the best example of how this works i've

269
00:21:57,460 --> 00:22:02,750
been explaining this to executives using
this exact analogy of a boarding pass to

270
00:22:02,750 --> 00:22:06,680
get on the plane before you get on the
plane you take a sharpie and write pilot

271
00:22:06,680 --> 00:22:10,690
canceled the flight attendant now as you
get on the plane you're escorted into

272
00:22:10,690 --> 00:22:15,130
the cockpit and then you're asked if you
want coffee before you take off captain

273
00:22:15,130 --> 00:22:20,340
so this enables the rewriting of a
ticket effectively from domain user

274
00:22:20,340 --> 00:22:22,990
admin admin about five minutes

275
00:22:22,990 --> 00:22:29,880
PIKK came out two weeks after the patch
was released python script in order to

276
00:22:29,880 --> 00:22:35,650
exploit this vulnerability the way it
works is a request to TGT with no pac

277
00:22:35,650 --> 00:22:40,880
once he gets that it creates a forge
pact signed with the user's password

278
00:22:40,880 --> 00:22:48,760
data then it sent back at TGT and that
for tax incentives authenticator the DEC

279
00:22:48,760 --> 00:22:52,640
looks at it goes ok so you're requesting
a service ticket with no back and have a

280
00:22:52,640 --> 00:22:55,320
teacher she would go back we have
nothing to carry you know what I'm just

281
00:22:55,320 --> 00:22:59,490
gonna take this authenticator put it
into a new TGT that's the pack they go

282
00:22:59,490 --> 00:23:05,840
golden ticket accomplished Benjamin
Delpy updated this earlier this year in

283
00:23:05,840 --> 00:23:10,669
this part of the check your sweet we're
actually scans from honorable DC's once

284
00:23:10,670 --> 00:23:13,850
it finds it exploits it and then it does
one more thing at the end where

285
00:23:13,850 --> 00:23:18,928
it actually requested delegation tickets
are now that exploit take it works

286
00:23:18,929 --> 00:23:24,980
against NEDC not just unpatched ones so
yeah user added user admin five minutes

287
00:23:24,980 --> 00:23:29,970
so the response to this is gonna be
simple make sure that your server images

288
00:23:29,970 --> 00:23:34,900
a server builds are patched with this
patch that way when you're standing up a

289
00:23:34,900 --> 00:23:41,770
new DCU can be fairly certain that the
patch is already there or preferably run

290
00:23:41,770 --> 00:23:46,970
this anyway before you run Dec promo to
be part of your steps your QA process

291
00:23:46,970 --> 00:23:51,650
because if you stand up a new DCC that's
not patched against this five minutes to

292
00:23:51,650 --> 00:23:56,780
man admits so I've been talked about
with golden tickets I'm not gonna add to

293
00:23:56,780 --> 00:24:02,270
that except to say that this step in the
Kerberos process is missing a golden

294
00:24:02,270 --> 00:24:07,010
tickets and the attacker has to have
jumped the curb DDT account password

295
00:24:07,010 --> 00:24:11,400
hash in order to be able to create them
now there was somewhat of a limitation

296
00:24:11,400 --> 00:24:15,850
if you can call it that when gold
tickets were released last year when you

297
00:24:15,850 --> 00:24:19,309
dump that Kurdish YouTube account
password hash going to take it only

298
00:24:19,309 --> 00:24:24,178
works within that domain where it was
created it and so if there's other

299
00:24:24,179 --> 00:24:29,000
demands in the forest that golden ticket
won't provide admin access to those well

300
00:24:29,000 --> 00:24:35,010
now you can go and tickets are now more
golden I did some security research on

301
00:24:35,010 --> 00:24:39,429
Sat history and it's used in
exploitation and I talked to Benjamin

302
00:24:39,429 --> 00:24:44,659
Delpy he added said history to golden
tickets in a roundabout way Itasca added

303
00:24:44,659 --> 00:24:49,289
to many cats and now Golden Ticket
Support said history was history it

304
00:24:49,289 --> 00:24:53,000
enables you to add another said from
another demand that is associated with a

305
00:24:53,000 --> 00:25:01,080
user in this demand and get some value
is part of whether or not that users

306
00:25:01,080 --> 00:25:04,879
should have access for determining
access for resources so as you can see

307
00:25:04,880 --> 00:25:09,230
on the bottom this golden ticket works
across every demand in that environment

308
00:25:09,230 --> 00:25:12,700
so silver tickets

309
00:25:12,700 --> 00:25:16,920
conover shower shattered by the big bro
ago and take it right

310
00:25:16,920 --> 00:25:20,040
what's interesting about a silver ticket
is if the attacker gets the password

311
00:25:20,040 --> 00:25:25,920
data for a service running on that
server can generate a silver ticket or

312
00:25:25,920 --> 00:25:29,060
that Ford service take it for that
service

313
00:25:29,060 --> 00:25:31,700
there's no communication with the demand
controller so if you're only pulling

314
00:25:31,700 --> 00:25:36,000
security events off your DC's you're
gonna missus and there is a scenario

315
00:25:36,000 --> 00:25:41,310
where asserts over tickets can be more
dangerous than golden tickets so in a

316
00:25:41,310 --> 00:25:46,370
breach recovery scenario where an
attacker has dumped everything and then

317
00:25:46,370 --> 00:25:49,770
the corporate I T goes through the very
painful process of changing all the

318
00:25:49,770 --> 00:25:54,150
account passwords the item that gets
missus changing the computer account

319
00:25:54,150 --> 00:25:58,360
passwords every computer has an account
password in Active Directory ties that

320
00:25:58,360 --> 00:26:06,219
physical computer to a TV and computer
account passwords was used to encrypt

321
00:26:06,220 --> 00:26:13,400
that service ticket for that service on
that Windows Server or system so we have

322
00:26:13,400 --> 00:26:18,190
the computer account password for the
domain controllers we can create silver

323
00:26:18,190 --> 00:26:21,890
ticket for the state service on that
demand controller which says a domain

324
00:26:21,890 --> 00:26:29,290
admin connect to the see our share or
whichever we want copy upper exploit

325
00:26:29,290 --> 00:26:34,340
script read another silver ticket for
the host service which is a catch all

326
00:26:34,340 --> 00:26:38,350
service of a bunch of different windows
services that run on that system and

327
00:26:38,350 --> 00:26:46,199
then we can create a scheduled task we
can replace an existing scheduled task

328
00:26:46,200 --> 00:26:50,220
or we create a new one will call it
something innocuous likes com agent

329
00:26:50,220 --> 00:26:58,440
health check out what happens well we
exploit the demand and this is a file on

330
00:26:58,440 --> 00:27:03,790
that computers see driver wherever so we
can access there's another type of

331
00:27:03,790 --> 00:27:08,670
ticket or forage ticket so we talked
about within Active Directory between

332
00:27:08,670 --> 00:27:14,180
Active Directory forest or demands of
trust him an admin creates a trust using

333
00:27:14,180 --> 00:27:16,070
up a trespass where they send it over

334
00:27:16,070 --> 00:27:17,980
usually be emailed to the green demand

335
00:27:17,980 --> 00:27:22,160
many types of the same one well that
trust password doesn't change for 30

336
00:27:22,160 --> 00:27:27,660
days so if attacker saw that email or
overheard them talking about it and you

337
00:27:27,660 --> 00:27:31,860
with that password was the attacker
could create their own trust ticket

338
00:27:31,860 --> 00:27:38,510
which is that cross forest basically a
TGT which says they are so that attacker

339
00:27:38,510 --> 00:27:42,980
can say I am this user or member of
these groups in the Blue Man and just

340
00:27:42,980 --> 00:27:47,140
passed that ticket that trusting that
for trusting it over to the green demand

341
00:27:47,140 --> 00:27:51,530
and get access to any resources in the
Green Man that were permission to

342
00:27:51,530 --> 00:27:58,530
resources from the Blue Man now at this
happens inaccurate deforest well they

343
00:27:58,530 --> 00:28:02,320
just passed a trust to get the says
their enterprise out and then they fully

344
00:28:02,320 --> 00:28:07,049
compromise agreement so detection is
difficult

345
00:28:07,049 --> 00:28:12,580
mitigation protect eighty admins are
getting a little bit more earlier this

346
00:28:12,580 --> 00:28:16,449
year identified some key indicators on
how to detect forged tickets

347
00:28:16,450 --> 00:28:22,830
specifically gold and silver tickets in
April late April of this year Benjamin

348
00:28:22,830 --> 00:28:26,309
don't be updated many cats so that
strength at the end is what shows up in

349
00:28:26,309 --> 00:28:31,190
that demand field now identified
anomalies in the domain field that still

350
00:28:31,190 --> 00:28:34,720
may work but I suspect the attackers
have gotten better

351
00:28:34,720 --> 00:28:40,820
those are the events of the bottom so I
know defense often feels like 300 vs

352
00:28:40,820 --> 00:28:48,370
300,000 but there is some what are some
ways to help protect your environment

353
00:28:48,370 --> 00:28:52,610
we're talking up our show attacks and
how to detect them and started logging

354
00:28:52,610 --> 00:28:58,260
PowerShell version 3 a newer support
something called module logging which

355
00:28:58,260 --> 00:29:02,990
you can enable via group policy so that
way any command is executed power shows

356
00:29:02,990 --> 00:29:08,600
long to the PowerShell event log you can
pull that back in your sim tool you

357
00:29:08,600 --> 00:29:11,678
definitely want to look for some of
these activities because they are very

358
00:29:11,679 --> 00:29:16,400
interesting

359
00:29:16,400 --> 00:29:28,790
in order to pull down code or files use
invoke expression execute those using

360
00:29:28,790 --> 00:29:32,720
coded command in order to ensure that
its obfuscated it's difficult to see its

361
00:29:32,720 --> 00:29:36,170
base 64 encoded and then there's a
couple other things that are interesting

362
00:29:36,170 --> 00:29:40,430
but I like to focus on PowerShell
remoting so you can enable PowerShell

363
00:29:40,430 --> 00:29:43,180
remoting on systems that support it

364
00:29:43,180 --> 00:29:48,290
ganas every modern OS and it leverages
when R M

365
00:29:48,290 --> 00:29:53,200
you want to disable PowerShell remoting
on a system that doesn't need it because

366
00:29:53,200 --> 00:29:58,440
by default is not enabled except when
you get to 2012 are too but you can

367
00:29:58,440 --> 00:30:02,970
limit it you can limit the listener that
that went around you can limit the scope

368
00:30:02,970 --> 00:30:10,580
of that listener that when R M has
limited to your admin subnets and when

369
00:30:10,580 --> 00:30:15,080
you limit it you control who has access
to it because as we've seen someone can

370
00:30:15,080 --> 00:30:18,550
grab credentials for admin they can
connect in and do some interesting

371
00:30:18,550 --> 00:30:22,159
things with it the other part is
auditing and metering PowerShell usage

372
00:30:22,160 --> 00:30:29,990
you can audit PowerShell using you can
audit PowerShell using either SCCM or

373
00:30:29,990 --> 00:30:34,960
you can use a blocker a blocker and
audit mode SCCM he's really interesting

374
00:30:34,960 --> 00:30:37,810
software metering capability with
PowerShell see you can do some trend

375
00:30:37,810 --> 00:30:40,639
analysis on who's actually using it in
your environment you can use other

376
00:30:40,640 --> 00:30:46,470
software metering tools I'm just picking
on the Microsoft folks so once you see

377
00:30:46,470 --> 00:30:50,560
this trend analysis you can see that a
user has run PowerShell on 10 different

378
00:30:50,560 --> 00:30:53,690
computers in the past two hours maybe
that's a problem

379
00:30:53,690 --> 00:31:00,630
PowerShell version five things get a
little bit better script block logging

380
00:31:00,630 --> 00:31:03,990
sites like this

381
00:31:03,990 --> 00:31:12,270
those obfuscating commands I mentioned
earlier are diop skated decrypted before

382
00:31:12,270 --> 00:31:18,210
a powerful runs them so our show will
take that data and senator the event log

383
00:31:18,210 --> 00:31:22,090
and so now we can have some really
interesting similar to when it comes to

384
00:31:22,090 --> 00:31:28,040
PowerShell tax or interesting PowerShell
code that was run we also get systemwide

385
00:31:28,040 --> 00:31:31,639
transcripts which means that we can
enable this via group policy we can have

386
00:31:31,640 --> 00:31:35,240
a share on the network and how these
systems transcripts get sent

387
00:31:35,240 --> 00:31:39,820
automatically to that share where they
can be modified or deleted later and

388
00:31:39,820 --> 00:31:43,580
have her seem to like spelunker
something else in jest that those logs

389
00:31:43,580 --> 00:31:46,870
this transfer of files and get some
really interesting information about

390
00:31:46,870 --> 00:31:47,949
who's doing what

391
00:31:47,950 --> 00:31:57,410
as a step above the event logging
constraining PowerShell is PowerShell in

392
00:31:57,410 --> 00:32:03,290
Constraint Language mode which is the
core of our show so PowerShell enables

393
00:32:03,290 --> 00:32:09,230
all this advanced functionality all this
power has ability to leverage time that

394
00:32:09,230 --> 00:32:14,980
functions do w my thanks a bunch of
others things but the important note of

395
00:32:14,980 --> 00:32:19,470
this is that if we have PowerShell v5
and our environment which has been back

396
00:32:19,470 --> 00:32:26,440
for a fully supported Windows 7 2008 or
to some point we can enable a blocker

397
00:32:26,440 --> 00:32:30,970
and allow mode which automatically sets
PowerShell to constrain mode with

398
00:32:30,970 --> 00:32:35,290
PowerShell v5 so this means that these
advanced attacks don't work like they

399
00:32:35,290 --> 00:32:39,450
usually do because they leverage the
more advanced functionality of our show

400
00:32:39,450 --> 00:32:44,210
Windows 10 the story gets better and
it's gonna be a little while before

401
00:32:44,210 --> 00:32:48,860
everyone gets there but there's the anti
malware scanner interface in Windows 10

402
00:32:48,860 --> 00:32:55,219
so before PowerShell execute code pull
down from a website types in manually

403
00:32:55,220 --> 00:33:02,059
and the power so I see selected and Iran
or run from a script power cells gonna

404
00:33:02,059 --> 00:33:06,240
kick that over to the MSI and wait for
it to come back with the status

405
00:33:06,240 --> 00:33:12,770
ok it doesn't get that PowerShell is not
executing code when does down so that

406
00:33:12,770 --> 00:33:16,730
malware scanner interface is good for
them our solution to our solution that's

407
00:33:16,730 --> 00:33:17,309
all that BA

408
00:33:17,309 --> 00:33:21,889
is going to be looking for code snippets
so-called signatures but it can also do

409
00:33:21,889 --> 00:33:24,809
you are old reputation so that we have
that code is attempting to being

410
00:33:24,809 --> 00:33:31,720
executed from server on the Internet can
see that so now I'm gonna summarize the

411
00:33:31,720 --> 00:33:36,980
mitigation levels this is what I call
low difficulty you should ensure that

412
00:33:36,980 --> 00:33:39,639
there are no user accounts in your
environment that our member of admin

413
00:33:39,639 --> 00:33:43,939
groups obvious we've known this I keep
finding environments where this is the

414
00:33:43,940 --> 00:33:48,450
case why because the group testing this
group in this group this group this

415
00:33:48,450 --> 00:33:53,929
group and the people forget what the
group's do we want to set that group

416
00:33:53,929 --> 00:33:58,059
policy to ensure that even if a local
admin account is compromised and we saw

417
00:33:58,059 --> 00:34:01,629
passwords that are the same across
multiple systems that the attacker can

418
00:34:01,629 --> 00:34:08,040
jump from one of the other so

419
00:34:08,040 --> 00:34:14,290
we also want to ensure that we protect
our service accounts by using long

420
00:34:14,290 --> 00:34:18,610
complex passwords and pushing back on
our vendors to say that we don't need

421
00:34:18,610 --> 00:34:24,450
elevator rights last year there were a
couple of patches that were released

422
00:34:24,449 --> 00:34:29,489
that improved Rd page so historically
RDP you would connect and you were

423
00:34:29,489 --> 00:34:33,239
typing your explicit credentials into
that Rd box they be sent over to that

424
00:34:33,239 --> 00:34:37,379
server that you're connecting soon and
be placed in Alsace they'd be in memory

425
00:34:37,380 --> 00:34:42,270
there which could be stolen restricted
admin mode doesn't place those

426
00:34:42,270 --> 00:34:47,290
credentials on that box they converge
here interactive logon into effectively

427
00:34:47,290 --> 00:34:52,020
a network connection and so they're not
they're waiting for someone so we move

428
00:34:52,020 --> 00:34:58,630
on a level two it's important today to
ensure they use a tool to automatically

429
00:34:58,630 --> 00:35:04,070
rotate and randomized and have unique
local administrator account passwords on

430
00:35:04,070 --> 00:35:07,560
every computer in your environment is
against you easy for attackers leverage

431
00:35:07,560 --> 00:35:11,900
and information to jump around it
doesn't matter what it is but Microsoft

432
00:35:11,900 --> 00:35:18,790
laps is available when it works better
than what we've had three other thing to

433
00:35:18,790 --> 00:35:25,390
note is that even if you have your
administrators isolating the randomized

434
00:35:25,390 --> 00:35:31,040
that if users on one workstation can
work station connects of work stations

435
00:35:31,040 --> 00:35:37,570
all over your environment you may be in
a situation where that those credentials

436
00:35:37,570 --> 00:35:41,240
are on this work stations can be
compromised especially if they have

437
00:35:41,240 --> 00:35:44,839
local admin account password but it
enables the attacker to move around here

438
00:35:44,840 --> 00:35:49,030
environment ways they may not be aware
of and on Sunday there's going to be a

439
00:35:49,030 --> 00:35:52,420
tool release called perimeter which
enables attackers to jump around like

440
00:35:52,420 --> 00:35:53,180
that

441
00:35:53,180 --> 00:35:57,779
using user credentials so you definitely
want to look at how to limit and

442
00:35:57,780 --> 00:36:00,760
restrict communication when it comes to
work stations in your mind that we had a

443
00:36:00,760 --> 00:36:06,630
flat network for too long and part of
that includes looking at the server side

444
00:36:06,630 --> 00:36:11,710
as well and not having some network
isolation so that way when you have your

445
00:36:11,710 --> 00:36:12,349
back end

446
00:36:12,349 --> 00:36:19,220
financial database or H our database or
your bag system that those aren't

447
00:36:19,220 --> 00:36:25,319
available for anyone on your network to
connect to them so separating your

448
00:36:25,319 --> 00:36:27,339
admins from users is very important

449
00:36:27,339 --> 00:36:31,640
making sure that you limit where your
domain admins you're accurate reopens

450
00:36:31,640 --> 00:36:37,379
actually log on what they're able to do
which brings us to what I call the it's

451
00:36:37,380 --> 00:36:43,440
complicated phase of mitigation this is
difficult but this is where we need to

452
00:36:43,440 --> 00:36:50,049
get to we need to make sure that our
domain admins group is now empty I know

453
00:36:50,049 --> 00:36:50,849
that stuff

454
00:36:50,849 --> 00:36:55,089
the problem is the demand admins has
been around since and T

455
00:36:55,089 --> 00:37:00,880
domain admins usage for managing an
enterprise is nineteen nineties

456
00:37:00,880 --> 00:37:06,160
mentality we need to get away from it we
need to identify what the roles are in

457
00:37:06,160 --> 00:37:10,710
organizations figure out who needs what
access who needs to do what

458
00:37:10,710 --> 00:37:15,130
because I've been organizations where
the exchange admin sorry man admits it's

459
00:37:15,130 --> 00:37:20,529
way too powerful domain admins have full
admin rights to Active Directory domain

460
00:37:20,529 --> 00:37:28,509
controllers all workstations all servers
everything is way too easy for an

461
00:37:28,509 --> 00:37:34,940
attacker to compromise one account and
compromise entire domain or forest so we

462
00:37:34,940 --> 00:37:37,380
need to make sure that our Active
Directory admins because we are calling

463
00:37:37,380 --> 00:37:42,059
them to me that means anymore only can
authenticate or log on to certain

464
00:37:42,059 --> 00:37:45,119
workstations at work stations that are
protected a higher level than what your

465
00:37:45,119 --> 00:37:49,890
standard users going to be on we want to
make sure that these domain admins are

466
00:37:49,890 --> 00:37:54,879
accurately admins only log on to the
main trailers or special servers like

467
00:37:54,880 --> 00:37:58,650
admin servers social work stations we
also want to look at our server admins

468
00:37:58,650 --> 00:38:03,319
make sure they're following something
similar because if a credential is

469
00:38:03,319 --> 00:38:08,839
stolen or server admin but our domain
admins are still having to manage all

470
00:38:08,839 --> 00:38:12,410
there are logging in then the problem is
that they have access to those

471
00:38:12,410 --> 00:38:17,569
credentials well

472
00:38:17,570 --> 00:38:28,650
new architecture to prevent against
potential theft this line is actually

473
00:38:28,650 --> 00:38:32,370
out of date now as of this morning I
went to the Microsoft briefing and saw

474
00:38:32,370 --> 00:38:35,600
that all the stuff that I based the
slide on pretty much has changed from a

475
00:38:35,600 --> 00:38:40,060
which is what I put this together so but
the architecture is effectively the same

476
00:38:40,060 --> 00:38:45,960
what was your traditional Windows OS is
now a high-level OS and a blue box and

477
00:38:45,960 --> 00:38:52,970
there's a new green box is both run and
hypervisor by default well not exactly

478
00:38:52,970 --> 00:39:00,089
but useful information is coming off a
Microsoft too soon but the important

479
00:39:00,090 --> 00:39:03,510
thing to note here is that alsace is not
going to store this potential secrets

480
00:39:03,510 --> 00:39:07,920
anymore they're gonna be over in the
green box referred to as the IU Amer vs

481
00:39:07,920 --> 00:39:12,680
am I heard recently that we have
security here world versus normal world

482
00:39:12,680 --> 00:39:17,450
there's new terms like red guard to
protect the credentials but the

483
00:39:17,450 --> 00:39:23,279
important thing to take away from the
slide is that the secrets that have been

484
00:39:23,280 --> 00:39:28,670
historically stolen and taken and reuse
and passive potential scenarios are not

485
00:39:28,670 --> 00:39:35,620
in Alsace anymore not in the traditional
OS which means that even if the Colonels

486
00:39:35,620 --> 00:39:40,529
compromise in a blue box this
credentials are not available for the

487
00:39:40,530 --> 00:39:45,670
attacker to reuse so with

488
00:39:45,670 --> 00:39:50,490
more sophisticated attacks we need
better detection to this and Microsoft

489
00:39:50,490 --> 00:39:55,839
bought a company Colorado last year
they've incorporated the product and

490
00:39:55,839 --> 00:40:00,770
technology into a new product Microsoft
has releasing this month old Microsoft

491
00:40:00,770 --> 00:40:05,700
advanced analytics I don't work for
Microsoft but I'm excited about this

492
00:40:05,700 --> 00:40:09,660
because this is where we need to go this
will provide some useful visibility in

493
00:40:09,660 --> 00:40:13,910
our enterprises if you work for a very
large enterprise and you have an

494
00:40:13,910 --> 00:40:19,430
enterprise client license or at Al and
your software assurance this may be

495
00:40:19,430 --> 00:40:22,669
included in that you want to ask your
Microsoft

496
00:40:22,670 --> 00:40:25,930
effectively with three differently than
how Microsoft has traditionally focused

497
00:40:25,930 --> 00:40:31,839
on security and looking at events ATA
works with nata sensor called the

498
00:40:31,839 --> 00:40:36,069
Gateway the taps into a network switches
switches that France your domain

499
00:40:36,069 --> 00:40:39,579
controllers and watches the
authentication traffic between the

500
00:40:39,579 --> 00:40:43,170
domain controllers in the client's it
takes that each thing traffic and sends

501
00:40:43,170 --> 00:40:48,400
it over to the ATA center which then
crunches those numbers and figures out

502
00:40:48,400 --> 00:40:54,920
that these users for this specific user
logs on at this camp this computer these

503
00:40:54,920 --> 00:41:00,160
computers and these resources and it
builds a user behavior profile for every

504
00:41:00,160 --> 00:41:03,808
individual user in the environment but
it does this without looking at or

505
00:41:03,809 --> 00:41:10,450
purchasing any event logs and it does it
without installing a client application

506
00:41:10,450 --> 00:41:16,819
or code on all your systems because it's
looking at the authentication trip so

507
00:41:16,819 --> 00:41:21,058
that means it can also detect recon
activities and the attacks that are very

508
00:41:21,059 --> 00:41:25,670
difficult to detect when you're just
looking at about locks and the detection

509
00:41:25,670 --> 00:41:29,839
of the bottom those are very difficult
to detect an event in the locks let's

510
00:41:29,839 --> 00:41:33,029
see what this looks like this is the
base console

511
00:41:33,029 --> 00:41:39,380
CUC identity theft based on our own
behavior this user who is typically

512
00:41:39,380 --> 00:41:42,909
logged onto a couple different computers
are long gone to several more than that

513
00:41:42,909 --> 00:41:47,679
has prompted access or as requested
access to a number of resources they

514
00:41:47,679 --> 00:41:53,339
have never been seen before is your
standard behavior analysis 88 adds that

515
00:41:53,339 --> 00:41:58,119
looks deterministic component as well
kind of the essence of what an attack

516
00:41:58,119 --> 00:42:02,150
looks like what's known bad and so if
you dig into this you can see the

517
00:42:02,150 --> 00:42:07,059
additional information about what is
behind this this flag alert eighty a

518
00:42:07,059 --> 00:42:11,439
warning flag on the bad things and bad
things so I'm very excited about this

519
00:42:11,439 --> 00:42:18,808
financial fact passed the House passed
the house now then let's write a real

520
00:42:18,809 --> 00:42:24,099
identify some suspicious activity over
here we're not pass the ticket that

521
00:42:24,099 --> 00:42:28,319
stuff not really sure how exactly we
find that event logs other than doing

522
00:42:28,319 --> 00:42:32,519
some correlations this user log on here
and here

523
00:42:32,519 --> 00:42:36,308
overpass assured I mentioned earlier
taking that into your password hashing

524
00:42:36,309 --> 00:42:43,390
converting in Scopus tickets that's
really tough and the MS 14068 exploit

525
00:42:43,390 --> 00:42:47,999
that for each pack a TAC is out as well

526
00:42:47,999 --> 00:42:55,040
in addition to the golden ticket and
skeleton key

527
00:42:55,040 --> 00:43:01,990
skeleton key was announced earlier this
year by Dell SecureWorks with in-memory

528
00:43:01,990 --> 00:43:05,790
malware that was discovered on a domain
controller to make sure there's an

529
00:43:05,790 --> 00:43:09,150
organization where was patching else
that was really interesting about this

530
00:43:09,150 --> 00:43:13,910
is it patched alsace in a way that there
was a master password for every user in

531
00:43:13,910 --> 00:43:19,779
the enterprise so everyone here is an
enterprise eyepatch that Dec with

532
00:43:19,780 --> 00:43:24,310
skeleton key and I know the master
password to login as any of you and you

533
00:43:24,310 --> 00:43:29,259
still continue logging in like normal
because your password still works we can

534
00:43:29,260 --> 00:43:35,600
detect that so I'm a few additional
medications which are more general some

535
00:43:35,600 --> 00:43:38,460
of these are obvious but blocking
internet access to systems that don't

536
00:43:38,460 --> 00:43:43,080
require it seems pretty obvious ensuring
a computer account password get changed

537
00:43:43,080 --> 00:43:50,090
when there's a breach recovery scenario
changing the current jejeje account

538
00:43:50,090 --> 00:43:55,060
password on a regular basis and
especially when a and Active Directory

539
00:43:55,060 --> 00:44:02,710
admin leaves or if you suspect that a
backup was compromised occurred you

540
00:44:02,710 --> 00:44:06,600
count as mentioned before with golden
tickets source to passwords the current

541
00:44:06,600 --> 00:44:12,170
the previous one so that means that are
backed up from four years ago could

542
00:44:12,170 --> 00:44:18,550
still have a valid curbs your account
password in it and you want to model

543
00:44:18,550 --> 00:44:21,960
your defenses against what the real
threats are what adversaries are

544
00:44:21,960 --> 00:44:27,490
actually doing in the world so in
summary

545
00:44:27,490 --> 00:44:33,709
at some point there will be a bad code
running on a system in your network what

546
00:44:33,710 --> 00:44:37,390
happens what they're able to do how
they're able to escalate how they're

547
00:44:37,390 --> 00:44:41,650
able to move around or data they're able
to access is entirely dependent on your

548
00:44:41,650 --> 00:44:46,250
defensive posture how well you've
implemented the medications how well you

549
00:44:46,250 --> 00:44:50,920
have identified we're going to protect
these credentials are important but it

550
00:44:50,920 --> 00:44:56,970
is possible to secure environment at
three my time thank you so much for

551
00:44:56,970 --> 00:45:15,520
years now maybe so I just want to point
out these are great resources here on

552
00:45:15,520 --> 00:45:16,660
the left

553
00:45:16,660 --> 00:45:23,399
please follow them on Twitter great
resources very helpful and I have time

554
00:45:23,400 --> 00:45:24,660
for questions as well

555
00:45:24,660 --> 00:45:44,279
policemen valuation questions

556
00:45:44,280 --> 00:45:50,470
so the question is in the newer versions
of Microsoft Windows Windows Server

557
00:45:50,470 --> 00:45:56,759
there are mitigating security
enhancements that mitigate or or

558
00:45:56,760 --> 00:46:00,470
implement some of these things I've
talked about I haven't map those out but

559
00:46:00,470 --> 00:46:04,040
certainly running newer OS's is
generally better than older ones which

560
00:46:04,040 --> 00:46:09,320
is why getting XP and 2003 is highly
recommended to the environment but yeah

561
00:46:09,320 --> 00:46:12,520
I'd be interested thanks for the
suggestion I think I might look at that

562
00:46:12,520 --> 00:46:20,080
and other questions every year

563
00:46:20,080 --> 00:46:25,390
filtering for the Trust's exploit that
is a good question so said filtering

564
00:46:25,390 --> 00:46:33,740
will will mitigate against City history
on that trust ticket if it's being used

565
00:46:33,740 --> 00:46:37,569
but if it's not it won't filtered out as
it is looking at the city history

566
00:46:37,570 --> 00:46:41,630
attribute and in an Active Directory
domain when you have more accurately

567
00:46:41,630 --> 00:46:45,770
force when you have multiple demands
you're not gonna have to filter in

568
00:46:45,770 --> 00:46:49,980
between those who unfortunately that's
not going to help but I highly recommend

569
00:46:49,980 --> 00:46:55,680
you sit filtering on natural trust and
also look at selective authentication is

570
00:46:55,680 --> 00:46:56,700
that helps as well

571
00:46:56,700 --> 00:47:03,549
questions yes

572
00:47:03,550 --> 00:47:29,370
I know honestly haven't delved into that
yet

573
00:47:29,370 --> 00:47:44,220
basically the surrounding directory
that's protected by the demand master

574
00:47:44,220 --> 00:47:48,180
backup key that this gentleman is
referring to and once you have access to

575
00:47:48,180 --> 00:47:52,029
that you can decrypt all the users data
is a very good point I haven't looked in

576
00:47:52,030 --> 00:48:14,470
doubt just yet cuz I've been busy with
his ass off that's on my list or or that

577
00:48:14,470 --> 00:48:18,540
other file is stored in the registry you
grab those then yes you can decrypt the

578
00:48:18,540 --> 00:48:24,839
NTSB

579
00:48:24,839 --> 00:48:34,680
absolutely so if you have an additional
SYSKEY method such as a USB Drive floppy

580
00:48:34,680 --> 00:48:38,779
drive was historically what was used to
ensure that the PC wouldn't equipped as

581
00:48:38,779 --> 00:48:44,019
data without that additional method
method mechanism absolutely I had two

582
00:48:44,019 --> 00:48:52,609
and a half more minutes for questions
questions if there are no other

583
00:48:52,609 --> 00:48:56,029
questions on G packing is in here at
three o'clock so you may want to hold

584
00:48:56,029 --> 00:48:58,920
your seat thank you very much appreciate
your time

