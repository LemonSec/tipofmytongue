1
00:00:00,000 --> 00:00:04,470
thank you very much for showing up so
early in the morning and I could

2
00:00:04,470 --> 00:00:08,860
understand that many of you had doubts
about this presentation the rumor has it

3
00:00:08,860 --> 00:00:15,389
that Chris and I only met 48 hours ago
and actually that's true and both of us

4
00:00:15,389 --> 00:00:19,509
don't really have english-speaking names
so thank you very much for your courage

5
00:00:19,510 --> 00:00:23,680
and showing up this morning that I love
our presentation is hiding in plain

6
00:00:23,680 --> 00:00:29,619
sight and we want to discuss advances in
our corporate communication channels my

7
00:00:29,619 --> 00:00:35,489
name is Andrew I work with Dell
SecureWorks in my work I do mostly in

8
00:00:35,489 --> 00:00:42,440
our analysis and security research and
I'm here with Chris who likes very much

9
00:00:42,440 --> 00:00:52,730
sense see animals and graphical design
try to get worse with better than that I

10
00:00:52,730 --> 00:00:56,968
everybody my name is Christy trip I
worked for a company called crowd strike

11
00:00:56,969 --> 00:01:02,559
and I'm only doing reverse engineering
and analysis of targeted attacks but

12
00:01:02,559 --> 00:01:05,770
today we want to talk about

13
00:01:05,770 --> 00:01:09,119
covered communication channels and
especially about malcolm under control

14
00:01:09,119 --> 00:01:14,590
now being security researchers like an
especially now researchers like a market

15
00:01:14,590 --> 00:01:16,689
in myself

16
00:01:16,689 --> 00:01:21,229
discovering a new MLS family happens
every now and then that's not

17
00:01:21,229 --> 00:01:27,640
necessarily nothing something new but a
couple months back we were both working

18
00:01:27,640 --> 00:01:33,689
on a case which stands out about among
what you usually see out there in the

19
00:01:33,689 --> 00:01:39,380
wild and that is because we we seen a
malware which uses steganography in

20
00:01:39,380 --> 00:01:43,649
order to highlight parts of its command
control communication and at that point

21
00:01:43,649 --> 00:01:48,899
we decided to join forces and to work
together on this case and drive research

22
00:01:48,899 --> 00:01:54,750
on this most of which ended up in what
we're going to present in this talk

23
00:01:54,750 --> 00:01:59,480
apart from that we tried to broaden up

24
00:01:59,480 --> 00:02:03,790
the objective of this talk a little bit
so we will also cover a few more

25
00:02:03,790 --> 00:02:10,680
examples of malware families amela
samples that are out there real well lol

26
00:02:10,680 --> 00:02:17,090
samples that are out there in the wild
using hidden communication methods for

27
00:02:17,090 --> 00:02:26,860
command and control

28
00:02:26,860 --> 00:02:29,640
I just read

29
00:02:29,640 --> 00:02:33,369
so is the other end of this presentation
as Chris mention we first started

30
00:02:33,370 --> 00:02:37,340
working on our that was using
steganography to hide communication

31
00:02:37,340 --> 00:02:41,650
channels between the device and its
gonna control server and during our

32
00:02:41,650 --> 00:02:45,590
discussions investigation we started to
realize that this was actually a trend

33
00:02:45,590 --> 00:02:49,000
we're seeing more and more malware
trying to hide the commission that they

34
00:02:49,000 --> 00:02:53,500
had with their command control server so
in this presentation will cover mostly

35
00:02:53,500 --> 00:03:00,239
to topics steganography an inconspicuous
carrier particles also want to emphasize

36
00:03:00,239 --> 00:03:03,709
that we really want to document cases
that i've been seen in the world that we

37
00:03:03,709 --> 00:03:10,070
have observed for real so we're not
going to make any purchases or or tried

38
00:03:10,070 --> 00:03:14,040
to invent new gonna get in general that
might exist because there are many more

39
00:03:14,040 --> 00:03:21,440
we really want to focus on real cases
that we have seen before going into a

40
00:03:21,440 --> 00:03:27,269
lot more details let's first step back
and look at why wouldn't I want to

41
00:03:27,269 --> 00:03:32,380
communicate and why would does not need
to communicate with a command control

42
00:03:32,380 --> 00:03:33,030
server

43
00:03:33,030 --> 00:03:40,260
well first of all it needs orders or it
needs come in to performance test pretty

44
00:03:40,260 --> 00:03:44,480
much the only thing I could think of
that would not need any kind of

45
00:03:44,480 --> 00:03:49,899
communication and control server is if
you are creating a destructive not work

46
00:03:49,900 --> 00:03:53,350
in this case an hour probably doesn't
need to communicate with anybody he just

47
00:03:53,350 --> 00:03:57,739
knows when they reached its target and
will destroy you but in other cases if

48
00:03:57,739 --> 00:04:01,570
you want for example to make network
reconnaissance then you need to interact

49
00:04:01,570 --> 00:04:05,690
with an hour more precisely you need the
power to receive coming from its

50
00:04:05,690 --> 00:04:10,329
operators to send feedback on that
comment how the coming with his did

51
00:04:10,329 --> 00:04:14,440
succeed or not would have resulted
brought you might want to send updates

52
00:04:14,440 --> 00:04:20,700
for the code if you want to fix bombs or
introduce new features and finally you

53
00:04:20,700 --> 00:04:28,080
might be interested in the extra traded
data being of course in order for

54
00:04:28,080 --> 00:04:32,440
communication from infected device to
control server to be efficient it needs

55
00:04:32,440 --> 00:04:33,910
to happen

56
00:04:33,910 --> 00:04:39,300
meaning that it shouldn't be blocked by
anytime security mechanism either human

57
00:04:39,300 --> 00:04:42,270
beings investigating a case like
forensics analysis or incident

58
00:04:42,270 --> 00:04:51,960
killers or automatic doors like
intrusion detection systems or antivirus

59
00:04:51,960 --> 00:04:57,258
to ensure that we are talking about the
same thing here I prepared the one quick

60
00:04:57,259 --> 00:05:00,740
slide of definitions I promise that we
don't need to go back to your bed right

61
00:05:00,740 --> 00:05:04,099
now wants life so to us

62
00:05:04,099 --> 00:05:08,819
channels is the capability to transfer
information between two hosts which I

63
00:05:08,819 --> 00:05:13,009
expect not explicitly allowed to do so
in a corporate environment if the system

64
00:05:13,009 --> 00:05:13,750
is infected

65
00:05:13,750 --> 00:05:17,380
well it's allowed explicitly to
communicate with him and control server

66
00:05:17,380 --> 00:05:23,370
there as in other use it while there are
other usage of the term in photography

67
00:05:23,370 --> 00:05:26,120
for example but with this is not the
case here in the context of our

68
00:05:26,120 --> 00:05:32,199
presentation this is how we want to use
this term is the practice of concealing

69
00:05:32,199 --> 00:05:39,199
messages inside none secret text data or
media and what we call the carrier

70
00:05:39,199 --> 00:05:43,289
protocols is the underlying protocol
which is legitimate that can be used for

71
00:05:43,289 --> 00:05:51,169
command control protocol so when you
think about american education I'm

72
00:05:51,169 --> 00:05:54,799
guessing that many of you here have had
to deal with cases either from an

73
00:05:54,800 --> 00:05:58,270
incident in perspective or for reverse
engineering purposes

74
00:05:58,270 --> 00:06:01,258
usually when you think about now we're
communicating we did see to it will be

75
00:06:01,259 --> 00:06:07,190
using something maybe the usual will be
HTTP traffic may be using encryption

76
00:06:07,190 --> 00:06:13,349
maybe not so this would be your average
but your average Zeus or ask drugs lol

77
00:06:13,349 --> 00:06:21,110
this is what we think is not necessarily
very sophisticated and I want to be very

78
00:06:21,110 --> 00:06:25,020
clear here when I'm talking about
sophistication I'm really only talking

79
00:06:25,020 --> 00:06:29,948
about the communication channel where at
large or overall but we need to

80
00:06:29,949 --> 00:06:34,150
communication channel we've seen cases
that were a bit more sophisticated were

81
00:06:34,150 --> 00:06:40,130
a bit more involved we've seen apt 28
for example using emails to send coming

82
00:06:40,130 --> 00:06:43,400
back probably adapting their
communication method to a specific

83
00:06:43,400 --> 00:06:47,429
environment where they really wanted to
have communication between those and the

84
00:06:47,430 --> 00:06:53,120
command control server we've seen
Stuxnet using removable drives but in

85
00:06:53,120 --> 00:06:58,900
both cases if human looked at the files
they were probably able to figure out

86
00:06:58,900 --> 00:07:00,248
something weird was going on

87
00:07:00,249 --> 00:07:05,879
what we want to discuss in this dark is
something a bit more stilted is now

88
00:07:05,879 --> 00:07:10,129
we're using steganography and covered
channels to hide their communications

89
00:07:10,129 --> 00:07:13,429
that even humans looking at the
situation will have a very hard time

90
00:07:13,429 --> 00:07:17,998
figuring out what's going on and once
again I am NOT saying that the cases

91
00:07:17,999 --> 00:07:21,529
we've analyzed here are more complex
more sophisticated than Stuxnet not at

92
00:07:21,529 --> 00:07:28,409
all I'm just saying that the way they
communicate might be now we have all

93
00:07:28,409 --> 00:07:33,929
these fancy terms and definitions but
really to be honest he's just a cool

94
00:07:33,929 --> 00:07:42,058
excuse to look at kittens so Chris do we
have any malicious content hidden in

95
00:07:42,059 --> 00:07:44,789
here when using so you want me to do it

96
00:07:44,789 --> 00:07:48,989
applied taken over for detection in that
we are senior researchers this is what

97
00:07:48,989 --> 00:07:55,709
we usually do that reverse engineering
but I don't know maybe after a few beers

98
00:07:55,709 --> 00:07:59,599
I started seeing strange messages in
that picture but right now I just the

99
00:07:59,599 --> 00:08:04,519
cute kitten and you're right this is
just a cute get in there is nothing in

100
00:08:04,519 --> 00:08:11,659
there just wanted to share the morning
but how about this one I don't know if

101
00:08:11,659 --> 00:08:15,669
you look at the same picture but that's
just a bunch of service I mean a photo

102
00:08:15,669 --> 00:08:17,289
of a wrecker service

103
00:08:17,289 --> 00:08:21,649
yeah well this one is a bit tricky
actually I wanted to have an example of

104
00:08:21,649 --> 00:08:25,549
something that we don't necessarily
considered to be steganography but

105
00:08:25,549 --> 00:08:30,078
actually is used by Matt were so this
image was taken from one of the zoo

106
00:08:30,079 --> 00:08:34,729
skins control server and there's
something in the image that have a

107
00:08:34,729 --> 00:08:38,990
deeper look when you look at the header
this is the number of the header for

108
00:08:38,990 --> 00:08:44,029
this file so you see the jpegs with the
header jaycees over there but the rest

109
00:08:44,029 --> 00:08:48,500
of the field seemed to be ok there is no
HTML tags for example that with some of

110
00:08:48,500 --> 00:08:53,269
you might have seen yesterday with
friends in singles play it seems ok but

111
00:08:53,269 --> 00:08:57,490
when you scroll down and look at the
bottom of the file there is a base 64

112
00:08:57,490 --> 00:09:01,300
encoded string appended to the image so
when

113
00:09:01,300 --> 00:09:06,899
image reader accessthis file it can
render the found the image no problem

114
00:09:06,899 --> 00:09:11,830
you can see it and it's a sort of a
server but at the bottom you have a

115
00:09:11,830 --> 00:09:18,529
configuration file is included with a 64
and then decrypted with our c6 this

116
00:09:18,529 --> 00:09:24,060
doesn't fit our definition of sonography
because if human looks at the files they

117
00:09:24,060 --> 00:09:27,589
will see that there is something that
ended at the end they need to get in an

118
00:09:27,589 --> 00:09:32,050
accident or of course and automated
tools will not have a very hard time

119
00:09:32,050 --> 00:09:38,069
taking this because clearly something is
that the end the interview for example

120
00:09:38,070 --> 00:09:43,850
will not be the same at the end of the
phone and once you decode this country

121
00:09:43,850 --> 00:09:47,120
this is what the configuration looks
like you have a lot of information

122
00:09:47,120 --> 00:09:51,339
stored in to this day 64 string once is
decrypted you have the version of the

123
00:09:51,339 --> 00:09:54,920
bud a different kind of control URLs
what kind of information that should be

124
00:09:54,920 --> 00:10:00,089
stealing so this is just to show you
that our our impending they thought to

125
00:10:00,089 --> 00:10:07,480
images but this is not exactly what we
consider to be still another moving on

126
00:10:07,480 --> 00:10:12,750
to our first example of where we've seen
using still another three this example

127
00:10:12,750 --> 00:10:20,770
is with goes in EverQuest so good in the
request has different name so I track is

128
00:10:20,770 --> 00:10:21,760
neither a yes

129
00:10:21,760 --> 00:10:27,350
of this matter where it appeared along
time ago in 2007 the main objective for

130
00:10:27,350 --> 00:10:30,370
this power is banking front so they
they're going after banking credentials

131
00:10:30,370 --> 00:10:35,089
and they're trying to make fraudulent
transfer money between different

132
00:10:35,089 --> 00:10:40,430
accounts they do so by sending an Angels
but then also installing VNC plugins for

133
00:10:40,430 --> 00:10:44,140
example and SOCKS proxies and so that
they can control the account and

134
00:10:44,140 --> 00:10:47,430
transfer money and other interesting
characteristic of the matter is that

135
00:10:47,430 --> 00:10:51,649
it's very open deletes the browser
history manages to infect the computer

136
00:10:51,649 --> 00:10:58,960
to remove anything that might lead to
the infection victory for the mountain

137
00:10:58,960 --> 00:11:06,550
real communication or the main
communication channel used by Cosi is

138
00:11:06,550 --> 00:11:11,689
what I would call standard or it doesn't
fit this sophistication they are

139
00:11:11,690 --> 00:11:16,960
artistic integrity goes infected hosts
will communicate with its gonna

140
00:11:16,960 --> 00:11:21,990
groceries using HTTP posts and it's
going to use LCG cryptography with a

141
00:11:21,990 --> 00:11:26,470
prolific impression so so far this is
not really a good candidate for our

142
00:11:26,470 --> 00:11:34,050
presentation but earlier this year ago
she started to use a cover channel and

143
00:11:34,050 --> 00:11:39,589
the added capability for stenographer in
the beginning of 2015 the way to our

144
00:11:39,590 --> 00:11:46,970
does it is by downloading a file called
five icon ICO and these are the little

145
00:11:46,970 --> 00:11:50,780
images that you see on pretty much every
web server these days that are giving

146
00:11:50,780 --> 00:11:53,550
you a small icon to represent the
website when you're seeing it as a

147
00:11:53,550 --> 00:12:03,160
browser bookmarks for example cozy will
download this icon over SSL from using

148
00:12:03,160 --> 00:12:08,640
the door to webservice it will then
extract the least significant bit from

149
00:12:08,640 --> 00:12:13,990
each pixel in that file they created
using our site for and retrieve backup

150
00:12:13,990 --> 00:12:19,030
servers so the cover channel is only
used as a backup mechanism when them

151
00:12:19,030 --> 00:12:23,130
infected host cannot communicate with
its gonna control server anymore it will

152
00:12:23,130 --> 00:12:27,010
try to use discover channel to gain
connection back to its gonna control

153
00:12:27,010 --> 00:12:35,130
server so for those of you who are not
very familiar with the other key areas

154
00:12:35,130 --> 00:12:40,350
quick diagram of how this works if you
want to hide information inside an image

155
00:12:40,350 --> 00:12:42,019
you can

156
00:12:42,019 --> 00:12:45,069
physically change some of the
information that is included with every

157
00:12:45,069 --> 00:12:51,449
color so when your party if I'll you
look at every pixel and in the case of

158
00:12:51,449 --> 00:12:56,589
any significant business economic see
you can alter the last bit and slip it

159
00:12:56,589 --> 00:13:00,600
to sit with the message you want to
transmit and in this case that changes

160
00:13:00,600 --> 00:13:04,480
are so small the changes are so small
that they are very hard to see by the

161
00:13:04,480 --> 00:13:09,350
human eye so we see here their first
Orange big sale and you can start

162
00:13:09,350 --> 00:13:11,139
recording four bits in it

163
00:13:11,139 --> 00:13:18,790
1101 Chera was interesting to note here
is that actually you will be encoding

164
00:13:18,790 --> 00:13:23,139
you have some limits in the size of the
data you can encode inside his image

165
00:13:23,139 --> 00:13:30,209
compared to the size of the image it's
so coming back to go easy users listen

166
00:13:30,209 --> 00:13:36,589
if you can get pretty to download if i
cant ICO file and then strips out the

167
00:13:36,589 --> 00:13:40,649
editor doesn't care about the header
then extracts a configuration file which

168
00:13:40,649 --> 00:13:45,619
is scientists so we have no white marker
that the above the middle box here and

169
00:13:45,619 --> 00:13:49,980
from from there it extracts list of
backup command control server actually

170
00:13:49,980 --> 00:13:53,899
just the domain names for these servers
that they will contact when they lose

171
00:13:53,899 --> 00:13:58,129
contact with the main server and this is
what we see in this text number of the

172
00:13:58,129 --> 00:14:06,920
decrypted configuration files for West
moving to the second example are using

173
00:14:06,920 --> 00:14:12,118
steganography this number is called look
so let's see if we've learned anything

174
00:14:12,119 --> 00:14:19,970
about this very thing how about this one
and this lady is not broken yet another

175
00:14:19,970 --> 00:14:20,619
test

176
00:14:20,619 --> 00:14:26,110
oh yes I'm sure you don't fall asleep
it's a wide slide you know they can be

177
00:14:26,110 --> 00:14:33,139
anything in their areas is hiding
something

178
00:14:33,139 --> 00:14:39,769
bees that are usually look like this
they're completely white so our family

179
00:14:39,769 --> 00:14:46,499
that was discovered last year in the
committed last year it's a downloader so

180
00:14:46,499 --> 00:14:51,929
it's used to install an hour so by
itself alert only downloads and installs

181
00:14:51,929 --> 00:14:58,119
Morris militia stuff on infected hosts
but to retrieve the URL of the power it

182
00:14:58,119 --> 00:15:02,819
wants to download it will actually done
a BMP image and extract

183
00:15:02,819 --> 00:15:08,019
listen if you can get information from
each big sale and to retrieve the you

184
00:15:08,019 --> 00:15:14,779
are after some basic X-ers encoding for
the people it's interesting to note here

185
00:15:14,779 --> 00:15:21,579
that the author didn't even take the
time to use nice graphics or even maybe

186
00:15:21,579 --> 00:15:32,248
but they just get the right images also
uses for hiding code of its modules that

187
00:15:32,249 --> 00:15:38,110
it that bundled with the main binary so
there are a couple of images inside the

188
00:15:38,110 --> 00:15:43,199
resources of the file that contained
code but this code is also included

189
00:15:43,199 --> 00:15:48,758
inside images but in this case it is
very visible by the human eye so it's

190
00:15:48,759 --> 00:15:52,619
not exactly fitting are the addition of
signal F lee but still this is another

191
00:15:52,619 --> 00:15:56,220
example of malware in the world that has
been seen last year actually using

192
00:15:56,220 --> 00:16:02,759
steganography to either medication
moving into the case that we mentioned

193
00:16:02,759 --> 00:16:05,960
during the introduction stakeholder

194
00:16:05,960 --> 00:16:15,270
you like there's a defensive not
offensive so is there anything hidden in

195
00:16:15,270 --> 00:16:25,710
the attempted to say no but you know and
there and so this time I say maybe maybe

196
00:16:25,710 --> 00:16:32,160
actually you're right you know you're
any good in this image this is one of

197
00:16:32,160 --> 00:16:37,959
the examples of images that are used by
stay order to hide content this is

198
00:16:37,960 --> 00:16:43,930
actually a PNG image still there is an
information circular we first started

199
00:16:43,930 --> 00:16:50,020
seeing incidents involving this now
we're at the beginning of this year the

200
00:16:50,020 --> 00:16:53,740
component of the power that uses
technology is the downloader modules so

201
00:16:53,740 --> 00:16:59,470
this is the first executable that will
start executing on a machine and is none

202
00:16:59,470 --> 00:17:06,000
other module is used to spot analysis
environment only executive if the Maori

203
00:17:06,000 --> 00:17:09,390
thinks that it is running on a real
machine and not inside any kind of

204
00:17:09,390 --> 00:17:14,589
analysis and then done as an image from
a legitimate website and this is

205
00:17:14,589 --> 00:17:20,069
something you extract the main module
code from the image so compared to lurk

206
00:17:20,069 --> 00:17:24,530
and cozy which were expecting only URLs
from the images in this case takeover

207
00:17:24,530 --> 00:17:29,940
extracts code X 86 code from the image
and then directly lunch the main module

208
00:17:29,940 --> 00:17:35,110
code from memory so the images don't
touch disk and code for the main module

209
00:17:35,110 --> 00:17:41,590
never touches in this weather weather
number does once it's running the main

210
00:17:41,590 --> 00:17:46,470
module is running is that it will create
a pretty verbose profile of the infected

211
00:17:46,470 --> 00:17:49,310
hopes it will try to list its
characteristics and we will see a bit

212
00:17:49,310 --> 00:17:52,860
more details on that later depending on
the characteristics and the infected

213
00:17:52,860 --> 00:17:59,300
hosts the malware operator will push
different modules that will be executed

214
00:17:59,300 --> 00:18:01,659
after

215
00:18:01,660 --> 00:18:09,020
the infection vector for stakeholder is
a bit odd that we've seen are actually

216
00:18:09,020 --> 00:18:12,610
the files are downloaded from websites
pretending to be delivering key

217
00:18:12,610 --> 00:18:21,709
generators or or crack software that are
used to bypass well to cracks and some

218
00:18:21,710 --> 00:18:24,480
of these websites are actually
delivering new variants of them our

219
00:18:24,480 --> 00:18:31,090
everyday and once you start the excuse
that you don't know their products

220
00:18:31,090 --> 00:18:37,110
you have a UI for a real key generator
with a nice sixteen-bit music so if you

221
00:18:37,110 --> 00:18:41,270
guys did you will remember that but also
drops a copy of stakeholder that

222
00:18:41,270 --> 00:18:45,990
starting security some of you might also
be interested by the details that these

223
00:18:45,990 --> 00:18:49,380
websites also always have a capture so
whenever you want to download the file

224
00:18:49,380 --> 00:18:52,950
you need to solve the capture

225
00:18:52,950 --> 00:19:02,470
crawlers trying to coming back to our
bare image in this particular actually

226
00:19:02,470 --> 00:19:07,960
extracts listen if you can get
information from PNG images so we have

227
00:19:07,960 --> 00:19:14,360
our ground we had the energy extraction
then the man with the code is going to

228
00:19:14,360 --> 00:19:20,600
be decrypted using our c4 there is
variation done also with a CRC 32 at the

229
00:19:20,600 --> 00:19:25,270
beginning of the encrypted data and then
we end up with code there's going to be

230
00:19:25,270 --> 00:19:32,530
executed directly from memory so I know
you like animals but I also like nice

231
00:19:32,530 --> 00:19:37,060
injuries so what you think about this
one in there there's no bear in there

232
00:19:37,060 --> 00:19:42,220
but I still say yes there's something
this good this is another example of

233
00:19:42,220 --> 00:19:45,540
images used by state over there actually
hundreds of them and they're all

234
00:19:45,540 --> 00:19:48,230
different but they're all nice to look
at

235
00:19:48,230 --> 00:19:53,640
sharing this with you think there is a
lot of interesting characteristics it

236
00:19:53,640 --> 00:20:01,220
has many tricks to find to identify
analysis environment both automated

237
00:20:01,220 --> 00:20:05,770
and the tools that may be used by
researchers the first one it uses is to

238
00:20:05,770 --> 00:20:11,270
resolve when I called funky imports so
indifferent or in specific environments

239
00:20:11,270 --> 00:20:18,429
where is important deborah simulators or
send boxes some features are added so

240
00:20:18,429 --> 00:20:23,289
there might be for example functions
that will be resolved inside standards

241
00:20:23,289 --> 00:20:29,120
that will result in side will result in
a nice environment but that will not

242
00:20:29,120 --> 00:20:33,260
resolved on a real system simple I have
here and I know it's a bit small but I'm

243
00:20:33,260 --> 00:20:36,640
I trust that you can read it on this
site you can download from the website

244
00:20:36,640 --> 00:20:47,210
where tries to resolve the import and
restart process from this this is not a

245
00:20:47,210 --> 00:20:52,090
function that is exported by going out
there in a deal on a standard system but

246
00:20:52,090 --> 00:20:57,189
in some environment it is so the number
if it achieves to resolve this import by

247
00:20:57,190 --> 00:21:01,929
calling get drunk address it directly
exists so it won't show any other

248
00:21:01,929 --> 00:21:06,380
behavior it won't do anything else it
one decrypt itself to execute so it was

249
00:21:06,380 --> 00:21:13,820
just so this is one of the first Street
used to identify a nice environment to

250
00:21:13,820 --> 00:21:19,270
go there are also closely monitors where
the pointer of the mouse is under stream

251
00:21:19,270 --> 00:21:23,250
trying to ensure that a user is really
playing with the system when it's being

252
00:21:23,250 --> 00:21:29,600
when its executive this is done by going
to get a surplus function but the number

253
00:21:29,600 --> 00:21:33,520
doesn't call in once or twice it
actually caused it in an infinite loop

254
00:21:33,520 --> 00:21:39,270
until the mouse moves but if the mouse
moves too fast jumps in different

255
00:21:39,270 --> 00:21:43,520
position the also stop execution and
when they were executed so they are the

256
00:21:43,520 --> 00:21:48,270
guys that did this now we're really want
to make sure that it only execute on

257
00:21:48,270 --> 00:21:49,410
their target

258
00:21:49,410 --> 00:21:55,420
the city when some research or some send
boxes running this malware strains in

259
00:21:55,420 --> 00:21:58,230
the binaries are constructed dynamically
so the characters are pushed on their

260
00:21:58,230 --> 00:22:02,510
star moving on this before using this
ring so that if you're running streams

261
00:22:02,510 --> 00:22:07,230
for example in the binary you very much
want anything and finally them are also

262
00:22:07,230 --> 00:22:11,670
lists the processes are running on the
machine when the power is in securing so

263
00:22:11,670 --> 00:22:17,020
if there is a network traffic capture
program running or if there is something

264
00:22:17,020 --> 00:22:23,860
like Pokemon and yugioh cdbg an hour
we'll stop executing directly without

265
00:22:23,860 --> 00:22:33,810
exceeding any kind of interesting enough
there were also has a lot of debugging

266
00:22:33,810 --> 00:22:39,520
messages or the Boeing facilities
embedded inside it using a different

267
00:22:39,520 --> 00:22:44,040
kind of control server then its main
command control server still there

268
00:22:44,040 --> 00:22:49,450
stands status messages or debug messages
to a server that is different

269
00:22:49,450 --> 00:22:53,260
using strings like this one shown in
this example and it will actually report

270
00:22:53,260 --> 00:22:58,580
every stage of its execution once it's
the check for analysis machines will say

271
00:22:58,580 --> 00:23:04,030
yep I was able to locate the page of
memories ok I will dunno the damage yet

272
00:23:04,030 --> 00:23:09,139
it is consistent I'm able to load the
GDI plus a library that will be used to

273
00:23:09,140 --> 00:23:14,080
actually process depends yes there's
another report if it's a beautiful image

274
00:23:14,080 --> 00:23:17,590
or not or it doesn't have a lot of
things right now

275
00:23:17,590 --> 00:23:23,620
good question but I find it really hard
that I just told you about all these

276
00:23:23,620 --> 00:23:29,189
checks how stilted amount worries and
then when it starts running it spits out

277
00:23:29,190 --> 00:23:34,040
pretty much everything exactly what it
is doing and we had a couple of theories

278
00:23:34,040 --> 00:23:38,940
about this about this lies that the case
why does it make sense for a very

279
00:23:38,940 --> 00:23:42,940
complicated matter where you have this
kind of reporting channel and

280
00:23:42,940 --> 00:23:47,100
so I mean of course if you if you
designer if you ride very complex

281
00:23:47,100 --> 00:23:52,240
software you have to have debug output
or debug reporting at some point so that

282
00:23:52,240 --> 00:23:56,650
makes sense but why do you leave it in
there for you know for long running

283
00:23:56,650 --> 00:24:03,470
campaigns and I think we have like two
hypotheses right so I first our first

284
00:24:03,470 --> 00:24:08,330
hypothesis was that maybe this is an
affiliate program maybe the guy maybe

285
00:24:08,330 --> 00:24:12,000
the people operating this now I want to
get paid whatever the number is running

286
00:24:12,000 --> 00:24:14,910
so they want to know exactly where it's
running how it's doing so that they can

287
00:24:14,910 --> 00:24:21,160
somehow but we're still not sure about
this gentleman would be that the

288
00:24:21,160 --> 00:24:25,840
operator is a different entity than the
programmer and in this case the

289
00:24:25,840 --> 00:24:29,899
programmer is allowed to receive debug
information but they are not allowed to

290
00:24:29,900 --> 00:24:33,370
access the command control
infrastructure used by the operator

291
00:24:33,370 --> 00:24:42,530
we're still reside or when more specific
or where more specifically designed so

292
00:24:42,530 --> 00:24:47,550
this is a bit more of a complete
explanation how still other works so we

293
00:24:47,550 --> 00:24:50,800
were telling you about the deployment
module that is the image and stars a

294
00:24:50,800 --> 00:24:57,240
main module one of the main module
execute it will create a profile of the

295
00:24:57,240 --> 00:25:02,710
infected host send it to the server and
then tried to download new modules as

296
00:25:02,710 --> 00:25:07,740
they are decided by the operated by the
gun control server

297
00:25:07,740 --> 00:25:12,170
different modules that we have observed
so far are there is one module that used

298
00:25:12,170 --> 00:25:17,070
for adjudication so trying to identify
where the host is based on the type B

299
00:25:17,070 --> 00:25:21,389
there's a module that is used to list
recently opened documents by looking at

300
00:25:21,390 --> 00:25:26,730
the recently opened documents in windows
and following all the links there's a

301
00:25:26,730 --> 00:25:31,190
password stealer module which is a
version of the bonito there and finally

302
00:25:31,190 --> 00:25:36,540
end the inning model so in an hour finds
that there is either installed on the

303
00:25:36,540 --> 00:25:44,250
host they will send specific code to
grab either shoulder the other kids

304
00:25:44,250 --> 00:25:48,250
cuba's installer the plugins you might
have in there and they will send it out

305
00:25:48,250 --> 00:25:53,230
in space I'm pretty sure there are other
modules dependent on

306
00:25:53,230 --> 00:25:57,000
other characteristics and infected host
but these are the ones that we see

307
00:25:57,000 --> 00:26:02,210
what's really odd is that we've also
seen some other bills being delivered as

308
00:26:02,210 --> 00:26:08,950
binary binary executed on the map for
example we've seen some samples or

309
00:26:08,950 --> 00:26:13,679
bundled up which are more likely from
somewhere and we don't know if this is

310
00:26:13,679 --> 00:26:16,570
part of the money situation for this
malware or if it is just a distraction

311
00:26:16,570 --> 00:26:22,649
so that people will really pay attention
to much to devour itself so the decision

312
00:26:22,650 --> 00:26:29,640
in this case is still a bit of a
possible to us what's interesting is

313
00:26:29,640 --> 00:26:35,320
just like cozy actually communicates
with its main command control server in

314
00:26:35,320 --> 00:26:39,330
a way that we do not considered to be
very stealthy or very sophisticated I

315
00:26:39,330 --> 00:26:44,740
mean it took a while to analyze but
still reacting to standard HDD posts

316
00:26:44,740 --> 00:26:49,299
with our C for encryption and then you
have different messages that are being

317
00:26:49,299 --> 00:26:53,510
sent many of them are in decent form at
some of the down there is included with

318
00:26:53,510 --> 00:27:00,000
a 64 if the message is bigger than your
ex 200 bytes it will become friends with

319
00:27:00,000 --> 00:27:04,320
LME so this is more of a standard
communication protocol that we would see

320
00:27:04,320 --> 00:27:09,960
interesting aspects to mention there may
be one of the interesting aspect is that

321
00:27:09,960 --> 00:27:16,070
the IRC for keys are actually they vary
over time and they are hard coded in the

322
00:27:16,070 --> 00:27:19,409
winery so they're not derive from the
messages or from you know some

323
00:27:19,410 --> 00:27:25,240
environmental properties but they just
changed regularly and hard coded in the

324
00:27:25,240 --> 00:27:32,220
distributed by injuries or in the
distributor code via the images thanks

325
00:27:32,220 --> 00:27:37,330
we've also realize that actually

326
00:27:37,330 --> 00:27:43,850
way that different modules are being
pushed into infected hosts China is

327
00:27:43,850 --> 00:27:48,070
organized in scenarios so you will
usually have a first interaction with

328
00:27:48,070 --> 00:27:51,909
their command control server where you
will have for example send

329
00:27:51,910 --> 00:27:57,460
infected host to send a list of system
information so you will have the name of

330
00:27:57,460 --> 00:28:02,020
the processor the name of the grass
acknowledge that their system version of

331
00:28:02,020 --> 00:28:07,610
the operating system then you might have
a request to send a list of infected

332
00:28:07,610 --> 00:28:13,260
software of software and then depending
on these first information you will have

333
00:28:13,260 --> 00:28:16,610
any other scenario or another set of
indirection where we will have two

334
00:28:16,610 --> 00:28:21,850
different modules being pushed one after
the other and at the end you all well in

335
00:28:21,850 --> 00:28:27,310
other cases we've seen we infected host
receives the kill command and at that

336
00:28:27,310 --> 00:28:32,190
point there is no persistence there is
nothing left in the system we're simply

337
00:28:32,190 --> 00:28:33,970
stops including

338
00:28:33,970 --> 00:28:40,900
and it's gone and that's alright so now
we had a nice animals we had nice

339
00:28:40,900 --> 00:28:47,570
sceneries with winter mountains how this
1 I'm giving up and giving up ask the

340
00:28:47,570 --> 00:28:52,820
audience what do they think you think
that there is any state over their data

341
00:28:52,820 --> 00:29:02,030
or code being hit in disadvantaged who
says yes yes yes yes I think the

342
00:29:02,030 --> 00:29:05,820
majority's rights yes there is so this
is another example of the images being

343
00:29:05,820 --> 00:29:10,149
used by my stakeholder in the end in
fact I don't know exactly where they are

344
00:29:10,150 --> 00:29:16,760
taking all these images so just to to
wrap up this part of this presentation

345
00:29:16,760 --> 00:29:21,580
as a summary we've seen three recent
cases of our using steganography in real

346
00:29:21,580 --> 00:29:28,020
life they are used in its entirety which
is interesting on the other hand the

347
00:29:28,020 --> 00:29:34,110
three of them use different file formats
so I ICO they are you some kind of

348
00:29:34,110 --> 00:29:38,689
encoding to have them use our C four and
one is using custom was very important

349
00:29:38,690 --> 00:29:44,650
to note is that by itself is not a very
good way of exchanging information

350
00:29:44,650 --> 00:29:49,230
between an infected hosts and command
control server there needs to be other

351
00:29:49,230 --> 00:29:54,670
technology to use and this is where our
our operators are doing right now and

352
00:29:54,670 --> 00:30:01,200
that is compression and encryption thing
to add there maybe is that the all of

353
00:30:01,200 --> 00:30:06,210
those use lossless compression in in the
image formats and that's a pretty

354
00:30:06,210 --> 00:30:12,070
important point if you use if you try to
rely on steganography yeah because if

355
00:30:12,070 --> 00:30:18,179
the if the compression is lost then you
might and decoding the wrong payload or

356
00:30:18,180 --> 00:30:22,720
the wrong data from what you originally
intended to have encoded in that image

357
00:30:22,720 --> 00:30:28,080
correct on occasion channel

358
00:30:28,080 --> 00:30:34,769
thanks very much ok so up to this point
we have only looked at steganography as

359
00:30:34,769 --> 00:30:40,640
hidden commanding command control
communication but now we want to take a

360
00:30:40,640 --> 00:30:45,440
look at a few other examples of how you
can hide their command control

361
00:30:45,440 --> 00:30:52,169
communication so an example of here
basically two examples those are 2 DNS

362
00:30:52,169 --> 00:30:57,529
responses the one in the upper half of
the slide and given in black that's a

363
00:30:57,529 --> 00:31:03,559
typical DNS responds as you know you
would expect basically what it does DNS

364
00:31:03,559 --> 00:31:06,799
basically maps demands to IP addresses
and that's what we see in there as well

365
00:31:06,799 --> 00:31:12,019
someone was asking what's the ipv4
address of the domain you community bank

366
00:31:12,019 --> 00:31:18,120
to calm and in the answer section you
see this maps to an IP address 7454

367
00:31:18,120 --> 00:31:23,120
80215 very and it also has the time to
live

368
00:31:23,120 --> 00:31:29,518
associated with it in this case the time
to live one day in the lower part

369
00:31:29,519 --> 00:31:34,480
however this looks this looks a bit
suspicious this does not look like a

370
00:31:34,480 --> 00:31:39,299
typical DNS requests but then again DNS
is flexible you can do all kinds of

371
00:31:39,299 --> 00:31:44,129
stuff of DNS but if we take this this
response apart

372
00:31:44,130 --> 00:31:48,659
there's a few things that you know
stakeout first of all the career domain

373
00:31:48,659 --> 00:31:51,639
name is quite long and it ends in
google.com

374
00:31:51,639 --> 00:31:56,990
well there's a lot of Google services
out there and you know who knows this

375
00:31:56,990 --> 00:32:00,399
could be machine-to-machine
communications so could be the next

376
00:32:00,399 --> 00:32:05,389
thing that sticks out is the results
record type of that query is set to any

377
00:32:05,389 --> 00:32:11,289
and that basically means any results
record that you have for that given

378
00:32:11,289 --> 00:32:16,570
domain name and in the answer section we
see that the server actually responds

379
00:32:16,570 --> 00:32:22,918
with a TXT records that's that's here
and in that results record we have a set

380
00:32:22,919 --> 00:32:30,740
of a text string basically and what's
also interesting is that the time to

381
00:32:30,740 --> 00:32:36,179
live for that DNS response is 0 which
basically means that response is not

382
00:32:36,179 --> 00:32:37,960
supposed to be case in any kind of

383
00:32:37,960 --> 00:32:42,770
test results so at that point and this
looks suspicious and i can tell you that

384
00:32:42,770 --> 00:32:48,600
much lower part DNS response was caused
by a botnet which uses DNS as a carrier

385
00:32:48,600 --> 00:32:56,120
protocol for its command control before
going into that example of an in-depth

386
00:32:56,120 --> 00:33:00,350
let's step back for a moment and think
about why would it make sense to use DNS

387
00:33:00,350 --> 00:33:03,279
as a carrier protocol for command
control

388
00:33:03,279 --> 00:33:09,010
well first of all there's no specific
detection for the DNS protocol now don't

389
00:33:09,010 --> 00:33:14,510
get me wrong I know there are several
DNS based protection means out there but

390
00:33:14,510 --> 00:33:19,510
what they basically do as they apply
blacklist team or whitelisting and that

391
00:33:19,510 --> 00:33:25,200
means they target on the domain names
that are resolved by a DNS possibly also

392
00:33:25,200 --> 00:33:30,890
on the IP addresses that are returned
but they rallied target the DNS traffic

393
00:33:30,890 --> 00:33:37,390
in general so for example if you're
talking syntactically valid DNS with

394
00:33:37,390 --> 00:33:42,960
third-party resolve us on the internet
that's that's often loud for example

395
00:33:42,960 --> 00:33:47,980
Google Public DNS or OpenDNS there are
several of these and that sometimes even

396
00:33:47,980 --> 00:33:53,570
allowed in let's say heavily firewalled
environments so in environments that try

397
00:33:53,570 --> 00:33:58,408
to restrict communication but they do
allow DNS to go through and they do even

398
00:33:58,409 --> 00:34:03,350
allowed in has to go through to
third-party resolve us and from the

399
00:34:03,350 --> 00:34:08,759
perspective of a family-operated DNS has
a few advantages and one of those being

400
00:34:08,760 --> 00:34:14,320
that it is designed as a distributed
system and that provides an advantage to

401
00:34:14,320 --> 00:34:19,270
the operator because distributed systems
are typically much harder to to take

402
00:34:19,270 --> 00:34:25,449
down then a centralized one alright
let's look back at the example that I

403
00:34:25,449 --> 00:34:30,689
just presented basically that initial
request I showed you is from but that's

404
00:34:30,690 --> 00:34:35,700
cause future bytes which has which we
discovered in 2010 actually so it has

405
00:34:35,699 --> 00:34:40,118
been around for more than five years we
call this shit about back then based on

406
00:34:40,119 --> 00:34:47,109
a characteristic string in the Pinery
and you know it has this fancy command

407
00:34:47,109 --> 00:34:57,720
control channel but regarding
monetization basis he just does it

408
00:34:57,720 --> 00:35:03,709
implements a cover channel via DNS and
that by itself is not not really

409
00:35:03,710 --> 00:35:07,790
something you that has been presented in
the past many times but if you're

410
00:35:07,790 --> 00:35:11,810
actually faced with a question or with
the task of implementing such a cover

411
00:35:11,810 --> 00:35:16,890
channel you're basically facing several
decisions to make and it's interesting

412
00:35:16,890 --> 00:35:22,890
to see how exactly the malware authors
face these are sold these and designed

413
00:35:22,890 --> 00:35:30,180
the whole the whole member for example
may have several career domain skis one

414
00:35:30,180 --> 00:35:33,509
of those is that they're using
legitimate demands like well known to

415
00:35:33,510 --> 00:35:38,619
Maine's like that google.com example
that I have presented earlier and that

416
00:35:38,619 --> 00:35:44,760
requires that they either have control
over their zone information for that for

417
00:35:44,760 --> 00:35:50,050
those demands which is unlikely in the
example of Google or and that's what

418
00:35:50,050 --> 00:35:54,990
they didn't example they direct these
requests to their own set of DNS servers

419
00:35:54,990 --> 00:36:00,839
and that makes it a challenge for
forensics because if you just see the

420
00:36:00,839 --> 00:36:06,500
DNS requests and responses without the
information where this request went to

421
00:36:06,500 --> 00:36:09,200
our who answered that request

422
00:36:09,200 --> 00:36:16,149
it's hard to tell if it's legit or if
it's delicious

423
00:36:16,150 --> 00:36:21,630
they are making use of a distributed
infrastructure infrastructure but they

424
00:36:21,630 --> 00:36:26,510
are not using the inherent features of
DNS which is also interesting now get to

425
00:36:26,510 --> 00:36:31,710
that in a second but I can tell you that
much their infrastructures spread over

426
00:36:31,710 --> 00:36:36,210
multiple autonomous systems so they they
are pretty aware that a distributed

427
00:36:36,210 --> 00:36:42,930
infrastructure is it hard to take down
now let's take a bit of a closer look at

428
00:36:42,930 --> 00:36:48,700
how this responses are at this request
and the response are made up our

429
00:36:48,700 --> 00:36:54,779
build-up so in a bootstrapping phase
that's what that's the early request

430
00:36:54,779 --> 00:37:01,480
that the MLS sends out it basically asks
for for Morrissey tutsi to service a

431
00:37:01,480 --> 00:37:07,210
second stage C to service and it does
that any clues in their requests a

432
00:37:07,210 --> 00:37:09,890
system dependent body which is this

433
00:37:09,890 --> 00:37:18,118
50 by 50 character string that you see
up there and that is used to encrypt the

434
00:37:18,119 --> 00:37:26,020
response by the so if we take a look at
the decrypted a response that's given as

435
00:37:26,020 --> 00:37:31,470
a text I'm here and here then we
basically see that there is an IP

436
00:37:31,470 --> 00:37:35,959
address as an ASCII string in there and
that IP address is used as the next page

437
00:37:35,960 --> 00:37:41,000
c2 so that the mouth and contacts in
order to get more information about its

438
00:37:41,000 --> 00:37:47,010
tasking so to sum up it contains a
referral to the next city to serving

439
00:37:47,010 --> 00:37:55,309
note which is at the accuracy that's on
slide now there is a few more elements

440
00:37:55,309 --> 00:37:59,630
in that responds and and it's
interesting to see how it actually built

441
00:37:59,630 --> 00:38:05,430
up the second stage C two requests now
on the top we have that same refer oh

442
00:38:05,430 --> 00:38:09,480
and decrypted form as I showed on the
previous life and at the bottom right

443
00:38:09,480 --> 00:38:15,180
here we have the set the subsequent or
the second stage si tu regreso to say

444
00:38:15,180 --> 00:38:21,129
and I will walk you through how it
builds up this second stage C to request

445
00:38:21,130 --> 00:38:21,570
there's

446
00:38:21,570 --> 00:38:27,490
3d where it's in that decrypted referral
response and to ASCII strings and

447
00:38:27,490 --> 00:38:32,129
interesting stuff is that the first
DWORD the one marked with a blue

448
00:38:32,130 --> 00:38:39,650
background that is used as a subdomain
the domain that is supposed to be used

449
00:38:39,650 --> 00:38:44,590
to query the next page c2 so so
basically we have this magic number

450
00:38:44,590 --> 00:38:51,580
the two 6766 we have a domain name but
that should be used to cook to talk to

451
00:38:51,580 --> 00:38:58,290
the second stage C to server in this
case this images New Year dot net and we

452
00:38:58,290 --> 00:39:03,630
have an IP address which is the accuracy
of the DNS server that is to be talked

453
00:39:03,630 --> 00:39:08,440
to and we can also see that it
specifically requests txt resource

454
00:39:08,440 --> 00:39:15,370
records at this stage now if you think
about DNS referrals are an inherent

455
00:39:15,370 --> 00:39:20,620
feature DNS if you think about it
relative to DNS resolution you know you

456
00:39:20,620 --> 00:39:24,779
ask the root DNS servers and you get a
referral back and so on and so forth so

457
00:39:24,780 --> 00:39:30,330
they could have relied on that but if we
suppose that or yea we think they did

458
00:39:30,330 --> 00:39:35,840
not because you can encrypt the
information you can encrypt the referral

459
00:39:35,840 --> 00:39:44,710
if you're using the DNS inherent beaches
but you can if you do it that way

460
00:39:44,710 --> 00:39:50,830
has a few implications so you can make
arbitrarily large DNS requests based on

461
00:39:50,830 --> 00:39:56,850
UDP so you have some size limitations
and the DSRC also has a few restrictions

462
00:39:56,850 --> 00:40:01,970
on the career domain name and stuff like
that but that's well respected by the

463
00:40:01,970 --> 00:40:05,109
medalists are the authors were
apparently aware of that and worked

464
00:40:05,110 --> 00:40:11,000
around that the basic message structure
is that you have a DNS TXT records in

465
00:40:11,000 --> 00:40:17,520
that DNS TXT record you have a base 64
encoded data and you have a serious C 32

466
00:40:17,520 --> 00:40:24,480
a checksum four bytes basically in order
to check the the decrypted content and

467
00:40:24,480 --> 00:40:30,080
the actual content is what I refer to as
as a chunk because basically what

468
00:40:30,080 --> 00:40:30,900
happens is

469
00:40:30,900 --> 00:40:35,859
is all the information that is to be
transmitted to split up into chunks and

470
00:40:35,859 --> 00:40:44,130
these chancers transfer separately and
each and a chunk I D or two to query a

471
00:40:44,130 --> 00:40:48,140
specific chunk from the sea to server
that song heidi is prepended to the

472
00:40:48,140 --> 00:40:55,920
career domain name up front so it's a
pretty well design architecture or c2

473
00:40:55,920 --> 00:41:02,119
protocol based on DNS this military
again uses a variety of our C four keys

474
00:41:02,119 --> 00:41:05,390
to make it you know not a
straightforward task to deep throat or

475
00:41:05,390 --> 00:41:11,940
decrypt the information but as I said it
has been around in 2010 so apparently

476
00:41:11,940 --> 00:41:18,789
designing a city to protocol in that way
apparently helps to stick around for for

477
00:41:18,789 --> 00:41:19,470
some time

478
00:41:19,470 --> 00:41:26,439
ok that was an example that was another
cybercrime typically crimes prime

479
00:41:26,440 --> 00:41:33,099
example about how about how about
targeted attacks do we see DNS based see

480
00:41:33,099 --> 00:41:40,710
to challenge in targeted attacks yes we
do this family complex which has been

481
00:41:40,710 --> 00:41:44,920
around for some time as well I think
early variants go back to as far as 2008

482
00:41:44,920 --> 00:41:52,450
and we see it as we see ligase being
used a lot it has been used for many

483
00:41:52,450 --> 00:41:56,899
years we have seen it being used against
government entities defense and

484
00:41:56,900 --> 00:42:04,200
aerospace sector and even pro-democracy
activists it's it's mostly used by

485
00:42:04,200 --> 00:42:10,930
china-based actors and has a very much a
plugin based design and as such it

486
00:42:10,930 --> 00:42:16,430
supports multiple c2 carrier particles
and among that is also a model to

487
00:42:16,430 --> 00:42:27,009
actually perform yes based control panel
using DNS for command and control that's

488
00:42:27,010 --> 00:42:33,210
what I'm saying OK let's take a look at
an example compared to feed about we we

489
00:42:33,210 --> 00:42:37,240
see that this is this is structured a
little bit differently we again have a

490
00:42:37,240 --> 00:42:38,580
pretty long

491
00:42:38,580 --> 00:42:43,779
career domain name and that's actually
where the information is encoded in this

492
00:42:43,780 --> 00:42:50,450
example so again as I said earlier
there's a few implications that DNS

493
00:42:50,450 --> 00:42:56,819
implies that is for example that the
domain name consists of labels that's

494
00:42:56,820 --> 00:43:00,670
basically the stuff that separated by
the dots and each label can only have a

495
00:43:00,670 --> 00:43:06,820
length up to 63 characters and again the
medellin knows that and works around it

496
00:43:06,820 --> 00:43:14,780
by inserting a dot at least every six to
three characters and encoding scheme

497
00:43:14,780 --> 00:43:20,930
that used here is basically base 16
using a custom alphabet and it and it

498
00:43:20,930 --> 00:43:25,000
adds randomness in the first few bites
so the question is why does it do that

499
00:43:25,000 --> 00:43:31,910
well anything random stuff to the career
domain name helps to to prevent this

500
00:43:31,910 --> 00:43:37,348
being cased so because it's effectively
and you read and maintain

501
00:43:37,349 --> 00:43:44,079
you know a result won't add that they
might added to taste but you know it's

502
00:43:44,079 --> 00:43:48,950
always a new one so that prevents Casey
but the interesting thing is that the

503
00:43:48,950 --> 00:43:54,029
bite at Austin three in the plaintext
which is offset secs in the encoded

504
00:43:54,029 --> 00:43:57,950
variant that you see up there that want
to fix because that's the message type

505
00:43:57,950 --> 00:44:04,509
so it's always checks money in a plain
text and it's gonna be in the demanding

506
00:44:04,509 --> 00:44:11,599
so that upset you will always find be
for the initial boot truck traffic in

507
00:44:11,599 --> 00:44:16,779
that case are you aware of any public
documentation on this feature of novak's

508
00:44:16,779 --> 00:44:21,529
I don't think this says you guys are you
doing it for the first time I think so

509
00:44:21,529 --> 00:44:31,499
yes I think the first time publicly
documented ok leaving DNS aside for a

510
00:44:31,499 --> 00:44:39,479
moment let's take a look at http here's
here's a typical HTTP response I would

511
00:44:39,479 --> 00:44:43,450
say so if you're my gif and asking me so
much about your beautiful animal

512
00:44:43,450 --> 00:44:47,029
pictures what do you think these see
anything suspicious in there well to be

513
00:44:47,029 --> 00:44:52,160
honest to me HTML is complete gibberish
all the time you have special characters

514
00:44:52,160 --> 00:44:56,890
and smaller and no I think this is
completely who doing HTML would do

515
00:44:56,890 --> 00:44:58,269
anything malicious

516
00:44:58,269 --> 00:45:08,269
not even a programming and writing it
supposed to mimic a typical HTTP 500

517
00:45:08,269 --> 00:45:15,069
error message and a consists of a header
which has the status code which is 404

518
00:45:15,069 --> 00:45:20,229
and it also has a body and that's
typical for error message messages as

519
00:45:20,229 --> 00:45:24,828
well I just three peach basically that
the file was not found in the body is

520
00:45:24,829 --> 00:45:30,700
basically presented to the user but what
we see down here is actually there's

521
00:45:30,700 --> 00:45:31,450
some

522
00:45:31,450 --> 00:45:39,350
you know encoded stream we can't say
what exactly it has a prefix of debug so

523
00:45:39,350 --> 00:45:44,220
you know maybe they wanted to make this
look like some state machine or state

524
00:45:44,220 --> 00:45:49,169
information we don't know but actually
if you decode that you find that this is

525
00:45:49,170 --> 00:45:54,390
actually a command to to a bot so that's
basically part of command control

526
00:45:54,390 --> 00:45:59,890
communication just hidden in a somewhat
unique way and this command basically

527
00:45:59,890 --> 00:46:02,730
tells the path to download a specific
boundary from a specific location

528
00:46:02,730 --> 00:46:05,890
executed and so on and so forth

529
00:46:05,890 --> 00:46:14,379
ok that's it with our examples let's try
to sum up what we've seen is presented

530
00:46:14,380 --> 00:46:22,900
in our talk now there were these are
real world examples of mouth it's using

531
00:46:22,900 --> 00:46:27,650
hidden communication and we've seen
examples from the cybercriminal world

532
00:46:27,650 --> 00:46:31,400
and from target at activities

533
00:46:31,400 --> 00:46:36,730
channels are used by malware c2 and
they're mostly used under certain

534
00:46:36,730 --> 00:46:41,860
conditions and this is where it gets
interesting so we know that they combine

535
00:46:41,860 --> 00:46:47,100
that with cryptography and they do that
because just hiding the information you

536
00:46:47,100 --> 00:46:53,160
know doesn't solve all your problems if
you combine that with cryptography you

537
00:46:53,160 --> 00:46:57,799
actually make it difficult to signature
of the traffic even traffic that is

538
00:46:57,800 --> 00:47:02,630
hidden and they often do that for small
messages so coming back to the girls

539
00:47:02,630 --> 00:47:07,860
example this is a really nice example so
why would you design your main command

540
00:47:07,860 --> 00:47:08,710
control channel

541
00:47:08,710 --> 00:47:15,970
using steganography or any of those
pretty complex techniques and what they

542
00:47:15,970 --> 00:47:20,730
started by basically just designing the
fall back seat to communication using

543
00:47:20,730 --> 00:47:28,839
those techniques if you think about the
necessity to communicate their there

544
00:47:28,839 --> 00:47:34,359
might be some protocols that actually
served better if you need more bandwidth

545
00:47:34,359 --> 00:47:39,470
in the regular c2 communication so far
we've only seen images for example for

546
00:47:39,470 --> 00:47:44,689
this technocratic part and we've mostly
seen DNS in these examples and also its

547
00:47:44,690 --> 00:47:51,530
GDP but you know in order to scale up
you could also use any kind of other

548
00:47:51,530 --> 00:47:57,830
protocols video conferencing whatever
product hopes that by themselves use

549
00:47:57,830 --> 00:48:06,670
more or require more bandwidth part of
that is that we believe in August he at

550
00:48:06,670 --> 00:48:11,670
least is mainly used for unidirectional
communication and the reason is if you

551
00:48:11,670 --> 00:48:16,700
think about a two-way communication
using steganography let's say using

552
00:48:16,700 --> 00:48:21,060
images as the media you want to encode
your stuff and then you have to have a

553
00:48:21,060 --> 00:48:26,400
pool of images at hands that you can
encode these messages and that might be

554
00:48:26,400 --> 00:48:31,760
doable for the c2 service side but it's
definitely more challenging on for an

555
00:48:31,760 --> 00:48:36,119
infected machine to have that pool of
images attend to encode the messages in

556
00:48:36,119 --> 00:48:43,650
if you used in Agra fee such a stigma
lower than you can actually leverage in

557
00:48:43,650 --> 00:48:47,830
nine infrastructure for command and
control or malware storage and that

558
00:48:47,830 --> 00:48:51,690
poses another problem for defenders
because they're basically works around

559
00:48:51,690 --> 00:48:59,470
reputation based detection or protection
means so

560
00:48:59,470 --> 00:49:04,959
finally we seeing cover challenge that
involves taking over a steganography or

561
00:49:04,960 --> 00:49:10,980
hiding messages and carrier particles
make me to communication more difficult

562
00:49:10,980 --> 00:49:18,210
to detect but I would say steak steak
steak another fee is not a panacea and

563
00:49:18,210 --> 00:49:25,140
hiding messages in inconspicuous area
protocols is neither a panacea one of

564
00:49:25,140 --> 00:49:30,529
the main goals that we wanted to achieve
this talk is to raise awareness for this

565
00:49:30,530 --> 00:49:35,220
type of communication and I think that's
one of the first steps that we can take

566
00:49:35,220 --> 00:49:40,540
in order to detect this kind of
communication in the future and if you

567
00:49:40,540 --> 00:49:45,430
ever happened to run across traffic that
looks suspicious to you just hit us up

568
00:49:45,430 --> 00:49:52,129
getting get in touch with us and we'll
be happy to look into that with that I

569
00:49:52,130 --> 00:49:57,470
think will conclude this talk and will
take questions thank you for your

570
00:49:57,470 --> 00:50:05,040
attention

571
00:50:05,040 --> 00:50:17,370
we actually have everybody get a t-shirt
so you know

572
00:50:17,370 --> 00:50:24,950
think about it

573
00:50:24,950 --> 00:50:39,960
we might have a real question is why I
didn't sorry I didn't get it and i think

574
00:50:39,960 --> 00:50:43,810
i understood the question but I don't
have the answer do you think your PC can

575
00:50:43,810 --> 00:50:48,160
be used for this thing or a bad thing is
helping with looking at this type of

576
00:50:48,160 --> 00:51:04,089
protocol 1 I'll get back to you as well
in this is one of the topics about DNS

577
00:51:04,089 --> 00:51:07,660
that are you know that

578
00:51:07,660 --> 00:51:13,080
yeah let's chat about it offline I guess
you'll get a t-shirt anyway

579
00:51:13,080 --> 00:51:40,009
so the question was if we have seen
specific answers based on the

580
00:51:40,010 --> 00:51:44,750
environment of of of the client or the
infected machine so for example based on

581
00:51:44,750 --> 00:51:50,250
the IP address and the answer is
definitely yes so far still go to for

582
00:51:50,250 --> 00:51:56,690
example as p.m. mark mentioned they they
built up a very verbose profile of the

583
00:51:56,690 --> 00:52:02,480
infected machine and we believe there is
some kind of state machine implemented

584
00:52:02,480 --> 00:52:08,200
on the sea to server and we we don't we
don't always trigger the distribution of

585
00:52:08,200 --> 00:52:12,720
the deployment of the of the same
payload and we believe that is based on

586
00:52:12,720 --> 00:52:18,089
such things such as the IP address that
you're connecting from maybe even how

587
00:52:18,090 --> 00:52:21,840
many times you have connected in the
past we've seen that pretty aggressive

588
00:52:21,840 --> 00:52:26,050
blacklisting for example by the by the
sea to operators and stuff like that so

589
00:52:26,050 --> 00:52:31,040
that is definitely a challenge or
researches yes there was a question the

590
00:52:31,040 --> 00:52:42,950
back there

591
00:52:42,950 --> 00:52:47,140
so if I understand the question
correctly is how did they implement DNS

592
00:52:47,140 --> 00:52:58,359
coverage analysts

593
00:52:58,360 --> 00:53:03,540
ok so ok I got it now the question is
how do they redirect the messages to

594
00:53:03,540 --> 00:53:08,440
their c2 service to their DNS service
basically well in most examples they

595
00:53:08,440 --> 00:53:13,010
just send them directly to IP addresses
that along to their own infrastructure

596
00:53:13,010 --> 00:53:19,640
they could as well use their own domains
and following the principles of

597
00:53:19,640 --> 00:53:23,080
iterative DNS resolution they will at
some point

598
00:53:23,080 --> 00:53:29,090
end up at the authoritative name servers
or one of the recursive resolve us will

599
00:53:29,090 --> 00:53:34,290
end up at the authoritative result
that's responsible for that for that

600
00:53:34,290 --> 00:53:38,759
domain so in that case you don't know if
you use the register domains

601
00:53:38,760 --> 00:53:44,700
you don't need to you know influence
that that communication but if you use

602
00:53:44,700 --> 00:53:52,720
few yet use by nine domains basically in
that case they directed them to to those

603
00:53:52,720 --> 00:54:16,759
DNS servers that that they set up your
head under control

604
00:54:16,760 --> 00:54:26,810
question was if we had seen actors
actively operating around blocking

605
00:54:26,810 --> 00:54:31,049
mechanisms that have been implemented
implemented as a result of detecting

606
00:54:31,050 --> 00:54:39,400
this type of traffic I'm not aware yeah
I think so in short I think they rely

607
00:54:39,400 --> 00:55:04,380
purely on on not being detected or we
have not observed any other cases

608
00:55:04,380 --> 00:55:10,970
information inside images and send it to
a server especially now that we're

609
00:55:10,970 --> 00:55:14,000
seeing more and more people trading
images in the images to one another this

610
00:55:14,000 --> 00:55:17,559
is not even going to raise a lot of
specific mission on a network on the

611
00:55:17,559 --> 00:55:22,930
other hand as Chris mentioned it assumes
that the malware has a pool of images

612
00:55:22,930 --> 00:55:28,210
that they can use to send messages
messages in and then sent over and this

613
00:55:28,210 --> 00:55:31,660
is a bit less convenient for malware is
to actually download images do something

614
00:55:31,660 --> 00:55:36,259
or is the always trade the same image
did it might be a bit easier to spot but

615
00:55:36,259 --> 00:55:41,190
I think this is more that we think is
happening right now why people are only

616
00:55:41,190 --> 00:55:44,900
done with the images in the city trading
them by hiding messages in both

617
00:55:44,900 --> 00:55:59,859
directions

618
00:55:59,859 --> 00:56:22,980
images that contain the militia stuff
okay we've seen a variety of benign

619
00:56:22,980 --> 00:56:28,130
websites that were used to host that
stuff and that did change over time so I

620
00:56:28,130 --> 00:56:36,930
think we have seen a total of like five
or six hosting websites I actually don't

621
00:56:36,930 --> 00:56:41,098
remember off the top of my head but it
when they want those those big ones like

622
00:56:41,099 --> 00:56:46,410
Flickr or so that there was smaller ones
or medium sized ones I would say none of

623
00:56:46,410 --> 00:56:48,598
none of them I had heard before

624
00:56:48,599 --> 00:56:52,489
to be on one of the most relevant I've
seen his host then posed authorities so

625
00:56:52,489 --> 00:56:56,190
this one has been used a lot and
actually did not operate there's maybe

626
00:56:56,190 --> 00:56:59,359
as a closing remark because we're on a
plane tomorrow break there sometimes

627
00:56:59,359 --> 00:57:02,519
also we're pretty quick to remove the
images ones they were used to that was

628
00:57:02,519 --> 00:57:08,029
also interesting to note but there was
one of them so thank you very much if

629
00:57:08,029 --> 00:57:09,900
you have more questions will be glad to
be off line

