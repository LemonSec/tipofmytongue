1
00:00:00,000 --> 00:00:06,140
alright so my name's Anthony bikini
founder and CEO thought check court

2
00:00:06,140 --> 00:00:11,570
better background on myself being a
security since 1996 started by doing

3
00:00:11,570 --> 00:00:15,710
forensic expertise P that was
compromised all of their billing data

4
00:00:15,710 --> 00:00:20,939
bases in the court file someone to bug
that caused her to use it at all the

5
00:00:20,939 --> 00:00:26,480
credit cards dreamed that's how I
started security long time ago I have

6
00:00:26,480 --> 00:00:29,420
been doing vulnerability of research and
stuff relating the vulnerability

7
00:00:29,420 --> 00:00:34,130
research reverse engineering now are now
all these kinds of things since that

8
00:00:34,130 --> 00:00:41,489
time so just quickly history on Linux
containers and all the stuff that's kind

9
00:00:41,489 --> 00:00:45,940
of late into the containers Asian
technology inside doctor in things like

10
00:00:45,940 --> 00:00:50,709
talker I think in general you know
looking at history is this pretty

11
00:00:50,710 --> 00:00:52,260
helpful for stuff like this

12
00:00:52,260 --> 00:00:56,940
like if you look too if you are in a job
to Hoss's talk in this room yesterday

13
00:00:56,940 --> 00:01:01,800
actually you know they spent a lot of
time on basically supporting hardware

14
00:01:01,800 --> 00:01:06,899
tax cryptanalysis hard work tax into
software and I think it's like really

15
00:01:06,900 --> 00:01:11,310
relevant to you know when you look at
containerization technology even if

16
00:01:11,310 --> 00:01:17,380
thats like comparing Adobe Reader racks
or things like that to da car and we had

17
00:01:17,380 --> 00:01:20,439
fought her she spent a lot of time
thinking about containerization

18
00:01:20,439 --> 00:01:25,110
technology as it applies not to digital
containers but shipping containers

19
00:01:25,110 --> 00:01:29,570
because much of the same problems found
in shipping containers we have declined

20
00:01:29,570 --> 00:01:33,539
in digital containers in and how would
you address those problems with things

21
00:01:33,540 --> 00:01:39,270
pretty similar hours while so starting
out with

22
00:01:39,270 --> 00:01:42,859
containerization technology on Linux on
the earliest thing we could find was a

23
00:01:42,859 --> 00:01:47,449
chroot you want spend a lot of time on
the ice but you know just the basics

24
00:01:47,450 --> 00:01:52,270
refresh on seeds were in the back from
79 I never realized was that all to

25
00:01:52,270 --> 00:01:57,960
myself but that's how long that is you
know if you see it ratified to a folder

26
00:01:57,960 --> 00:02:00,350
you created like a directory

27
00:02:00,350 --> 00:02:06,038
step back in the directory anything you
want to execute in that and in a long

28
00:02:06,039 --> 00:02:10,360
time ago between ten twenty years ago
people thought it was for security but

29
00:02:10,360 --> 00:02:14,610
you know really was and it was for
creating a jail for something like if

30
00:02:14,610 --> 00:02:21,030
TPD and if you copy bash and see its
route you ultimately you have to copy

31
00:02:21,030 --> 00:02:28,000
and all the dependency is also showed
libraries all these kinds of things and

32
00:02:28,000 --> 00:02:32,030
you know like any other old containers
Asian technology to break out attacks

33
00:02:32,030 --> 00:02:37,829
for that you can recursively change
directory up and you can break out of a

34
00:02:37,829 --> 00:02:43,549
seat for you to get to the next kind of
precursor to house you have to fast for

35
00:02:43,549 --> 00:02:49,310
quite a lot actually so going from 1979
@ jumps to 2007 with the introduction

36
00:02:49,310 --> 00:02:56,069
and see groups so syrups API interface
in the kernel largely implemented

37
00:02:56,069 --> 00:03:00,078
directly by Google engineers and what
was interesting about that is what their

38
00:03:00,079 --> 00:03:04,970
aim was was coming up with this idea of
process canteen ours and they didn't

39
00:03:04,970 --> 00:03:09,569
want to call a process containers
because even at the time they fell

40
00:03:09,569 --> 00:03:14,730
containers containers was an overused
term but ultimately what they are trying

41
00:03:14,730 --> 00:03:19,119
to do is if you think back to Google
2007 kind of timeframe so they're

42
00:03:19,120 --> 00:03:23,220
scaling up and they want to isolate all
the processes and keep everything

43
00:03:23,220 --> 00:03:32,500
separate and so they start pull request
on the chrono jad see group support and

44
00:03:32,500 --> 00:03:36,989
then kind of the first kind of larger a
reference implementation for all of the

45
00:03:36,989 --> 00:03:43,380
container interfaces in the colonel was
actually LXE so anybody yearly are in

46
00:03:43,380 --> 00:03:47,500
the now exceeds starts providing
reference implementation on current

47
00:03:47,500 --> 00:03:48,770
namespace the poor

48
00:03:48,770 --> 00:03:55,190
on C groups a farmer SELinux policy is
all these kinds of things in this ends

49
00:03:55,190 --> 00:04:00,990
up being effectively some sort some
level of a precursor to dr. itself but

50
00:04:00,990 --> 00:04:05,220
then doctor actually comes much much
later there's only a couple years old

51
00:04:05,220 --> 00:04:11,160
this point to a senior introduced by
Solomon hikes at PyCon and I was

52
00:04:11,160 --> 00:04:15,500
actually a lightning talk oddly enough
you know such a popular technology most

53
00:04:15,500 --> 00:04:20,040
of people in the room of now you is dead
I was introduced at a five-minute talk

54
00:04:20,040 --> 00:04:25,230
and you certainly would encourage people
to wash the talk especially if you know

55
00:04:25,230 --> 00:04:29,620
your insecurities are entering into
containerization you can tell from the

56
00:04:29,620 --> 00:04:35,460
talk that the team behind doctor can
certainly knew it contains new security

57
00:04:35,460 --> 00:04:39,130
but had put tons of time into containers
Asian

58
00:04:39,130 --> 00:04:42,350
the reason they put all this time into
it was they would they were running .

59
00:04:42,350 --> 00:04:46,660
cloud at the time you can think of it
like hiroko if you're not familiar with

60
00:04:46,660 --> 00:04:52,100
Doc cloud and they were trying to run a
fairly arbitrary web applications in the

61
00:04:52,100 --> 00:04:58,500
cloud while generally try to keep
everything separate from each other and

62
00:04:58,500 --> 00:05:04,170
if you were to compare dr. to LXE I'm
not sure how visible this is in the back

63
00:05:04,170 --> 00:05:09,450
but what's kind of interesting LXE
basically started by being really

64
00:05:09,450 --> 00:05:15,349
similar to affect virtual machines but
doctor wasn't in in the reason it wasn't

65
00:05:15,350 --> 00:05:19,930
was because of the copy on write file
system in so what ends up happening with

66
00:05:19,930 --> 00:05:23,100
talkers you have you officially have
processed containers instead of

67
00:05:23,100 --> 00:05:28,340
operating system containers because of
copy on write in a layered file system

68
00:05:28,340 --> 00:05:36,310
you can turn on containers very quickly
and so the basis of ad at the time they

69
00:05:36,310 --> 00:05:43,370
were starting your fast now have a hold
of supported file systems not

70
00:05:43,370 --> 00:05:47,050
necessarily a row thats all the time and
you know there's all these a strike next

71
00:05:47,050 --> 00:05:49,120
to it like Red Hat not supporting that

72
00:05:49,120 --> 00:05:53,729
the mainline kernel of these kinds of
things but was kind of interesting is

73
00:05:53,729 --> 00:05:58,599
like if you look at the Dr image of a
layered file system so you can think

74
00:05:58,600 --> 00:06:02,590
what is the tarball but you aren't
artists all tarball there's a whole

75
00:06:02,590 --> 00:06:11,049
directory structure below that in this
copy on write file system can burn

76
00:06:11,050 --> 00:06:16,320
through this as most people have used
our car just click basics on doctors who

77
00:06:16,320 --> 00:06:21,650
you can pull from Dr hub which is like
Google Play before doctors as prevalent

78
00:06:21,650 --> 00:06:28,820
container images download this container
you can then run ant after writing it

79
00:06:28,820 --> 00:06:32,030
you can launch a command in the
container like if config clear ip

80
00:06:32,030 --> 00:06:37,090
address verifies different from the
container host itself exit the container

81
00:06:37,090 --> 00:06:45,580
so that this actually starts getting
pretty interesting so if you are looking

82
00:06:45,580 --> 00:06:50,820
at like hypervisors like like vSphere
and things like this it's not a very

83
00:06:50,820 --> 00:06:55,020
open system and they would certainly
claim the AVP eyes all this kind of

84
00:06:55,020 --> 00:07:00,190
thing but it's it's quite different from
Dr where you can download it look at the

85
00:07:00,190 --> 00:07:05,400
source code there's API's and everything
in NY that starts being interesting as a

86
00:07:05,400 --> 00:07:09,190
comparison to something like vSphere is
like what we would think is that in the

87
00:07:09,190 --> 00:07:10,260
future

88
00:07:10,260 --> 00:07:14,630
people are certainly right route kids
back doors things like that against the

89
00:07:14,630 --> 00:07:19,690
doctor sake dpi in the remote API
because you can end up having a full

90
00:07:19,690 --> 00:07:25,099
control over data centers that are based
on da car in for the customers we talked

91
00:07:25,099 --> 00:07:29,030
to this is actually the kind of thing
that's coming soon and what's

92
00:07:29,030 --> 00:07:33,210
interesting is words like if you were to
look at vSphere are the predominant

93
00:07:33,210 --> 00:07:38,690
hypervisor technology in the data center
API's on that are very limited so it is

94
00:07:38,690 --> 00:07:42,780
very unlikely that you would see why
compact or a rootkit show up on

95
00:07:42,780 --> 00:07:47,020
something like VCR or is on da car
that's actually incredibly easy to do

96
00:07:47,020 --> 00:07:52,950
and very likely to happen as doctor
becomes prevalent

97
00:07:52,950 --> 00:07:59,030
so when one of the main technologies at
this point there actually is used by

98
00:07:59,030 --> 00:08:02,479
doctor as I said the fundamental thing
behind

99
00:08:02,480 --> 00:08:07,160
doctors containerization technology is
Linux namespaces how many people in the

100
00:08:07,160 --> 00:08:15,410
room have some sense of how namespaces
work ok so basically you can think of a

101
00:08:15,410 --> 00:08:20,330
namespace as some level of a container
and then the namespaces there's like

102
00:08:20,330 --> 00:08:25,520
process can you can afford to have like
a namespace for processes from mount

103
00:08:25,520 --> 00:08:32,250
points for networks for users of these
kinds of things I think this line mine

104
00:08:32,250 --> 00:08:36,309
even actually like to date it at this
point but like just a week ago or a week

105
00:08:36,309 --> 00:08:41,179
and a half ago doctor did actually
implement support for usernames basis

106
00:08:41,179 --> 00:08:46,550
but I think that's in like the latest
release and I'm not sure if this

107
00:08:46,550 --> 00:08:52,449
actually hit the public tours like one
release out or something like this but

108
00:08:52,450 --> 00:08:58,290
username spaces where you can start
guaranteeing that process I D inside the

109
00:08:58,290 --> 00:09:03,060
container of the process that's running
is different from the doctor diamond

110
00:09:03,060 --> 00:09:11,310
which is actually running as world so it
was kind of like quick State of the

111
00:09:11,310 --> 00:09:18,130
Union on enterprise you say that we
actually see in all of these things you

112
00:09:18,130 --> 00:09:23,080
know on some level you could say I don't
relate to the topic of exploitation but

113
00:09:23,080 --> 00:09:28,010
the reason we think you know it's
largely important is like how you would

114
00:09:28,010 --> 00:09:32,600
exploit doctor and how you like how you
do today how you would in the future

115
00:09:32,600 --> 00:09:37,590
all relates to like how to Linux
containerization technology work how did

116
00:09:37,590 --> 00:09:42,570
we actually get there you know what's
coming who built it would they be held

117
00:09:42,570 --> 00:09:49,350
and then how to enterprises actually
deploy and run doctor 2011 thing that's

118
00:09:49,350 --> 00:09:54,330
kind of interesting certainly we're
seeing this change over time and kind of

119
00:09:54,330 --> 00:10:00,290
ramp up but the backdrop would be if
every enterprise we talked to have any

120
00:10:00,290 --> 00:10:00,949
size

121
00:10:00,950 --> 00:10:06,420
aiming toward virtually a hundred
percent of them already run doctor but

122
00:10:06,420 --> 00:10:10,709
they're a straight thanks to that would
be there typically very small

123
00:10:10,710 --> 00:10:14,830
deployments they're typically not in
production there typically

124
00:10:14,830 --> 00:10:17,970
developer here and there team here and
there

125
00:10:17,970 --> 00:10:22,180
this cutting but what ends up happening
at like you can imagine a large

126
00:10:22,180 --> 00:10:26,969
financial institution a doctor eyes
application they try to push that to

127
00:10:26,970 --> 00:10:31,650
production and then I T security
operations teams you know what the heck

128
00:10:31,650 --> 00:10:37,880
is doctor and so then we had to push
back and then they want to figure out

129
00:10:37,880 --> 00:10:43,160
like is the application safe or not you
know what did you do to improve the

130
00:10:43,160 --> 00:10:46,819
security of it what what have you done
to validate that you not gonna put the

131
00:10:46,820 --> 00:10:50,620
company at risk all these kinds of
things and because typically the

132
00:10:50,620 --> 00:10:54,550
developers using doctor don't have good
answers to those questions

133
00:10:54,550 --> 00:11:00,780
typically it's not reaching production
by everyone lately in the doctor

134
00:11:00,780 --> 00:11:05,160
ecosystem which is tiny companies at
this point of like every operating

135
00:11:05,160 --> 00:11:10,730
system vendor everything they've
allotted vested interest in seeing dr.

136
00:11:10,730 --> 00:11:14,760
reach the data center and reach
production environments and so then

137
00:11:14,760 --> 00:11:18,580
they're putting out all these surveys
like this is Redd had commissioned farce

138
00:11:18,580 --> 00:11:22,690
are basically saying to enterprises wire
not already running Dr production if

139
00:11:22,690 --> 00:11:28,320
you're already running it in different
teams within your company and 53% of

140
00:11:28,320 --> 00:11:35,070
respondents said their Nha Trang and
because of security concerns as from

141
00:11:35,070 --> 00:11:39,480
January this year so this is actually a
more recent survey basically just

142
00:11:39,480 --> 00:11:44,510
reacting the exact same question so it
was class rage kill saying you know why

143
00:11:44,510 --> 00:11:49,730
are not running doctrine production in a
show there was an optic even more people

144
00:11:49,730 --> 00:11:56,980
said the reason was because of security
so we actually did her own survey about

145
00:11:56,980 --> 00:11:57,630
this

146
00:11:57,630 --> 00:11:59,450
asking enterprises

147
00:11:59,450 --> 00:12:02,670
you know why are you not running
document production containers and

148
00:12:02,670 --> 00:12:07,589
production of this kind of thing in
asking one level deeper so not just you

149
00:12:07,590 --> 00:12:10,850
know is security the top concern but
which piece of the security problem

150
00:12:10,850 --> 00:12:16,070
actually concerned about and what we
found was actually the concern was

151
00:12:16,070 --> 00:12:21,290
actually built on herbal teas and
malware being in the container so what's

152
00:12:21,290 --> 00:12:27,699
really interesting about that actually
is the third concern isolation actually

153
00:12:27,700 --> 00:12:33,240
meant only 16 percent of enterprises
were concerned with isolation as a

154
00:12:33,240 --> 00:12:39,170
security pin point with containers and
what's interesting about that is if you

155
00:12:39,170 --> 00:12:45,800
go talk to their containers Asian
companies like red had their spending

156
00:12:45,800 --> 00:12:50,500
virtually all of their time on the
isolation problem but that actually

157
00:12:50,500 --> 00:12:55,190
isn't the top concern of the people who
saved security is the reason they're not

158
00:12:55,190 --> 00:13:00,350
running team concerned they have is
actually about the vulnerabilities in

159
00:13:00,350 --> 00:13:04,770
malware problem which is actually a
problem that's you know if you look at

160
00:13:04,770 --> 00:13:07,199
the virtualization analogy

161
00:13:07,200 --> 00:13:12,760
VMware certainly never addressed I'm
problem doctor rain had chorus these are

162
00:13:12,760 --> 00:13:16,870
these companies are unlikely to address
that problem yet that's actually what's

163
00:13:16,870 --> 00:13:23,660
holding enterprises back from running
containers and production and we've

164
00:13:23,660 --> 00:13:28,689
heard all sorts the kind of funky things
from people talking about containers and

165
00:13:28,690 --> 00:13:32,970
production environments and containers
in the data center are all this kind of

166
00:13:32,970 --> 00:13:39,720
thing like 11 kinda interesting facts so
most people are aware of this but at

167
00:13:39,720 --> 00:13:44,860
Google they claim they're turning onto
billion containers a week obviously

168
00:13:44,860 --> 00:13:47,930
they're trying them off as well

169
00:13:47,930 --> 00:13:52,359
but there are family also what was
happening is unlike a virtual machine

170
00:13:52,360 --> 00:13:56,410
that could have an opt-out I'm of 280
days or something like this

171
00:13:56,410 --> 00:14:03,640
average container up time is about three
days so that impacts explication

172
00:14:03,640 --> 00:14:08,189
security vulnerabilities all this kind
wrist malware how you would write that

173
00:14:08,190 --> 00:14:13,180
stuff Hollywood backdoor it how you
would do data exfiltration because with

174
00:14:13,180 --> 00:14:17,739
a three-day lifetime it's quite
different we we've even talked to some

175
00:14:17,740 --> 00:14:22,950
people who said that they got advice
from a guy named

176
00:14:22,950 --> 00:14:28,060
billion dollar company investing
containerization that said you should

177
00:14:28,060 --> 00:14:34,599
just shut off containers every five
minutes and I'll meet you see for all

178
00:14:34,600 --> 00:14:41,920
sorts of all sorts of crazy stuff up
there so just a bit about like survey of

179
00:14:41,920 --> 00:14:43,920
vulnerabilities in the field

180
00:14:43,920 --> 00:14:48,680
affecting containers

181
00:14:48,680 --> 00:14:53,910
so so some of these are kinda kind of
funny hard times in chief I suppose but

182
00:14:53,910 --> 00:15:02,040
anyone is installed talker this this is
how you install it so you just do

183
00:15:02,040 --> 00:15:07,620
something you pipe between shell and
putting your root password I personally

184
00:15:07,620 --> 00:15:18,709
think that's kinda feel like that that's
from my 1993 in on doctor everything

185
00:15:18,709 --> 00:15:28,589
runs as root that's that's another
awesome one is just quick quick basics

186
00:15:28,589 --> 00:15:33,589
on doctor networking so if you are
inside a container so suppose

187
00:15:33,589 --> 00:15:38,810
NYY some of this is interesting to the
backdrop of this as we hear all the time

188
00:15:38,810 --> 00:15:43,319
stuff like the containers like it

189
00:15:43,320 --> 00:15:47,520
containers compromise the doesn't
actually matter because there's only one

190
00:15:47,520 --> 00:15:48,500
thing in it

191
00:15:48,500 --> 00:15:55,080
died soon anyway there's all sorts of
reasons why that that kind of thinking

192
00:15:55,080 --> 00:15:59,200
is wrong and yet we hear it all the time
so so this would be one quite simple

193
00:15:59,200 --> 00:16:07,730
example if your own container a you can
see all the IP addresses host

194
00:16:07,730 --> 00:16:14,980
information for all the other containers
on the same container host so if you are

195
00:16:14,980 --> 00:16:19,790
thinking about like easy to an EWS the
analogy there would be you turn on a

196
00:16:19,790 --> 00:16:26,670
virtual machine and EMI and Amazon and
you can see all your neighbors currently

197
00:16:26,670 --> 00:16:33,260
in Amazon can do that but that's that's
how doctor works today so if there is a

198
00:16:33,260 --> 00:16:38,550
compromise container it can see the
networking like the IP address

199
00:16:38,550 --> 00:16:45,370
assignment on all the neighbor
containers

200
00:16:45,370 --> 00:16:53,600
so let's get this gets kind of funny too
so how doctor works with namespaces

201
00:16:53,600 --> 00:16:58,730
officially been namespaces keep
everything separate I mean you can think

202
00:16:58,730 --> 00:17:05,089
of that it's like some basic abstraction
in so if you can figure out Ron

203
00:17:05,089 --> 00:17:09,109
which we've certainly seen many people
do with this action warning message on

204
00:17:09,109 --> 00:17:14,329
the doctor website that's you know
buried 15 links down or whatever but

205
00:17:14,329 --> 00:17:18,050
we've certainly seen people in the wild
actually do that s where if you can

206
00:17:18,050 --> 00:17:22,619
figure it wrong and you do what host
only networking suppose there's a

207
00:17:22,619 --> 00:17:27,379
compromised container if you actually
shut down that contain are actually shut

208
00:17:27,380 --> 00:17:32,960
down the host and all the other
containers on your even even doctor

209
00:17:32,960 --> 00:17:47,970
warned you not to do this but we've seen
this in the wild bunch of times

210
00:17:47,970 --> 00:17:53,429
so this this was actually the first
vulnerability that was published we have

211
00:17:53,429 --> 00:17:59,159
actually exploit code and how you break
out of a doctor container so this this

212
00:17:59,159 --> 00:18:05,929
is a fatally attacking isolation behind
doctor so at one point Dr actually had a

213
00:18:05,929 --> 00:18:11,110
black list for colonel capabilities so
if you take a step backward what

214
00:18:11,110 --> 00:18:17,439
containers are actually doing as I like
a virtual machine where all the

215
00:18:17,440 --> 00:18:21,280
operating system images have their own
kernel and then there's a hypervisor

216
00:18:21,280 --> 00:18:25,799
kind of keeping everything separate how
containers work is there are sharing the

217
00:18:25,799 --> 00:18:32,190
comment on the parent container host and
then there's basically I always think of

218
00:18:32,190 --> 00:18:37,059
it as a syscall proxy but that's not
exactly what's happening it's like the

219
00:18:37,059 --> 00:18:42,960
Carlton team and epi interfaces but if
there are effectively proxying all the

220
00:18:42,960 --> 00:18:47,140
stuff back to their carnal in keeping
everything separate in so how doctor

221
00:18:47,140 --> 00:18:53,600
originally implemented that was having a
blacklist on kernel capability is and of

222
00:18:53,600 --> 00:18:57,830
course someone they have missile missed
blacklisting some that are pretty

223
00:18:57,830 --> 00:19:01,549
important and so there's a breakout
attack and all this kind of thing

224
00:19:01,549 --> 00:19:07,830
they've slowed since switched to a white
with models exact inverse Charlie a

225
00:19:07,830 --> 00:19:14,049
smart decision but but what that does is
they have specified which interfaces are

226
00:19:14,049 --> 00:19:20,429
ok to call and then you know if it's not
on that list it's not okay that's so

227
00:19:20,429 --> 00:19:25,289
that limits like the attack surface area
for interface into the kernel on the

228
00:19:25,289 --> 00:19:30,830
container host we just saw a good thing

229
00:19:30,830 --> 00:19:38,500
so this is kind of interesting narrative
was in public exploit code released for

230
00:19:38,500 --> 00:19:43,450
this but I think this is actually wake
if you were to attack the doctor system

231
00:19:43,450 --> 00:19:48,850
this is the most like highest ROI place
to spend your time on is all of these

232
00:19:48,850 --> 00:19:54,279
decompression algorithms because what
ends up happening so there's this guy he

233
00:19:54,279 --> 00:19:59,899
finds a bug has your day and the eggs
each decompression parts are in da car

234
00:19:59,899 --> 00:20:05,330
in because doctors running as root if
you compromise like the doctor daemon is

235
00:20:05,330 --> 00:20:09,389
running as root and everything is all
this team and if you are a compromise

236
00:20:09,389 --> 00:20:13,019
the damn and you know you have read on
the container host you effectively

237
00:20:13,019 --> 00:20:16,600
thereof compromised not only the
container house itself but all the

238
00:20:16,600 --> 00:20:22,730
containers because it just how
namespaces work in so that that actually

239
00:20:22,730 --> 00:20:27,639
was done on agency and I don't know how
many people of how many people are like

240
00:20:27,639 --> 00:20:35,178
looked at a compression algorithms
before most of them are terrible inside

241
00:20:35,179 --> 00:20:43,220
you and are very easy place to do file
format rising as well as like I collect

242
00:20:43,220 --> 00:20:45,910
thousands of tar files

243
00:20:45,910 --> 00:20:51,480
its run it through doctor I don't know
if that's how they finance debug or not

244
00:20:51,480 --> 00:20:56,160
but but that would be the easiest place
to attack the dock Rd man at this point

245
00:20:56,160 --> 00:21:00,000
in in probably will be for the
foreseeable future because they like in

246
00:21:00,000 --> 00:21:03,690
some cases for a while they still do
this before while there are suggestions

247
00:21:03,690 --> 00:21:09,110
going out at our command but I think
they wrote their own like a sexy parts

248
00:21:09,110 --> 00:21:13,169
are in gzip are sorry and I think that
support a few other decompression

249
00:21:13,170 --> 00:21:19,050
algorithms as well and that's because if
you look at the container images they're

250
00:21:19,050 --> 00:21:24,879
basically tar files and directories and
then there's tar files in them but

251
00:21:24,880 --> 00:21:30,520
you're not limited to tar and so some
people are like compressing what say you

252
00:21:30,520 --> 00:21:34,800
know they're rude or parent container
image file in some alternative

253
00:21:34,800 --> 00:21:40,850
compression format or possibly the
layers on the inside in some cases it's

254
00:21:40,850 --> 00:21:49,189
compressed multiple times and so without
a high profile attack vector is this is

255
00:21:49,190 --> 00:21:55,570
an interesting one relates to a few
other things but you know the shower

256
00:21:55,570 --> 00:22:01,200
sharp you know some people think it's
way over hyped totally agree on

257
00:22:01,200 --> 00:22:05,780
everything but one thing is kinda
interesting about that bug in particular

258
00:22:05,780 --> 00:22:10,790
is if you look in da car which is where
the majority of people are getting

259
00:22:10,790 --> 00:22:13,030
pre-built containers

260
00:22:13,030 --> 00:22:21,230
almost all of them have bashing it away
or 50% in and for would then posit that

261
00:22:21,230 --> 00:22:28,840
way over 90% of the 50% have older
versions abash certainly we see dr.

262
00:22:28,840 --> 00:22:33,000
containers from Dr that are vulnerable
to the shell shocked by horny mine all

263
00:22:33,000 --> 00:22:33,470
the time

264
00:22:33,470 --> 00:22:39,549
I'm in an exploding shell shock on on a
doctor container will be no different

265
00:22:39,549 --> 00:22:45,150
than exploding in you know just what's
interesting though is that in the case

266
00:22:45,150 --> 00:22:49,470
of dr. specifically most developers are
just getting free milk containers from

267
00:22:49,470 --> 00:22:52,960
Dr hob and then those prevailed
containers typically have honorable

268
00:22:52,960 --> 00:23:01,210
versions about this is actually the
first I thought this is kinda

269
00:23:01,210 --> 00:23:07,230
interesting you know a lot of people ask
you have there been breaches of dr.

270
00:23:07,230 --> 00:23:13,090
environments all of this kind of thing
you know why would you know we're all

271
00:23:13,090 --> 00:23:17,408
aware that not every not every day you
hear about breaches and that even though

272
00:23:17,409 --> 00:23:21,370
they happen every day and then further
or not you wouldn't always happen about

273
00:23:21,370 --> 00:23:25,709
like what was breech where was it in the
data center what software wasn't

274
00:23:25,710 --> 00:23:30,440
supporting you know what was a not
supporting but this is the first one we

275
00:23:30,440 --> 00:23:38,230
could concretely fine and that was a
doctor beast breach sousa's like band

276
00:23:38,230 --> 00:23:44,090
hall who are set off the uproar UK
company and turned on a doctor container

277
00:23:44,090 --> 00:23:49,570
was running elasticsearch in the doc Dr
contain her I'm not sure how much time

278
00:23:49,570 --> 00:23:57,799
elapsed but next time he looked at the
Dr container as part of a botnet and and

279
00:23:57,799 --> 00:24:03,190
their Metasploit plugins available for
that and so for that for that reason you

280
00:24:03,190 --> 00:24:10,400
know I know how likely to happen again

281
00:24:10,400 --> 00:24:17,200
at five check what we do we spend most
of our time on this problem of tearing

282
00:24:17,200 --> 00:24:26,860
apart containers and just a bit of an
analogy on like why we even do that so

283
00:24:26,860 --> 00:24:34,689
you dr. hob can get launched until 2014
yeah pretty recent years ago Google Play

284
00:24:34,690 --> 00:24:35,830
long time ago

285
00:24:35,830 --> 00:24:42,620
2018 if you look at Google Play is a
modern analogy or metaphor to doctor how

286
00:24:42,620 --> 00:24:48,840
Google Play for starters the Android
Market there is no security inspection

287
00:24:48,840 --> 00:24:50,389
of anything uploaded to it

288
00:24:50,390 --> 00:24:57,500
think about that now it seems crazy here
today who was performing static and

289
00:24:57,500 --> 00:25:01,630
dynamic analysis of everything out for
it and you could question whether they

290
00:25:01,630 --> 00:25:06,560
find anything whether you know total
waste their time all these kinds of

291
00:25:06,560 --> 00:25:11,830
things but they do it and they do it
because they were malware problem and

292
00:25:11,830 --> 00:25:18,760
they're likely to have one for the
foreseeable future and I would posit

293
00:25:18,760 --> 00:25:23,560
that the reason they have our problems
basically because of platform popularity

294
00:25:23,560 --> 00:25:30,419
and then of course it's like especially
over the distribution of users will be

295
00:25:30,420 --> 00:25:37,680
like high-value data all these kinds of
things but ultimately the 22 systems

296
00:25:37,680 --> 00:25:39,910
Google Play Dahab

297
00:25:39,910 --> 00:25:46,950
in my mind is like a highly analogous
and very similar to play out and

298
00:25:46,950 --> 00:25:54,400
same kind of pattern

299
00:25:54,400 --> 00:26:04,020
jumping into a couple of the differences
in the case of interest now where you

300
00:26:04,020 --> 00:26:10,350
know it's it's all apks all custom the
Android platform in the case of dr.

301
00:26:10,350 --> 00:26:15,230
malware would actually be else where and
for a long time

302
00:26:15,230 --> 00:26:21,880
very little al not wear and I would say
that's in my mind that slowly changing

303
00:26:21,880 --> 00:26:28,290
you know you've been yesterday there was
talk by I saw that are the links on our

304
00:26:28,290 --> 00:26:34,629
own sandbox talk you know still in the
grand scheme of things small money

305
00:26:34,630 --> 00:26:40,990
elsewhere in this particular case was
the first I heard of where else now are

306
00:26:40,990 --> 00:26:43,430
actually turned into a botnet

307
00:26:43,430 --> 00:26:49,920
security cameras that were running Linux
admin not sure how the memoirs a short

308
00:26:49,920 --> 00:26:55,680
up on them but it was actually out of
nowhere forearm and on the last letter

309
00:26:55,680 --> 00:26:59,940
she showed up on these security cameras
turned into a bond that the world

310
00:26:59,940 --> 00:27:08,770
mountain all this kind of thing I would
say out now are certainly getting more

311
00:27:08,770 --> 00:27:14,629
common

312
00:27:14,630 --> 00:27:19,160
and then this is just a bit on doctor
haha band-like why we think this relates

313
00:27:19,160 --> 00:27:24,980
to the Google Play issue so doctor
overall something like fifteen thousand

314
00:27:24,980 --> 00:27:30,940
pre-built containers you can just go get
a container for 124 my see all you know

315
00:27:30,940 --> 00:27:36,310
whatever you can possibly think of that
runs on Linux I think one built this

316
00:27:36,310 --> 00:27:40,850
slide out had five hundred million
downloads or something like that I think

317
00:27:40,850 --> 00:27:45,480
they're already over a billion they
don't do any security inspection of any

318
00:27:45,480 --> 00:27:46,330
kind

319
00:27:46,330 --> 00:27:51,110
don't check from our don't check for
vulnerabilities don't take anything and

320
00:27:51,110 --> 00:27:55,709
someone did a random sampling of
containers long Dr hub I think small

321
00:27:55,710 --> 00:28:00,820
consulting company be found that over
30% of containers had vulnerabilities

322
00:28:00,820 --> 00:28:08,510
and find out what we did was we analyzed
the official images so this is a little

323
00:28:08,510 --> 00:28:11,910
bit different so there's fifteen
thousand of these plots of these

324
00:28:11,910 --> 00:28:16,900
pre-built contain ours possibly numbers
much bigger but whatever some some

325
00:28:16,900 --> 00:28:23,410
number like 15000 there's also these
official images so what that means is on

326
00:28:23,410 --> 00:28:28,640
doctor hob you could get my sequel built
by some random person you could build my

327
00:28:28,640 --> 00:28:35,420
seat will post it to dr. hob but if
there is an official my sea cual Dr file

328
00:28:35,420 --> 00:28:39,330
that's building an official my seat will
contain your image and then those have

329
00:28:39,330 --> 00:28:43,679
tags by version as to what we did was
just check the latest version of the

330
00:28:43,680 --> 00:28:49,520
official images that have some blue
ribbon seal of approval approval from Dr

331
00:28:49,520 --> 00:28:54,490
you much like the overall population
they don't do security inspection of the

332
00:28:54,490 --> 00:28:59,140
official images so actually a facial
images is based on some level of

333
00:28:59,140 --> 00:29:05,450
reputation of the developer deemed by
some employee of dr Reilly arbitrary

334
00:29:05,450 --> 00:29:13,290
will be found on checking those official
images over 90% of them now the official

335
00:29:13,290 --> 00:29:18,230
images have download counting like the
hundreds of like 10 million downloads or

336
00:29:18,230 --> 00:29:21,810
something like that because you can
imagine someone getting the latest

337
00:29:21,810 --> 00:29:32,230
version of the might see his point at
10:01 ended up happening is if you do

338
00:29:32,230 --> 00:29:38,170
that then downloading image makers have
rebuilt with the abilities and then

339
00:29:38,170 --> 00:29:47,560
we'll be looking to watch course so what
ultimately happened here they like

340
00:29:47,560 --> 00:30:01,700
filled it with an operating system or
whatever and they're not going to want

341
00:30:01,700 --> 00:30:07,160
something done that happening is a large
financial institutions

342
00:30:07,160 --> 00:30:15,230
that you know thanks I think there is a
problem

343
00:30:15,230 --> 00:32:33,120
problems I just

344
00:32:33,120 --> 00:32:58,809
that's interesting so please hurry up
and get these worries doctor and so in

345
00:32:58,809 --> 00:33:34,020
11 cases it's a problem but there's also

346
00:33:34,020 --> 00:34:03,810
in this case my seat will contain I just
checked yeah it's probably right after

347
00:34:03,810 --> 00:34:09,699
number 56 concerns me like duplicate da
da by but yeah just just the latest

348
00:34:09,699 --> 00:34:14,069
version of my sequel containers yes
tradeoff Dr Habib something like thirty

349
00:34:14,070 --> 00:34:21,929
incidence of the impact the enterprise
of course the impacts of course as you

350
00:34:21,929 --> 00:34:26,168
know is I'm safe containers in the data
center you put them on public IP

351
00:34:26,168 --> 00:34:27,330
addresses

352
00:34:27,330 --> 00:34:32,590
Chancellor compromise fairly high now
granted in the case of something like

353
00:34:32,590 --> 00:34:35,669
Bosch you know that like the
shell-shocked bug you know you have to

354
00:34:35,668 --> 00:34:39,960
have some CGI scripts that somehow
passing stopped like the bash

355
00:34:39,960 --> 00:34:44,380
environment variables and like all these
set of circumstances and potentially in

356
00:34:44,380 --> 00:34:50,000
containers you would have available but
dead code or vulnerable bytecode this

357
00:34:50,000 --> 00:34:54,500
like not found any port not network
accessible you know all these set of

358
00:34:54,500 --> 00:34:59,140
circumstances like to do you risk the
problem but generally speaking if you

359
00:34:59,140 --> 00:35:03,670
are a large enterprises you wanna be
running liable code or or turning on

360
00:35:03,670 --> 00:35:07,590
containers are scaling up applications
that have honorable coating them you

361
00:35:07,590 --> 00:35:16,359
know certainly I think you would end

362
00:35:16,359 --> 00:35:23,390
and then comparing this a bit the Google
Play a doctor situation I think what

363
00:35:23,390 --> 00:35:28,109
kinda interesting in a different way
about this is the Google Play problem is

364
00:35:28,109 --> 00:35:32,598
largely a malware problem at this point
certainly Google's not trying to go down

365
00:35:32,599 --> 00:35:38,690
the path of inspecting for like the
Honorable code in some like mobile app

366
00:35:38,690 --> 00:35:42,390
have the chance of that's going to be
exploited or that that day think about

367
00:35:42,390 --> 00:35:48,980
is their problem is significantly law so
their problems affecting malware problem

368
00:35:48,980 --> 00:35:55,230
in any case of dr. hub today I would say
as I should be opposite of that so we

369
00:35:55,230 --> 00:36:01,690
are checking Dr hub for malware or not
signing any yet you know that's good I

370
00:36:01,690 --> 00:36:07,049
think that's temporary though since
since they're not checking and they have

371
00:36:07,049 --> 00:36:11,989
a pretty loose policy on who can post
the doctor hob the chance there's no

372
00:36:11,989 --> 00:36:16,799
malware Dr hub for the foreseeable
future is incredibly low but we're not

373
00:36:16,799 --> 00:36:20,829
finding that works out and talk about
what we are finding is like over 90% of

374
00:36:20,829 --> 00:36:26,849
the doc Dr container images that come
pre built and ready to go do have

375
00:36:26,849 --> 00:36:31,710
security vulnerabilities then they
typically have a lot so we're seeing an

376
00:36:31,710 --> 00:36:37,420
average of like greater than 20
vulnerabilities per container now would

377
00:36:37,420 --> 00:36:40,950
probably cut that way off and say most
of those warm bodies are now actually

378
00:36:40,950 --> 00:36:46,788
exploitable but a whole bunch are and
examples where they would be would be

379
00:36:46,789 --> 00:36:52,069
like web here contain ours typical
including all versions of openness a

380
00:36:52,069 --> 00:36:58,450
cell like heart bleed all the time with
the shell shocked all the time so I

381
00:36:58,450 --> 00:37:02,839
think today what's interesting is Google
Play similar issue in our problem Dr

382
00:37:02,839 --> 00:37:04,900
House of liability problem

383
00:37:04,900 --> 00:37:10,830
ultimately they both have both but it's
like a seesaw waited in two different

384
00:37:10,830 --> 00:37:21,630
directions and that's pretty much all I
had a presentation was you know would

385
00:37:21,630 --> 00:37:27,730
love to have two questions what about
black has a sound bite you know one

386
00:37:27,730 --> 00:37:30,990
thing we things kinda interesting is
that you know when we talk to

387
00:37:30,990 --> 00:37:34,609
enterprises would actually hold them
back from running continuum production

388
00:37:34,610 --> 00:37:38,820
of our abilities and malware yet all the
companies we talked to on a container

389
00:37:38,820 --> 00:37:43,710
side seemed totally disconnected from
this problem and spend all their time on

390
00:37:43,710 --> 00:37:49,090
the security isolation problem which in
frankly if isolation isn't provided by

391
00:37:49,090 --> 00:37:54,720
containers or isn't solved there's no
reason to run containers so it doesn't

392
00:37:54,720 --> 00:37:58,919
make sense that they spend their time on
this but for the large enterprises we

393
00:37:58,920 --> 00:38:03,510
talked to who wanna run like doctor or
some competing containerization

394
00:38:03,510 --> 00:38:07,930
technology in the data center are many
data centers

395
00:38:07,930 --> 00:38:14,379
isolation problems not the top problem
in their mind and another thing is kinda

396
00:38:14,380 --> 00:38:19,530
interesting is the flip side of this as
we hear all the time like because doctor

397
00:38:19,530 --> 00:38:28,740
provides isolation you know by now I
think you know a lot of interesting

398
00:38:28,740 --> 00:38:33,259
things play out in reality like one is a
view of a compromise Dr container that

399
00:38:33,260 --> 00:38:37,780
compromise container has like some
visibility into what other containers

400
00:38:37,780 --> 00:38:42,310
are present on that same container hosts
like just whether that's like networking

401
00:38:42,310 --> 00:38:45,900
and host information and then if you
have a web here

402
00:38:45,900 --> 00:38:50,780
container that's like processing credit
cards on that web tier containers

403
00:38:50,780 --> 00:38:57,450
compromised by shell shocker who knows
why are you the person was compromised I

404
00:38:57,450 --> 00:39:02,100
container now has all the credit card
data that's passing through that even if

405
00:39:02,100 --> 00:39:07,390
that's only happening for some of their
moral container for three days

406
00:39:07,390 --> 00:39:11,160
or even five minutes because someone
keeps shutting off and turning down

407
00:39:11,160 --> 00:39:17,420
containers obviously you know cult-like
malicious client code can reconnect

408
00:39:17,420 --> 00:39:25,089
every 10 milliseconds or whatever that
means to end so any important date of

409
00:39:25,089 --> 00:39:28,690
its going through that container if the
container compromise all of the data was

410
00:39:28,690 --> 00:39:34,260
compromised and then specifically their
downline pre-built containers from Dr

411
00:39:34,260 --> 00:39:38,930
hub which literally every company we've
ever talked to when they get containers

412
00:39:38,930 --> 00:39:44,629
they're getting them from dr. no granted
to a strike next to that would be as

413
00:39:44,630 --> 00:39:48,010
they start realizing that all of those
containers are vulnerable they start

414
00:39:48,010 --> 00:39:52,690
rebuilding all of those containers from
their own code bases and start going

415
00:39:52,690 --> 00:39:57,960
inspection on in all these kinds of
things by bed like literally what we've

416
00:39:57,960 --> 00:40:02,990
heard without naming names would be like
if doctors talking to a large financial

417
00:40:02,990 --> 00:40:06,558
institution doctor would tell them you
should just go get creamed all

418
00:40:06,559 --> 00:40:11,500
containers from Dr it's faster it's
cheap are that's what your developers

419
00:40:11,500 --> 00:40:17,420
are doing anyway but it doesn't mean
it's actually safe to do and from what

420
00:40:17,420 --> 00:40:21,940
we see is like over 90% of containers
that met anyone downloads or that are

421
00:40:21,940 --> 00:40:32,339
employed in actually come pre built out
of the box with your abilities that's I

422
00:40:32,339 --> 00:40:43,480
had any questions it's a really strong
in the easiest way to get that list at

423
00:40:43,480 --> 00:40:48,089
the store in Mumbai file size so when
something is kind of funny

424
00:40:48,089 --> 00:40:54,109
most of the doctor containers are
greater than I'd say like 250 megabytes

425
00:40:54,109 --> 00:41:01,259
and so imagine like 250 megabytes of I
clinics wineries and shared libraries

426
00:41:01,259 --> 00:41:07,269
the chance to their liability in there
is it's like 99% there is a very tiny

427
00:41:07,269 --> 00:41:12,828
number of dr. containers on doctor hope
they have very effectively true micro

428
00:41:12,829 --> 00:41:16,769
service containers that have like you
know one binary of its statically

429
00:41:16,769 --> 00:41:22,049
compiled against short number of
libraries into those containers we

430
00:41:22,049 --> 00:41:27,730
pretty much never find vulnerabilities
in so I would say that cheap and easy

431
00:41:27,730 --> 00:41:32,849
way to get that would be sorted by file
size

432
00:41:32,849 --> 00:41:36,869
yeah

433
00:41:36,869 --> 00:41:39,980
yeah

434
00:41:39,980 --> 00:42:32,780
great

435
00:42:32,780 --> 00:43:27,450
right

436
00:43:27,450 --> 00:43:43,330
i truly believed responsible for
security in either case I would just say

437
00:43:43,330 --> 00:43:49,330
that if you look at Google Play just
take that analogy to start with you

438
00:43:49,330 --> 00:43:55,350
would strongly prefer to get non
maliciously four outs as a user as a

439
00:43:55,350 --> 00:44:01,600
company you would prefer that and so
similarly Google prefer to not being the

440
00:44:01,600 --> 00:44:05,160
new ores about malware showing up on
Google Play Now millions of people

441
00:44:05,160 --> 00:44:10,390
download in so so that there's one thing
I'd say I want it I wouldn't call them

442
00:44:10,390 --> 00:44:14,020
responsible I would just say everyone on
that side of the equation has a vested

443
00:44:14,020 --> 00:44:19,370
interest in their not being security
problems on Google Play Now its jumping

444
00:44:19,370 --> 00:44:24,560
over to doctor and using that as like a
similar story doctor has a vested

445
00:44:24,560 --> 00:44:31,799
interest in caen enterprises to say
enterprises developers users adopt a dog

446
00:44:31,800 --> 00:44:38,220
or in the one way the again adoption is
by having doctor ha been having these

447
00:44:38,220 --> 00:44:43,049
pre-built containers so late like if you
look at like oral as Moroccan like

448
00:44:43,050 --> 00:44:47,420
complaining containerization technology
I I would posit and one of the reasons

449
00:44:47,420 --> 00:44:51,680
one of the mean ones those have not
taken off ask is because they have no I

450
00:44:51,680 --> 00:44:56,549
now know nothing akin to talk doctor
hope you like dr. how you can get going

451
00:44:56,550 --> 00:45:01,490
much faster because everything is just
rebuilt and sitting there and ready and

452
00:45:01,490 --> 00:45:07,799
in so they can get a doctrine going up
much faster if people use doctor in in

453
00:45:07,800 --> 00:45:13,310
so I wouldn't say they're responsible
for security problems I i'm sure they're

454
00:45:13,310 --> 00:45:16,340
not even spending time on that like
vulnerability inspection or malware

455
00:45:16,340 --> 00:45:22,380
inspection of dr. hob but I would say
that if if their target customers

456
00:45:22,380 --> 00:45:29,420
believed that doctor how was unsafe to
Euler's then they wouldn't use it and

457
00:45:29,420 --> 00:45:35,110
that Wade or or they would neither
wouldn't use it or they would change how

458
00:45:35,110 --> 00:45:35,700
they use

459
00:45:35,700 --> 00:45:41,000
it in either case that's not necessarily
good for dr. meet me like if they don't

460
00:45:41,000 --> 00:45:44,609
use its not good because the whole
reason doctor me too was to speed up

461
00:45:44,609 --> 00:45:49,359
adoption in every change how they use it
maybe like they had like a 10 step

462
00:45:49,359 --> 00:45:56,609
process to that like when you saw the
cleaning up the container you know i

463
00:45:56,609 --> 00:46:01,089
think thats like the State of the Union
like they have to do that because of the

464
00:46:01,089 --> 00:46:06,430
problems with the prevailed containers
by you know certainly what let's say the

465
00:46:06,430 --> 00:46:12,310
containers were all safe were all clean
you know a lot more enterprises would be

466
00:46:12,310 --> 00:46:16,900
using them in it would be faster for
them and stuff like this so I don't see

467
00:46:16,900 --> 00:46:20,650
it as like they're responsible either
doctor or Google I would just say there

468
00:46:20,650 --> 00:46:26,300
they be enterprise the developer you
know we all have the same vested

469
00:46:26,300 --> 00:46:38,880
interest that the stuff week the code we
get a safe

470
00:46:38,880 --> 00:46:46,279
frankly I'm not someone recently asked
me at a different conversation about

471
00:46:46,279 --> 00:46:51,269
analysis of OpenStack images and this
kind of thing I'm not not aware of any

472
00:46:51,269 --> 00:47:38,669
public analysis of that either yeah

473
00:47:38,670 --> 00:47:56,150
that's right right yeah yeah so that's a
good point in me up to any of the images

474
00:47:56,150 --> 00:48:01,090
so in the case of a very typically it
wouldn't surprise me if I like I think

475
00:48:01,090 --> 00:48:05,440
it's at least a very common use case
that as you get a image first thing you

476
00:48:05,440 --> 00:48:11,200
do when you run it is updated I have
seen a lot of people who are downloading

477
00:48:11,200 --> 00:48:16,750
stuff off doctor hob in the not changing
it not inspecting it not editing it not

478
00:48:16,750 --> 00:48:20,540
updating or they're waiting for the
update based on like a doctor file

479
00:48:20,540 --> 00:48:27,040
update with which doesn't necessarily
come so often and because it's a layered

480
00:48:27,040 --> 00:48:31,110
file system they could be using like a
new doctor file but is still using like

481
00:48:31,110 --> 00:48:36,440
an old Ubuntu later in in then that
oddly are still has marble code in in in

482
00:48:36,440 --> 00:49:00,339
in stuff is still linked against it

483
00:49:00,339 --> 00:49:05,569
questions

