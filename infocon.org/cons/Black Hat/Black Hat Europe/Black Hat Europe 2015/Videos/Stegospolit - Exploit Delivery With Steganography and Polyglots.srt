1
00:00:00,000 --> 00:00:04,770
so I returned to my very best to keep
you awake through the next hour

2
00:00:04,770 --> 00:00:09,989
welcome to Black Eyed welcome to stay
afloat my name is so militia I will be

3
00:00:09,990 --> 00:00:15,170
showing you a few tricks that I put
together of my own before that a couple

4
00:00:15,170 --> 00:00:20,189
of things you must be wondering what the
hell is a staggering on the screen it is

5
00:00:20,189 --> 00:00:26,609
going to be a little bit off a bag don't
do it it is for us this is the festival

6
00:00:26,609 --> 00:00:31,849
of Diwali yesterday was doing all of
India celebrated it today's good at ANU

7
00:00:31,849 --> 00:00:37,020
you're so shout out to all my Indian
friends wish you Happy Diwali and a

8
00:00:37,020 --> 00:00:41,579
prosperous New Year wish you all a Happy
Diwali one of the traditions on the only

9
00:00:41,579 --> 00:00:47,940
answer firecrackers in all we make
paintings using send colored say so this

10
00:00:47,940 --> 00:00:53,800
is a colored sand painting that me and
my family did a few years ago because my

11
00:00:53,800 --> 00:00:58,030
talk is about pictures and colorful
pictures I said why not let's presented

12
00:00:58,030 --> 00:01:03,899
on there early and this year this is the
wrong goalie the sand painting that we

13
00:01:03,899 --> 00:01:09,540
did because I was presenting in Holland
and as a tribute to MCS showed this is

14
00:01:09,540 --> 00:01:10,470
taking

15
00:01:10,470 --> 00:01:15,320
elephants and this is sitting in the
entrance of our house like this to greet

16
00:01:15,320 --> 00:01:21,699
everyone it was a mathematical nightmare
and artistic make murder pull off but we

17
00:01:21,700 --> 00:01:23,479
did it so that's it

18
00:01:23,479 --> 00:01:29,500
happy to welcome everyone my name is so
militia had an influence a for a very

19
00:01:29,500 --> 00:01:34,869
long time to give you an example I was
here for the first time in 2001 Grand

20
00:01:34,869 --> 00:01:39,070
hotel-casino policy with a few good
friends like drifter and Jeff moscow a

21
00:01:39,070 --> 00:01:43,000
lot of others who we used to hang out
and party and occasionally get up on

22
00:01:43,000 --> 00:01:47,860
stage and see a few things I don't have
much research their new these days I

23
00:01:47,860 --> 00:01:52,299
just train and teach people how to break
browsers but there are times when I put

24
00:01:52,299 --> 00:01:56,000
together a few things over the past
years and that's what led me to stay

25
00:01:56,000 --> 00:02:02,369
with Floyd I first talked about stable
slide in me in Amsterdam as well and

26
00:02:02,369 --> 00:02:06,380
that lead to a lot of controversy lot of
people started seeing a lot of different

27
00:02:06,380 --> 00:02:11,690
things and then I told them that ok
unfortunately nobody can be told

28
00:02:11,690 --> 00:02:16,800
stable spot is you want to see it for
yourself and don't have the Morpheus

29
00:02:16,800 --> 00:02:21,210
laid over here but it has been called a
pixel violence that has been called

30
00:02:21,210 --> 00:02:27,150
pictures I can hack your computer let me
set the context rate what it is let me

31
00:02:27,150 --> 00:02:33,130
show you what the tools do and what the
technique as I want to kind of give you

32
00:02:33,130 --> 00:02:41,730
an agenda for I'm gonna talk about we're
gonna see new techniques on exploit

33
00:02:41,730 --> 00:02:47,760
delivery we are not talking about zero d
this is not a new browser exploit the

34
00:02:47,760 --> 00:02:53,000
cities are not bugs in image encoders
are not bugs in JPEG labor Iza PNG

35
00:02:53,000 --> 00:03:00,350
libraries this is just a way of
delivering exploits with stale you can

36
00:03:00,350 --> 00:03:06,820
deliver an entire browser exploit
encoded as mixes in a popular image

37
00:03:06,820 --> 00:03:11,549
formats popular choice I've been working
on this for four years

38
00:03:11,550 --> 00:03:15,970
my first experiments have been with Jeff
and biamby and last year ahead a few

39
00:03:15,970 --> 00:03:21,410
breakthroughs with drippings especially
overcoming loss and calling and PNG is

40
00:03:21,410 --> 00:03:26,170
all this was done sitting at the
hackerspace in Luxembourg last year on

41
00:03:26,170 --> 00:03:30,399
Diwali day because I could not trials
like some flight block inside two extra

42
00:03:30,400 --> 00:03:35,330
days in Luxembourg grown-ups table
Stewart ok so what is stable split

43
00:03:35,330 --> 00:03:40,640
single slide is not a zero-day attack
with her cute local although I have a

44
00:03:40,640 --> 00:03:45,579
cute logo for it it is not exploit code
hidden in eggs if it is not trusted

45
00:03:45,580 --> 00:03:50,670
scripting we are exempt not PHP shell
applauds there exists for beer and

46
00:03:50,670 --> 00:03:55,809
cheese it is definitely not a new
cross-site scripting Victor what it is

47
00:03:55,810 --> 00:04:02,530
is a browser exploits delivered as
pictures the takeaway from this

48
00:04:02,530 --> 00:04:09,840
discussion is I want to show you the
next wave of exploit delivery coming up

49
00:04:09,840 --> 00:04:15,690
I'm talking about staples played in
public I'm not the only guy who has

50
00:04:15,690 --> 00:04:18,779
probably put all this after several
others who may have pulled this off

51
00:04:18,779 --> 00:04:22,690
except for the fact that they're not
talking one day we're gonna see these

52
00:04:22,690 --> 00:04:24,730
attacks in the white

53
00:04:24,730 --> 00:04:29,510
the problem with these attacks is they
just get mistaken for being plain

54
00:04:29,510 --> 00:04:35,420
innocent pictures you never put a second
tort words pictures being malicious they

55
00:04:35,420 --> 00:04:40,740
will escape under the radar undetected
until they go to their destination and

56
00:04:40,740 --> 00:04:44,920
then they own you so the purpose of my
top is to make you aware of this

57
00:04:44,920 --> 00:04:49,740
technique also to raise some questions
ok you know what are we gonna do about

58
00:04:49,740 --> 00:04:54,320
this water the next step of defense is
coming in but first let's see the

59
00:04:54,320 --> 00:04:59,719
technique so legacy a good exploit is
one that is delivered instead what does

60
00:04:59,720 --> 00:05:05,480
it take to deliver an exploit and stale
to hear the few assumptions about

61
00:05:05,480 --> 00:05:14,260
staples flight first we only want image
graphic image data exploits will not

62
00:05:14,260 --> 00:05:16,420
travel by themselves

63
00:05:16,420 --> 00:05:22,150
the only things I wanna see on the wire
and this valued images if you run tools

64
00:05:22,150 --> 00:05:26,030
and then they will tell you yes this is
a valid image or image data will be

65
00:05:26,030 --> 00:05:32,909
perfectly intact the browser exploit
call will be hidden and coded in the

66
00:05:32,910 --> 00:05:37,860
pictures of the image this is where the
steganographic when you include

67
00:05:37,860 --> 00:05:44,420
something you gotta decoded so we have
to have a decoder written in JavaScript

68
00:05:44,420 --> 00:05:49,690
so that it can be called the pictures
back but the decoder is also embedded in

69
00:05:49,690 --> 00:05:53,820
the same image so now your container
contains two things

70
00:05:53,820 --> 00:05:58,780
image + decoder as a valid image and
this is where we goin on the concept of

71
00:05:58,780 --> 00:06:05,150
polly's lots then when the images
delivered to the browser it will be

72
00:06:05,150 --> 00:06:11,260
triggered automatically upon loading all
with just one image so this is the

73
00:06:11,260 --> 00:06:16,490
background of staples played there to
threaten simple HTML and Javascript in

74
00:06:16,490 --> 00:06:21,910
little bit of people I will show you the
tools with a demo so let's escape to the

75
00:06:21,910 --> 00:06:24,710
basic concepts were set up about two
things

76
00:06:24,710 --> 00:06:31,020
cigarette which is the art of camouflage
you hide something so cleverly that you

77
00:06:31,020 --> 00:06:36,979
don't notice it and then we talk about
poly clots again a tribute to my

78
00:06:36,980 --> 00:06:38,150
favorite artists

79
00:06:38,150 --> 00:06:44,320
who are absolutely adored what is a
polyglot it is two or more data formats

80
00:06:44,320 --> 00:06:52,710
in a single container that coexist
without breaking each other syntex know

81
00:06:52,710 --> 00:06:58,359
how do we do this together so far
whenever you had an exploit especially a

82
00:06:58,360 --> 00:07:03,500
drive-by browser exploit it comes heavy
of you skated with JavaScript in this

83
00:07:03,500 --> 00:07:08,260
re-direct and all that stuff eventually
what happens is you lawyer URL in your

84
00:07:08,260 --> 00:07:14,150
browser redirects happen obfuscated
JavaScript its landed in your browser

85
00:07:14,150 --> 00:07:19,039
executives use after free or whatever it
is that meets the payload and then your

86
00:07:19,040 --> 00:07:35,370
own let us take the simple concept and
yeah works so we have exploit and will

87
00:07:35,370 --> 00:07:39,880
take two case studies one with and I use
after free and the other time permitting

88
00:07:39,880 --> 00:07:45,110
with a Firefox user for free and will
demonstrate this on JPEG and PNG so give

89
00:07:45,110 --> 00:07:49,360
you an idea of you know this is possible
with different images as well since you

90
00:07:49,360 --> 00:07:53,700
know sending the exploit code directly
to the browser we don't take an image

91
00:07:53,700 --> 00:08:02,270
any image then we are in court all the
pixels and get a encoded image with the

92
00:08:02,270 --> 00:08:06,560
exploit code embedded in it it's already
done that you can't see the see the

93
00:08:06,560 --> 00:08:14,930
Pixie's then we gotta take the decoder
script and packet within the image

94
00:08:14,930 --> 00:08:23,500
itself turning the image into a polyglot
this technique is called images gave a

95
00:08:23,500 --> 00:08:29,110
deck name because it is image +
JavaScript and his tenure delivered thus

96
00:08:29,110 --> 00:08:33,409
polyglot to the browser thus polyglot
will not be detected

97
00:08:33,409 --> 00:08:40,179
have done some tests to prove that right
so quick introduction to the Tues for

98
00:08:40,179 --> 00:08:46,829
doing this we have the stables lloyd
Doggett which is distributed freely I'll

99
00:08:46,830 --> 00:08:50,500
tell you where to get it from so we have
this tangled

100
00:08:50,500 --> 00:08:56,010
the state is very rudimentary in fact
it's a joke it's it's not sophisticated

101
00:08:56,010 --> 00:09:01,800
at all and not a steganography guy I
just figured out how to hide images

102
00:09:01,800 --> 00:09:06,020
without them being seen part of the
reason I like doing this is because I'm

103
00:09:06,020 --> 00:09:10,470
also a photographer and i love studying
chippings very closely and if I kinda

104
00:09:10,470 --> 00:09:15,550
take the operations that's good enough
for me so this goes all written in HTML

105
00:09:15,550 --> 00:09:21,099
for encoding the pictures then there's
polyglot tooth for combining the

106
00:09:21,100 --> 00:09:25,940
decoders within the encoded image and
then of course I have some sample

107
00:09:25,940 --> 00:09:35,480
exploits to do the demos I'm gonna do a
CBE 2014 0282 demo with sales ploy right

108
00:09:35,480 --> 00:09:41,950
so let's get to the nitty gritty of
things and show you how to pack an

109
00:09:41,950 --> 00:09:47,260
extraordinary image and then make it
into a polyglot and deliver it and do

110
00:09:47,260 --> 00:09:53,819
the demo before packing the excluding
the image I'll also show you how an

111
00:09:53,820 --> 00:10:20,880
image really works so let's first check
out images work and how it's done so

112
00:10:20,880 --> 00:10:39,590
so as it is nothing but any value or 24
bit value which represents either

113
00:10:39,590 --> 00:10:45,630
grayscale or RGB color and these are
packed sequentially in a matrix to give

114
00:10:45,630 --> 00:10:51,450
you an image what we're gonna do is
really going to take every alternate

115
00:10:51,450 --> 00:10:59,470
picture every third pic salary 46 and
incurred a bit on it at the least

116
00:10:59,470 --> 00:11:04,600
significant liver or second or third
layer and I'll show you how this whole

117
00:11:04,600 --> 00:11:10,360
game works how to think of images in
layers so effectively what we've got is

118
00:11:10,360 --> 00:11:18,770
preparing an image you take an ASCII
stream turn it into a bit stream for

119
00:11:18,770 --> 00:11:26,079
every bit you apply them on texts just
change the value little bit you won't

120
00:11:26,080 --> 00:11:30,500
notice it of course you have exaggerated
a little bit might once have packed it

121
00:11:30,500 --> 00:11:36,480
really finally there is no way to tell
or spin back over sure so what we gonna

122
00:11:36,480 --> 00:11:45,330
do is take this image and we will take
this exploit this is Zev 2014 0282 this

123
00:11:45,330 --> 00:11:50,040
all JavaScript code with return oriented
programming shell core and all that fun

124
00:11:50,040 --> 00:11:55,870
stuff in the end we look back this
JavaScript code onto this particular

125
00:11:55,870 --> 00:12:04,490
image whenever you have an image think
of emerged as several layers of pictures

126
00:12:04,490 --> 00:12:07,260
8 layers of pictures to be exact

127
00:12:07,260 --> 00:12:13,030
like transparency stacked on one another
if I were to decompose this image into

128
00:12:13,030 --> 00:12:21,390
its big players each pixel can take on
it but values the least significant bit

129
00:12:21,390 --> 00:12:27,790
is 0 the most significant because their
seven so if you just rip off different

130
00:12:27,790 --> 00:12:33,810
significant bits and preparing real stem
then your image

131
00:12:33,810 --> 00:12:42,219
can be represented as a set of eight
lives the topmost layer contributes

132
00:12:42,220 --> 00:12:49,020
maximum to the shape of the image the
bottom mostly contributes maximum to the

133
00:12:49,020 --> 00:12:54,540
details of the image if I were to split
them up they look like this this is

134
00:12:54,540 --> 00:13:01,010
mentally or seven Butler 654321 and
betrayal 0 basically appears just as

135
00:13:01,010 --> 00:13:07,620
noise if you compose it all of them
together you get the resultant image on

136
00:13:07,620 --> 00:13:16,630
the left hand side now this gives you an
idea of where to hide your data so let

137
00:13:16,630 --> 00:13:18,529
me show you how it works

138
00:13:18,529 --> 00:13:25,060
image if we just start stacking the
different layers this is the cleaners

139
00:13:25,060 --> 00:13:31,529
ero we just see greens on top of it you
later bit earlier one and be clear

140
00:13:31,529 --> 00:13:42,870
234567 that's the composite image so
what we gonna do when it comes to

141
00:13:42,870 --> 00:13:49,770
encoding we're going to start writing
our exploit code on any one of these

142
00:13:49,770 --> 00:14:10,120
leaders let us see how to do this let me
show you some tools

143
00:14:10,120 --> 00:14:15,660
videos of mademoiselle always believe in
labels which has the added risk of them

144
00:14:15,660 --> 00:14:20,900
blowing up in my face and making me look
stupid but I will not learn I was still

145
00:14:20,900 --> 00:14:30,040
alive demos negotiator called ok so
their first issue of the image leaders

146
00:14:30,040 --> 00:14:32,599
here we go

147
00:14:32,600 --> 00:14:37,300
ratio analysis all these tools are
written in very simple HTML and

148
00:14:37,300 --> 00:14:55,370
Javascript to slaughter this JPEG file
and down here I've got a little leery of

149
00:14:55,370 --> 00:15:04,020
you so if you see on this I am
directionally challenged so I don't know

150
00:15:04,020 --> 00:15:10,880
what the hell is left and right to seize
this so if you see that side the you can

151
00:15:10,880 --> 00:15:16,600
see this is a bit earlier seven I don't
know how to stretch this out but let me

152
00:15:16,600 --> 00:15:21,420
show you what happens if you go down the
barriers a little bit so if you go down

153
00:15:21,420 --> 00:15:25,860
to bed earlier 6 you start seeing more
details

154
00:15:25,860 --> 00:15:36,140
less shape 54321 at Butler 0 you
basically have just jagged pictures and

155
00:15:36,140 --> 00:15:39,500
if you start overlaying them one on top
of each other

156
00:15:39,500 --> 00:15:52,630
you start getting a good composite image
and that's the full image now let us see

157
00:15:52,630 --> 00:16:01,890
how to how the encoding is done we're
now going to take a midstream which is

158
00:16:01,890 --> 00:16:11,660
exploit code and included on these
pictures one after the other so Lourdes

159
00:16:11,660 --> 00:16:17,939
image again now we will choose which
later included on we have eight players

160
00:16:17,940 --> 00:16:18,990
to play with

161
00:16:18,990 --> 00:16:22,960
if we included on the topmost layer

162
00:16:22,960 --> 00:16:35,300
and so I just say this is at least seven
including is there any way including at

163
00:16:35,300 --> 00:16:40,459
least seven and the greatest three
pictures 73 by three places there will

164
00:16:40,460 --> 00:16:47,020
be a bit encoded to spread it out a bit
and then temperatures and exploit so

165
00:16:47,020 --> 00:16:53,140
this is the exploit that I'm going in
court on all this JavaScript stuff

166
00:16:53,140 --> 00:17:14,750
written over here just a process like a
dark room so here you have it you have

167
00:17:14,750 --> 00:17:21,359
image you can notice a lot of pixel
aberration because we've written on the

168
00:17:21,359 --> 00:17:26,060
topmost beach that's going to be the
most visible it contributes most to the

169
00:17:26,060 --> 00:17:32,889
entropy of the image now if we just
change this and instead say ok let's

170
00:17:32,890 --> 00:17:41,650
incorrectly or to a bit deeper down now
you don't see anything including a still

171
00:17:41,650 --> 00:17:45,630
there but all the pictures

172
00:17:45,630 --> 00:17:50,560
absolutely hidden away you you can't
make out there's any aberration

173
00:17:50,560 --> 00:17:58,050
whatsoever so this is a very primitive
form of steganography that I've got no

174
00:17:58,050 --> 00:18:03,220
plans to step of processing it into a
jpg file and this is a little complex

175
00:18:03,220 --> 00:18:16,290
the reason why shipping is complex is
because you lose data

176
00:18:16,290 --> 00:18:26,180
including at seven now we did including
a to assure you this again and when you

177
00:18:26,180 --> 00:18:31,680
magnify the incurring a bit earlier to
you don't see any arbitration at all now

178
00:18:31,680 --> 00:18:37,770
when it comes to including on JPEG the
problem is shipping is lossy compression

179
00:18:37,770 --> 00:18:43,780
you lose accelerator pixels get
approximated to their nearest neighbors

180
00:18:43,780 --> 00:18:49,710
and is not good for a slow delivery if
you're exploit code gets disturbed with

181
00:18:49,710 --> 00:18:55,280
severe exploit quarter lost its not
gonna work so how do you ensure that

182
00:18:55,280 --> 00:19:01,750
after making it a JPEG you get complete
reconstruction of the exploit court

183
00:19:01,750 --> 00:19:06,180
these pictures are not disturb the wrong
tangent of course tried to make things

184
00:19:06,180 --> 00:19:10,850
too complex studied the discrete cosine
transform and you know tried to take the

185
00:19:10,850 --> 00:19:16,110
DCT table so it won't affect the its
corner pictures and whatnot then I said

186
00:19:16,110 --> 00:19:20,469
like oh this is not working is too
complex Xcaret then I had a brainwave at

187
00:19:20,470 --> 00:19:24,390
the hackerspace in Luxembourg saying
okay you know what if you can call it

188
00:19:24,390 --> 00:19:30,590
for the first time maybe 50% of the
pictures are valued 50% follow orders

189
00:19:30,590 --> 00:19:35,750
remaining and in current top of it it is
actively until it converges every

190
00:19:35,750 --> 00:19:40,210
iteration the error is minimized and the
pictures and of being stuck after like

191
00:19:40,210 --> 00:19:44,060
nine or 10 iterations you get a fully
processed chip in with all the pictures

192
00:19:44,060 --> 00:19:50,800
on it and that is what led to iterative
including receive the necessary is the

193
00:19:50,800 --> 00:20:01,100
mother of invention so whatever works
let me assure them of iterative encoding

194
00:20:01,100 --> 00:20:10,439
we're going to encode that use after
free exploit on the Ganesh using

195
00:20:10,440 --> 00:20:15,910
iterative encoding

196
00:20:15,910 --> 00:20:29,440
so here it is loaded we're gonna in
court on bit earlier 23 these other

197
00:20:29,440 --> 00:20:33,990
options the IGB options are when you're
dealing with color images I chose a demo

198
00:20:33,990 --> 00:20:37,570
in black and white because it's simpler
to explain because what I GB of explain

199
00:20:37,570 --> 00:20:41,840
the reginald green and blue gender it
just makes it better to hide pictures if

200
00:20:41,840 --> 00:20:46,169
you got three channels instead of one
takes a little more time which I don't

201
00:20:46,170 --> 00:20:50,220
have it so here we are

202
00:20:50,220 --> 00:20:56,280
get to exploit now I'll show you how
this works

203
00:20:56,280 --> 00:21:04,020
the first thing going on over here now
does this encoding work technically I'm

204
00:21:04,020 --> 00:21:09,720
not using any JPEG library to learn
coding I'm just using HTML canvas in the

205
00:21:09,720 --> 00:21:14,220
browser the browser itself in codes and
if the browser can incorporate the

206
00:21:14,220 --> 00:21:20,380
browser can decode it again using HTML
canvas and JavaScript to this ensures

207
00:21:20,380 --> 00:21:24,870
that when I delivered exploit it will be
successful in accordance with the

208
00:21:24,870 --> 00:21:33,790
JavaScript that have used and here is
the encoding section may you I work is

209
00:21:33,790 --> 00:21:39,680
very poor because I'm an awful designers
I may be a decent artist but I'm very

210
00:21:39,680 --> 00:21:51,810
poor designers in terms of entries when
I do the encoding keep your eye on this

211
00:21:51,810 --> 00:21:58,669
side of the screen or other side is and
keep your eye on the red pictures which

212
00:21:58,670 --> 00:22:00,510
show the errors

213
00:22:00,510 --> 00:22:09,560
click on it it it's gonna do the first
iteration and you can see that the

214
00:22:09,560 --> 00:22:15,659
number of bread mixes is decreasing with
every pass this means that with every

215
00:22:15,660 --> 00:22:20,760
including the pictures are getting
stopped properly and the last iteration

216
00:22:20,760 --> 00:22:24,150
it succeeded and

217
00:22:24,150 --> 00:22:29,610
when I have the output it says past
number nine there is a little bit of

218
00:22:29,610 --> 00:22:35,639
error there is about like 45 out of
480,000 pictures which are still

219
00:22:35,640 --> 00:22:40,540
improper but they do not affect our
exploit there somewhere in the middle so

220
00:22:40,540 --> 00:22:45,280
when i decoded back the decoded text
works ok and the only five checks are

221
00:22:45,280 --> 00:22:55,440
also checks out please do not chastise
me for using amplified the shower and

222
00:22:55,440 --> 00:23:01,590
JavaScript coordinates too lazy to write
so now we have a perfectly encourage

223
00:23:01,590 --> 00:23:06,780
shipping fine with the exploit code in
it so that he just can't see it at all

224
00:23:06,780 --> 00:23:16,060
let me open it up in the Indian
quarterback in the in the analyzer to

225
00:23:16,060 --> 00:23:22,480
show you the difference if we peel away
the layers we will be able to see it but

226
00:23:22,480 --> 00:23:37,380
on the front of it you can't see
anything

227
00:23:37,380 --> 00:23:54,510
now click on to it looks like in the
incorrect version versus let me show you

228
00:23:54,510 --> 00:24:01,060
how it looks like in the original
version so here is the original version

229
00:24:01,060 --> 00:24:08,889
if you see the window area it's all
black if you see the encoded version the

230
00:24:08,890 --> 00:24:13,590
window a year has some disturbance
kisses at middle ear to these are the

231
00:24:13,590 --> 00:24:17,439
pictures of her expert court but any
composite that you just don't see

232
00:24:17,440 --> 00:24:29,100
anything at all now has done a little
bit of JPG and PNG stuff which are

233
00:24:29,100 --> 00:24:33,370
currently in a in a little bit let's
talk about how this is gonna be likud

234
00:24:33,370 --> 00:24:42,360
this has to be decoded in the browser so
the decoder court has to be JavaScript I

235
00:24:42,360 --> 00:24:46,449
want to keep the decoder called as
simple as possible and as innocent as

236
00:24:46,450 --> 00:24:51,280
possible so that the nuchal cord itself
does not get picked up as being

237
00:24:51,280 --> 00:24:57,010
something malicious so the decoder
called contains only can was read

238
00:24:57,010 --> 00:25:03,170
information and there is and just make
shift operators and binary bitwise

239
00:25:03,170 --> 00:25:09,050
operators and whatnot it does not even
contain a single email another trick for

240
00:25:09,050 --> 00:25:16,490
that so html5 canvas helps us do this we
can read the image pixel data from the

241
00:25:16,490 --> 00:25:21,650
JavaScript rebuild the exploit code and
then trigger it and here is the decoder

242
00:25:21,650 --> 00:25:27,390
last year when I did the dakotas about
like 1500 bytes now gotta trunk number

243
00:25:27,390 --> 00:25:33,040
651 bites using really compact and
really ugly JavaScript but it works very

244
00:25:33,040 --> 00:25:38,700
well it's perfectly innocent you don't
see email anywhere in here the way I'm

245
00:25:38,700 --> 00:25:40,470
doing email is like this

246
00:25:40,470 --> 00:25:45,070
setTimeout new function X Cypriot a
function of a string and a function

247
00:25:45,070 --> 00:25:48,710
constructed will give you a new function
object just triggered after a little

248
00:25:48,710 --> 00:25:49,570
time of need

249
00:25:49,570 --> 00:25:55,290
in milliseconds if you're still worried
about this being detected then you can

250
00:25:55,290 --> 00:25:59,149
judge encoded which will include
everything into non alphanumeric

251
00:25:59,150 --> 00:26:07,870
JavaScript and this will even sneak
through ok now comes apart of backing

252
00:26:07,870 --> 00:26:16,030
this JavaScript into the image itself
creating a polyglot cuz I said if you

253
00:26:16,030 --> 00:26:21,850
want to explode in style with just one
image so we will create images that are

254
00:26:21,850 --> 00:26:27,199
around how does this work is a technique
called images which is a combination of

255
00:26:27,200 --> 00:26:32,890
image and JavaScript so on one hand if
you look at it in an image context you

256
00:26:32,890 --> 00:26:35,400
see pictures if you get this

257
00:26:35,400 --> 00:26:40,450
injected in the JavaScript interpreter
runners code and this is what we call as

258
00:26:40,450 --> 00:26:48,460
a polyglot so the same container if you
live in a frame buffer is an image if

259
00:26:48,460 --> 00:26:55,190
run in a JavaScript interpreter is code
now how does that happen first we'll see

260
00:26:55,190 --> 00:27:02,510
how to pull this off with dripping this
led me to an interesting discovery with

261
00:27:02,510 --> 00:27:09,620
Final Four max you study a file former
the more popular the file format the

262
00:27:09,620 --> 00:27:15,060
more extensive it is or other the other
way oh yeah file format is extensible it

263
00:27:15,060 --> 00:27:20,169
becomes popular in survives the test of
time people keep using it to lock down

264
00:27:20,170 --> 00:27:25,050
people don't use it much shipping has
survived over decades and new additions

265
00:27:25,050 --> 00:27:31,080
are being made to JPG as well when a
file format is extensively it's

266
00:27:31,080 --> 00:27:35,899
basically following postales law that be
generous in order to receive and we very

267
00:27:35,900 --> 00:27:40,580
very conservative and what you give up
which means that a JPEG interpreters

268
00:27:40,580 --> 00:27:45,879
basically anything given to it if it
doesn't know how to parse certain

269
00:27:45,880 --> 00:27:51,770
sections it will ignore them and this is
where the concept of polyglot comes in

270
00:27:51,770 --> 00:27:59,940
very handy we were just pack extra data
into a jpg file following the JPEG

271
00:27:59,940 --> 00:28:03,010
format which doesn't disturb it doesn't
ordered

272
00:28:03,010 --> 00:28:08,850
syntax error in the interpreter looks at
it it's just gonna ignore it so here's a

273
00:28:08,850 --> 00:28:16,449
recipe for images with keeping every
JPEG file has various markers you have

274
00:28:16,450 --> 00:28:22,210
something or start-up image which is
always a 58 then you have the epithelial

275
00:28:22,210 --> 00:28:28,600
marker which is Fe 0 and then you have
to buy at length with Jeff if 0 this

276
00:28:28,600 --> 00:28:32,969
basically declares its a jpg file then
you have a major version minor version

277
00:28:32,970 --> 00:28:36,980
you have the X resolution wide as
illusion and then you have the other

278
00:28:36,980 --> 00:28:42,370
markers which is this is a quantization
tables and the DCT tables and then you

279
00:28:42,370 --> 00:28:47,929
have a start of frame and the compressed
pixel code is what creates a jpg file

280
00:28:47,930 --> 00:28:56,120
what we gonna do is very simply play
around with the length if I just

281
00:28:56,120 --> 00:29:03,040
increase the length to say twelve
thousand bites then I get a whole lot of

282
00:29:03,040 --> 00:29:10,580
extra space in the Airp 0 market which
you can use it with an injured I'm gonna

283
00:29:10,580 --> 00:29:15,870
patent HTML go somewhere I have an open
HTML tag and a whole lot of random

284
00:29:15,870 --> 00:29:20,040
bullshit because HTML ignore

285
00:29:20,040 --> 00:29:24,170
invalid attributes the browser will
still not cancel the random stuff is

286
00:29:24,170 --> 00:29:29,330
just to spread about their signature
engines can pick it up when you're the

287
00:29:29,330 --> 00:29:34,409
header the decoder JavaScript and
everything goes here and the very end I

288
00:29:34,410 --> 00:29:39,230
just put script type because text
undefined which is like everything

289
00:29:39,230 --> 00:29:44,570
terminates the rest of the JPEG file
will be treated as JavaScript and be

290
00:29:44,570 --> 00:29:47,780
passed to an invalid interpreter which
means it will do nothing and just sit

291
00:29:47,780 --> 00:29:52,660
there without complaining and here's to
restore the JavaScript so this is how

292
00:29:52,660 --> 00:30:36,429
create the whole polyglot let's do this
and then tested out so

293
00:30:36,429 --> 00:30:56,190
and then you have some style sheets and
you have some javascript over here this

294
00:30:56,190 --> 00:31:01,629
is where the decoder script will go and
this code and the dakotas script will

295
00:31:01,629 --> 00:31:13,860
get embedded in the polyglot the decoder
script and is exactly what I surely on

296
00:31:13,860 --> 00:31:28,189
the slide so let us combine them use the
history because turning around is some

297
00:31:28,190 --> 00:31:35,070
combining the template and the decoder
script and generating a polyglot out of

298
00:31:35,070 --> 00:31:39,049
its carbonaceous input module production
they explode could have put it is a

299
00:31:39,049 --> 00:31:43,639
reverse mature british L which you know
when you when you opened exploited give

300
00:31:43,639 --> 00:31:47,539
me a major position and then every major
producer script to upload a privilege

301
00:31:47,539 --> 00:31:52,970
escalation exploit get system and on the
whole computer take a screenshot and and

302
00:31:52,970 --> 00:31:59,220
take a list of processes and everything
so all weaponized so here we are

303
00:31:59,220 --> 00:32:07,580
this is stable deployed images it has
basically created in New jpg

304
00:32:07,580 --> 00:32:15,179
sure what that looks like

305
00:32:15,180 --> 00:32:25,930
you see a little over here I'm still
working on how to smaller than that out

306
00:32:25,930 --> 00:32:32,980
and down below with all the random stuff
at some point you'll see this javascript

307
00:32:32,980 --> 00:32:38,220
in the AB 0 mark it's not going to
affect the JPEG court because if I just

308
00:32:38,220 --> 00:32:52,490
do open on this I get this open in
previous so this is a valid JPEG file if

309
00:32:52,490 --> 00:33:01,870
I do internet and tell me that this is
800 by 600 jpg and all the other stuff

310
00:33:01,870 --> 00:33:07,639
that goes with it so it's not destroyed
the former at all just preserved it the

311
00:33:07,640 --> 00:33:12,260
extra detail has just snuck into it if
you really paranoid and you want a judge

312
00:33:12,260 --> 00:33:24,100
in court this is the G chord with you
don't see any of the script data instead

313
00:33:24,100 --> 00:33:31,240
of just see symbols and non alphabetical
known as for numeric stuff there is just

314
00:33:31,240 --> 00:33:35,710
screwed up here this is all the judge
encouraged stuff again you can put emoji

315
00:33:35,710 --> 00:33:39,860
in it and you can put all sorts of weird
characters in it and make it sailed

316
00:33:39,860 --> 00:33:46,649
through all right now let's see how this
deliveries done let's see the rest of

317
00:33:46,650 --> 00:34:00,509
the demo so on one side I have made us
poised ready to go to catch the ship

318
00:34:00,509 --> 00:34:05,079
position here

319
00:34:05,079 --> 00:34:27,168
browser

320
00:34:27,168 --> 00:34:34,408
task manager on

321
00:34:34,409 --> 00:34:42,069
in the browser so it's a direct link to
the image let's see this image is

322
00:34:42,069 --> 00:34:46,168
uploaded on some web server somewhere
and you give a direct link to the URL

323
00:34:46,168 --> 00:34:54,168
you open the image and this is the image
being open you see the images there's no

324
00:34:54,168 --> 00:34:56,449
there's no aberration in this image

325
00:34:56,449 --> 00:35:02,839
whatsoever however you think you're
seeing an image you really seeing a

326
00:35:02,839 --> 00:35:08,009
valid HTML file the HTML file as an
image tag on it which says image source

327
00:35:08,010 --> 00:35:12,520
equals to hash which displays itself
back as an image so that is the beauty

328
00:35:12,520 --> 00:35:17,420
of the polyglot you don't see anything
strange with her I have trig have

329
00:35:17,420 --> 00:35:22,470
programmed to trigger a pond on mouse
clicks so if I click anywhere in this

330
00:35:22,470 --> 00:35:27,328
image it's gonna trigger the exploit
exploit is gonna do a heap spring fill

331
00:35:27,329 --> 00:35:33,079
up the heat and then do the use after
free and get return oriented programming

332
00:35:33,079 --> 00:35:39,010
code and give you a shell interesting
side note he sprays are also being

333
00:35:39,010 --> 00:35:42,210
detected these days in browsers if you
like try to consume too much memory

334
00:35:42,210 --> 00:35:48,180
repeatedly using javascript is detected
by using html5 canvas to do heaps praise

335
00:35:48,180 --> 00:35:53,529
as well so the rope cord gets sprayed as
Texas and that's why I had the CSS to

336
00:35:53,529 --> 00:36:00,170
hide all that stuff you don't see did
you see the CPU spike up for a while and

337
00:36:00,170 --> 00:36:04,760
because the html5 heaps resolutely slow

338
00:36:04,760 --> 00:36:11,099
spike up for a few seconds and then when
it's done you should see traditional

339
00:36:11,099 --> 00:36:19,269
popping up in this window

340
00:36:19,269 --> 00:36:39,439
is going to the privilege escalation run
many cats get all the passwords get

341
00:36:39,439 --> 00:36:46,269
everything upload upload screenshot back
onto its desktop and at this point and

342
00:36:46,269 --> 00:37:01,899
this goes on a shell

343
00:37:01,900 --> 00:37:11,770
the image detonated exploit browsers own
game over

344
00:37:11,770 --> 00:37:17,470
thank you

345
00:37:17,470 --> 00:37:30,700
we have the PNG stuff as well I just
wanted to make sure this never worked

346
00:37:30,700 --> 00:37:36,348
the pendulum has a little flaky not
because of my PNG skills are weak or my

347
00:37:36,349 --> 00:37:40,210
stable skills are weak because makes
light of skills that we can use after

348
00:37:40,210 --> 00:37:46,080
free haven't gotten it to stabilize
really well so however such as you can

349
00:37:46,080 --> 00:37:50,359
probably point out where I suck but if
not we'll just tried three times and

350
00:37:50,359 --> 00:37:57,779
hope it works once and then you'll
discover believe me that it works ok let

351
00:37:57,780 --> 00:38:13,250
me clean up the process for the PNG work
with PNG it's the same thing except you

352
00:38:13,250 --> 00:38:20,020
get a much better method of encoding
data pages lost less there's no pixel

353
00:38:20,020 --> 00:38:24,750
approximation going on so you can
incorporate live 0 which is the lowest

354
00:38:24,750 --> 00:38:30,290
bidder in JPEG a few incorrectly 80 the
errors are so much that the data just

355
00:38:30,290 --> 00:38:34,900
gets wiped out and you don't get lured
you don't get convergence of the encoded

356
00:38:34,900 --> 00:38:43,750
data with with PNG get full convergence
and you don't lose any data networks

357
00:38:43,750 --> 00:38:54,160
across all all browsers at once so it
PNG the way or do it is yeah you have a

358
00:38:54,160 --> 00:39:00,910
PNG header with this P&G data and
everything is in order scoreless for

359
00:39:00,910 --> 00:39:08,529
ceci chunks for ceci is a genetic method
of representing multimedia data which is

360
00:39:08,530 --> 00:39:17,300
used in a failed MPEG files PNG files
all the chunks prefix to it in length

361
00:39:17,300 --> 00:39:22,920
and then a four character called that's
the name for cccam from 4 character code

362
00:39:22,920 --> 00:39:28,010
before character code tells you what
type of a chunk this is Suzanne I had a

363
00:39:28,010 --> 00:39:30,030
ride I end

364
00:39:30,030 --> 00:39:33,850
any image format can define their own
forces each other so very beautiful

365
00:39:33,850 --> 00:39:40,140
extensible for me so then you have the
full character chal chal computer and a

366
00:39:40,140 --> 00:39:46,430
CRC at the end to make sure that the
check is intact so here we don't create

367
00:39:46,430 --> 00:39:52,339
a text chunk which is actually a valid
junk and in the next chunk we can put

368
00:39:52,340 --> 00:39:57,630
our HTML cooperate in here and play the
correct CRC and then you have the rest

369
00:39:57,630 --> 00:40:04,930
of the image data that follows and this
is how you incurred PNG have written a

370
00:40:04,930 --> 00:40:08,850
full paper on this it sits on a website
called state of Florida in for this

371
00:40:08,850 --> 00:40:13,290
gives you the whole mechanism of how
it's done that action as of how I did

372
00:40:13,290 --> 00:40:18,220
things that way you can read it earlier
in the slaves as well

373
00:40:18,220 --> 00:40:39,350
PNG demo will do this using Firefox so

374
00:40:39,350 --> 00:41:09,950
encoded image already here is also use
after free bug and Firefox and the data

375
00:41:09,950 --> 00:42:05,500
has been encouraged at Butler 0 so let
me switch on Butler 0

376
00:42:05,500 --> 00:42:30,670
and let me just take green channel
because that's where the explosion his

377
00:42:30,670 --> 00:42:46,260
encoded so if you

378
00:42:46,260 --> 00:43:00,750
exploit based you can see a little bit
of it is encoded over here is hardly

379
00:43:00,750 --> 00:43:05,100
visible this is just a amplified the
pictures to show you in this in this

380
00:43:05,100 --> 00:43:08,980
damn on that's why you see it otherwise
on the face of it and i think is visible

381
00:43:08,980 --> 00:43:13,750
at all this is not programmed with him

382
00:43:13,750 --> 00:43:19,860
interpreter sister simple calculator
thing so let me pull it off let me see

383
00:43:19,860 --> 00:43:33,230
if this works I'll orders in the browser
and lifted now the Firefox can was is

384
00:43:33,230 --> 00:43:38,180
very fast the heaps praise going to be
pretty quick and I'll give it a shot if

385
00:43:38,180 --> 00:43:42,649
it works if it doesn't work I tried two
more times if not I'll say there are

386
00:43:42,650 --> 00:43:47,030
explored their skills are used as we go

387
00:43:47,030 --> 00:44:01,560
attempt one so I have prayed to the
demagogues enough for this to work are

388
00:44:01,560 --> 00:44:08,490
so there was a successful and is the
most critical part of every talk live

389
00:44:08,490 --> 00:44:19,020
demos have to go at all right now to the
end game a little bit about delivering

390
00:44:19,020 --> 00:44:23,320
the center stuff so we saw how to take
exploit code put it in

391
00:44:23,320 --> 00:44:28,370
put it in an image steganography equally
with pictures we saw how to decode

392
00:44:28,370 --> 00:44:32,250
advice on how to pack the decoder in the
same image as a polyglot we saw bruises

393
00:44:32,250 --> 00:44:37,040
or JPG and PNG these are the two most
popular image formats on the web and I

394
00:44:37,040 --> 00:44:40,279
believe they'll be the two most popular
image formats on the way for a very long

395
00:44:40,280 --> 00:44:40,900
time

396
00:44:40,900 --> 00:44:46,830
animated gifs deter damaged getting more
popular and Jeff stuff is really driven

397
00:44:46,830 --> 00:44:52,020
to do it's been done before about
delivering this exploit how do you

398
00:44:52,020 --> 00:44:55,930
deliver this exploit and make it
triggered in a browser automatically

399
00:44:55,930 --> 00:44:59,629
there's a few things when it comes to
exploration of it

400
00:44:59,630 --> 00:45:05,670
GDP we can get a few advantage with
concepts they content sniffing with cash

401
00:45:05,670 --> 00:45:14,270
control and with really clever CSS when
I demoed these things you know you may

402
00:45:14,270 --> 00:45:19,160
have noticed that the files had no
extension I did not name them as . jpg

403
00:45:19,160 --> 00:45:27,290
or png just left them as they were this
is an example of forcing the browser to

404
00:45:27,290 --> 00:45:34,090
detect what type of content is simply by
inspecting the file and this is this

405
00:45:34,090 --> 00:45:41,070
diagram from makers 11 skis fantastic
book the browser security handbook and

406
00:45:41,070 --> 00:45:47,080
the tangled web where he's given the
criteria when the browsers are forced to

407
00:45:47,080 --> 00:45:51,319
perform content sniffing how does a
brother know whether I need a stream is

408
00:45:51,320 --> 00:45:54,230
HTML or JPG or PNG or whatever it is

409
00:45:54,230 --> 00:45:59,190
first rule look at the content type from
the issue to be responsible for the

410
00:45:59,190 --> 00:46:05,680
content types these text HTML rendered
as HTML if there is no content take the

411
00:46:05,680 --> 00:46:10,819
second rule is look at the extension of
the extensions . HTML or PNG or JPG

412
00:46:10,820 --> 00:46:15,940
treated that way in the absence of the
extension just make a guess you look at

413
00:46:15,940 --> 00:46:22,540
the first few bites if you see HTML code
running as HTML ECG parameters JPEG and

414
00:46:22,540 --> 00:46:29,160
in this case what happens is both
Firefox and IE to lower these data blogs

415
00:46:29,160 --> 00:46:35,399
as JPG or PNG the instead lured them as
HTML and when they're loaded as HTML

416
00:46:35,400 --> 00:46:40,900
they just run if you are an attacker and
you have control of the web server's

417
00:46:40,900 --> 00:46:45,240
that you're serving it from you can
serve as JPEG file with content type

418
00:46:45,240 --> 00:46:52,160
text HTML and it will force the browser
to interpret the JPEG as HTML and run it

419
00:46:52,160 --> 00:47:00,129
crazy but it's true and browser does not
aureus for being the most friendliest

420
00:47:00,130 --> 00:47:04,750
pieces of programs on the internet they
will let anyone walk in the door and

421
00:47:04,750 --> 00:47:10,640
render themselves in your soul brothers
do so that's why we're here year after

422
00:47:10,640 --> 00:47:12,859
year at conferences like that

423
00:47:12,859 --> 00:47:19,549
talking about this job the other cool
thing about this this is a data

424
00:47:19,549 --> 00:47:25,019
forensics and incident response and they
made is how to go back to the past are

425
00:47:25,019 --> 00:47:29,410
back to the future with payloads so
imagine a scenario like this now we're

426
00:47:29,410 --> 00:47:34,999
playing around with a cash later I send
you an image today it's a valid image

427
00:47:34,999 --> 00:47:42,269
and I set the content expiry six months
into the future now they measure be

428
00:47:42,269 --> 00:47:47,488
cached on your disk sitting there the
next day my browser makes a request for

429
00:47:47,489 --> 00:47:52,269
the image it's not really a request on
the wire is just gonna make it cash

430
00:47:52,269 --> 00:47:57,578
request and pull it out from disk so I
send you an image today

431
00:47:57,579 --> 00:48:02,259
next call is sitting there in your hard
disk doing nothing

432
00:48:02,259 --> 00:48:10,710
six months later I was seeing you there
decoder stuff up the same image no

433
00:48:10,710 --> 00:48:18,700
transaction has occurred on the wire and
you'll get on now let us say you're one

434
00:48:18,700 --> 00:48:22,058
of these big companies got a lot of
venture funding who just basically rose

435
00:48:22,059 --> 00:48:27,019
a day since its chamber that did it they
come in do they come into incident

436
00:48:27,019 --> 00:48:30,799
response to say ok you know let's look
at the sniffles they still get

437
00:48:30,799 --> 00:48:36,299
everything you want to find anything how
far back does your sniffer window go how

438
00:48:36,299 --> 00:48:40,599
how many packages shipped to be able to
figure out where the hell did this come

439
00:48:40,599 --> 00:48:41,349
from

440
00:48:41,349 --> 00:48:48,749
so this is another breezy trick you can
play as far as detection stuff both had

441
00:48:48,749 --> 00:48:51,819
entered on a private version of the
story never put it on way to store

442
00:48:51,819 --> 00:48:57,538
because in Google get it and all the AV
agents flagged off yes yes yes ok ok ok

443
00:48:57,539 --> 00:48:58,339
good to go

444
00:48:58,339 --> 00:49:04,819
so this technique works this technique
is still undetectable even though it's

445
00:49:04,819 --> 00:49:09,569
very primitive steganography it flies
under the radar because we are not

446
00:49:09,569 --> 00:49:15,579
treating images as suspicious entity I
want to make a different point though

447
00:49:15,579 --> 00:49:19,650
first let me just tell you where to get
the stuff from if you want to stay up

448
00:49:19,650 --> 00:49:24,999
late to get referred to this beautiful
publication called proper GTFO it is an

449
00:49:24,999 --> 00:49:31,160
issue number eight this table slowed
toolkit is embedded in the PDF of pocket

450
00:49:31,160 --> 00:49:38,660
video for you take the PDF PDF you get a
set of tools there's a PNG file in that

451
00:49:38,660 --> 00:49:39,839
list

452
00:49:39,839 --> 00:49:43,950
rename the PNG as HTML ordered in your
browser click on the lion is dropping

453
00:49:43,950 --> 00:49:48,959
seven zip file on your desktop and that
is a staple store to get so that's how

454
00:49:48,959 --> 00:49:52,779
you get it if you don't know how to do
it you don't want to play with stainless

455
00:49:52,779 --> 00:49:57,950
blade cause you may just be yourself you
read the paper it's unstable slowed not

456
00:49:57,950 --> 00:50:02,680
influence also in Papua GTFO it extends
you everything how it's done in full

457
00:50:02,680 --> 00:50:09,839
detail and now for the conclusions as
far as offensive stuff both can see

458
00:50:09,839 --> 00:50:14,299
plenty of conclusions right here don't
even need to enumerate what can go on

459
00:50:14,299 --> 00:50:19,219
but someone made a very very nice
observation that protocol spending

460
00:50:19,219 --> 00:50:23,749
syntax based generalist exploit
methodologies are the new black

461
00:50:23,749 --> 00:50:30,618
we are going to see such examples of
combined packages coming our way as far

462
00:50:30,619 --> 00:50:37,019
as the next wave of explorer delivery
goes and we need to be prepared about

463
00:50:37,019 --> 00:50:43,189
such as a defense tough course now I
mentioned to the challenges about

464
00:50:43,190 --> 00:50:47,989
defense to step back a little bit and be
a little more inspired from her own skin

465
00:50:47,989 --> 00:50:53,900
or this morning several people have
asked me ok somehow we patched spitz

466
00:50:53,900 --> 00:50:59,579
tbsp how do we fix tbsp but guess what
it's the wrong question to us I don't

467
00:50:59,579 --> 00:51:03,699
say that all you can bet you can fix it
is going to own your photo haha but this

468
00:51:03,699 --> 00:51:09,630
is the wrong question to us the question
to ask is why do these things work why

469
00:51:09,630 --> 00:51:16,449
does a browser allow HTML embedded in
JPEG to be loaded and run browsers need

470
00:51:16,449 --> 00:51:17,499
to wake up

471
00:51:17,499 --> 00:51:20,910
browser vendors need to wake up in the
WBC needs to occur

472
00:51:20,910 --> 00:51:27,499
browsers need to be strict we have
enough of front-page tolerance for two

473
00:51:27,499 --> 00:51:29,129
decades it's too

474
00:51:29,130 --> 00:51:32,990
their browsers got their act together
like compilers you miss a single

475
00:51:32,990 --> 00:51:39,368
semicolon compiler no exe file just deal
with it and we had a programmer

476
00:51:39,369 --> 00:51:43,069
complaining and then throwing rocks at
the compiler saying they damage why

477
00:51:43,069 --> 00:51:49,710
doesn't just accept my semi colon and
move on this train that a strict

478
00:51:49,710 --> 00:51:53,829
creatures you want an executable code
play nice with them and they'll get your

479
00:51:53,829 --> 00:51:55,049
stuff

480
00:51:55,049 --> 00:52:00,359
browsers are likely laid-back useless
apps you give him anything and they

481
00:52:00,359 --> 00:52:03,759
render so that's not how it's supposed
to work it's time

482
00:52:03,759 --> 00:52:09,309
browsers not really strict the WTC has
to get up and enforces very much like

483
00:52:09,309 --> 00:52:14,849
the wi-fi Alliance like in two thousand
every vendor was trying to break into

484
00:52:14,849 --> 00:52:21,240
2011 protocol spec and create their own
high-speed PCMCIA cards well outcomes

485
00:52:21,240 --> 00:52:26,169
the wife a Lenten season by a PCMCIA
card which does not have the wife a logo

486
00:52:26,170 --> 00:52:29,869
stamped on it going back out of it
doesn't have the way fatalist and donor

487
00:52:29,869 --> 00:52:35,630
and consumers started asking for
compliance and conformance to the

488
00:52:35,630 --> 00:52:41,420
standard this all needs to be done with
browsers finally for for heaven's sake

489
00:52:41,420 --> 00:52:47,940
stop interpreting a rubbish JavaScript
to be symbols and interpreted like this

490
00:52:47,940 --> 00:52:53,140
is just emerged in there and what not
why does this thing everyone in the

491
00:52:53,140 --> 00:52:53,910
first place

492
00:52:53,910 --> 00:52:58,420
get it right and I won't be on stage
again that's that's what you need to do

493
00:52:58,420 --> 00:53:07,240
so is this where they have a few great
to have friends the source of a house

494
00:53:07,240 --> 00:53:12,299
with a few years ago only done the
special thanks to a few friends

495
00:53:12,299 --> 00:53:19,038
Albertini he's a polyglot mastered Dr
Mario headache for a lot of inspiration

496
00:53:19,039 --> 00:53:21,210
and clever JavaScript

497
00:53:21,210 --> 00:53:26,210
media for greys level to Luxembourg for
giving the space to rate this ad for

498
00:53:26,210 --> 00:53:32,839
bringing me here again and again this AM
done we have some time for questions and

499
00:53:32,839 --> 00:53:39,390
answers if you don't have time I'll be
out in a whole year so no question

500
00:53:39,390 --> 00:54:06,118
yeah so question is how many websites
that have a dentist image hosting sites

501
00:54:06,119 --> 00:54:09,400
where they re encoded image or not

502
00:54:09,400 --> 00:54:15,849
quick answer no I'm not a complete
survey done a bit of hunting Dec have

503
00:54:15,849 --> 00:54:21,309
tried very successfully with image
hosting services that use Amazon s3 has

504
00:54:21,309 --> 00:54:28,200
a lot of these services will use the ES
335 services and if you upload an image

505
00:54:28,200 --> 00:54:33,078
and get the s3.amazonaws.com order
whatever the the whole URL with the grid

506
00:54:33,079 --> 00:54:39,349
and just saying that URL and somebody
opens it up as a direct link Amazon does

507
00:54:39,349 --> 00:54:44,630
not serve any funny headers or any
control headers it just lets it go as is

508
00:54:44,630 --> 00:54:49,039
and it works I do know that Facebook
Korean course images I do know that

509
00:54:49,039 --> 00:54:53,829
Google reinforce images I haven't really
been able to view of 9gag for a long

510
00:54:53,829 --> 00:54:59,920
time I use my own funny clip art now but
I need to check that that is a work in

511
00:54:59,920 --> 00:55:06,069
progress I'd be happy if you test it out
and give me inputs be add some more

512
00:55:06,069 --> 00:55:13,910
stuff in the stables board paper your
next question

513
00:55:13,910 --> 00:55:23,149
there is a very so how do I know that
the pixels converge to have a

514
00:55:23,150 --> 00:55:29,260
mathematical proof for this now
mathematics is very weak I have a lose

515
00:55:29,260 --> 00:55:33,740
proof for this is that after two
attempts of the number of pixels reduces

516
00:55:33,740 --> 00:55:39,240
exponentially Felix taxing an
exponential decline of the error then

517
00:55:39,240 --> 00:55:42,828
you will hope that the image will
converge if the decline is not

518
00:55:42,829 --> 00:55:48,140
exponential if it is sort of I don't
know what it is somewhere between

519
00:55:48,140 --> 00:55:53,118
exponentially against Italy for
polynomial if it is somewhere in that

520
00:55:53,119 --> 00:55:59,299
region then it is not converge and screw
everything up for me I just use trial

521
00:55:59,299 --> 00:56:02,920
and error the larger the images the
better your chances for conversions

522
00:56:02,920 --> 00:56:08,940
views than 800 by 600 image but if you
used a 1280 by 8:50 you got you can

523
00:56:08,940 --> 00:56:13,390
spread apart the pixels in a larger grid
like football I i've used three my three

524
00:56:13,390 --> 00:56:17,670
girls were to use it made pretty good
really fast convergence because jpg

525
00:56:17,670 --> 00:56:23,710
includes eight blocks at a time 88 made
blocks at a two minutes left for more

526
00:56:23,710 --> 00:56:30,680
questions sir

527
00:56:30,680 --> 00:56:46,160
page know if I were to be able to do
that I'll be very rich I wont be

528
00:56:46,160 --> 00:56:52,660
standing here but that that'll be the
day explode of doom that that would be

529
00:56:52,660 --> 00:56:56,339
the end of the world which would be
great in fact like the right thing to

530
00:56:56,340 --> 00:57:00,250
rebuild the web and justice for all the
damn thing once and for all

531
00:57:00,250 --> 00:57:04,860
but no it does not work because when it
is an image to add it directly goes to

532
00:57:04,860 --> 00:57:10,680
the image decoder libraries and for that
you need a P&G exploit or chipping

533
00:57:10,680 --> 00:57:22,419
exploit something

534
00:57:22,420 --> 00:57:39,869
so unless you allow their domain soviet
domain that you allow that you get

535
00:57:39,869 --> 00:57:45,970
javascript running from that domain this
is inline javascript somebody pointed

536
00:57:45,970 --> 00:57:48,680
out that if you use content security
policy

537
00:57:48,680 --> 00:57:54,240
inline javascript is disabled so in that
case you take the JavaScript and

538
00:57:54,240 --> 00:57:58,868
packaged separately and user scripts or
sequels hash which re deference to

539
00:57:58,869 --> 00:58:03,770
polyglot as a javascript and get and can
do that some mention of it in the paper

540
00:58:03,770 --> 00:58:09,309
but me in in in the light of no script
and all it's basically just gonna stop

541
00:58:09,309 --> 00:58:16,700
stop JavaScript local stop any other job
well done thank you very much ladies and

542
00:58:16,700 --> 00:58:20,578
gentlemen for your time and attention of
your own outside of the day

