1
00:00:00,000 --> 00:00:07,299
so hello this topic if that was not
obvious from from the title the stock is

2
00:00:07,299 --> 00:00:11,040
going to be about denial of service
attacks and more specifically about

3
00:00:11,040 --> 00:00:15,200
defending from them but you may ask ok
how should I know anything about that

4
00:00:15,200 --> 00:00:19,630
but let me introduce myself my name is
Marek and I'm an engineer at a

5
00:00:19,630 --> 00:00:26,269
performance and security company called
closer and we provide reverse proxy and

6
00:00:26,269 --> 00:00:31,650
CDN services to many websites across the
world actually operate on very large

7
00:00:31,650 --> 00:00:37,140
network and most importantly we are
confident his role if you are back

8
00:00:37,140 --> 00:00:41,250
together many customers continue through
all of you will see why we are

9
00:00:41,250 --> 00:00:46,200
experienced in handling had no service
attacks to give you some some flavor of

10
00:00:46,200 --> 00:00:52,199
Fortran was one of our elderly customers
at some numbers into it if you haven't

11
00:00:52,199 --> 00:00:58,339
seen recent news that doesn't convince
you that now services a threat here is

12
00:00:58,340 --> 00:01:04,510
numbers from us this is the number of
daily events that are counted as now

13
00:01:04,510 --> 00:01:08,229
service attendance per day over last
couple of months the pic is quite high

14
00:01:08,229 --> 00:01:13,539
about 300 per day but the general trend
is between 1300 things we see every day

15
00:01:13,540 --> 00:01:17,700
some of their own personal some of them
very large it it kind of doesn't doesn't

16
00:01:17,700 --> 00:01:24,689
correlate that but basically did it it
happens every single day and the denial

17
00:01:24,689 --> 00:01:30,539
service is generally a heart problem at
the idea is that the attacker wants to

18
00:01:30,540 --> 00:01:36,460
overwhelm the target internet service
stuff and the stuff can be either a

19
00:01:36,460 --> 00:01:43,630
sleepy a ticket requests or DNS requests
or just or just random pockets it kind

20
00:01:43,630 --> 00:01:48,170
of doesn't matter what matters is that
the resources on D defender site always

21
00:01:48,170 --> 00:01:54,100
constraint and it's it's it's fairly
easy to older long time defending from

22
00:01:54,100 --> 00:01:58,679
now through is particularly hard because
scaling out the attack is actually

23
00:01:58,680 --> 00:02:03,689
fairly easy and it's fairly cheap on the
other hand scaling out the

24
00:02:03,689 --> 00:02:07,439
infrastructure of the defender site it's
usually fairly costly and actually

25
00:02:07,439 --> 00:02:09,179
fairly hard

26
00:02:09,179 --> 00:02:15,140
a successful attack affected differently
or so of duplication stock and it's

27
00:02:15,140 --> 00:02:20,250
usually easiest to overrun the end
application is is is usually no only few

28
00:02:20,250 --> 00:02:26,129
hundred HTTP requests per second can
take down your workplace at present log

29
00:02:26,129 --> 00:02:31,310
or or your review application but there
are many other layers as well for

30
00:02:31,310 --> 00:02:39,469
example da Linux networking stock is not
fully scalable in turn in some context

31
00:02:39,469 --> 00:02:45,459
you can send some pockets that the
basically all the normal in the box it

32
00:02:45,459 --> 00:02:50,370
just about $300,000 per second rate then
there's next layer which is closer to

33
00:02:50,370 --> 00:02:54,750
the networking hardware it's more
definable they are and the skills very

34
00:02:54,750 --> 00:02:58,419
well at least on Linux and you can
expect to be able to do both two million

35
00:02:58,419 --> 00:03:02,669
packets per second to give us some
comparison a 10 gigabit network card is

36
00:03:02,669 --> 00:03:06,590
able to devote to do about 10 million
packets and finally there's always

37
00:03:06,590 --> 00:03:12,560
somewhere around her and rotor has also
constrained capacity usually the biggest

38
00:03:12,560 --> 00:03:17,449
problem is with just a number of
connections to the internet pipes going

39
00:03:17,449 --> 00:03:22,019
connecting cure your router to the
internet this presentation will focus

40
00:03:22,019 --> 00:03:27,069
mostly on the operating system site the
application site is way too specific for

41
00:03:27,069 --> 00:03:31,010
portable applications on the other hand
the networking site is fairly well

42
00:03:31,010 --> 00:03:35,069
understood very well documented but I
believe that the operating system kind

43
00:03:35,069 --> 00:03:39,429
of tweaks and and and of tips are not
really well popularized and and there is

44
00:03:39,430 --> 00:03:43,049
there's some really interesting study
gonna do there to make your service more

45
00:03:43,049 --> 00:03:46,840
resilient so hopefully by the end of the
stock you will know how to make your

46
00:03:46,840 --> 00:03:52,819
internet service prepared for a pardon
our service and this stock is Chris

47
00:03:52,819 --> 00:03:57,259
structured in roughly five parts and we
basically woke up this talk we start

48
00:03:57,259 --> 00:04:03,208
from network and finish at a very bloody
both nights so what about network this

49
00:04:03,209 --> 00:04:07,829
is kind of the the biggest issue usually
don't because no matter what you are

50
00:04:07,829 --> 00:04:12,819
doing if you just get enough junk
pockets getting your services did they

51
00:04:12,819 --> 00:04:17,190
will overwhelm the capacity of your
physical links and one thing you can buy

52
00:04:17,190 --> 00:04:19,410
more links but this is not really

53
00:04:19,410 --> 00:04:26,150
I dirt cheap nor no you can't do it
really on when that happens so what

54
00:04:26,150 --> 00:04:31,090
people are doing around the world people
are using another outing at a special

55
00:04:31,090 --> 00:04:38,400
contract between a router and I speed
rotor and radios that your router

56
00:04:38,400 --> 00:04:43,349
informs the endurance rider to basically
not rule out any traffic to some

57
00:04:43,350 --> 00:04:47,960
addresses so basically you can remove
your IP addresses from the internet this

58
00:04:47,960 --> 00:04:52,820
solves the condition problem because you
see no Pakistan but obviously service

59
00:04:52,820 --> 00:04:57,650
will not be available so did now service
will be successful so to counter that

60
00:04:57,650 --> 00:05:03,219
it's absolutely critical to be able to
move interest services around addresses

61
00:05:03,220 --> 00:05:08,040
and is that this is what we are doing
all the time when we see a

62
00:05:08,040 --> 00:05:13,590
denial-of-service hitting one of our
servers then we quite often I wrote this

63
00:05:13,590 --> 00:05:18,070
idea dresses are affected and then we
moved the estimates are averse to

64
00:05:18,070 --> 00:05:21,659
different IP addresses and we can do
that because we are fairly well prepared

65
00:05:21,660 --> 00:05:28,020
for once we have Guinness time to its
value is fairly low and second thing is

66
00:05:28,020 --> 00:05:31,830
we are very confident in our DNS
infrastructure that we can can actually

67
00:05:31,830 --> 00:05:36,729
no propagate the changes rapidly the big
question here is what happens I did

68
00:05:36,730 --> 00:05:41,540
notice follows onto the IP addresses and
indecision or a heart problem but some

69
00:05:41,540 --> 00:05:44,630
of the floods do not follow somebody
else will not fall under the IP

70
00:05:44,630 --> 00:05:49,719
addresses ok so for now let us assume
that there is not any problem with

71
00:05:49,720 --> 00:05:53,850
network assumed that little condition
doesn't accurately you have still some

72
00:05:53,850 --> 00:05:59,080
capacity on the network layer available
and development is that you should allow

73
00:05:59,080 --> 00:06:04,169
the Pakistan flow it's it's incorrect in
my opinion to null route traffic if it

74
00:06:04,169 --> 00:06:08,020
doesn't cause congestion and it's
usually a bit too severe to cut traffic

75
00:06:08,020 --> 00:06:12,090
on the road earlier just because you can
do much better work at different layers

76
00:06:12,090 --> 00:06:18,159
so ideally you would you would allow the
package to flow to the answer her as an

77
00:06:18,160 --> 00:06:23,440
example of a flood that was hitting one
of our servers and you can see that

78
00:06:23,440 --> 00:06:27,300
there is some normal baseline traffic
and then the flood-hit and it kicked

79
00:06:27,300 --> 00:06:30,770
about 800,000 packets per second to the
server ok

80
00:06:30,770 --> 00:06:35,359
what was in those pockets here's an
example it could have been a UDP Genesis

81
00:06:35,360 --> 00:06:42,569
flood with just many many many queries
to our DNS resolver ESO terrace asking

82
00:06:42,569 --> 00:06:48,599
for a solution of say example.com and
actually if you love those packets two

83
00:06:48,599 --> 00:06:55,219
hits D Dennis application server will
not be happy there is no DNS server into

84
00:06:55,220 --> 00:06:59,479
world that can handle a eight hundred
thousand requests per second on a single

85
00:06:59,479 --> 00:07:04,949
machine and the big news here is where
the pockets are actually coming from the

86
00:07:04,949 --> 00:07:09,110
big news is they are not legitimate if
you see high-volume pockets on your

87
00:07:09,110 --> 00:07:14,030
network they're not coming from real
applications they are coming from denial

88
00:07:14,030 --> 00:07:20,719
of service tools that are just crafted
so send you many second date once again

89
00:07:20,720 --> 00:07:25,060
do not come from real users is critical
because if they don't come from real

90
00:07:25,060 --> 00:07:30,569
users can actually a correct thing to do
is to drop the packets if if the pockets

91
00:07:30,569 --> 00:07:31,909
are invalid

92
00:07:31,909 --> 00:07:37,710
are basically specially crafted there's
no reason to even answer them to give

93
00:07:37,710 --> 00:07:42,659
you some idea of the scale in many of
the attacks that we see it's only one in

94
00:07:42,659 --> 00:07:47,340
about 10,000 pockets on our network that
is allegedly much you can imagine a

95
00:07:47,340 --> 00:07:51,560
scale and and and what would be a secure
yours if you actually try to handle

96
00:07:51,560 --> 00:07:59,500
those alright so so we we define that we
want to drop the invite package but how

97
00:07:59,500 --> 00:08:02,900
do you know which packets are actually
involved and there aren't many different

98
00:08:02,900 --> 00:08:06,888
characteristics you can use so many
people initially look at a very simple

99
00:08:06,889 --> 00:08:11,849
SELECT or steak packet length in the
flood that they showed you go there was

100
00:08:11,849 --> 00:08:16,340
a very distinguishing characteristics of
the packet has had exactly 50 bytes of

101
00:08:16,340 --> 00:08:22,638
length but unfortunately it's not very
good site or it can lead to higher rate

102
00:08:22,639 --> 00:08:25,819
of the fourth positives there's actually
a very high probability that there are

103
00:08:25,819 --> 00:08:32,610
some real requests of length 50 bytes so
we're a better way of dealing with with

104
00:08:32,610 --> 00:08:37,630
no service packets is to look at payload
and see what they're actually asking for

105
00:08:37,630 --> 00:08:40,640
and in a very many cases I would say in
me

106
00:08:40,640 --> 00:08:44,059
big majority by inspecting the pay out
of pocket you can actually

107
00:08:44,059 --> 00:08:50,410
cut the only do but traffic and traffic
flowing so difficult politics will be

108
00:08:50,410 --> 00:08:55,110
fairly small alright but there are many
ways you can actually cut buckets and

109
00:08:55,110 --> 00:09:00,760
insightful later the popular ones are
strained module and the u13 boys but we

110
00:09:00,760 --> 00:09:04,930
don't encourage users to use them on the
other hand we are extremely enthusiastic

111
00:09:04,930 --> 00:09:11,529
about a magical BPF and hearsay and use
it as an example you may be able to come

112
00:09:11,529 --> 00:09:15,730
up with some select areas and then DBS
might go to come out and then a series

113
00:09:15,730 --> 00:09:19,900
of numbers those numbers look for any
medical what are those numbers will

114
00:09:19,900 --> 00:09:23,390
those numbers is just another way of
representing the same program us here so

115
00:09:23,390 --> 00:09:28,699
this is just the same program it is just
described as more and more like version

116
00:09:28,700 --> 00:09:33,850
and you can see here some load
instructions some some construction some

117
00:09:33,850 --> 00:09:37,900
jumps so in this byte code which are
getting paid able to correctly described

118
00:09:37,900 --> 00:09:43,650
a fairly rich program it's not actually
a full program is not complete the

119
00:09:43,650 --> 00:09:50,089
length is only the sixth you can't have
more than 64 instructions and all you

120
00:09:50,089 --> 00:09:55,230
can also had hopes he can only do jumps
forward but still had begun to

121
00:09:55,230 --> 00:10:00,360
flexibility and actually being able to
much based on payload ok but it's all

122
00:10:00,360 --> 00:10:04,690
cool but where it came from and is an
interesting story so the BPS bytecode

123
00:10:04,690 --> 00:10:09,880
enables came from originally from the
jump world if you ever used to disappear

124
00:10:09,880 --> 00:10:13,680
you know that you can select like old
dirty should be done please give me only

125
00:10:13,680 --> 00:10:17,650
be pockets are only sent packets
actually haven't under the hood is to

126
00:10:17,650 --> 00:10:22,939
compile this expression and to this
video might go to misuse of numbers and

127
00:10:22,940 --> 00:10:26,190
then gives dole series of numbers to
Karen are saying that your kernel here

128
00:10:26,190 --> 00:10:30,920
is my filtering program please give me
only two pocket watch this program and

129
00:10:30,920 --> 00:10:34,310
it was with us in the industry for our
twenty years but only recently

130
00:10:34,310 --> 00:10:42,250
introduced in the trial later to be able
to run begins on fire destroyed the

131
00:10:42,250 --> 00:10:46,920
unfortunate truth is that the tools
around our focus scarce usually you can

132
00:10:46,920 --> 00:10:51,719
only use two expressions and expressions
are fairly limited you cannot expect

133
00:10:51,720 --> 00:10:57,379
expose the full potential of the BPF the
kind of the assembly line which so there

134
00:10:57,379 --> 00:11:01,699
are some benefits and hunt crafting the
biggest mountain and actually quite cool

135
00:11:01,699 --> 00:11:08,040
to write those those programs so we open
sourced our library are a series of

136
00:11:08,040 --> 00:11:12,670
small Python programs to generate a
vital and we are particularly interested

137
00:11:12,670 --> 00:11:19,079
in DDNS pockets so with our BFF tools
you can actually give program that will

138
00:11:19,079 --> 00:11:24,709
march on domain names that we can I say
to you as much on all DNS requests and

139
00:11:24,709 --> 00:11:29,119
go to say all these amazing example.com
or you can do the same thing

140
00:11:29,120 --> 00:11:33,990
case insensitive or you can try too much
based on his pockets things like that it

141
00:11:33,990 --> 00:11:39,189
is very effective against most common
now service attacks on a cable slayer

142
00:11:39,189 --> 00:11:42,629
you should be able to do about two
million packets per second by diamond

143
00:11:42,629 --> 00:11:47,490
drop and your dinner several very happy
because she would drop all the packets

144
00:11:47,490 --> 00:11:52,379
and only good packets will flow to the
application unfortunately it only scales

145
00:11:52,379 --> 00:11:56,620
up the moment let's say this two million
packets and above that is you are you're

146
00:11:56,620 --> 00:12:01,160
very likely to encounter interrupt
storms in the flood of the genus is

147
00:12:01,160 --> 00:12:07,850
bigger than the fresh hold basically all
these CPUs and your machine will be busy

148
00:12:07,850 --> 00:12:12,100
with just received package not doing any
real work about just doing homework

149
00:12:12,100 --> 00:12:19,850
storms that there is no way around it
but the first network arts so normal

150
00:12:19,850 --> 00:12:24,800
other network cards are designed to be
able to share the load across multiple

151
00:12:24,800 --> 00:12:29,089
CPUs how it works internally is that
they they're split the pockets across

152
00:12:29,089 --> 00:12:33,620
multiple recipients and then one CPU has
exactly 1 ratio and receives packets

153
00:12:33,620 --> 00:12:37,569
from this received and then give it to
the firewall there gives it to the

154
00:12:37,569 --> 00:12:41,399
networking stocks gives it to the
application at the end this is pretty

155
00:12:41,399 --> 00:12:46,070
much a lot of work but this is why it's
not really that fast

156
00:12:46,070 --> 00:12:52,670
North make faster and what they're still
bullish technique is to use kernel

157
00:12:52,670 --> 00:12:54,050
bypass

158
00:12:54,050 --> 00:12:58,579
idea that you don't actually need the
full operating system you can you can do

159
00:12:58,580 --> 00:13:03,630
all the participating user space and it
works both applications and users can

160
00:13:03,630 --> 00:13:09,160
get much better performance but but but
the problem here is that your current

161
00:13:09,160 --> 00:13:12,870
networking stack is completely
disconnected from the slow which may be

162
00:13:12,870 --> 00:13:14,050
or may not be what you want

163
00:13:14,050 --> 00:13:16,839
issue for example only single
application right whatever it may be

164
00:13:16,840 --> 00:13:22,150
what you want on the other hand if you
have a retirement as what we don't you

165
00:13:22,150 --> 00:13:27,040
cannot afford to give away the whole
network card just added to the way

166
00:13:27,040 --> 00:13:30,250
around it is to use a technique called
partial credit card to buy plus also

167
00:13:30,250 --> 00:13:34,000
known sometimes as bifurcate the driver
and the idea here is that most of the

168
00:13:34,000 --> 00:13:37,860
received your school going normally to
the kind of slow path will go to the

169
00:13:37,860 --> 00:13:43,040
Linux kernel and will follow as usual no
tenders here but then you can select

170
00:13:43,040 --> 00:13:47,420
some of the network flows and select
them to the dedicated rescue and heavy

171
00:13:47,420 --> 00:13:51,150
user space program calling from this
received directly and get much better

172
00:13:51,150 --> 00:13:56,880
for this technique we learned from the
easy I framework which is available on

173
00:13:56,880 --> 00:14:01,570
solar flare network art but we are so
impressed by that but we decided to

174
00:14:01,570 --> 00:14:06,920
write an open-source support for that so
we rode a patch to a net open source

175
00:14:06,920 --> 00:14:13,000
library is available on Linux and
FreeBSD so far but you should be able to

176
00:14:13,000 --> 00:14:19,760
do kinda like us on a number of
occasions talking about that it's

177
00:14:19,760 --> 00:14:25,640
because this is exactly what we are
doing to get our iptables run faster so

178
00:14:25,640 --> 00:14:30,410
what we do is we have a program that
looks at a table statistiques background

179
00:14:30,410 --> 00:14:34,300
and when it seems that there is a
bpa-free Laura number of rules that are

180
00:14:34,300 --> 00:14:40,280
being heavily Humbert by dark and there
is a high potential hitting up storms in

181
00:14:40,280 --> 00:14:45,339
this program will take over one of the
receipt will push all the tourist

182
00:14:45,340 --> 00:14:51,070
traffic onto the floor steering cruise
and in little basically run DPF rules

183
00:14:51,070 --> 00:14:54,160
very very close to the hardware in
userspace will any current or

184
00:14:54,160 --> 00:14:58,780
interruption and it allows us to get a
good performance we can easily get

185
00:14:58,780 --> 00:15:04,670
three million dollars per second on just
a single core of this off load and it

186
00:15:04,670 --> 00:15:08,800
works very well across street so here's
a graph of number of dropped packets

187
00:15:08,800 --> 00:15:15,000
across all our servers it's it's the
kind of trend this week we are you

188
00:15:15,000 --> 00:15:18,420
talking about 75 million packets per
second with some spikes of more than a

189
00:15:18,420 --> 00:15:23,990
hundred its although it is but overall
our server so I can I can I can reassure

190
00:15:23,990 --> 00:15:29,470
you many service where fairly busy
during those sluts ok so this is all

191
00:15:29,470 --> 00:15:34,580
nice and it's all very very heavy and
DBS are very effective but there are

192
00:15:34,580 --> 00:15:39,420
certain types of pocket floods that
actually do not cannot be blocked media

193
00:15:39,420 --> 00:15:41,079
player I'll give an example

194
00:15:41,080 --> 00:15:46,910
example of blood there are those are
packets on key player with spoofed

195
00:15:46,910 --> 00:15:51,819
source IP addresses with sports clothes
with numbers would just one bit set the

196
00:15:51,820 --> 00:15:56,600
a bit set and the problem is that
country distinguished bucket here is

197
00:15:56,600 --> 00:15:59,850
good and but it's totally possible at
one of those packets belongs to real

198
00:15:59,850 --> 00:16:07,280
connection and to make things even worse
normal axis deer hunting clubs in

199
00:16:07,280 --> 00:16:11,650
particular is pretty weak all the acts
have to be sterilized against a single

200
00:16:11,650 --> 00:16:18,480
lock in a listen to cure the structure
the performance is pretty weak but the

201
00:16:18,480 --> 00:16:20,920
good news is that there is a simple way
around it

202
00:16:20,920 --> 00:16:25,290
investor enable a stateful firewall in
office called contract here's an example

203
00:16:25,290 --> 00:16:29,699
able to rule would be pretty much all
the packets that don't belong to any

204
00:16:29,700 --> 00:16:36,180
valid established connections here is a
bit of warning in order for that to work

205
00:16:36,180 --> 00:16:43,150
you must disable DHCP blues option on
city city city O is enabled by default

206
00:16:43,150 --> 00:16:48,060
on this is very important if you don't
disable DHCP option contract will

207
00:16:48,060 --> 00:16:52,319
actually create a new file for each of
the markets would make things even worse

208
00:16:52,320 --> 00:16:55,930
alright so if properly contogouris
contract you should be able to get about

209
00:16:55,930 --> 00:17:00,979
two million pockets again and this works
very effective against number of TCP

210
00:17:00,980 --> 00:17:05,760
attacks like lots or Xbox Live Wallpaper
weird combinations but what about since

211
00:17:05,760 --> 00:17:06,150
lots

212
00:17:06,150 --> 00:17:11,320
well since they are a bit different
because contract will actually create a

213
00:17:11,319 --> 00:17:12,000
new flow

214
00:17:12,000 --> 00:17:16,910
each of the incoming some pockets and it
actually makes things even wars' I don't

215
00:17:16,910 --> 00:17:22,750
because under cole slaw about it and in
normal cases Linux is not very good at

216
00:17:22,750 --> 00:17:28,430
handling seen floods but get through
many packets is actually fairly easy to

217
00:17:28,430 --> 00:17:35,150
overlook a network service let me
explain it had about socket to socket

218
00:17:35,150 --> 00:17:39,730
under the hood there to data structures
created one is called the clock clock

219
00:17:39,730 --> 00:17:44,410
and some interesting points here and
some basically safe Sunday to from the

220
00:17:44,410 --> 00:17:51,350
incoming some buckets and what happens
if somebody is full if if there is

221
00:17:51,350 --> 00:17:55,840
increasing and is basically being
oversold and unfortunately old news

222
00:17:55,840 --> 00:18:00,629
about it would get a lot dropped and the
only way around it is to enable simple

223
00:18:00,630 --> 00:18:04,480
kiss so if anyone tells you that
enabling single currency by the idea

224
00:18:04,480 --> 00:18:09,190
will the counter argument is that it
without single he's extremely easy to

225
00:18:09,190 --> 00:18:14,440
basically disallow any connection from
coming to application right kind of

226
00:18:14,440 --> 00:18:18,660
crypto technique that allows you to skip
the state system but luck but because

227
00:18:18,660 --> 00:18:22,800
it's it's a kind of a bit hockey
technique actually doesn't and it

228
00:18:22,800 --> 00:18:26,940
doesn't say anything from the johnson
back at some people say it's it I think

229
00:18:26,940 --> 00:18:31,730
the performance for example because the
window scaling options now being

230
00:18:31,730 --> 00:18:33,400
preserved this is correct

231
00:18:33,400 --> 00:18:40,100
well until used to be a call and it
really smart on that and if you enable

232
00:18:40,100 --> 00:18:44,990
TCP down standard in a few more bits to
save some data and to be able to then

233
00:18:44,990 --> 00:18:50,080
get better performance by using more and
more modern hippie options

234
00:18:50,080 --> 00:18:54,399
ok but even with all this magic again to
perform Isis not usually very good again

235
00:18:54,400 --> 00:19:00,580
it's not really able to send more than
around 300,000 packets per second

236
00:19:00,580 --> 00:19:05,770
just because there is there is just lock
instructor but there is a light at the

237
00:19:05,770 --> 00:19:10,550
end of the tunnel there is a new set of
patches which will be merged I think

238
00:19:10,550 --> 00:19:14,800
there are merged against did you did
open branch of Linux kernel we should be

239
00:19:14,800 --> 00:19:19,070
released us 424 hopefully soon and this
years of practice remove this listen

240
00:19:19,070 --> 00:19:23,240
luck so with this new not released yet
karen i'll you should be able to get one

241
00:19:23,240 --> 00:19:24,990
to two million singles per second

242
00:19:24,990 --> 00:19:30,850
ok that's that's that's all about the
kind of high-volume Pakistan let's clear

243
00:19:30,850 --> 00:19:35,490
up this move to Real botnets and the
real botnets have a very nice pic

244
00:19:35,490 --> 00:19:40,690
characteristics is this they are usually
real devices with real operating systems

245
00:19:40,690 --> 00:19:46,090
with real networking stuff and this is
brilliant because you will not see

246
00:19:46,090 --> 00:19:51,449
higher volume of packets you will see
different characteristics but not have

247
00:19:51,450 --> 00:19:55,179
all your pockets so you like concurrent
connections account growing up or

248
00:19:55,179 --> 00:20:01,550
sockets in in some weird states like
time weight or or underfunded

249
00:20:01,550 --> 00:20:08,340
shirt and it's very easy to overwhelm
and application again does with sheer

250
00:20:08,340 --> 00:20:12,500
number of concurrent connections or a
concurrent requests but the good news is

251
00:20:12,500 --> 00:20:15,750
that since the connections are real
since the boats are actually real

252
00:20:15,750 --> 00:20:20,940
devices somewhere you can you can
actually look at certain addresses and

253
00:20:20,940 --> 00:20:26,360
is very efficient and effective most
likely because box but it's actually try

254
00:20:26,360 --> 00:20:30,350
to generate high load as possible from
the address so they are easily

255
00:20:30,350 --> 00:20:35,240
recognizable by just looking at the
source IP addresses so when we see a if

256
00:20:35,240 --> 00:20:41,030
you throw attempt from what we do is the
first thing is we enable a contract

257
00:20:41,030 --> 00:20:46,760
comet this allows us to limit number of
concurrent connections coming from the

258
00:20:46,760 --> 00:20:51,460
address would be the key makes makes
that we are sure that nothing like this

259
00:20:51,460 --> 00:20:55,910
will generate a high load second think
what we're doing is we are a number of

260
00:20:55,910 --> 00:21:01,780
syndicates per second and we can do that
with welfare hush limits are extremely

261
00:21:01,780 --> 00:21:08,790
powerful iptables module and this is
done in order to make sure that the even

262
00:21:08,790 --> 00:21:14,100
if the body is not able to establish
connections to rapidly dollar service is

263
00:21:14,100 --> 00:21:18,550
another very exciting future of ideals
and it allows you to do it whitelisting

264
00:21:18,550 --> 00:21:22,750
call blacklist IP addresses more kind of
manually if you want to see some

265
00:21:22,750 --> 00:21:27,830
examples of a table and end users of
those techniques dnt download the PDF of

266
00:21:27,830 --> 00:21:31,820
this presentation at the end of the PDF
there are like 20 slides with with

267
00:21:31,820 --> 00:21:33,520
example

268
00:21:33,520 --> 00:21:40,340
ok there's one more thing I would like
to mention which is what we saw is that

269
00:21:40,340 --> 00:21:46,050
many botanists just opened single TCP
connection and sent many many requests

270
00:21:46,050 --> 00:21:49,760
one after another so what we are doing
to counter that is we are selectively

271
00:21:49,760 --> 00:21:54,830
disable people eyes is it a bit more
integration with the east river but it

272
00:21:54,830 --> 00:21:59,179
basically makes sure that the budget
will need to establish new digital

273
00:21:59,180 --> 00:22:02,570
connection for each request which is
brilliant because we are very good at a

274
00:22:02,570 --> 00:22:07,540
rate limiting syndicate ok this is all
very nice and very good but it doesn't

275
00:22:07,540 --> 00:22:12,139
reward work against a very large botnets
individual of botnets number of IP

276
00:22:12,140 --> 00:22:15,930
addresses that hit you will be very
large and 2 B's if you can't really

277
00:22:15,930 --> 00:22:20,280
afford to even answer your queries from
the address is it can generate

278
00:22:20,280 --> 00:22:24,920
significant load unfortunately for a
very large there's not really a nice way

279
00:22:24,920 --> 00:22:29,880
of dealing with now services what we are
doing is we're trying to find a

280
00:22:29,880 --> 00:22:36,050
distinguishing characteristic disappear
layer and then cut it on a table 2 shows

281
00:22:36,050 --> 00:22:39,639
an example here's an example to get
requests against one of our customers

282
00:22:39,640 --> 00:22:44,160
and disregard request is actually very
characteristic is because in the host

283
00:22:44,160 --> 00:22:48,690
header it contains call eighty no real
browser will actually put a port number

284
00:22:48,690 --> 00:22:53,420
in the host header but it was very very
cut characteristic for this flood so

285
00:22:53,420 --> 00:22:58,200
what we did is we crafted a table salt
dropped packets with this particular

286
00:22:58,200 --> 00:23:03,130
header during this is not very nice and
it it could lead to many i'd linked I'm

287
00:23:03,130 --> 00:23:09,740
waiting time connections waiting for
this time also what's it active recently

288
00:23:09,740 --> 00:23:14,810
published a blog post about a very large
denial of service attack against one of

289
00:23:14,810 --> 00:23:21,120
our customers it was actually we think
it was done by mobile browsers so if you

290
00:23:21,120 --> 00:23:24,530
wonder what techniques were used to
mitigate that will now you know

291
00:23:24,530 --> 00:23:29,290
everything ok this is all about
medication but there is much more things

292
00:23:29,290 --> 00:23:32,879
around it so for once how do you
actually know if the attack is happening

293
00:23:32,880 --> 00:23:36,280
how do you know what's happening on
network and what we found extremely

294
00:23:36,280 --> 00:23:43,000
effective as low as a protocol which is
used to support my switches and it

295
00:23:43,000 --> 00:23:45,539
basically allow switch to send its
humble too

296
00:23:45,539 --> 00:23:51,190
lights central location so with
integrity and a switch will sample every

297
00:23:51,190 --> 00:23:56,090
thousand 2,000 to 10,000 whatever bucket
with will put it on the UDP payload of

298
00:23:56,090 --> 00:23:59,600
the assault and population will ship it
to central location and then in the

299
00:23:59,600 --> 00:24:03,830
central location can get fairly nice
already or poor typing and network this

300
00:24:03,830 --> 00:24:08,549
is one of the tools we have internally
which allows us to basically run to jump

301
00:24:08,549 --> 00:24:12,840
across all our datacenters and it's a
very nice it allows us to understand

302
00:24:12,840 --> 00:24:18,759
what Rd top heating source IP addresses
what are the top it targeted destination

303
00:24:18,759 --> 00:24:23,200
IP addresses s also has packet content
so you can inspect it and see what our

304
00:24:23,200 --> 00:24:30,960
duty sucks or maybe what Rd HTTP headers
or maybe even with a DNS queries this is

305
00:24:30,960 --> 00:24:36,789
very effective for us if you don't have
a hardware support on your switch for

306
00:24:36,789 --> 00:24:42,359
still share not there is a software
implementation so a bit of configuration

307
00:24:42,359 --> 00:24:46,129
magic in a bit of a double-wide if you
can get software implementation well

308
00:24:46,129 --> 00:24:52,238
alright thank you very much D general
takes it take away from this card that

309
00:24:52,239 --> 00:24:58,029
you will no doubt sooner or later later
this is very often the only way of

310
00:24:58,029 --> 00:25:03,139
relieving congestion and since you will
no doubt you must be performed at you

311
00:25:03,139 --> 00:25:07,668
must reduce your DNS details to
reasonable values you must be sure and

312
00:25:07,669 --> 00:25:11,440
confident that our DNS infrastructure
will be able to update quickly and that

313
00:25:11,440 --> 00:25:14,690
you don't have your IP address is
hardcoded anywhere

314
00:25:14,690 --> 00:25:18,739
the second thing is that for high-volume
pocket floods do under to see it here in

315
00:25:18,739 --> 00:25:22,970
the media about hundreds of gigabytes
all the packets are actually involved it

316
00:25:22,970 --> 00:25:29,849
may be a very large percentage and
remember our our numbers that only one

317
00:25:29,849 --> 00:25:36,720
in 10,000 pockets so this is a scale we
are you doing with and DPS are extremely

318
00:25:36,720 --> 00:25:41,289
effective against those tables and if
the performance of normal operating

319
00:25:41,289 --> 00:25:45,450
systems it's not good enough for you
consider using partial turnabout bus to

320
00:25:45,450 --> 00:25:47,229
get even better performance

321
00:25:47,229 --> 00:25:53,149
finally iptables are extremely powerful
and things like condoms haha

322
00:25:53,149 --> 00:25:58,418
extremely worthwhile kind of digging
into an understanding you can do much

323
00:25:58,419 --> 00:26:03,460
more things they described here thank
you very much I think mentioned at the

324
00:26:03,460 --> 00:26:07,429
end of this PDS there are like 30 more
slides with exciting city of San

325
00:26:07,429 --> 00:26:11,570
exciting a possible and also please do
remember to fill this review which i

326
00:26:11,570 --> 00:26:15,129
think will be sent over email I think
later on

327
00:26:15,129 --> 00:26:42,300
alright I'm sure there are many
questions

328
00:26:42,300 --> 00:26:53,129
so some simple scripts with randomized
user agent so they have a dictionary off

329
00:26:53,130 --> 00:27:09,920
top thousand user agents and I think
that's a good question

330
00:27:09,920 --> 00:27:15,490
the question is do use hardware stuff to
fill their buckets initially we are

331
00:27:15,490 --> 00:27:20,720
using a router support for those pic
which was one of a kind of moral code

332
00:27:20,720 --> 00:27:25,370
200 meters but since the partial kind of
bipartisan work so efficiently we are

333
00:27:25,370 --> 00:27:29,179
now relying mostly on BBS sent on
actually expecting the payload bay

334
00:27:29,180 --> 00:27:34,880
probably harder supports is it usually
County express the full power of what

335
00:27:34,880 --> 00:27:40,210
you want to do the BTS we can actually
have 30 significant logic in India by

336
00:27:40,210 --> 00:27:44,280
Calder I can actually pretty much boris
did his pocket and figure out there is

337
00:27:44,280 --> 00:27:49,360
correct or not so the answer is no we
don't use much harder exploration

338
00:27:49,360 --> 00:27:54,240
absolutely the

339
00:27:54,240 --> 00:28:01,120
the it I would be I'm still waiting for
for a hardware FPGA supported can be

340
00:28:01,120 --> 00:28:07,709
BFFs but anyway the the article about
gives us actually very good performance

341
00:28:07,710 --> 00:28:12,240
I mention that we can do in person about
three million packets per second on a

342
00:28:12,240 --> 00:28:15,850
single core destroying some tests which
were a bit simplified were able to get

343
00:28:15,850 --> 00:28:19,399
ten millions but it kind of doesn't
match the scale because the tenth export

344
00:28:19,400 --> 00:28:27,640
is full anyway so so basically the
partial cannabis is good enough

345
00:28:27,640 --> 00:28:43,310
very much

346
00:28:43,310 --> 00:28:52,190
operating mostly done in Edison my
domain in number of packets did that

347
00:28:52,190 --> 00:28:56,780
does D interesting but the Buckeyes are
usually fairly small the in the flooded

348
00:28:56,780 --> 00:29:00,270
areas showed you there are about 50
bytes many flights have about center by

349
00:29:00,270 --> 00:29:04,600
its open-door calculation of how many
gigabits that would be not much so he

350
00:29:04,600 --> 00:29:08,639
did I got excited that we see sometimes
have don't have very many gigabytes or

351
00:29:08,640 --> 00:29:09,840
gigabits per second

352
00:29:09,840 --> 00:29:28,809
alright any more questions

353
00:29:28,809 --> 00:29:39,049
there is a sampling rate available so
what you can do it statistically just

354
00:29:39,049 --> 00:29:44,789
multiply each packet received from a
slow by whatever and I wasn't for 16,000

355
00:29:44,789 --> 00:29:48,740
and then you can get a statistical all
over your happening there is some

356
00:29:48,740 --> 00:29:53,120
serious muscle behind it and but the
point is if the attackers big you will

357
00:29:53,120 --> 00:29:58,529
see it you will see many samples you
will see many signals right I think you

358
00:29:58,529 --> 00:30:05,869
can take one more question or not thank
you very much I hope it was useful

