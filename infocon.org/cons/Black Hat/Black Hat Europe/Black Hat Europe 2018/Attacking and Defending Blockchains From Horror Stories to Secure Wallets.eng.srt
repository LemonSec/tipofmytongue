1
00:00:00,030 --> 00:00:05,970
all right so good afternoon super happy

2
00:00:02,669 --> 00:00:07,649
to be back here last year I wasn't back

3
00:00:05,970 --> 00:00:09,900
at Europe - I wasn't giving a talk I

4
00:00:07,649 --> 00:00:11,670
gave a training a crypto training I

5
00:00:09,900 --> 00:00:13,019
submitted a training again this year but

6
00:00:11,670 --> 00:00:15,838
like I didn't accept it but they

7
00:00:13,019 --> 00:00:18,119
accepted my talk so sort of good reason

8
00:00:15,839 --> 00:00:20,520
to go so yeah I'm gonna talk about

9
00:00:18,119 --> 00:00:22,650
blockchain crypto money so how many of

10
00:00:20,520 --> 00:00:24,650
you still hold the still own

11
00:00:22,650 --> 00:00:27,840
cryptocurrency

12
00:00:24,650 --> 00:00:32,308
quite a few maybe you should sell before

13
00:00:27,840 --> 00:00:34,140
it crashes don't take my advice but okay

14
00:00:32,308 --> 00:00:35,550
so I'm I'm not gonna make any jokes

15
00:00:34,140 --> 00:00:38,070
about blockchain it's too easy

16
00:00:35,550 --> 00:00:41,120
especially these days so I'll try to

17
00:00:38,070 --> 00:00:44,910
focus on the technical technical aspects

18
00:00:41,120 --> 00:00:48,328
so quickly about me I'm JP I walk for

19
00:00:44,910 --> 00:00:50,550
klasky security and I've done a lot of

20
00:00:48,329 --> 00:00:52,079
let's say a lot of security updates that

21
00:00:50,550 --> 00:00:54,360
of security reviews for bugs in

22
00:00:52,079 --> 00:00:56,489
companies trying to break their stuff

23
00:00:54,360 --> 00:00:58,890
looking at source code trying to find

24
00:00:56,489 --> 00:01:01,530
bugs and exploit them I've also been

25
00:00:58,890 --> 00:01:03,270
doing for friend you know some weekends

26
00:01:01,530 --> 00:01:05,760
I was bored and started looking at some

27
00:01:03,270 --> 00:01:06,869
code and for some bugs and like some

28
00:01:05,760 --> 00:01:10,799
people you know try to make easy money

29
00:01:06,869 --> 00:01:13,890
and I've also involved in the design of

30
00:01:10,799 --> 00:01:15,720
a commercial product for doing crypto

31
00:01:13,890 --> 00:01:17,759
currency storage something that we sell

32
00:01:15,720 --> 00:01:20,520
to banks and this kind of function

33
00:01:17,759 --> 00:01:22,040
institutions so I know a bit how the how

34
00:01:20,520 --> 00:01:24,810
to design how to protect Krypton money

35
00:01:22,040 --> 00:01:28,110
especially in the context of financial

36
00:01:24,810 --> 00:01:29,759
institutions in Sweden on alright so the

37
00:01:28,110 --> 00:01:31,079
title of the talk has seems attacking

38
00:01:29,759 --> 00:01:32,700
and defending blockchain bar thing I

39
00:01:31,079 --> 00:01:35,250
will do the opposite way which start by

40
00:01:32,700 --> 00:01:37,590
the defending part so how how to protect

41
00:01:35,250 --> 00:01:40,020
your money how to well what kind of

42
00:01:37,590 --> 00:01:42,750
wallet to use and the second part will

43
00:01:40,020 --> 00:01:44,640
be about about bugs so this first part

44
00:01:42,750 --> 00:01:46,380
is not extremely technical so if you

45
00:01:44,640 --> 00:01:49,229
know a bit about cryptocurrency what

46
00:01:46,380 --> 00:01:50,520
else this will probably be boring for

47
00:01:49,229 --> 00:01:52,289
you because I will go through all the

48
00:01:50,520 --> 00:01:55,140
types of what else I hope I will give

49
00:01:52,290 --> 00:01:57,750
some useful insights and the second part

50
00:01:55,140 --> 00:01:59,939
will be slightly more technical but then

51
00:01:57,750 --> 00:02:01,430
again I won't go too much into details

52
00:01:59,939 --> 00:02:03,750
because I don't have so much time

53
00:02:01,430 --> 00:02:06,770
alright so defending and attacking

54
00:02:03,750 --> 00:02:09,530
reductions may be a more adequate title

55
00:02:06,770 --> 00:02:11,950
so what else

56
00:02:09,530 --> 00:02:14,750
so I guess all the people who have

57
00:02:11,950 --> 00:02:17,600
crypto money in the room you also have a

58
00:02:14,750 --> 00:02:18,380
wallet sort of bit of different types of

59
00:02:17,600 --> 00:02:21,140
water so if you don't know

60
00:02:18,380 --> 00:02:23,180
cryptocurrency at all unlike a real

61
00:02:21,140 --> 00:02:25,609
wallet where you have cash or credit

62
00:02:23,180 --> 00:02:28,460
cards in a crypto money wallet you don't

63
00:02:25,610 --> 00:02:30,800
actually store your money there's no

64
00:02:28,460 --> 00:02:34,460
such thing as crypto money you only

65
00:02:30,800 --> 00:02:37,130
store the way the data that allows you

66
00:02:34,460 --> 00:02:38,630
to spend the money how you have the

67
00:02:37,130 --> 00:02:42,140
money that is virtually somewhere in the

68
00:02:38,630 --> 00:02:45,200
blockchain so this piece of data that

69
00:02:42,140 --> 00:02:46,609
can authorize someone to let's say to

70
00:02:45,200 --> 00:02:48,829
sign a check on your behalf

71
00:02:46,610 --> 00:02:50,120
it's essentially it's a secret value of

72
00:02:48,830 --> 00:02:51,410
your sneakers you know what and you want

73
00:02:50,120 --> 00:02:55,370
to spend your money so it has to be

74
00:02:51,410 --> 00:02:57,740
secret and it's typically password or

75
00:02:55,370 --> 00:02:59,840
passphrase or something called a seed

76
00:02:57,740 --> 00:03:03,230
which is a small piece of data or

77
00:02:59,840 --> 00:03:06,890
private key so in the end be the

78
00:03:03,230 --> 00:03:08,299
passphrase or a seed from this secret

79
00:03:06,890 --> 00:03:11,029
data you will derive a private key and

80
00:03:08,300 --> 00:03:12,140
this private key will be used to sign to

81
00:03:11,030 --> 00:03:14,180
send a check to actually sign the

82
00:03:12,140 --> 00:03:16,640
transaction using a digital signature

83
00:03:14,180 --> 00:03:20,030
algorithm so for Bitcoin any term you

84
00:03:16,640 --> 00:03:22,640
would use ECDSA with a specific elliptic

85
00:03:20,030 --> 00:03:25,130
curve but other cryptocurrencies may use

86
00:03:22,640 --> 00:03:29,720
different different signature algorithms

87
00:03:25,130 --> 00:03:33,019
okay yep so you want to keep this value

88
00:03:29,720 --> 00:03:36,170
secret and so to each private key you

89
00:03:33,020 --> 00:03:37,640
have a public key associated so if you

90
00:03:36,170 --> 00:03:38,809
know a bit about crypto you always have

91
00:03:37,640 --> 00:03:41,720
private key and public key in the

92
00:03:38,810 --> 00:03:43,400
context of a symmetric crypto so from

93
00:03:41,720 --> 00:03:46,459
this public key you will derive an

94
00:03:43,400 --> 00:03:48,680
address so the address of of your

95
00:03:46,459 --> 00:03:51,260
account so the data that people will use

96
00:03:48,680 --> 00:03:53,600
to send you money so public key is

97
00:03:51,260 --> 00:03:55,670
generally public but in the context of

98
00:03:53,600 --> 00:03:58,609
cryptocurrency you don't always want to

99
00:03:55,670 --> 00:04:01,070
make your public key public why because

100
00:03:58,610 --> 00:04:03,290
if you say that okay MJ pin my public is

101
00:04:01,070 --> 00:04:05,690
this then everybody will know what it is

102
00:04:03,290 --> 00:04:07,220
milder eyes and they can look at the

103
00:04:05,690 --> 00:04:08,989
blockchain and see all the transactions

104
00:04:07,220 --> 00:04:11,989
from into this address so they might

105
00:04:08,989 --> 00:04:13,790
figure out how much money I have and if

106
00:04:11,989 --> 00:04:15,920
you if you use twice the same address

107
00:04:13,790 --> 00:04:18,469
then people can link of course to

108
00:04:15,920 --> 00:04:20,870
transactions so you don't necessarily

109
00:04:18,470 --> 00:04:23,090
want to publish your public key or your

110
00:04:20,870 --> 00:04:26,169
address and ideally you want to

111
00:04:23,090 --> 00:04:29,690
of a different race for each transaction

112
00:04:26,169 --> 00:04:31,639
so there are generally two major classes

113
00:04:29,690 --> 00:04:34,250
of what that's what we call hot wallets

114
00:04:31,639 --> 00:04:37,070
which are more like checking account so

115
00:04:34,250 --> 00:04:39,190
Monique and that is ready to span that

116
00:04:37,070 --> 00:04:43,730
you can use every day to buy and sell

117
00:04:39,190 --> 00:04:45,560
crypto money so if you do crypto

118
00:04:43,730 --> 00:04:46,960
currency trades you're you have to

119
00:04:45,560 --> 00:04:48,860
connect to a blockchain that is

120
00:04:46,960 --> 00:04:50,870
somewhere on the Internet so the

121
00:04:48,860 --> 00:04:53,690
centralized system so it's not a single

122
00:04:50,870 --> 00:04:57,110
place but this word must be connected to

123
00:04:53,690 --> 00:04:59,840
internet if you want to twist your

124
00:04:57,110 --> 00:05:02,810
transactions so of course if your

125
00:04:59,840 --> 00:05:04,849
computer a bit laptop or mobile is

126
00:05:02,810 --> 00:05:06,830
connected to internet then some hacker

127
00:05:04,850 --> 00:05:10,250
might try to connect to a tea given to

128
00:05:06,830 --> 00:05:12,770
your machine and Huck your operating

129
00:05:10,250 --> 00:05:13,630
system and steal your key and then steal

130
00:05:12,770 --> 00:05:16,789
your money

131
00:05:13,630 --> 00:05:19,159
so it's safer not to have your private

132
00:05:16,790 --> 00:05:21,650
keys on a connected machine that's why

133
00:05:19,160 --> 00:05:23,419
we have called wallets so it's more like

134
00:05:21,650 --> 00:05:25,250
saving accounts money that you want to

135
00:05:23,419 --> 00:05:27,409
store but that you will not use every

136
00:05:25,250 --> 00:05:30,250
day so in this case you want to keep it

137
00:05:27,410 --> 00:05:33,050
offline in a summer gap machine and

138
00:05:30,250 --> 00:05:34,370
typically you would have more money on

139
00:05:33,050 --> 00:05:36,590
the cold what I've done on your hot

140
00:05:34,370 --> 00:05:39,530
wallets the right way to do the best

141
00:05:36,590 --> 00:05:42,609
best practice so I will go through the

142
00:05:39,530 --> 00:05:46,669
let's say a five or six class before us

143
00:05:42,610 --> 00:05:48,260
online mobile desktop paper hardware so

144
00:05:46,669 --> 00:05:52,070
now how many of you have hardware well

145
00:05:48,260 --> 00:05:55,360
Addison yeah paper wallets maybe or

146
00:05:52,070 --> 00:05:59,599
equivalent yeah that's good

147
00:05:55,360 --> 00:06:01,639
okay so an online what at it's not

148
00:05:59,600 --> 00:06:02,840
exactly what it because what I call

149
00:06:01,639 --> 00:06:04,789
online well it is when you use an

150
00:06:02,840 --> 00:06:06,669
exchange platform like Kraken corn-based

151
00:06:04,789 --> 00:06:09,530
bit stun bit for exponents all these

152
00:06:06,669 --> 00:06:12,380
platforms to store your money on your

153
00:06:09,530 --> 00:06:13,460
behalf but actually you don't have you

154
00:06:12,380 --> 00:06:14,870
don't have a wallet so you don't have

155
00:06:13,460 --> 00:06:16,820
your private key you don't know what is

156
00:06:14,870 --> 00:06:18,410
your private key because in many cases

157
00:06:16,820 --> 00:06:20,180
there is no such thing as your private

158
00:06:18,410 --> 00:06:23,210
key or your seed all your wallet because

159
00:06:20,180 --> 00:06:25,669
most of the exchange that don't have an

160
00:06:23,210 --> 00:06:28,580
individual account per user

161
00:06:25,669 --> 00:06:29,840
they have several accounts for all the

162
00:06:28,580 --> 00:06:33,169
actions

163
00:06:29,840 --> 00:06:34,880
money but let's say you want to receive

164
00:06:33,169 --> 00:06:36,590
money from your let's say Kraken token

165
00:06:34,880 --> 00:06:38,360
basic and you generate a new address

166
00:06:36,590 --> 00:06:40,489
so your friend will send money to this

167
00:06:38,360 --> 00:06:43,910
address and then it will instantaneously

168
00:06:40,490 --> 00:06:47,770
be forwarded to one of the hot or cold

169
00:06:43,910 --> 00:06:50,120
well as of the end of the exchange and

170
00:06:47,770 --> 00:06:52,370
then the change is just keeping track of

171
00:06:50,120 --> 00:06:54,800
how much money does every of their

172
00:06:52,370 --> 00:06:56,360
customer has on their account so you

173
00:06:54,800 --> 00:06:58,940
don't have your own private key on most

174
00:06:56,360 --> 00:07:01,550
most exchanges I know that Minority

175
00:06:58,940 --> 00:07:04,910
walks describe but at the majority does

176
00:07:01,550 --> 00:07:06,890
not okay so what's the advantages so

177
00:07:04,910 --> 00:07:08,870
it's convenient you don't have to take

178
00:07:06,890 --> 00:07:11,780
care about product in your keys backing

179
00:07:08,870 --> 00:07:13,820
up your keys diction is supposedly doing

180
00:07:11,780 --> 00:07:15,650
this for you and you can access it from

181
00:07:13,820 --> 00:07:17,990
any device as long as you know the

182
00:07:15,650 --> 00:07:20,599
credentials you have the to sa set up

183
00:07:17,990 --> 00:07:23,060
and it's also super convenient if you

184
00:07:20,600 --> 00:07:24,350
want to buy and sell from different

185
00:07:23,060 --> 00:07:26,330
currencies because there's you have

186
00:07:24,350 --> 00:07:30,169
direct access to the market to the order

187
00:07:26,330 --> 00:07:35,180
book so you can directly send buy or

188
00:07:30,169 --> 00:07:37,099
sell orders on the platform okay now

189
00:07:35,180 --> 00:07:39,500
maybe the biggest downs and obviously

190
00:07:37,100 --> 00:07:41,360
securities you have to trust the

191
00:07:39,500 --> 00:07:44,330
exchange so trust it from two

192
00:07:41,360 --> 00:07:46,030
perspectives trust them - you know

193
00:07:44,330 --> 00:07:49,400
trusting them in being or being honest

194
00:07:46,030 --> 00:07:52,250
not stealing your money and trusting

195
00:07:49,400 --> 00:07:53,539
their IT infrastructure and their and

196
00:07:52,250 --> 00:07:55,940
their security because you don't want

197
00:07:53,540 --> 00:07:57,860
them to be to be hacked if someone else

198
00:07:55,940 --> 00:08:00,080
talks into the infrastructure they might

199
00:07:57,860 --> 00:08:02,750
still might steal their money at least

200
00:08:00,080 --> 00:08:06,620
the hot in the hot wallet storage so

201
00:08:02,750 --> 00:08:10,130
virtually all the cryptocurrency actions

202
00:08:06,620 --> 00:08:14,470
have been hot at some point many times

203
00:08:10,130 --> 00:08:17,690
it was at least partially an insider job

204
00:08:14,470 --> 00:08:19,430
so I don't want you know to to blame the

205
00:08:17,690 --> 00:08:21,650
actions platform is very very very hard

206
00:08:19,430 --> 00:08:25,729
to do very hard to secure on an exchange

207
00:08:21,650 --> 00:08:28,190
and maybe the best way the best strategy

208
00:08:25,729 --> 00:08:30,409
to mitigate the risk is to have as much

209
00:08:28,190 --> 00:08:32,150
money as possible on your cold storage

210
00:08:30,410 --> 00:08:34,789
and it's just not a technology problem

211
00:08:32,150 --> 00:08:38,299
like put your firewalls and update your

212
00:08:34,789 --> 00:08:41,449
systems it's mostly for my experience as

213
00:08:38,299 --> 00:08:43,819
an operational procedural

214
00:08:41,450 --> 00:08:45,260
burden to have the right process the

215
00:08:43,820 --> 00:08:47,920
wrong accountability and tracking of

216
00:08:45,260 --> 00:08:47,920
who's doing what

217
00:08:48,500 --> 00:08:53,430
okay so second party availability so if

218
00:08:51,180 --> 00:08:54,660
for some reason let's say in last

219
00:08:53,430 --> 00:08:57,388
December I don't know if you are using

220
00:08:54,660 --> 00:09:00,000
kraken so it was virtually impossible to

221
00:08:57,389 --> 00:09:02,310
log into your account because a users

222
00:09:00,000 --> 00:09:03,930
who are do icing the platform see the

223
00:09:02,310 --> 00:09:08,219
platform is down you can't have access

224
00:09:03,930 --> 00:09:10,920
to your own to your money and if the if

225
00:09:08,220 --> 00:09:12,630
the platform is because bankrupt you may

226
00:09:10,920 --> 00:09:14,519
or may not recover some of your monies

227
00:09:12,630 --> 00:09:16,829
it depends if they're covered by banking

228
00:09:14,519 --> 00:09:19,139
regulations so for example if they have

229
00:09:16,829 --> 00:09:20,609
a banking license they might be

230
00:09:19,139 --> 00:09:24,630
obligated to give you back a certain

231
00:09:20,610 --> 00:09:28,980
amount of money but most most are not

232
00:09:24,630 --> 00:09:31,470
okay okay the second but what they call

233
00:09:28,980 --> 00:09:34,290
online interfaces so maybe are supposed

234
00:09:31,470 --> 00:09:36,120
to online wallets so it's online in the

235
00:09:34,290 --> 00:09:39,259
sense that when you connect for example

236
00:09:36,120 --> 00:09:41,339
to my tour that you'll receive some

237
00:09:39,259 --> 00:09:44,790
application some JavaScript application

238
00:09:41,339 --> 00:09:47,850
from the mightor wallets servers but all

239
00:09:44,790 --> 00:09:49,649
the logic will happen client-side on

240
00:09:47,850 --> 00:09:51,149
your machine so you will enter your

241
00:09:49,649 --> 00:09:53,699
product key or your passphrase on

242
00:09:51,149 --> 00:09:55,490
equivalent piece of data and you will

243
00:09:53,699 --> 00:09:58,410
create the transaction which is like

244
00:09:55,490 --> 00:10:00,660
just a piece of data that includes the

245
00:09:58,410 --> 00:10:04,319
the sender receiver amount and other

246
00:10:00,660 --> 00:10:06,870
information and then this application

247
00:10:04,319 --> 00:10:08,880
will broadcast will send this

248
00:10:06,870 --> 00:10:13,529
transaction to a node of the network

249
00:10:08,880 --> 00:10:15,720
that will actually record it into the

250
00:10:13,529 --> 00:10:18,019
blockchain but in this type of

251
00:10:15,720 --> 00:10:21,180
application your private keys never sent

252
00:10:18,019 --> 00:10:23,130
supposedly to a third party so of course

253
00:10:21,180 --> 00:10:24,779
you have you have to trust that the

254
00:10:23,130 --> 00:10:27,930
JavaScript you're receiving is not doing

255
00:10:24,779 --> 00:10:31,560
anything evil not exfiltrating your your

256
00:10:27,930 --> 00:10:33,149
key to an outsourced server and yeah so

257
00:10:31,560 --> 00:10:34,800
compared to the online will add your

258
00:10:33,149 --> 00:10:36,990
credentials on your machine as I don't

259
00:10:34,800 --> 00:10:39,329
go outside and the UI is convenient you

260
00:10:36,990 --> 00:10:42,300
don't have to type to type in a command

261
00:10:39,329 --> 00:10:45,689
line or to write a writer script so it's

262
00:10:42,300 --> 00:10:46,199
very easy maybe the biggest risk is

263
00:10:45,689 --> 00:10:49,139
phishing

264
00:10:46,199 --> 00:10:51,599
go now like everyone can put up a

265
00:10:49,139 --> 00:10:53,790
website that replicates major what ad

266
00:10:51,600 --> 00:10:56,860
that looks the same but that does

267
00:10:53,790 --> 00:10:59,160
something a bit different of course

268
00:10:56,860 --> 00:11:02,230
you also again you have to trust that

269
00:10:59,160 --> 00:11:04,889
the provider so again in see in this

270
00:11:02,230 --> 00:11:09,129
example mater well that is serving you

271
00:11:04,889 --> 00:11:10,540
the right information so they may try to

272
00:11:09,129 --> 00:11:11,529
steal your money or someone else might

273
00:11:10,540 --> 00:11:15,910
hack into an infrastructure

274
00:11:11,529 --> 00:11:18,279
infrastructure and modify the and modify

275
00:11:15,910 --> 00:11:19,660
the data is sent or someone money might

276
00:11:18,279 --> 00:11:25,629
try to man in the middle your connection

277
00:11:19,660 --> 00:11:26,980
and send you modify data maybe one down

278
00:11:25,629 --> 00:11:28,389
design is that is just an interface to

279
00:11:26,980 --> 00:11:30,300
the blockchain so you you give it your

280
00:11:28,389 --> 00:11:32,829
private key or passphrase and it does

281
00:11:30,300 --> 00:11:34,870
what you want it to do but then again

282
00:11:32,829 --> 00:11:36,489
you have to backup your keys and to

283
00:11:34,870 --> 00:11:40,199
manage your keys by by yourself and if

284
00:11:36,490 --> 00:11:42,459
you lose your key even as governor okay

285
00:11:40,199 --> 00:11:45,399
mobile one I've never actually use

286
00:11:42,459 --> 00:11:46,800
mobile whites but scare me a bit so

287
00:11:45,399 --> 00:11:50,230
maybe because I don't trust these guys

288
00:11:46,800 --> 00:11:53,109
not saying you shouldn't but so in this

289
00:11:50,230 --> 00:11:55,180
case is just mobile application while

290
00:11:53,110 --> 00:11:57,100
you enter your credentials or that we

291
00:11:55,180 --> 00:11:59,620
generate credentials for you it would

292
00:11:57,100 --> 00:12:02,620
generate wallet for you and the keys of

293
00:11:59,620 --> 00:12:04,809
store locally presumably in the safest

294
00:12:02,620 --> 00:12:08,529
way but as far as I can tell it's not

295
00:12:04,809 --> 00:12:10,360
always the case so they try sometimes to

296
00:12:08,529 --> 00:12:12,579
bring you some fancy features like white

297
00:12:10,360 --> 00:12:14,860
2fa or cold storage so when you hear

298
00:12:12,579 --> 00:12:16,239
cold storage from a write up most of the

299
00:12:14,860 --> 00:12:18,819
time it doesn't mean anything

300
00:12:16,240 --> 00:12:21,459
technologically complicated it just

301
00:12:18,819 --> 00:12:24,189
means that you have your public key in

302
00:12:21,459 --> 00:12:26,920
your address listed so monitored by the

303
00:12:24,189 --> 00:12:28,839
application for example if your system

304
00:12:26,920 --> 00:12:30,819
money it will tell you the new note that

305
00:12:28,839 --> 00:12:32,829
you have on this account but your

306
00:12:30,819 --> 00:12:34,959
private key will not be registered into

307
00:12:32,829 --> 00:12:36,849
the application so when I say cold

308
00:12:34,959 --> 00:12:39,069
storage is just that okay we have the

309
00:12:36,850 --> 00:12:40,689
public key pin on the private key so of

310
00:12:39,069 --> 00:12:42,670
course if you note how the private key

311
00:12:40,689 --> 00:12:45,370
unit you cannot sign you cannot issue

312
00:12:42,670 --> 00:12:47,819
transactions so maybe you heard about

313
00:12:45,370 --> 00:12:50,670
copay just miss illumine

314
00:12:47,819 --> 00:12:53,199
so here the d advantage is that it's

315
00:12:50,670 --> 00:12:55,329
probably more secure than online wallet

316
00:12:53,199 --> 00:13:00,099
so again you can again discuss this not

317
00:12:55,329 --> 00:13:01,660
always an absolute truth but you have to

318
00:13:00,100 --> 00:13:04,269
trust the application once you download

319
00:13:01,660 --> 00:13:06,699
it once and then you have to trust the

320
00:13:04,269 --> 00:13:07,929
provider if you update it but it's not

321
00:13:06,699 --> 00:13:09,319
like the online where that's where each

322
00:13:07,929 --> 00:13:11,150
time you will connect

323
00:13:09,320 --> 00:13:15,110
you will receive javascript from them

324
00:13:11,150 --> 00:13:19,189
from the server - you have presumably

325
00:13:15,110 --> 00:13:20,510
full control on your phones normally all

326
00:13:19,190 --> 00:13:23,270
the private keys will stay on your

327
00:13:20,510 --> 00:13:25,220
device and now the advantage is

328
00:13:23,270 --> 00:13:27,800
convenient so you're in the street you

329
00:13:25,220 --> 00:13:31,300
can buy more bitcoins or sell if it's

330
00:13:27,800 --> 00:13:35,030
going out so guess why people use this

331
00:13:31,300 --> 00:13:38,540
sometimes of security so of course if

332
00:13:35,030 --> 00:13:41,180
your Oasis heats compromised and one of

333
00:13:38,540 --> 00:13:44,150
the first thing that hackers will try to

334
00:13:41,180 --> 00:13:48,560
do is look for Bitcoin or look for

335
00:13:44,150 --> 00:13:52,100
cryptocurrency private keys so of course

336
00:13:48,560 --> 00:13:54,140
Android is riskier than iOS but again

337
00:13:52,100 --> 00:13:56,660
I've never used the mobile wet on even

338
00:13:54,140 --> 00:13:58,760
on iOS and if you still if you if you

339
00:13:56,660 --> 00:14:00,680
lose if you lose your your mobile device

340
00:13:58,760 --> 00:14:02,870
then of course your private keys are

341
00:14:00,680 --> 00:14:05,199
gone so you want to have a backup

342
00:14:02,870 --> 00:14:07,580
somewhere else on on your device a

343
00:14:05,200 --> 00:14:09,980
desktop where it is not much difference

344
00:14:07,580 --> 00:14:12,770
is just another wallet functionality but

345
00:14:09,980 --> 00:14:15,080
on your desktop and again they try to

346
00:14:12,770 --> 00:14:18,050
have some useful features like multi

347
00:14:15,080 --> 00:14:19,850
signatures into effect so maybe you

348
00:14:18,050 --> 00:14:22,520
heard about armory copy electronics

349
00:14:19,850 --> 00:14:25,700
others what you see here is a screen cap

350
00:14:22,520 --> 00:14:28,069
of the electrum which is one of the most

351
00:14:25,700 --> 00:14:29,870
popular Bitcoin wallets so the interface

352
00:14:28,070 --> 00:14:31,850
looks a bit the 90s you know I don't

353
00:14:29,870 --> 00:14:36,410
know if it's Java swing but it's not

354
00:14:31,850 --> 00:14:39,530
very very fancy so again it's more

355
00:14:36,410 --> 00:14:42,490
secure than online wallets and you have

356
00:14:39,530 --> 00:14:45,500
control on your on your money there's

357
00:14:42,490 --> 00:14:48,680
arguably a lower risk of losing losing

358
00:14:45,500 --> 00:14:50,900
your your laptop or desktop than using

359
00:14:48,680 --> 00:14:54,410
your mobile phones so you have the same

360
00:14:50,900 --> 00:14:58,810
problem if us compromised obviously but

361
00:14:54,410 --> 00:15:01,069
from my experience the DUID interface is

362
00:14:58,810 --> 00:15:03,349
not as convenient as the one that you

363
00:15:01,070 --> 00:15:06,440
have on mobile platforms it's you need

364
00:15:03,350 --> 00:15:08,090
to know a bit more how how abduction how

365
00:15:06,440 --> 00:15:10,640
cryptocurrency drive is working let me

366
00:15:08,090 --> 00:15:15,260
give you small example so if you install

367
00:15:10,640 --> 00:15:17,030
an electron so you have this this the

368
00:15:15,260 --> 00:15:19,490
first time you open you want to create

369
00:15:17,030 --> 00:15:20,930
default underscore wallet and you have

370
00:15:19,490 --> 00:15:22,160
this poorly designed logo so it's not

371
00:15:20,930 --> 00:15:22,680
really registering for something that

372
00:15:22,160 --> 00:15:25,379
will

373
00:15:22,680 --> 00:15:27,719
straw or your money and you have the

374
00:15:25,379 --> 00:15:30,660
choice between sternal wallet wet with

375
00:15:27,720 --> 00:15:34,319
to FA multi signature wallet or import

376
00:15:30,660 --> 00:15:36,059
bit corner so you may know what is

377
00:15:34,319 --> 00:15:37,529
two-factor authentication some people

378
00:15:36,059 --> 00:15:40,980
may not you may not know what it smells

379
00:15:37,529 --> 00:15:43,319
multisig wallet so maybe it could you

380
00:15:40,980 --> 00:15:46,800
saw some additional information here for

381
00:15:43,319 --> 00:15:50,550
non-technical people and then it will

382
00:15:46,800 --> 00:15:52,878
generate your secrets so I think

383
00:15:50,550 --> 00:15:54,779
cryptocurrency is one of the let's say

384
00:15:52,879 --> 00:15:57,240
one of these things that did they tend

385
00:15:54,779 --> 00:15:59,790
to do right and maybe better than a lot

386
00:15:57,240 --> 00:16:02,129
of security product is like the

387
00:15:59,790 --> 00:16:04,860
generations our generation of secured

388
00:16:02,129 --> 00:16:08,730
credentials there's this beep 39

389
00:16:04,860 --> 00:16:10,860
standard that defines a a way to

390
00:16:08,730 --> 00:16:13,290
represent a high entropy secret in the

391
00:16:10,860 --> 00:16:15,749
form of a sequence of of war so

392
00:16:13,290 --> 00:16:17,998
typically twelve to fifteen was taken

393
00:16:15,749 --> 00:16:20,069
from a dictionary with certain criteria

394
00:16:17,999 --> 00:16:21,809
like it would only pick words that don't

395
00:16:20,069 --> 00:16:25,498
look like each other that don't have a

396
00:16:21,809 --> 00:16:26,399
common prefix so here another hood it

397
00:16:25,499 --> 00:16:28,920
would use a PRNG

398
00:16:26,399 --> 00:16:30,509
and generate a random value and it would

399
00:16:28,920 --> 00:16:34,259
transform this random value into a

400
00:16:30,509 --> 00:16:37,019
string into a list of 12 to 15 words so

401
00:16:34,259 --> 00:16:38,639
here asthma lock six sambal betray held

402
00:16:37,019 --> 00:16:42,149
a noise or garlic excused we have trade

403
00:16:38,639 --> 00:16:43,800
host and you have to to back up these

404
00:16:42,149 --> 00:16:46,709
work to save a copy of the worst

405
00:16:43,800 --> 00:16:48,719
somewhere and it tell you've never

406
00:16:46,709 --> 00:16:51,449
disclosed your seed never type it on the

407
00:16:48,720 --> 00:16:53,790
website do not store it definitely so

408
00:16:51,449 --> 00:16:56,069
what a bit confusing for security person

409
00:16:53,790 --> 00:16:59,339
is that they tend to use technical terms

410
00:16:56,069 --> 00:17:01,199
the interactions are be not necessary

411
00:16:59,339 --> 00:17:02,579
the right way so this isn't technically

412
00:17:01,199 --> 00:17:04,770
not your seed this is your passphrase

413
00:17:02,579 --> 00:17:06,869
and this seed will be derived from the

414
00:17:04,770 --> 00:17:08,609
passphrase but before turning the

415
00:17:06,869 --> 00:17:10,639
passphrase the generally the first value

416
00:17:08,609 --> 00:17:13,559
that you may want to call the see that

417
00:17:10,640 --> 00:17:14,669
anyway in so then you get a seed from

418
00:17:13,559 --> 00:17:18,178
this value and from the seed you

419
00:17:14,669 --> 00:17:21,589
generate one or many private keys using

420
00:17:18,179 --> 00:17:24,419
the bits or t23 based key generation

421
00:17:21,589 --> 00:17:27,809
okay so to make sure to you've kept a

422
00:17:24,419 --> 00:17:31,260
copy of this they will ask you all or

423
00:17:27,809 --> 00:17:34,350
part of of your passphrase and will only

424
00:17:31,260 --> 00:17:35,399
allow you to go through if you have if

425
00:17:34,350 --> 00:17:36,020
you have typed the right to the right

426
00:17:35,399 --> 00:17:39,469
pass phrase

427
00:17:36,020 --> 00:17:41,210
okay and then you might want to choose a

428
00:17:39,470 --> 00:17:43,640
basketball so why I think password on

429
00:17:41,210 --> 00:17:44,990
top of a passphrase so the password will

430
00:17:43,640 --> 00:17:47,320
be used for something a bit different

431
00:17:44,990 --> 00:17:49,610
you will typically be used to encrypt

432
00:17:47,320 --> 00:17:52,790
your secret seed or your secret

433
00:17:49,610 --> 00:17:54,139
passphrase so how will this be done so

434
00:17:52,790 --> 00:17:56,510
you'll give a password

435
00:17:54,140 --> 00:17:58,820
most of the time they will not be any

436
00:17:56,510 --> 00:18:02,900
scientific like you need two special

437
00:17:58,820 --> 00:18:05,689
characters one number one podcast it

438
00:18:02,900 --> 00:18:08,930
will derive a symmetric encryption key

439
00:18:05,690 --> 00:18:11,510
for example an AES key from this

440
00:18:08,930 --> 00:18:14,630
password and it will use this symmetric

441
00:18:11,510 --> 00:18:16,700
key to encrypt your passphrase or acid

442
00:18:14,630 --> 00:18:19,970
or some equivalent piece of data and

443
00:18:16,700 --> 00:18:22,460
will store it on your disk so when I do

444
00:18:19,970 --> 00:18:25,370
security audits many times I find that

445
00:18:22,460 --> 00:18:27,290
this part is pretty weak in the sense

446
00:18:25,370 --> 00:18:29,300
that first of all there's no Santa check

447
00:18:27,290 --> 00:18:32,870
in the password and sometimes they would

448
00:18:29,300 --> 00:18:35,120
use a weak key derivation mechanism in

449
00:18:32,870 --> 00:18:38,719
other words while you can vote for the

450
00:18:35,120 --> 00:18:40,189
password pretty efficiently so you might

451
00:18:38,720 --> 00:18:44,300
have a very strong cedras and passphrase

452
00:18:40,190 --> 00:18:46,880
but if you have even an okay password

453
00:18:44,300 --> 00:18:51,139
with a weak key derivation someone can

454
00:18:46,880 --> 00:18:53,210
still steal your money if they have

455
00:18:51,140 --> 00:18:56,380
access to the encrypted that to the

456
00:18:53,210 --> 00:18:58,580
encrypted key stone now paper wallet is

457
00:18:56,380 --> 00:19:01,700
typically that something that you use to

458
00:18:58,580 --> 00:19:03,379
keep a copy a backup of your seed in a

459
00:19:01,700 --> 00:19:06,440
safe or somewhere new in wallet you

460
00:19:03,380 --> 00:19:08,900
actually wallet it can be a QR code it

461
00:19:06,440 --> 00:19:12,500
can be something another fancy

462
00:19:08,900 --> 00:19:14,270
representation there's also some some

463
00:19:12,500 --> 00:19:17,210
systems where you engrave your

464
00:19:14,270 --> 00:19:19,160
passphrase and some metal it's super

465
00:19:17,210 --> 00:19:20,450
annoying to use last time I had to use

466
00:19:19,160 --> 00:19:23,420
it took me like one hour to time a

467
00:19:20,450 --> 00:19:25,430
passphrase so Meg maybe it makes you

468
00:19:23,420 --> 00:19:26,480
feel more secure but in the end of the

469
00:19:25,430 --> 00:19:30,470
day it's not really it's not really

470
00:19:26,480 --> 00:19:31,820
better so yeah of course it's more

471
00:19:30,470 --> 00:19:33,650
secure than anything that could be on

472
00:19:31,820 --> 00:19:35,179
your computer because even if someone

473
00:19:33,650 --> 00:19:38,120
hacks into all your computers they will

474
00:19:35,180 --> 00:19:40,160
not get your you paper copy your paper

475
00:19:38,120 --> 00:19:42,050
wallet except if you get the PDF copy on

476
00:19:40,160 --> 00:19:46,550
your on your machine of course which you

477
00:19:42,050 --> 00:19:49,430
should not do but nany you might lose it

478
00:19:46,550 --> 00:19:52,879
if it's a piece of paper at my burn

479
00:19:49,430 --> 00:19:54,050
I don't know over time how long it lasts

480
00:19:52,880 --> 00:19:57,530
but I don't know if you'll still be

481
00:19:54,050 --> 00:19:59,419
using Bitcoin in 50 years anyway well

482
00:19:57,530 --> 00:20:01,580
and something you have to be careful

483
00:19:59,420 --> 00:20:04,040
office you see there's a QR code so you

484
00:20:01,580 --> 00:20:07,850
don't anyone to take a picture of your

485
00:20:04,040 --> 00:20:12,770
of your Bitcoin back note and copy your

486
00:20:07,850 --> 00:20:14,629
QR code okay so now hardware why let's

487
00:20:12,770 --> 00:20:17,120
see in partnering what's a hardware well

488
00:20:14,630 --> 00:20:19,130
that is just piece of hardware that is

489
00:20:17,120 --> 00:20:22,760
dedicated to storing your crypto money

490
00:20:19,130 --> 00:20:25,000
so it's typically USB flash drive from

491
00:20:22,760 --> 00:20:28,040
from facto like the like the legend nos

492
00:20:25,000 --> 00:20:30,380
treasure is one very popular hardware

493
00:20:28,040 --> 00:20:33,680
wallets so it's done in such a way that

494
00:20:30,380 --> 00:20:37,610
your secret key is using some allegedly

495
00:20:33,680 --> 00:20:39,950
secure storage on the device and it

496
00:20:37,610 --> 00:20:41,840
comes with some features that for

497
00:20:39,950 --> 00:20:44,390
example will guarantee that even if your

498
00:20:41,840 --> 00:20:46,760
machine is compromised then you need

499
00:20:44,390 --> 00:20:48,920
some physical process to authorize a

500
00:20:46,760 --> 00:20:51,290
signature like you need to press a

501
00:20:48,920 --> 00:20:53,360
button to validate a transaction so this

502
00:20:51,290 --> 00:20:56,300
several walk arounds to to bypass or to

503
00:20:53,360 --> 00:20:57,770
to compromise this but tends to it's

504
00:20:56,300 --> 00:20:59,330
obviously more secure it's not less

505
00:20:57,770 --> 00:21:01,160
secure and software where that's most of

506
00:20:59,330 --> 00:21:04,429
the time unless did they or do every

507
00:21:01,160 --> 00:21:06,680
hover a shitty system so the keys are

508
00:21:04,430 --> 00:21:08,690
never really exposed to the u.s. it's

509
00:21:06,680 --> 00:21:11,450
just you know signing Oracle the kids

510
00:21:08,690 --> 00:21:14,510
are never transferred to D to the US the

511
00:21:11,450 --> 00:21:17,090
u.s. just sends the hardware well at the

512
00:21:14,510 --> 00:21:18,920
data to be signed and hardware that

513
00:21:17,090 --> 00:21:22,340
returns a signature or a sign

514
00:21:18,920 --> 00:21:24,310
transaction and even if it's stolen then

515
00:21:22,340 --> 00:21:26,840
you have to unlock it with a pin or

516
00:21:24,310 --> 00:21:29,360
using some 2fa process so if you had

517
00:21:26,840 --> 00:21:33,740
already stolen it is generally very very

518
00:21:29,360 --> 00:21:34,909
hard to recover the private keys so you

519
00:21:33,740 --> 00:21:36,560
like I said there's some you know

520
00:21:34,910 --> 00:21:39,410
someone might in Australian you with a

521
00:21:36,560 --> 00:21:41,330
gun and asked you to give give out your

522
00:21:39,410 --> 00:21:42,800
PIN so sometimes you have like auto

523
00:21:41,330 --> 00:21:44,810
destruct function functions that you

524
00:21:42,800 --> 00:21:49,100
give special pin and then it wipes out

525
00:21:44,810 --> 00:21:51,230
all the other private keys a risk is

526
00:21:49,100 --> 00:21:52,939
that you you might get locked out of

527
00:21:51,230 --> 00:21:55,730
your device if you enter for example X 3

528
00:21:52,940 --> 00:21:59,720
or 4 times the wrong pin then it's it

529
00:21:55,730 --> 00:22:01,760
wipes all the Holy Spirit keys so if you

530
00:21:59,720 --> 00:22:02,930
if you've used one of these systems you

531
00:22:01,760 --> 00:22:04,610
know that

532
00:22:02,930 --> 00:22:06,110
it can be a bit annoying for number of

533
00:22:04,610 --> 00:22:09,530
reasons first of all it doesn't always

534
00:22:06,110 --> 00:22:11,120
support your favorite coin it supports

535
00:22:09,530 --> 00:22:12,410
the main one like VidCon VidCon Kashi

536
00:22:11,120 --> 00:22:16,520
Tea Room

537
00:22:12,410 --> 00:22:19,280
light-cone Libby ripple but not not all

538
00:22:16,520 --> 00:22:20,750
the alkynes and what's super super

539
00:22:19,280 --> 00:22:24,350
annoying is when we want to import

540
00:22:20,750 --> 00:22:26,390
passphrase so for in the legend

541
00:22:24,350 --> 00:22:28,100
otherwise it's nice device but you don't

542
00:22:26,390 --> 00:22:30,050
have a keyboard so how do you enter a

543
00:22:28,100 --> 00:22:34,909
passphrase without a keyboard you have

544
00:22:30,050 --> 00:22:37,669
just listen - key so you do like go over

545
00:22:34,910 --> 00:22:39,620
all the letters one by one letter by

546
00:22:37,670 --> 00:22:41,330
letter and it takes forever and of

547
00:22:39,620 --> 00:22:42,530
course you don't never get it right the

548
00:22:41,330 --> 00:22:44,899
first times you have to do it again and

549
00:22:42,530 --> 00:22:48,260
again and then it I just used

550
00:22:44,900 --> 00:22:50,660
software wallet so even though it's

551
00:22:48,260 --> 00:22:56,060
hardware and hardware is often perceived

552
00:22:50,660 --> 00:22:57,830
as synonymous for secure I mean these

553
00:22:56,060 --> 00:22:59,210
are retail products consumer products

554
00:22:57,830 --> 00:23:01,760
and you don't have the same kind of

555
00:22:59,210 --> 00:23:04,970
security as you have in a TV smart girls

556
00:23:01,760 --> 00:23:07,760
for example so people try to to hug them

557
00:23:04,970 --> 00:23:11,210
and people succeeded so you had a

558
00:23:07,760 --> 00:23:13,610
totally black at blackhat us it was this

559
00:23:11,210 --> 00:23:17,090
year or last year the word software and

560
00:23:13,610 --> 00:23:17,750
hardware what else and at CCC you know

561
00:23:17,090 --> 00:23:20,510
in a few weeks

562
00:23:17,750 --> 00:23:22,940
so my friends Thomas and MIT really Josh

563
00:23:20,510 --> 00:23:26,230
they will present some result some nice

564
00:23:22,940 --> 00:23:28,490
results on on some hardware wallets I

565
00:23:26,230 --> 00:23:32,810
don't think they say which ones in the

566
00:23:28,490 --> 00:23:35,060
abstract no they don't okay so typically

567
00:23:32,810 --> 00:23:36,740
if you have some crypto money you want

568
00:23:35,060 --> 00:23:38,899
to have like one hard wallet for the

569
00:23:36,740 --> 00:23:41,900
daily operations and one called wallet

570
00:23:38,900 --> 00:23:45,530
for the stuff that you will not use and

571
00:23:41,900 --> 00:23:47,570
keep a paper copy paper backups that's

572
00:23:45,530 --> 00:23:49,330
the best practice but I've never done

573
00:23:47,570 --> 00:23:51,320
that yet so do what I say not what I do

574
00:23:49,330 --> 00:23:55,760
well I never had millions of

575
00:23:51,320 --> 00:23:57,950
cryptocurrency anyway so some general

576
00:23:55,760 --> 00:24:01,129
recommendations only use online one is

577
00:23:57,950 --> 00:24:02,920
hot whereas of course don't do like me

578
00:24:01,130 --> 00:24:07,250
and have everything on online platforms

579
00:24:02,920 --> 00:24:09,440
only use in other relatively recommended

580
00:24:07,250 --> 00:24:12,770
trusted online well that's online

581
00:24:09,440 --> 00:24:14,780
interface like lighter wallet that's

582
00:24:12,770 --> 00:24:16,509
probably a few shredders and you try to

583
00:24:14,780 --> 00:24:18,999
distribute between hot and cold

584
00:24:16,509 --> 00:24:21,699
what you work to and make sure to make

585
00:24:18,999 --> 00:24:24,759
sure to back up everything so if you was

586
00:24:21,699 --> 00:24:26,769
on exchanges so like I said before they

587
00:24:24,759 --> 00:24:30,099
generally have most of their money in

588
00:24:26,769 --> 00:24:33,789
cold storage this is from taken from

589
00:24:30,099 --> 00:24:36,458
coinbase it's 98% of customer found are

590
00:24:33,789 --> 00:24:37,929
stored offline offline storage provide

591
00:24:36,459 --> 00:24:41,019
an important security measure against

592
00:24:37,929 --> 00:24:43,419
after last Allah and distribute Bitcoin

593
00:24:41,019 --> 00:24:46,559
geographically in safe deposit boxes and

594
00:24:43,419 --> 00:24:49,959
vaults okay so I'm super secure

595
00:24:46,559 --> 00:24:52,239
sensitive data is disconnected entirely

596
00:24:49,959 --> 00:24:56,589
from the internet data is split with

597
00:24:52,239 --> 00:25:00,099
redundancy is 2 5 6 paper backups so it

598
00:24:56,589 --> 00:25:02,979
sounds pretty secure kraken does about

599
00:25:00,099 --> 00:25:04,718
the same all new deposits go directly to

600
00:25:02,979 --> 00:25:06,759
cold wallets with computer gapped and

601
00:25:04,719 --> 00:25:09,009
all whites are encrypted

602
00:25:06,759 --> 00:25:11,259
what I recommend so long you know what

603
00:25:09,009 --> 00:25:13,419
they mean by what it's here but okay

604
00:25:11,259 --> 00:25:17,709
I think convincing Kraken they're known

605
00:25:13,419 --> 00:25:19,659
to do the right thing you know what to

606
00:25:17,709 --> 00:25:21,579
be surprising is that so like I said in

607
00:25:19,659 --> 00:25:25,209
a hardware often means more secure and

608
00:25:21,579 --> 00:25:27,129
software but at least until recently

609
00:25:25,209 --> 00:25:30,489
neither conveys no Kraken while using

610
00:25:27,129 --> 00:25:32,228
hardware wallets hardware storage and

611
00:25:30,489 --> 00:25:36,059
most exchanges actually do not use

612
00:25:32,229 --> 00:25:38,409
hardware wallets no hardware devices

613
00:25:36,059 --> 00:25:39,789
so is it 3d problem that's something

614
00:25:38,409 --> 00:25:42,009
that's not it's not really obvious I

615
00:25:39,789 --> 00:25:43,509
mean we we could discuss it because in

616
00:25:42,009 --> 00:25:46,629
in the context of cryptocurrency and

617
00:25:43,509 --> 00:25:48,909
it's kind of application it tree depends

618
00:25:46,629 --> 00:25:50,948
on your process on on many different

619
00:25:48,909 --> 00:25:54,209
things and not just on the storage media

620
00:25:50,949 --> 00:25:58,169
hardware software Gemini is an exception

621
00:25:54,209 --> 00:26:01,359
they do use hardware they do use HSN's

622
00:25:58,169 --> 00:26:03,099
for the cold as what I call them

623
00:26:01,359 --> 00:26:06,549
now for the hot storage for the hot

624
00:26:03,099 --> 00:26:06,939
wallet they use a Amazon AWS cloud a

625
00:26:06,549 --> 00:26:10,690
schism

626
00:26:06,940 --> 00:26:13,899
system so Amazon has a bunch of cameltoe

627
00:26:10,690 --> 00:26:18,549
safety net HSN's and I think there's

628
00:26:13,899 --> 00:26:19,268
some kind of autopilot remote

629
00:26:18,549 --> 00:26:22,418
attestation

630
00:26:19,269 --> 00:26:24,009
where you can have a guarantee that AWS

631
00:26:22,419 --> 00:26:26,720
is actually using an HSM in not just

632
00:26:24,009 --> 00:26:29,870
simulating an HSM device

633
00:26:26,720 --> 00:26:31,610
so demonizing for the coastal ratios to

634
00:26:29,870 --> 00:26:34,729
use HSN but actually a sense that they

635
00:26:31,610 --> 00:26:37,820
are in the in their DC I don't know what

636
00:26:34,730 --> 00:26:39,200
what type of HSN deals but so you know

637
00:26:37,820 --> 00:26:40,879
it's not just not about hardware

638
00:26:39,200 --> 00:26:43,400
software it's about how to backup the

639
00:26:40,880 --> 00:26:45,290
keys and who which percent you

640
00:26:43,400 --> 00:26:48,380
authorized to you utilize to each

641
00:26:45,290 --> 00:26:49,580
transactions so now to conclude this

642
00:26:48,380 --> 00:26:53,030
part there's something that people

643
00:26:49,580 --> 00:26:56,000
sometimes call warm waters which I can

644
00:26:53,030 --> 00:26:58,399
often between : and heart is when you

645
00:26:56,000 --> 00:27:01,300
have for example a hardware component

646
00:26:58,400 --> 00:27:03,230
and Firstman in the case of banking

647
00:27:01,300 --> 00:27:04,610
institution financial institutions they

648
00:27:03,230 --> 00:27:08,420
want to have it this integrated into

649
00:27:04,610 --> 00:27:10,270
that private kind of are gapped network

650
00:27:08,420 --> 00:27:13,280
where you have all the banking

651
00:27:10,270 --> 00:27:16,370
compliance and regulation enforced like

652
00:27:13,280 --> 00:27:17,600
at these three teams should validate the

653
00:27:16,370 --> 00:27:19,399
transactions everything should be

654
00:27:17,600 --> 00:27:22,699
recorded it should be integrated in the

655
00:27:19,400 --> 00:27:23,870
banking in the core banking network but

656
00:27:22,700 --> 00:27:25,910
at the end of the day you want the

657
00:27:23,870 --> 00:27:28,459
transaction to be issued to you need to

658
00:27:25,910 --> 00:27:30,920
be connected to a system that is

659
00:27:28,460 --> 00:27:33,530
connected to internet so you may want to

660
00:27:30,920 --> 00:27:34,760
have a kind of data diode or something

661
00:27:33,530 --> 00:27:37,850
similar that allows you to send

662
00:27:34,760 --> 00:27:39,410
something out but not to receive not to

663
00:27:37,850 --> 00:27:41,209
receive anything but again it's hard to

664
00:27:39,410 --> 00:27:43,760
do because if you unit your introduction

665
00:27:41,210 --> 00:27:47,060
you have to get from the blockchain some

666
00:27:43,760 --> 00:27:48,920
information like the index so it's not

667
00:27:47,060 --> 00:27:54,770
always possible to only send data out

668
00:27:48,920 --> 00:27:57,680
with without receiving anything okay so

669
00:27:54,770 --> 00:27:58,810
I'm done for you the wallet part of 20

670
00:27:57,680 --> 00:28:02,150
minutes left perfect

671
00:27:58,810 --> 00:28:05,149
so it's surprising when you look at

672
00:28:02,150 --> 00:28:08,020
Bitcoin so the reference code is in C in

673
00:28:05,150 --> 00:28:11,150
the C language which is known to have

674
00:28:08,020 --> 00:28:14,870
what many bugs

675
00:28:11,150 --> 00:28:17,300
a term most of the nodes are in gone not

676
00:28:14,870 --> 00:28:20,090
in C as fast no but there's never been a

677
00:28:17,300 --> 00:28:21,379
huge disaster in Bitcoin or no ATM so

678
00:28:20,090 --> 00:28:23,600
now you might say oh but does the DI

679
00:28:21,380 --> 00:28:25,070
yuan interim but no deal was about a

680
00:28:23,600 --> 00:28:28,219
smart contract so it's like if you blame

681
00:28:25,070 --> 00:28:32,740
GCC for banging your senior C programmer

682
00:28:28,220 --> 00:28:35,570
there's two types of bugs in induction

683
00:28:32,740 --> 00:28:37,460
systems like in any other system so

684
00:28:35,570 --> 00:28:39,409
design works when the functionality

685
00:28:37,460 --> 00:28:40,250
works as intended but the design is bad

686
00:28:39,410 --> 00:28:42,620
so it can be

687
00:28:40,250 --> 00:28:45,380
use Bennett Acura and software Brooks

688
00:28:42,620 --> 00:28:48,530
when the design is good is safe but but

689
00:28:45,380 --> 00:28:49,790
the implementation is not okay so you

690
00:28:48,530 --> 00:28:51,770
can find this back either in the

691
00:28:49,790 --> 00:28:53,600
blockchain in platform itself

692
00:28:51,770 --> 00:28:56,350
or in the car in the code that runs on

693
00:28:53,600 --> 00:28:59,389
top of it like in e TM smart contracts

694
00:28:56,350 --> 00:29:01,520
so what a sonata ker you can target to

695
00:28:59,390 --> 00:29:04,580
the wallets where the money is directly

696
00:29:01,520 --> 00:29:06,740
all the nodes of the network that will

697
00:29:04,580 --> 00:29:09,530
vary the transaction and authorized

698
00:29:06,740 --> 00:29:12,590
authorized transactions so generally

699
00:29:09,530 --> 00:29:16,340
kind of agnostic of proof of or proof of

700
00:29:12,590 --> 00:29:18,199
stake and so yeah so not recursive

701
00:29:16,340 --> 00:29:20,870
what's your main motivation so of course

702
00:29:18,200 --> 00:29:24,710
you want to be rich you want to get free

703
00:29:20,870 --> 00:29:26,510
money because it's so hard to walk so

704
00:29:24,710 --> 00:29:28,820
you can do this in different ways you

705
00:29:26,510 --> 00:29:31,010
can directly steal people's keys so if I

706
00:29:28,820 --> 00:29:32,659
steal your key I can sign checks on your

707
00:29:31,010 --> 00:29:35,090
behalf I can steal all your money most

708
00:29:32,660 --> 00:29:36,860
of the time and it's not like in a bank

709
00:29:35,090 --> 00:29:39,199
when you have a warning you have an

710
00:29:36,860 --> 00:29:41,300
alert system qtz centralized it's free

711
00:29:39,200 --> 00:29:43,370
it's democratic so you can freely you

712
00:29:41,300 --> 00:29:47,360
can steal anyone's money without any any

713
00:29:43,370 --> 00:29:50,270
warning another way to to get free money

714
00:29:47,360 --> 00:29:52,610
is just to issue transactions on someone

715
00:29:50,270 --> 00:29:54,080
else's behalf but sometimes you can do

716
00:29:52,610 --> 00:29:58,580
it without having access to that to the

717
00:29:54,080 --> 00:30:00,250
private keys and the last the last way

718
00:29:58,580 --> 00:30:02,330
to do it is like the Robin Hood way is

719
00:30:00,250 --> 00:30:05,900
not stealing anyone's money but just

720
00:30:02,330 --> 00:30:07,340
creating coins out of thin air for

721
00:30:05,900 --> 00:30:10,790
example with doubles double spend like

722
00:30:07,340 --> 00:30:13,879
attacks so attackers might want to do

723
00:30:10,790 --> 00:30:17,060
part of things I do as lock us out of

724
00:30:13,880 --> 00:30:19,460
their account or just no point out the

725
00:30:17,060 --> 00:30:20,929
shortcoming of another platform for to

726
00:30:19,460 --> 00:30:22,730
harm the reputation and maybe shot the

727
00:30:20,930 --> 00:30:28,750
coin this kind of this kind of operation

728
00:30:22,730 --> 00:30:31,730
so listen then maybe not the 10 worst

729
00:30:28,750 --> 00:30:34,190
bugs but 10 of the yeah of the most

730
00:30:31,730 --> 00:30:35,930
dramatic issues so he may know some of

731
00:30:34,190 --> 00:30:38,780
some of these are pretty pretty well

732
00:30:35,930 --> 00:30:43,040
known so this one was ridiculous it's in

733
00:30:38,780 --> 00:30:44,090
20 2010 there was a bug in in Bitcoin so

734
00:30:43,040 --> 00:30:46,850
you know a bit conference action is

735
00:30:44,090 --> 00:30:48,678
essentially a list of input when it

736
00:30:46,850 --> 00:30:50,620
comes in and outputs the money goes out

737
00:30:48,679 --> 00:30:52,890
to other accounts

738
00:30:50,620 --> 00:30:55,899
so he won that the money that is spent

739
00:30:52,890 --> 00:30:58,540
his utmost the the money that goes out

740
00:30:55,900 --> 00:31:00,130
is at most money that that comes in so

741
00:30:58,540 --> 00:31:03,970
you have to check the output transaction

742
00:31:00,130 --> 00:31:06,520
the total is not bigger that the money

743
00:31:03,970 --> 00:31:08,830
that you you have to spend here the

744
00:31:06,520 --> 00:31:11,230
problem is that there was a an integer

745
00:31:08,830 --> 00:31:14,439
overflow so if you had a too big a

746
00:31:11,230 --> 00:31:16,750
number if the Sun made a tubing number

747
00:31:14,440 --> 00:31:18,880
and it would wrap around the integer

748
00:31:16,750 --> 00:31:20,050
type and instead of giving a huge number

749
00:31:18,880 --> 00:31:22,210
it would give a ridiculously small

750
00:31:20,050 --> 00:31:23,800
number and the validation would be an

751
00:31:22,210 --> 00:31:26,440
woody bus and the transaction will be

752
00:31:23,800 --> 00:31:29,970
authorized and all this money would go

753
00:31:26,440 --> 00:31:32,559
would go somewhere so this huge amount I

754
00:31:29,970 --> 00:31:37,750
don't know how many billions were

755
00:31:32,559 --> 00:31:40,360
created out of nothing so the good part

756
00:31:37,750 --> 00:31:44,350
is that this was fixed within only five

757
00:31:40,360 --> 00:31:48,699
hours and patched and nobody's money was

758
00:31:44,350 --> 00:31:52,899
on were stolen so and since this bug in

759
00:31:48,700 --> 00:31:57,880
2010 there been any any bugs of this

760
00:31:52,900 --> 00:32:00,220
Alice level so this may be the the best

761
00:31:57,880 --> 00:32:02,830
known bug on any terms a technically not

762
00:32:00,220 --> 00:32:06,730
on aetherium but on a smart contract

763
00:32:02,830 --> 00:32:10,800
that was running on top off um it was

764
00:32:06,730 --> 00:32:12,730
the DAO Dino what it stands for

765
00:32:10,800 --> 00:32:14,620
democratic or no decentralized

766
00:32:12,730 --> 00:32:16,809
autonomous organization some like this

767
00:32:14,620 --> 00:32:18,760
so I won't go into the details because

768
00:32:16,809 --> 00:32:21,280
pretty technical you have to understand

769
00:32:18,760 --> 00:32:24,100
how the smart contract programming

770
00:32:21,280 --> 00:32:27,610
paradigm walks but so I try to simplify

771
00:32:24,100 --> 00:32:30,428
as much as I could and have differing ID

772
00:32:27,610 --> 00:32:32,500
so the attacker is writing another smart

773
00:32:30,429 --> 00:32:35,500
contract that will attack the victim

774
00:32:32,500 --> 00:32:37,300
smart contract and the way it works is

775
00:32:35,500 --> 00:32:39,520
like the attacker will pretend to

776
00:32:37,300 --> 00:32:42,129
withdraw money from the contract that is

777
00:32:39,520 --> 00:32:44,200
attacked and then this contract will

778
00:32:42,130 --> 00:32:46,059
sing that it has less money than it

779
00:32:44,200 --> 00:32:47,860
actually actually has and then the

780
00:32:46,059 --> 00:32:50,710
attacker will kind of steal a difference

781
00:32:47,860 --> 00:32:53,010
okay I don't know if it makes any sense

782
00:32:50,710 --> 00:32:56,950
because it's it's far from the technical

783
00:32:53,010 --> 00:33:00,879
aspects but to fix it it you just have

784
00:32:56,950 --> 00:33:02,740
to issue this patch so just modify is

785
00:33:00,880 --> 00:33:03,920
really two characters in the in the

786
00:33:02,740 --> 00:33:06,590
smart contract

787
00:33:03,920 --> 00:33:07,700
and I think maybe like 60 you know how

788
00:33:06,590 --> 00:33:11,480
many millions of hitter where were

789
00:33:07,700 --> 00:33:13,310
stolen but quite a lot so what the

790
00:33:11,480 --> 00:33:16,430
Corazon is not the programmers who are

791
00:33:13,310 --> 00:33:18,200
stupid is that smart programming smart

792
00:33:16,430 --> 00:33:21,320
girl smart contract programming stories

793
00:33:18,200 --> 00:33:23,600
it's very hard it's a relatively new

794
00:33:21,320 --> 00:33:25,490
program compared to the programming we

795
00:33:23,600 --> 00:33:28,669
used to and there's been a lot of lot of

796
00:33:25,490 --> 00:33:30,530
bugs so it's good to have security

797
00:33:28,670 --> 00:33:32,390
security audits now if you write smart

798
00:33:30,530 --> 00:33:35,180
contract you can use some of these

799
00:33:32,390 --> 00:33:37,430
libraries that that get you like safer

800
00:33:35,180 --> 00:33:41,060
it Mattia core safe here's a 20

801
00:33:37,430 --> 00:33:42,680
interface one way to mitigate this risk

802
00:33:41,060 --> 00:33:46,520
is that what smart contract they give

803
00:33:42,680 --> 00:33:47,840
you like turing-complete expressivity so

804
00:33:46,520 --> 00:33:50,560
you might want to have something that's

805
00:33:47,840 --> 00:33:54,470
an in-between turing completeness and

806
00:33:50,560 --> 00:33:56,240
bitcoin strip for example is expressive

807
00:33:54,470 --> 00:33:59,450
enough to do some useful stuff but not

808
00:33:56,240 --> 00:34:03,140
too expressive that it allows what is

809
00:33:59,450 --> 00:34:06,530
the tax due to work this one is one of

810
00:34:03,140 --> 00:34:10,820
my favorites because it's some it's very

811
00:34:06,530 --> 00:34:13,580
nice very simple bug and very very

812
00:34:10,820 --> 00:34:16,700
powerful so the zero current project

813
00:34:13,580 --> 00:34:18,199
which is it starts from the same ideas

814
00:34:16,699 --> 00:34:21,908
she catches zero cash that you may know

815
00:34:18,199 --> 00:34:24,109
so it started from an academic paper and

816
00:34:21,909 --> 00:34:26,690
the people who wrote it the academic

817
00:34:24,110 --> 00:34:29,510
paper is said okay we have this POC

818
00:34:26,690 --> 00:34:32,330
experimental piece of code but please

819
00:34:29,510 --> 00:34:34,190
don't use ethics it's experimental don't

820
00:34:32,330 --> 00:34:37,250
just don't use it and of course people

821
00:34:34,190 --> 00:34:39,860
used it and they created their own block

822
00:34:37,250 --> 00:34:41,480
chains econ and and vivix sync one is

823
00:34:39,860 --> 00:34:44,870
the fork of the other asking vivix fork

824
00:34:41,480 --> 00:34:48,050
of the coin so yeah when you spend a

825
00:34:44,870 --> 00:34:49,549
coin so you want to spend it only once

826
00:34:48,050 --> 00:34:52,880
because you want to avoid this double

827
00:34:49,550 --> 00:34:56,330
spend problem so in this system each

828
00:34:52,880 --> 00:34:58,700
coin had a serial number so the first

829
00:34:56,330 --> 00:35:02,600
thing you do is check that this certain

830
00:34:58,700 --> 00:35:04,279
number hasn't been used previously so

831
00:35:02,600 --> 00:35:06,080
you'd have different cones different

832
00:35:04,280 --> 00:35:10,190
numbers okay they have different cell

833
00:35:06,080 --> 00:35:12,529
numbers so I can spend this one but then

834
00:35:10,190 --> 00:35:13,990
in the second step you would have a kind

835
00:35:12,530 --> 00:35:16,820
of cryptographic zero knowledge proof

836
00:35:13,990 --> 00:35:18,439
why you would use this err number

837
00:35:16,820 --> 00:35:21,560
in the proof to create the actual

838
00:35:18,440 --> 00:35:23,960
transaction and thus the product will

839
00:35:21,560 --> 00:35:25,940
actually authorize you to spend to

840
00:35:23,960 --> 00:35:27,710
actually spend the money the problem is

841
00:35:25,940 --> 00:35:30,110
that in the second check the journal

842
00:35:27,710 --> 00:35:33,710
number as an integer as a big integer

843
00:35:30,110 --> 00:35:35,150
was reduced modulo Q so from potentially

844
00:35:33,710 --> 00:35:37,640
big number you would get a smaller

845
00:35:35,150 --> 00:35:40,610
number and when you make a reduction so

846
00:35:37,640 --> 00:35:42,859
modulo Q in this case you can easily

847
00:35:40,610 --> 00:35:45,710
find different numbers that map to the

848
00:35:42,860 --> 00:35:48,440
same value so what the attacker could do

849
00:35:45,710 --> 00:35:51,080
is find different serial numbers that

850
00:35:48,440 --> 00:35:52,850
were equivalent mob modulo Q there by

851
00:35:51,080 --> 00:35:56,150
passing the first check but when do in

852
00:35:52,850 --> 00:35:57,770
the second check that the same the same

853
00:35:56,150 --> 00:36:00,080
coin could be used several times so it

854
00:35:57,770 --> 00:36:02,780
was not just double spend but a mini

855
00:36:00,080 --> 00:36:04,520
span attack and then again the fix were

856
00:36:02,780 --> 00:36:07,910
just one niner of course checking that

857
00:36:04,520 --> 00:36:11,000
the zone number was smaller than the GU

858
00:36:07,910 --> 00:36:14,120
powder which is which is Q okay I don't

859
00:36:11,000 --> 00:36:16,430
know if this was actually exploited but

860
00:36:14,120 --> 00:36:20,029
I presume it was but I don't have any

861
00:36:16,430 --> 00:36:21,919
any evidence of it okay so here we can

862
00:36:20,030 --> 00:36:26,810
blame cryptography and cryptic referrals

863
00:36:21,920 --> 00:36:28,580
because it's so complex and Regina but

864
00:36:26,810 --> 00:36:31,370
maybe the biggest lesson is like if

865
00:36:28,580 --> 00:36:32,900
people do not use that code maybe don't

866
00:36:31,370 --> 00:36:35,720
don't use it especially if there's like

867
00:36:32,900 --> 00:36:36,260
millions of money protected by your by

868
00:36:35,720 --> 00:36:40,580
your coder

869
00:36:36,260 --> 00:36:44,780
oh this one is fun too because it's so

870
00:36:40,580 --> 00:36:46,610
bad I found it in the last year and it's

871
00:36:44,780 --> 00:36:49,160
it's a design design bug it's not a

872
00:36:46,610 --> 00:36:52,070
software bug the problem is that the

873
00:36:49,160 --> 00:36:54,109
address is in liske which is kind of

874
00:36:52,070 --> 00:36:56,720
smart contract plot from walking in in a

875
00:36:54,110 --> 00:37:00,260
kind of JavaScript the addresses are

876
00:36:56,720 --> 00:37:02,029
only knowing of 64 bits so if you know a

877
00:37:00,260 --> 00:37:03,860
little bit of crypto you know that 64

878
00:37:02,030 --> 00:37:06,380
bit is relatively small if you want to

879
00:37:03,860 --> 00:37:08,930
find collisions if you want to find two

880
00:37:06,380 --> 00:37:10,820
values that map to the same address so

881
00:37:08,930 --> 00:37:14,509
specifically in this case it was fairly

882
00:37:10,820 --> 00:37:16,160
easy to find different keys to two pairs

883
00:37:14,510 --> 00:37:18,470
of one pair of public/private key

884
00:37:16,160 --> 00:37:19,790
another pair of public private key two

885
00:37:18,470 --> 00:37:23,629
pairs of keys that map to the same

886
00:37:19,790 --> 00:37:26,509
address so in other words you have two

887
00:37:23,630 --> 00:37:29,000
keys two signatures that could allow you

888
00:37:26,510 --> 00:37:34,280
to spend money of a given account

889
00:37:29,000 --> 00:37:35,720
and then he if you want to find let's

890
00:37:34,280 --> 00:37:37,820
say you can find also what we call per

891
00:37:35,720 --> 00:37:40,669
image if you given an address it was

892
00:37:37,820 --> 00:37:41,420
relatively not extremely extremely hard

893
00:37:40,670 --> 00:37:43,520
to find

894
00:37:41,420 --> 00:37:45,859
a key that maps to a given address and

895
00:37:43,520 --> 00:37:49,099
once you've found a key that corresponds

896
00:37:45,859 --> 00:37:50,690
to an already used address then you can

897
00:37:49,099 --> 00:37:51,920
steal people's money by sign checks on

898
00:37:50,690 --> 00:37:54,470
their behalf because your private key

899
00:37:51,920 --> 00:37:55,880
map to this address and it's really

900
00:37:54,470 --> 00:37:58,040
really bad and it can be bad the only

901
00:37:55,880 --> 00:38:00,980
way to mitigate it is when you receive

902
00:37:58,040 --> 00:38:03,320
money to make at least one one

903
00:38:00,980 --> 00:38:04,849
transaction but if you have a cold

904
00:38:03,320 --> 00:38:06,770
storage you would only receive money you

905
00:38:04,849 --> 00:38:08,480
will never spend it so you had many

906
00:38:06,770 --> 00:38:10,940
accounts that had like literally

907
00:38:08,480 --> 00:38:15,349
millions of dollars worth of these

908
00:38:10,940 --> 00:38:16,580
tokens that were vulnerable and it's

909
00:38:15,349 --> 00:38:20,000
still not fixed I mean you can still

910
00:38:16,580 --> 00:38:21,740
explain it so the only thing that the

911
00:38:20,000 --> 00:38:23,900
least people can do is publish an

912
00:38:21,740 --> 00:38:26,118
advisory where they they say okay

913
00:38:23,900 --> 00:38:28,310
there's this risk and to mitigate it

914
00:38:26,119 --> 00:38:31,849
please issue transaction and then your

915
00:38:28,310 --> 00:38:34,009
can would be predicted okay so I think

916
00:38:31,849 --> 00:38:36,859
it's to be only really about design

917
00:38:34,010 --> 00:38:38,660
cryptography I mean I don't know what

918
00:38:36,859 --> 00:38:41,060
they were doing and they had other

919
00:38:38,660 --> 00:38:45,799
security issues where you had to send

920
00:38:41,060 --> 00:38:47,180
your secret key to to a node to do

921
00:38:45,800 --> 00:38:50,359
whatever I mean it was really really bad

922
00:38:47,180 --> 00:38:52,310
when I looked at it last year parity

923
00:38:50,359 --> 00:38:54,710
this really surprised me because parity

924
00:38:52,310 --> 00:38:57,799
is one of the best-known organizations

925
00:38:54,710 --> 00:38:59,480
in the Durham community they have really

926
00:38:57,800 --> 00:39:02,030
brilliant people who know a lot of a

927
00:38:59,480 --> 00:39:05,390
smart contract but nobody's perfect and

928
00:39:02,030 --> 00:39:07,280
they had this library which was

929
00:39:05,390 --> 00:39:09,140
essentially a smart contract but the

930
00:39:07,280 --> 00:39:10,940
owner of the library was not initialized

931
00:39:09,140 --> 00:39:13,129
so someone could just took over the

932
00:39:10,940 --> 00:39:15,980
smart contract library and run a

933
00:39:13,130 --> 00:39:20,359
function called init word and they could

934
00:39:15,980 --> 00:39:22,430
freeze this library and the consequence

935
00:39:20,359 --> 00:39:25,220
is that all the applications that were

936
00:39:22,430 --> 00:39:27,919
using this library were frozen as well

937
00:39:25,220 --> 00:39:30,618
so all the words that were related to

938
00:39:27,920 --> 00:39:31,849
this library we're essentially dead and

939
00:39:30,619 --> 00:39:35,320
the money was lost

940
00:39:31,849 --> 00:39:37,480
ten minutes perfect

941
00:39:35,320 --> 00:39:40,000
see smart contract is hard even if you

942
00:39:37,480 --> 00:39:42,820
were very familiar with a smart

943
00:39:40,000 --> 00:39:44,620
contractor programming I need when funny

944
00:39:42,820 --> 00:39:46,990
part is that the bug actually comes from

945
00:39:44,620 --> 00:39:49,480
a patch that was fixing another

946
00:39:46,990 --> 00:39:51,490
vulnerability so that's one problem in a

947
00:39:49,480 --> 00:39:53,440
many times when people budget rarities

948
00:39:51,490 --> 00:39:55,180
they they're bit under pressure they try

949
00:39:53,440 --> 00:40:00,640
to write up as fast as fast as possible

950
00:39:55,180 --> 00:40:03,160
and sometimes you know all the QA code

951
00:40:00,640 --> 00:40:04,629
review testing is not properly done so

952
00:40:03,160 --> 00:40:07,830
it's not the first time that I see you

953
00:40:04,630 --> 00:40:11,950
know a bug in a pattern

954
00:40:07,830 --> 00:40:14,160
okay iota that's very sensitive matter

955
00:40:11,950 --> 00:40:16,990
so we'll try to used it the right form

956
00:40:14,160 --> 00:40:18,430
so I oh that's not technically it's not

957
00:40:16,990 --> 00:40:20,259
technically blocked and you know and the

958
00:40:18,430 --> 00:40:22,419
web side say we don't have a chain we

959
00:40:20,260 --> 00:40:24,730
don't have blocks we are it's a bit

960
00:40:22,420 --> 00:40:26,980
different small like a graph there's

961
00:40:24,730 --> 00:40:28,900
some other details like the internally

962
00:40:26,980 --> 00:40:31,920
they use what I call ternary encoding

963
00:40:28,900 --> 00:40:34,720
with zero one two instead of zero one

964
00:40:31,920 --> 00:40:36,040
that doesn't matter much what's more

965
00:40:34,720 --> 00:40:37,990
interesting is that the use possible

966
00:40:36,040 --> 00:40:40,660
time signature so they don't use ECDSA

967
00:40:37,990 --> 00:40:41,859
like bhatia room they use something

968
00:40:40,660 --> 00:40:45,129
different that could be resistant to

969
00:40:41,860 --> 00:40:47,130
quantum computers and internally this

970
00:40:45,130 --> 00:40:49,210
type of post quantum sensor data use

971
00:40:47,130 --> 00:40:50,980
it's a socially based on a hash function

972
00:40:49,210 --> 00:40:53,530
it's essentially only hash function

973
00:40:50,980 --> 00:40:55,360
computations so we have many good

974
00:40:53,530 --> 00:40:57,010
cryptographic hash functions out there

975
00:40:55,360 --> 00:40:59,440
we have shot-to-shot three black too

976
00:40:57,010 --> 00:41:01,360
many others but in this context they

977
00:40:59,440 --> 00:41:03,850
want something that that'd be very very

978
00:41:01,360 --> 00:41:09,160
efficient so they design their own Devon

979
00:41:03,850 --> 00:41:11,319
heart function and whose called cure so

980
00:41:09,160 --> 00:41:13,509
they created the hash function but the

981
00:41:11,320 --> 00:41:15,610
problem is as you may know one of the

982
00:41:13,510 --> 00:41:17,140
criteria of a secure hash is that it

983
00:41:15,610 --> 00:41:18,460
should be hard to find collisions so

984
00:41:17,140 --> 00:41:20,950
collision is two different messages and

985
00:41:18,460 --> 00:41:23,830
not to the same hash value so for

986
00:41:20,950 --> 00:41:28,259
example it should be hard to find m1 and

987
00:41:23,830 --> 00:41:33,100
m2 that H of M 1 is equal to H of M 2

988
00:41:28,260 --> 00:41:35,100
but in iota the hash was not collision

989
00:41:33,100 --> 00:41:38,770
resistant and they didn't know it and

990
00:41:35,100 --> 00:41:40,440
cryptographer found it and when

991
00:41:38,770 --> 00:41:43,300
cryptographers found is there are like

992
00:41:40,440 --> 00:41:44,850
mine it's already closed it's it's

993
00:41:43,300 --> 00:41:47,710
relatively easy to design a city or hush

994
00:41:44,850 --> 00:41:48,549
but then one was so weak that it was

995
00:41:47,710 --> 00:41:51,670
really you know from the

996
00:41:48,549 --> 00:41:54,759
perspective of cryptographers really bad

997
00:41:51,670 --> 00:41:57,130
really embarrassing and from this

998
00:41:54,759 --> 00:41:59,170
there's been huge drama online on

999
00:41:57,130 --> 00:42:00,849
Twitter and other places because from

1000
00:41:59,170 --> 00:42:03,449
the perspective of cryptographers it was

1001
00:42:00,849 --> 00:42:05,739
a disaster it was really a silly mistake

1002
00:42:03,449 --> 00:42:07,779
but from the perspective of the iota

1003
00:42:05,739 --> 00:42:10,269
people it was not that bad because it

1004
00:42:07,779 --> 00:42:13,660
was not straight for what to exploit so

1005
00:42:10,269 --> 00:42:15,729
they exploited you needed to tell

1006
00:42:13,660 --> 00:42:17,949
someone to sign something on your behalf

1007
00:42:15,729 --> 00:42:20,799
and then to authorize you to broadcast

1008
00:42:17,949 --> 00:42:24,069
it on their behalf it's early not a

1009
00:42:20,799 --> 00:42:25,719
typical scenario but still cryptography

1010
00:42:24,069 --> 00:42:28,808
speaking it was really bad so a single

1011
00:42:25,719 --> 00:42:31,329
BD iota people did not acknowledge the

1012
00:42:28,809 --> 00:42:34,420
amplitude of the of the problem and

1013
00:42:31,329 --> 00:42:36,249
maybe cryptographers can often nor the

1014
00:42:34,420 --> 00:42:38,709
fact that it was hard to exploit and

1015
00:42:36,249 --> 00:42:42,249
then it became very emotional and people

1016
00:42:38,709 --> 00:42:44,859
called themselves Donna Howerton okay so

1017
00:42:42,249 --> 00:42:47,799
I would have fixed it well in the fix

1018
00:42:44,859 --> 00:42:50,979
then they use something and essentially

1019
00:42:47,799 --> 00:42:55,239
you scape shock or shastri but and

1020
00:42:50,979 --> 00:42:57,459
nothing is safe but well anyways I don't

1021
00:42:55,239 --> 00:43:00,999
know who's to blame here specifically

1022
00:42:57,459 --> 00:43:02,198
but I mean you just don't do this you

1023
00:43:00,999 --> 00:43:04,390
just don't create a new hash function

1024
00:43:02,199 --> 00:43:05,979
without any security audit without any

1025
00:43:04,390 --> 00:43:07,808
review by any cryptographer without any

1026
00:43:05,979 --> 00:43:09,959
peer review and just put it out on your

1027
00:43:07,809 --> 00:43:12,910
blockchain where literally billions

1028
00:43:09,959 --> 00:43:14,229
worth of money are protected I mean I

1029
00:43:12,910 --> 00:43:16,569
will not do it I mean I've been doing

1030
00:43:14,229 --> 00:43:19,029
crypto for 12 years and quite confident

1031
00:43:16,569 --> 00:43:21,038
about my Kryptonian cryptography skills

1032
00:43:19,029 --> 00:43:25,779
but I would never do this

1033
00:43:21,039 --> 00:43:27,489
Cersei so on the one hand it was kind of

1034
00:43:25,779 --> 00:43:31,269
PR disaster fire but the token value

1035
00:43:27,489 --> 00:43:33,189
didn't suffer much so I encourage you to

1036
00:43:31,269 --> 00:43:35,919
look Mariota because it's very different

1037
00:43:33,189 --> 00:43:39,609
from the rest and I think it needs more

1038
00:43:35,920 --> 00:43:44,019
more review of the of the protocol yeah

1039
00:43:39,609 --> 00:43:45,640
this was ridiculous did the verification

1040
00:43:44,019 --> 00:43:48,249
the check that you had enough money to

1041
00:43:45,640 --> 00:43:49,660
spend when issuing transaction was

1042
00:43:48,249 --> 00:43:53,049
another on the client side instead of

1043
00:43:49,660 --> 00:43:55,839
the server side so you can just modify

1044
00:43:53,049 --> 00:43:58,059
your client and say okay always return

1045
00:43:55,839 --> 00:43:59,700
yes when I'm asked if I have enough

1046
00:43:58,059 --> 00:44:04,320
money to spend on

1047
00:43:59,700 --> 00:44:04,859
what cone was it xrb honking batch of a

1048
00:44:04,320 --> 00:44:08,130
flaw

1049
00:44:04,860 --> 00:44:10,710
it was very nice in the java flow so in

1050
00:44:08,130 --> 00:44:12,570
the context of I see us people sometimes

1051
00:44:10,710 --> 00:44:15,120
have to distribute mini tokens to many

1052
00:44:12,570 --> 00:44:17,640
people so instead of doing end

1053
00:44:15,120 --> 00:44:20,279
transactions for n people they created

1054
00:44:17,640 --> 00:44:22,650
this batch transfer function where you

1055
00:44:20,280 --> 00:44:27,510
would send the same value underscore

1056
00:44:22,650 --> 00:44:30,090
value here to a list of receivers so if

1057
00:44:27,510 --> 00:44:33,450
you want to send the number let's say n

1058
00:44:30,090 --> 00:44:37,260
bitcoins to n people you need to have at

1059
00:44:33,450 --> 00:44:39,810
least n times m tokens in your account

1060
00:44:37,260 --> 00:44:42,660
in your inner wallet but what if n times

1061
00:44:39,810 --> 00:44:44,820
M is so big that it will overflow the

1062
00:44:42,660 --> 00:44:47,940
integer type so that's what happened

1063
00:44:44,820 --> 00:44:50,520
here in the red rectangle do you mount

1064
00:44:47,940 --> 00:44:54,270
the total amount of a fraud the UN 2 5 6

1065
00:44:50,520 --> 00:44:56,610
type and the check that do count had

1066
00:44:54,270 --> 00:44:59,730
enough money of course was validated and

1067
00:44:56,610 --> 00:45:01,740
lots of money could be could be could be

1068
00:44:59,730 --> 00:45:03,840
created scan of another double span but

1069
00:45:01,740 --> 00:45:05,970
they were just creating money out out of

1070
00:45:03,840 --> 00:45:08,250
snare here okay and it's the kind of

1071
00:45:05,970 --> 00:45:10,709
thing that sir since you're doing a

1072
00:45:08,250 --> 00:45:14,400
security oh did you find this in five

1073
00:45:10,710 --> 00:45:16,100
minutes we have five minutes left by the

1074
00:45:14,400 --> 00:45:18,720
way so let's skip this one

1075
00:45:16,100 --> 00:45:20,310
it's a cryptocurrency where they'd all

1076
00:45:18,720 --> 00:45:22,589
have a white paper but the black paper

1077
00:45:20,310 --> 00:45:25,650
and they have the matterhorn on that

1078
00:45:22,590 --> 00:45:27,930
page which looks Swiss and it's maybe

1079
00:45:25,650 --> 00:45:30,690
supposed to inspire trust but it was

1080
00:45:27,930 --> 00:45:33,299
very weak in the sense that the

1081
00:45:30,690 --> 00:45:35,550
difficulty of mining was based on the

1082
00:45:33,300 --> 00:45:37,260
time stamps received so if you have a

1083
00:45:35,550 --> 00:45:40,800
security class the first thing you do is

1084
00:45:37,260 --> 00:45:42,690
like do not trust potentially my source

1085
00:45:40,800 --> 00:45:45,300
input and sanitize untrusted input and

1086
00:45:42,690 --> 00:45:47,910
they weren't doing this so attacker

1087
00:45:45,300 --> 00:45:50,790
could artificially reduce the difficulty

1088
00:45:47,910 --> 00:45:53,160
of something ridiculously low and mine

1089
00:45:50,790 --> 00:45:56,430
lots of bitcoins lots of discounts very

1090
00:45:53,160 --> 00:45:59,670
easily okay that's

1091
00:45:56,430 --> 00:46:02,759
berga found in a utility charging keys I

1092
00:45:59,670 --> 00:46:07,050
will skip this one just to not go over

1093
00:46:02,760 --> 00:46:09,660
time the problem is that you give a seed

1094
00:46:07,050 --> 00:46:11,770
of sati to bite but it was only actually

1095
00:46:09,660 --> 00:46:15,399
using the first 16 bytes

1096
00:46:11,770 --> 00:46:17,470
because the APR silly bad by default it

1097
00:46:15,400 --> 00:46:20,680
only took 16 bytes and you got to

1098
00:46:17,470 --> 00:46:23,799
specify explicitly if you wanted more

1099
00:46:20,680 --> 00:46:24,279
bytes to be an to be used from from the

1100
00:46:23,800 --> 00:46:26,680
lucida

1101
00:46:24,280 --> 00:46:29,380
so it's an NLP I design a problem in a

1102
00:46:26,680 --> 00:46:31,480
way we fixed it okay so don't use a

1103
00:46:29,380 --> 00:46:34,300
random open source project in your

1104
00:46:31,480 --> 00:46:35,800
introduction you know if you look at all

1105
00:46:34,300 --> 00:46:37,990
these you know not you not yes

1106
00:46:35,800 --> 00:46:39,670
applications they have huge dependency

1107
00:46:37,990 --> 00:46:43,209
trees and you will always find something

1108
00:46:39,670 --> 00:46:45,210
that isn't secure or replicated sorry to

1109
00:46:43,210 --> 00:46:47,530
conclude with this talk I think there's

1110
00:46:45,210 --> 00:46:49,710
many many more bugs to be found to be

1111
00:46:47,530 --> 00:46:52,000
found because there's like lot of code

1112
00:46:49,710 --> 00:46:54,690
very complex code new protocols

1113
00:46:52,000 --> 00:46:56,860
sometimes unsafe languages that I used

1114
00:46:54,690 --> 00:46:59,020
also deployment is sometimes a bit

1115
00:46:56,860 --> 00:47:01,030
rushed the key way that this thing is

1116
00:46:59,020 --> 00:47:03,070
not always properly done a lot of sort

1117
00:47:01,030 --> 00:47:06,369
of party dependencies so really all the

1118
00:47:03,070 --> 00:47:09,520
recipe for disaster just a recent

1119
00:47:06,369 --> 00:47:11,860
example is us so it was a CCPP

1120
00:47:09,520 --> 00:47:14,259
application thing around a million lines

1121
00:47:11,860 --> 00:47:16,119
of course is huge and they have all

1122
00:47:14,260 --> 00:47:18,130
these features so low overhead Byzantine

1123
00:47:16,119 --> 00:47:21,330
fault tolerance low latency bla

1124
00:47:18,130 --> 00:47:24,070
confirmation space at a like the end

1125
00:47:21,330 --> 00:47:29,100
time dinner security biometric hardware

1126
00:47:24,070 --> 00:47:32,560
secured keys and of course what happened

1127
00:47:29,100 --> 00:47:36,250
literally a few days weeks after it was

1128
00:47:32,560 --> 00:47:38,380
launched really you know a scary but I

1129
00:47:36,250 --> 00:47:41,190
found like enough see a remote code

1130
00:47:38,380 --> 00:47:45,220
execution by the vulcans risks T team

1131
00:47:41,190 --> 00:47:47,320
Guido Franken found many bugs by fuzzing

1132
00:47:45,220 --> 00:47:49,419
he made one twenty thousand dollars in a

1133
00:47:47,320 --> 00:47:52,990
week by finding twelve bucks each that

1134
00:47:49,420 --> 00:47:55,930
was rewarded 10k hacker explodes bedding

1135
00:47:52,990 --> 00:48:00,040
platforms to win jackpot 24 times so you

1136
00:47:55,930 --> 00:48:02,649
know so yeah I don't know if they had

1137
00:48:00,040 --> 00:48:05,440
security audits or not yeah so I'm

1138
00:48:02,650 --> 00:48:08,619
fishing so I'm doing security audits as

1139
00:48:05,440 --> 00:48:11,740
a day job but it's not a panacea I mean

1140
00:48:08,619 --> 00:48:13,410
we only can only find so much we won't

1141
00:48:11,740 --> 00:48:15,540
find all the bugs

1142
00:48:13,410 --> 00:48:17,430
and yeah I don't know what's the right

1143
00:48:15,540 --> 00:48:21,810
way to do but you know hire good

1144
00:48:17,430 --> 00:48:23,279
programmers use automated tools but try

1145
00:48:21,810 --> 00:48:24,870
to be maybe conservative and not design

1146
00:48:23,280 --> 00:48:26,220
your own protocol because blocks and

1147
00:48:24,870 --> 00:48:29,339
people tend to reinvent everything or

1148
00:48:26,220 --> 00:48:31,980
invent probe or invent a TLS so try to

1149
00:48:29,340 --> 00:48:32,790
reuse what's already out there and then

1150
00:48:31,980 --> 00:48:33,970
hope for the best

1151
00:48:32,790 --> 00:48:42,830
okay thank you very much

1152
00:48:33,970 --> 00:48:42,830
[Applause]

