1
00:00:00,030 --> 00:00:05,130
hello everyone thanks for coming I'm

2
00:00:02,520 --> 00:00:07,740
twanda ting front ensign security SRAM

3
00:00:05,130 --> 00:00:09,320
lab and they are my colleagues wei wei

4
00:00:07,740 --> 00:00:12,599
and ji pung-ho

5
00:00:09,320 --> 00:00:15,870
so the colorful paper asked us to submit

6
00:00:12,599 --> 00:00:20,130
a cutting-edge research which is exactly

7
00:00:15,870 --> 00:00:22,830
what we did so it's that easy so this is

8
00:00:20,130 --> 00:00:24,720
our first time here at blackhat we are

9
00:00:22,830 --> 00:00:31,169
here to talk about internals and when

10
00:00:24,720 --> 00:00:33,450
abilities of Microsoft web browser so we

11
00:00:31,170 --> 00:00:35,969
all work at Tencent as security

12
00:00:33,450 --> 00:00:38,040
researchers jensen is the largest social

13
00:00:35,969 --> 00:00:40,050
media and entertainment company in China

14
00:00:38,040 --> 00:00:42,260
and to better understand the threat

15
00:00:40,050 --> 00:00:46,440
landscape and protect our user data and

16
00:00:42,260 --> 00:00:48,420
infrastructure tenzin security lab focus

17
00:00:46,440 --> 00:00:51,959
on applied security research in both

18
00:00:48,420 --> 00:00:54,149
software and hardware in 2017 we

19
00:00:51,960 --> 00:00:57,469
participated in the pendulum contest and

20
00:00:54,149 --> 00:01:00,239
is the winner of Microsoft edge category

21
00:00:57,469 --> 00:01:03,809
where we also have prepared for Pantone

22
00:01:00,239 --> 00:01:06,450
2018 to place in March this year however

23
00:01:03,809 --> 00:01:09,450
for regulatory reasons we could not

24
00:01:06,450 --> 00:01:12,570
participate instead we reported the

25
00:01:09,450 --> 00:01:14,100
vulnerabilities we discovered to nsrc so

26
00:01:12,570 --> 00:01:16,559
this talk will be based on the versions

27
00:01:14,100 --> 00:01:22,169
of Windows 10 when the vulnerabilities

28
00:01:16,560 --> 00:01:24,330
were first discovered in the next 50

29
00:01:22,170 --> 00:01:26,310
minutes we will first take a dive deeply

30
00:01:24,330 --> 00:01:29,310
into Microsoft edge architecture

31
00:01:26,310 --> 00:01:32,430
internals we will discuss the browser

32
00:01:29,310 --> 00:01:35,729
startup sequences and how add device and

33
00:01:32,430 --> 00:01:39,360
sawing privileges after that an overview

34
00:01:35,729 --> 00:01:41,369
of address IPC mechanisms and finally a

35
00:01:39,360 --> 00:01:46,110
detailed walkthrough of our bugs were

36
00:01:41,369 --> 00:01:48,540
prepared for pound two on Microsoft edge

37
00:01:46,110 --> 00:01:51,899
is the default web browser on Windows 10

38
00:01:48,540 --> 00:01:54,689
Microsoft says it is the faster safer

39
00:01:51,899 --> 00:01:56,909
way to get things down on the web it is

40
00:01:54,689 --> 00:02:00,148
a universal Windows platform app and

41
00:01:56,909 --> 00:02:01,740
more on that later it became one of the

42
00:02:00,149 --> 00:02:06,899
targets of the county-owned contest

43
00:02:01,740 --> 00:02:11,099
since 2016 Universal Windows platform

44
00:02:06,899 --> 00:02:12,870
apps or uwp apps are built with Windows

45
00:02:11,099 --> 00:02:16,079
runtime a vis or

46
00:02:12,870 --> 00:02:20,519
we are TLP ice which was introduced in

47
00:02:16,080 --> 00:02:24,870
Windows 8 we are T is layered on top of

48
00:02:20,519 --> 00:02:27,629
with 2 AP ideals from the security

49
00:02:24,870 --> 00:02:30,690
perspective you WP apps bouncing a new

50
00:02:27,629 --> 00:02:33,359
type of sandbox called app container app

51
00:02:30,690 --> 00:02:35,940
container introduces many isolation

52
00:02:33,360 --> 00:02:39,030
technologies such as securable object

53
00:02:35,940 --> 00:02:42,030
restrictions object namespace isolation

54
00:02:39,030 --> 00:02:44,549
global accountable restrictions and has

55
00:02:42,030 --> 00:02:48,239
the you IP i and network network

56
00:02:44,549 --> 00:02:50,640
isolation all these isolation techniques

57
00:02:48,239 --> 00:02:54,840
used the app containers load box token

58
00:02:50,640 --> 00:02:57,359
for access checking the Lodox token was

59
00:02:54,840 --> 00:02:59,720
also introduced in Windows 8 it has

60
00:02:57,360 --> 00:03:02,959
three important logical members

61
00:02:59,720 --> 00:03:07,709
integrity level at container set and

62
00:03:02,959 --> 00:03:10,110
capability sets or uwp apps runs at low

63
00:03:07,709 --> 00:03:14,069
integrity level and has a unique set and

64
00:03:10,110 --> 00:03:17,069
a list of capabilities windows use these

65
00:03:14,069 --> 00:03:19,679
members to determine if a new WPF has

66
00:03:17,069 --> 00:03:26,970
access to resources such as internet

67
00:03:19,680 --> 00:03:30,090
microphone or clipboard for most uwp

68
00:03:26,970 --> 00:03:32,760
apps one app container is enough this is

69
00:03:30,090 --> 00:03:37,859
true for other pre-installed apps such

70
00:03:32,760 --> 00:03:40,260
as calculator naps or OneNote however if

71
00:03:37,859 --> 00:03:43,500
a new WPF wants to further lock down the

72
00:03:40,260 --> 00:03:45,209
security it can also create another type

73
00:03:43,500 --> 00:03:48,630
of F container called child app

74
00:03:45,209 --> 00:03:50,849
container there are many operations that

75
00:03:48,630 --> 00:03:53,340
requires permissions not available in AB

76
00:03:50,849 --> 00:03:56,970
container such as reading or writing

77
00:03:53,340 --> 00:03:59,489
user files or accessing the clipboard so

78
00:03:56,970 --> 00:04:02,389
Microsoft edge needs brokers for its

79
00:03:59,489 --> 00:04:02,389
privileged operations

80
00:04:07,400 --> 00:04:11,900
this diagram illustrates the

81
00:04:09,750 --> 00:04:14,939
architecture of Microsoft edge

82
00:04:11,900 --> 00:04:18,239
the manager process with process name

83
00:04:14,939 --> 00:04:20,599
Microsoft edge exe is responsible for

84
00:04:18,238 --> 00:04:22,979
managing the renderer processes and

85
00:04:20,600 --> 00:04:26,370
implements basic functionalities of the

86
00:04:22,979 --> 00:04:29,190
browser the manager process runs in a

87
00:04:26,370 --> 00:04:31,949
tab container in fact it is probably the

88
00:04:29,190 --> 00:04:35,449
only browser with with its main process

89
00:04:31,949 --> 00:04:38,190
running in your app containers and docks

90
00:04:35,449 --> 00:04:40,889
there are several different types of

91
00:04:38,190 --> 00:04:43,500
renders in Microsoft edge they are also

92
00:04:40,889 --> 00:04:46,919
called the content process with process

93
00:04:43,500 --> 00:04:49,199
name Microsoft edge CP exe and running

94
00:04:46,919 --> 00:04:53,370
as a chart app containers of the manager

95
00:04:49,199 --> 00:04:56,310
process browser broker runtime broker

96
00:04:53,370 --> 00:04:58,130
and shell infrastructure host all runs

97
00:04:56,310 --> 00:05:00,750
with normal user privilege

98
00:04:58,130 --> 00:05:10,289
therefore they can perform privileged

99
00:05:00,750 --> 00:05:12,990
operations for Microsoft edge now we are

100
00:05:10,289 --> 00:05:15,630
going to talk about startup we are not

101
00:05:12,990 --> 00:05:18,030
going to cover every detail when we

102
00:05:15,630 --> 00:05:21,180
really care about is what privileges are

103
00:05:18,030 --> 00:05:26,489
send to each edge process especially the

104
00:05:21,180 --> 00:05:28,800
internet a see the manager process is

105
00:05:26,490 --> 00:05:31,460
the first to start a the process it's

106
00:05:28,800 --> 00:05:34,889
responsible for creating child processes

107
00:05:31,460 --> 00:05:37,979
let's see how it starts like traditional

108
00:05:34,889 --> 00:05:41,280
win32 applications double clicking or

109
00:05:37,979 --> 00:05:44,510
desktop shortcut starts direct but

110
00:05:41,280 --> 00:05:47,340
instead of directly creating new process

111
00:05:44,510 --> 00:05:50,849
explorer.exe since the activation

112
00:05:47,340 --> 00:05:53,159
request - as I host the exe as a host

113
00:05:50,849 --> 00:05:55,469
gets the request at the door to launch

114
00:05:53,159 --> 00:05:58,080
Microsoft edge and the activation

115
00:05:55,470 --> 00:06:01,590
request will be sent to our PC SS

116
00:05:58,080 --> 00:06:03,599
service there are pcs s will use

117
00:06:01,590 --> 00:06:06,929
Activision information to create a

118
00:06:03,599 --> 00:06:12,750
container process family or manager

119
00:06:06,930 --> 00:06:15,090
process it started by the RPC SS where

120
00:06:12,750 --> 00:06:17,550
those are pcs as guest activation

121
00:06:15,090 --> 00:06:19,619
information from the information isn't

122
00:06:17,550 --> 00:06:22,130
starting in registry

123
00:06:19,620 --> 00:06:25,170
it's dynamically loaded only if needed

124
00:06:22,130 --> 00:06:28,250
Activision information is stored in your

125
00:06:25,170 --> 00:06:31,980
packages directory under program data

126
00:06:28,250 --> 00:06:33,750
each apps activity activation

127
00:06:31,980 --> 00:06:36,180
information is stored in your staff

128
00:06:33,750 --> 00:06:39,930
directory named by packages full name

129
00:06:36,180 --> 00:06:42,810
your file named activation stored at the

130
00:06:39,930 --> 00:06:53,490
file would be loaded into registries

131
00:06:42,810 --> 00:06:57,270
through NT loader kex the data structure

132
00:06:53,490 --> 00:07:08,120
a similar would calm for example to

133
00:06:57,270 --> 00:07:08,120
active makers of that I'm sorry sorry

134
00:07:16,380 --> 00:07:18,380
Oh

135
00:07:19,000 --> 00:07:25,570
okay no tickets data structure similar

136
00:07:22,900 --> 00:07:28,659
with home for example to activity

137
00:07:25,570 --> 00:07:30,880
Microsoft edge we can look up the makers

138
00:07:28,660 --> 00:07:34,720
of the edge key under activity bill

139
00:07:30,880 --> 00:07:37,330
class ID here the activation height is 1

140
00:07:34,720 --> 00:07:40,000
which means out of process activation

141
00:07:37,330 --> 00:07:43,630
the server Vario because the server name

142
00:07:40,000 --> 00:07:45,760
we can get the executable path of the

143
00:07:43,630 --> 00:07:48,250
store they look up the server name under

144
00:07:45,760 --> 00:07:59,530
the server key which is Microsoft edge

145
00:07:48,250 --> 00:08:02,710
the exe after getting the activation

146
00:07:59,530 --> 00:08:05,229
information our pcs will start process

147
00:08:02,710 --> 00:08:07,299
creation the most important scene of

148
00:08:05,230 --> 00:08:11,020
creating up continual process is to

149
00:08:07,300 --> 00:08:14,260
create a low box token first a package

150
00:08:11,020 --> 00:08:17,080
each seed could be calculated from the

151
00:08:14,260 --> 00:08:19,900
package family name second care

152
00:08:17,080 --> 00:08:21,880
Templeton seeds for the process then

153
00:08:19,900 --> 00:08:24,700
create a low box token

154
00:08:21,880 --> 00:08:27,270
finally create process with these low

155
00:08:24,700 --> 00:08:30,760
box token

156
00:08:27,270 --> 00:08:35,309
where does the competitors come from

157
00:08:30,760 --> 00:08:38,650
we know each UWF has a appx manifest.xml

158
00:08:35,309 --> 00:08:41,588
which defends the needed competitors and

159
00:08:38,650 --> 00:08:44,020
there are two special cases the first

160
00:08:41,589 --> 00:08:48,220
one is a capability to access the

161
00:08:44,020 --> 00:08:51,550
package itself generated by package ec2

162
00:08:48,220 --> 00:08:54,580
package can be detected the techno one

163
00:08:51,550 --> 00:08:55,209
is cellular beta it's all computer to

164
00:08:54,580 --> 00:08:58,150
access

165
00:08:55,210 --> 00:09:03,610
cellular network our phone which was or

166
00:08:58,150 --> 00:09:05,860
Windows Phone feature now it's counting

167
00:09:03,610 --> 00:09:08,410
the processing time contain the process

168
00:09:05,860 --> 00:09:10,120
is or child ever continue process there

169
00:09:08,410 --> 00:09:13,750
are many types of content the process

170
00:09:10,120 --> 00:09:16,630
for different jobs but their startup

171
00:09:13,750 --> 00:09:18,730
sequence are almost the same Microsoft

172
00:09:16,630 --> 00:09:22,900
edge would create content the process

173
00:09:18,730 --> 00:09:26,530
with restricted name from 0 0 1 to 1 to

174
00:09:22,900 --> 00:09:28,689
1 because it is also an ad continual

175
00:09:26,530 --> 00:09:32,800
process in all the center the creation

176
00:09:28,690 --> 00:09:35,380
requires to remember when hamburger

177
00:09:32,800 --> 00:09:38,319
we use the package seed and the campaign

178
00:09:35,380 --> 00:09:42,220
a seed to create a low box token which

179
00:09:38,320 --> 00:09:44,230
is also called oh I see token here the

180
00:09:42,220 --> 00:09:48,070
it will transfer the talking and the

181
00:09:44,230 --> 00:09:51,310
creation request to as I host as I host

182
00:09:48,070 --> 00:09:55,990
will register the token with our key CSS

183
00:09:51,310 --> 00:09:58,180
and request it to activate finally our

184
00:09:55,990 --> 00:10:05,110
content the process is studied by our

185
00:09:58,180 --> 00:10:08,260
pcs the talking of child of continual

186
00:10:05,110 --> 00:10:10,779
process is created England hamburger and

187
00:10:08,260 --> 00:10:12,430
hamburger get activation information

188
00:10:10,779 --> 00:10:15,339
from Microsoft edge

189
00:10:12,430 --> 00:10:18,120
for example talking of manager process

190
00:10:15,339 --> 00:10:20,560
under the restrictive name then

191
00:10:18,120 --> 00:10:24,010
generates or new at continuous seed

192
00:10:20,560 --> 00:10:26,560
through a very long name foundation the

193
00:10:24,010 --> 00:10:31,029
driver restricted F continuously from AB

194
00:10:26,560 --> 00:10:33,699
continously than restricted name next

195
00:10:31,029 --> 00:10:35,860
random broker care to the competitive

196
00:10:33,700 --> 00:10:38,620
seeds from Microsoft edges through comb

197
00:10:35,860 --> 00:10:41,100
Quebec and creates tokens of account in

198
00:10:38,620 --> 00:10:41,100
the process

199
00:10:46,710 --> 00:10:53,920
up-up contingencies is calculated from

200
00:10:49,870 --> 00:10:56,610
Texas A&M used shuttle in this example

201
00:10:53,920 --> 00:11:00,040
the manager process seed is at the top

202
00:10:56,610 --> 00:11:02,440
the seed in the middle is from the

203
00:11:00,040 --> 00:11:05,199
Chateau of zero zero while the child

204
00:11:02,440 --> 00:11:07,600
said is a combination of parent seed and

205
00:11:05,200 --> 00:11:14,920
the structure of rejected name which

206
00:11:07,600 --> 00:11:19,930
became the seed of internet AC the

207
00:11:14,920 --> 00:11:22,420
candidates listed on the air are child

208
00:11:19,930 --> 00:11:25,689
processes competitors they are not

209
00:11:22,420 --> 00:11:29,709
stored in register instead they had

210
00:11:25,690 --> 00:11:32,920
coded in each binary in this example the

211
00:11:29,710 --> 00:11:38,080
child has computed access location

212
00:11:32,920 --> 00:11:40,510
printer clipboard and more child

213
00:11:38,080 --> 00:11:43,090
processes with restrictive name larger

214
00:11:40,510 --> 00:11:45,630
than zero seven one will have two more

215
00:11:43,090 --> 00:11:48,330
candidates the private network

216
00:11:45,630 --> 00:11:56,710
client-server and enterprise

217
00:11:48,330 --> 00:12:00,040
authentication okay whatever we try to

218
00:11:56,710 --> 00:12:02,140
find a box for in a complex system the

219
00:12:00,040 --> 00:12:05,740
first thing we need to do is looking for

220
00:12:02,140 --> 00:12:08,860
attack surfaces this divides directions

221
00:12:05,740 --> 00:12:12,430
and the scale of our research everyone

222
00:12:08,860 --> 00:12:15,700
knows IPC components most available to

223
00:12:12,430 --> 00:12:19,239
privilege escalation box so let's look

224
00:12:15,700 --> 00:12:23,230
at the IPC mechanisms used by Microsoft

225
00:12:19,240 --> 00:12:25,890
edge there are three types of IPC

226
00:12:23,230 --> 00:12:30,370
mechanisms used by Microsoft the

227
00:12:25,890 --> 00:12:34,569
action-rpg come and LCA IPC we will go

228
00:12:30,370 --> 00:12:37,870
over usual our PC is an inter process

229
00:12:34,570 --> 00:12:40,420
communication mechanism it will ask land

230
00:12:37,870 --> 00:12:44,440
and a server to communicate over several

231
00:12:40,420 --> 00:12:47,949
protocol sequences such as a RPC named

232
00:12:44,440 --> 00:12:51,100
path socket and the more and many more a

233
00:12:47,950 --> 00:12:53,470
server interface will be bound and

234
00:12:51,100 --> 00:12:56,650
opened with the suppressor file protocol

235
00:12:53,470 --> 00:12:59,980
a calendar can access the interface with

236
00:12:56,650 --> 00:13:02,920
its identity RPC server can use

237
00:12:59,980 --> 00:13:07,510
security descriptor to control access

238
00:13:02,920 --> 00:13:09,520
permission of independent it can also

239
00:13:07,510 --> 00:13:11,710
use interface the security callback

240
00:13:09,520 --> 00:13:13,350
function to check the permissions of

241
00:13:11,710 --> 00:13:17,260
Auckland

242
00:13:13,350 --> 00:13:20,050
there's many RPC service in Windows some

243
00:13:17,260 --> 00:13:26,500
of them are accessible in a container

244
00:13:20,050 --> 00:13:30,370
sandbox my use case of RPC is a

245
00:13:26,500 --> 00:13:32,770
Microsoft artist jet engine the internet

246
00:13:30,370 --> 00:13:36,370
evangelist and JavaScript code to jet

247
00:13:32,770 --> 00:13:38,579
engine who are RPC for completion the

248
00:13:36,370 --> 00:13:44,080
jet engine will reply with the generated

249
00:13:38,580 --> 00:13:47,200
machine code the second a widely-used

250
00:13:44,080 --> 00:13:50,440
the IPC mechanic mechanic technology is

251
00:13:47,200 --> 00:13:55,030
calm windows news is come to implement

252
00:13:50,440 --> 00:13:57,430
active X control Microsoft Office also

253
00:13:55,030 --> 00:14:02,500
users come to implement a compound

254
00:13:57,430 --> 00:14:05,469
document come has become the foundation

255
00:14:02,500 --> 00:14:08,260
of Windows it is widely used to in

256
00:14:05,470 --> 00:14:10,690
Windows share components and the service

257
00:14:08,260 --> 00:14:13,689
components because it provides a secure

258
00:14:10,690 --> 00:14:17,350
reusability secure ability and a

259
00:14:13,690 --> 00:14:20,170
solution there are two types of consoles

260
00:14:17,350 --> 00:14:22,540
income imposes come which are

261
00:14:20,170 --> 00:14:25,660
implemented in your deal and auto

262
00:14:22,540 --> 00:14:28,870
process come which are implemented in an

263
00:14:25,660 --> 00:14:32,500
executable file for the security

264
00:14:28,870 --> 00:14:35,230
prospective we are more interested in

265
00:14:32,500 --> 00:14:38,530
Auto possess calm because the rainy

266
00:14:35,230 --> 00:14:42,040
different security context and may have

267
00:14:38,530 --> 00:14:43,569
more permissions than AB container they

268
00:14:42,040 --> 00:14:50,860
open the app or a larger attacker

269
00:14:43,570 --> 00:14:53,890
surface for sandbox process to lunch now

270
00:14:50,860 --> 00:14:56,440
actuate an auto process comes over the

271
00:14:53,890 --> 00:14:59,319
class comes Branton will send a request

272
00:14:56,440 --> 00:15:05,890
the two system actuator that addressing

273
00:14:59,320 --> 00:15:08,260
our pcs s our pcs s we are forced to

274
00:15:05,890 --> 00:15:10,810
check a clearance permission the natural

275
00:15:08,260 --> 00:15:13,069
actuators associated a server

276
00:15:10,810 --> 00:15:14,989
reverse all stars

277
00:15:13,070 --> 00:15:19,480
we are registered as class and the

278
00:15:14,990 --> 00:15:19,480
interface information with our pcs is

279
00:15:21,339 --> 00:15:24,320
next

280
00:15:22,490 --> 00:15:27,050
obviously access will return the

281
00:15:24,320 --> 00:15:29,329
information by the token and the client

282
00:15:27,050 --> 00:15:37,910
can cover more information about the

283
00:15:29,329 --> 00:15:40,399
server such as our PC and appoint family

284
00:15:37,910 --> 00:15:44,839
the client could directly communicate

285
00:15:40,399 --> 00:15:46,970
with the server where our PC come has

286
00:15:44,839 --> 00:15:50,089
defined the multiple security settings

287
00:15:46,970 --> 00:15:52,639
in the registry system rather security

288
00:15:50,089 --> 00:15:54,769
settings controls the default lunch and

289
00:15:52,639 --> 00:15:57,740
access permission and the code level

290
00:15:54,769 --> 00:16:01,160
capable security capabilities for

291
00:15:57,740 --> 00:16:02,899
consoles process process why the

292
00:16:01,160 --> 00:16:06,680
security settings are supplied by

293
00:16:02,899 --> 00:16:09,500
console at random every common local

294
00:16:06,680 --> 00:16:12,380
server can has its own app ID key in the

295
00:16:09,500 --> 00:16:14,449
registry there are two way of seeing the

296
00:16:12,380 --> 00:16:18,110
key to define the launch and access

297
00:16:14,449 --> 00:16:20,839
permission console can Coco initializes

298
00:16:18,110 --> 00:16:22,029
security explicitly to override the

299
00:16:20,839 --> 00:16:25,040
default permissions

300
00:16:22,029 --> 00:16:26,540
otherwise the kamerun term will

301
00:16:25,040 --> 00:16:28,760
implicitly coedes

302
00:16:26,540 --> 00:16:33,889
with registry settings during

303
00:16:28,760 --> 00:16:36,980
initialization as a remission earlier

304
00:16:33,889 --> 00:16:40,819
RPC SS is a responsible for launching of

305
00:16:36,980 --> 00:16:42,649
activity in consoles our pcs as check if

306
00:16:40,819 --> 00:16:43,779
Clint has lunch or activation

307
00:16:42,649 --> 00:16:47,149
permissions

308
00:16:43,779 --> 00:16:50,240
buying lunch or actuation allow the

309
00:16:47,149 --> 00:16:53,029
function lunch means to create a new

310
00:16:50,240 --> 00:16:56,500
instance of Aucklanders over activation

311
00:16:53,029 --> 00:16:59,510
means create a new object existing store

312
00:16:56,500 --> 00:17:01,810
access permission is checked by chrome

313
00:16:59,510 --> 00:17:04,158
runtime at the server side the

314
00:17:01,810 --> 00:17:07,099
interfaces security callback function

315
00:17:04,159 --> 00:17:11,449
registered by console is used to for

316
00:17:07,099 --> 00:17:14,119
checking calanis permission Microsoft

317
00:17:11,449 --> 00:17:14,900
edge uses an auto process comes over

318
00:17:14,119 --> 00:17:17,989
called

319
00:17:14,900 --> 00:17:21,100
Mme broker to create a dictionary and

320
00:17:17,990 --> 00:17:21,099
the words

321
00:17:22,359 --> 00:17:29,379
the third type of a PC used by Microsoft

322
00:17:25,329 --> 00:17:32,470
edge is al CIA PC loosely covered the ie

323
00:17:29,380 --> 00:17:35,200
was introduced in Internet Explorer 8

324
00:17:32,470 --> 00:17:37,510
it isolates ran dollars from manager to

325
00:17:35,200 --> 00:17:41,500
improve reliability performance

326
00:17:37,510 --> 00:17:44,590
performance and scalability because LCA

327
00:17:41,500 --> 00:17:47,230
IPC uses shadow memory to simulate to

328
00:17:44,590 --> 00:17:51,059
Windows messaging it is also known as

329
00:17:47,230 --> 00:17:54,309
shared memory a busy during the manager

330
00:17:51,059 --> 00:17:56,799
initialization LC ie map a PC creates

331
00:17:54,309 --> 00:18:00,129
name destructions through creative Val

332
00:17:56,799 --> 00:18:02,019
mapping the renderer and a broker rather

333
00:18:00,130 --> 00:18:06,130
to our read from the shadow memory

334
00:18:02,019 --> 00:18:08,529
through US Open File mappings after

335
00:18:06,130 --> 00:18:14,019
sending a message an event is asserted

336
00:18:08,529 --> 00:18:15,909
to notify the target of processes there

337
00:18:14,019 --> 00:18:20,139
are three types of shared memories

338
00:18:15,909 --> 00:18:22,840
messages intrastate scope trusted there

339
00:18:20,139 --> 00:18:25,719
are others are untrusted renderer

340
00:18:22,840 --> 00:18:28,959
process has no permission to write

341
00:18:25,720 --> 00:18:30,970
messages into the trusted scope in

342
00:18:28,960 --> 00:18:33,669
manager and the broker sensitive

343
00:18:30,970 --> 00:18:36,100
functions check the message attack if a

344
00:18:33,669 --> 00:18:39,549
message is untrusted it will not be

345
00:18:36,100 --> 00:18:43,840
handled this prevents untrusted precise

346
00:18:39,549 --> 00:18:46,389
from Cohen sensitive functions the

347
00:18:43,840 --> 00:18:48,668
trivial use case would be Randall adding

348
00:18:46,389 --> 00:18:51,219
URL and the Pharaoh account to managers

349
00:18:48,669 --> 00:18:53,590
history after use navigation

350
00:18:51,220 --> 00:18:57,220
rhiannon ran Delaware Piper website a

351
00:18:53,590 --> 00:19:00,939
URL as an LC a valid message and Sunday

352
00:18:57,220 --> 00:19:04,330
to the manager manager gets the website

353
00:19:00,940 --> 00:19:09,419
URL from untrusted scope zone Daniels is

354
00:19:04,330 --> 00:19:09,418
far away Farrakhan and Adam to history

355
00:19:14,460 --> 00:19:21,149
I became the target of Ponta Wong in

356
00:19:19,919 --> 00:19:24,450
2016

357
00:19:21,149 --> 00:19:26,998
most bugs used in the contest memory

358
00:19:24,450 --> 00:19:29,909
Corrections by the way prefer logic bugs

359
00:19:26,999 --> 00:19:33,119
we think they are most nimble more

360
00:19:29,909 --> 00:19:43,649
generic and most importantly lack of

361
00:19:33,119 --> 00:19:46,110
attention encounter on 2017 we used a

362
00:19:43,649 --> 00:19:48,809
logic bug to escape the sandbox we are

363
00:19:46,110 --> 00:19:51,629
the only team that used logic bug to

364
00:19:48,809 --> 00:19:55,908
force sandbox escape here is the

365
00:19:51,629 --> 00:19:58,498
voluntary taser we use it in a contest

366
00:19:55,909 --> 00:20:01,019
browser broker browser broker is an

367
00:19:58,499 --> 00:20:04,529
important part of Microsoft edge and it

368
00:20:01,019 --> 00:20:07,619
is a lot of process comes our new entry

369
00:20:04,529 --> 00:20:10,049
in medium integrity level to perform

370
00:20:07,619 --> 00:20:15,149
operations that are not permitted in our

371
00:20:10,049 --> 00:20:18,450
container since like launch Internet

372
00:20:15,149 --> 00:20:25,080
Explorer instance open a folder and sing

373
00:20:18,450 --> 00:20:27,149
on the manager process belong to the

374
00:20:25,080 --> 00:20:30,990
browser broker with calm activision

375
00:20:27,149 --> 00:20:33,178
using clsid browser broker the manager

376
00:20:30,990 --> 00:20:38,029
process long change to the server and

377
00:20:33,179 --> 00:20:42,240
get an interface for access the broker a

378
00:20:38,029 --> 00:20:44,850
calm interface could be matured into an

379
00:20:42,240 --> 00:20:47,999
object rich and pass it to another

380
00:20:44,850 --> 00:20:51,059
context of the manager gets the

381
00:20:47,999 --> 00:20:54,149
interface in order mature each turn of

382
00:20:51,059 --> 00:20:58,428
the wave and send it to other processes

383
00:20:54,149 --> 00:21:01,350
you with CIA IPC

384
00:20:58,429 --> 00:21:04,559
objective reef is the name of structures

385
00:21:01,350 --> 00:21:07,019
of matured interfacing calm this is an

386
00:21:04,559 --> 00:21:10,980
example of a much older browser broker

387
00:21:07,019 --> 00:21:14,940
interface it's a block of memory that

388
00:21:10,980 --> 00:21:17,340
starts with signature meal it's all

389
00:21:14,940 --> 00:21:19,950
standard a brief is in the facilities

390
00:21:17,340 --> 00:21:23,549
are eyebrows or broker factory and it

391
00:21:19,950 --> 00:21:25,649
has o ex ID or idea and the IP ID with

392
00:21:23,549 --> 00:21:27,810
all the information the can be emotional

393
00:21:25,649 --> 00:21:34,110
back to our interface pointer in

394
00:21:27,810 --> 00:21:37,110
another context well content process

395
00:21:34,110 --> 00:21:39,810
starts in order Michelle and get a

396
00:21:37,110 --> 00:21:41,729
browser burglar interface this is how

397
00:21:39,810 --> 00:21:51,780
calm interfaces are transferred between

398
00:21:41,730 --> 00:21:54,600
different Microsoft edge processes here

399
00:21:51,780 --> 00:21:56,850
Islam browser broken structure manager

400
00:21:54,600 --> 00:21:59,250
process long chains and install a

401
00:21:56,850 --> 00:22:01,320
browser broker and cinder the browser

402
00:21:59,250 --> 00:22:04,350
broker to each count in the process in

403
00:22:01,320 --> 00:22:06,090
the long chase contain the process can

404
00:22:04,350 --> 00:22:09,480
access the browser broker and call

405
00:22:06,090 --> 00:22:11,970
interface methods but not so fast most

406
00:22:09,480 --> 00:22:14,370
of the methods has accessed checks to

407
00:22:11,970 --> 00:22:20,400
limit operations or child process can

408
00:22:14,370 --> 00:22:22,770
perform before we talk about the exceed

409
00:22:20,400 --> 00:22:26,250
check here is the description of any

410
00:22:22,770 --> 00:22:29,400
process integrity level we know Windows

411
00:22:26,250 --> 00:22:32,520
has integrity level such as low medium

412
00:22:29,400 --> 00:22:35,360
and high and all app containers are low

413
00:22:32,520 --> 00:22:38,460
integrative but in order to limit

414
00:22:35,360 --> 00:22:41,850
privilege privilege a demon father age

415
00:22:38,460 --> 00:22:44,880
also has its own integrity levels this

416
00:22:41,850 --> 00:22:47,580
is related with restricted name for

417
00:22:44,880 --> 00:22:49,410
example the internet AC process is

418
00:22:47,580 --> 00:22:56,129
integral in a greater level each one

419
00:22:49,410 --> 00:22:58,500
which means an are easy now let's go

420
00:22:56,130 --> 00:23:01,560
back to the access check there are three

421
00:22:58,500 --> 00:23:05,310
different type of access check first is

422
00:23:01,560 --> 00:23:08,120
trusted is only which means only trusted

423
00:23:05,310 --> 00:23:11,929
every container could call is for

424
00:23:08,120 --> 00:23:15,989
privileges measures such as long Hawaii

425
00:23:11,930 --> 00:23:19,680
second is everyone it's basically means

426
00:23:15,990 --> 00:23:22,320
no access check so is all of container

427
00:23:19,680 --> 00:23:28,410
accepted zero zero two measures like

428
00:23:22,320 --> 00:23:31,350
endocrine disorders from attackers

429
00:23:28,410 --> 00:23:34,020
perspective almost every useful method

430
00:23:31,350 --> 00:23:37,590
would check for trusted AC but what

431
00:23:34,020 --> 00:23:40,530
instructed AC trust the AC is not

432
00:23:37,590 --> 00:23:41,520
hard-coded it's registered through

433
00:23:40,530 --> 00:23:44,760
request

434
00:23:41,520 --> 00:23:46,379
broker method manager process long chase

435
00:23:44,760 --> 00:23:49,170
the browser broker and the course

436
00:23:46,380 --> 00:23:52,710
request broker to initialize it which

437
00:23:49,170 --> 00:23:59,550
means trusted AC is always always the

438
00:23:52,710 --> 00:24:01,740
manager process request broker is used

439
00:23:59,550 --> 00:24:04,639
the tool register app identity

440
00:24:01,740 --> 00:24:08,490
information such as AB container seed

441
00:24:04,640 --> 00:24:11,580
application name and location it can

442
00:24:08,490 --> 00:24:13,830
only be called once by the manager

443
00:24:11,580 --> 00:24:17,060
process so the content of process could

444
00:24:13,830 --> 00:24:17,060
in the cause is measured

445
00:24:23,020 --> 00:24:28,780
let's look at the browser broker design

446
00:24:25,630 --> 00:24:31,690
again do you see something strange why

447
00:24:28,780 --> 00:24:34,960
should the way follow the way that is

448
00:24:31,690 --> 00:24:37,150
supposed to be using the design assumes

449
00:24:34,960 --> 00:24:41,710
that content the process couldn't launch

450
00:24:37,150 --> 00:24:48,340
a browser broker but is this really the

451
00:24:41,710 --> 00:24:50,890
case by looking at the launcher

452
00:24:48,340 --> 00:24:53,320
commission you can see application

453
00:24:50,890 --> 00:24:56,320
packages is allowed to launch and

454
00:24:53,320 --> 00:24:59,110
activities in Microsoft's official

455
00:24:56,320 --> 00:25:02,290
document implementing an app container

456
00:24:59,110 --> 00:25:05,260
it says to allow all up containers to

457
00:25:02,290 --> 00:25:07,178
access all results and the application

458
00:25:05,260 --> 00:25:13,420
packages seats to the ACL of a data

459
00:25:07,179 --> 00:25:16,480
resource now the vulnerability is very

460
00:25:13,420 --> 00:25:19,270
obvious also an Internet renderer

461
00:25:16,480 --> 00:25:22,559
couldn't access sensitive Master has a

462
00:25:19,270 --> 00:25:27,010
unique system browser broke her amazing

463
00:25:22,559 --> 00:25:31,059
amazingly it is allowed to launch a new

464
00:25:27,010 --> 00:25:34,540
browser broker if the render then kills

465
00:25:31,059 --> 00:25:39,100
request broker with the Internet ACC the

466
00:25:34,540 --> 00:25:41,500
internet AC would become attracted AC to

467
00:25:39,100 --> 00:25:48,010
the new broker and the renderer could

468
00:25:41,500 --> 00:25:49,809
call almost all broker measures now we

469
00:25:48,010 --> 00:25:52,510
only needed to find a measure to escape

470
00:25:49,809 --> 00:25:54,760
the sandbox for example we could call

471
00:25:52,510 --> 00:25:57,670
the launch a method to launch Internet

472
00:25:54,760 --> 00:26:02,980
Explorer with control document but there

473
00:25:57,670 --> 00:26:06,429
is an easy way this method is called

474
00:26:02,980 --> 00:26:08,830
right class of category it codes notice

475
00:26:06,429 --> 00:26:11,260
a single possible SP friend deal for

476
00:26:08,830 --> 00:26:13,990
this process from the name you couldn't

477
00:26:11,260 --> 00:26:17,140
know it allows a deal in to occur in the

478
00:26:13,990 --> 00:26:19,360
process it opens or hard-coded the name

479
00:26:17,140 --> 00:26:23,710
through our application directory to

480
00:26:19,360 --> 00:26:26,770
build the do pass and guess what the

481
00:26:23,710 --> 00:26:29,830
application directory global variable is

482
00:26:26,770 --> 00:26:33,550
also set to request a broker during the

483
00:26:29,830 --> 00:26:37,470
initialization so now we can load our

484
00:26:33,550 --> 00:26:37,470
custom deal into browser broker

485
00:26:39,870 --> 00:26:46,000
these are the steps first drop a

486
00:26:43,660 --> 00:26:50,560
customer model the deal to our edible

487
00:26:46,000 --> 00:26:53,290
directory next activate a new browser

488
00:26:50,560 --> 00:26:56,889
broker and the request broker with the

489
00:26:53,290 --> 00:27:02,020
Internet is a succeed and the ratable

490
00:26:56,890 --> 00:27:05,770
directory picks finally to the red cart

491
00:27:02,020 --> 00:27:08,220
of category method and we are out of the

492
00:27:05,770 --> 00:27:08,220
friend box

493
00:27:10,950 --> 00:27:16,840
how did Microsoft fix this the launch

494
00:27:14,740 --> 00:27:20,500
permission of the browser broker has

495
00:27:16,840 --> 00:27:30,070
changed now only the manager process is

496
00:27:20,500 --> 00:27:33,000
allowed to launch the browser broker in

497
00:27:30,070 --> 00:27:35,320
fact starting from Windows 10 RS to

498
00:27:33,000 --> 00:27:37,810
restricted app containers are no longer

499
00:27:35,320 --> 00:27:40,689
allowed access objects labeled with all

500
00:27:37,810 --> 00:27:43,210
application packages Microsoft did this

501
00:27:40,690 --> 00:27:45,580
by adding a token attribute got no all

502
00:27:43,210 --> 00:27:47,890
application packages and we introducing

503
00:27:45,580 --> 00:27:54,120
a new group called all restricted

504
00:27:47,890 --> 00:27:59,280
application packages is this the end

505
00:27:54,120 --> 00:28:04,389
and guess who comes to rescue here

506
00:27:59,280 --> 00:28:06,940
Adobe Flash Adobe Flash used to lift

507
00:28:04,390 --> 00:28:09,580
away on well for rich content gaming

508
00:28:06,940 --> 00:28:12,190
animations and media of all kinds

509
00:28:09,580 --> 00:28:14,800
it is pre-installed on Windows starting

510
00:28:12,190 --> 00:28:17,500
from windows 8 well this is a brilliant

511
00:28:14,800 --> 00:28:19,389
design decision because it significantly

512
00:28:17,500 --> 00:28:21,340
reduced the time between user installs

513
00:28:19,390 --> 00:28:24,280
the windows offering system and see a

514
00:28:21,340 --> 00:28:26,590
flash based ad last year

515
00:28:24,280 --> 00:28:29,320
Adobe announced that flash will no

516
00:28:26,590 --> 00:28:34,270
longer be supported after 2020 and will

517
00:28:29,320 --> 00:28:37,060
be replaced by html5 adobe flash player

518
00:28:34,270 --> 00:28:40,540
was also interested in integrated into

519
00:28:37,060 --> 00:28:42,879
Microsoft edge and enabled by default to

520
00:28:40,540 --> 00:28:45,730
face out flash Microsoft edge start

521
00:28:42,880 --> 00:28:49,210
limiting Auto wrong it implemented a

522
00:28:45,730 --> 00:28:49,929
click to wrong mechanism Iran's Flash

523
00:28:49,210 --> 00:28:52,529
Player

524
00:28:49,929 --> 00:28:55,360
in a special renderer called BC host as

525
00:28:52,529 --> 00:28:58,779
mentioned before it is also a charm app

526
00:28:55,360 --> 00:29:01,269
container the internet render cannot

527
00:28:58,779 --> 00:29:03,159
access flash so attackers cannot exploit

528
00:29:01,269 --> 00:29:08,470
flash vulnerabilities within web pages

529
00:29:03,159 --> 00:29:10,869
with web pages same as michaelsavage

530
00:29:08,470 --> 00:29:13,779
flash player also needs its own broker

531
00:29:10,869 --> 00:29:15,730
to perform privileged operations flash

532
00:29:13,779 --> 00:29:17,950
broker delegates privileged operations

533
00:29:15,730 --> 00:29:21,909
from flash player running window

534
00:29:17,950 --> 00:29:23,980
processes as a result flash broker

535
00:29:21,909 --> 00:29:29,619
becomes another attack surface of

536
00:29:23,980 --> 00:29:31,659
Microsoft edge sandbox in fact Microsoft

537
00:29:29,619 --> 00:29:34,330
has considered isolating flash broker

538
00:29:31,659 --> 00:29:36,460
when designing Microsoft edge that is

539
00:29:34,330 --> 00:29:38,678
why Iran's Flash Player in a special

540
00:29:36,460 --> 00:29:43,450
render and access to flash broker is

541
00:29:38,679 --> 00:29:45,820
also strictly restricted no render have

542
00:29:43,450 --> 00:29:49,119
launched or activate permission to flash

543
00:29:45,820 --> 00:29:51,519
broker and all in PC host and local zoom

544
00:29:49,119 --> 00:29:55,178
renders have access permission to flash

545
00:29:51,519 --> 00:30:03,369
brokers interface so how can a render

546
00:29:55,179 --> 00:30:05,889
use the flash broker this diagram this

547
00:30:03,369 --> 00:30:09,100
diagram shows the activation process of

548
00:30:05,889 --> 00:30:11,559
flash broker co-create instance is

549
00:30:09,100 --> 00:30:18,309
shipped in the render process and calls

550
00:30:11,559 --> 00:30:20,350
are related to the browser broker the

551
00:30:18,309 --> 00:30:22,299
browser broker launches the flash broker

552
00:30:20,350 --> 00:30:27,248
and past the interface back to the

553
00:30:22,299 --> 00:30:31,619
renderer then the render can access the

554
00:30:27,249 --> 00:30:31,619
flash broker with that interface pointer

555
00:30:32,309 --> 00:30:37,330
flash brokers supplies a lot of

556
00:30:34,809 --> 00:30:41,470
functions such as pop-up file operations

557
00:30:37,330 --> 00:30:43,539
GDI device access as structs etc the

558
00:30:41,470 --> 00:30:47,049
most important thing is that iran's at

559
00:30:43,539 --> 00:30:48,999
median integrity level in the last few

560
00:30:47,049 --> 00:30:51,129
years near helping multiple

561
00:30:48,999 --> 00:30:56,169
vulnerabilities found in flash broker

562
00:30:51,129 --> 00:30:59,289
but is it still insecure we've

563
00:30:56,169 --> 00:31:00,879
discovered an interesting behavior Adobe

564
00:30:59,289 --> 00:31:03,470
Connect is a software used for

565
00:31:00,879 --> 00:31:05,959
presentations web conferencing and

566
00:31:03,470 --> 00:31:07,880
shirring when user enters the meeting

567
00:31:05,960 --> 00:31:10,730
room created by Adobe Connect on a

568
00:31:07,880 --> 00:31:14,659
webpage Flash Player prompts user to

569
00:31:10,730 --> 00:31:16,909
install an add-in if the user then

570
00:31:14,659 --> 00:31:19,010
clicks the yes button flash broker will

571
00:31:16,909 --> 00:31:24,500
download and launch the adding with

572
00:31:19,010 --> 00:31:27,289
median integrity level in flash broker

573
00:31:24,500 --> 00:31:29,870
functions with name stars list broker LM

574
00:31:27,289 --> 00:31:33,679
are used for downloading and installing

575
00:31:29,870 --> 00:31:37,250
add-ins they are caught in this order

576
00:31:33,679 --> 00:31:41,570
and for each adding a pair of files will

577
00:31:37,250 --> 00:31:45,169
be downloaded first it downloads a dot

578
00:31:41,570 --> 00:31:47,990
zip file the compressed data block must

579
00:31:45,169 --> 00:31:49,460
start with the metric string Choi looks

580
00:31:47,990 --> 00:31:51,409
like the deer outro is making a

581
00:31:49,460 --> 00:31:54,620
reference to certain historical events

582
00:31:51,409 --> 00:31:56,360
when writing this piece of code before

583
00:31:54,620 --> 00:31:58,580
the metric string is a digital signature

584
00:31:56,360 --> 00:32:01,309
block will be verified with the

585
00:31:58,580 --> 00:32:03,139
hard-coded certificate chain following

586
00:32:01,309 --> 00:32:08,120
the metrics screen is the uncompressed

587
00:32:03,140 --> 00:32:11,539
file size then it also downloads a dot s

588
00:32:08,120 --> 00:32:15,860
file it is also signed and host a char

589
00:32:11,539 --> 00:32:18,350
two digits of the uncompressed add-in it

590
00:32:15,860 --> 00:32:22,250
is used for verifying adding at a later

591
00:32:18,350 --> 00:32:23,990
stage all digital signatures of

592
00:32:22,250 --> 00:32:29,059
downloaded files are verified with the

593
00:32:23,990 --> 00:32:30,740
hard-coded certificate chain this is the

594
00:32:29,059 --> 00:32:33,559
entire process of downloading and

595
00:32:30,740 --> 00:32:35,270
launching and adding it the flash

596
00:32:33,559 --> 00:32:38,928
protocol only downloads files from a

597
00:32:35,270 --> 00:32:40,400
hard-coded domain markula Mediacom the

598
00:32:38,929 --> 00:32:42,169
adding can only be wrong when a

599
00:32:40,400 --> 00:32:44,539
signature of downloaded files are

600
00:32:42,169 --> 00:32:48,440
verified and the char two of the adding

601
00:32:44,539 --> 00:32:51,230
matches the digest once it's downloaded

602
00:32:48,440 --> 00:32:54,950
and verified it can run the adding with

603
00:32:51,230 --> 00:32:57,370
controllable arguments this makes the

604
00:32:54,950 --> 00:32:59,600
attack surface significantly larger

605
00:32:57,370 --> 00:33:01,780
these settings may contain

606
00:32:59,600 --> 00:33:05,389
vulnerabilities or become all maintained

607
00:33:01,780 --> 00:33:07,879
so as we sew all we need to do is to

608
00:33:05,390 --> 00:33:10,669
find as many headings as possible then

609
00:33:07,880 --> 00:33:15,020
review them if we can find bugs in these

610
00:33:10,669 --> 00:33:17,910
settings we may break out of the sandbox

611
00:33:15,020 --> 00:33:19,760
we found several Eddings and digest

612
00:33:17,910 --> 00:33:22,380
files on the marker media web server

613
00:33:19,760 --> 00:33:25,470
many of them are still have valid

614
00:33:22,380 --> 00:33:27,510
signatures some of these headings are

615
00:33:25,470 --> 00:33:30,900
built with the ancient Flash Player and

616
00:33:27,510 --> 00:33:33,690
can open an SWF file via command line

617
00:33:30,900 --> 00:33:35,550
arguments we can use known

618
00:33:33,690 --> 00:33:39,870
vulnerabilities to get code execution

619
00:33:35,550 --> 00:33:42,980
here one of the ADIZ is marco media

620
00:33:39,870 --> 00:33:45,149
please it is used for live communication

621
00:33:42,980 --> 00:33:49,740
and he has a built-in flash player

622
00:33:45,150 --> 00:33:53,040
released in the year of 2003 a there are

623
00:33:49,740 --> 00:33:56,580
DEP and even stack cookies only exist in

624
00:33:53,040 --> 00:34:00,030
academic papers at a time so all we need

625
00:33:56,580 --> 00:34:03,870
to do is to find a 5000 exploit to get

626
00:34:00,030 --> 00:34:11,610
code execution in adding process do you

627
00:34:03,870 --> 00:34:14,399
miss that error for most the browser

628
00:34:11,610 --> 00:34:17,100
attack scenarios the first step is

629
00:34:14,399 --> 00:34:19,649
always to get code execution in the

630
00:34:17,100 --> 00:34:22,500
internet around Allah generates

631
00:34:19,649 --> 00:34:25,799
privilege escalation bugs to escape

632
00:34:22,500 --> 00:34:30,810
sandbox so how can we escape from the

633
00:34:25,800 --> 00:34:34,409
internet regular let's look at what we

634
00:34:30,810 --> 00:34:37,379
what we already have we can get our code

635
00:34:34,409 --> 00:34:39,780
execution in internet irregular we can

636
00:34:37,379 --> 00:34:42,690
also escape sandbox from pc host the

637
00:34:39,780 --> 00:34:45,240
Rinella our local zone renderer what we

638
00:34:42,690 --> 00:34:49,310
still need to build a company to

639
00:34:45,239 --> 00:34:53,370
exfoliate the chair we have two options

640
00:34:49,310 --> 00:34:56,639
first find a way to run JavaScript in

641
00:34:53,370 --> 00:35:01,410
busy host eronel second find a way to

642
00:34:56,639 --> 00:35:03,420
get into the local zone however as we

643
00:35:01,410 --> 00:35:06,330
mentioned earlier Kathy is a PC host

644
00:35:03,420 --> 00:35:07,980
analyst erroneous user confirmation we

645
00:35:06,330 --> 00:35:10,650
come now to control the confirmation

646
00:35:07,980 --> 00:35:13,860
button within renderer funding a

647
00:35:10,650 --> 00:35:17,040
universal secure cross set status quick

648
00:35:13,860 --> 00:35:19,320
impact is also not easy so let's think

649
00:35:17,040 --> 00:35:23,460
about what we can do with code exclusion

650
00:35:19,320 --> 00:35:25,860
in the International zone when we try to

651
00:35:23,460 --> 00:35:28,050
navigate from internet zone to local

652
00:35:25,860 --> 00:35:31,440
zone the council size the access

653
00:35:28,050 --> 00:35:34,230
was denied this mixes same origin policy

654
00:35:31,440 --> 00:35:36,840
for based this can of a behavior to

655
00:35:34,230 --> 00:35:39,690
prevent cross status cross status

656
00:35:36,840 --> 00:35:41,760
information leakage so we are as the

657
00:35:39,690 --> 00:35:43,520
operator performs a song check within R

658
00:35:41,760 --> 00:35:47,280
and Allah

659
00:35:43,520 --> 00:35:49,530
let's take into navigation internals the

660
00:35:47,280 --> 00:35:52,110
navigation will happen when we visited a

661
00:35:49,530 --> 00:35:55,050
website through address bar or click a

662
00:35:52,110 --> 00:35:57,600
hyperlink on the web page follow

663
00:35:55,050 --> 00:36:02,610
hyperlink tool we are be called & randle

664
00:35:57,600 --> 00:36:04,680
aware checkers a target a URL Microsoft

665
00:36:02,610 --> 00:36:07,230
edge Dodgers don't check within Randall

666
00:36:04,680 --> 00:36:09,270
if it determines the target the URL

667
00:36:07,230 --> 00:36:11,790
needs to be opened in you a new Randall

668
00:36:09,270 --> 00:36:14,509
ER the navigation we are the navigation

669
00:36:11,790 --> 00:36:17,759
request we are personal to the manager

670
00:36:14,510 --> 00:36:22,020
otherwise it adjust the redirects in the

671
00:36:17,760 --> 00:36:23,700
current renderer manager will also

672
00:36:22,020 --> 00:36:26,430
checkers a targeted URL with the

673
00:36:23,700 --> 00:36:29,520
redirection policy and the determine the

674
00:36:26,430 --> 00:36:32,069
type of renderer to use the new type of

675
00:36:29,520 --> 00:36:34,860
page render will be used for plant page

676
00:36:32,070 --> 00:36:37,170
the local zone regular for local fare

677
00:36:34,860 --> 00:36:41,130
and a privilege to the renderer for

678
00:36:37,170 --> 00:36:43,950
settings page when navigating to look

679
00:36:41,130 --> 00:36:48,720
who's own manager will get the PRC from

680
00:36:43,950 --> 00:36:52,310
zone ID for Chakotay URL so ID is

681
00:36:48,720 --> 00:36:56,189
calculated from target URL by calling a

682
00:36:52,310 --> 00:36:58,110
ecozone a URL function manager will

683
00:36:56,190 --> 00:37:03,270
create a new local zone randall of

684
00:36:58,110 --> 00:37:06,110
process with PRC 121 if target a URL is

685
00:37:03,270 --> 00:37:09,920
in local machine zone intranet zone

686
00:37:06,110 --> 00:37:09,920
Ultra state serisone

687
00:37:10,730 --> 00:37:14,540
there are two security issues in the

688
00:37:13,620 --> 00:37:18,330
navigation

689
00:37:14,540 --> 00:37:21,090
first the zone check is completely done

690
00:37:18,330 --> 00:37:23,549
in the render process we can navigate to

691
00:37:21,090 --> 00:37:26,880
a local page when Karen the URLs

692
00:37:23,550 --> 00:37:30,120
protocol is fell this can be bypassed

693
00:37:26,880 --> 00:37:33,360
with craft editor or request manager

694
00:37:30,120 --> 00:37:36,240
directory second manager retrieves

695
00:37:33,360 --> 00:37:39,410
Piazzi from zoo ID which in turn is

696
00:37:36,240 --> 00:37:41,720
calculated from target a URL

697
00:37:39,410 --> 00:37:45,200
however there is no additional check

698
00:37:41,720 --> 00:37:48,680
unfair URL and as a local zone ran

699
00:37:45,200 --> 00:37:53,509
dollars PSA is returned when target AOL

700
00:37:48,680 --> 00:37:56,180
is a local HTML fell by abusing this mr.

701
00:37:53,509 --> 00:37:58,609
Randol local HTML fell dropped by

702
00:37:56,180 --> 00:38:07,940
internet Arundel in your local zone

703
00:37:58,609 --> 00:38:11,900
granola to exfoliator is a sop purpose

704
00:38:07,940 --> 00:38:14,750
first rattle a local HTML fell into a

705
00:38:11,900 --> 00:38:18,319
temporary folder that can be accessed by

706
00:38:14,750 --> 00:38:21,589
local xunran dollar then create anchor

707
00:38:18,319 --> 00:38:24,440
element with data file as a source we

708
00:38:21,589 --> 00:38:27,470
can locate as a host to URL where the

709
00:38:24,440 --> 00:38:31,339
anchor element and modified it began

710
00:38:27,470 --> 00:38:33,618
with fell multi core protocol is only

711
00:38:31,339 --> 00:38:37,279
trivial and navigation where on click

712
00:38:33,619 --> 00:38:42,319
event this purpose resume check and an

713
00:38:37,279 --> 00:38:44,599
eric is to look whose own nest protocol

714
00:38:42,319 --> 00:38:48,410
together this diagram shows the

715
00:38:44,599 --> 00:38:52,430
in-charge sandbox escape first cat code

716
00:38:48,410 --> 00:38:55,220
as children internet is own the uses

717
00:38:52,430 --> 00:38:59,058
Allanson use SOP bypass to navigate to

718
00:38:55,220 --> 00:39:02,328
local zone next another code execution

719
00:38:59,059 --> 00:39:07,460
in local zone finally we use a flash

720
00:39:02,329 --> 00:39:11,769
Booker to xscape the sandbox here is a

721
00:39:07,460 --> 00:39:11,769
demo video for the exfoliator Chan

722
00:39:33,790 --> 00:39:40,920
first stage called fq teens in tonight

723
00:39:38,350 --> 00:39:40,920
or another

724
00:39:53,460 --> 00:40:00,690
second stage is a sop bypass to local

725
00:39:57,480 --> 00:40:03,440
zone and we gather the coded children

726
00:40:00,690 --> 00:40:03,440
okay

727
00:40:11,109 --> 00:40:18,058
next is the flash poker back and we are

728
00:40:15,009 --> 00:40:18,059
out of sandbox

729
00:40:31,280 --> 00:40:37,760
so however this box first for the

730
00:40:35,300 --> 00:40:39,230
flagship poker back o da be removed as

731
00:40:37,760 --> 00:40:42,890
those burnable Eddings

732
00:40:39,230 --> 00:40:45,380
from macro marriott calm for the SOP

733
00:40:42,890 --> 00:40:48,440
bypassed Microsoft added of our

734
00:40:45,380 --> 00:40:52,340
integrity level check in IE carosone a

735
00:40:48,440 --> 00:40:54,980
UI or if it's a target affair has a low

736
00:40:52,340 --> 00:41:07,970
integrity level label it can only be

737
00:40:54,980 --> 00:41:09,980
opened in integrity in internet alone so

738
00:41:07,970 --> 00:41:12,040
to recap we walked you through the

739
00:41:09,980 --> 00:41:15,320
security architecture of Microsoft edge

740
00:41:12,040 --> 00:41:17,330
by minimizing attack surfaces Microsoft

741
00:41:15,320 --> 00:41:20,690
edge is much more secure than its

742
00:41:17,330 --> 00:41:22,730
predecessor Internet Explorer by react

743
00:41:20,690 --> 00:41:25,070
attacking the entire browser new

744
00:41:22,730 --> 00:41:28,070
inter-process communication mechanisms

745
00:41:25,070 --> 00:41:30,410
are needed we typed into these IPC

746
00:41:28,070 --> 00:41:33,650
mechanisms and interactions between

747
00:41:30,410 --> 00:41:36,109
processes and components by abusing

748
00:41:33,650 --> 00:41:38,420
design flaws in these components and

749
00:41:36,110 --> 00:41:44,060
features we were able to find to change

750
00:41:38,420 --> 00:41:46,250
bugs for exact escaping the sandbox so

751
00:41:44,060 --> 00:41:48,980
we just detailed to complete compromise

752
00:41:46,250 --> 00:41:53,750
above Microsoft edge sandbox logically

753
00:41:48,980 --> 00:41:55,490
but why logical bugs are usually not

754
00:41:53,750 --> 00:41:58,190
come from trivial programming errors

755
00:41:55,490 --> 00:42:01,009
they are bad design decisions from the

756
00:41:58,190 --> 00:42:03,350
very beginning to find this you must

757
00:42:01,010 --> 00:42:05,660
have a deeper understanding of the

758
00:42:03,350 --> 00:42:09,230
target software than those programmers

759
00:42:05,660 --> 00:42:10,960
that are actually working on it it is a

760
00:42:09,230 --> 00:42:13,280
combination of programming logic

761
00:42:10,960 --> 00:42:16,100
hardcore operating system internals

762
00:42:13,280 --> 00:42:19,790
reverse engineering and creative

763
00:42:16,100 --> 00:42:22,790
thinking the result is a bug change that

764
00:42:19,790 --> 00:42:28,190
is stable across versions 100% success

765
00:42:22,790 --> 00:42:31,009
rate and simply found to talk about so

766
00:42:28,190 --> 00:42:33,050
we would like to thank Alex ionesco and

767
00:42:31,010 --> 00:42:36,290
James for shell for their excellent

768
00:42:33,050 --> 00:42:38,300
talks papers and code we will also like

769
00:42:36,290 --> 00:42:41,560
to thank our lab director Jung Yu for

770
00:42:38,300 --> 00:42:44,160
their for supporting our research and

771
00:42:41,560 --> 00:42:46,779
thank you all for listening

772
00:42:44,160 --> 00:42:55,500
it's question time

773
00:42:46,780 --> 00:42:55,500
[Applause]

774
00:43:47,619 --> 00:43:50,160
ouch

775
00:43:55,229 --> 00:44:00,609
so we will be releasing a white paper on

776
00:43:58,210 --> 00:44:02,739
blackhat website later today so if you

777
00:44:00,609 --> 00:44:05,270
have any further questions you can also

778
00:44:02,739 --> 00:44:09,760
follow us on Twitter thank you

779
00:44:05,270 --> 00:44:09,759
[Applause]

