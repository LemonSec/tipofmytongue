1
00:00:00,030 --> 00:00:03,149
thank you so much for coming this

2
00:00:01,800 --> 00:00:06,029
afternoon in this session

3
00:00:03,149 --> 00:00:08,750
the topic is perception deception will

4
00:00:06,029 --> 00:00:11,790
be discussing physical address to attack

5
00:00:08,750 --> 00:00:15,089
challenges and tactics for DNN based

6
00:00:11,790 --> 00:00:16,919
object detection so first of all let me

7
00:00:15,089 --> 00:00:19,890
take this opportunity to introduce our

8
00:00:16,920 --> 00:00:22,410
lab a little bit so our lab is called X

9
00:00:19,890 --> 00:00:25,949
lab which is in terms of the secure lab

10
00:00:22,410 --> 00:00:28,080
within the Baidu organization it is led

11
00:00:25,949 --> 00:00:30,810
by our chief secret scientist dr. Tao

12
00:00:28,080 --> 00:00:33,360
Wei who has been taking the leading

13
00:00:30,810 --> 00:00:35,610
efforts not only making sure all the

14
00:00:33,360 --> 00:00:38,309
Baidu services and infrastructures are

15
00:00:35,610 --> 00:00:40,379
safe and secure but also more

16
00:00:38,309 --> 00:00:41,660
importantly creating innovations for the

17
00:00:40,379 --> 00:00:45,449
next generation

18
00:00:41,660 --> 00:00:48,599
trustworthy privacy preserving computing

19
00:00:45,450 --> 00:00:51,600
frameworks and my name is Jamie Jon and

20
00:00:48,600 --> 00:00:53,280
prefer to be called Edward I'm leading

21
00:00:51,600 --> 00:00:55,440
the effort in the AI security research

22
00:00:53,280 --> 00:00:59,070
and this topic actually falls into that

23
00:00:55,440 --> 00:01:01,589
category and my interests falls into two

24
00:00:59,070 --> 00:01:04,650
different directions first its adverse

25
00:01:01,590 --> 00:01:08,790
to machine learning those kind of thing

26
00:01:04,650 --> 00:01:12,240
basically we are exploring the safety

27
00:01:08,790 --> 00:01:15,560
and security metrics to the robustness

28
00:01:12,240 --> 00:01:19,080
of the deep learning models as well as

29
00:01:15,560 --> 00:01:21,119
exploring the defensive mechanisms to

30
00:01:19,080 --> 00:01:24,509
the IDF through attack against the deep

31
00:01:21,119 --> 00:01:27,000
learning models and secondly we also

32
00:01:24,509 --> 00:01:28,560
care about model privacy so suppose your

33
00:01:27,000 --> 00:01:32,189
mother's deploy in the cloud service

34
00:01:28,560 --> 00:01:34,740
want to make sure our computation in the

35
00:01:32,189 --> 00:01:38,158
cloud service are trustworthy so so your

36
00:01:34,740 --> 00:01:40,560
model output will be correct also I

37
00:01:38,159 --> 00:01:44,030
would like to introduce my colleague dr.

38
00:01:40,560 --> 00:01:47,729
lu han chaeah who is also graduated from

39
00:01:44,030 --> 00:01:49,649
michigan and ever he has done create

40
00:01:47,729 --> 00:01:52,259
tremendous job to carrying out all the

41
00:01:49,649 --> 00:01:55,740
experimental results and all the demos

42
00:01:52,259 --> 00:01:58,560
you will see throughout the talk and

43
00:01:55,740 --> 00:02:01,229
also there's another folks within issue

44
00:01:58,560 --> 00:02:03,960
who is a PhD candidate from units

45
00:02:01,229 --> 00:02:06,179
university of virginia he also

46
00:02:03,960 --> 00:02:08,788
contributes a lot to the this project

47
00:02:06,180 --> 00:02:11,450
and also in addition to the AI secret

48
00:02:08,788 --> 00:02:13,329
research we have a bunch of folks

49
00:02:11,450 --> 00:02:17,339
dedicated into

50
00:02:13,330 --> 00:02:21,100
system secure research and they create

51
00:02:17,340 --> 00:02:22,240
they've devoted to efforts into creating

52
00:02:21,100 --> 00:02:25,710
a technology called

53
00:02:22,240 --> 00:02:29,410
Meza te which stands for the memory safe

54
00:02:25,710 --> 00:02:31,620
trustworthy execution environment so

55
00:02:29,410 --> 00:02:34,810
this is first time that the memory safe

56
00:02:31,620 --> 00:02:36,610
trustworthy and privacy-preserving has

57
00:02:34,810 --> 00:02:38,850
been introduced at the key feature for

58
00:02:36,610 --> 00:02:41,710
the distributed computing framework and

59
00:02:38,850 --> 00:02:44,890
under this framework we have developed a

60
00:02:41,710 --> 00:02:48,460
number of open source projects first of

61
00:02:44,890 --> 00:02:51,660
all is the wrost SGX which combines rust

62
00:02:48,460 --> 00:02:54,040
programming language and Intel SGX

63
00:02:51,660 --> 00:02:56,890
technology to make sure all the

64
00:02:54,040 --> 00:03:01,120
sensitive permutation will be protected

65
00:02:56,890 --> 00:03:03,940
within the STX Enclave without any so

66
00:03:01,120 --> 00:03:06,820
with memory state guarantees and thread

67
00:03:03,940 --> 00:03:10,300
safe guarantees we also have master lock

68
00:03:06,820 --> 00:03:13,060
which is user level Linux which reduce

69
00:03:10,300 --> 00:03:15,820
lots of attack services we also have a

70
00:03:13,060 --> 00:03:19,480
meso link which is a replacement to the

71
00:03:15,820 --> 00:03:22,750
well-known open SSL libraries which it

72
00:03:19,480 --> 00:03:26,320
eliminates memory vulnerabilities such

73
00:03:22,750 --> 00:03:28,840
as the notorious hot blade we also have

74
00:03:26,320 --> 00:03:31,780
a mess of Pi which enables data

75
00:03:28,840 --> 00:03:34,300
scientists to run Python program within

76
00:03:31,780 --> 00:03:38,140
the SDH environment without running into

77
00:03:34,300 --> 00:03:40,900
memory issues and last but not least we

78
00:03:38,140 --> 00:03:43,238
have a TV box which is a playground the

79
00:03:40,900 --> 00:03:45,610
researchers can play the adversative

80
00:03:43,239 --> 00:03:48,760
machine learning attack algorithm as

81
00:03:45,610 --> 00:03:53,769
well as the defensive algorithms using

82
00:03:48,760 --> 00:03:56,380
the public available data sets last but

83
00:03:53,769 --> 00:03:59,470
not least we are hiring so feel free to

84
00:03:56,380 --> 00:04:02,709
use scan the QR code on top to find out

85
00:03:59,470 --> 00:04:05,290
our opening positions and all these

86
00:04:02,709 --> 00:04:08,890
positions are located in Sunnyvale

87
00:04:05,290 --> 00:04:11,290
California so feel free to talk to me

88
00:04:08,890 --> 00:04:15,010
offline or sue me email in that email

89
00:04:11,290 --> 00:04:17,339
address so let's come back to our talk

90
00:04:15,010 --> 00:04:19,978
first is the disclaimer sorry

91
00:04:17,339 --> 00:04:22,390
so this talk doesn't target any

92
00:04:19,978 --> 00:04:25,060
commercial autonomous driving system and

93
00:04:22,390 --> 00:04:27,159
we don't provide any comments to the

94
00:04:25,060 --> 00:04:29,530
vulnerabilities of the perception of

95
00:04:27,160 --> 00:04:32,020
existing autonomous systems and we only

96
00:04:29,530 --> 00:04:34,950
focus on state-of-the-art object

97
00:04:32,020 --> 00:04:37,930
detection methods and all the results

98
00:04:34,950 --> 00:04:41,440
experimental results techniques we show

99
00:04:37,930 --> 00:04:44,380
here are just proof of concept so when

100
00:04:41,440 --> 00:04:46,930
we talk about atoms driving we really

101
00:04:44,380 --> 00:04:50,080
worry about it car safety it's nimble in

102
00:04:46,930 --> 00:04:51,730
priority but automakers because human

103
00:04:50,080 --> 00:04:55,750
life matters right

104
00:04:51,730 --> 00:04:57,730
so back in 2002 to 2010 there were a

105
00:04:55,750 --> 00:05:00,970
huge amount of complaints about a

106
00:04:57,730 --> 00:05:04,900
unintended acceleration in Toyota

107
00:05:00,970 --> 00:05:06,760
vehicles and in 2010 CBS News actually

108
00:05:04,900 --> 00:05:10,799
release a piece of information saying

109
00:05:06,760 --> 00:05:14,230
that the Toyota unintended acceleration

110
00:05:10,800 --> 00:05:17,340
might have involved in the deaths of

111
00:05:14,230 --> 00:05:20,410
alien and people's this my also

112
00:05:17,340 --> 00:05:25,330
indicating that's related to the mess

113
00:05:20,410 --> 00:05:28,960
recourse over the past decades and the

114
00:05:25,330 --> 00:05:30,849
duty that NASA actually was caught upon

115
00:05:28,960 --> 00:05:34,000
an investigation into this matter and

116
00:05:30,850 --> 00:05:36,490
the thirty talented engineers spent ten

117
00:05:34,000 --> 00:05:41,020
months looking to that and they came

118
00:05:36,490 --> 00:05:45,310
back with a 179 pages report and on the

119
00:05:41,020 --> 00:05:46,659
page 17 we can find that they claim this

120
00:05:45,310 --> 00:05:50,260
large throttle opening

121
00:05:46,660 --> 00:05:52,810
UAE's as described cannot be found but

122
00:05:50,260 --> 00:05:55,599
they also saying that this does not mean

123
00:05:52,810 --> 00:05:57,190
it couldn't happen just because given

124
00:05:55,600 --> 00:06:00,940
the time frame they have and the

125
00:05:57,190 --> 00:06:04,719
complexity of problem they have and a

126
00:06:00,940 --> 00:06:07,630
couple years later in 2013 actually a

127
00:06:04,720 --> 00:06:11,200
second group pick up the problems after

128
00:06:07,630 --> 00:06:14,460
what NASA folks had left behind they

129
00:06:11,200 --> 00:06:17,650
actually provide a second opinion data

130
00:06:14,460 --> 00:06:19,539
they actually found some critical

131
00:06:17,650 --> 00:06:21,010
variables that are unprotected under

132
00:06:19,540 --> 00:06:24,400
some corruptions and these corruptions

133
00:06:21,010 --> 00:06:27,010
and memory corruptions due to stack

134
00:06:24,400 --> 00:06:30,520
overflows or buffer overflows or risk

135
00:06:27,010 --> 00:06:33,789
conditions and these bugs caused some

136
00:06:30,520 --> 00:06:36,250
tasks to die and these defects actually

137
00:06:33,790 --> 00:06:38,730
linked to these unintended acceleration

138
00:06:36,250 --> 00:06:40,980
problems

139
00:06:38,730 --> 00:06:47,460
through the hardware and software

140
00:06:40,980 --> 00:06:49,920
testing so eventually as we can see New

141
00:06:47,460 --> 00:06:53,010
York Times has this piece of news saying

142
00:06:49,920 --> 00:06:55,470
that to the actually agrees a 1.6

143
00:06:53,010 --> 00:07:00,090
billion settlements for a class action

144
00:06:55,470 --> 00:07:03,840
after that so that really means car

145
00:07:00,090 --> 00:07:06,570
safety is really important it costs lots

146
00:07:03,840 --> 00:07:10,619
of human resources looking through this

147
00:07:06,570 --> 00:07:15,270
problem it is very complex and it's cost

148
00:07:10,620 --> 00:07:18,390
lots of money and also early this year

149
00:07:15,270 --> 00:07:20,909
in March the 19th goober

150
00:07:18,390 --> 00:07:23,820
the uber self-driving car actually

151
00:07:20,910 --> 00:07:26,430
killed a person who was crossing the

152
00:07:23,820 --> 00:07:29,969
street in the state of Arizona during

153
00:07:26,430 --> 00:07:33,180
the night this picture was actually

154
00:07:29,970 --> 00:07:37,140
taken after the accident when the ntps

155
00:07:33,180 --> 00:07:39,330
folks were doing an investigation on the

156
00:07:37,140 --> 00:07:43,229
vehicle which is involved in the

157
00:07:39,330 --> 00:07:46,409
accident and as a result ruber stop this

158
00:07:43,230 --> 00:07:50,640
out self-driving car operations in the

159
00:07:46,410 --> 00:07:53,940
state of Arizona another very

160
00:07:50,640 --> 00:07:58,460
interesting case here is that in May two

161
00:07:53,940 --> 00:08:03,330
thousand eighteen in the state of Utah

162
00:07:58,460 --> 00:08:07,080
the there was a driver who is rear-ended

163
00:08:03,330 --> 00:08:09,570
into a file fatty truck and he claimed

164
00:08:07,080 --> 00:08:11,810
that car was running on autopilot mode

165
00:08:09,570 --> 00:08:16,800
it is really interesting to us because

166
00:08:11,810 --> 00:08:19,860
as we know autopilot kind of future it

167
00:08:16,800 --> 00:08:22,470
has to be equipped sensors like Raiders

168
00:08:19,860 --> 00:08:25,290
and cameras to have 360 degrees of

169
00:08:22,470 --> 00:08:27,630
visibility and it also can help them to

170
00:08:25,290 --> 00:08:31,470
t attack the nearby objects like cars

171
00:08:27,630 --> 00:08:33,809
and how on earth such a big a shining

172
00:08:31,470 --> 00:08:36,930
red firefighter cannot be seen by these

173
00:08:33,809 --> 00:08:42,000
sensors and also there's no action has

174
00:08:36,929 --> 00:08:43,539
been taken based on that so far there's

175
00:08:42,000 --> 00:08:46,850
no

176
00:08:43,539 --> 00:08:51,639
explanation on that probably there won't

177
00:08:46,850 --> 00:08:51,639
be any but in this talk we're trying to

178
00:08:51,670 --> 00:08:57,110
demonstrate what we found in terms of

179
00:08:55,310 --> 00:09:00,888
the input the variability in the sensory

180
00:08:57,110 --> 00:09:06,470
inputs so we talked about the

181
00:09:00,889 --> 00:09:08,749
perceptions so in order to get a car to

182
00:09:06,470 --> 00:09:11,180
understand its surroundings it has to be

183
00:09:08,749 --> 00:09:15,170
equipped with various types of sensors

184
00:09:11,180 --> 00:09:17,540
such as a lidar radar or cameras and

185
00:09:15,170 --> 00:09:20,410
they work together to identify different

186
00:09:17,540 --> 00:09:23,569
drowning scenarios for example the

187
00:09:20,410 --> 00:09:25,939
camera can detect the 2d objects they

188
00:09:23,569 --> 00:09:28,610
can detect traffic lights they can

189
00:09:25,939 --> 00:09:31,370
identify the type of science and the

190
00:09:28,610 --> 00:09:33,680
lighters they can detect 3d objects and

191
00:09:31,370 --> 00:09:36,559
the Raiders can detect objects even in

192
00:09:33,680 --> 00:09:38,209
the severe weathers and the DS sensors

193
00:09:36,559 --> 00:09:40,249
actually enables two perception

194
00:09:38,209 --> 00:09:43,219
capability within autonomous driving

195
00:09:40,249 --> 00:09:46,490
systems and coming back to the cost

196
00:09:43,220 --> 00:09:49,339
estimates rate a cost like a couple of

197
00:09:46,490 --> 00:09:52,579
several thousands of dollars a lighter

198
00:09:49,339 --> 00:09:54,889
to cost $10,000 to $100 or even more

199
00:09:52,579 --> 00:09:59,149
depending on what kind of resolution you

200
00:09:54,889 --> 00:10:02,660
want to have however a camera only takes

201
00:09:59,149 --> 00:10:06,620
several hundred dollars so that means it

202
00:10:02,660 --> 00:10:08,660
is way more expensive for a car to be

203
00:10:06,620 --> 00:10:12,589
equipped with sliders if you want to do

204
00:10:08,660 --> 00:10:14,600
a mass production on that so so that

205
00:10:12,589 --> 00:10:17,329
means only a few big players can do that

206
00:10:14,600 --> 00:10:20,420
such as Google Wemo or uber those kind

207
00:10:17,329 --> 00:10:22,878
of players so there's a lots of guys a

208
00:10:20,420 --> 00:10:24,769
lots of Astarte can tend to use a

209
00:10:22,879 --> 00:10:26,809
low-cost kind of solution which is the

210
00:10:24,769 --> 00:10:30,019
division based of your detaching that's

211
00:10:26,809 --> 00:10:32,809
why in this talk we are focusing on our

212
00:10:30,019 --> 00:10:38,269
vision based or camera based of the

213
00:10:32,809 --> 00:10:42,469
detection so there are a number of ways

214
00:10:38,269 --> 00:10:44,929
to do the camera based object actions in

215
00:10:42,470 --> 00:10:47,449
this talk we only focus on end to end of

216
00:10:44,929 --> 00:10:50,120
your session which leveraging on the

217
00:10:47,449 --> 00:10:53,508
deep neural networks to do that so as

218
00:10:50,120 --> 00:10:57,410
you can see from the image in this slide

219
00:10:53,509 --> 00:11:00,889
basic play is trying to find odd parts

220
00:10:57,410 --> 00:11:03,439
places that might have the potential

221
00:11:00,889 --> 00:11:05,149
objects in the furthermore do you need

222
00:11:03,440 --> 00:11:07,879
to determine whether these places

223
00:11:05,149 --> 00:11:11,209
contains an object or not and also

224
00:11:07,879 --> 00:11:14,600
trying to associate in this object with

225
00:11:11,209 --> 00:11:17,000
a certain class and these as you can see

226
00:11:14,600 --> 00:11:22,970
these are technology related to computer

227
00:11:17,000 --> 00:11:24,589
vision and image processing and here we

228
00:11:22,970 --> 00:11:28,069
want to introduce one of the state of

229
00:11:24,589 --> 00:11:29,389
the art object of vision based object

230
00:11:28,069 --> 00:11:34,009
detection method is called

231
00:11:29,389 --> 00:11:35,689
Yolo you only look once so in this slide

232
00:11:34,009 --> 00:11:38,600
gives us high-level introduction

233
00:11:35,689 --> 00:11:40,670
basically given in image first of all

234
00:11:38,600 --> 00:11:45,110
you'll resize it into certain size which

235
00:11:40,670 --> 00:11:46,969
here is for 16 by 4 16 by 3 then you

236
00:11:45,110 --> 00:11:51,290
will down some pole yet by a factor of

237
00:11:46,970 --> 00:11:53,649
32 until it reach to a 13 by 13 future

238
00:11:51,290 --> 00:11:58,579
map in the based on the future Matt will

239
00:11:53,649 --> 00:12:01,279
make predictions on the entry boxes

240
00:11:58,579 --> 00:12:03,500
which I will talk about in detail later

241
00:12:01,279 --> 00:12:05,930
which is the prior knowledge of the

242
00:12:03,500 --> 00:12:10,579
object the yellow will detect in the

243
00:12:05,930 --> 00:12:14,000
image and also will give a detection for

244
00:12:10,579 --> 00:12:15,739
the number of classes the training data

245
00:12:14,000 --> 00:12:18,740
set has so basically if your training is

246
00:12:15,740 --> 00:12:22,310
has 10 different classes you will make

247
00:12:18,740 --> 00:12:26,329
10 different predictions over these 10

248
00:12:22,310 --> 00:12:30,349
classes so people may ask why do you

249
00:12:26,329 --> 00:12:32,599
choose yellow as your target so good

250
00:12:30,350 --> 00:12:35,569
news is the Euler also actually does a

251
00:12:32,600 --> 00:12:38,689
great job to do the comparison not only

252
00:12:35,569 --> 00:12:44,139
on the accuracy but also on the

253
00:12:38,689 --> 00:12:47,120
performances so here for the accuracy

254
00:12:44,139 --> 00:12:49,750
actually the also actually compared the

255
00:12:47,120 --> 00:12:53,000
yellow with a number of different

256
00:12:49,750 --> 00:12:57,829
objective methods so in this table you

257
00:12:53,000 --> 00:13:01,759
can see the compared energy precision

258
00:12:57,829 --> 00:13:04,609
which is that the Metra used commonly in

259
00:13:01,759 --> 00:13:05,660
the object attachment world the real

260
00:13:04,610 --> 00:13:09,350
precision over different

261
00:13:05,660 --> 00:13:10,990
iou which is intersection over union and

262
00:13:09,350 --> 00:13:13,060
also the measured

263
00:13:10,990 --> 00:13:15,790
average precision over different types

264
00:13:13,060 --> 00:13:17,920
of objects you can be small but it could

265
00:13:15,790 --> 00:13:21,339
be medium object it could be a larger

266
00:13:17,920 --> 00:13:23,560
object so as you can see if we don't

267
00:13:21,340 --> 00:13:27,040
consider a real time as a compartment

268
00:13:23,560 --> 00:13:29,020
for the object detection then the ready

269
00:13:27,040 --> 00:13:33,670
net which is the second from the last

270
00:13:29,020 --> 00:13:37,270
has the best accuracy however if we just

271
00:13:33,670 --> 00:13:40,180
compare the yellow v3 accuracy with the

272
00:13:37,270 --> 00:13:42,210
rest of the methods you can see the

273
00:13:40,180 --> 00:13:46,479
average precision are very comparable

274
00:13:42,210 --> 00:13:49,300
there's not much difference there now we

275
00:13:46,480 --> 00:13:53,620
come back to look at the performance and

276
00:13:49,300 --> 00:13:58,359
see how efficient is if you want to

277
00:13:53,620 --> 00:14:01,660
detect an image right so how how much

278
00:13:58,360 --> 00:14:03,790
how much is it for the interest time so

279
00:14:01,660 --> 00:14:05,969
you low actually takes fit 1

280
00:14:03,790 --> 00:14:09,640
milliseconds to inference and image

281
00:14:05,970 --> 00:14:12,970
however the ready net which has the best

282
00:14:09,640 --> 00:14:17,080
of accuracy performance would take like

283
00:14:12,970 --> 00:14:19,170
a 198 milliseconds so you low V 3 is 3

284
00:14:17,080 --> 00:14:20,770
point 8 times faster than the best

285
00:14:19,170 --> 00:14:24,310
detection method

286
00:14:20,770 --> 00:14:26,770
reading on it and also when we compare a

287
00:14:24,310 --> 00:14:31,750
region based object detection method

288
00:14:26,770 --> 00:14:34,569
which is faster RCN you lava tree is

289
00:14:31,750 --> 00:14:37,900
still like three times more faster than

290
00:14:34,570 --> 00:14:40,330
the region based faster our Sienna so

291
00:14:37,900 --> 00:14:42,730
since we are looking at a hard-driving

292
00:14:40,330 --> 00:14:44,890
kind of scenario so real time is really

293
00:14:42,730 --> 00:14:48,850
a requirement for us so that's why we

294
00:14:44,890 --> 00:14:54,040
choose au low v3 as our object attacked

295
00:14:48,850 --> 00:14:56,070
method for the attack and the animation

296
00:14:54,040 --> 00:15:00,160
on the right actually shows the

297
00:14:56,070 --> 00:15:04,990
effectiveness of the yellow v3 we took

298
00:15:00,160 --> 00:15:07,480
in image from a parking lot and display

299
00:15:04,990 --> 00:15:11,080
it on the monitor and the feed it to a

300
00:15:07,480 --> 00:15:14,470
new v3 model which is deployed on iPhone

301
00:15:11,080 --> 00:15:17,050
apps so you can see all the cars can be

302
00:15:14,470 --> 00:15:20,200
correctly identified by you love III

303
00:15:17,050 --> 00:15:23,290
even you move the iPhone X camera from

304
00:15:20,200 --> 00:15:24,040
side to side a little bit I still can

305
00:15:23,290 --> 00:15:27,730
correctly idea

306
00:15:24,040 --> 00:15:30,699
these cars so which means you know via

307
00:15:27,730 --> 00:15:36,220
what's perfectly know what's very well I

308
00:15:30,699 --> 00:15:39,758
would say now we pick our target that's

309
00:15:36,220 --> 00:15:42,399
let's switch gears to take a look what

310
00:15:39,759 --> 00:15:45,160
the current status of the anniversary

311
00:15:42,399 --> 00:15:49,269
examples problem lots of you already

312
00:15:45,160 --> 00:15:51,939
know that added virtual example has very

313
00:15:49,269 --> 00:15:54,370
effective to fool the deep learning

314
00:15:51,940 --> 00:15:57,250
models to reach to a in credit decisions

315
00:15:54,370 --> 00:16:00,130
so normally in the image world is

316
00:15:57,250 --> 00:16:04,540
defined as like given an input image you

317
00:16:00,130 --> 00:16:07,509
need to apply a delta 2d image to to

318
00:16:04,540 --> 00:16:09,939
craft a new new image so we want to

319
00:16:07,509 --> 00:16:12,880
minimize these distances so that human

320
00:16:09,940 --> 00:16:14,230
cannot easily identify it and also at

321
00:16:12,880 --> 00:16:16,569
the same time when you apply the

322
00:16:14,230 --> 00:16:19,420
classification function on it you reach

323
00:16:16,569 --> 00:16:22,019
two different results and at the same

324
00:16:19,420 --> 00:16:24,479
time when you after you apply the

325
00:16:22,019 --> 00:16:27,490
perturbation to the original image the

326
00:16:24,480 --> 00:16:31,829
newly generated image has to be a valid

327
00:16:27,490 --> 00:16:34,690
image as well and also the most

328
00:16:31,829 --> 00:16:39,430
well-studied additional metric we call

329
00:16:34,690 --> 00:16:41,589
it LP norm the purely these are being

330
00:16:39,430 --> 00:16:44,349
used to generate these adversary'

331
00:16:41,589 --> 00:16:47,709
examples the three of those the first is

332
00:16:44,350 --> 00:16:51,399
L infinity which means intuitively the

333
00:16:47,709 --> 00:16:53,829
attacker can make changes to all pixels

334
00:16:51,399 --> 00:16:56,500
in the image and for each pixel is only

335
00:16:53,829 --> 00:17:01,599
allowed to be changed by aperture limit

336
00:16:56,500 --> 00:17:04,480
and secondly is the L 0 L 0 means the

337
00:17:01,600 --> 00:17:07,360
attacker can only change the pixel that

338
00:17:04,480 --> 00:17:09,699
matters most which matters most means

339
00:17:07,359 --> 00:17:13,599
can have the biggest impact to the

340
00:17:09,699 --> 00:17:17,140
incorrect transcription results the L 2

341
00:17:13,599 --> 00:17:19,928
is you mainly based on Euclidean

342
00:17:17,140 --> 00:17:22,780
distance kind of metric so intuitive

343
00:17:19,929 --> 00:17:28,510
lady add the actor can make changes to

344
00:17:22,780 --> 00:17:30,639
many pixels by just a small amount so

345
00:17:28,510 --> 00:17:33,190
next let me show some examples for these

346
00:17:30,640 --> 00:17:37,720
three different kind of LP knobs to see

347
00:17:33,190 --> 00:17:40,810
how these impact to the DNS

348
00:17:37,720 --> 00:17:43,600
so first let's take a look at the L

349
00:17:40,810 --> 00:17:46,720
infinity kind of perturbations one

350
00:17:43,600 --> 00:17:50,260
typical algorithm using this kind of

351
00:17:46,720 --> 00:17:52,870
perturbation is called fgs m it is fast

352
00:17:50,260 --> 00:17:56,530
gradient some method proposed by Yee and

353
00:17:52,870 --> 00:18:00,070
good fellow who is from Google brain so

354
00:17:56,530 --> 00:18:02,830
the middle image is the perturbation we

355
00:18:00,070 --> 00:18:04,929
produced based on this method and we

356
00:18:02,830 --> 00:18:07,000
apply that image to the original image

357
00:18:04,930 --> 00:18:08,440
which is on the left which result into

358
00:18:07,000 --> 00:18:11,620
image on the right

359
00:18:08,440 --> 00:18:16,630
and once we feed that image to the gyro

360
00:18:11,620 --> 00:18:19,899
v3 as you can tell the cars actually are

361
00:18:16,630 --> 00:18:20,620
misclassified into different objects

362
00:18:19,900 --> 00:18:22,840
sorry

363
00:18:20,620 --> 00:18:26,199
the it could be him back it could be

364
00:18:22,840 --> 00:18:31,270
motorbikes or so forth so completely

365
00:18:26,200 --> 00:18:33,460
foody yellow v3 we also tried the l0

366
00:18:31,270 --> 00:18:36,690
kind of perturbation when typical

367
00:18:33,460 --> 00:18:40,270
algorithm is GSMA proposed by new class

368
00:18:36,690 --> 00:18:42,670
people not it is called actually Scot

369
00:18:40,270 --> 00:18:46,690
Jason see Jacobian based silencing

370
00:18:42,670 --> 00:18:49,000
mapped message so again the middle image

371
00:18:46,690 --> 00:18:51,250
is the perturbation applied we

372
00:18:49,000 --> 00:18:53,710
calculated based on these methods we

373
00:18:51,250 --> 00:18:55,750
apply that to the original image on the

374
00:18:53,710 --> 00:18:58,390
right on the left which results into

375
00:18:55,750 --> 00:19:03,640
image on the right then we feed that

376
00:18:58,390 --> 00:19:08,110
into a you love III as you can tell all

377
00:19:03,640 --> 00:19:10,030
these cars are mispredict as backpacks

378
00:19:08,110 --> 00:19:14,610
or motorbikes or even you can tell

379
00:19:10,030 --> 00:19:17,710
there's a bird coming out of nowhere and

380
00:19:14,610 --> 00:19:21,820
now let's take a look how the l2

381
00:19:17,710 --> 00:19:24,400
division works again l2 typical

382
00:19:21,820 --> 00:19:26,500
algorithm they proposed by folks from UC

383
00:19:24,400 --> 00:19:30,760
Berkeley Nexus colony and they were

384
00:19:26,500 --> 00:19:33,220
Wagner in the middle is again the

385
00:19:30,760 --> 00:19:36,400
perturbation results we got by applying

386
00:19:33,220 --> 00:19:38,790
this kind of methods we add that to the

387
00:19:36,400 --> 00:19:41,920
original image which is out into a

388
00:19:38,790 --> 00:19:45,340
perturbed image on the right when we

389
00:19:41,920 --> 00:19:48,540
feed that into you know v3 model you can

390
00:19:45,340 --> 00:19:51,610
see how it works again lots of a car

391
00:19:48,540 --> 00:19:55,960
mispredicted and also there's a

392
00:19:51,610 --> 00:19:58,540
bird coming out of nowhere again so far

393
00:19:55,960 --> 00:20:01,420
what I introduced here they're still in

394
00:19:58,540 --> 00:20:03,370
the detail contest means you came

395
00:20:01,420 --> 00:20:07,300
through if we have freedom to make

396
00:20:03,370 --> 00:20:09,760
changes to the original image so the

397
00:20:07,300 --> 00:20:12,700
question or maybe the debate may come up

398
00:20:09,760 --> 00:20:16,390
with that whether this is feasible

399
00:20:12,700 --> 00:20:18,670
whether you can change it any pixel

400
00:20:16,390 --> 00:20:20,740
value in the image or not whether you

401
00:20:18,670 --> 00:20:23,290
can change the pixel value of the tree

402
00:20:20,740 --> 00:20:25,180
or not whether you can make changes to

403
00:20:23,290 --> 00:20:28,210
the pixel value of the sky these are

404
00:20:25,180 --> 00:20:30,550
maybe very valid questions so in the

405
00:20:28,210 --> 00:20:32,710
rest of the talk we'll try to

406
00:20:30,550 --> 00:20:38,770
demonstrate how we achieve this

407
00:20:32,710 --> 00:20:40,450
step-by-step so first of all we want to

408
00:20:38,770 --> 00:20:43,150
explore the chances of physical attacks

409
00:20:40,450 --> 00:20:46,270
against the yellow v3 in a white box

410
00:20:43,150 --> 00:20:49,330
settings pick it in terms that white box

411
00:20:46,270 --> 00:20:51,850
is that we assume we have the knowledge

412
00:20:49,330 --> 00:20:54,159
about the original model architecture

413
00:20:51,850 --> 00:20:57,610
and parameters and probably the original

414
00:20:54,160 --> 00:20:59,290
tree analysis as well and also we need

415
00:20:57,610 --> 00:21:02,020
to identify the opportunities by

416
00:20:59,290 --> 00:21:05,139
completely understanding the Uwe

417
00:21:02,020 --> 00:21:08,620
inference mechanisms so let's keep get a

418
00:21:05,140 --> 00:21:12,580
deep dive into you love e3 so as we

419
00:21:08,620 --> 00:21:15,850
mentioned early you'll obviously take

420
00:21:12,580 --> 00:21:19,120
the image as an input you reset into a

421
00:21:15,850 --> 00:21:24,179
certain size in this case for 16 by 4 16

422
00:21:19,120 --> 00:21:27,429
by 3 you will pipe this into a series of

423
00:21:24,180 --> 00:21:32,020
collusion layer and maximum layers which

424
00:21:27,430 --> 00:21:34,540
involves like total 147 layers and there

425
00:21:32,020 --> 00:21:37,900
are also like a six to a million

426
00:21:34,540 --> 00:21:40,510
parameters of social with that until we

427
00:21:37,900 --> 00:21:42,520
reach to a 13 by 13 future math when

428
00:21:40,510 --> 00:21:43,900
they make the predictions you make

429
00:21:42,520 --> 00:21:47,160
prediction on three different scales

430
00:21:43,900 --> 00:21:51,060
there's one searching by 13 there's a

431
00:21:47,160 --> 00:21:54,190
126 by 26 there's another 150 by 52 and

432
00:21:51,060 --> 00:21:59,379
as a result the you love you actually

433
00:21:54,190 --> 00:22:02,040
will make 10,000 647 predictions on the

434
00:21:59,380 --> 00:22:02,040
bottom boxes

435
00:22:02,380 --> 00:22:09,340
so for the training data sets in this

436
00:22:05,850 --> 00:22:11,110
talk we are using the MS koko data set

437
00:22:09,340 --> 00:22:13,659
which stands for the common objects in

438
00:22:11,110 --> 00:22:16,510
context so you know autonomous driving

439
00:22:13,660 --> 00:22:19,450
kind of scenarios they're only like a

440
00:22:16,510 --> 00:22:21,940
person cars truck bus bicycle

441
00:22:19,450 --> 00:22:24,039
motorcycles and stop sign the traffic

442
00:22:21,940 --> 00:22:25,929
light associate with these Thomas

443
00:22:24,039 --> 00:22:29,049
driving kind of scenarios but in total

444
00:22:25,929 --> 00:22:31,390
there are like 80 classes in the cocoa

445
00:22:29,049 --> 00:22:35,620
data sets as you can tell in the image

446
00:22:31,390 --> 00:22:37,990
below these autonomous driving kind of

447
00:22:35,620 --> 00:22:40,870
scenario related objects there can be

448
00:22:37,990 --> 00:22:47,080
correctly annotated and will be

449
00:22:40,870 --> 00:22:49,270
classified correctly now let's take a

450
00:22:47,080 --> 00:22:51,730
look how the yellow v3 makes the

451
00:22:49,270 --> 00:22:55,470
predictions suppose we take the

452
00:22:51,730 --> 00:22:58,299
assertion by 13 skill as an example so

453
00:22:55,470 --> 00:23:00,370
each cell in this grid will be

454
00:22:58,299 --> 00:23:03,400
responsible to predict the objects

455
00:23:00,370 --> 00:23:06,840
suppose we are going to predict stops on

456
00:23:03,400 --> 00:23:13,090
here and the center of the stop sign is

457
00:23:06,840 --> 00:23:15,789
in color number 11 and road number 2 so

458
00:23:13,090 --> 00:23:19,000
in this cell you'll make predictions on

459
00:23:15,789 --> 00:23:21,690
three different entry boxes and these

460
00:23:19,000 --> 00:23:25,330
anchor boxes are just prior knowledge of

461
00:23:21,690 --> 00:23:27,190
the shape and the size of the objects

462
00:23:25,330 --> 00:23:31,168
that learn from the training data sets

463
00:23:27,190 --> 00:23:31,169
by applying a caming clustering

464
00:23:31,559 --> 00:23:37,210
algorithm out actually learned a tour

465
00:23:34,990 --> 00:23:41,740
and the thing objects rather than the

466
00:23:37,210 --> 00:23:44,049
right and short objects so suppose this

467
00:23:41,740 --> 00:23:48,789
stop sign is associated with a anchor

468
00:23:44,049 --> 00:23:51,850
box with a shape like 116 by 90 and

469
00:23:48,789 --> 00:23:57,370
there is a prediction vector which will

470
00:23:51,850 --> 00:24:00,520
do the prediction this is a fixed length

471
00:23:57,370 --> 00:24:02,229
prediction vector and first I will

472
00:24:00,520 --> 00:24:04,120
introduce four elements of that which is

473
00:24:02,230 --> 00:24:08,710
responsible for predicting the bounding

474
00:24:04,120 --> 00:24:10,270
box at the bounding box the center point

475
00:24:08,710 --> 00:24:12,280
of the bounding box the second layer

476
00:24:10,270 --> 00:24:13,350
will predict the size and the shape of

477
00:24:12,280 --> 00:24:18,360
the bounding box

478
00:24:13,350 --> 00:24:21,029
so to calculate the center or the center

479
00:24:18,360 --> 00:24:24,320
point of the binding box here P of X and

480
00:24:21,029 --> 00:24:27,179
B of Y indicating the coordinates so

481
00:24:24,320 --> 00:24:30,059
basically a use a function Sigma

482
00:24:27,179 --> 00:24:35,669
function to apply to the T of X here in

483
00:24:30,059 --> 00:24:39,330
the prediction vector as the offset of X

484
00:24:35,669 --> 00:24:43,500
from the top left corner of the of that

485
00:24:39,330 --> 00:24:46,949
cell similarly you can get the offset of

486
00:24:43,500 --> 00:24:49,919
Y by you applying the Sigma function to

487
00:24:46,950 --> 00:24:52,409
get the offset of Y from top left corner

488
00:24:49,919 --> 00:24:54,539
of that cell so that in that way you got

489
00:24:52,409 --> 00:25:00,929
the P of X and P of Y as the center of

490
00:24:54,539 --> 00:25:03,450
the bonnie box okay then the next job is

491
00:25:00,929 --> 00:25:05,820
we need to know the size of the objects

492
00:25:03,450 --> 00:25:09,659
so you need to draw a rectangular around

493
00:25:05,820 --> 00:25:13,439
a stop sign so the way to do that is

494
00:25:09,659 --> 00:25:17,370
they use a formula basically they

495
00:25:13,440 --> 00:25:20,580
multiply the original Inca box the width

496
00:25:17,370 --> 00:25:23,489
of the band and Kibaki of W to the e ^

497
00:25:20,580 --> 00:25:26,039
TFW in the prediction lecture to get the

498
00:25:23,490 --> 00:25:28,049
width of the bonding box in a similar

499
00:25:26,039 --> 00:25:31,139
way they got the height of the bounding

500
00:25:28,049 --> 00:25:32,970
box by multiplying AP of edge to the e

501
00:25:31,139 --> 00:25:35,158
to the power of T average in the

502
00:25:32,970 --> 00:25:42,659
prediction vector that's how they got

503
00:25:35,159 --> 00:25:46,379
the size and now we have the correct one

504
00:25:42,659 --> 00:25:52,649
in box draw it around a stop sign which

505
00:25:46,379 --> 00:25:55,168
perfect next is just remembered ms

506
00:25:52,649 --> 00:25:57,168
calculators hats have 80 classes so

507
00:25:55,169 --> 00:26:00,330
basically there will be 80 different

508
00:25:57,169 --> 00:26:02,610
elements in this producing vectors each

509
00:26:00,330 --> 00:26:06,559
of those actually is Exuma function

510
00:26:02,610 --> 00:26:12,299
results indicating the confidence of the

511
00:26:06,559 --> 00:26:14,149
that that particular object and also the

512
00:26:12,299 --> 00:26:18,120
remaining one element is the

513
00:26:14,149 --> 00:26:20,070
objectiveness object necessary of that

514
00:26:18,120 --> 00:26:23,100
object basically it's the confidence

515
00:26:20,070 --> 00:26:25,350
whether this actually this object this

516
00:26:23,100 --> 00:26:27,870
area contains object not

517
00:26:25,350 --> 00:26:30,000
so when we multiply these two your

518
00:26:27,870 --> 00:26:32,268
confidence together we actually got a

519
00:26:30,000 --> 00:26:36,259
overall confidence on whether this

520
00:26:32,269 --> 00:26:40,649
object contain exists there or which

521
00:26:36,259 --> 00:26:43,470
class it is in this case let's say the

522
00:26:40,649 --> 00:26:47,428
stop sign has 99 percent confidence and

523
00:26:43,470 --> 00:26:49,289
the rest of the class let's say car has

524
00:26:47,429 --> 00:26:52,740
only like point one point zero one

525
00:26:49,289 --> 00:26:56,090
percent confidence then the Euler which

526
00:26:52,740 --> 00:26:59,240
we will determine this is a stop sign

527
00:26:56,090 --> 00:27:02,789
now that we understand how it works but

528
00:26:59,240 --> 00:27:07,470
now we probably have a hunch on how to

529
00:27:02,789 --> 00:27:10,789
make the attack by just minimizing two

530
00:27:07,470 --> 00:27:13,529
probabilities one SD of gentleness

531
00:27:10,789 --> 00:27:16,019
probability the other is the targeted

532
00:27:13,529 --> 00:27:19,950
class confidence if we are able to

533
00:27:16,019 --> 00:27:23,240
reduce these two probabilities below the

534
00:27:19,950 --> 00:27:26,460
threshold probably we can do the job

535
00:27:23,240 --> 00:27:29,370
will explain these step by step in the

536
00:27:26,460 --> 00:27:32,820
following slides so first of all let me

537
00:27:29,370 --> 00:27:35,699
introduce our threat model we call it a

538
00:27:32,820 --> 00:27:38,610
physical image patch attack so suppose

539
00:27:35,700 --> 00:27:40,830
we want to fool the detector on a stop

540
00:27:38,610 --> 00:27:44,449
sign and you have your own image patch

541
00:27:40,830 --> 00:27:47,730
let's say this is a black hat euro logo

542
00:27:44,450 --> 00:27:51,990
then you can put it on top of the stop

543
00:27:47,730 --> 00:27:53,789
sign right in a more realistically if

544
00:27:51,990 --> 00:27:55,559
you driving a car on the road you can

545
00:27:53,789 --> 00:28:00,720
put up a sign on the side of the road

546
00:27:55,559 --> 00:28:03,928
and also attach your black hat euro log

547
00:28:00,720 --> 00:28:06,120
on to it so to fool the Euro R if you

548
00:28:03,929 --> 00:28:09,600
think that could be a speed limit on

549
00:28:06,120 --> 00:28:12,689
something else another interesting case

550
00:28:09,600 --> 00:28:16,439
is that you actually can put your image

551
00:28:12,690 --> 00:28:19,529
patch on to the ground and make some

552
00:28:16,440 --> 00:28:22,590
fake obvious out of nowhere last but not

553
00:28:19,529 --> 00:28:26,669
least this is an interesting example we

554
00:28:22,590 --> 00:28:28,860
found that lots of yellow caps actually

555
00:28:26,669 --> 00:28:32,279
put up some pad on the back of the car

556
00:28:28,860 --> 00:28:34,350
to display some ass and a disk give us

557
00:28:32,279 --> 00:28:36,679
lots opportunity to achieve our physical

558
00:28:34,350 --> 00:28:36,678
attack

559
00:28:37,080 --> 00:28:44,879
so here I will introduce our physical

560
00:28:40,470 --> 00:28:47,480
approach and objectives so the approach

561
00:28:44,879 --> 00:28:52,139
we take is called input patch

562
00:28:47,480 --> 00:28:54,659
construction so here is how we do that

563
00:28:52,139 --> 00:28:57,689
suppose you have your own image once you

564
00:28:54,659 --> 00:28:59,989
use to initialize your image patch let's

565
00:28:57,690 --> 00:29:02,940
say this is black ural kind of logo

566
00:28:59,989 --> 00:29:05,700
however things you are captured at with

567
00:29:02,940 --> 00:29:08,759
your devices for example a camera and

568
00:29:05,700 --> 00:29:11,009
the size of the image the patch in your

569
00:29:08,759 --> 00:29:12,749
camera might be different from the

570
00:29:11,009 --> 00:29:16,169
original image you have to do some

571
00:29:12,749 --> 00:29:18,419
research on it and also if you the the

572
00:29:16,169 --> 00:29:21,509
patch is seen from different angles or

573
00:29:18,419 --> 00:29:23,159
from different distance the shape might

574
00:29:21,509 --> 00:29:24,480
be different you have to do some

575
00:29:23,159 --> 00:29:28,289
perspective transformer transformer

576
00:29:24,480 --> 00:29:30,480
mission on that at the end once that's

577
00:29:28,289 --> 00:29:33,570
everything is satisfied you can put your

578
00:29:30,480 --> 00:29:37,830
patch onto the image right so the good

579
00:29:33,570 --> 00:29:39,899
thing is all the resize operations and

580
00:29:37,830 --> 00:29:42,269
prospective transformation operations

581
00:29:39,899 --> 00:29:45,209
they are differentiable that which means

582
00:29:42,269 --> 00:29:48,570
you can use gradient descent kind of

583
00:29:45,210 --> 00:29:51,509
messages to systematically crafting your

584
00:29:48,570 --> 00:29:56,369
own anniversary examples out of it which

585
00:29:51,509 --> 00:29:58,919
is great so in this talk we are actually

586
00:29:56,369 --> 00:30:01,439
targeting two different objectives

587
00:29:58,919 --> 00:30:04,619
attack objectives one is the object

588
00:30:01,440 --> 00:30:07,409
fabrication making you love III you know

589
00:30:04,619 --> 00:30:10,949
III think there's something out there

590
00:30:07,409 --> 00:30:13,350
out of nowhere the second thing is the

591
00:30:10,950 --> 00:30:15,600
object vanishing so we want to make

592
00:30:13,350 --> 00:30:19,259
object disappear in front of you will be

593
00:30:15,600 --> 00:30:21,269
free just something very similar to the

594
00:30:19,259 --> 00:30:26,190
great magician David Copperfield it to

595
00:30:21,269 --> 00:30:32,460
the statute of the Liberty it move too

596
00:30:26,190 --> 00:30:35,129
fast so the first objective is the of

597
00:30:32,460 --> 00:30:37,919
your fabrication there are two ways to

598
00:30:35,129 --> 00:30:42,269
do that one is in naive fabrication so

599
00:30:37,919 --> 00:30:44,970
if you look at sorry if you're look at

600
00:30:42,269 --> 00:30:50,030
image under right while it's popping too

601
00:30:44,970 --> 00:30:52,650
far the top

602
00:30:50,030 --> 00:30:53,790
image actually shows there's a patch on

603
00:30:52,650 --> 00:30:55,680
the ground but there are multiple

604
00:30:53,790 --> 00:30:59,040
objects which detect it

605
00:30:55,680 --> 00:31:00,900
out of nowhere the way to do that is we

606
00:30:59,040 --> 00:31:03,270
want to push more detections towards a

607
00:31:00,900 --> 00:31:05,400
certain objects and that the following

608
00:31:03,270 --> 00:31:07,379
pseudocode describe how we did that so

609
00:31:05,400 --> 00:31:09,690
basically first of all you need to get

610
00:31:07,380 --> 00:31:12,060
the class ID for the target class which

611
00:31:09,690 --> 00:31:14,130
is car here and secondly you need to

612
00:31:12,060 --> 00:31:18,899
grab all the probabilities associated

613
00:31:14,130 --> 00:31:21,150
with the detections of the cars then you

614
00:31:18,900 --> 00:31:26,030
want to get the probability of the

615
00:31:21,150 --> 00:31:29,670
objectiveness so with the detections and

616
00:31:26,030 --> 00:31:31,620
then you need to use your atom optimize

617
00:31:29,670 --> 00:31:35,370
that you maximize these two

618
00:31:31,620 --> 00:31:38,790
probabilities so in that way you can

619
00:31:35,370 --> 00:31:42,780
achieve this type of attack and secondly

620
00:31:38,790 --> 00:31:46,740
is the price press precise a fabrication

621
00:31:42,780 --> 00:31:47,129
basically want to bring this to a new

622
00:31:46,740 --> 00:31:48,900
level

623
00:31:47,130 --> 00:31:51,210
so basically want to produce a fake

624
00:31:48,900 --> 00:31:55,080
object at specific location that means

625
00:31:51,210 --> 00:31:59,970
we only predict one object out of this

626
00:31:55,080 --> 00:32:01,350
image patch and at the way we do that is

627
00:31:59,970 --> 00:32:04,800
described in the following pseudocode

628
00:32:01,350 --> 00:32:06,120
and remember we mentioned the prediction

629
00:32:04,800 --> 00:32:09,389
vector before

630
00:32:06,120 --> 00:32:11,459
so basically so we since we put a patch

631
00:32:09,390 --> 00:32:13,260
there in the image we already know the

632
00:32:11,460 --> 00:32:16,500
location of the patch so we can pre

633
00:32:13,260 --> 00:32:18,600
calculate this prediction vector and we

634
00:32:16,500 --> 00:32:21,630
can also feed these coordinates of the

635
00:32:18,600 --> 00:32:25,080
hat into the model and retrieve or the

636
00:32:21,630 --> 00:32:30,270
matched predictions with these

637
00:32:25,080 --> 00:32:32,990
coordinates and we we try to minimize

638
00:32:30,270 --> 00:32:37,560
the distance between the predictive

639
00:32:32,990 --> 00:32:40,410
objects with the prediction vectors we

640
00:32:37,560 --> 00:32:43,169
pre calculate early so in that way when

641
00:32:40,410 --> 00:32:47,040
we apply the atom optimizer we can

642
00:32:43,170 --> 00:32:51,890
actually push the prediction close to

643
00:32:47,040 --> 00:32:54,780
the traditional vectors and eventually

644
00:32:51,890 --> 00:32:58,470
we apply to num max suppression kind of

645
00:32:54,780 --> 00:33:01,910
method to have only one predictions on

646
00:32:58,470 --> 00:33:01,910
these specific locations

647
00:33:01,950 --> 00:33:10,540
and secondly we want to do is to do the

648
00:33:07,420 --> 00:33:12,700
object venison want to make the object

649
00:33:10,540 --> 00:33:16,180
disappear in the whole image for example

650
00:33:12,700 --> 00:33:19,420
in this image there's a car

651
00:33:16,180 --> 00:33:22,480
we actually attach a patch on the

652
00:33:19,420 --> 00:33:23,770
license plate of the car and you can see

653
00:33:22,480 --> 00:33:25,660
that there's no bounding box around the

654
00:33:23,770 --> 00:33:29,230
car basic like you know v3 doesn't think

655
00:33:25,660 --> 00:33:31,900
it is a card and the following

656
00:33:29,230 --> 00:33:36,270
pseudocode actually described how we did

657
00:33:31,900 --> 00:33:38,700
it actually it's the opposite way as I

658
00:33:36,270 --> 00:33:42,520
described early for the naive

659
00:33:38,700 --> 00:33:45,730
fabrication basically it grabs the cross

660
00:33:42,520 --> 00:33:48,670
ID for the target class which is car and

661
00:33:45,730 --> 00:33:52,030
also grab all the probabilities a social

662
00:33:48,670 --> 00:33:53,890
ways the car and also the object

663
00:33:52,030 --> 00:33:57,040
confidence ascertain with these

664
00:33:53,890 --> 00:34:00,600
predictions and using a Adam optimizer

665
00:33:57,040 --> 00:34:04,210
to minimize these two probabilities once

666
00:34:00,600 --> 00:34:09,730
the optimization converts then you can

667
00:34:04,210 --> 00:34:13,929
see the bounding box disappears now we

668
00:34:09,730 --> 00:34:20,590
introduce our systematics methods how to

669
00:34:13,929 --> 00:34:21,909
craft our adverse examples but these are

670
00:34:20,590 --> 00:34:24,760
not enough because they're still

671
00:34:21,909 --> 00:34:27,429
challenges to achieve the success of

672
00:34:24,760 --> 00:34:31,060
physical attacks for example as we

673
00:34:27,429 --> 00:34:34,899
mentioned early you're not able to make

674
00:34:31,060 --> 00:34:37,840
any changes freely on to the original

675
00:34:34,899 --> 00:34:39,699
image source you don't have the ability

676
00:34:37,840 --> 00:34:45,460
to that this is a controlled

677
00:34:39,699 --> 00:34:47,678
perturbation area secondly if you see

678
00:34:45,460 --> 00:34:49,929
the object from a various distance and

679
00:34:47,679 --> 00:34:54,610
angles are the object appearances

680
00:34:49,929 --> 00:34:56,889
changes right and also different light

681
00:34:54,610 --> 00:34:59,410
conditions also will change appearances

682
00:34:56,889 --> 00:35:01,870
of the objects there's also another

683
00:34:59,410 --> 00:35:05,379
interesting facts that's called color

684
00:35:01,870 --> 00:35:08,620
distortion for example in this image

685
00:35:05,380 --> 00:35:12,430
will show a digital color palette and we

686
00:35:08,620 --> 00:35:14,230
printed out using a printers we used a

687
00:35:12,430 --> 00:35:16,440
Cara Sara printer to print it out

688
00:35:14,230 --> 00:35:19,930
as you can see there is slightly

689
00:35:16,440 --> 00:35:22,960
difference in the bluish area comparing

690
00:35:19,930 --> 00:35:26,770
to the original digital color palette in

691
00:35:22,960 --> 00:35:29,079
a furthermore we use a fo ax to capture

692
00:35:26,770 --> 00:35:31,509
the image from a distance and it looks

693
00:35:29,079 --> 00:35:34,570
like this which is which it has a

694
00:35:31,510 --> 00:35:38,619
significant distortion comparing to the

695
00:35:34,570 --> 00:35:43,060
original digital color palette last but

696
00:35:38,619 --> 00:35:44,859
not least human made made some errors

697
00:35:43,060 --> 00:35:47,500
because you want to when you generate

698
00:35:44,859 --> 00:35:49,150
the perturbation image patch a few

699
00:35:47,500 --> 00:35:51,880
minutes to put that to the original

700
00:35:49,150 --> 00:35:55,570
physical target and he could put that

701
00:35:51,880 --> 00:35:57,490
maybe just send me centimeters of the

702
00:35:55,570 --> 00:36:01,000
original position maybe millimeters

703
00:35:57,490 --> 00:36:06,640
after original positions in my herd

704
00:36:01,000 --> 00:36:10,359
attack effectiveness so here are the

705
00:36:06,640 --> 00:36:13,540
list of tactics we use to to these

706
00:36:10,359 --> 00:36:15,730
challenges so basically for the control

707
00:36:13,540 --> 00:36:19,119
of perturbation area who use image patch

708
00:36:15,730 --> 00:36:20,710
based attack for the color distortion we

709
00:36:19,119 --> 00:36:23,079
apply the color management with the

710
00:36:20,710 --> 00:36:25,359
non-print ability loss we were discussed

711
00:36:23,079 --> 00:36:28,829
as in detail in the later slides for

712
00:36:25,359 --> 00:36:31,869
inaccurate patch we use random

713
00:36:28,829 --> 00:36:35,440
transformation during the optimization

714
00:36:31,869 --> 00:36:38,680
iterations for the various distance and

715
00:36:35,440 --> 00:36:41,050
angles we actually combines the random

716
00:36:38,680 --> 00:36:43,629
transformation with the to diversion

717
00:36:41,050 --> 00:36:45,369
regulation instead of the expect

718
00:36:43,630 --> 00:36:50,920
expectation over transformation which

719
00:36:45,369 --> 00:36:53,380
proposed by researchers in MIT also for

720
00:36:50,920 --> 00:36:54,460
the worse light conditions this is still

721
00:36:53,380 --> 00:36:58,210
in a work in progress

722
00:36:54,460 --> 00:37:00,010
actually in this talk we are taking a

723
00:36:58,210 --> 00:37:02,230
walk around kind of solution which has

724
00:37:00,010 --> 00:37:06,790
put a car in the garage to get a stable

725
00:37:02,230 --> 00:37:09,130
environment so let's talk some

726
00:37:06,790 --> 00:37:12,369
individual tactics in details for the

727
00:37:09,130 --> 00:37:14,520
color management with non-printable then

728
00:37:12,369 --> 00:37:18,910
printability loss actually this is

729
00:37:14,520 --> 00:37:21,009
method proposed by matt Mertz

730
00:37:18,910 --> 00:37:25,348
sheriff from CMU they had a paper

731
00:37:21,010 --> 00:37:28,170
published on CCS 2016

732
00:37:25,349 --> 00:37:30,420
there are two define an NPS score which

733
00:37:28,170 --> 00:37:33,569
is that they actually define a set of

734
00:37:30,420 --> 00:37:37,349
printable RGB triplets the NPS score is

735
00:37:33,569 --> 00:37:41,609
is the distance between the given pixel

736
00:37:37,349 --> 00:37:46,349
to its nearest pixel in that triplets

737
00:37:41,609 --> 00:37:49,999
set and for the Porter bird-of-prey

738
00:37:46,349 --> 00:37:52,380
debated Delta the NPS score for the

739
00:37:49,999 --> 00:37:54,448
perturbed area is actually the

740
00:37:52,380 --> 00:37:57,390
aggregation for all the unpassable

741
00:37:54,449 --> 00:38:00,059
of the pixels in that areas so as you

742
00:37:57,390 --> 00:38:01,529
can see the lower the NPS score the

743
00:38:00,059 --> 00:38:04,430
higher probability the color can be

744
00:38:01,529 --> 00:38:09,499
reproduced also in this slide we show

745
00:38:04,430 --> 00:38:12,569
some results when we applied amperes or

746
00:38:09,499 --> 00:38:16,410
how the effects look like so on the left

747
00:38:12,569 --> 00:38:19,949
this is a patch or perturbation we got

748
00:38:16,410 --> 00:38:22,140
without applying that NPS and the middle

749
00:38:19,949 --> 00:38:25,170
one is actually we print that image out

750
00:38:22,140 --> 00:38:27,868
and capture that with iPhone as you can

751
00:38:25,170 --> 00:38:29,880
see when we compare these two there's

752
00:38:27,869 --> 00:38:32,459
significant religious torsion there the

753
00:38:29,880 --> 00:38:35,249
white is no longer white and the pink

754
00:38:32,459 --> 00:38:38,339
area kind of turning into a brownish

755
00:38:35,249 --> 00:38:42,569
area in order to solve that to actually

756
00:38:38,339 --> 00:38:45,209
use the MPs kind of resolution which

757
00:38:42,569 --> 00:38:52,170
results in two image on the right which

758
00:38:45,209 --> 00:38:54,058
is more smooth and the predator can be

759
00:38:52,170 --> 00:38:58,440
reproduced by different rarest of

760
00:38:54,059 --> 00:39:01,229
devices such as printers and iPhones the

761
00:38:58,440 --> 00:39:03,449
second thing is how to do waste

762
00:39:01,229 --> 00:39:04,948
incorrect patch so basically we use

763
00:39:03,449 --> 00:39:06,599
random transformation during

764
00:39:04,949 --> 00:39:10,589
automatisation durations to solve that

765
00:39:06,599 --> 00:39:14,670
so suppose you want to apply a patch to

766
00:39:10,589 --> 00:39:16,859
the stop sign however you you might be a

767
00:39:14,670 --> 00:39:20,969
little bit off there it's not perfectly

768
00:39:16,859 --> 00:39:24,509
positioned so the way we do that we took

769
00:39:20,969 --> 00:39:28,199
steps of number of iterations within

770
00:39:24,509 --> 00:39:31,140
each iterations we actually actually we

771
00:39:28,199 --> 00:39:33,180
know the location of the patch and that

772
00:39:31,140 --> 00:39:35,788
means we know the coordinates of four

773
00:39:33,180 --> 00:39:38,160
vertices of this patch in the image so

774
00:39:35,789 --> 00:39:39,380
we can randomly stretch this for four

775
00:39:38,160 --> 00:39:41,940
vertices a little bit

776
00:39:39,380 --> 00:39:44,940
then we do the optimizing through

777
00:39:41,940 --> 00:39:47,249
iterations then in the next round of

778
00:39:44,940 --> 00:39:49,140
iterations we stretch out these four

779
00:39:47,249 --> 00:39:51,238
vertices a little bit again to make into

780
00:39:49,140 --> 00:39:53,160
another shape we run through the

781
00:39:51,239 --> 00:39:58,979
iterations again so on and so forth

782
00:39:53,160 --> 00:40:04,019
until we reach to a robust perturbation

783
00:39:58,979 --> 00:40:09,210
kind of adversity examples that can fit

784
00:40:04,019 --> 00:40:11,519
for these kind of human errors to deal

785
00:40:09,210 --> 00:40:13,279
with diverse distance and it end goes

786
00:40:11,519 --> 00:40:15,508
those type of challenges who actually

787
00:40:13,279 --> 00:40:16,890
combines technology with mentioned

788
00:40:15,509 --> 00:40:18,210
earlier which is chance rent

789
00:40:16,890 --> 00:40:20,700
transformation and total variance

790
00:40:18,210 --> 00:40:22,769
regulations this is actually a different

791
00:40:20,700 --> 00:40:27,839
approach from the expectation but

792
00:40:22,769 --> 00:40:33,058
transformation which requires a drawing

793
00:40:27,839 --> 00:40:35,578
a day to draw a transformation from a

794
00:40:33,059 --> 00:40:39,680
distribution however we didn't do that

795
00:40:35,579 --> 00:40:43,619
with YouTube we just simulate that by

796
00:40:39,680 --> 00:40:47,249
creating a transformation using the RT

797
00:40:43,619 --> 00:40:49,890
Pass TV the rightmost animation actually

798
00:40:47,249 --> 00:40:53,160
shows the effects though that the stop

799
00:40:49,890 --> 00:40:55,589
sign is seen from different distance and

800
00:40:53,160 --> 00:40:57,989
probably different angles and you can

801
00:40:55,589 --> 00:41:00,089
see most of the time there's no bounding

802
00:40:57,989 --> 00:41:02,299
box around this stop sign that means

803
00:41:00,089 --> 00:41:05,400
you'll obviously doesn't think this is a

804
00:41:02,299 --> 00:41:07,049
stop sign and also when you take a

805
00:41:05,400 --> 00:41:09,420
closer look at a patch we apply on the

806
00:41:07,049 --> 00:41:12,660
top of stop sign this is also look like

807
00:41:09,420 --> 00:41:15,509
a stop right so which means we

808
00:41:12,660 --> 00:41:19,558
initialize this patch with a stop sign

809
00:41:15,509 --> 00:41:23,369
as well actually the way to achieve this

810
00:41:19,559 --> 00:41:26,789
kind of effects is by doing this through

811
00:41:23,369 --> 00:41:28,529
a series of transformations we pick

812
00:41:26,789 --> 00:41:30,719
three of those occasions to just

813
00:41:28,529 --> 00:41:35,339
illustrate the ideas we show that in the

814
00:41:30,719 --> 00:41:37,710
left side the leftmost 1 is actually the

815
00:41:35,339 --> 00:41:39,930
case that when the stop sign is seen in

816
00:41:37,710 --> 00:41:42,630
the relatively relatively far distance

817
00:41:39,930 --> 00:41:45,660
and the second one is when the stops are

818
00:41:42,630 --> 00:41:48,630
moving closer and third one is that that

819
00:41:45,660 --> 00:41:52,500
stop sign more close to the camera and

820
00:41:48,630 --> 00:41:55,020
also we zoom in the image

821
00:41:52,500 --> 00:41:57,300
patch on the top-left corner so to show

822
00:41:55,020 --> 00:42:00,750
the difference so as you as you can see

823
00:41:57,300 --> 00:42:02,700
that in each different locations the

824
00:42:00,750 --> 00:42:06,210
size of the patch is different and also

825
00:42:02,700 --> 00:42:08,750
this probably the location of the patch

826
00:42:06,210 --> 00:42:13,820
is also different so we actually

827
00:42:08,750 --> 00:42:17,640
generate the random transformation to

828
00:42:13,820 --> 00:42:19,530
for each occasions when it's far away

829
00:42:17,640 --> 00:42:23,310
when it stops and far away you can see

830
00:42:19,530 --> 00:42:27,030
the perturbed patch area actually you

831
00:42:23,310 --> 00:42:30,000
have to do more to this area in order to

832
00:42:27,030 --> 00:42:31,830
achieve your success you know we're

833
00:42:30,000 --> 00:42:34,800
saying that you will not be able to

834
00:42:31,830 --> 00:42:36,960
recognize this you see this is

835
00:42:34,800 --> 00:42:40,020
originally initialized as a stop sign

836
00:42:36,960 --> 00:42:42,720
but as you move the stop sign closer you

837
00:42:40,020 --> 00:42:44,940
can see the patch that you only need to

838
00:42:42,720 --> 00:42:47,848
modify a little bit so you still can

839
00:42:44,940 --> 00:42:53,609
recognize the patch was initialized as a

840
00:42:47,849 --> 00:42:55,680
stop sign so after this series of

841
00:42:53,609 --> 00:42:58,710
transformations and optimizations we

842
00:42:55,680 --> 00:43:01,910
actually resolve a result into a very

843
00:42:58,710 --> 00:43:05,339
robust adversity examples that can

844
00:43:01,910 --> 00:43:07,529
achieve this type of attack when the

845
00:43:05,339 --> 00:43:12,450
objects seen from Weber's distance and

846
00:43:07,530 --> 00:43:14,430
angles now we have discussed individual

847
00:43:12,450 --> 00:43:16,770
tactics it's time to put everything

848
00:43:14,430 --> 00:43:22,230
together we call it an iterative

849
00:43:16,770 --> 00:43:25,200
optimization so basically MPs running

850
00:43:22,230 --> 00:43:27,450
transformation total variation they are

851
00:43:25,200 --> 00:43:31,109
just part of the lost function in the

852
00:43:27,450 --> 00:43:34,859
optimization kind of stage along with

853
00:43:31,109 --> 00:43:37,348
the attack objective we described early

854
00:43:34,859 --> 00:43:40,980
so each of the regions will run this

855
00:43:37,349 --> 00:43:44,250
optimization using atom optimizer we run

856
00:43:40,980 --> 00:43:46,980
it iteration after iteration until the

857
00:43:44,250 --> 00:43:51,089
attack effectiveness has been reached

858
00:43:46,980 --> 00:43:54,839
and you can see the effect if I've - we

859
00:43:51,089 --> 00:43:57,630
can see from the right animations you

860
00:43:54,839 --> 00:44:02,700
can see the stops on there starting with

861
00:43:57,630 --> 00:44:05,310
a confidence and confidence 1.0 and we

862
00:44:02,700 --> 00:44:06,270
also zoom in the perturbation on top of

863
00:44:05,310 --> 00:44:09,740
it and put

864
00:44:06,270 --> 00:44:13,440
on the upper left corner and you can see

865
00:44:09,740 --> 00:44:16,799
the contents gradually decrease at the

866
00:44:13,440 --> 00:44:20,100
same time the patch changes over

867
00:44:16,800 --> 00:44:23,610
different iterations so when a stop sign

868
00:44:20,100 --> 00:44:26,730
decrease below point 3 that's where the

869
00:44:23,610 --> 00:44:28,710
point the utility won't think there's

870
00:44:26,730 --> 00:44:33,330
there's object there so there won't be

871
00:44:28,710 --> 00:44:34,830
any point in box there so hopefully you

872
00:44:33,330 --> 00:44:39,000
guys got some ideas about it

873
00:44:34,830 --> 00:44:39,750
now let's come to our demo in this demo

874
00:44:39,000 --> 00:44:44,160
I will show

875
00:44:39,750 --> 00:44:48,630
basically there are two demos here the

876
00:44:44,160 --> 00:44:51,299
go first is to make the car disappear in

877
00:44:48,630 --> 00:44:55,590
front up to go to v3 the setup is like

878
00:44:51,300 --> 00:44:58,320
this so basically we put a camera at a

879
00:44:55,590 --> 00:45:02,130
fixed distance and a fixed angle to the

880
00:44:58,320 --> 00:45:05,610
cars and also we put up a monitor on the

881
00:45:02,130 --> 00:45:08,340
back of car and display some image in

882
00:45:05,610 --> 00:45:10,880
the full screen as you can see here

883
00:45:08,340 --> 00:45:13,740
initially we display that black hat euro

884
00:45:10,880 --> 00:45:17,430
logo in the full-screen mode on monitor

885
00:45:13,740 --> 00:45:20,669
and you can see the Euro which we can

886
00:45:17,430 --> 00:45:25,890
perforate act that as a vehicle we

887
00:45:20,670 --> 00:45:28,380
always run the demo and after well we

888
00:45:25,890 --> 00:45:30,330
switch that image to a perturbed by have

889
00:45:28,380 --> 00:45:34,650
yellow logo as you can see the bounding

890
00:45:30,330 --> 00:45:37,950
box disappeared and later we switch back

891
00:45:34,650 --> 00:45:41,910
to a cat you can see the bounding box we

892
00:45:37,950 --> 00:45:45,950
appear right and then we switch back to

893
00:45:41,910 --> 00:45:49,259
a perturbed one then the bunny Mouse

894
00:45:45,950 --> 00:45:51,060
disappears again so in that case we

895
00:45:49,260 --> 00:45:56,970
claim that we successfully achieve the

896
00:45:51,060 --> 00:45:58,970
physical attack now we want to bring

897
00:45:56,970 --> 00:46:01,529
this attack to the next level which is

898
00:45:58,970 --> 00:46:04,140
want to show whether this attack can

899
00:46:01,530 --> 00:46:07,440
still sustain when the car is seen at

900
00:46:04,140 --> 00:46:11,250
verse angled and the worst distance now

901
00:46:07,440 --> 00:46:14,070
we have the same setup you can see the

902
00:46:11,250 --> 00:46:16,500
model already show a perturb image in

903
00:46:14,070 --> 00:46:18,690
the monitor at full screen and there's

904
00:46:16,500 --> 00:46:23,720
no bounding box around with the cars

905
00:46:18,690 --> 00:46:26,250
at the moment now we kick off the demo

906
00:46:23,720 --> 00:46:29,580
as you can see when we zoom in the

907
00:46:26,250 --> 00:46:32,640
camera and also we move the camera from

908
00:46:29,580 --> 00:46:37,710
left to right a little bit and the most

909
00:46:32,640 --> 00:46:41,250
of time the University won't generate a

910
00:46:37,710 --> 00:46:44,600
warning box around the vehicles when we

911
00:46:41,250 --> 00:46:48,000
switched image back to a cat you can see

912
00:46:44,600 --> 00:46:53,420
the Euro booty can successfully detect

913
00:46:48,000 --> 00:46:57,630
the car so we claim that we successfully

914
00:46:53,420 --> 00:47:03,240
achieve this attack as well hope you

915
00:46:57,630 --> 00:47:05,430
guys enjoy that last let me come back to

916
00:47:03,240 --> 00:47:08,240
the conclusion and takeaways for these

917
00:47:05,430 --> 00:47:10,649
presentations so with careful setup

918
00:47:08,240 --> 00:47:12,779
physical attacks are achievable against

919
00:47:10,650 --> 00:47:13,710
dna-based objected have some methods in

920
00:47:12,780 --> 00:47:17,700
the web of settings

921
00:47:13,710 --> 00:47:19,130
well the defense is hard a good safety

922
00:47:17,700 --> 00:47:22,339
and the security matrix has to be

923
00:47:19,130 --> 00:47:25,050
explored and also we call out efforts

924
00:47:22,340 --> 00:47:27,780
for robust and adverse to your example

925
00:47:25,050 --> 00:47:29,580
resistant model that is hard for a

926
00:47:27,780 --> 00:47:34,050
safety critical system like autonomous

927
00:47:29,580 --> 00:47:36,360
driving system now that's the end of the

928
00:47:34,050 --> 00:47:38,720
talk thank you so much and open for

929
00:47:36,360 --> 00:47:38,720
questions

930
00:47:42,100 --> 00:47:47,250
[Applause]

931
00:47:44,250 --> 00:47:47,250
Pete

932
00:47:54,410 --> 00:47:58,660
yes go ahead

933
00:48:03,430 --> 00:48:10,410
maybe a mathematical question so why

934
00:48:05,890 --> 00:48:12,490
don't you consider the l1 norm l1 No

935
00:48:10,410 --> 00:48:17,170
okay that's very good question so right

936
00:48:12,490 --> 00:48:18,790
now these are mainly I mean this is

937
00:48:17,170 --> 00:48:24,640
three different kind of LP noms

938
00:48:18,790 --> 00:48:27,160
described by paper from SNP conferences

939
00:48:24,640 --> 00:48:29,740
by Nexus Collini and David Wagner they

940
00:48:27,160 --> 00:48:33,069
have just got a lot about these infinity

941
00:48:29,740 --> 00:48:35,649
L to L 0 so that's why we do that we can

942
00:48:33,070 --> 00:48:40,810
do the L 1 2 but that will make a lot of

943
00:48:35,650 --> 00:48:45,150
difference yeah and maybe a second

944
00:48:40,810 --> 00:48:47,410
question sure what happens if you would

945
00:48:45,150 --> 00:48:50,440
blur the image of it because at the

946
00:48:47,410 --> 00:48:53,830
moment it like exploits numerical

947
00:48:50,440 --> 00:48:57,340
instabilities inside inside the neural

948
00:48:53,830 --> 00:49:00,069
net mm-hm and if you for example merge

949
00:48:57,340 --> 00:49:01,900
every two pixels every four pixels

950
00:49:00,070 --> 00:49:03,700
together and make sure that the

951
00:49:01,900 --> 00:49:05,500
predictions are the same so a car and

952
00:49:03,700 --> 00:49:09,839
car probably then this attack wouldn't

953
00:49:05,500 --> 00:49:12,070
work anymore an option

954
00:49:09,840 --> 00:49:14,380
would you please how do you please

955
00:49:12,070 --> 00:49:17,170
rephrase your question I suppose because

956
00:49:14,380 --> 00:49:19,660
at the moment so this this special image

957
00:49:17,170 --> 00:49:20,460
or the patch here to attack the neural

958
00:49:19,660 --> 00:49:23,470
net mm-hm

959
00:49:20,460 --> 00:49:26,590
has a very special shape and very

960
00:49:23,470 --> 00:49:30,549
special texture special pixels and then

961
00:49:26,590 --> 00:49:32,080
yeah and what happens if you if you

962
00:49:30,550 --> 00:49:34,990
would not only analyze the original

963
00:49:32,080 --> 00:49:36,279
image with the full resolution but also

964
00:49:34,990 --> 00:49:39,339
an image that has only half the

965
00:49:36,280 --> 00:49:42,250
resolution oh yeah and what the attacks

966
00:49:39,340 --> 00:49:44,680
still work with the same patch that's a

967
00:49:42,250 --> 00:49:46,710
very good question so basically that's

968
00:49:44,680 --> 00:49:49,569
the resolution kind of things right so

969
00:49:46,710 --> 00:49:53,500
the patch you have may not have the same

970
00:49:49,570 --> 00:49:57,240
resolution as the your your target image

971
00:49:53,500 --> 00:50:00,280
so the way to do that you can use the

972
00:49:57,240 --> 00:50:01,779
resize kind of functionality in the

973
00:50:00,280 --> 00:50:03,609
resize functionality actually have a

974
00:50:01,780 --> 00:50:05,560
number of option you can do it in a

975
00:50:03,609 --> 00:50:08,500
bilinear way you can do in a cubic

976
00:50:05,560 --> 00:50:11,859
whatever those kind of way but these are

977
00:50:08,500 --> 00:50:14,560
something you can leverage on to make

978
00:50:11,859 --> 00:50:16,930
the patch more smooth so

979
00:50:14,560 --> 00:50:19,690
so in that way the attack still works so

980
00:50:16,930 --> 00:50:21,609
based on our experiments that have tech

981
00:50:19,690 --> 00:50:25,620
stores we don't have to have the same

982
00:50:21,610 --> 00:50:33,210
kind of resolution to your attack image

983
00:50:25,620 --> 00:50:33,210
hope that answer your question sort of

984
00:50:34,500 --> 00:50:42,760
sorry to waste everybody's time but no

985
00:50:37,570 --> 00:50:44,860
but so this is so what would happen if

986
00:50:42,760 --> 00:50:48,280
you would not in this image recognition

987
00:50:44,860 --> 00:50:52,600
system you would not only analyze one

988
00:50:48,280 --> 00:50:55,470
image mm-hmm also analyze warped

989
00:50:52,600 --> 00:50:58,420
versions of the same same image and

990
00:50:55,470 --> 00:51:02,379
lower resolution images and then only do

991
00:50:58,420 --> 00:51:04,690
the conclusion of an object if they are

992
00:51:02,380 --> 00:51:08,250
always the same the predictions in the

993
00:51:04,690 --> 00:51:08,250
same in the same area

994
00:51:08,340 --> 00:51:13,960
you mean the same predictions Singh

995
00:51:10,870 --> 00:51:16,359
incorrect predictions or the the

996
00:51:13,960 --> 00:51:18,040
predictions would have to coincide and

997
00:51:16,360 --> 00:51:19,690
if the resolution if the half-full

998
00:51:18,040 --> 00:51:21,370
resolution has a different prediction

999
00:51:19,690 --> 00:51:23,410
than the half resolution then you would

1000
00:51:21,370 --> 00:51:27,069
say well I'm not sure let's better stop

1001
00:51:23,410 --> 00:51:28,750
the car right so usually the index are

1002
00:51:27,070 --> 00:51:32,050
they persistent okay it's a good

1003
00:51:28,750 --> 00:51:34,360
question so basically this Hadi works so

1004
00:51:32,050 --> 00:51:36,760
you are usually assumed so for example

1005
00:51:34,360 --> 00:51:39,730
if it is is four times driving cars so a

1006
00:51:36,760 --> 00:51:43,390
thermogenic annual a manufacturer with

1007
00:51:39,730 --> 00:51:45,400
certain type of cameras they might have

1008
00:51:43,390 --> 00:51:48,339
the same kind of resolution or may they

1009
00:51:45,400 --> 00:51:51,220
have they may have very different kind

1010
00:51:48,340 --> 00:51:53,260
of resolution but they will mostly goes

1011
00:51:51,220 --> 00:51:57,430
through a mass production so go

1012
00:51:53,260 --> 00:51:59,410
different say a handful these kind of

1013
00:51:57,430 --> 00:52:03,040
configurations right so for each of

1014
00:51:59,410 --> 00:52:04,839
these you can be controlled you can one

1015
00:52:03,040 --> 00:52:06,310
way could do that is to produce

1016
00:52:04,840 --> 00:52:10,000
different models for different

1017
00:52:06,310 --> 00:52:14,740
resolutions and you get prod model to

1018
00:52:10,000 --> 00:52:16,960
the cars on which camera the camera has

1019
00:52:14,740 --> 00:52:20,529
the right resolution you use the

1020
00:52:16,960 --> 00:52:23,900
corresponding models right so that will

1021
00:52:20,530 --> 00:52:27,690
help with that problem

1022
00:52:23,900 --> 00:52:32,490
okay cool questions

1023
00:52:27,690 --> 00:52:34,349
go ahead hi so there are defenses that

1024
00:52:32,490 --> 00:52:36,359
are known to work well against

1025
00:52:34,349 --> 00:52:38,400
adversarial attacks the previous

1026
00:52:36,359 --> 00:52:41,369
question pretty much suggested some

1027
00:52:38,400 --> 00:52:43,260
pre-processing defenses right but what

1028
00:52:41,369 --> 00:52:46,799
we know works well is adversarial

1029
00:52:43,260 --> 00:52:49,710
training right Madras protocol true have

1030
00:52:46,799 --> 00:52:51,930
you tested your attack against any yo3

1031
00:52:49,710 --> 00:52:54,510
model that puts into that was adversary

1032
00:52:51,930 --> 00:52:57,480
trained so that's very good questions a

1033
00:52:54,510 --> 00:53:00,329
diversity training is one of the defense

1034
00:52:57,480 --> 00:53:02,970
mechanisms however I mean there's always

1035
00:53:00,329 --> 00:53:04,770
corner cases right even you have it

1036
00:53:02,970 --> 00:53:08,098
depends on how many and virtual training

1037
00:53:04,770 --> 00:53:10,829
examples you have only you only may only

1038
00:53:08,099 --> 00:53:13,349
cover a certain kind of conocía cases

1039
00:53:10,829 --> 00:53:15,960
but always we are always able to find

1040
00:53:13,349 --> 00:53:19,890
other examples even it is at was a

1041
00:53:15,960 --> 00:53:23,099
training so basically that the point is

1042
00:53:19,890 --> 00:53:26,700
that the existence defense mechanism

1043
00:53:23,099 --> 00:53:28,980
they have their own drawbacks and next

1044
00:53:26,700 --> 00:53:32,939
colony and they were Waggoner they

1045
00:53:28,980 --> 00:53:34,589
actually have a paper in SE ICML

1046
00:53:32,940 --> 00:53:37,980
International Conference in machine

1047
00:53:34,589 --> 00:53:42,089
learning in 2018 they actually saying OD

1048
00:53:37,980 --> 00:53:46,200
using different sieve mechanism are not

1049
00:53:42,089 --> 00:53:47,730
working so have you actually tested

1050
00:53:46,200 --> 00:53:49,799
against that result training with with

1051
00:53:47,730 --> 00:53:52,380
you're free of course searching will

1052
00:53:49,799 --> 00:53:54,540
will be all helpful will be helpful to

1053
00:53:52,380 --> 00:53:57,690
the to improve the robustness of the

1054
00:53:54,540 --> 00:54:00,599
model that definitely I'm not saying

1055
00:53:57,690 --> 00:54:02,549
that adverse from training doesn't work

1056
00:54:00,599 --> 00:54:06,030
it's just saying that it can improve but

1057
00:54:02,549 --> 00:54:08,609
it cannot be like 100 percent like a

1058
00:54:06,030 --> 00:54:11,430
safe guarantee because we are running

1059
00:54:08,609 --> 00:54:14,180
out a ton striving system there you can

1060
00:54:11,430 --> 00:54:19,680
we can now tolerate a single kind of

1061
00:54:14,180 --> 00:54:21,419
life loss does that right I'm sorry

1062
00:54:19,680 --> 00:54:22,950
we're out of time but perhaps you'd mind

1063
00:54:21,420 --> 00:54:27,030
taking some questions in person at the

1064
00:54:22,950 --> 00:54:28,290
end without the microphone okay yes we

1065
00:54:27,030 --> 00:54:30,950
can take that offline thank somebody

1066
00:54:28,290 --> 00:54:30,950
thank you very much

1067
00:54:30,990 --> 00:54:34,529
[Applause]

