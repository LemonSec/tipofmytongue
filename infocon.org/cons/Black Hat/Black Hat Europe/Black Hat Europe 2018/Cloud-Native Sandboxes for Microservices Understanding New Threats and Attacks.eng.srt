1
00:00:00,030 --> 00:00:04,770
hi everyone thank you for coming to our

2
00:00:02,490 --> 00:00:07,230
session I know this is the last session

3
00:00:04,770 --> 00:00:09,389
of the ACS Braja and the really

4
00:00:07,230 --> 00:00:13,740
appreciate that you can you can listen

5
00:00:09,389 --> 00:00:16,470
to our talk so today today's topic is

6
00:00:13,740 --> 00:00:20,430
the container security is the cloud in

7
00:00:16,470 --> 00:00:22,288
native sandbox for micro services so at

8
00:00:20,430 --> 00:00:24,900
the very very beginning I want to spend

9
00:00:22,289 --> 00:00:27,539
some time to introduce ourselves

10
00:00:24,900 --> 00:00:30,419
and currently I'm achieving a secure

11
00:00:27,539 --> 00:00:32,640
incentives at a g-g-g-gia Dhaka and

12
00:00:30,420 --> 00:00:35,670
Chittagong home is the lot is that you

13
00:00:32,640 --> 00:00:40,879
commercial company in China and it won

14
00:00:35,670 --> 00:00:43,760
two public at 214 and the in 12 2017 the

15
00:00:40,879 --> 00:00:46,260
week we have more than 1 billion active

16
00:00:43,760 --> 00:00:49,649
customer and the things will have a lot

17
00:00:46,260 --> 00:00:53,579
of the customer the data stored in our

18
00:00:49,649 --> 00:00:55,980
cloud so we put a lot of efforts on the

19
00:00:53,579 --> 00:00:58,980
cloud security and the design the

20
00:00:55,980 --> 00:01:02,190
deploys and therefore are the tools to

21
00:00:58,980 --> 00:01:05,700
make our cloud and secure and my

22
00:01:02,190 --> 00:01:08,520
research topic covers from the container

23
00:01:05,700 --> 00:01:12,720
secured a and the IOT security as well

24
00:01:08,520 --> 00:01:15,929
and and though I also regularly share my

25
00:01:12,720 --> 00:01:18,240
research to the security community by

26
00:01:15,930 --> 00:01:20,159
talking about top talk about them in the

27
00:01:18,240 --> 00:01:25,890
conferences like Apple are harder and

28
00:01:20,159 --> 00:01:28,140
way P hi everyone my name is Julian and

29
00:01:25,890 --> 00:01:29,759
I'm currently working as a principal

30
00:01:28,140 --> 00:01:32,250
security researcher at Palo Alto

31
00:01:29,759 --> 00:01:34,110
Networks and gladly I have some

32
00:01:32,250 --> 00:01:36,420
cooperation with the tombo in these

33
00:01:34,110 --> 00:01:38,840
projects working on some container

34
00:01:36,420 --> 00:01:42,000
security stuff and the Palo Alto

35
00:01:38,840 --> 00:01:44,009
Networks also are producing some new

36
00:01:42,000 --> 00:01:51,329
roadmap for the container and travel

37
00:01:44,009 --> 00:01:53,189
security products okay so in into this

38
00:01:51,329 --> 00:01:55,110
presentation I'll go start with some

39
00:01:53,189 --> 00:02:00,750
introduction about container secured a

40
00:01:55,110 --> 00:02:03,930
and then we are trying to like to to

41
00:02:00,750 --> 00:02:06,960
share our motivation like why we want to

42
00:02:03,930 --> 00:02:08,729
design and implement the container

43
00:02:06,960 --> 00:02:14,220
native sandbox

44
00:02:08,729 --> 00:02:16,950
and then I want to try to try to explain

45
00:02:14,220 --> 00:02:17,870
some key design questions that we are

46
00:02:16,950 --> 00:02:23,790
facing

47
00:02:17,870 --> 00:02:27,870
during our research and and and I will

48
00:02:23,790 --> 00:02:31,109
try to try try to explain the parallel

49
00:02:27,870 --> 00:02:32,640
execution and alignment analyze way

50
00:02:31,110 --> 00:02:35,459
designer for the container native

51
00:02:32,640 --> 00:02:39,809
sandbox if you if we still have time I

52
00:02:35,459 --> 00:02:44,840
want to show some case study to to to

53
00:02:39,810 --> 00:02:48,629
just show how how our our sandbox works

54
00:02:44,840 --> 00:02:51,000
so the container concept the zone is a

55
00:02:48,629 --> 00:02:53,040
very hot topic in the past few years I

56
00:02:51,000 --> 00:02:55,200
think most of you people here already

57
00:02:53,040 --> 00:02:55,980
you use container of docker in your

58
00:02:55,200 --> 00:02:59,488
daily life

59
00:02:55,980 --> 00:03:02,849
it's just build a base on the namespace

60
00:02:59,489 --> 00:03:06,780
and thus a group trunk concept in the

61
00:03:02,849 --> 00:03:09,149
Linux and and because the feature of of

62
00:03:06,780 --> 00:03:12,230
the container people people use the

63
00:03:09,150 --> 00:03:19,319
cloud and native and a container based

64
00:03:12,230 --> 00:03:21,750
cluster so they and they will just

65
00:03:19,319 --> 00:03:24,238
deploy their micro service on this

66
00:03:21,750 --> 00:03:27,090
cluster like the normal like the normal

67
00:03:24,239 --> 00:03:30,359
cloud but in order to have the type of

68
00:03:27,090 --> 00:03:36,120
team to deploy and manage their micro

69
00:03:30,359 --> 00:03:38,450
services and the operators were was was

70
00:03:36,120 --> 00:03:40,799
deep-lined for that purpose and the most

71
00:03:38,450 --> 00:03:42,480
dominant one in the current market is

72
00:03:40,799 --> 00:03:46,680
communities which is developed by the

73
00:03:42,480 --> 00:03:49,910
google and from the security perspective

74
00:03:46,680 --> 00:03:52,760
a lot of security researchers trying to

75
00:03:49,910 --> 00:03:56,220
train study the container security

76
00:03:52,760 --> 00:04:00,450
mostly focus on two aspects the wise

77
00:03:56,220 --> 00:04:02,099
using wise trying to focus on the image

78
00:04:00,450 --> 00:04:05,459
of vulnerabilities they are trying to

79
00:04:02,099 --> 00:04:08,459
figure out give me an image how many one

80
00:04:05,459 --> 00:04:11,819
abilities could be in the image which is

81
00:04:08,459 --> 00:04:14,310
part which is not hard to do because

82
00:04:11,819 --> 00:04:17,130
they can just extract the file from the

83
00:04:14,310 --> 00:04:18,780
image and learn and then they they know

84
00:04:17,130 --> 00:04:21,329
the exactly software and the version

85
00:04:18,779 --> 00:04:23,969
installed in the United and then they

86
00:04:21,329 --> 00:04:27,060
live in comparison to the Civic database

87
00:04:23,969 --> 00:04:29,820
and they know exactly in a number like

88
00:04:27,060 --> 00:04:33,180
how many human abilities who could be in

89
00:04:29,820 --> 00:04:35,430
the image and at least as the previous

90
00:04:33,180 --> 00:04:37,890
study shows that the number of Bali

91
00:04:35,430 --> 00:04:40,680
bridged in in the in the image from the

92
00:04:37,890 --> 00:04:43,860
talker hub has increased year by year

93
00:04:40,680 --> 00:04:46,229
and the other researchers trying to find

94
00:04:43,860 --> 00:04:48,630
the the one appears in the docker run

95
00:04:46,229 --> 00:04:52,349
time or in the kubernetes itself because

96
00:04:48,630 --> 00:04:55,289
those were one abilities are more much

97
00:04:52,349 --> 00:04:57,270
more common because if the attacker can

98
00:04:55,289 --> 00:05:01,710
come compromised one of the pod in a

99
00:04:57,270 --> 00:05:03,690
cluster they can because nearly every

100
00:05:01,710 --> 00:05:05,430
cluster they use the talker runtime or

101
00:05:03,690 --> 00:05:08,250
the cognized so that they can leverage

102
00:05:05,430 --> 00:05:11,729
those more abilities to take over the

103
00:05:08,250 --> 00:05:14,130
whole cluster and the loss of the

104
00:05:11,729 --> 00:05:17,250
existing product on the containers

105
00:05:14,130 --> 00:05:20,610
security they are literally provided two

106
00:05:17,250 --> 00:05:24,180
features either just provide some static

107
00:05:20,610 --> 00:05:28,740
image scanner or the dynamic runtime

108
00:05:24,180 --> 00:05:30,900
provider of detection tools and so

109
00:05:28,740 --> 00:05:34,110
speaking of our product so the

110
00:05:30,900 --> 00:05:36,859
motivation is more like because we know

111
00:05:34,110 --> 00:05:40,860
the container for well we are trying to

112
00:05:36,860 --> 00:05:44,370
ask ourselves like how this new concept

113
00:05:40,860 --> 00:05:49,020
could change the landscape of the of

114
00:05:44,370 --> 00:05:52,080
sandbox existing sandbox product so the

115
00:05:49,020 --> 00:05:55,650
answer come from two sides from the

116
00:05:52,080 --> 00:05:57,570
problem size it's more like because this

117
00:05:55,650 --> 00:06:00,419
container based class arrays of quite

118
00:05:57,570 --> 00:06:03,990
new thing and there's no such a normal

119
00:06:00,419 --> 00:06:06,180
sandbox to subsequently for this for

120
00:06:03,990 --> 00:06:09,389
this kind of cluster to discover

121
00:06:06,180 --> 00:06:12,930
container based that's right and for the

122
00:06:09,389 --> 00:06:14,610
opportunity side so we are trying to

123
00:06:12,930 --> 00:06:17,580
rethink the design of traditional

124
00:06:14,610 --> 00:06:20,990
virtual machine-based the sandbox say if

125
00:06:17,580 --> 00:06:24,750
we can design a container native sandbox

126
00:06:20,990 --> 00:06:27,719
what what we can achieve more than a

127
00:06:24,750 --> 00:06:29,280
traditional sandbox speed so there's a

128
00:06:27,719 --> 00:06:31,440
the there are

129
00:06:29,280 --> 00:06:33,989
there are two new cool features that we

130
00:06:31,440 --> 00:06:35,670
can Pro provider which is cannot be done

131
00:06:33,990 --> 00:06:38,580
by the traded traditional virtual

132
00:06:35,670 --> 00:06:41,190
machine-based sandbox why is that we can

133
00:06:38,580 --> 00:06:45,150
provide context awareness based

134
00:06:41,190 --> 00:06:49,650
detection is more is more like keeping a

135
00:06:45,150 --> 00:06:52,880
container we are able to just we can

136
00:06:49,650 --> 00:06:56,010
allow the user to uploaded their context

137
00:06:52,880 --> 00:06:58,380
like like their doctor doctor file or a

138
00:06:56,010 --> 00:07:01,050
total image along with their sample so

139
00:06:58,380 --> 00:07:03,360
that we can reconstruct that you'd

140
00:07:01,050 --> 00:07:05,760
actually execution you environment as

141
00:07:03,360 --> 00:07:08,150
the one that the user will actually open

142
00:07:05,760 --> 00:07:10,830
that sample in there in the real world

143
00:07:08,150 --> 00:07:12,090
this cannot be done by the traditional

144
00:07:10,830 --> 00:07:14,430
virtual machine-based the sandbox

145
00:07:12,090 --> 00:07:18,450
because you know you know the start of

146
00:07:14,430 --> 00:07:20,370
the word machine is is too large and the

147
00:07:18,450 --> 00:07:23,340
other one is that because the container

148
00:07:20,370 --> 00:07:25,950
itself is quite a lot weighted so that

149
00:07:23,340 --> 00:07:28,400
we can just using a limited resources to

150
00:07:25,950 --> 00:07:31,590
launch and run multiple instances of

151
00:07:28,400 --> 00:07:34,979
containers that we are able to just uh

152
00:07:31,590 --> 00:07:37,619
feed the the user above the sample tube

153
00:07:34,979 --> 00:07:39,870
of the container and fill it up by now

154
00:07:37,620 --> 00:07:42,240
but but a similar sample to the other

155
00:07:39,870 --> 00:07:46,830
containers that we collect the behaviors

156
00:07:42,240 --> 00:07:48,660
and under them we we just need to find

157
00:07:46,830 --> 00:07:51,690
the differences between the two

158
00:07:48,660 --> 00:07:55,470
behaviors which allow us to pinpoint

159
00:07:51,690 --> 00:07:57,810
that exactly the the actions thinking by

160
00:07:55,470 --> 00:08:03,539
the by the sample for the exploitation

161
00:07:57,810 --> 00:08:05,640
and so in order to deep in order to

162
00:08:03,539 --> 00:08:08,039
design a container based

163
00:08:05,640 --> 00:08:11,550
stand box we have to answer these four

164
00:08:08,039 --> 00:08:14,070
questions the first is how to make it

165
00:08:11,550 --> 00:08:18,210
convenient to use sandbox in the

166
00:08:14,070 --> 00:08:21,210
container based cloud so the other is we

167
00:08:18,210 --> 00:08:24,260
have to just integrate the sandbox

168
00:08:21,210 --> 00:08:26,880
concept into the Aqsa trader itself

169
00:08:24,260 --> 00:08:30,060
taking the communities as the example

170
00:08:26,880 --> 00:08:34,169
here we can just leverage the CRD things

171
00:08:30,060 --> 00:08:36,479
to to external community API and the

172
00:08:34,169 --> 00:08:39,809
between so we can just introduce a new

173
00:08:36,479 --> 00:08:40,660
resource tab called sandbox to the

174
00:08:39,809 --> 00:08:44,319
community

175
00:08:40,659 --> 00:08:48,430
than the Telos team they can they can

176
00:08:44,320 --> 00:08:51,570
just use the normal way that they the

177
00:08:48,430 --> 00:08:56,290
managing of the coop community resources

178
00:08:51,570 --> 00:08:59,140
and use a similar way to manipulate or

179
00:08:56,290 --> 00:09:03,099
interact with our sandbox so there's a

180
00:08:59,140 --> 00:09:06,400
no learning curve no learning curve fall

181
00:09:03,100 --> 00:09:09,340
for the new users to our sandbox for

182
00:09:06,400 --> 00:09:12,069
example giving this young mo file which

183
00:09:09,340 --> 00:09:14,290
is quite a standard way that the Talib

184
00:09:12,070 --> 00:09:19,690
team you used to create a portal and

185
00:09:14,290 --> 00:09:22,180
they can just modify of a little few

186
00:09:19,690 --> 00:09:26,020
fields in the general file then they can

187
00:09:22,180 --> 00:09:29,910
just upload their sample as well as

188
00:09:26,020 --> 00:09:33,550
their context here now that done our

189
00:09:29,910 --> 00:09:38,439
sandbox sandbox they are this controller

190
00:09:33,550 --> 00:09:40,810
will just set up the environment and

191
00:09:38,440 --> 00:09:44,920
then just run a sample and do the

192
00:09:40,810 --> 00:09:47,770
analysis plane sounds yeah mofo the

193
00:09:44,920 --> 00:09:50,740
second question is how to efficiently

194
00:09:47,770 --> 00:09:53,410
retrieve and a build the context for the

195
00:09:50,740 --> 00:09:58,480
sandbox so this is the one of the main

196
00:09:53,410 --> 00:10:01,959
feature we we want to provide in our

197
00:09:58,480 --> 00:10:04,870
container page the sandbox and so

198
00:10:01,960 --> 00:10:07,960
because that is for the environmental

199
00:10:04,870 --> 00:10:09,730
sensitive detection so unlike the

200
00:10:07,960 --> 00:10:12,400
traditional virtual machine-based the

201
00:10:09,730 --> 00:10:15,250
sandbox the user will just upload the

202
00:10:12,400 --> 00:10:19,540
dust and the sample file along with the

203
00:10:15,250 --> 00:10:23,890
context so the contest could be uploaded

204
00:10:19,540 --> 00:10:26,640
in in two ways in the explicit way the

205
00:10:23,890 --> 00:10:29,920
user just like what I mentioned before

206
00:10:26,640 --> 00:10:35,770
so user can just upload their talk or

207
00:10:29,920 --> 00:10:37,390
docker file a top Rafael order or their

208
00:10:35,770 --> 00:10:40,240
image name and the based on those

209
00:10:37,390 --> 00:10:42,880
information we will just try to recover

210
00:10:40,240 --> 00:10:46,180
reconstruct the execution environment

211
00:10:42,880 --> 00:10:49,120
and this also can be done in the

212
00:10:46,180 --> 00:10:51,790
introduced in the way is small like this

213
00:10:49,120 --> 00:10:52,900
is what very useful in the container

214
00:10:51,790 --> 00:10:56,349
place the cross

215
00:10:52,900 --> 00:10:58,449
deployer using the operator because I

216
00:10:56,350 --> 00:11:00,910
really from every containers information

217
00:10:58,450 --> 00:11:05,920
running in the cluster is managed by

218
00:11:00,910 --> 00:11:07,870
this ox traitor like if we know well say

219
00:11:05,920 --> 00:11:11,050
if the develop tell octave active team

220
00:11:07,870 --> 00:11:13,240
they later support they just point out

221
00:11:11,050 --> 00:11:15,579
the one of the samples that delivered in

222
00:11:13,240 --> 00:11:18,220
the in the traffic in the cluster what

223
00:11:15,580 --> 00:11:21,480
we what what we can do is a based on the

224
00:11:18,220 --> 00:11:24,520
destination if that that nation I P or

225
00:11:21,480 --> 00:11:29,410
those information we can just directly

226
00:11:24,520 --> 00:11:33,069
cat this this the information of the

227
00:11:29,410 --> 00:11:36,640
target container then we can just get

228
00:11:33,070 --> 00:11:39,270
all of the information from the Ox

229
00:11:36,640 --> 00:11:44,350
Twitter that we can just like

230
00:11:39,270 --> 00:11:47,069
reconstruct execution environment so in

231
00:11:44,350 --> 00:11:50,560
addition we also need me to provide us

232
00:11:47,070 --> 00:11:53,440
the strong isolation because the you

233
00:11:50,560 --> 00:11:56,020
know the container itself it it doesn't

234
00:11:53,440 --> 00:12:00,430
provide the the hard or strong isolation

235
00:11:56,020 --> 00:12:03,370
because every container in in a cluster

236
00:12:00,430 --> 00:12:06,819
in you know in one host they later to

237
00:12:03,370 --> 00:12:10,120
share a same same kernel so if there's a

238
00:12:06,820 --> 00:12:11,709
kernel one of on abilities there so the

239
00:12:10,120 --> 00:12:13,510
attacker could compromise the whole

240
00:12:11,709 --> 00:12:17,079
machine basically they can jump out of

241
00:12:13,510 --> 00:12:20,589
the containers sandbox and there are

242
00:12:17,080 --> 00:12:24,100
multiple ways last the multiple ways

243
00:12:20,589 --> 00:12:27,250
that can so we can achieve the strong

244
00:12:24,100 --> 00:12:27,820
isolation using the cutter or the G

245
00:12:27,250 --> 00:12:29,709
Weiser

246
00:12:27,820 --> 00:12:32,709
basically what they did is that they

247
00:12:29,709 --> 00:12:35,949
just add another layer like a hypervisor

248
00:12:32,709 --> 00:12:38,349
underneath the underneath the container

249
00:12:35,950 --> 00:12:41,050
so so that they can achieve the same

250
00:12:38,350 --> 00:12:45,339
isolation level as the work virtual

251
00:12:41,050 --> 00:12:47,650
machine the third question is how to

252
00:12:45,339 --> 00:12:50,200
collect the sample behaviors in the

253
00:12:47,650 --> 00:12:53,199
sandbox which is very important but it

254
00:12:50,200 --> 00:12:55,240
so it's also a quite common common

255
00:12:53,200 --> 00:12:57,580
problem because I really run time

256
00:12:55,240 --> 00:13:01,140
detection tools they are facing the same

257
00:12:57,580 --> 00:13:01,140
problem and there are a lot of

258
00:13:01,970 --> 00:13:07,680
open-source tools or libraries out there

259
00:13:05,220 --> 00:13:11,010
that you can use to collect those rental

260
00:13:07,680 --> 00:13:13,489
information like the system cost and we

261
00:13:11,010 --> 00:13:16,770
use the Cystic which is a worry

262
00:13:13,490 --> 00:13:19,020
convinced to now which help us to

263
00:13:16,770 --> 00:13:23,930
collect the every system call from the

264
00:13:19,020 --> 00:13:27,030
invoked by the credit card container and

265
00:13:23,930 --> 00:13:29,760
so the last question here is how to

266
00:13:27,030 --> 00:13:32,550
analyze the simple behaviors beyond the

267
00:13:29,760 --> 00:13:35,040
individual detection mechanism because

268
00:13:32,550 --> 00:13:39,420
like I mentioned there's a some unique

269
00:13:35,040 --> 00:13:42,689
feature of the container that the

270
00:13:39,420 --> 00:13:45,630
virtual machine technology doesn't have

271
00:13:42,690 --> 00:13:48,000
so we want to leverage those unique

272
00:13:45,630 --> 00:13:51,470
features to provide some sound something

273
00:13:48,000 --> 00:13:54,690
new that can be used for the detection

274
00:13:51,470 --> 00:13:58,830
so what we propose here is the parallel

275
00:13:54,690 --> 00:14:01,710
execution and alignment analysis so the

276
00:13:58,830 --> 00:14:04,500
the idea of parallel execution is quite

277
00:14:01,710 --> 00:14:07,680
straightforward basically we basically

278
00:14:04,500 --> 00:14:09,930
we can just run two containers created

279
00:14:07,680 --> 00:14:13,979
from the same image in parallel and then

280
00:14:09,930 --> 00:14:16,739
feed two samples one wise wise and

281
00:14:13,980 --> 00:14:19,560
suspicious one is to be now to each

282
00:14:16,740 --> 00:14:21,270
container at the same time then based on

283
00:14:19,560 --> 00:14:23,520
the collected information we are trying

284
00:14:21,270 --> 00:14:26,189
to find differences between the two

285
00:14:23,520 --> 00:14:28,829
behaviors so repeatedly that idea is

286
00:14:26,190 --> 00:14:33,140
more like we are trying to reduce the

287
00:14:28,830 --> 00:14:36,650
noise because not because not every

288
00:14:33,140 --> 00:14:40,949
every actions taken by the sample is

289
00:14:36,650 --> 00:14:43,740
malicious because the majority of the

290
00:14:40,950 --> 00:14:46,650
actions is just a like a part it's a

291
00:14:43,740 --> 00:14:49,080
quite common things that they need to

292
00:14:46,650 --> 00:14:51,000
follow the ending flaw of the of the

293
00:14:49,080 --> 00:14:53,880
targeted software and at a certain point

294
00:14:51,000 --> 00:14:56,880
they will trigger the rotation which is

295
00:14:53,880 --> 00:15:00,000
quite vicious like other normal things

296
00:14:56,880 --> 00:15:03,300
so those so comparing to the normal

297
00:15:00,000 --> 00:15:06,840
software the normal the normal the the

298
00:15:03,300 --> 00:15:08,760
behavior of a normal sample so if if we

299
00:15:06,840 --> 00:15:12,070
can find a bit different we can just

300
00:15:08,760 --> 00:15:17,710
easily detected malicious behavior

301
00:15:12,070 --> 00:15:20,240
so - in order to perform the parallel

302
00:15:17,710 --> 00:15:22,760
alignment analysis we have to just

303
00:15:20,240 --> 00:15:24,140
convert the raw data to assist call

304
00:15:22,760 --> 00:15:27,080
sequence which is also quite

305
00:15:24,140 --> 00:15:29,120
straightforward because we can collect a

306
00:15:27,080 --> 00:15:31,160
bit early average information we kind of

307
00:15:29,120 --> 00:15:33,410
regarding those since the system clock

308
00:15:31,160 --> 00:15:36,050
we just need to group them based on the

309
00:15:33,410 --> 00:15:38,750
container name and the PID for each

310
00:15:36,050 --> 00:15:42,500
group we just extract extract those

311
00:15:38,750 --> 00:15:45,320
things come in and like say map each set

312
00:15:42,500 --> 00:15:49,130
called name to a unique character so

313
00:15:45,320 --> 00:15:51,830
that we can just generate a sequence of

314
00:15:49,130 --> 00:15:55,430
states of same scoffs you make all these

315
00:15:51,830 --> 00:15:59,660
states called seeds sequence this seems

316
00:15:55,430 --> 00:16:01,459
quite UV but during our our research we

317
00:15:59,660 --> 00:16:05,360
found out that you know in the real

318
00:16:01,459 --> 00:16:07,779
world is hard to just directly using

319
00:16:05,360 --> 00:16:10,490
this States call sequence the first is a

320
00:16:07,779 --> 00:16:14,300
performance issue because you know that

321
00:16:10,490 --> 00:16:17,810
the number of sales calls generated at

322
00:16:14,300 --> 00:16:20,810
each second is quite large so we you

323
00:16:17,810 --> 00:16:21,859
know our imagination we cracked a 1000

324
00:16:20,810 --> 00:16:25,910
mm others

325
00:16:21,860 --> 00:16:28,010
six calls per second and for process if

326
00:16:25,910 --> 00:16:32,120
you just directly apply the alignment

327
00:16:28,010 --> 00:16:35,300
algorithm then we were just like a wait

328
00:16:32,120 --> 00:16:37,610
forever to get answer so so so the

329
00:16:35,300 --> 00:16:40,670
solution is that we need to filter out

330
00:16:37,610 --> 00:16:43,279
some unnecessary cost which does not is

331
00:16:40,670 --> 00:16:45,699
so common it doesn't give us so many so

332
00:16:43,279 --> 00:16:49,430
many informations and then we just

333
00:16:45,700 --> 00:16:52,430
normalize the same or cost but in the in

334
00:16:49,430 --> 00:16:54,949
the the cost that have a similar for

335
00:16:52,430 --> 00:16:56,750
narratives to together and the last step

336
00:16:54,950 --> 00:17:00,260
is that we just compressed the

337
00:16:56,750 --> 00:17:03,200
continuous cost to to a lot lower number

338
00:17:00,260 --> 00:17:05,240
here so but doing this this stuff's we

339
00:17:03,200 --> 00:17:08,329
can just reduce the length of the

340
00:17:05,240 --> 00:17:14,000
state's call sequence to only 10% of 2

341
00:17:08,329 --> 00:17:16,309
or 2 to 30 percent which allow us to to

342
00:17:14,000 --> 00:17:20,839
to generate a line when the result in

343
00:17:16,309 --> 00:17:24,559
fields second and another another keeper

344
00:17:20,839 --> 00:17:25,240
another challenging is that the is the

345
00:17:24,559 --> 00:17:29,830
scoring for

346
00:17:25,240 --> 00:17:33,309
because the because the quality of the

347
00:17:29,830 --> 00:17:35,710
score function is is is a key factor to

348
00:17:33,309 --> 00:17:39,700
determine to determine the quality of a

349
00:17:35,710 --> 00:17:42,820
laminate without giving this to States

350
00:17:39,700 --> 00:17:45,909
called sequence here so they generate

351
00:17:42,820 --> 00:17:47,559
generated by the same same kind of a

352
00:17:45,909 --> 00:17:49,570
leading food or similar in for the

353
00:17:47,559 --> 00:17:52,178
pattern the first the micro-services are

354
00:17:49,570 --> 00:17:54,309
in the in the idle state stage damages

355
00:17:52,179 --> 00:17:58,899
to connect to them and then standard

356
00:17:54,309 --> 00:18:01,418
request and by and by doing so we have

357
00:17:58,899 --> 00:18:04,090
noted the the sun go to them then the

358
00:18:01,419 --> 00:18:07,270
last stage is the sample as at

359
00:18:04,090 --> 00:18:13,029
conclusion so if if we run the

360
00:18:07,270 --> 00:18:15,970
traditional scoring function you can run

361
00:18:13,029 --> 00:18:17,710
the traditional alignment algorithm with

362
00:18:15,970 --> 00:18:20,919
a traditional scoring function we will

363
00:18:17,710 --> 00:18:24,070
gather without a ball all of a sudden

364
00:18:20,919 --> 00:18:26,710
this is the this is the meaning minimis

365
00:18:24,070 --> 00:18:29,379
because this cannot be cannot be you you

366
00:18:26,710 --> 00:18:32,950
cannot be used for the for the security

367
00:18:29,380 --> 00:18:36,640
analysis basically what what we want to

368
00:18:32,950 --> 00:18:40,169
achieve is the it's a figure in the end

369
00:18:36,640 --> 00:18:44,820
up in the bottom because we want to just

370
00:18:40,169 --> 00:18:48,149
align the state's curves in the same

371
00:18:44,820 --> 00:18:51,939
generated by the same stage together and

372
00:18:48,149 --> 00:18:56,529
isn't so for the because this is because

373
00:18:51,940 --> 00:18:59,549
the traditional score function is used

374
00:18:56,529 --> 00:19:01,659
to fall for the biological purpose

375
00:18:59,549 --> 00:19:04,629
intuitively they just involve on to

376
00:19:01,659 --> 00:19:06,880
match as run years since Vanya's atom in

377
00:19:04,630 --> 00:19:10,120
the in the sequence as possible

378
00:19:06,880 --> 00:19:17,070
regarding its the content of each

379
00:19:10,120 --> 00:19:24,428
element so so so well it's more like you

380
00:19:17,070 --> 00:19:27,309
you just match the the match the some

381
00:19:24,429 --> 00:19:30,190
some some fraction controller but

382
00:19:27,309 --> 00:19:32,789
controller of your of your head to match

383
00:19:30,190 --> 00:19:36,340
another another DNA sequence of wishes

384
00:19:32,789 --> 00:19:37,980
controller you are you are your food

385
00:19:36,340 --> 00:19:39,840
so although

386
00:19:37,980 --> 00:19:42,000
although they from the phone without it

387
00:19:39,840 --> 00:19:46,139
is so sad that they have a perfect match

388
00:19:42,000 --> 00:19:51,120
but but but the it doesn't make no sense

389
00:19:46,139 --> 00:19:56,519
here so in order to to get our perfect

390
00:19:51,120 --> 00:19:59,639
alignment we we test a lot of method and

391
00:19:56,519 --> 00:20:04,409
and the in summary we just believe that

392
00:19:59,639 --> 00:20:07,830
this using this formula is to have a

393
00:20:04,409 --> 00:20:10,950
most effective with it you regret out

394
00:20:07,830 --> 00:20:12,658
here so Bethany the the number returned

395
00:20:10,950 --> 00:20:15,990
by the score function is considered by

396
00:20:12,659 --> 00:20:20,519
three attributes the how important how

397
00:20:15,990 --> 00:20:23,429
important offer of the of them aligned

398
00:20:20,519 --> 00:20:25,919
us stay safe call it's more like a

399
00:20:23,429 --> 00:20:29,370
certain in the print in the previous

400
00:20:25,919 --> 00:20:31,649
example the open the the file related

401
00:20:29,370 --> 00:20:34,459
assess its cult here have a less

402
00:20:31,649 --> 00:20:38,039
important weight than the like the

403
00:20:34,460 --> 00:20:39,630
socket of connection coughs so by giving

404
00:20:38,039 --> 00:20:44,760
the sake the connection cause a higher

405
00:20:39,630 --> 00:20:48,389
score we can just get a better without

406
00:20:44,760 --> 00:20:51,090
and this this this importance of weight

407
00:20:48,389 --> 00:20:53,939
can be calculated using the frequency of

408
00:20:51,090 --> 00:20:56,519
the state code in the sequence the more

409
00:20:53,940 --> 00:20:59,850
frequency this it can happen in the

410
00:20:56,519 --> 00:21:00,830
sequence the light weight for the for

411
00:20:59,850 --> 00:21:03,779
their importance

412
00:21:00,830 --> 00:21:07,199
similarly also for the for the closeness

413
00:21:03,779 --> 00:21:08,850
if if if we align the two states codes

414
00:21:07,200 --> 00:21:11,279
that have a similar functionalities and

415
00:21:08,850 --> 00:21:15,209
we will get a higher score and the last

416
00:21:11,279 --> 00:21:19,350
is the sensitivity this is they this is

417
00:21:15,210 --> 00:21:22,230
like a steep angle for the security

418
00:21:19,350 --> 00:21:24,779
analysis purpose the idea here is is

419
00:21:22,230 --> 00:21:27,750
that for for certain sense system costs

420
00:21:24,779 --> 00:21:29,669
that the security as further with that

421
00:21:27,750 --> 00:21:34,590
we believe that is very dangerous

422
00:21:29,669 --> 00:21:37,830
because it can be used for for launch

423
00:21:34,590 --> 00:21:41,370
the attack and then by giving them a

424
00:21:37,830 --> 00:21:44,129
higher score we can just match some much

425
00:21:41,370 --> 00:21:47,969
those system costs in life you invoked

426
00:21:44,130 --> 00:21:51,080
by the software itself if we can mash

427
00:21:47,970 --> 00:21:53,750
them out so those are masters

428
00:21:51,080 --> 00:21:57,889
cause those unless the critical census

429
00:21:53,750 --> 00:22:00,580
cows could indicate the East Bloc could

430
00:21:57,890 --> 00:22:09,019
indicate the exploit

431
00:22:00,580 --> 00:22:12,199
so mmm so at last we also try our our

432
00:22:09,019 --> 00:22:14,990
sandbox were rest of our attacks and

433
00:22:12,200 --> 00:22:17,090
then we are trying to answer converges

434
00:22:14,990 --> 00:22:20,510
to pinpoint exactly each rotation

435
00:22:17,090 --> 00:22:22,850
fraction from the alignment and what

436
00:22:20,510 --> 00:22:25,010
kind of a unique pattern we can generate

437
00:22:22,850 --> 00:22:28,580
it from the alarming result which kind

438
00:22:25,010 --> 00:22:35,200
can help us to either create a signature

439
00:22:28,580 --> 00:22:40,668
or or to for the fault for the forensics

440
00:22:35,200 --> 00:22:43,610
and the first one here so people took us

441
00:22:40,669 --> 00:22:46,190
due to the time limitation so I mean out

442
00:22:43,610 --> 00:22:48,830
goes through the detail one by one but

443
00:22:46,190 --> 00:22:52,700
you can we have a much more evaluation

444
00:22:48,830 --> 00:22:54,769
our wild by paper please just a random

445
00:22:52,700 --> 00:22:57,769
if I if you like interesting you know

446
00:22:54,769 --> 00:23:01,070
result basically we try the past

447
00:22:57,769 --> 00:23:03,230
reversal here the time here is more like

448
00:23:01,070 --> 00:23:07,010
a you will have a repeating the block of

449
00:23:03,230 --> 00:23:10,700
foul foul foul trying traverses the

450
00:23:07,010 --> 00:23:13,399
steps from the alignment of results and

451
00:23:10,700 --> 00:23:17,779
then for the remote command the

452
00:23:13,399 --> 00:23:22,789
execution is more like now we will just

453
00:23:17,779 --> 00:23:26,149
of we we can successfully align those

454
00:23:22,789 --> 00:23:29,419
common things which is the processed by

455
00:23:26,149 --> 00:23:32,178
the software to to pass the command or

456
00:23:29,419 --> 00:23:34,429
or is more like a follow that we now

457
00:23:32,179 --> 00:23:36,500
pass then at a certain point you will

458
00:23:34,429 --> 00:23:40,340
found you will you will found out that

459
00:23:36,500 --> 00:23:43,340
there's a match the things so a match

460
00:23:40,340 --> 00:23:48,559
the car for the folk or or cologne which

461
00:23:43,340 --> 00:23:53,269
is the which is Brittany is a explore

462
00:23:48,559 --> 00:23:56,389
point by just the running the injector

463
00:23:53,269 --> 00:24:00,980
commander in in the in the separator

464
00:23:56,389 --> 00:24:02,820
process and you have so basically we

465
00:24:00,980 --> 00:24:05,730
wait try a lot of

466
00:24:02,820 --> 00:24:09,029
a different type of remote remote come

467
00:24:05,730 --> 00:24:11,789
on as at the ocean attack different type

468
00:24:09,029 --> 00:24:15,210
of software they all show the similar

469
00:24:11,789 --> 00:24:18,750
pattern here is a quiet obviously so we

470
00:24:15,210 --> 00:24:23,720
we believe that is this can help the

471
00:24:18,750 --> 00:24:27,389
security researchers to to further

472
00:24:23,720 --> 00:24:29,370
understand how how the attack works so

473
00:24:27,389 --> 00:24:31,590
yeah so there's a like I mentioned

474
00:24:29,370 --> 00:24:35,758
built-in Tammany limitation I I can now

475
00:24:31,590 --> 00:24:37,769
just finish all of them but but the yeah

476
00:24:35,759 --> 00:24:42,149
so if you still have questions break

477
00:24:37,769 --> 00:24:44,370
please ask us offline and again some

478
00:24:42,149 --> 00:24:47,239
thank you for coming to our talk

479
00:24:44,370 --> 00:24:47,239
thanks

480
00:24:51,310 --> 00:24:53,480
[Applause]

