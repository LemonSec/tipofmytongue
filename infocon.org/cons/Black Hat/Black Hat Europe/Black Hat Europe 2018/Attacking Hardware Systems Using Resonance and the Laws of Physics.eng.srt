1
00:00:00,030 --> 00:00:06,480
hello ooh a lot of people and thank you

2
00:00:03,899 --> 00:00:08,849
very much for having me and I just want

3
00:00:06,480 --> 00:00:11,010
to share my research something I

4
00:00:08,849 --> 00:00:13,349
discovered and for me I find it really

5
00:00:11,010 --> 00:00:16,560
interesting I will try very hard not to

6
00:00:13,349 --> 00:00:17,670
bore some of you to tears and I but I am

7
00:00:16,560 --> 00:00:24,479
going to be moving very very quickly

8
00:00:17,670 --> 00:00:26,490
I've got way too much content just my

9
00:00:24,480 --> 00:00:30,980
favorite little video it was rather

10
00:00:26,490 --> 00:00:35,190
appropriate considering the the topic

11
00:00:30,980 --> 00:00:36,600
right and I'm the global head of

12
00:00:35,190 --> 00:00:38,899
hardware security and capability

13
00:00:36,600 --> 00:00:41,399
development for IBM's x-force read I

14
00:00:38,899 --> 00:00:43,980
didn't come up with that title it's a

15
00:00:41,399 --> 00:00:47,579
really really big mouthful I spend most

16
00:00:43,980 --> 00:00:50,819
my time creating capability hardware

17
00:00:47,579 --> 00:00:52,980
capability offensive tools for IBM when

18
00:00:50,820 --> 00:00:55,530
the consultants need some capability or

19
00:00:52,980 --> 00:00:57,419
they need a piece of hardware that that

20
00:00:55,530 --> 00:00:59,160
we can't get or is only available in the

21
00:00:57,420 --> 00:01:02,070
dark web then I'll go ahead and actually

22
00:00:59,160 --> 00:01:03,538
build it and my alias is the toy maker

23
00:01:02,070 --> 00:01:05,099
simply because that's why I spend most

24
00:01:03,539 --> 00:01:06,780
of my time doing and that's a lot easier

25
00:01:05,099 --> 00:01:09,059
than simply you're spouting that long

26
00:01:06,780 --> 00:01:11,369
title and some of the boring bits and

27
00:01:09,060 --> 00:01:14,340
because some of the content I'm going to

28
00:01:11,369 --> 00:01:16,680
be going through here is I believe it

29
00:01:14,340 --> 00:01:19,680
would be irresponsible to tell you the

30
00:01:16,680 --> 00:01:22,710
company's affected by it and any other

31
00:01:19,680 --> 00:01:24,509
particular details simply because they

32
00:01:22,710 --> 00:01:27,360
can't fix it with software they have to

33
00:01:24,509 --> 00:01:30,750
re-engineer their product and as a

34
00:01:27,360 --> 00:01:32,100
result the target component as you can

35
00:01:30,750 --> 00:01:33,210
see is just going to be referred to as

36
00:01:32,100 --> 00:01:35,908
component throughout the entire

37
00:01:33,210 --> 00:01:37,259
presentation there are some company

38
00:01:35,909 --> 00:01:42,540
names in here but they're not related to

39
00:01:37,259 --> 00:01:45,420
the disclosure so to get on to the topic

40
00:01:42,540 --> 00:01:48,689
I'll give you a very quick summary there

41
00:01:45,420 --> 00:01:51,390
are some I think I'm popping a bit there

42
00:01:48,689 --> 00:01:54,179
are some IOT manufacturers that are

43
00:01:51,390 --> 00:01:57,479
taking a very serious action to make

44
00:01:54,180 --> 00:01:59,490
sure that in the event of a software

45
00:01:57,479 --> 00:02:01,289
compromise that the users privacy is not

46
00:01:59,490 --> 00:02:02,548
affected and I think that's really

47
00:02:01,290 --> 00:02:06,240
admirable so they're actually building

48
00:02:02,549 --> 00:02:07,619
in hardware to make sure that on the

49
00:02:06,240 --> 00:02:09,598
assumption that software can be hacked

50
00:02:07,619 --> 00:02:11,800
when it is hacked the user still has

51
00:02:09,598 --> 00:02:14,230
control over their privacy and

52
00:02:11,800 --> 00:02:16,870
there's a particular component or series

53
00:02:14,230 --> 00:02:17,560
of components that's been used to to

54
00:02:16,870 --> 00:02:19,570
make this happen

55
00:02:17,560 --> 00:02:22,900
I'm targeting one particular one in this

56
00:02:19,570 --> 00:02:26,200
paper that or this presentation but the

57
00:02:22,900 --> 00:02:28,030
same research they've done here I've I

58
00:02:26,200 --> 00:02:29,940
have been able to apply another context

59
00:02:28,030 --> 00:02:32,260
and you'll see what I'm talking about

60
00:02:29,940 --> 00:02:34,690
but this product or this particular

61
00:02:32,260 --> 00:02:36,399
target component just once again from a

62
00:02:34,690 --> 00:02:38,140
disclosure point of view makes no

63
00:02:36,400 --> 00:02:40,330
security claims it doesn't pretend to be

64
00:02:38,140 --> 00:02:43,059
a security product this is all about a

65
00:02:40,330 --> 00:02:44,710
circuit board util implemented so how

66
00:02:43,060 --> 00:02:46,870
these products are being used at the

67
00:02:44,710 --> 00:02:48,670
circuit layer and how you can manipulate

68
00:02:46,870 --> 00:02:50,700
some of the physical properties by

69
00:02:48,670 --> 00:02:53,500
finding a certain characteristics and

70
00:02:50,700 --> 00:02:54,730
but before I get into the the fun bits

71
00:02:53,500 --> 00:02:59,170
that's what I should do a little bit of

72
00:02:54,730 --> 00:03:04,690
a recap security as a design problem we

73
00:02:59,170 --> 00:03:06,429
we all heard here about sdlc and secure

74
00:03:04,690 --> 00:03:10,150
software development but if you're not

75
00:03:06,430 --> 00:03:11,980
familiar in 1970 the DoD commissioned a

76
00:03:10,150 --> 00:03:14,260
report which was nicknamed or being

77
00:03:11,980 --> 00:03:17,769
named the ware report and actually state

78
00:03:14,260 --> 00:03:19,410
that you require as you can see a

79
00:03:17,770 --> 00:03:21,880
combination of hardware software

80
00:03:19,410 --> 00:03:24,040
communications physical personal and

81
00:03:21,880 --> 00:03:26,140
administrative procedural safeguards is

82
00:03:24,040 --> 00:03:28,450
required for comprehensive security in

83
00:03:26,140 --> 00:03:30,910
particular software safeguards alone are

84
00:03:28,450 --> 00:03:33,579
not sufficient I think the really key

85
00:03:30,910 --> 00:03:35,170
part of this is this was in 1970 we're

86
00:03:33,580 --> 00:03:36,970
still seeing in the industry a lot of

87
00:03:35,170 --> 00:03:39,760
people purely relying on software

88
00:03:36,970 --> 00:03:41,950
safeguards and if you've if your systems

89
00:03:39,760 --> 00:03:43,660
are stuck behind firewalls in a data

90
00:03:41,950 --> 00:03:47,739
center that's that's probably fine but

91
00:03:43,660 --> 00:03:50,410
in IOT space embedded automotive people

92
00:03:47,740 --> 00:03:52,510
have effectively unlimited access to the

93
00:03:50,410 --> 00:03:57,040
target product in which case you need to

94
00:03:52,510 --> 00:03:59,590
look at the holistic picture I'm a firm

95
00:03:57,040 --> 00:04:01,929
believer that I'm not saying that you

96
00:03:59,590 --> 00:04:04,390
should but anyone who uses product

97
00:04:01,930 --> 00:04:06,460
should be able to publish all of the

98
00:04:04,390 --> 00:04:07,958
information all the schematics source

99
00:04:06,460 --> 00:04:09,730
code design documents about their

100
00:04:07,959 --> 00:04:11,380
product and their product should still

101
00:04:09,730 --> 00:04:14,230
be secure because it's been engineered

102
00:04:11,380 --> 00:04:16,390
properly in the first place just a nice

103
00:04:14,230 --> 00:04:19,209
simple case study this is actually nota

104
00:04:16,390 --> 00:04:20,950
motive one the first thing we do in

105
00:04:19,209 --> 00:04:22,660
Hardware Security's you get given a

106
00:04:20,950 --> 00:04:24,520
product you pull it apart you find out

107
00:04:22,660 --> 00:04:25,930
all the components anything that has

108
00:04:24,520 --> 00:04:28,180
data stored on it you try and get the

109
00:04:25,930 --> 00:04:30,910
data off we did this for a telematics

110
00:04:28,180 --> 00:04:32,350
unit you know in a vehicle and you can

111
00:04:30,910 --> 00:04:36,190
see the little flash chip over on the

112
00:04:32,350 --> 00:04:37,690
side here and the manufacturer said all

113
00:04:36,190 --> 00:04:39,640
that's fine yes you've got access to the

114
00:04:37,690 --> 00:04:41,890
file system but what did you do how did

115
00:04:39,640 --> 00:04:43,599
you do that so well we use a data man

116
00:04:41,890 --> 00:04:45,400
reader and a flash chip socket and they

117
00:04:43,600 --> 00:04:46,630
said well you know that's that's a

118
00:04:45,400 --> 00:04:48,190
couple of thousand pounds that's a

119
00:04:46,630 --> 00:04:49,750
little bit of a barrier I said it's not

120
00:04:48,190 --> 00:04:51,850
a barrier we simply do it that way

121
00:04:49,750 --> 00:04:54,310
because it's quicker so to prove a point

122
00:04:51,850 --> 00:04:55,300
and now there's somebody in the audience

123
00:04:54,310 --> 00:04:56,590
who's going to heckle me for this one

124
00:04:55,300 --> 00:04:57,790
I'm gonna say I did it but that's

125
00:04:56,590 --> 00:05:00,000
actually my wife because she's better

126
00:04:57,790 --> 00:05:02,169
with a soldering iron than I am and

127
00:05:00,000 --> 00:05:03,910
soldered seven wires on to the bottom of

128
00:05:02,169 --> 00:05:05,289
the BGA chip and most people don't

129
00:05:03,910 --> 00:05:06,970
realize that flash chips will actually

130
00:05:05,290 --> 00:05:09,100
emulate an SD card if they're wired up

131
00:05:06,970 --> 00:05:10,930
correctly so seven wires straight into

132
00:05:09,100 --> 00:05:12,729
an SD card adapter stuck it into an SD

133
00:05:10,930 --> 00:05:15,010
slot mounted the filesystem got past all

134
00:05:12,729 --> 00:05:16,359
the software controls so this system was

135
00:05:15,010 --> 00:05:18,250
well locked down had good software

136
00:05:16,360 --> 00:05:20,050
controls but all you had to do is pull

137
00:05:18,250 --> 00:05:22,720
the flash chip off to recover the entire

138
00:05:20,050 --> 00:05:24,520
file system and a couple of hours and

139
00:05:22,720 --> 00:05:26,860
Mego come on solar faster I want to get

140
00:05:24,520 --> 00:05:28,359
on with this but that's just a classic

141
00:05:26,860 --> 00:05:30,550
example once we had access to the file

142
00:05:28,360 --> 00:05:32,440
system the rest of it fell we're out to

143
00:05:30,550 --> 00:05:33,940
decompile you know java we're able to

144
00:05:32,440 --> 00:05:36,490
get access to the storage any

145
00:05:33,940 --> 00:05:37,950
cryptographic material and that was just

146
00:05:36,490 --> 00:05:40,330
to prove a point

147
00:05:37,950 --> 00:05:42,219
another very simple one this one's a

148
00:05:40,330 --> 00:05:44,890
typical of security through obscurity

149
00:05:42,220 --> 00:05:46,660
approach once again it's really

150
00:05:44,890 --> 00:05:48,010
difficult because the the engineers the

151
00:05:46,660 --> 00:05:49,479
electronics engineers mechanical

152
00:05:48,010 --> 00:05:51,520
engineers always do such a good job

153
00:05:49,479 --> 00:05:53,770
they're just not thinking like the

154
00:05:51,520 --> 00:05:55,840
devious people we all are so we actually

155
00:05:53,770 --> 00:05:57,580
explain to them some of the processes we

156
00:05:55,840 --> 00:05:58,630
go about to recover and get access to

157
00:05:57,580 --> 00:06:03,760
these systems it makes a lot more sense

158
00:05:58,630 --> 00:06:05,409
so this one was a an atom based phone it

159
00:06:03,760 --> 00:06:06,490
had quite good security controls in

160
00:06:05,410 --> 00:06:09,490
place from a software point of view

161
00:06:06,490 --> 00:06:10,840
again but I'm being a very impatient

162
00:06:09,490 --> 00:06:11,950
person well spent about 15 minutes

163
00:06:10,840 --> 00:06:13,119
trying to get past the software and

164
00:06:11,950 --> 00:06:15,159
decided this just wasn't worth the

165
00:06:13,120 --> 00:06:16,780
hassle so I simply pulled it apart a

166
00:06:15,160 --> 00:06:18,430
little USB microscope and started

167
00:06:16,780 --> 00:06:20,140
looking over the circuit board and I

168
00:06:18,430 --> 00:06:22,150
found that there was a small cluster of

169
00:06:20,140 --> 00:06:24,340
unloaded components so to cover a long

170
00:06:22,150 --> 00:06:25,989
story short those components are

171
00:06:24,340 --> 00:06:27,609
typically option resistors which is how

172
00:06:25,990 --> 00:06:29,050
the developers choose whether or not the

173
00:06:27,610 --> 00:06:31,510
bootloader is to go into development

174
00:06:29,050 --> 00:06:32,950
mode or production mode so one by one

175
00:06:31,510 --> 00:06:34,840
put one of these resistors on reset the

176
00:06:32,950 --> 00:06:35,349
device and went round and round in

177
00:06:34,840 --> 00:06:37,390
circles

178
00:06:35,350 --> 00:06:39,610
I also found one I was pretty sure was a

179
00:06:37,390 --> 00:06:41,560
serial port but that on logic analyzer

180
00:06:39,610 --> 00:06:43,000
nothing happened the first few times all

181
00:06:41,560 --> 00:06:45,100
a sudden I put on one of these

182
00:06:43,000 --> 00:06:47,110
components reset the device and a load

183
00:06:45,100 --> 00:06:48,610
of data spat out and it was I put it

184
00:06:47,110 --> 00:06:50,080
into real term as you can see there it

185
00:06:48,610 --> 00:06:52,990
was the BIOS boot screen so is the

186
00:06:50,080 --> 00:06:55,210
entire terminal straight into the into

187
00:06:52,990 --> 00:06:57,130
the back end there's no user name no

188
00:06:55,210 --> 00:06:59,500
password on the control some once I had

189
00:06:57,130 --> 00:07:01,000
that it's a little bit blurry but I went

190
00:06:59,500 --> 00:07:02,500
in there and disabled you feel secure

191
00:07:01,000 --> 00:07:04,750
boot then I once again I was able to get

192
00:07:02,500 --> 00:07:07,030
access to the entire file system the

193
00:07:04,750 --> 00:07:08,380
this was so easy because the parts are

194
00:07:07,030 --> 00:07:10,059
so small that literally with a

195
00:07:08,380 --> 00:07:11,320
screwdriver you could scrape the solder

196
00:07:10,060 --> 00:07:12,670
paste that's leftover from the

197
00:07:11,320 --> 00:07:14,170
production process to actually bridge

198
00:07:12,670 --> 00:07:15,670
the part so once again with a

199
00:07:14,170 --> 00:07:17,320
screwdriver is all that was actually

200
00:07:15,670 --> 00:07:22,060
required to get access to this

201
00:07:17,320 --> 00:07:23,950
development mode so as I said before I'm

202
00:07:22,060 --> 00:07:27,520
a firm believer that security comes from

203
00:07:23,950 --> 00:07:28,900
process yeah you don't choose security

204
00:07:27,520 --> 00:07:30,580
technology you choose what your

205
00:07:28,900 --> 00:07:32,830
requirements are first once you know how

206
00:07:30,580 --> 00:07:34,390
you want to what you're what you want

207
00:07:32,830 --> 00:07:36,190
your product to do how you want it to

208
00:07:34,390 --> 00:07:37,719
function part of that should also be how

209
00:07:36,190 --> 00:07:40,480
you want it secured then you can go

210
00:07:37,720 --> 00:07:42,100
ahead and choose technology anyone from

211
00:07:40,480 --> 00:07:43,750
an engineering background we all love

212
00:07:42,100 --> 00:07:45,280
gadgets we all love toys something new

213
00:07:43,750 --> 00:07:47,110
comes out let's use this to build a new

214
00:07:45,280 --> 00:07:48,909
product that's not actually the right

215
00:07:47,110 --> 00:07:51,610
way around so if you implement a proper

216
00:07:48,910 --> 00:07:53,830
process and make sure before any designs

217
00:07:51,610 --> 00:07:55,870
are done product requirements functional

218
00:07:53,830 --> 00:07:59,169
safety security and bold obviously

219
00:07:55,870 --> 00:08:00,690
commercial life cycle part of the

220
00:07:59,170 --> 00:08:03,130
security requirements obviously doing

221
00:08:00,690 --> 00:08:05,820
cover life cycle as well end-of-life

222
00:08:03,130 --> 00:08:08,980
that sort of thing

223
00:08:05,820 --> 00:08:10,510
so as I said earlier a lot of these

224
00:08:08,980 --> 00:08:11,470
companies are assuming their products

225
00:08:10,510 --> 00:08:13,360
will be compromised

226
00:08:11,470 --> 00:08:14,770
so if you assume it can be compromised

227
00:08:13,360 --> 00:08:16,870
design it with that assumption in mind

228
00:08:14,770 --> 00:08:18,460
so for a traditional data system risks

229
00:08:16,870 --> 00:08:20,650
will compromise are typically to date or

230
00:08:18,460 --> 00:08:22,930
availability let's say for semi

231
00:08:20,650 --> 00:08:24,729
autonomous systems or vehicles you end

232
00:08:22,930 --> 00:08:28,120
up with a security risk that can

233
00:08:24,730 --> 00:08:28,600
actually have an impact to life safety

234
00:08:28,120 --> 00:08:31,210
risk

235
00:08:28,600 --> 00:08:33,580
so if we look at the I Triple E guidance

236
00:08:31,210 --> 00:08:35,380
on EMC and functional safety that's a

237
00:08:33,580 --> 00:08:37,660
massive book but this particular part I

238
00:08:35,380 --> 00:08:39,400
think is really really important warning

239
00:08:37,659 --> 00:08:41,348
of a hazard is not considered a

240
00:08:39,400 --> 00:08:43,750
substitute for guarding against it where

241
00:08:41,349 --> 00:08:45,279
guarding against it is possible guarding

242
00:08:43,750 --> 00:08:46,509
is considered no substitute

243
00:08:45,279 --> 00:08:47,980
for designing the hazard out in the

244
00:08:46,509 --> 00:08:49,689
first place where it is possible to

245
00:08:47,980 --> 00:08:51,189
design the hazard out so you're talking

246
00:08:49,689 --> 00:08:52,930
about anything embedded it's really

247
00:08:51,189 --> 00:08:54,849
important where you can design these

248
00:08:52,930 --> 00:08:57,279
hazards out don't simply tell people

249
00:08:54,850 --> 00:08:59,079
about it so if we put this into context

250
00:08:57,279 --> 00:09:00,759
with an autonomous vehicle telling a

251
00:08:59,079 --> 00:09:02,649
driver they may not have control of the

252
00:09:00,759 --> 00:09:04,120
car if someone was to hack it really is

253
00:09:02,649 --> 00:09:05,339
not a substitute for guarding against

254
00:09:04,120 --> 00:09:08,199
that in the first place

255
00:09:05,339 --> 00:09:09,730
conversely you know adding edge security

256
00:09:08,199 --> 00:09:11,740
devices is not considered a substitute

257
00:09:09,730 --> 00:09:13,509
for designing the system properly so

258
00:09:11,740 --> 00:09:15,459
that in the event of a hack that the

259
00:09:13,509 --> 00:09:17,829
driver still has sufficient control to

260
00:09:15,459 --> 00:09:18,998
control the vehicle safely and that's a

261
00:09:17,829 --> 00:09:20,829
hardware design problem that's not

262
00:09:18,999 --> 00:09:22,089
software design problem you've assumed

263
00:09:20,829 --> 00:09:24,878
the software can be compromised

264
00:09:22,089 --> 00:09:26,259
so I've done things with some automotive

265
00:09:24,879 --> 00:09:27,759
manufacturers where we've redesigned

266
00:09:26,259 --> 00:09:29,829
their steering controllers so that in

267
00:09:27,759 --> 00:09:32,800
the event of a software hack the

268
00:09:29,829 --> 00:09:34,420
steering the the controller actually

269
00:09:32,800 --> 00:09:35,529
validates the human input over the top

270
00:09:34,420 --> 00:09:38,589
of the software input so it's actually

271
00:09:35,529 --> 00:09:39,879
relatively straightforward process so

272
00:09:38,589 --> 00:09:41,559
now getting onto the topic this is the

273
00:09:39,879 --> 00:09:43,600
bit which I get really excited about so

274
00:09:41,559 --> 00:09:45,249
I had to get through the first bit so as

275
00:09:43,600 --> 00:09:47,170
I said earlier some IOT designers are

276
00:09:45,249 --> 00:09:49,689
taking really serious action actually

277
00:09:47,170 --> 00:09:51,610
building in hardware so you imagine you

278
00:09:49,689 --> 00:09:53,259
know their IOT devices where you've got

279
00:09:51,610 --> 00:09:55,509
a mute button you've actually got a

280
00:09:53,259 --> 00:09:58,509
button to mute and unmute the system

281
00:09:55,509 --> 00:10:00,519
you've got laptops with LEDs at the top

282
00:09:58,509 --> 00:10:01,899
to tell you when the camera is on these

283
00:10:00,519 --> 00:10:03,939
are all things designed to make sure

284
00:10:01,899 --> 00:10:06,850
that we are aware when our devices are

285
00:10:03,939 --> 00:10:08,709
listening to us or watching us so some

286
00:10:06,850 --> 00:10:10,480
of these hardware designs require as I

287
00:10:08,709 --> 00:10:12,459
said a user to physically press a button

288
00:10:10,480 --> 00:10:13,569
so I've implemented that not through

289
00:10:12,459 --> 00:10:16,540
software they've implemented that

290
00:10:13,569 --> 00:10:18,639
through digital logic and that's what my

291
00:10:16,540 --> 00:10:21,040
little board down here is all about the

292
00:10:18,639 --> 00:10:22,750
question that I asked them was you know

293
00:10:21,040 --> 00:10:24,579
just use your logics floorless does that

294
00:10:22,750 --> 00:10:26,470
mean your implementations flawless and

295
00:10:24,579 --> 00:10:30,128
no it doesn't because of some of the

296
00:10:26,470 --> 00:10:32,740
physical characteristics so if we look

297
00:10:30,129 --> 00:10:33,759
at the failsafe logic itself now once

298
00:10:32,740 --> 00:10:35,319
again setting a little bit of scene

299
00:10:33,759 --> 00:10:36,519
there's a lot of technical content here

300
00:10:35,319 --> 00:10:38,589
so I'm going to try and move fairly

301
00:10:36,519 --> 00:10:42,100
quickly there's a this particular

302
00:10:38,589 --> 00:10:43,929
component and is a very small mixed

303
00:10:42,100 --> 00:10:45,759
signal component so it's like if you're

304
00:10:43,929 --> 00:10:47,920
familiar with a tiny little field

305
00:10:45,759 --> 00:10:49,959
programmable gate array so FPGA tiny

306
00:10:47,920 --> 00:10:51,819
little thing it's you know small cluster

307
00:10:49,959 --> 00:10:53,378
of look-up tables and some comparators

308
00:10:51,819 --> 00:10:55,149
and a few other things but it's really

309
00:10:53,379 --> 00:10:57,750
ideal for building these small state

310
00:10:55,149 --> 00:10:57,750
machines in

311
00:10:58,620 --> 00:11:03,100
so this is the development board and

312
00:11:01,390 --> 00:11:04,930
just to put it into context you can see

313
00:11:03,100 --> 00:11:06,610
the USB plug on the left hand side and

314
00:11:04,930 --> 00:11:09,459
you can see how small the actual

315
00:11:06,610 --> 00:11:11,530
component is it's tiny it's I think it's

316
00:11:09,460 --> 00:11:12,880
2 millimeters by one and a half or you

317
00:11:11,530 --> 00:11:14,709
know 2 by 3 something like that it's a

318
00:11:12,880 --> 00:11:16,660
really tiny little component so this

319
00:11:14,710 --> 00:11:18,880
development board and that that carrier

320
00:11:16,660 --> 00:11:21,250
board I actually have that carrier board

321
00:11:18,880 --> 00:11:22,750
plugged in to my target IOT device and

322
00:11:21,250 --> 00:11:24,160
I'll show you that later on but that

323
00:11:22,750 --> 00:11:27,040
little tiny component is actually the

324
00:11:24,160 --> 00:11:30,040
the target of my research on this

325
00:11:27,040 --> 00:11:32,680
particular instance so so what it does

326
00:11:30,040 --> 00:11:34,719
this these mixed signal logic they have

327
00:11:32,680 --> 00:11:37,920
a series of gates so you imagine the

328
00:11:34,720 --> 00:11:40,810
whole thing is just a matrix you connect

329
00:11:37,920 --> 00:11:43,689
columns and rows and actually form a

330
00:11:40,810 --> 00:11:45,670
small circuit inside that and depending

331
00:11:43,690 --> 00:11:48,220
on what you want to do you connect those

332
00:11:45,670 --> 00:11:51,219
those circuit paths to as you can see a

333
00:11:48,220 --> 00:11:52,750
lookup table that lookup table is

334
00:11:51,220 --> 00:11:54,850
functionally a NAND gate so anyone

335
00:11:52,750 --> 00:11:56,200
familiar with electronics is where what

336
00:11:54,850 --> 00:11:57,940
I'm talking about and then you then

337
00:11:56,200 --> 00:11:59,350
route the output so once these things

338
00:11:57,940 --> 00:12:04,300
are program they can't be changed so you

339
00:11:59,350 --> 00:12:06,640
actually defining this logic inside so

340
00:12:04,300 --> 00:12:08,709
this is that's a screenshot from the

341
00:12:06,640 --> 00:12:10,990
actual designer software so you can see

342
00:12:08,710 --> 00:12:12,370
we've got some and gates so that the

343
00:12:10,990 --> 00:12:14,320
blue the blue parts around the outer

344
00:12:12,370 --> 00:12:16,240
edge are inputs and outputs you can see

345
00:12:14,320 --> 00:12:17,920
by the direction of the arrows we've

346
00:12:16,240 --> 00:12:20,410
then got the all the gray parts which

347
00:12:17,920 --> 00:12:22,329
are the configurable logic so depending

348
00:12:20,410 --> 00:12:24,550
on how the signals are actually made you

349
00:12:22,330 --> 00:12:25,660
you simply draw and line you know draw

350
00:12:24,550 --> 00:12:27,520
these lines throught this nice little

351
00:12:25,660 --> 00:12:29,620
schematic and then you can test your

352
00:12:27,520 --> 00:12:32,100
logic so the logic of this one is that

353
00:12:29,620 --> 00:12:34,690
the user has to press the button to

354
00:12:32,100 --> 00:12:36,040
disable privacy mode so the software can

355
00:12:34,690 --> 00:12:37,390
put the system in to privacy mode which

356
00:12:36,040 --> 00:12:39,699
is fine as in it can turn off the

357
00:12:37,390 --> 00:12:41,380
cameras and microphones but the user has

358
00:12:39,700 --> 00:12:43,870
to press a button to re-enable it and

359
00:12:41,380 --> 00:12:45,880
that's done through the the bottom path

360
00:12:43,870 --> 00:12:47,530
which is the the there's a button

361
00:12:45,880 --> 00:12:49,390
debounce there's a latch in there and

362
00:12:47,530 --> 00:12:51,189
some other bits and pieces and you can

363
00:12:49,390 --> 00:12:53,020
also see that the privacy LED on the

364
00:12:51,190 --> 00:12:55,630
right-hand side you've got camera

365
00:12:53,020 --> 00:12:56,920
microphone gate enabled and then below

366
00:12:55,630 --> 00:12:59,439
at privacy LED so they're actually

367
00:12:56,920 --> 00:13:02,110
running separately which is really

368
00:12:59,440 --> 00:13:03,370
important so that you know the the logic

369
00:13:02,110 --> 00:13:04,600
itself because they might both run at

370
00:13:03,370 --> 00:13:06,220
different voltages or different

371
00:13:04,600 --> 00:13:07,839
characteristics and you might want them

372
00:13:06,220 --> 00:13:09,970
want to be inverted one not to be but

373
00:13:07,839 --> 00:13:11,120
those two are both actually run so in

374
00:13:09,970 --> 00:13:13,460
the event that the camera

375
00:13:11,120 --> 00:13:15,350
turns on the privacy LED because

376
00:13:13,460 --> 00:13:17,150
actually two different functions so this

377
00:13:15,350 --> 00:13:18,500
software can also turn it on and off if

378
00:13:17,150 --> 00:13:19,760
it needs to if it doesn't have enough

379
00:13:18,500 --> 00:13:22,430
reason to it but the minute you press

380
00:13:19,760 --> 00:13:23,870
the mute button and the software enables

381
00:13:22,430 --> 00:13:26,359
privacy mode there should be no way for

382
00:13:23,870 --> 00:13:27,590
the system to listen to what you're

383
00:13:26,360 --> 00:13:31,820
doing or see what you're doing without

384
00:13:27,590 --> 00:13:33,590
you pressing a button so said this is

385
00:13:31,820 --> 00:13:35,750
the this is the bit that gets a little

386
00:13:33,590 --> 00:13:37,640
bit dry so I do apologize this is a

387
00:13:35,750 --> 00:13:40,180
typical data sheet this is a data sheet

388
00:13:37,640 --> 00:13:42,500
from one of these particular products

389
00:13:40,180 --> 00:13:43,790
anyone involved in hardware security the

390
00:13:42,500 --> 00:13:45,050
first thing you do is you go to the data

391
00:13:43,790 --> 00:13:46,670
sheets you have a look see what the

392
00:13:45,050 --> 00:13:48,709
manufacturers say the actual tolerances

393
00:13:46,670 --> 00:13:50,360
are see what the voltages are anyway

394
00:13:48,710 --> 00:13:53,240
when I was doing this research this was

395
00:13:50,360 --> 00:13:54,770
many years ago the first thing I did was

396
00:13:53,240 --> 00:13:56,570
look at look at this and I saw a ball

397
00:13:54,770 --> 00:13:57,740
there was there was a couple of gates so

398
00:13:56,570 --> 00:14:00,320
there's a couple of gates in the chain

399
00:13:57,740 --> 00:14:02,510
one particular gate if you see here in

400
00:14:00,320 --> 00:14:05,450
the middle at 3.3 volts the center

401
00:14:02,510 --> 00:14:07,970
column there to change from a 1 to 0 or

402
00:14:05,450 --> 00:14:11,210
a 0 to a 1 takes this these little gates

403
00:14:07,970 --> 00:14:13,340
15 nanoseconds that's pretty quick but

404
00:14:11,210 --> 00:14:15,920
one when you add them up to change from

405
00:14:13,340 --> 00:14:18,140
1 to 0 to back to il-1 again that's 30

406
00:14:15,920 --> 00:14:20,510
nanoseconds all of a sudden that little

407
00:14:18,140 --> 00:14:21,890
gate can only handle 33 megahertz so

408
00:14:20,510 --> 00:14:25,220
you've got total bandwidth of 33

409
00:14:21,890 --> 00:14:26,750
megahertz and I started thinking what

410
00:14:25,220 --> 00:14:28,430
happens we've got two of them together

411
00:14:26,750 --> 00:14:30,200
what happens if I go above that

412
00:14:28,430 --> 00:14:31,609
frequency then these things are not

413
00:14:30,200 --> 00:14:33,410
designed to go quickly but they're

414
00:14:31,610 --> 00:14:36,190
connected to a very powerful processor

415
00:14:33,410 --> 00:14:38,900
that can make these changes very quickly

416
00:14:36,190 --> 00:14:41,060
once again a little bit more context so

417
00:14:38,900 --> 00:14:42,589
I do apologize about this with any any

418
00:14:41,060 --> 00:14:43,910
electronic component this manufacturer

419
00:14:42,589 --> 00:14:46,880
didn't take any manufacturing there's a

420
00:14:43,910 --> 00:14:48,770
manufacturing bell curve in the data

421
00:14:46,880 --> 00:14:51,380
sheets they say typical so typical is

422
00:14:48,770 --> 00:14:52,880
that redline that's where most things

423
00:14:51,380 --> 00:14:54,530
should actually work then you've

424
00:14:52,880 --> 00:14:55,490
obviously got the low end of the

425
00:14:54,530 --> 00:14:57,650
spectrum you got the high end of the

426
00:14:55,490 --> 00:15:00,740
spectrum with these sorts of resonance

427
00:14:57,650 --> 00:15:01,970
attacks you will find that you made it

428
00:15:00,740 --> 00:15:03,560
depending on what sort of voltages you

429
00:15:01,970 --> 00:15:05,420
can get out you may find that your

430
00:15:03,560 --> 00:15:06,920
attacks work on typical and below but

431
00:15:05,420 --> 00:15:07,790
won't work on the higher end because of

432
00:15:06,920 --> 00:15:09,920
thresholds are slightly different

433
00:15:07,790 --> 00:15:11,270
there's a lot to actually consider but

434
00:15:09,920 --> 00:15:13,130
because this is all about manipulating

435
00:15:11,270 --> 00:15:14,180
physical properties you have to

436
00:15:13,130 --> 00:15:16,180
understand exactly what you're looking

437
00:15:14,180 --> 00:15:18,170
at so once again you can get these

438
00:15:16,180 --> 00:15:19,819
manufacturing bell curves and these

439
00:15:18,170 --> 00:15:21,410
tolerance curves from the manufacturers

440
00:15:19,820 --> 00:15:23,510
so if you're trying to do one of these

441
00:15:21,410 --> 00:15:23,740
sorts of attacks it's you characterize

442
00:15:23,510 --> 00:15:25,210
you

443
00:15:23,740 --> 00:15:26,470
target you then go through and find all

444
00:15:25,210 --> 00:15:28,120
the data shoots from all the parts and

445
00:15:26,470 --> 00:15:32,230
actually put together a chain to work

446
00:15:28,120 --> 00:15:35,410
out best and worst case so without

447
00:15:32,230 --> 00:15:37,360
boring your too much the that's this the

448
00:15:35,410 --> 00:15:39,160
the picture I've reproduced it again and

449
00:15:37,360 --> 00:15:41,320
then underneath it this is a very very

450
00:15:39,160 --> 00:15:43,630
simple logical version of what I've got

451
00:15:41,320 --> 00:15:45,400
my little board here so you've got the

452
00:15:43,630 --> 00:15:46,870
microcontroller you've got that logic

453
00:15:45,400 --> 00:15:49,449
and you can see a little physical button

454
00:15:46,870 --> 00:15:51,430
there and then there's a load switch now

455
00:15:49,450 --> 00:15:53,740
the load switch is simply to turn the

456
00:15:51,430 --> 00:15:55,660
USB power on and off because I've seen

457
00:15:53,740 --> 00:15:57,220
these some of these systems where they

458
00:15:55,660 --> 00:15:58,750
actually have a USB camera and

459
00:15:57,220 --> 00:15:59,890
microphone so they simply turn the power

460
00:15:58,750 --> 00:16:01,750
off because they think they're doing the

461
00:15:59,890 --> 00:16:03,280
right thing turn the power off you can't

462
00:16:01,750 --> 00:16:05,410
hack if it's powers off which is which

463
00:16:03,280 --> 00:16:07,089
is really good so they also turn off the

464
00:16:05,410 --> 00:16:11,439
the data but that's controlled the same

465
00:16:07,090 --> 00:16:13,300
way so my objective is or was can I turn

466
00:16:11,440 --> 00:16:15,010
that load switch back on through

467
00:16:13,300 --> 00:16:16,180
software even though the hardware the

468
00:16:15,010 --> 00:16:17,200
hardware's there to make sure that no

469
00:16:16,180 --> 00:16:19,870
matter what happens to the software

470
00:16:17,200 --> 00:16:22,150
unless the user presses that button the

471
00:16:19,870 --> 00:16:23,770
camera and microphone should stay off so

472
00:16:22,150 --> 00:16:25,209
obviously I wanted to understand what

473
00:16:23,770 --> 00:16:27,310
happened so as I said earlier my

474
00:16:25,210 --> 00:16:29,050
question is what happens if I exceed the

475
00:16:27,310 --> 00:16:30,520
bandwidth so what happens if I start

476
00:16:29,050 --> 00:16:31,719
sending a signal out that's faster than

477
00:16:30,520 --> 00:16:36,699
what this little chip can actually

478
00:16:31,720 --> 00:16:39,490
handle so some sciency stuff really

479
00:16:36,700 --> 00:16:41,680
technical and an inductor is a small

480
00:16:39,490 --> 00:16:44,170
passive electrical component that stores

481
00:16:41,680 --> 00:16:46,630
energy in a magnetic field more from not

482
00:16:44,170 --> 00:16:48,219
it's just some copper wire around a some

483
00:16:46,630 --> 00:16:50,500
sort of ferrite core or something like

484
00:16:48,220 --> 00:16:51,550
that and I put all the equations at the

485
00:16:50,500 --> 00:16:52,900
bottom because I thought they look cool

486
00:16:51,550 --> 00:16:55,390
and they made a slide look really cool

487
00:16:52,900 --> 00:16:58,420
and there's a lot of maths behind it and

488
00:16:55,390 --> 00:17:00,550
it's that's really dry and but we'll get

489
00:16:58,420 --> 00:17:02,979
onto some of some more sciency stuff

490
00:17:00,550 --> 00:17:05,619
exam really creative in my lessons my

491
00:17:02,980 --> 00:17:06,640
slide titles and don't a voltage Delta

492
00:17:05,619 --> 00:17:08,770
time so anyone who deals with

493
00:17:06,640 --> 00:17:10,840
electronics is aware of the fact that a

494
00:17:08,770 --> 00:17:13,180
1 and a 0 isn't actually a 1 and a 0

495
00:17:10,839 --> 00:17:14,949
when you change from a 1 to a 0

496
00:17:13,180 --> 00:17:16,240
there's the infinite ranges of voltages

497
00:17:14,950 --> 00:17:19,060
in between as the signal actually

498
00:17:16,240 --> 00:17:20,980
changes the rate at which this change

499
00:17:19,060 --> 00:17:22,929
happens is called Delta voltage over

500
00:17:20,980 --> 00:17:25,810
Delta times how fast the voltage changes

501
00:17:22,930 --> 00:17:27,520
over the period of time so the the top

502
00:17:25,810 --> 00:17:29,649
on there shows you obviously time and

503
00:17:27,520 --> 00:17:32,410
voltage so if you look at a simple clock

504
00:17:29,650 --> 00:17:33,910
signal it looks like a 1 and a 0 and in

505
00:17:32,410 --> 00:17:36,080
software it is a 1 in a 0 but the

506
00:17:33,910 --> 00:17:38,149
electronics has to change from a 1/2

507
00:17:36,080 --> 00:17:39,799
zero if you zoom in on an oscilloscope

508
00:17:38,149 --> 00:17:41,570
and actually have a look at any clock

509
00:17:39,799 --> 00:17:42,710
signal you'll see something more like

510
00:17:41,570 --> 00:17:46,820
the one at the bottom where they're

511
00:17:42,710 --> 00:17:48,980
actually on an angle so in when you're

512
00:17:46,820 --> 00:17:50,990
designing products for EMC compliance or

513
00:17:48,980 --> 00:17:52,519
whatever else you need to slow those

514
00:17:50,990 --> 00:17:54,140
curves down because every time that

515
00:17:52,519 --> 00:17:55,640
changes you get a small amount of

516
00:17:54,140 --> 00:17:57,980
emissions and to get those emissions

517
00:17:55,640 --> 00:17:59,929
down most EMC electronics designers will

518
00:17:57,980 --> 00:18:01,700
actually slow those curves down mostly

519
00:17:59,929 --> 00:18:03,350
thio t products they're not designing

520
00:18:01,700 --> 00:18:05,480
for that purpose so they have really

521
00:18:03,350 --> 00:18:07,039
really sharp edges and it's actually

522
00:18:05,480 --> 00:18:08,960
those sharp edges that cause the problem

523
00:18:07,039 --> 00:18:12,500
that's what I've actually well that's my

524
00:18:08,960 --> 00:18:14,450
theory anyway so we'll get on to a

525
00:18:12,500 --> 00:18:16,399
little bit more context an analogue

526
00:18:14,450 --> 00:18:18,950
switch is like a relay except there's no

527
00:18:16,399 --> 00:18:20,658
no parts so it's an electrical component

528
00:18:18,950 --> 00:18:22,190
that allows electricity to flow either

529
00:18:20,659 --> 00:18:24,200
way when it's turned on and when you

530
00:18:22,190 --> 00:18:26,360
turn it off it stops so when I was

531
00:18:24,200 --> 00:18:28,490
mentioning earlier about those and that

532
00:18:26,360 --> 00:18:30,049
matrix all those little points where the

533
00:18:28,490 --> 00:18:32,360
columns and rows join is actually done

534
00:18:30,049 --> 00:18:33,289
by an analog switch now analog switch is

535
00:18:32,360 --> 00:18:34,939
really important it's not a digital

536
00:18:33,289 --> 00:18:37,639
switch it's an analog switch that means

537
00:18:34,940 --> 00:18:42,470
it allows ya analog voltages to come

538
00:18:37,639 --> 00:18:43,939
through now more electrical stuff once

539
00:18:42,470 --> 00:18:47,240
again really created with my slide

540
00:18:43,940 --> 00:18:49,510
titles and a charge pump a charge pump

541
00:18:47,240 --> 00:18:51,799
in electrical terms is where you have a

542
00:18:49,510 --> 00:18:53,480
signal that's changing rapidly and

543
00:18:51,799 --> 00:18:55,639
you're actually able to use that signal

544
00:18:53,480 --> 00:18:57,529
to charge capacitors via diodes etc and

545
00:18:55,639 --> 00:18:59,389
reach a higher voltage and that's

546
00:18:57,529 --> 00:19:01,639
actually really important there's a

547
00:18:59,389 --> 00:19:03,408
parasitic charge pump in some of these

548
00:19:01,639 --> 00:19:04,789
systems that if you keep the these these

549
00:19:03,409 --> 00:19:06,440
systems moving fast enough you can

550
00:19:04,789 --> 00:19:10,370
actually reach a high voltage internally

551
00:19:06,440 --> 00:19:12,380
then they're expecting so back to the

552
00:19:10,370 --> 00:19:14,689
essentially a scope trace just to show

553
00:19:12,380 --> 00:19:16,580
you and the blue and the yellow are

554
00:19:14,690 --> 00:19:17,720
actually in millivolts and what are they

555
00:19:16,580 --> 00:19:19,279
I think they're 20 millivolts per

556
00:19:17,720 --> 00:19:21,169
division so they're tiny little voltages

557
00:19:19,279 --> 00:19:22,250
and normally if you're looking at system

558
00:19:21,169 --> 00:19:23,659
you wouldn't see these it's only because

559
00:19:22,250 --> 00:19:26,389
are specifically looking for it the

560
00:19:23,659 --> 00:19:27,950
green is actually on five hundred

561
00:19:26,389 --> 00:19:30,229
millivolts per division so that's that's

562
00:19:27,950 --> 00:19:32,389
a clock signal now on an oscilloscope I

563
00:19:30,230 --> 00:19:33,980
noticed that when the clock signal

564
00:19:32,389 --> 00:19:35,899
changed and this was under normal

565
00:19:33,980 --> 00:19:39,169
conditions if I captured it correctly I

566
00:19:35,899 --> 00:19:41,418
could see a very small output following

567
00:19:39,169 --> 00:19:43,789
so through this logic system I noticed

568
00:19:41,419 --> 00:19:46,760
that there was a small very small output

569
00:19:43,789 --> 00:19:48,830
that followed on the edge so as you can

570
00:19:46,760 --> 00:19:49,639
see green goes up the yellow and blue go

571
00:19:48,830 --> 00:19:50,958
up that's

572
00:19:49,639 --> 00:19:53,559
to the outputs from this particular

573
00:19:50,959 --> 00:19:55,639
target device when the green goes down

574
00:19:53,559 --> 00:19:58,309
blue and the yellow go down but they

575
00:19:55,639 --> 00:20:00,079
going below ground it's not that's not

576
00:19:58,309 --> 00:20:02,209
that's not a digital signal that's an

577
00:20:00,079 --> 00:20:03,529
analog signal and well that's really

578
00:20:02,209 --> 00:20:05,809
interesting so once again you have to

579
00:20:03,529 --> 00:20:08,149
have an oscilloscope to find this so I

580
00:20:05,809 --> 00:20:10,070
used a signal generator and then I

581
00:20:08,149 --> 00:20:11,208
started to increase so I set the signal

582
00:20:10,070 --> 00:20:13,519
generator up to be the same

583
00:20:11,209 --> 00:20:15,499
characteristic same impedance as the

584
00:20:13,519 --> 00:20:17,629
processor and I started winding up the

585
00:20:15,499 --> 00:20:19,039
frequency when you start to approach the

586
00:20:17,629 --> 00:20:21,109
resonant frequency of this of the

587
00:20:19,039 --> 00:20:22,579
particular target the amplitude goes up

588
00:20:21,109 --> 00:20:25,279
so you can see the first one I think is

589
00:20:22,579 --> 00:20:27,820
a bit hard to see from here it's it's 20

590
00:20:25,279 --> 00:20:30,019
odd you know 22:03 megahertz

591
00:20:27,820 --> 00:20:31,519
22:52 megahertz and you can see we're

592
00:20:30,019 --> 00:20:33,709
starting to form a sine wave and you can

593
00:20:31,519 --> 00:20:35,119
see the amplitude is going up this one

594
00:20:33,709 --> 00:20:36,799
is twenty three point three six

595
00:20:35,119 --> 00:20:38,418
megahertz and it's near as matters a

596
00:20:36,799 --> 00:20:39,859
perfect sine wave so we found the

597
00:20:38,419 --> 00:20:42,169
resonant frequency of that particular

598
00:20:39,859 --> 00:20:43,428
target so at that particular that at

599
00:20:42,169 --> 00:20:45,229
twenty three point two three six

600
00:20:43,429 --> 00:20:47,269
megahertz that target was actually

601
00:20:45,229 --> 00:20:48,379
resonating so those tiny little signals

602
00:20:47,269 --> 00:20:49,789
that were earlier on we're just in

603
00:20:48,379 --> 00:20:51,168
millivolts and if you're doing a normal

604
00:20:49,789 --> 00:20:52,339
logic design you'd never notice them

605
00:20:51,169 --> 00:20:54,200
because your scopes not even haven't

606
00:20:52,339 --> 00:20:55,729
configured it to capture that you hit

607
00:20:54,200 --> 00:20:56,899
the right frequency constructive

608
00:20:55,729 --> 00:20:58,879
interference and you start in this

609
00:20:56,899 --> 00:21:00,199
resonance then we go above it we're at

610
00:20:58,879 --> 00:21:02,449
two twenty three point nine megahertz

611
00:21:00,200 --> 00:21:04,219
and the amplitude is dropping off 2300 a

612
00:21:02,450 --> 00:21:05,839
twenty five point nine and it's really

613
00:21:04,219 --> 00:21:08,059
starting to fall off so once you've

614
00:21:05,839 --> 00:21:09,379
modeled the the characteristics you can

615
00:21:08,059 --> 00:21:11,299
start to find the resonant frequency and

616
00:21:09,379 --> 00:21:14,359
then of course what we need to do is

617
00:21:11,299 --> 00:21:18,168
reproduce that so we have a quick look

618
00:21:14,359 --> 00:21:21,489
at the the target that target is here on

619
00:21:18,169 --> 00:21:24,229
the board or sorry on the table so

620
00:21:21,489 --> 00:21:25,729
standard sort of IOT device but rather

621
00:21:24,229 --> 00:21:27,769
than having any Wi-Fi or anything else

622
00:21:25,729 --> 00:21:30,409
this is literally just like a test the

623
00:21:27,769 --> 00:21:31,849
AC characteristics of it so I simply

624
00:21:30,409 --> 00:21:34,039
include a USB to serial interface

625
00:21:31,849 --> 00:21:35,599
normally that would be a Wi-Fi module or

626
00:21:34,039 --> 00:21:37,999
something how you talk to it is

627
00:21:35,599 --> 00:21:40,639
completely irrelevant and we've got the

628
00:21:37,999 --> 00:21:42,019
switchable USB so the actual block in

629
00:21:40,639 --> 00:21:44,570
the middle the purple block is this is

630
00:21:42,019 --> 00:21:46,009
the actual target component and we've

631
00:21:44,570 --> 00:21:48,109
got the microcontroller in the middle

632
00:21:46,009 --> 00:21:51,559
this just happens to be one of the

633
00:21:48,109 --> 00:21:53,208
microchip MIPS cores and then the

634
00:21:51,559 --> 00:21:55,759
component interface because this

635
00:21:53,209 --> 00:21:58,039
components so small and I can't solder

636
00:21:55,759 --> 00:22:00,279
it not without using pick-and-place

637
00:21:58,039 --> 00:22:02,719
machinery so it's a lot easier when you

638
00:22:00,279 --> 00:22:03,040
you can program them once you program at

639
00:22:02,719 --> 00:22:05,230
the

640
00:22:03,040 --> 00:22:07,330
bring the carrier board across so the

641
00:22:05,230 --> 00:22:08,590
fact that I'm using a carrier board as

642
00:22:07,330 --> 00:22:10,840
opposed to the chip directly on there

643
00:22:08,590 --> 00:22:13,389
changes the AC characteristics and it

644
00:22:10,840 --> 00:22:14,919
does make a small change but the same

645
00:22:13,390 --> 00:22:15,880
thing happens if the chips directly on

646
00:22:14,920 --> 00:22:17,350
the board is just a slightly different

647
00:22:15,880 --> 00:22:21,160
frequency so it's a matter of finding

648
00:22:17,350 --> 00:22:22,750
that frequency so that's that's the

649
00:22:21,160 --> 00:22:25,060
picture that's the little board which I

650
00:22:22,750 --> 00:22:27,160
designed and loads of test points so I

651
00:22:25,060 --> 00:22:28,740
can see what's going on and you can see

652
00:22:27,160 --> 00:22:32,140
the little carrier board sticking up

653
00:22:28,740 --> 00:22:33,970
from the right there I put in those

654
00:22:32,140 --> 00:22:35,860
those switches those dip switches so I

655
00:22:33,970 --> 00:22:38,800
can turn on and off the signals from the

656
00:22:35,860 --> 00:22:40,570
microcontroller I can also include some

657
00:22:38,800 --> 00:22:43,240
slow rate limiting resistors in the path

658
00:22:40,570 --> 00:22:44,590
to show that simply by putting a

659
00:22:43,240 --> 00:22:46,780
resistor in line actually solves the

660
00:22:44,590 --> 00:22:48,310
entire problem so it's that it's

661
00:22:46,780 --> 00:22:51,639
connected to the PC that's the same

662
00:22:48,310 --> 00:22:54,100
docking station and I've got here so we

663
00:22:51,640 --> 00:22:58,000
go through that and you know that's the

664
00:22:54,100 --> 00:23:00,790
little board we've got the FTDI chip for

665
00:22:58,000 --> 00:23:02,080
providing a us a USB to UART interface

666
00:23:00,790 --> 00:23:03,580
we've got the mips core we've got the

667
00:23:02,080 --> 00:23:05,919
component adapter and we've got the

668
00:23:03,580 --> 00:23:07,720
switchable USB so that I can reproduce

669
00:23:05,920 --> 00:23:09,910
the reason I did this is so like we can

670
00:23:07,720 --> 00:23:10,930
reproduce this attack without mentioning

671
00:23:09,910 --> 00:23:12,160
any of the products that are actually

672
00:23:10,930 --> 00:23:13,150
vulnerable to it because like I said

673
00:23:12,160 --> 00:23:14,800
that would actually be responsible

674
00:23:13,150 --> 00:23:17,650
because the only way they can fix it is

675
00:23:14,800 --> 00:23:19,300
to redesign it so anyone else can

676
00:23:17,650 --> 00:23:22,630
reproduce what I've done I just simply

677
00:23:19,300 --> 00:23:25,270
did all using harmony literally pick the

678
00:23:22,630 --> 00:23:26,470
chip pick the framework you know went

679
00:23:25,270 --> 00:23:27,879
through and configured all the bits I

680
00:23:26,470 --> 00:23:29,020
wanted to do so there's nothing there's

681
00:23:27,880 --> 00:23:32,140
there's nothing particularly clever

682
00:23:29,020 --> 00:23:35,530
about this and use their configuration

683
00:23:32,140 --> 00:23:37,690
tools to configure the the processor

684
00:23:35,530 --> 00:23:40,120
turn on the framework turn on the serial

685
00:23:37,690 --> 00:23:42,010
drivers turn on the console so basically

686
00:23:40,120 --> 00:23:44,229
using existing framework to build it all

687
00:23:42,010 --> 00:23:45,970
the other reason I did this is that this

688
00:23:44,230 --> 00:23:47,590
is a very common approach you see a lot

689
00:23:45,970 --> 00:23:48,490
of people building IOT devices much like

690
00:23:47,590 --> 00:23:50,439
this because the frameworks like

691
00:23:48,490 --> 00:23:51,670
fantastic they make it easy why write

692
00:23:50,440 --> 00:23:53,170
all this code yourself when you can take

693
00:23:51,670 --> 00:23:54,850
a few boxes and it generates it all for

694
00:23:53,170 --> 00:23:56,500
you it's another reason I did it this

695
00:23:54,850 --> 00:23:58,300
way so you can't really see that but

696
00:23:56,500 --> 00:24:00,040
that's that's my console handler so I

697
00:23:58,300 --> 00:24:04,330
had to write the write that bit itself

698
00:24:00,040 --> 00:24:05,740
but there's a buffalo cated on actually

699
00:24:04,330 --> 00:24:08,439
made say on stack I didn't proofread

700
00:24:05,740 --> 00:24:10,240
that properly and and then there's a in

701
00:24:08,440 --> 00:24:11,860
the middle boxes the you are afraid so

702
00:24:10,240 --> 00:24:14,470
that's a that's a function provided by

703
00:24:11,860 --> 00:24:16,110
the framework to read the serial buffer

704
00:24:14,470 --> 00:24:18,420
if you look at this

705
00:24:16,110 --> 00:24:20,040
code itself it's an unbounded right so

706
00:24:18,420 --> 00:24:23,100
it's an unbounded right to the calling

707
00:24:20,040 --> 00:24:24,928
functions stack so you've also send in

708
00:24:23,100 --> 00:24:26,909
the wrong payload or whatever else like

709
00:24:24,929 --> 00:24:29,460
actually overflow the calling convention

710
00:24:26,910 --> 00:24:30,900
oh they're calling function stack get my

711
00:24:29,460 --> 00:24:32,070
remote code execution which is how you

712
00:24:30,900 --> 00:24:34,020
can actually make this this sort of

713
00:24:32,070 --> 00:24:35,610
attack happen once again this is just an

714
00:24:34,020 --> 00:24:36,780
example this happens all the time and

715
00:24:35,610 --> 00:24:38,790
when you're doing code reviews you see

716
00:24:36,780 --> 00:24:40,470
this sort of stuff yes you can fix that

717
00:24:38,790 --> 00:24:41,639
but the assumption is is that the

718
00:24:40,470 --> 00:24:42,840
software can be hacked so I'm just

719
00:24:41,640 --> 00:24:49,460
literally put that in there for that

720
00:24:42,840 --> 00:24:51,389
purpose and that's the the dummy IOT

721
00:24:49,460 --> 00:24:53,580
interface that's just a little a little

722
00:24:51,390 --> 00:24:56,760
terminal and I'll show you that and in a

723
00:24:53,580 --> 00:24:58,830
little bit and that just allows me to if

724
00:24:56,760 --> 00:25:01,770
you can see that enable to turn the

725
00:24:58,830 --> 00:25:03,600
power on or off so enable or disable the

726
00:25:01,770 --> 00:25:05,280
minute privacy mode is enabled that

727
00:25:03,600 --> 00:25:07,290
stops me from turning the power on and

728
00:25:05,280 --> 00:25:09,480
off because until the user presses the

729
00:25:07,290 --> 00:25:11,549
button so basically the software can

730
00:25:09,480 --> 00:25:13,470
enable privacy mode which means the

731
00:25:11,549 --> 00:25:15,870
software no longer has control over the

732
00:25:13,470 --> 00:25:18,840
power the user has to press a button

733
00:25:15,870 --> 00:25:20,428
from the earlier logic which then allows

734
00:25:18,840 --> 00:25:24,649
the software to actually yet turn the

735
00:25:20,429 --> 00:25:28,110
power back on and I think that's that's

736
00:25:24,650 --> 00:25:30,809
quite straightforward you can't disable

737
00:25:28,110 --> 00:25:32,820
privacy from there so what about you got

738
00:25:30,809 --> 00:25:35,730
is a little video here simply because

739
00:25:32,820 --> 00:25:37,620
this room's very wide but if I've got

740
00:25:35,730 --> 00:25:40,770
time afterwards I'll do the same thing

741
00:25:37,620 --> 00:25:44,070
on my I'm like computer right here but

742
00:25:40,770 --> 00:25:48,510
this is Jo so everyone can see it yeah

743
00:25:44,070 --> 00:25:49,950
is that gonna start yes okay so I'll

744
00:25:48,510 --> 00:25:51,840
just talk through this that's that's

745
00:25:49,950 --> 00:25:54,419
just a hand tech USB oscilloscope I've

746
00:25:51,840 --> 00:25:56,189
got the two traces and this including

747
00:25:54,419 --> 00:25:57,540
the autofocus thing it's a little bit of

748
00:25:56,190 --> 00:25:59,580
fun so I'm trying to set this up

749
00:25:57,540 --> 00:26:01,139
properly now on the device itself you've

750
00:25:59,580 --> 00:26:03,299
got the power LED as you can see down

751
00:26:01,140 --> 00:26:05,730
the bottom there there's also another

752
00:26:03,299 --> 00:26:07,320
LED that says when privacy mode is

753
00:26:05,730 --> 00:26:10,890
disabled so that means that the system

754
00:26:07,320 --> 00:26:11,850
can potentially be listening to oh I'm

755
00:26:10,890 --> 00:26:14,460
actually talking through here as well

756
00:26:11,850 --> 00:26:16,379
I'll just mute that so if I press the

757
00:26:14,460 --> 00:26:18,510
button itself as you can see from there

758
00:26:16,380 --> 00:26:20,640
you can see that second layer actually

759
00:26:18,510 --> 00:26:22,440
turns on so that's a fairly typical sort

760
00:26:20,640 --> 00:26:24,960
of you know workflow you press the

761
00:26:22,440 --> 00:26:26,669
button to unmute the system then says

762
00:26:24,960 --> 00:26:28,740
I'm potentially watching you or

763
00:26:26,669 --> 00:26:30,030
listening to you and to simulate that

764
00:26:28,740 --> 00:26:31,890
I've got a USB light

765
00:26:30,030 --> 00:26:33,300
here as well just to show you once again

766
00:26:31,890 --> 00:26:36,390
all I'm looking at his peril not looking

767
00:26:33,300 --> 00:26:38,250
at the data and and you can see on the

768
00:26:36,390 --> 00:26:40,200
oscilloscope that the yellow and the

769
00:26:38,250 --> 00:26:42,360
blue voltage both went up so the blue

770
00:26:40,200 --> 00:26:44,040
voltage is at 5 volts there and the

771
00:26:42,360 --> 00:26:45,330
yellow voltage was that I think three

772
00:26:44,040 --> 00:26:47,940
point three which is the target voltage

773
00:26:45,330 --> 00:27:00,500
so then with the software I can enable

774
00:26:47,940 --> 00:27:04,230
and disable it at will so I skip to yeah

775
00:27:00,500 --> 00:27:06,390
okay so if I actually run the the

776
00:27:04,230 --> 00:27:07,620
exploit you can see that now all of

777
00:27:06,390 --> 00:27:09,270
sudden well that's just because the

778
00:27:07,620 --> 00:27:11,189
earth probe fell off you can now

779
00:27:09,270 --> 00:27:13,110
actually see that it's not a one or a

780
00:27:11,190 --> 00:27:14,700
zero and if you look on the left hand

781
00:27:13,110 --> 00:27:16,530
side you can see where ground is it's

782
00:27:14,700 --> 00:27:18,270
actually above and below so there's

783
00:27:16,530 --> 00:27:20,100
actually the resonant output by find by

784
00:27:18,270 --> 00:27:22,190
sending in the clock signal at 70

785
00:27:20,100 --> 00:27:24,360
megahertz the yellow line is actually

786
00:27:22,190 --> 00:27:25,920
oscillating that oscillating has a

787
00:27:24,360 --> 00:27:28,020
charge pump effect which actually turns

788
00:27:25,920 --> 00:27:29,190
a system back on once again you should

789
00:27:28,020 --> 00:27:31,770
be able to see that that shouldn't work

790
00:27:29,190 --> 00:27:33,420
and if the frequency is wrong you barely

791
00:27:31,770 --> 00:27:35,040
see a glitch you get exactly the right

792
00:27:33,420 --> 00:27:37,380
frequency and the entire thing starts

793
00:27:35,040 --> 00:27:39,060
oscillating so I've got a few theories

794
00:27:37,380 --> 00:27:42,180
I've said I'm not a hundred percent sure

795
00:27:39,060 --> 00:27:43,530
as to what's what's causing it there's

796
00:27:42,180 --> 00:27:44,880
probably gonna need to be some much lot

797
00:27:43,530 --> 00:27:46,410
of people than me looking at the problem

798
00:27:44,880 --> 00:27:48,360
to identify exactly what's causing it

799
00:27:46,410 --> 00:27:51,270
but it's really easy to solve so it

800
00:27:48,360 --> 00:27:53,159
doesn't really matter so if we look at

801
00:27:51,270 --> 00:27:55,170
the edges you know the green clock

802
00:27:53,160 --> 00:27:56,490
signal goes up the output goes up the

803
00:27:55,170 --> 00:27:58,440
agreeance clock signal goes down the

804
00:27:56,490 --> 00:28:00,270
output goes down so this means that

805
00:27:58,440 --> 00:28:02,550
there's a distinct coupling between the

806
00:28:00,270 --> 00:28:05,460
input and output signals on the edges

807
00:28:02,550 --> 00:28:08,370
and only on the edges when the privacy

808
00:28:05,460 --> 00:28:10,260
hardware is operational the faster

809
00:28:08,370 --> 00:28:11,550
that's the faster that slew rate or

810
00:28:10,260 --> 00:28:15,240
faster their change in voltage in volts

811
00:28:11,550 --> 00:28:16,770
time the larger the output is so this

812
00:28:15,240 --> 00:28:17,070
tends to indicate a number of different

813
00:28:16,770 --> 00:28:19,230
things

814
00:28:17,070 --> 00:28:20,580
now I've had lots of discussions with

815
00:28:19,230 --> 00:28:21,900
lots of people including some RF

816
00:28:20,580 --> 00:28:23,340
engineers who came up with some other

817
00:28:21,900 --> 00:28:23,790
potential theories for why this is

818
00:28:23,340 --> 00:28:25,350
happening

819
00:28:23,790 --> 00:28:27,389
so I'll included all the theories that

820
00:28:25,350 --> 00:28:28,730
I've heard so far and I think honestly

821
00:28:27,390 --> 00:28:31,650
it's probably a combination of them all

822
00:28:28,730 --> 00:28:33,390
so I talked earlier about an inductor

823
00:28:31,650 --> 00:28:35,670
just being not much more on a copper

824
00:28:33,390 --> 00:28:38,429
wire that stores energy in a magnetic

825
00:28:35,670 --> 00:28:40,480
field so this one if you look at my very

826
00:28:38,429 --> 00:28:43,120
early diagram

827
00:28:40,480 --> 00:28:46,300
the analog switches join effectively to

828
00:28:43,120 --> 00:28:48,639
two or three or four lines together that

829
00:28:46,300 --> 00:28:49,990
is by pinching an inductor depending on

830
00:28:48,640 --> 00:28:51,400
you know the path if it's actually

831
00:28:49,990 --> 00:28:53,080
looping round back on itself that's an

832
00:28:51,400 --> 00:28:54,970
inductor then you have something called

833
00:28:53,080 --> 00:28:56,649
parasitic capacitance which is the

834
00:28:54,970 --> 00:28:58,060
natural capacitance that any component

835
00:28:56,650 --> 00:28:59,590
has at a certain frequency

836
00:28:58,060 --> 00:29:01,360
you put those two together and you get

837
00:28:59,590 --> 00:29:03,399
what's called an LC circuit an LC

838
00:29:01,360 --> 00:29:05,250
circuit has a natural resonant frequency

839
00:29:03,400 --> 00:29:07,780
so that was that was my initial thought

840
00:29:05,250 --> 00:29:09,370
but the actual resonant frequency of a

841
00:29:07,780 --> 00:29:11,470
circuit that small is going to be up

842
00:29:09,370 --> 00:29:14,080
into the gigahertz and I'm nowhere near

843
00:29:11,470 --> 00:29:16,480
that so that could be part of it I said

844
00:29:14,080 --> 00:29:19,540
I don't I don't entirely know this is a

845
00:29:16,480 --> 00:29:22,360
my theories but the it's possible that

846
00:29:19,540 --> 00:29:23,980
the parasitic capacitance of other parts

847
00:29:22,360 --> 00:29:25,659
of the board how it's how it sold it on

848
00:29:23,980 --> 00:29:28,630
etc I've reduced that frequency quite a

849
00:29:25,660 --> 00:29:30,250
bit and an RF engineer said to me and

850
00:29:28,630 --> 00:29:32,920
that he thinks this might actually be

851
00:29:30,250 --> 00:29:34,270
partially an RF strip line he said you

852
00:29:32,920 --> 00:29:36,070
might beginning reflections so at the

853
00:29:34,270 --> 00:29:38,980
right frequency effectively ending up

854
00:29:36,070 --> 00:29:41,080
with either end of this this small

855
00:29:38,980 --> 00:29:42,580
inductive loop at you know at different

856
00:29:41,080 --> 00:29:44,169
voltages and you do it fast enough you

857
00:29:42,580 --> 00:29:46,090
end up getting RF reflect reflections I

858
00:29:44,170 --> 00:29:47,680
thought okay that that might make sense

859
00:29:46,090 --> 00:29:48,250
once again if you get them at the right

860
00:29:47,680 --> 00:29:50,230
frequency

861
00:29:48,250 --> 00:29:51,730
coupled with everything else and I think

862
00:29:50,230 --> 00:29:53,470
the main thing is is that there's

863
00:29:51,730 --> 00:29:55,930
there's parasitic capacitance on the

864
00:29:53,470 --> 00:29:57,520
inputs and there's also a ground bounce

865
00:29:55,930 --> 00:30:00,730
if we hit it exactly the right frequency

866
00:29:57,520 --> 00:30:02,680
I think the parasitic capacitance and

867
00:30:00,730 --> 00:30:04,870
the ground bounces we're driving this

868
00:30:02,680 --> 00:30:06,280
chip so fast that it's actually bouncing

869
00:30:04,870 --> 00:30:07,719
above and below ground therefore the

870
00:30:06,280 --> 00:30:09,879
outputs are simply following it and as

871
00:30:07,720 --> 00:30:12,730
it's all analog switch basis we end up

872
00:30:09,880 --> 00:30:14,170
with this AC signal coming out and the

873
00:30:12,730 --> 00:30:17,260
observation that I noticed is that the

874
00:30:14,170 --> 00:30:19,510
capacitance does change the resonant

875
00:30:17,260 --> 00:30:20,890
frequency so if you touch part of it the

876
00:30:19,510 --> 00:30:22,300
resonant frequency does change so it

877
00:30:20,890 --> 00:30:24,430
does very much indicate that there is a

878
00:30:22,300 --> 00:30:26,020
capacitance there if you change the

879
00:30:24,430 --> 00:30:27,610
decoupling capacitors on the thing it

880
00:30:26,020 --> 00:30:28,930
changes the resonant frequency that

881
00:30:27,610 --> 00:30:30,969
doesn't stop it but it simply changes

882
00:30:28,930 --> 00:30:34,360
the frequency so I think there's a lot

883
00:30:30,970 --> 00:30:36,280
of going on so just going back to the

884
00:30:34,360 --> 00:30:38,320
slide again as you we approach the

885
00:30:36,280 --> 00:30:40,600
resonant frequency the amplitude goes up

886
00:30:38,320 --> 00:30:42,730
we end up with a near perfect sine wave

887
00:30:40,600 --> 00:30:44,439
certainly for this purpose you can see

888
00:30:42,730 --> 00:30:47,470
it's not a perfect sine wave for anyone

889
00:30:44,440 --> 00:30:49,840
whose particular detail focus it's

890
00:30:47,470 --> 00:30:52,490
pretty close

891
00:30:49,840 --> 00:30:55,429
so the next part I needed to understand

892
00:30:52,490 --> 00:30:57,920
is why is this turning on the USB switch

893
00:30:55,430 --> 00:31:00,530
when the USB switch says it requires a

894
00:30:57,920 --> 00:31:03,650
minimum voltage to actually enable the

895
00:31:00,530 --> 00:31:05,570
the output so I started looking through

896
00:31:03,650 --> 00:31:06,590
all the data sheets and of course the

897
00:31:05,570 --> 00:31:08,389
manufacturers aren't going to tell you

898
00:31:06,590 --> 00:31:11,510
exactly how their chips work internally

899
00:31:08,390 --> 00:31:13,910
but with my best judgment talking to a

900
00:31:11,510 --> 00:31:15,740
cup of engineers as well we came up with

901
00:31:13,910 --> 00:31:17,300
a number of different simulation models

902
00:31:15,740 --> 00:31:18,980
that we thought were pretty close they

903
00:31:17,300 --> 00:31:20,090
had the same basic characteristics as

904
00:31:18,980 --> 00:31:22,250
what the data sheets were describing

905
00:31:20,090 --> 00:31:24,709
when we actually modeled and this is

906
00:31:22,250 --> 00:31:27,770
just one particular one you can see the

907
00:31:24,710 --> 00:31:29,570
the green trace along the bottom when it

908
00:31:27,770 --> 00:31:31,730
starts resonating we actually end up

909
00:31:29,570 --> 00:31:34,850
with the the parasitic capacitance of

910
00:31:31,730 --> 00:31:36,260
the gate of the FET at the top actually

911
00:31:34,850 --> 00:31:38,480
playing into effect of this we're

912
00:31:36,260 --> 00:31:40,610
actually charged pumping that capacitor

913
00:31:38,480 --> 00:31:43,070
so the switch the logical switch the FET

914
00:31:40,610 --> 00:31:44,780
at the top has a its gate has a

915
00:31:43,070 --> 00:31:46,669
capacitance in it we're actually using

916
00:31:44,780 --> 00:31:48,530
that storing energy and slowly pulling

917
00:31:46,670 --> 00:31:51,350
it down which is where you can see the

918
00:31:48,530 --> 00:31:53,300
the purple signal yeah they're purple

919
00:31:51,350 --> 00:31:55,459
signal so as we reach also and we reach

920
00:31:53,300 --> 00:31:57,649
the on threshold so we're charging it

921
00:31:55,460 --> 00:31:58,940
frantically if we keep charging it comes

922
00:31:57,650 --> 00:32:00,860
down then when it reaches the on

923
00:31:58,940 --> 00:32:02,930
threshold you can see the red line all

924
00:32:00,860 --> 00:32:04,340
the sun starts to go up now if you turn

925
00:32:02,930 --> 00:32:06,080
this on normally that red line would be

926
00:32:04,340 --> 00:32:07,310
near as mad as vertical and that blue

927
00:32:06,080 --> 00:32:08,870
line would come all the purple line

928
00:32:07,310 --> 00:32:10,429
would come all the way down but because

929
00:32:08,870 --> 00:32:12,290
of the characteristics we're using that

930
00:32:10,430 --> 00:32:14,510
the charge pump effect we can turn it on

931
00:32:12,290 --> 00:32:15,980
slowly while relatively slowly from the

932
00:32:14,510 --> 00:32:17,150
time you actually start the attack to

933
00:32:15,980 --> 00:32:18,770
the time this turns on it's still only

934
00:32:17,150 --> 00:32:23,030
five microseconds so it's still still

935
00:32:18,770 --> 00:32:24,830
pretty quick so that was all research I

936
00:32:23,030 --> 00:32:26,149
did without using the software that was

937
00:32:24,830 --> 00:32:27,169
a signal generators and everything else

938
00:32:26,150 --> 00:32:29,960
although this is an interesting

939
00:32:27,170 --> 00:32:31,340
characteristic it's not really very

940
00:32:29,960 --> 00:32:32,900
useful unless it can be done by a

941
00:32:31,340 --> 00:32:34,970
software so then of course how do you

942
00:32:32,900 --> 00:32:41,450
actually get these exact frequencies out

943
00:32:34,970 --> 00:32:43,220
of microcontrollers etc so this was a

944
00:32:41,450 --> 00:32:45,830
software exploit fir for one of the

945
00:32:43,220 --> 00:32:47,450
versions of this board most of the

946
00:32:45,830 --> 00:32:49,280
microcontrollers if you familiar with

947
00:32:47,450 --> 00:32:51,530
them they have had this processor core

948
00:32:49,280 --> 00:32:53,420
they then have peripheral hardware they

949
00:32:51,530 --> 00:32:55,550
have you know output comparators all

950
00:32:53,420 --> 00:32:57,650
sorts of analog lovelies and they've got

951
00:32:55,550 --> 00:33:00,770
pulse width modulation Hardware all that

952
00:32:57,650 --> 00:33:02,600
stuff turned on or enabled the exploit

953
00:33:00,770 --> 00:33:04,039
what it needs to do is to turn on

954
00:33:02,600 --> 00:33:07,309
this hardware so he turns on this

955
00:33:04,039 --> 00:33:09,350
capability adjusts the relevant divisors

956
00:33:07,309 --> 00:33:10,549
and then you get exactly the right

957
00:33:09,350 --> 00:33:12,529
frequency so as long as your clock

958
00:33:10,549 --> 00:33:14,269
signals 50% duty cycle and you can get

959
00:33:12,529 --> 00:33:15,799
the right frequency purely using the

960
00:33:14,269 --> 00:33:17,570
hardware so the CPU core is not actually

961
00:33:15,799 --> 00:33:19,370
involved in this all it has to do is run

962
00:33:17,570 --> 00:33:21,980
this code configure the peripheral

963
00:33:19,370 --> 00:33:23,629
hardware and then your away so I've come

964
00:33:21,980 --> 00:33:26,179
across some of the CPUs where their

965
00:33:23,630 --> 00:33:29,419
actual GPIO s can only go to 25

966
00:33:26,179 --> 00:33:31,460
megahertz and I like what our CPU simply

967
00:33:29,419 --> 00:33:33,230
can't go to that but what you can do is

968
00:33:31,460 --> 00:33:34,460
you can drive two signals out of phase

969
00:33:33,230 --> 00:33:36,230
to each other and you can double the

970
00:33:34,460 --> 00:33:37,519
effective frequency so there's all sorts

971
00:33:36,230 --> 00:33:38,720
of funny things you can actually do to

972
00:33:37,519 --> 00:33:40,309
actually you don't have to have a

973
00:33:38,720 --> 00:33:42,529
perfect sine wave you can find the

974
00:33:40,309 --> 00:33:44,750
writes of a combination of input signals

975
00:33:42,529 --> 00:33:47,539
to these devices you can create the the

976
00:33:44,750 --> 00:33:49,960
AC signal with a high enough RMS above

977
00:33:47,539 --> 00:33:53,090
ground to actually turn these systems on

978
00:33:49,960 --> 00:33:54,529
so once again once again this is all

979
00:33:53,090 --> 00:33:56,840
based around the assumption that the

980
00:33:54,529 --> 00:33:58,159
software has an RCA of some sort which

981
00:33:56,840 --> 00:34:00,168
is the assumption that these products

982
00:33:58,159 --> 00:34:02,659
are being built around hence they put

983
00:34:00,169 --> 00:34:05,360
the hardware in so turning that into

984
00:34:02,659 --> 00:34:08,690
assembly language and thirty-two

985
00:34:05,360 --> 00:34:09,949
instructions 128 bytes of code if you

986
00:34:08,690 --> 00:34:12,020
can inject that into a buffer overflow

987
00:34:09,949 --> 00:34:13,848
like I showed you earlier on you can

988
00:34:12,020 --> 00:34:15,679
configure the hardware the system can

989
00:34:13,849 --> 00:34:17,210
continue running as normal you've simply

990
00:34:15,679 --> 00:34:19,099
reconfigured some of the peripheral

991
00:34:17,210 --> 00:34:21,560
hardware to enable this exploit the

992
00:34:19,099 --> 00:34:23,210
output stays on but the LED itself never

993
00:34:21,560 --> 00:34:24,710
comes on so the user is completely

994
00:34:23,210 --> 00:34:26,359
unaware that the system has actually

995
00:34:24,710 --> 00:34:29,929
enabled the camera microphone or

996
00:34:26,359 --> 00:34:32,359
whatever else so this particular device

997
00:34:29,929 --> 00:34:34,010
here I captured it on a scope and set

998
00:34:32,359 --> 00:34:35,690
that the triggers up properly and you

999
00:34:34,010 --> 00:34:38,270
can see that once again the the yellow

1000
00:34:35,690 --> 00:34:40,040
signal the voltage at the bottom that

1001
00:34:38,270 --> 00:34:41,239
says 1.3 volts that's not correct that's

1002
00:34:40,040 --> 00:34:43,609
just because I had to design the time

1003
00:34:41,239 --> 00:34:45,500
base out so far it's about 750 million

1004
00:34:43,609 --> 00:34:47,270
volts something like that but once again

1005
00:34:45,500 --> 00:34:48,710
you can see the the output actually

1006
00:34:47,270 --> 00:34:50,179
drops slightly because of the charge

1007
00:34:48,710 --> 00:34:51,710
pump effects are actually pulling the

1008
00:34:50,179 --> 00:34:54,500
whole system down slightly below ground

1009
00:34:51,710 --> 00:34:55,849
then we charge up the output sorry we

1010
00:34:54,500 --> 00:34:57,859
charge up the gate capacitor on there on

1011
00:34:55,849 --> 00:34:59,780
the high side FET and also then it turns

1012
00:34:57,859 --> 00:35:01,040
on because it's quite a slow turn on

1013
00:34:59,780 --> 00:35:03,020
anyone who's familiar with electronics

1014
00:35:01,040 --> 00:35:04,670
that's quite slow but it's still turning

1015
00:35:03,020 --> 00:35:08,470
on within 12 microseconds and that's

1016
00:35:04,670 --> 00:35:08,470
quite a that's quite a slow slow edge

1017
00:35:10,390 --> 00:35:17,420
it's not all as bad as it as it seems so

1018
00:35:15,410 --> 00:35:20,118
we we just summarize it quickly

1019
00:35:17,420 --> 00:35:21,589
you've got the change in voltage so the

1020
00:35:20,119 --> 00:35:24,499
rate of change of voltage has a big

1021
00:35:21,589 --> 00:35:26,359
impact on this so that main means it's

1022
00:35:24,499 --> 00:35:28,339
actually really really simple to stop if

1023
00:35:26,359 --> 00:35:30,319
you reduce the speed at which the

1024
00:35:28,339 --> 00:35:30,799
voltage can change this attack goes away

1025
00:35:30,319 --> 00:35:32,029
altogether

1026
00:35:30,799 --> 00:35:33,469
and that's part of the problem that's

1027
00:35:32,029 --> 00:35:35,059
why it's unpatch well you can't do that

1028
00:35:33,469 --> 00:35:35,989
through software because if you can

1029
00:35:35,059 --> 00:35:37,969
change it through software it can be

1030
00:35:35,989 --> 00:35:39,440
changed back through software all you

1031
00:35:37,969 --> 00:35:40,999
need to do is actually put it in just a

1032
00:35:39,440 --> 00:35:42,589
simple resistor in line with all of your

1033
00:35:40,999 --> 00:35:44,269
logic signals going to and from any of

1034
00:35:42,589 --> 00:35:46,400
these devices just like you would with

1035
00:35:44,269 --> 00:35:48,680
software your software controls I was

1036
00:35:46,400 --> 00:35:50,119
validate your inputs hardware needs to

1037
00:35:48,680 --> 00:35:51,890
validate the controls from other parts

1038
00:35:50,119 --> 00:35:53,680
of the hardware system make sure that

1039
00:35:51,890 --> 00:35:56,269
the maximum input frequency of your

1040
00:35:53,680 --> 00:35:58,129
devices is it here too so if you've got

1041
00:35:56,269 --> 00:35:59,479
a really fast CPU like the one I'm using

1042
00:35:58,130 --> 00:36:01,219
here that can generate these signals

1043
00:35:59,479 --> 00:36:03,499
make sure that anything it's talking to

1044
00:36:01,219 --> 00:36:04,969
you validated those inputs you've slowed

1045
00:36:03,499 --> 00:36:06,738
the signal down so that no matter what

1046
00:36:04,969 --> 00:36:13,819
the software does it simply cannot exert

1047
00:36:06,739 --> 00:36:15,200
that level of control so going back to

1048
00:36:13,819 --> 00:36:16,609
it the purpose of this hardware state

1049
00:36:15,200 --> 00:36:19,129
machine in these designs is to make sure

1050
00:36:16,609 --> 00:36:21,529
that when the software on the main

1051
00:36:19,130 --> 00:36:22,729
processor assuming it can be hacked to

1052
00:36:21,529 --> 00:36:25,940
make sure that the user still has

1053
00:36:22,729 --> 00:36:28,910
control the risk is that these these

1054
00:36:25,940 --> 00:36:31,130
designs because their logic is flaws but

1055
00:36:28,910 --> 00:36:32,779
the implementation is not that the

1056
00:36:31,130 --> 00:36:35,630
hardware actually serves very little

1057
00:36:32,779 --> 00:36:37,460
purpose it's good it looks good it's

1058
00:36:35,630 --> 00:36:38,599
nice really fantastic these companies

1059
00:36:37,460 --> 00:36:40,849
are building it in and they should be

1060
00:36:38,599 --> 00:36:42,349
commended for that the problem is that

1061
00:36:40,849 --> 00:36:43,670
software can manipulate then they view

1062
00:36:42,349 --> 00:36:47,210
spend the time and actually understand

1063
00:36:43,670 --> 00:36:48,410
the target every model of device would

1064
00:36:47,210 --> 00:36:49,940
have a different resonant frequency

1065
00:36:48,410 --> 00:36:51,440
every manufacturer would have a

1066
00:36:49,940 --> 00:36:53,059
different resonant frequency depending

1067
00:36:51,440 --> 00:36:54,829
on how they've designed it but once

1068
00:36:53,059 --> 00:36:55,819
again once somebody did the research and

1069
00:36:54,829 --> 00:36:57,289
actually targeted these particular

1070
00:36:55,819 --> 00:36:58,999
systems it's just a matter of doing a

1071
00:36:57,289 --> 00:37:02,299
simple software exploit to actually turn

1072
00:36:58,999 --> 00:37:03,140
this back on so there is some stuff we

1073
00:37:02,299 --> 00:37:04,759
can do through software

1074
00:37:03,140 --> 00:37:06,019
I said software alone can't mitigate it

1075
00:37:04,759 --> 00:37:07,999
which is true but there is some things

1076
00:37:06,019 --> 00:37:11,180
you can actually do now depending on the

1077
00:37:07,999 --> 00:37:13,160
the the processor etc so there's nothing

1078
00:37:11,180 --> 00:37:14,390
we can do about the silicon level stuff

1079
00:37:13,160 --> 00:37:16,489
because that's outside of our control

1080
00:37:14,390 --> 00:37:17,930
anyone doing hardware design you have no

1081
00:37:16,489 --> 00:37:20,509
control over what the companies are

1082
00:37:17,930 --> 00:37:22,160
providing to the faster the slew rate

1083
00:37:20,509 --> 00:37:23,120
the faster the change in voltage over

1084
00:37:22,160 --> 00:37:25,160
changing

1085
00:37:23,120 --> 00:37:27,140
the greater the output amplitude we can

1086
00:37:25,160 --> 00:37:28,970
do something about this simply put a

1087
00:37:27,140 --> 00:37:30,620
resistor in line now in production these

1088
00:37:28,970 --> 00:37:33,080
you know you're going to talk fractions

1089
00:37:30,620 --> 00:37:35,600
of a cent cost differences it's

1090
00:37:33,080 --> 00:37:36,860
completely immaterial if you do it when

1091
00:37:35,600 --> 00:37:37,819
you're doing the design if you wait till

1092
00:37:36,860 --> 00:37:40,190
after the design you have to do a

1093
00:37:37,820 --> 00:37:41,660
reengineer it gets very expensive it

1094
00:37:40,190 --> 00:37:43,130
probably ends up tens of thousands of

1095
00:37:41,660 --> 00:37:45,500
times more expensive if you could simply

1096
00:37:43,130 --> 00:37:47,050
adding these parts is at the design time

1097
00:37:45,500 --> 00:37:51,560
that there's no cost to it to speak of

1098
00:37:47,050 --> 00:37:53,270
now see oh I just dropped out then right

1099
00:37:51,560 --> 00:37:55,880
as the signals that are under software

1100
00:37:53,270 --> 00:37:57,110
control and you can do some hardening

1101
00:37:55,880 --> 00:37:59,390
depending on the processor that you've

1102
00:37:57,110 --> 00:38:01,910
actually got so I'll talk about there

1103
00:37:59,390 --> 00:38:03,589
this particular MIPS one so if you do

1104
00:38:01,910 --> 00:38:06,410
some hardening and make sure that some

1105
00:38:03,590 --> 00:38:08,270
of the hardware security capabilities

1106
00:38:06,410 --> 00:38:10,549
are turned on now the really obvious one

1107
00:38:08,270 --> 00:38:12,950
is on this particular chip you can make

1108
00:38:10,550 --> 00:38:16,460
sure that those pins can only be changed

1109
00:38:12,950 --> 00:38:19,040
purpose once so if they're being set to

1110
00:38:16,460 --> 00:38:20,480
GPIO you can say do not allow these to

1111
00:38:19,040 --> 00:38:23,090
be turned to an output compare all

1112
00:38:20,480 --> 00:38:25,130
pulse width modulated pin later that's

1113
00:38:23,090 --> 00:38:27,140
fine for the RC e running in this

1114
00:38:25,130 --> 00:38:28,430
instance but if it's the persistent RC

1115
00:38:27,140 --> 00:38:30,859
and you can actually restart the device

1116
00:38:28,430 --> 00:38:32,899
then that doesn't serve any purpose but

1117
00:38:30,860 --> 00:38:34,970
it's it's a countermeasure it can help

1118
00:38:32,900 --> 00:38:38,240
it's all about defense and depth try to

1119
00:38:34,970 --> 00:38:39,410
make the thing more more difficult the

1120
00:38:38,240 --> 00:38:43,129
other way to do it once again is a

1121
00:38:39,410 --> 00:38:44,480
redesign issue on the microchip parts

1122
00:38:43,130 --> 00:38:45,920
they call them are Pepin's as in

1123
00:38:44,480 --> 00:38:47,510
remappable pins you can change the

1124
00:38:45,920 --> 00:38:48,920
function but there's a lot of pins that

1125
00:38:47,510 --> 00:38:49,550
are not remappable so if there's

1126
00:38:48,920 --> 00:38:50,990
something particularly

1127
00:38:49,550 --> 00:38:52,400
security-conscious that you want to make

1128
00:38:50,990 --> 00:38:54,020
sure can only go at certain speeds and

1129
00:38:52,400 --> 00:38:56,150
no matter what the issue don't use a

1130
00:38:54,020 --> 00:38:57,170
remappable pin if it's remappable then

1131
00:38:56,150 --> 00:38:58,640
it means it's got this put this

1132
00:38:57,170 --> 00:39:00,170
additional hardware connected to it that

1133
00:38:58,640 --> 00:39:01,279
you can change through software so you

1134
00:39:00,170 --> 00:39:01,880
can see here I've just picked a couple

1135
00:39:01,280 --> 00:39:04,100
of pins

1136
00:39:01,880 --> 00:39:06,410
you know the RPM means that this is port

1137
00:39:04,100 --> 00:39:07,910
e so remappable and it's and it's bit v

1138
00:39:06,410 --> 00:39:10,220
you don't you don't want to use that if

1139
00:39:07,910 --> 00:39:12,230
it's particularly critical the pins in

1140
00:39:10,220 --> 00:39:13,879
green they're not remappable well

1141
00:39:12,230 --> 00:39:18,380
technically they are you can see there's

1142
00:39:13,880 --> 00:39:19,940
analog there's a parallel port and

1143
00:39:18,380 --> 00:39:22,010
there's GPIO stuff on there as well so

1144
00:39:19,940 --> 00:39:23,480
you could potentially remap that just

1145
00:39:22,010 --> 00:39:24,830
those pins into the parallel port and do

1146
00:39:23,480 --> 00:39:26,150
something similar with DMA but once

1147
00:39:24,830 --> 00:39:27,440
again it makes the thing more

1148
00:39:26,150 --> 00:39:29,000
challenging but there's always ways

1149
00:39:27,440 --> 00:39:32,060
around it the simplest one is to simply

1150
00:39:29,000 --> 00:39:34,010
add resistors inline and to show that

1151
00:39:32,060 --> 00:39:36,410
was again a really really simple

1152
00:39:34,010 --> 00:39:38,860
simulation so if we

1153
00:39:36,410 --> 00:39:41,810
Shoom a parasitic capacitance on the

1154
00:39:38,860 --> 00:39:43,220
defect gate of say five Pico farad's

1155
00:39:41,810 --> 00:39:45,770
which is fairly typical for some of

1156
00:39:43,220 --> 00:39:47,870
these peach and fats you can see the the

1157
00:39:45,770 --> 00:39:50,870
the blue signal you can see we're

1158
00:39:47,870 --> 00:39:52,730
getting a nice nice large amplitude the

1159
00:39:50,870 --> 00:39:55,609
minute you put a resistor that are 1 in

1160
00:39:52,730 --> 00:39:57,740
line the amplitude drops that little

1161
00:39:55,610 --> 00:39:59,060
green trace that's all it is it's as

1162
00:39:57,740 --> 00:40:00,740
simple as putting a resistor in line to

1163
00:39:59,060 --> 00:40:02,120
change that slew rate so that we don't

1164
00:40:00,740 --> 00:40:08,240
end up with same amount of current going

1165
00:40:02,120 --> 00:40:10,150
through to effect this charge pump so a

1166
00:40:08,240 --> 00:40:12,560
summary of all of this some of these

1167
00:40:10,150 --> 00:40:14,600
some do say some some of these

1168
00:40:12,560 --> 00:40:16,370
implementations are vulnerable to

1169
00:40:14,600 --> 00:40:17,569
resonance attacks there's a lot of

1170
00:40:16,370 --> 00:40:19,330
characteristics but than any sort of

1171
00:40:17,570 --> 00:40:21,980
side channel it's all about

1172
00:40:19,330 --> 00:40:25,400
characterizing the target if somebody is

1173
00:40:21,980 --> 00:40:28,550
used a particular component with a very

1174
00:40:25,400 --> 00:40:30,230
high logic - abling it that may not be

1175
00:40:28,550 --> 00:40:31,910
vulnerable I haven't researched all

1176
00:40:30,230 --> 00:40:32,780
these options but I'm not going to say

1177
00:40:31,910 --> 00:40:34,850
they all are because that would be

1178
00:40:32,780 --> 00:40:36,820
completely irresponsible and a lot of

1179
00:40:34,850 --> 00:40:39,020
the modern systems on a chip or

1180
00:40:36,820 --> 00:40:40,790
microcontrollers can generate signals

1181
00:40:39,020 --> 00:40:42,500
fast enough to exploit this behavior I

1182
00:40:40,790 --> 00:40:45,620
said even if the front side will only go

1183
00:40:42,500 --> 00:40:46,940
at just a 25 megahertz by running two of

1184
00:40:45,620 --> 00:40:48,290
the pins out of phase to each other you

1185
00:40:46,940 --> 00:40:49,610
can actually generate their right sort

1186
00:40:48,290 --> 00:40:51,440
of signals that you're looking for you

1187
00:40:49,610 --> 00:40:53,900
can also do some funky things with DMA

1188
00:40:51,440 --> 00:40:55,610
and actually changing the tri-states as

1189
00:40:53,900 --> 00:40:57,110
well so you can float pins and pull them

1190
00:40:55,610 --> 00:40:59,210
back down to end up with some of the

1191
00:40:57,110 --> 00:41:00,980
doubling effects the other thing is to

1192
00:40:59,210 --> 00:41:02,540
use the one time configuration fuses if

1193
00:41:00,980 --> 00:41:04,490
they're supported so if your chip has

1194
00:41:02,540 --> 00:41:07,190
the ability to set some of this stuff up

1195
00:41:04,490 --> 00:41:08,450
in you know permanently then use that

1196
00:41:07,190 --> 00:41:10,700
capability because if you don't use that

1197
00:41:08,450 --> 00:41:12,529
capability somebody can actually exploit

1198
00:41:10,700 --> 00:41:16,669
this through through you know through

1199
00:41:12,530 --> 00:41:18,560
software now I'm gonna try I'll put them

1200
00:41:16,670 --> 00:41:22,130
onto that one but I'm going to do this

1201
00:41:18,560 --> 00:41:24,049
first it's gonna pong and bing and if

1202
00:41:22,130 --> 00:41:30,230
anyone wants to come have a look you're

1203
00:41:24,050 --> 00:41:33,920
welcome to get my mouse working oh and

1204
00:41:30,230 --> 00:41:35,000
of course it's suspended well that's

1205
00:41:33,920 --> 00:41:37,070
going to slow things down a little bit

1206
00:41:35,000 --> 00:41:38,930
but what's that's resuming does anyone

1207
00:41:37,070 --> 00:41:43,520
have any have any questions whilst I try

1208
00:41:38,930 --> 00:41:45,470
and set this up wow that's quiet

1209
00:41:43,520 --> 00:41:50,720
either everyone's asleep so bored you

1210
00:41:45,470 --> 00:41:51,980
all or no one once asked a question is

1211
00:41:50,720 --> 00:41:56,450
this like wait waiting for a kettle to

1212
00:41:51,980 --> 00:41:58,690
boil it's not even that big a virtual

1213
00:41:56,450 --> 00:41:58,689
machine

1214
00:42:08,130 --> 00:42:14,439
hello sorry have you looked at the power

1215
00:42:11,859 --> 00:42:19,449
output of the circuit while it's

1216
00:42:14,439 --> 00:42:21,489
resonating in terms of emissions so does

1217
00:42:19,449 --> 00:42:23,289
it as at resonance also have higher

1218
00:42:21,489 --> 00:42:25,479
emissions yes I could tell you about

1219
00:42:23,289 --> 00:42:26,769
something about the system yeah actually

1220
00:42:25,479 --> 00:42:28,660
that's a really good point and I did

1221
00:42:26,769 --> 00:42:30,968
notice whether I used a waveguide

1222
00:42:28,660 --> 00:42:32,920
antenna as with an SDR and a spectrum

1223
00:42:30,969 --> 00:42:34,390
analyzer and when you actually hit this

1224
00:42:32,920 --> 00:42:36,119
resonance you do definitely see a spike

1225
00:42:34,390 --> 00:42:38,558
at that particular frequency and

1226
00:42:36,119 --> 00:42:40,539
obviously I don't have the equipment to

1227
00:42:38,559 --> 00:42:42,400
see exactly what's going on inside the

1228
00:42:40,539 --> 00:42:44,140
chip and exactly it's sort of the area

1229
00:42:42,400 --> 00:42:45,309
around that particular component is

1230
00:42:44,140 --> 00:42:47,348
definitely resonating at that frequency

1231
00:42:45,309 --> 00:42:51,930
yeah on the spectrum analyzer it's quite

1232
00:42:47,349 --> 00:42:54,640
loud there's a wouldn't be a good way to

1233
00:42:51,930 --> 00:42:57,339
explore this a bit further alright let's

1234
00:42:54,640 --> 00:42:59,769
see if it just will work and see my

1235
00:42:57,339 --> 00:43:04,029
little scope on stress no I don't want

1236
00:42:59,769 --> 00:43:07,499
you're going to feel scream can somebody

1237
00:43:04,029 --> 00:43:10,709
please tell Microsoft to stop doing that

1238
00:43:07,499 --> 00:43:10,709
all right

1239
00:43:16,109 --> 00:43:26,369
and I thought it would be a good idea to

1240
00:43:18,429 --> 00:43:26,369
show this live what I Muppet and

1241
00:43:28,830 --> 00:43:42,240
and connect that one alright alright so

1242
00:43:35,200 --> 00:43:48,000
we got that there oh is that connected

1243
00:43:42,240 --> 00:43:50,470
yes okay so if I press the privacy

1244
00:43:48,000 --> 00:43:52,960
enable button you can see that this

1245
00:43:50,470 --> 00:43:55,180
light here turns on so that's simulating

1246
00:43:52,960 --> 00:43:57,700
the USB power side turn around so you

1247
00:43:55,180 --> 00:44:03,569
can see that's on try not to blind

1248
00:43:57,700 --> 00:44:03,569
anyone if I tell the system to disable

1249
00:44:05,790 --> 00:44:09,250
the lighted turn off so I saw a

1250
00:44:07,780 --> 00:44:10,870
reflection online oh it's not turning

1251
00:44:09,250 --> 00:44:13,810
off but it's a light over there so I can

1252
00:44:10,870 --> 00:44:15,880
enable and disable it from here and you

1253
00:44:13,810 --> 00:44:18,220
can see the scope traces behind me are

1254
00:44:15,880 --> 00:44:24,580
going up and down as well so if I enable

1255
00:44:18,220 --> 00:44:26,470
privacy they go down and obviously the

1256
00:44:24,580 --> 00:44:27,910
the software itself says privacy modes

1257
00:44:26,470 --> 00:44:29,500
and they will be you can't do that but

1258
00:44:27,910 --> 00:44:34,779
the actual logic in this little device

1259
00:44:29,500 --> 00:44:39,120
here guarantees that so now yeah where's

1260
00:44:34,780 --> 00:44:43,480
my little program connected jolly good

1261
00:44:39,120 --> 00:44:45,580
ok so if anyone wants to see the privacy

1262
00:44:43,480 --> 00:44:49,480
LED is off saying that the system cannot

1263
00:44:45,580 --> 00:44:51,790
watch so I can try power on power off

1264
00:44:49,480 --> 00:44:54,370
nothing's happening if I then do the

1265
00:44:51,790 --> 00:44:56,100
resonance exploit the lights turn back

1266
00:44:54,370 --> 00:44:58,120
on and you can see the resonant signal

1267
00:44:56,100 --> 00:45:00,190
you can see the signal at the bottom

1268
00:44:58,120 --> 00:45:01,569
though that is enough to create this

1269
00:45:00,190 --> 00:45:03,670
charge pump effect to actually turn the

1270
00:45:01,570 --> 00:45:06,420
system back on so you can see the lights

1271
00:45:03,670 --> 00:45:11,850
actually on I can then clear the X point

1272
00:45:06,420 --> 00:45:17,470
and if I turn on measure one source one

1273
00:45:11,850 --> 00:45:18,160
just look at peak to peak so I'll go

1274
00:45:17,470 --> 00:45:21,089
back through it again

1275
00:45:18,160 --> 00:45:21,089
press the button

1276
00:45:24,100 --> 00:45:31,370
okay and Paran it's really hard to see

1277
00:45:30,140 --> 00:45:33,740
that that's actually on from here it's a

1278
00:45:31,370 --> 00:45:36,740
power on and power off and you can see

1279
00:45:33,740 --> 00:45:39,410
that that's all working there so I'll

1280
00:45:36,740 --> 00:45:41,629
enable privacy mode again and turn it

1281
00:45:39,410 --> 00:45:44,660
back on and you can see we've got peak

1282
00:45:41,630 --> 00:45:45,590
to peak of 785 millivolts and you can

1283
00:45:44,660 --> 00:45:47,330
actually see it's actually slightly

1284
00:45:45,590 --> 00:45:48,770
below ground but that's enough to create

1285
00:45:47,330 --> 00:45:50,299
the charge pumping effect actually turn

1286
00:45:48,770 --> 00:46:02,690
the system back on and that's purely

1287
00:45:50,300 --> 00:46:05,390
through software okay and most people

1288
00:46:02,690 --> 00:46:07,130
still awake Wow thank you very much for

1289
00:46:05,390 --> 00:46:08,600
having me and I said it's just some

1290
00:46:07,130 --> 00:46:12,790
research which I find fascinating so

1291
00:46:08,600 --> 00:46:12,790
hopefully of interest to you all as well

