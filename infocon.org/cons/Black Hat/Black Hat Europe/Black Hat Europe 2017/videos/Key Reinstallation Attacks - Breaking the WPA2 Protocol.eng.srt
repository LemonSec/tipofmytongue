1
00:00:00,000 --> 00:00:03,570
<font color="#E5E5E5">okay good afternoon everyone</font><font color="#CCCCCC"> thank you</font>

2
00:00:01,829 --> 00:00:06,810
<font color="#CCCCCC">for</font><font color="#E5E5E5"> attending</font><font color="#CCCCCC"> my talk it's an honor to</font>

3
00:00:03,570 --> 00:00:08,670
again be speaking at blackhat so today

4
00:00:06,810 --> 00:00:11,460
I'm going<font color="#E5E5E5"> to talk about my research on</font>

5
00:00:08,670 --> 00:00:13,980
wpa2<font color="#E5E5E5"> and in particular how we</font><font color="#CCCCCC"> managed to</font>

6
00:00:11,460 --> 00:00:15,660
<font color="#E5E5E5">break the protocol now there's a small</font>

7
00:00:13,980 --> 00:00:18,960
chance you already<font color="#CCCCCC"> heard about</font><font color="#E5E5E5"> this work</font>

8
00:00:15,660 --> 00:00:22,080
under the name<font color="#E5E5E5"> crack</font><font color="#CCCCCC"> but the research</font>

9
00:00:18,960 --> 00:00:24,000
behind<font color="#E5E5E5"> the Wi-Fi</font><font color="#CCCCCC"> security that I've</font>

10
00:00:22,080 --> 00:00:26,909
<font color="#E5E5E5">already been doing for a while</font><font color="#CCCCCC"> has a bit</font>

11
00:00:24,000 --> 00:00:29,640
<font color="#E5E5E5">of a history already I actually because</font>

12
00:00:26,910 --> 00:00:31,800
I've already studied<font color="#E5E5E5"> the security</font><font color="#CCCCCC"> of</font>

13
00:00:29,640 --> 00:00:34,680
wireless networks during<font color="#CCCCCC"> my PhD and</font>

14
00:00:31,800 --> 00:00:37,950
interestingly<font color="#E5E5E5"> a year ago when I defended</font>

15
00:00:34,680 --> 00:00:40,950
my PhD I got a question from a jury

16
00:00:37,950 --> 00:00:44,250
member<font color="#E5E5E5"> and he asked hey in your thesis</font>

17
00:00:40,950 --> 00:00:47,399
<font color="#CCCCCC">you're suggesting the use of wpa2 with</font>

18
00:00:44,250 --> 00:00:50,760
<font color="#E5E5E5">AES but are you</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that's actually</font>

19
00:00:47,399 --> 00:00:53,879
<font color="#E5E5E5">secure and a year ago the answer I</font><font color="#CCCCCC"> gave</font>

20
00:00:50,760 --> 00:00:55,199
was yeah<font color="#CCCCCC"> seems to</font><font color="#E5E5E5"> be secure after</font><font color="#CCCCCC"> all it</font>

21
00:00:53,879 --> 00:00:57,239
has<font color="#CCCCCC"> been around for</font><font color="#E5E5E5"> more than a decade</font>

22
00:00:55,199 --> 00:00:59,309
until have been no real attacks against

23
00:00:57,239 --> 00:01:01,980
it<font color="#E5E5E5"> and on</font><font color="#CCCCCC"> top of that there are</font>

24
00:00:59,309 --> 00:01:06,390
<font color="#CCCCCC">mathematical proofs that</font><font color="#E5E5E5"> state that wpa2</font>

25
00:01:01,980 --> 00:01:09,298
<font color="#E5E5E5">is supposed to be secure however one</font>

26
00:01:06,390 --> 00:01:12,840
year later I was<font color="#CCCCCC"> staring at some open</font>

27
00:01:09,299 --> 00:01:15,470
BSD code and I was specifically<font color="#E5E5E5"> focusing</font>

28
00:01:12,840 --> 00:01:18,420
on<font color="#E5E5E5"> this function called IC set key and</font>

29
00:01:15,470 --> 00:01:20,670
this function<font color="#E5E5E5"> basically instructs the</font>

30
00:01:18,420 --> 00:01:22,950
driver<font color="#E5E5E5"> into installing the negotiated</font>

31
00:01:20,670 --> 00:01:25,740
encryption key and without going<font color="#E5E5E5"> into</font>

32
00:01:22,950 --> 00:01:28,020
<font color="#E5E5E5">too much detail yet</font><font color="#CCCCCC"> I was thinking that</font>

33
00:01:25,740 --> 00:01:30,419
hey what would happen if this function

34
00:01:28,020 --> 00:01:33,119
<font color="#CCCCCC">is called</font><font color="#E5E5E5"> twice with the key be</font>

35
00:01:30,420 --> 00:01:35,909
reinstalled<font color="#E5E5E5"> on what happens if this key</font>

36
00:01:33,119 --> 00:01:38,880
is being reinstalled<font color="#E5E5E5"> and it turns out</font>

37
00:01:35,909 --> 00:01:42,210
<font color="#E5E5E5">that answering this question</font><font color="#CCCCCC"> let me</font><font color="#E5E5E5"> to</font>

38
00:01:38,880 --> 00:01:44,640
find this flaw in the wpa2 protocol<font color="#CCCCCC"> or</font>

39
00:01:42,210 --> 00:01:46,589
to put<font color="#E5E5E5"> it differently</font><font color="#CCCCCC"> this talk</font><font color="#E5E5E5"> is about</font>

40
00:01:44,640 --> 00:01:51,750
<font color="#E5E5E5">how I gave the wrong answer</font><font color="#CCCCCC"> during my</font>

41
00:01:46,590 --> 00:01:55,290
PhD<font color="#E5E5E5"> defense so to explain what happens</font>

42
00:01:51,750 --> 00:01:57,600
<font color="#E5E5E5">wrong in the</font><font color="#CCCCCC"> WPA 2</font><font color="#E5E5E5"> protocol I'm going to</font>

43
00:01:55,290 --> 00:01:59,369
illustrate<font color="#E5E5E5"> the attack when applied</font>

44
00:01:57,600 --> 00:02:01,770
against the<font color="#CCCCCC"> four-way handshake</font>

45
00:01:59,369 --> 00:02:03,750
specifically the attack also<font color="#E5E5E5"> applies</font>

46
00:02:01,770 --> 00:02:05,759
against other Wi-Fi handshakes but I'm

47
00:02:03,750 --> 00:02:07,590
not<font color="#E5E5E5"> going to discuss those because the</font>

48
00:02:05,759 --> 00:02:10,770
idea behind the<font color="#CCCCCC"> tack is essentially the</font>

49
00:02:07,590 --> 00:02:12,590
same and<font color="#CCCCCC"> after that</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> going to discuss</font>

50
00:02:10,770 --> 00:02:16,220
the practical<font color="#E5E5E5"> impact</font>

51
00:02:12,590 --> 00:02:18,020
of the attack and practice<font color="#E5E5E5"> and I'm also</font>

52
00:02:16,220 --> 00:02:20,240
going to discuss a few<font color="#E5E5E5"> misconceptions</font>

53
00:02:18,020 --> 00:02:22,550
that<font color="#E5E5E5"> have been floating around the</font>

54
00:02:20,240 --> 00:02:24,200
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> and finally I will conclude the</font>

55
00:02:22,550 --> 00:02:27,709
talk with a few<font color="#CCCCCC"> lessons that we can</font>

56
00:02:24,200 --> 00:02:30,230
learn from<font color="#CCCCCC"> the research</font><font color="#E5E5E5"> so let's get</font>

57
00:02:27,709 --> 00:02:31,310
started<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> explain the attack against</font>

58
00:02:30,230 --> 00:02:33,380
the<font color="#E5E5E5"> four-way handshake</font>

59
00:02:31,310 --> 00:02:37,610
now the first<font color="#E5E5E5"> thing I have to</font><font color="#CCCCCC"> answer</font>

60
00:02:33,380 --> 00:02:40,100
<font color="#E5E5E5">what is the four-way handshake and the</font>

61
00:02:37,610 --> 00:02:42,350
four-way handshake is executed<font color="#E5E5E5"> whenever</font>

62
00:02:40,100 --> 00:02:44,840
<font color="#CCCCCC">a client</font><font color="#E5E5E5"> wants to join a Wi-Fi network</font>

63
00:02:42,350 --> 00:02:47,150
<font color="#CCCCCC">and the purpose of the handshake is on</font>

64
00:02:44,840 --> 00:02:49,730
one hand<font color="#CCCCCC"> to</font><font color="#E5E5E5"> verify</font><font color="#CCCCCC"> that the client</font>

65
00:02:47,150 --> 00:02:51,769
<font color="#E5E5E5">possesses the proper credentials for</font>

66
00:02:49,730 --> 00:02:54,200
example for your home network that the

67
00:02:51,769 --> 00:02:55,970
client<font color="#E5E5E5"> knows the pre-shared key and at</font>

68
00:02:54,200 --> 00:02:58,640
the same<font color="#E5E5E5"> time this four-way handshake</font>

69
00:02:55,970 --> 00:03:00,800
also negotiates<font color="#E5E5E5"> a fresh session key a</font>

70
00:02:58,640 --> 00:03:05,329
<font color="#E5E5E5">fresh encryption key on this encryption</font>

71
00:03:00,800 --> 00:03:08,330
<font color="#E5E5E5">key</font><font color="#CCCCCC"> is called</font><font color="#E5E5E5"> the PDK now as I mentioned</font>

72
00:03:05,330 --> 00:03:10,610
one year<font color="#CCCCCC"> ago I would have said that this</font>

73
00:03:08,330 --> 00:03:12,800
looks secure because<font color="#CCCCCC"> there have been</font><font color="#E5E5E5"> no</font>

74
00:03:10,610 --> 00:03:15,500
attacks<font color="#E5E5E5"> in more</font><font color="#CCCCCC"> than a decade at least</font>

75
00:03:12,800 --> 00:03:18,440
if you ignore dictionary attacks<font color="#E5E5E5"> because</font>

76
00:03:15,500 --> 00:03:19,940
of<font color="#CCCCCC"> course it's possible</font><font color="#E5E5E5"> to guess the pre</font>

77
00:03:18,440 --> 00:03:22,549
shared key<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> induced and then</font>

78
00:03:19,940 --> 00:03:24,859
verify<font color="#CCCCCC"> if your guest is correct</font><font color="#E5E5E5"> however</font>

79
00:03:22,549 --> 00:03:26,900
<font color="#CCCCCC">if you have a strong password there</font>

80
00:03:24,860 --> 00:03:29,750
<font color="#CCCCCC">isn't there are no known weaknesses in</font>

81
00:03:26,900 --> 00:03:32,030
this<font color="#E5E5E5"> handshake and on top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that the 4</font>

82
00:03:29,750 --> 00:03:34,130
Way handshake itself has been proven

83
00:03:32,030 --> 00:03:35,989
mathematically as secure on the

84
00:03:34,130 --> 00:03:38,359
encryption protocol that is executed

85
00:03:35,989 --> 00:03:40,400
<font color="#CCCCCC">after</font><font color="#E5E5E5"> the 4-way handshake</font><font color="#CCCCCC"> that has also</font>

86
00:03:38,360 --> 00:03:42,440
<font color="#E5E5E5">been proven</font><font color="#CCCCCC"> as secure so you would say</font>

87
00:03:40,400 --> 00:03:46,190
that<font color="#CCCCCC"> ok there is</font><font color="#E5E5E5"> no possible attack</font>

88
00:03:42,440 --> 00:03:48,200
against this to explain the attack<font color="#CCCCCC"> that</font>

89
00:03:46,190 --> 00:03:52,040
I found I'm now going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> explain the</font>

90
00:03:48,200 --> 00:03:53,600
<font color="#E5E5E5">four-way handshake in more detail and to</font>

91
00:03:52,040 --> 00:03:55,730
explain the<font color="#E5E5E5"> attack let's assume we have</font>

92
00:03:53,600 --> 00:03:57,620
<font color="#E5E5E5">a client here on the</font><font color="#CCCCCC"> left that</font><font color="#E5E5E5"> wants to</font>

93
00:03:55,730 --> 00:04:00,798
<font color="#E5E5E5">connect to the access points on the</font>

94
00:03:57,620 --> 00:04:02,630
right in<font color="#E5E5E5"> order</font><font color="#CCCCCC"> to start the</font><font color="#E5E5E5"> four-way</font>

95
00:04:00,799 --> 00:04:05,239
handshake<font color="#CCCCCC"> there</font><font color="#E5E5E5"> needs to be some kind of</font>

96
00:04:02,630 --> 00:04:07,220
shared secret<font color="#E5E5E5"> between the clients on the</font>

97
00:04:05,239 --> 00:04:08,510
access point<font color="#E5E5E5"> now for your home router</font>

98
00:04:07,220 --> 00:04:10,700
<font color="#E5E5E5">that's very simple</font>

99
00:04:08,510 --> 00:04:13,040
<font color="#E5E5E5">this</font><font color="#CCCCCC"> ppreciate this shared secret is</font>

100
00:04:10,700 --> 00:04:14,660
essentially the pre shared key<font color="#E5E5E5"> but if</font>

101
00:04:13,040 --> 00:04:16,668
you have an enterprise<font color="#CCCCCC"> network</font><font color="#E5E5E5"> where</font><font color="#CCCCCC"> you</font>

102
00:04:14,660 --> 00:04:19,100
have to for example authenticate<font color="#E5E5E5"> using a</font>

103
00:04:16,668 --> 00:04:21,500
username and<font color="#E5E5E5"> password</font><font color="#CCCCCC"> to obtain this</font>

104
00:04:19,100 --> 00:04:23,960
shared secret between<font color="#E5E5E5"> the client on the</font>

105
00:04:21,500 --> 00:04:26,300
access point<font color="#E5E5E5"> first</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 802 dot wanax</font>

106
00:04:23,960 --> 00:04:27,979
authentication phase takes<font color="#E5E5E5"> place</font>

107
00:04:26,300 --> 00:04:30,080
now thankfully<font color="#E5E5E5"> we don't need to know the</font>

108
00:04:27,979 --> 00:04:32,270
details<font color="#CCCCCC"> about how this works</font><font color="#E5E5E5"> basically</font>

109
00:04:30,080 --> 00:04:34,430
<font color="#E5E5E5">you can have</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> kind of authentication</font>

110
00:04:32,270 --> 00:04:36,680
<font color="#CCCCCC">which typically is some form of radius</font>

111
00:04:34,430 --> 00:04:38,210
authentication<font color="#CCCCCC"> and the result of that is</font>

112
00:04:36,680 --> 00:04:40,069
<font color="#CCCCCC">that there is now a shared</font><font color="#E5E5E5"> secret</font>

113
00:04:38,210 --> 00:04:42,948
between<font color="#CCCCCC"> the client on the access point</font>

114
00:04:40,069 --> 00:04:46,580
<font color="#CCCCCC">and once we have the shared secret</font><font color="#E5E5E5"> the</font>

115
00:04:42,949 --> 00:04:48,949
<font color="#E5E5E5">four-way handshake can be executed so as</font>

116
00:04:46,580 --> 00:04:51,289
the name<font color="#E5E5E5"> of this handshake implies the 4</font>

117
00:04:48,949 --> 00:04:54,680
Way handshake<font color="#E5E5E5"> consists of four messages</font>

118
00:04:51,289 --> 00:04:57,800
<font color="#CCCCCC">and the first two they are used to</font>

119
00:04:54,680 --> 00:05:00,229
<font color="#CCCCCC">transport random numbers between</font><font color="#E5E5E5"> both</font>

120
00:04:57,800 --> 00:05:02,030
devices<font color="#CCCCCC"> so in</font><font color="#E5E5E5"> particular first the</font>

121
00:05:00,229 --> 00:05:04,128
access point generates a random<font color="#CCCCCC"> number</font>

122
00:05:02,030 --> 00:05:06,109
called the<font color="#E5E5E5"> access point months or</font><font color="#CCCCCC"> the</font>

123
00:05:04,129 --> 00:05:08,419
<font color="#E5E5E5">anals on that is transported</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

124
00:05:06,110 --> 00:05:10,099
clients<font color="#E5E5E5"> in reaction to</font><font color="#CCCCCC"> that the client</font>

125
00:05:08,419 --> 00:05:12,318
generates a random<font color="#E5E5E5"> number</font><font color="#CCCCCC"> which is</font>

126
00:05:10,099 --> 00:05:15,139
called<font color="#E5E5E5"> the</font><font color="#CCCCCC"> submitted</font><font color="#E5E5E5"> supplicants nones</font>

127
00:05:12,319 --> 00:05:18,800
<font color="#CCCCCC">so the essence</font><font color="#E5E5E5"> on that is transported to</font>

128
00:05:15,139 --> 00:05:22,039
<font color="#E5E5E5">the access point</font><font color="#CCCCCC"> and once</font><font color="#E5E5E5"> both these</font>

129
00:05:18,800 --> 00:05:24,440
<font color="#E5E5E5">devices know the random number known the</font>

130
00:05:22,039 --> 00:05:27,289
nonsense<font color="#E5E5E5"> of each other they can derive</font>

131
00:05:24,440 --> 00:05:30,650
this fresh<font color="#E5E5E5"> encryption key called the</font><font color="#CCCCCC"> ptk</font>

132
00:05:27,289 --> 00:05:32,150
<font color="#E5E5E5">on the way that is done is basically you</font>

133
00:05:30,650 --> 00:05:34,130
<font color="#CCCCCC">take the</font><font color="#E5E5E5"> shared</font><font color="#CCCCCC"> secrets that these</font>

134
00:05:32,150 --> 00:05:36,380
devices<font color="#E5E5E5"> have and you mix them together</font>

135
00:05:34,130 --> 00:05:42,199
with these random<font color="#CCCCCC"> numbers</font><font color="#E5E5E5"> and the result</font>

136
00:05:36,380 --> 00:05:44,029
<font color="#CCCCCC">is a unique</font><font color="#E5E5E5"> session key now one thing I</font>

137
00:05:42,199 --> 00:05:46,849
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to clear up here before we</font><font color="#CCCCCC"> continue</font>

138
00:05:44,029 --> 00:05:47,990
the talk is<font color="#E5E5E5"> that you might have heard</font>

139
00:05:46,849 --> 00:05:50,180
about this work under a different

140
00:05:47,990 --> 00:05:52,490
different<font color="#E5E5E5"> title namely</font><font color="#CCCCCC"> key</font>

141
00:05:50,180 --> 00:05:56,330
<font color="#E5E5E5">reinstallation attacks forcing nonce</font>

142
00:05:52,490 --> 00:05:58,879
reuse and wpa2<font color="#CCCCCC"> I want to clarify that</font>

143
00:05:56,330 --> 00:06:01,310
the nonce<font color="#E5E5E5"> of reuse does not refer to</font>

144
00:05:58,879 --> 00:06:05,449
<font color="#CCCCCC">these</font><font color="#E5E5E5"> two nonsense right here they do</font>

145
00:06:01,310 --> 00:06:07,190
not<font color="#E5E5E5"> refer to the</font><font color="#CCCCCC"> a nonce</font><font color="#E5E5E5"> or s nonce</font><font color="#CCCCCC"> so</font>

146
00:06:05,449 --> 00:06:08,840
and I<font color="#E5E5E5"> will be talking about nonce reuse</font>

147
00:06:07,190 --> 00:06:10,819
it's not about nonce reuse here during

148
00:06:08,840 --> 00:06:12,500
the 4 Way handshake<font color="#E5E5E5"> but during the</font>

149
00:06:10,819 --> 00:06:13,870
encryption algorithm that we will see

150
00:06:12,500 --> 00:06:16,580
<font color="#E5E5E5">later</font>

151
00:06:13,870 --> 00:06:18,919
<font color="#E5E5E5">ok so let's assume we executed this</font>

152
00:06:16,580 --> 00:06:22,490
first stage<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> four way handshake</font>

153
00:06:18,919 --> 00:06:26,109
<font color="#E5E5E5">then a bit simplified the second stage</font>

154
00:06:22,490 --> 00:06:28,430
<font color="#E5E5E5">basically confirms that both devices</font>

155
00:06:26,110 --> 00:06:30,979
<font color="#E5E5E5">generated the same session key so the</font>

156
00:06:28,430 --> 00:06:32,810
access point<font color="#E5E5E5"> sends message</font><font color="#CCCCCC"> 3 to</font><font color="#E5E5E5"> the</font>

157
00:06:30,979 --> 00:06:35,899
<font color="#E5E5E5">client</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the client replies using</font>

158
00:06:32,810 --> 00:06:38,270
message for and if that goes well then

159
00:06:35,899 --> 00:06:40,160
both<font color="#CCCCCC"> parties know that the handshake was</font>

160
00:06:38,270 --> 00:06:43,549
successful and<font color="#E5E5E5"> they can install</font>

161
00:06:40,160 --> 00:06:47,000
the<font color="#E5E5E5"> encryption key</font><font color="#CCCCCC"> to then encrypt data</font>

162
00:06:43,550 --> 00:06:50,090
frames so once we installed the key here

163
00:06:47,000 --> 00:06:54,020
<font color="#E5E5E5">we can now start transmitting encrypted</font>

164
00:06:50,090 --> 00:06:56,599
data frames<font color="#E5E5E5"> so the last thing that we</font>

165
00:06:54,020 --> 00:06:59,960
now need<font color="#CCCCCC"> to understand is how this</font>

166
00:06:56,600 --> 00:07:04,070
encryption work in a wpa2<font color="#CCCCCC"> Network</font><font color="#E5E5E5"> once</font>

167
00:06:59,960 --> 00:07:06,020
we have<font color="#E5E5E5"> this session key and let's take</font>

168
00:07:04,070 --> 00:07:08,650
the<font color="#CCCCCC"> following example</font><font color="#E5E5E5"> we want to send</font>

169
00:07:06,020 --> 00:07:11,599
this plaintext<font color="#CCCCCC"> data to the</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> client</font>

170
00:07:08,650 --> 00:07:14,179
what steps are now taken to encrypt it

171
00:07:11,600 --> 00:07:16,190
well<font color="#E5E5E5"> it's quite</font><font color="#CCCCCC"> straightforward</font>

172
00:07:14,180 --> 00:07:19,580
we take the session key that we just

173
00:07:16,190 --> 00:07:22,460
negotiated<font color="#CCCCCC"> and we combine that with a</font>

174
00:07:19,580 --> 00:07:24,650
packet number<font color="#E5E5E5"> and that packet number is</font>

175
00:07:22,460 --> 00:07:27,530
<font color="#CCCCCC">incremented by one for every packet that</font>

176
00:07:24,650 --> 00:07:30,979
<font color="#CCCCCC">is transmitted</font><font color="#E5E5E5"> and this packet</font><font color="#CCCCCC"> number is</font>

177
00:07:27,530 --> 00:07:33,380
also<font color="#E5E5E5"> called the nonce and the idea is</font>

178
00:07:30,980 --> 00:07:34,790
<font color="#CCCCCC">that by combining</font><font color="#E5E5E5"> the session key with</font>

179
00:07:33,380 --> 00:07:37,280
this packet<font color="#CCCCCC"> number that always</font>

180
00:07:34,790 --> 00:07:40,400
increments by<font color="#E5E5E5"> one is that you get a</font>

181
00:07:37,280 --> 00:07:43,369
unique per packet key that should only

182
00:07:40,400 --> 00:07:45,500
be<font color="#E5E5E5"> used once and then</font><font color="#CCCCCC"> this unique per</font>

183
00:07:43,370 --> 00:07:46,160
packet key can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to decrypt the</font>

184
00:07:45,500 --> 00:07:48,830
<font color="#E5E5E5">plaintext</font>

185
00:07:46,160 --> 00:07:51,140
we are trying<font color="#E5E5E5"> to transmit and here the</font>

186
00:07:48,830 --> 00:07:53,000
encryption process<font color="#E5E5E5"> is quite</font><font color="#CCCCCC"> simple what</font>

187
00:07:51,140 --> 00:07:55,700
<font color="#CCCCCC">we do is we take the packet</font><font color="#E5E5E5"> number</font><font color="#CCCCCC"> we</font>

188
00:07:53,000 --> 00:07:59,300
feed it to a stream cipher we get a key

189
00:07:55,700 --> 00:08:01,070
stream as output and then as<font color="#CCCCCC"> is usually</font>

190
00:07:59,300 --> 00:08:02,600
<font color="#CCCCCC">the case in a stream cipher you simply</font>

191
00:08:01,070 --> 00:08:04,340
ignore<font color="#CCCCCC"> the plain text on the key stream</font>

192
00:08:02,600 --> 00:08:08,600
<font color="#E5E5E5">ant you end up with the encrypted data</font>

193
00:08:04,340 --> 00:08:10,849
<font color="#CCCCCC">the ciphertext</font><font color="#E5E5E5"> now of course we repent a</font>

194
00:08:08,600 --> 00:08:12,800
header<font color="#E5E5E5"> to this encrypted data</font><font color="#CCCCCC"> - so the</font>

195
00:08:10,850 --> 00:08:16,510
receiver knows the packet<font color="#CCCCCC"> number the</font>

196
00:08:12,800 --> 00:08:19,610
nonce<font color="#E5E5E5"> that was used during encryption</font>

197
00:08:16,510 --> 00:08:21,140
but basically this<font color="#CCCCCC"> is the process</font><font color="#E5E5E5"> and</font>

198
00:08:19,610 --> 00:08:25,070
<font color="#E5E5E5">you don't need to know more to</font>

199
00:08:21,140 --> 00:08:26,870
understand how the attack works<font color="#E5E5E5"> now the</font>

200
00:08:25,070 --> 00:08:29,240
thing that<font color="#E5E5E5"> is essential in this</font>

201
00:08:26,870 --> 00:08:33,200
construction<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that the packet number</font>

202
00:08:29,240 --> 00:08:35,840
<font color="#E5E5E5">the nonce is never repeated because if</font>

203
00:08:33,200 --> 00:08:38,270
this nonce<font color="#E5E5E5"> is repeated it means that the</font>

204
00:08:35,840 --> 00:08:39,800
<font color="#E5E5E5">same per packet key is generated</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> in</font>

205
00:08:38,270 --> 00:08:41,718
turn if the same per packet key is

206
00:08:39,799 --> 00:08:43,699
<font color="#E5E5E5">generated this means the same key stream</font>

207
00:08:41,719 --> 00:08:46,940
<font color="#E5E5E5">is used again and this means you have</font>

208
00:08:43,700 --> 00:08:49,280
key stream reuse<font color="#E5E5E5"> and whenever an an</font>

209
00:08:46,940 --> 00:08:52,610
encryption protocol key stream is being

210
00:08:49,280 --> 00:08:53,160
<font color="#CCCCCC">reused</font><font color="#E5E5E5"> you are able</font><font color="#CCCCCC"> to exploit</font><font color="#E5E5E5"> that to</font>

211
00:08:52,610 --> 00:08:55,680
decrease

212
00:08:53,160 --> 00:08:57,660
certain packets<font color="#CCCCCC"> on</font><font color="#E5E5E5"> depending on the</font>

213
00:08:55,680 --> 00:09:02,219
specific encryption algorithm being<font color="#E5E5E5"> used</font>

214
00:08:57,660 --> 00:09:03,779
that can in turn<font color="#E5E5E5"> be abused to forge</font>

215
00:09:02,220 --> 00:09:05,699
packets<font color="#E5E5E5"> but that depends</font><font color="#CCCCCC"> on encryption</font>

216
00:09:03,779 --> 00:09:07,529
<font color="#E5E5E5">algorithm in general if there is nonce</font>

217
00:09:05,699 --> 00:09:13,560
reuse if there is key stream you reuse

218
00:09:07,529 --> 00:09:15,240
you can start decrypting packets so we

219
00:09:13,560 --> 00:09:17,189
want to be sure<font color="#CCCCCC"> that that</font><font color="#E5E5E5"> this packet</font>

220
00:09:15,240 --> 00:09:18,689
<font color="#CCCCCC">number is never reused and</font><font color="#E5E5E5"> I already</font>

221
00:09:17,189 --> 00:09:21,420
<font color="#E5E5E5">mentioned for every packet</font><font color="#CCCCCC"> that you</font>

222
00:09:18,689 --> 00:09:23,189
transmit<font color="#E5E5E5"> it's incremented by one so now</font>

223
00:09:21,420 --> 00:09:25,949
the only<font color="#E5E5E5"> question is still that how is</font>

224
00:09:23,189 --> 00:09:27,629
<font color="#E5E5E5">this packet number initialized and the</font>

225
00:09:25,949 --> 00:09:29,490
answer is here very<font color="#E5E5E5"> simple when you</font>

226
00:09:27,629 --> 00:09:31,410
install the key<font color="#E5E5E5"> the packet</font><font color="#CCCCCC"> number is</font>

227
00:09:29,490 --> 00:09:33,839
initialized<font color="#CCCCCC"> to</font><font color="#E5E5E5"> zero the nonce is</font>

228
00:09:31,410 --> 00:09:35,759
initialized to zero and this makes

229
00:09:33,839 --> 00:09:38,430
complete<font color="#CCCCCC"> sense you</font><font color="#E5E5E5"> want a number that is</font>

230
00:09:35,759 --> 00:09:40,079
only<font color="#E5E5E5"> used</font><font color="#CCCCCC"> once so you initialize it to</font>

231
00:09:38,430 --> 00:09:42,469
<font color="#CCCCCC">zero for</font><font color="#E5E5E5"> every packet you sent you</font>

232
00:09:40,079 --> 00:09:45,029
incremented by one so you think<font color="#E5E5E5"> okay</font>

233
00:09:42,470 --> 00:09:46,740
<font color="#E5E5E5">this number will</font><font color="#CCCCCC"> probably never</font><font color="#E5E5E5"> be</font>

234
00:09:45,029 --> 00:09:48,209
reused<font color="#CCCCCC"> because yeah if the number would</font>

235
00:09:46,740 --> 00:09:50,870
overflow<font color="#E5E5E5"> you would start a completely</font>

236
00:09:48,209 --> 00:09:54,719
<font color="#CCCCCC">new</font><font color="#E5E5E5"> handshake and generate new keys</font>

237
00:09:50,870 --> 00:09:55,649
<font color="#E5E5E5">however we did find</font><font color="#CCCCCC"> a way to force reuse</font>

238
00:09:54,720 --> 00:09:58,079
<font color="#CCCCCC">of this nonce</font>

239
00:09:55,649 --> 00:10:01,589
<font color="#CCCCCC">and the way we did</font><font color="#E5E5E5"> that is that we can</font>

240
00:09:58,079 --> 00:10:05,000
<font color="#E5E5E5">force a reinstallation of the key which</font>

241
00:10:01,589 --> 00:10:08,550
will again initialize this nonce to zero

242
00:10:05,000 --> 00:10:11,130
<font color="#E5E5E5">so how does that work well let me</font>

243
00:10:08,550 --> 00:10:13,079
<font color="#E5E5E5">explain the tag again with the following</font>

244
00:10:11,130 --> 00:10:14,970
scenario you have<font color="#E5E5E5"> your client on the</font>

245
00:10:13,079 --> 00:10:20,130
<font color="#E5E5E5">left that wants</font><font color="#CCCCCC"> to connect to the access</font>

246
00:10:14,970 --> 00:10:21,750
<font color="#CCCCCC">point on the right and of course we're</font>

247
00:10:20,130 --> 00:10:25,079
going<font color="#E5E5E5"> to assume that now there is an</font>

248
00:10:21,750 --> 00:10:27,180
attacker<font color="#E5E5E5"> between them and the first step</font>

249
00:10:25,079 --> 00:10:29,430
that attacker needs<font color="#E5E5E5"> to accomplish is</font>

250
00:10:27,180 --> 00:10:31,560
that it<font color="#E5E5E5"> needs to obtain a</font><font color="#CCCCCC"> so-called</font>

251
00:10:29,430 --> 00:10:34,529
channel based man-in-the-middle attack

252
00:10:31,560 --> 00:10:36,930
now what do I<font color="#E5E5E5"> mean with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> what I mean</font>

253
00:10:34,529 --> 00:10:39,569
<font color="#CCCCCC">with that is that</font><font color="#E5E5E5"> basically the attacker</font>

254
00:10:36,930 --> 00:10:42,569
<font color="#E5E5E5">clones the original access point on a</font>

255
00:10:39,569 --> 00:10:44,279
different<font color="#E5E5E5"> channel for example</font><font color="#CCCCCC"> let's say</font>

256
00:10:42,569 --> 00:10:46,589
that<font color="#CCCCCC"> the original access point is on</font>

257
00:10:44,279 --> 00:10:49,170
channel 6<font color="#E5E5E5"> and the access point now</font>

258
00:10:46,589 --> 00:10:51,120
clones it on channel 1 now just to be

259
00:10:49,170 --> 00:10:53,128
<font color="#E5E5E5">clear this man on the middle position</font>

260
00:10:51,120 --> 00:10:55,019
<font color="#CCCCCC">won't yet allow the attacker</font><font color="#E5E5E5"> to decrypt</font>

261
00:10:53,129 --> 00:10:57,509
<font color="#E5E5E5">any packets it's simply going to forward</font>

262
00:10:55,019 --> 00:10:58,920
<font color="#E5E5E5">packets because what it does will clone</font>

263
00:10:57,509 --> 00:11:00,899
the access point on a different<font color="#CCCCCC"> channel</font>

264
00:10:58,920 --> 00:11:02,849
<font color="#E5E5E5">and then the clients will try to connect</font>

265
00:11:00,899 --> 00:11:04,920
<font color="#E5E5E5">to this access</font><font color="#CCCCCC"> point on this rogue</font>

266
00:11:02,850 --> 00:11:06,380
<font color="#CCCCCC">Channel in this example the</font><font color="#E5E5E5"> client we</font>

267
00:11:04,920 --> 00:11:08,839
try to connect to<font color="#E5E5E5"> the</font>

268
00:11:06,380 --> 00:11:10,790
<font color="#CCCCCC">Terk</font><font color="#E5E5E5"> on channel</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> on the adversary the</font>

269
00:11:08,840 --> 00:11:13,430
man in the middle<font color="#E5E5E5"> was simply forward the</font>

270
00:11:10,790 --> 00:11:16,069
frames that<font color="#CCCCCC"> are sent on channel 1</font><font color="#E5E5E5"> to the</font>

271
00:11:13,430 --> 00:11:19,849
channel 6<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the real channel of</font>

272
00:11:16,070 --> 00:11:22,400
the access point<font color="#E5E5E5"> ok so we can assume</font>

273
00:11:19,850 --> 00:11:26,120
<font color="#E5E5E5">that the attacker has this man</font><font color="#CCCCCC"> in the</font>

274
00:11:22,400 --> 00:11:27,829
middle<font color="#CCCCCC"> position</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> this man in the</font>

275
00:11:26,120 --> 00:11:31,100
<font color="#CCCCCC">middle position will allow the attacker</font>

276
00:11:27,830 --> 00:11:32,720
<font color="#CCCCCC">to reliably block packets</font><font color="#E5E5E5"> because if the</font>

277
00:11:31,100 --> 00:11:34,520
attacker doesn't forward a packet

278
00:11:32,720 --> 00:11:36,320
between these<font color="#CCCCCC"> 2 different channels</font>

279
00:11:34,520 --> 00:11:40,060
well that's equivalent to blocking a

280
00:11:36,320 --> 00:11:40,060
packet from<font color="#CCCCCC"> arriving at the destination</font>

281
00:11:40,210 --> 00:11:45,710
<font color="#E5E5E5">so what happens during the initial stage</font>

282
00:11:43,460 --> 00:11:48,470
of<font color="#CCCCCC"> the Wi-Fi handshake</font><font color="#E5E5E5"> is that attacker</font>

283
00:11:45,710 --> 00:11:50,780
will simply forward<font color="#E5E5E5"> any frames that</font><font color="#CCCCCC"> are</font>

284
00:11:48,470 --> 00:11:53,090
transmitted in particular<font color="#E5E5E5"> the first</font>

285
00:11:50,780 --> 00:11:55,550
<font color="#CCCCCC">three messages of the four-way handshake</font>

286
00:11:53,090 --> 00:12:01,130
<font color="#E5E5E5">they are simply forwarded between both</font>

287
00:11:55,550 --> 00:12:03,829
devices<font color="#E5E5E5"> however once the</font><font color="#CCCCCC"> clients sends</font>

288
00:12:01,130 --> 00:12:06,830
message<font color="#E5E5E5"> for of the four-way handshake</font>

289
00:12:03,830 --> 00:12:08,570
<font color="#E5E5E5">then the adversary will not forward that</font>

290
00:12:06,830 --> 00:12:11,600
packet to the real access point on it

291
00:12:08,570 --> 00:12:13,790
will block it<font color="#CCCCCC"> from arriving</font><font color="#E5E5E5"> now it's</font>

292
00:12:11,600 --> 00:12:15,860
<font color="#E5E5E5">interesting here is that if you look at</font>

293
00:12:13,790 --> 00:12:17,540
<font color="#E5E5E5">this perspective from the client then</font>

294
00:12:15,860 --> 00:12:19,700
the 4 Way handshake<font color="#E5E5E5"> completed</font>

295
00:12:17,540 --> 00:12:22,040
successfully<font color="#CCCCCC"> after all its received</font>

296
00:12:19,700 --> 00:12:24,800
message<font color="#E5E5E5"> 3 of the handshake</font><font color="#CCCCCC"> on the reply</font>

297
00:12:22,040 --> 00:12:27,890
using<font color="#E5E5E5"> message 4 so it thinks that the</font>

298
00:12:24,800 --> 00:12:31,160
handshake<font color="#E5E5E5"> is complete</font><font color="#CCCCCC"> and it will now it</font>

299
00:12:27,890 --> 00:12:34,160
<font color="#CCCCCC">will</font><font color="#E5E5E5"> now install the session key here at</font>

300
00:12:31,160 --> 00:12:37,459
the bottom however<font color="#E5E5E5"> if we continue</font><font color="#CCCCCC"> with</font>

301
00:12:34,160 --> 00:12:39,709
the handshake<font color="#CCCCCC"> then we observe that the</font>

302
00:12:37,460 --> 00:12:42,800
access point<font color="#CCCCCC"> did</font><font color="#E5E5E5"> not receive message for</font>

303
00:12:39,710 --> 00:12:45,950
yet<font color="#E5E5E5"> so according to the access</font><font color="#CCCCCC"> point the</font>

304
00:12:42,800 --> 00:12:49,280
handshake<font color="#E5E5E5"> hasn't completed yet and</font><font color="#CCCCCC"> that</font>

305
00:12:45,950 --> 00:12:52,250
it tries to<font color="#E5E5E5"> recover from that by trying</font>

306
00:12:49,280 --> 00:12:54,079
to retransmit<font color="#E5E5E5"> message</font><font color="#CCCCCC"> 3 of the handshake</font>

307
00:12:52,250 --> 00:12:55,850
because it<font color="#E5E5E5"> assumes that this match</font><font color="#CCCCCC"> that</font>

308
00:12:54,080 --> 00:12:57,370
probably<font color="#E5E5E5"> did not arrive at</font><font color="#CCCCCC"> the client</font>

309
00:12:55,850 --> 00:12:59,990
and<font color="#E5E5E5"> that's why it didn't get a response</font>

310
00:12:57,370 --> 00:13:04,190
<font color="#E5E5E5">so the access point retransmits</font>

311
00:12:59,990 --> 00:13:06,650
message<font color="#E5E5E5"> 3 and in turn the client accepts</font>

312
00:13:04,190 --> 00:13:10,760
this message and<font color="#E5E5E5"> it's replies using a</font>

313
00:13:06,650 --> 00:13:13,640
new message for and interestingly this

314
00:13:10,760 --> 00:13:16,250
message for here is encrypted at a link

315
00:13:13,640 --> 00:13:18,980
layer and we will abuse<font color="#E5E5E5"> this observation</font>

316
00:13:16,250 --> 00:13:19,520
later on in the attack now why is this

317
00:13:18,980 --> 00:13:21,920
handshake

318
00:13:19,520 --> 00:13:24,140
methods<font color="#E5E5E5"> suddenly encrypted at the link</font>

319
00:13:21,920 --> 00:13:26,479
layer well<font color="#E5E5E5"> these handshake messages</font>

320
00:13:24,140 --> 00:13:29,240
there are essentially normal<font color="#E5E5E5"> data frames</font>

321
00:13:26,480 --> 00:13:31,280
<font color="#E5E5E5">on</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> we installed the encryption key</font>

322
00:13:29,240 --> 00:13:33,830
<font color="#E5E5E5">and this is a data frame so for of</font>

323
00:13:31,280 --> 00:13:38,839
<font color="#CCCCCC">course</font><font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> encrypt this data</font>

324
00:13:33,830 --> 00:13:41,330
frame<font color="#E5E5E5"> okay so the clients received this</font>

325
00:13:38,840 --> 00:13:43,700
retransmitted message<font color="#CCCCCC"> 3-ounce it's</font>

326
00:13:41,330 --> 00:13:46,190
replied using message for and<font color="#E5E5E5"> the</font>

327
00:13:43,700 --> 00:13:48,500
standard clearly<font color="#E5E5E5"> states that whenever</font>

328
00:13:46,190 --> 00:13:50,360
you receive<font color="#E5E5E5"> a message</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> answer</font>

329
00:13:48,500 --> 00:13:54,170
apply it using<font color="#E5E5E5"> a message for you have to</font>

330
00:13:50,360 --> 00:13:56,540
reinstall the session key<font color="#E5E5E5"> and this is</font>

331
00:13:54,170 --> 00:13:59,540
where it goes wrong<font color="#E5E5E5"> because now it will</font>

332
00:13:56,540 --> 00:14:01,969
again install the encryption key and<font color="#CCCCCC"> as</font>

333
00:13:59,540 --> 00:14:06,319
a result of that it will reset this

334
00:14:01,970 --> 00:14:08,930
packet number<font color="#CCCCCC"> this</font><font color="#E5E5E5"> nonce to zero on what</font>

335
00:14:06,320 --> 00:14:12,050
happens now if the client<font color="#E5E5E5"> sends a data</font>

336
00:14:08,930 --> 00:14:15,050
frame this data frame will again<font color="#CCCCCC"> use a</font>

337
00:14:12,050 --> 00:14:16,880
packet number<font color="#E5E5E5"> of one in other words if</font>

338
00:14:15,050 --> 00:14:19,640
you look<font color="#E5E5E5"> at these two encrypted data</font>

339
00:14:16,880 --> 00:14:21,290
packets the same nonce is used which

340
00:14:19,640 --> 00:14:25,160
also means<font color="#E5E5E5"> that the same key stream is</font>

341
00:14:21,290 --> 00:14:28,819
being<font color="#CCCCCC"> reused so how can we now use</font><font color="#E5E5E5"> this</font>

342
00:14:25,160 --> 00:14:33,800
nonce reuse to decrypt contents of this

343
00:14:28,820 --> 00:14:36,290
data frame well we're going<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> back</font>

344
00:14:33,800 --> 00:14:39,439
<font color="#CCCCCC">at</font><font color="#E5E5E5"> these two message force that have</font>

345
00:14:36,290 --> 00:14:41,420
been transmitted<font color="#E5E5E5"> and if we look at the</font>

346
00:14:39,440 --> 00:14:43,970
first message for that was<font color="#CCCCCC"> sending</font>

347
00:14:41,420 --> 00:14:46,370
<font color="#E5E5E5">plaintext</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then the second message</font>

348
00:14:43,970 --> 00:14:49,250
for which was a retransmission<font color="#CCCCCC"> that was</font>

349
00:14:46,370 --> 00:14:51,140
sent in<font color="#E5E5E5"> an encrypted way and there's a</font>

350
00:14:49,250 --> 00:14:52,760
small<font color="#E5E5E5"> difference between these two</font>

351
00:14:51,140 --> 00:14:55,130
frames but most<font color="#E5E5E5"> of the fields are the</font>

352
00:14:52,760 --> 00:14:57,590
<font color="#CCCCCC">same</font><font color="#E5E5E5"> so essentially what we have is we</font>

353
00:14:55,130 --> 00:14:59,600
have one<font color="#E5E5E5"> version of the packet is sent</font>

354
00:14:57,590 --> 00:15:02,360
as plain text<font color="#E5E5E5"> on one version of the</font>

355
00:14:59,600 --> 00:15:04,790
packets is sent<font color="#CCCCCC"> encrypted so we simply</font>

356
00:15:02,360 --> 00:15:06,920
XOR these two and<font color="#E5E5E5"> we get this key stream</font>

357
00:15:04,790 --> 00:15:09,920
<font color="#E5E5E5">that corresponds to the nonce value of</font>

358
00:15:06,920 --> 00:15:12,650
<font color="#E5E5E5">one</font><font color="#CCCCCC"> now that we</font><font color="#E5E5E5"> have this key stream</font>

359
00:15:09,920 --> 00:15:14,240
well we can simply ignore<font color="#CCCCCC"> it</font><font color="#E5E5E5"> Witek</font>

360
00:15:12,650 --> 00:15:16,610
with the packets<font color="#E5E5E5"> that was just</font>

361
00:15:14,240 --> 00:15:19,340
transmitted and we get decrypted

362
00:15:16,610 --> 00:15:24,710
plaintext<font color="#E5E5E5"> and there we go we have broken</font>

363
00:15:19,340 --> 00:15:27,770
wpa2 so this explains the attack against

364
00:15:24,710 --> 00:15:30,230
the<font color="#E5E5E5"> four-way handshake now other Wi-Fi</font>

365
00:15:27,770 --> 00:15:33,170
handshakes<font color="#E5E5E5"> are vulnerable to similar</font>

366
00:15:30,230 --> 00:15:35,180
attacks<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> you also have</font>

367
00:15:33,170 --> 00:15:37,639
<font color="#CCCCCC">grupe handshake</font><font color="#E5E5E5"> where we can apply</font><font color="#CCCCCC"> a</font>

368
00:15:35,180 --> 00:15:40,160
similar<font color="#E5E5E5"> attack we also have the FD</font>

369
00:15:37,639 --> 00:15:41,930
handshake<font color="#E5E5E5"> the FD handshake is used when</font>

370
00:15:40,160 --> 00:15:43,430
you roam from one access<font color="#CCCCCC"> point</font><font color="#E5E5E5"> to</font>

371
00:15:41,930 --> 00:15:46,430
another access point of the same network

372
00:15:43,430 --> 00:15:48,739
<font color="#CCCCCC">ant you also have the perky handshake</font>

373
00:15:46,430 --> 00:15:51,019
<font color="#E5E5E5">which is used when two client devices</font>

374
00:15:48,740 --> 00:15:53,959
<font color="#E5E5E5">are directly communicating with</font><font color="#CCCCCC"> each</font>

375
00:15:51,019 --> 00:15:56,240
<font color="#E5E5E5">other now I'm not going to explain this</font>

376
00:15:53,959 --> 00:15:58,040
in detail<font color="#CCCCCC"> if you want to know all the</font>

377
00:15:56,240 --> 00:16:03,440
details I'm going to refer<font color="#CCCCCC"> you to our</font>

378
00:15:58,040 --> 00:16:08,420
<font color="#E5E5E5">academic paper</font><font color="#CCCCCC"> where it's explains very</font>

379
00:16:03,440 --> 00:16:10,250
clearly<font color="#CCCCCC"> ok so we now know</font><font color="#E5E5E5"> how to execute</font>

380
00:16:08,420 --> 00:16:12,800
<font color="#E5E5E5">the attack against a four-way handshake</font>

381
00:16:10,250 --> 00:16:16,100
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we know that we can decrypt packets</font>

382
00:16:12,800 --> 00:16:18,979
<font color="#E5E5E5">but what exactly</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the impact and</font>

383
00:16:16,100 --> 00:16:21,800
practice<font color="#CCCCCC"> ants</font><font color="#E5E5E5"> the first thing I want to</font>

384
00:16:18,980 --> 00:16:24,709
mention is<font color="#E5E5E5"> the general impact of a key</font>

385
00:16:21,800 --> 00:16:27,319
<font color="#E5E5E5">reinstallation attack so let's say</font><font color="#CCCCCC"> that</font>

386
00:16:24,709 --> 00:16:29,599
we have a device that<font color="#CCCCCC"> is vulnerable to a</font>

387
00:16:27,320 --> 00:16:31,459
key reinstallation attack for<font color="#E5E5E5"> example</font>

388
00:16:29,600 --> 00:16:33,560
<font color="#E5E5E5">this can be an access point</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> it can</font>

389
00:16:31,459 --> 00:16:36,619
<font color="#CCCCCC">also be a</font><font color="#E5E5E5"> client on a client means a</font>

390
00:16:33,560 --> 00:16:38,449
<font color="#CCCCCC">smartphone</font><font color="#E5E5E5"> a laptop or maybe a toaster</font>

391
00:16:36,620 --> 00:16:41,839
if<font color="#CCCCCC"> it supports Wi-Fi</font><font color="#E5E5E5"> that's also</font>

392
00:16:38,449 --> 00:16:45,560
<font color="#E5E5E5">possible these</font><font color="#CCCCCC"> days and if your</font><font color="#E5E5E5"> device</font>

393
00:16:41,839 --> 00:16:48,199
is vulnerable<font color="#E5E5E5"> as I just explained the</font>

394
00:16:45,560 --> 00:16:50,390
<font color="#E5E5E5">first thing that</font><font color="#CCCCCC"> is possible if when it</font>

395
00:16:48,199 --> 00:16:52,969
sends<font color="#E5E5E5"> encrypted data frames then we can</font>

396
00:16:50,390 --> 00:16:55,310
force nonce reuse which in turn can<font color="#CCCCCC"> be</font>

397
00:16:52,970 --> 00:16:58,279
<font color="#CCCCCC">used to decrypt packets sent</font><font color="#E5E5E5"> by the</font>

398
00:16:55,310 --> 00:17:02,569
device<font color="#E5E5E5"> under</font><font color="#CCCCCC"> attack but</font><font color="#E5E5E5"> there is also a</font>

399
00:16:58,279 --> 00:17:04,040
second attack that you can perform<font color="#E5E5E5"> the</font>

400
00:17:02,570 --> 00:17:06,530
<font color="#E5E5E5">other thing you can do is that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

401
00:17:04,040 --> 00:17:09,409
replay packets<font color="#E5E5E5"> towards the device under</font>

402
00:17:06,530 --> 00:17:11,149
attack<font color="#E5E5E5"> now why is that possible that's</font>

403
00:17:09,410 --> 00:17:13,549
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> because if the victim</font>

404
00:17:11,150 --> 00:17:16,250
reinstalls the encryption key it will

405
00:17:13,549 --> 00:17:18,349
also reset the receive replay counter on

406
00:17:16,250 --> 00:17:20,540
the receive replay counter as the name

407
00:17:18,349 --> 00:17:23,059
implies it's used to detect<font color="#CCCCCC"> replays and</font>

408
00:17:20,540 --> 00:17:26,329
<font color="#E5E5E5">if this number is reset you can replay</font>

409
00:17:23,059 --> 00:17:29,928
<font color="#E5E5E5">old frames to</font><font color="#CCCCCC"> the device</font><font color="#E5E5E5"> under attack so</font>

410
00:17:26,329 --> 00:17:34,580
these are the two general<font color="#E5E5E5"> consequences</font>

411
00:17:29,929 --> 00:17:36,799
of a key reinstallation attack<font color="#E5E5E5"> now the</font>

412
00:17:34,580 --> 00:17:38,750
impact<font color="#CCCCCC"> of the TAC is</font><font color="#E5E5E5"> quite tricky to</font>

413
00:17:36,799 --> 00:17:40,850
<font color="#E5E5E5">describe</font><font color="#CCCCCC"> because it depends on a lot of</font>

414
00:17:38,750 --> 00:17:44,970
factors<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I'm now going</font><font color="#CCCCCC"> to discuss all</font>

415
00:17:40,850 --> 00:17:46,678
<font color="#E5E5E5">these factors and the first factor</font>

416
00:17:44,970 --> 00:17:48,690
is that the impact depends on the

417
00:17:46,679 --> 00:17:51,690
specific encryption algorithm that you

418
00:17:48,690 --> 00:17:53,490
are using<font color="#E5E5E5"> and the most widely used</font>

419
00:17:51,690 --> 00:17:58,350
<font color="#E5E5E5">encryption algorithm</font><font color="#CCCCCC"> in a Wi-Fi network</font>

420
00:17:53,490 --> 00:18:00,900
is<font color="#E5E5E5"> ASC cmp and if this encryption</font>

421
00:17:58,350 --> 00:18:03,178
algorithm is used then<font color="#E5E5E5"> the impact is in</font>

422
00:18:00,900 --> 00:18:06,000
a sense limited to decrypting on

423
00:18:03,179 --> 00:18:08,490
replaying frames<font color="#E5E5E5"> on you cannot Forge</font>

424
00:18:06,000 --> 00:18:10,470
frames<font color="#E5E5E5"> so in a sense we're lucky that</font>

425
00:18:08,490 --> 00:18:12,390
<font color="#E5E5E5">this is the most</font><font color="#CCCCCC"> widely used one</font><font color="#E5E5E5"> because</font>

426
00:18:10,470 --> 00:18:15,150
here the impact<font color="#E5E5E5"> is at least a bit</font>

427
00:18:12,390 --> 00:18:18,409
<font color="#CCCCCC">limited</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> if you are still</font><font color="#E5E5E5"> using</font>

428
00:18:15,150 --> 00:18:21,419
<font color="#E5E5E5">the older WPA</font><font color="#CCCCCC"> TCAP encryption protocol</font>

429
00:18:18,409 --> 00:18:23,880
<font color="#E5E5E5">then the</font><font color="#CCCCCC"> ability to decrypt frames</font><font color="#E5E5E5"> and</font>

430
00:18:21,419 --> 00:18:26,280
turn enables an attacker<font color="#E5E5E5"> to recover the</font>

431
00:18:23,880 --> 00:18:29,909
authentication key which here is called

432
00:18:26,280 --> 00:18:31,830
a message<font color="#E5E5E5"> integrity check key what this</font>

433
00:18:29,909 --> 00:18:35,130
key allows you to do is it would<font color="#CCCCCC"> allow</font>

434
00:18:31,830 --> 00:18:36,899
you<font color="#E5E5E5"> to forge packets packets that appear</font>

435
00:18:35,130 --> 00:18:39,120
to<font color="#E5E5E5"> be transmitted by the device under</font>

436
00:18:36,900 --> 00:18:44,820
<font color="#E5E5E5">attack so if you would attack a client</font>

437
00:18:39,120 --> 00:18:48,899
you can forge packets that are sent from

438
00:18:44,820 --> 00:18:50,939
the<font color="#CCCCCC"> clients</font><font color="#E5E5E5"> to the access point now</font>

439
00:18:48,900 --> 00:18:53,820
there is<font color="#E5E5E5"> also a third encryption</font>

440
00:18:50,940 --> 00:18:56,760
algorithm which is<font color="#E5E5E5"> called</font><font color="#CCCCCC"> G cmp and</font>

441
00:18:53,820 --> 00:19:00,090
currently people are trying<font color="#E5E5E5"> to market it</font>

442
00:18:56,760 --> 00:19:02,309
under the name<font color="#CCCCCC"> hwagok on</font><font color="#E5E5E5"> some expect</font>

443
00:19:00,090 --> 00:19:04,740
this algorithm<font color="#E5E5E5"> to be adopted</font><font color="#CCCCCC"> at a very</font>

444
00:19:02,309 --> 00:19:05,158
high<font color="#E5E5E5"> rates of course we'll see what will</font>

445
00:19:04,740 --> 00:19:08,970
happen

446
00:19:05,159 --> 00:19:12,630
but the impact of<font color="#E5E5E5"> our attack is quite</font>

447
00:19:08,970 --> 00:19:15,210
high if<font color="#CCCCCC"> G CMP would be used</font><font color="#E5E5E5"> and the</font>

448
00:19:12,630 --> 00:19:17,429
reason the impact is high because<font color="#E5E5E5"> not</font>

449
00:19:15,210 --> 00:19:21,419
only<font color="#E5E5E5"> can recover</font><font color="#CCCCCC"> can we recover the</font>

450
00:19:17,429 --> 00:19:23,370
authentication key if G<font color="#E5E5E5"> CMP is used we</font>

451
00:19:21,419 --> 00:19:25,799
can use<font color="#E5E5E5"> this authentication key in both</font>

452
00:19:23,370 --> 00:19:27,928
<font color="#E5E5E5">communication directions so once we</font>

453
00:19:25,799 --> 00:19:30,030
recover<font color="#E5E5E5"> this key we can</font><font color="#CCCCCC"> forged frames</font>

454
00:19:27,929 --> 00:19:32,250
<font color="#E5E5E5">sense sent from the client</font><font color="#CCCCCC"> to the access</font>

455
00:19:30,030 --> 00:19:35,010
point<font color="#CCCCCC"> but also from the access point to</font>

456
00:19:32,250 --> 00:19:37,890
the client<font color="#E5E5E5"> so in a sense we got lucky</font>

457
00:19:35,010 --> 00:19:39,720
<font color="#CCCCCC">that G</font><font color="#E5E5E5"> CMP isn't widely used yet because</font>

458
00:19:37,890 --> 00:19:41,570
otherwise the impact would<font color="#CCCCCC"> have been</font>

459
00:19:39,720 --> 00:19:46,710
higher<font color="#CCCCCC"> than it is today</font>

460
00:19:41,570 --> 00:19:49,439
now another thing<font color="#E5E5E5"> that influences the</font>

461
00:19:46,710 --> 00:19:53,100
practical impacts<font color="#E5E5E5"> of the attack is the</font>

462
00:19:49,440 --> 00:19:56,130
specific handshake<font color="#E5E5E5"> you are attacking for</font>

463
00:19:53,100 --> 00:19:57,540
example if we are<font color="#E5E5E5"> targeting the group</font>

464
00:19:56,130 --> 00:20:00,210
key handshake

465
00:19:57,540 --> 00:20:02,879
in that<font color="#E5E5E5"> case we would be attacking</font><font color="#CCCCCC"> the</font>

466
00:20:00,210 --> 00:20:05,970
<font color="#E5E5E5">clients however we would only be able to</font>

467
00:20:02,880 --> 00:20:07,980
replay<font color="#E5E5E5"> broadcast on multicast data to</font>

468
00:20:05,970 --> 00:20:10,560
the client<font color="#CCCCCC"> so just to</font><font color="#E5E5E5"> be clear here the</font>

469
00:20:07,980 --> 00:20:12,630
group<font color="#E5E5E5"> key handshake</font><font color="#CCCCCC"> it is used to</font>

470
00:20:10,560 --> 00:20:15,030
distribute<font color="#CCCCCC"> the key that</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> used to</font>

471
00:20:12,630 --> 00:20:17,640
encrypt broadcast on multicast frames<font color="#E5E5E5"> to</font>

472
00:20:15,030 --> 00:20:20,280
clients<font color="#E5E5E5"> now the reason the impact is</font>

473
00:20:17,640 --> 00:20:23,450
quite low for<font color="#E5E5E5"> this</font><font color="#CCCCCC"> handshake</font><font color="#E5E5E5"> is because</font>

474
00:20:20,280 --> 00:20:27,330
the<font color="#E5E5E5"> client is never sending real</font>

475
00:20:23,450 --> 00:20:30,360
<font color="#E5E5E5">encrypted broadcast frames why is that</font>

476
00:20:27,330 --> 00:20:32,370
the case<font color="#CCCCCC"> well let's say</font><font color="#E5E5E5"> we have the</font>

477
00:20:30,360 --> 00:20:35,459
<font color="#CCCCCC">network shown</font><font color="#E5E5E5"> here on the client on the</font>

478
00:20:32,370 --> 00:20:37,139
<font color="#E5E5E5">left wants to send a broadcast frame the</font>

479
00:20:35,460 --> 00:20:40,260
way<font color="#E5E5E5"> this is done on a Wi-Fi network is</font>

480
00:20:37,140 --> 00:20:43,680
the client first<font color="#E5E5E5"> sends this broadcast</font>

481
00:20:40,260 --> 00:20:46,379
data frame as a unicast<font color="#E5E5E5"> Wi-Fi frame to</font>

482
00:20:43,680 --> 00:20:48,990
the access<font color="#E5E5E5"> point</font><font color="#CCCCCC"> and then the access</font>

483
00:20:46,380 --> 00:20:51,210
point<font color="#E5E5E5"> broadcasts it as a real Wi-Fi</font>

484
00:20:48,990 --> 00:20:52,620
broadcast frame and the ideas that<font color="#CCCCCC"> 10</font>

485
00:20:51,210 --> 00:20:55,260
all clients<font color="#E5E5E5"> connected to the access</font>

486
00:20:52,620 --> 00:20:57,479
<font color="#CCCCCC">point will receive this frame but this</font>

487
00:20:55,260 --> 00:21:00,480
implies<font color="#CCCCCC"> that the client</font><font color="#E5E5E5"> is never sending</font>

488
00:20:57,480 --> 00:21:02,580
actual encrypted broadcast Wi-Fi frames

489
00:21:00,480 --> 00:21:04,650
<font color="#E5E5E5">meaning</font><font color="#CCCCCC"> code it will</font><font color="#E5E5E5"> never reuse the</font>

490
00:21:02,580 --> 00:21:06,990
nonce when sending broadcast data

491
00:21:04,650 --> 00:21:09,930
because well it just<font color="#E5E5E5"> never sends</font>

492
00:21:06,990 --> 00:21:11,640
broadcast frames however we can attack

493
00:21:09,930 --> 00:21:13,590
the client<font color="#E5E5E5"> on to reset its replay</font>

494
00:21:11,640 --> 00:21:16,250
counter meaning we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> able to replay a</font>

495
00:21:13,590 --> 00:21:19,020
broadcast data<font color="#E5E5E5"> towards</font><font color="#CCCCCC"> the client</font>

496
00:21:16,250 --> 00:21:21,660
<font color="#E5E5E5">however the</font><font color="#CCCCCC"> ability to replay broadcast</font>

497
00:21:19,020 --> 00:21:26,010
data<font color="#E5E5E5"> and practice the impact of that</font><font color="#CCCCCC"> is</font>

498
00:21:21,660 --> 00:21:27,840
<font color="#CCCCCC">usually quite low however</font><font color="#E5E5E5"> if you would</font>

499
00:21:26,010 --> 00:21:30,120
<font color="#E5E5E5">be attacking</font><font color="#CCCCCC"> the four-way handshake like</font>

500
00:21:27,840 --> 00:21:32,159
I<font color="#CCCCCC"> just explained</font><font color="#E5E5E5"> then we are again</font>

501
00:21:30,120 --> 00:21:34,800
<font color="#E5E5E5">attacking the clients on</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case we</font>

502
00:21:32,160 --> 00:21:37,230
can generally replay on<font color="#CCCCCC"> the Crypt frames</font>

503
00:21:34,800 --> 00:21:40,280
<font color="#E5E5E5">and depending on an encryption algorithm</font>

504
00:21:37,230 --> 00:21:43,290
<font color="#E5E5E5">we might also be able to forge frames</font>

505
00:21:40,280 --> 00:21:45,960
our third handshake<font color="#CCCCCC"> we can attack is the</font>

506
00:21:43,290 --> 00:21:48,450
<font color="#CCCCCC">FT handshake</font><font color="#E5E5E5"> as mentioned this handshake</font>

507
00:21:45,960 --> 00:21:51,450
<font color="#E5E5E5">is used when you roam from one access</font>

508
00:21:48,450 --> 00:21:53,310
<font color="#CCCCCC">point of a network to the same network</font>

509
00:21:51,450 --> 00:21:55,680
<font color="#E5E5E5">but a different access</font><font color="#CCCCCC"> points on this</font>

510
00:21:53,310 --> 00:21:58,730
<font color="#E5E5E5">handshake is to switch you very quickly</font>

511
00:21:55,680 --> 00:22:01,260
between<font color="#E5E5E5"> these two access points</font><font color="#CCCCCC"> and</font>

512
00:21:58,730 --> 00:22:03,500
<font color="#CCCCCC">against this</font><font color="#E5E5E5"> handshake we are attacking</font>

513
00:22:01,260 --> 00:22:06,450
the access point<font color="#E5E5E5"> of not a client and</font>

514
00:22:03,500 --> 00:22:09,090
again the impact is the same as the

515
00:22:06,450 --> 00:22:11,280
<font color="#E5E5E5">four-way handshake we can replay on</font><font color="#CCCCCC"> the</font>

516
00:22:09,090 --> 00:22:14,580
<font color="#CCCCCC">curved frames and possibly we can</font><font color="#E5E5E5"> for</font>

517
00:22:11,280 --> 00:22:18,290
frames<font color="#E5E5E5"> however</font><font color="#CCCCCC"> unimportant</font><font color="#E5E5E5"> remark when</font>

518
00:22:14,580 --> 00:22:21,060
you attack the<font color="#E5E5E5"> FD handshake is that it's</font>

519
00:22:18,290 --> 00:22:23,250
easier<font color="#CCCCCC"> to attack</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we no longer</font>

520
00:22:21,060 --> 00:22:25,379
need this channel based man in the

521
00:22:23,250 --> 00:22:27,570
middle<font color="#CCCCCC"> position to block</font><font color="#E5E5E5"> certain packets</font>

522
00:22:25,380 --> 00:22:29,790
from<font color="#CCCCCC"> arriving at</font><font color="#E5E5E5"> the destination as an</font>

523
00:22:27,570 --> 00:22:31,980
attacker<font color="#CCCCCC"> we</font><font color="#E5E5E5"> simply need to be near the</font>

524
00:22:29,790 --> 00:22:35,520
victim<font color="#CCCCCC"> we need to be able to sniff the</font>

525
00:22:31,980 --> 00:22:37,320
packets<font color="#E5E5E5"> that the client is transmitting</font>

526
00:22:35,520 --> 00:22:39,570
and then we can simply replay that

527
00:22:37,320 --> 00:22:42,240
<font color="#E5E5E5">packets continuously to cause these</font>

528
00:22:39,570 --> 00:22:43,830
nonce resets<font color="#CCCCCC"> in the access point so to</font>

529
00:22:42,240 --> 00:22:45,240
<font color="#E5E5E5">summarize when you take the</font><font color="#CCCCCC"> four way</font>

530
00:22:43,830 --> 00:22:46,919
handshake you need<font color="#E5E5E5"> this channel based</font>

531
00:22:45,240 --> 00:22:49,500
<font color="#E5E5E5">man in the middle attack but when you</font>

532
00:22:46,920 --> 00:22:51,090
attack the FD handshake you don't need a

533
00:22:49,500 --> 00:22:53,010
man<font color="#CCCCCC"> in the middle</font><font color="#E5E5E5"> attack you simply need</font>

534
00:22:51,090 --> 00:22:57,689
<font color="#CCCCCC">to be close</font><font color="#E5E5E5"> to the device so it's much</font>

535
00:22:53,010 --> 00:22:59,520
easier<font color="#CCCCCC"> to attack</font><font color="#E5E5E5"> now another elements</font>

536
00:22:57,690 --> 00:23:02,700
that influence the impact<font color="#E5E5E5"> of the attack</font>

537
00:22:59,520 --> 00:23:05,760
is the<font color="#E5E5E5"> specific implementation you are</font>

538
00:23:02,700 --> 00:23:09,150
attacking<font color="#E5E5E5"> for example if we consider iOS</font>

539
00:23:05,760 --> 00:23:10,890
10 or Windows then the<font color="#CCCCCC"> four-way</font>

540
00:23:09,150 --> 00:23:12,960
handshake is not vulnerable<font color="#E5E5E5"> because</font>

541
00:23:10,890 --> 00:23:17,030
<font color="#E5E5E5">these two optimum operating systems</font>

542
00:23:12,960 --> 00:23:21,080
<font color="#E5E5E5">don't really follow the standard in</font>

543
00:23:17,030 --> 00:23:23,700
particular they do not<font color="#CCCCCC"> accept</font><font color="#E5E5E5"> on process</font>

544
00:23:21,080 --> 00:23:25,590
retransmissions of<font color="#CCCCCC"> MAGIX three of the</font>

545
00:23:23,700 --> 00:23:28,490
handshake<font color="#CCCCCC"> and as a result you can't</font>

546
00:23:25,590 --> 00:23:30,810
apply<font color="#E5E5E5"> the key reinstallation attack</font>

547
00:23:28,490 --> 00:23:32,490
however<font color="#CCCCCC"> I do want to remark</font><font color="#E5E5E5"> here that</font>

548
00:23:30,810 --> 00:23:34,290
these two<font color="#E5E5E5"> operating</font><font color="#CCCCCC"> systems are</font>

549
00:23:32,490 --> 00:23:36,630
vulnerable<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the group key handshake</font>

550
00:23:34,290 --> 00:23:39,720
<font color="#E5E5E5">attack which allows you</font><font color="#CCCCCC"> to replay</font>

551
00:23:36,630 --> 00:23:41,640
broadcast frames<font color="#E5E5E5"> for some applications</font>

552
00:23:39,720 --> 00:23:45,270
that<font color="#CCCCCC"> can</font><font color="#E5E5E5"> be a security</font><font color="#CCCCCC"> issue</font><font color="#E5E5E5"> but again</font>

553
00:23:41,640 --> 00:23:49,380
the impact is lower than being able<font color="#CCCCCC"> to</font>

554
00:23:45,270 --> 00:23:51,360
decrypt unicast traffic of course one

555
00:23:49,380 --> 00:23:54,060
remark here<font color="#E5E5E5"> I also want to give is</font><font color="#CCCCCC"> that</font>

556
00:23:51,360 --> 00:23:56,909
if you use iOS 11 it does accept

557
00:23:54,060 --> 00:23:58,710
retransmissions of message<font color="#E5E5E5"> 3 meaning</font><font color="#CCCCCC"> the</font>

558
00:23:56,910 --> 00:24:00,990
<font color="#E5E5E5">four-way handshake is vulnerable at</font>

559
00:23:58,710 --> 00:24:05,250
least if you use an unpatched<font color="#E5E5E5"> iOS 10</font>

560
00:24:00,990 --> 00:24:08,940
device now against<font color="#CCCCCC"> linux we also found a</font>

561
00:24:05,250 --> 00:24:10,860
very interesting flaw<font color="#CCCCCC"> namely if you use</font>

562
00:24:08,940 --> 00:24:13,740
the Wi-Fi client<font color="#E5E5E5"> on linux which is</font>

563
00:24:10,860 --> 00:24:17,719
called<font color="#E5E5E5"> wks applicants and in particular</font>

564
00:24:13,740 --> 00:24:20,940
if you<font color="#CCCCCC"> use</font><font color="#E5E5E5"> version 2.4 or higher then</font>

565
00:24:17,720 --> 00:24:22,940
instead of reinstalling the key it will

566
00:24:20,940 --> 00:24:25,200
install an all-zero<font color="#CCCCCC"> encryption key and</font>

567
00:24:22,940 --> 00:24:29,940
then of<font color="#CCCCCC"> course all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> security</font>

568
00:24:25,200 --> 00:24:31,679
<font color="#E5E5E5">is gone now how is it possible that this</font>

569
00:24:29,940 --> 00:24:33,330
client<font color="#E5E5E5"> is installing an all-zero</font>

570
00:24:31,679 --> 00:24:35,010
<font color="#E5E5E5">encryption key I mean you're probably</font>

571
00:24:33,330 --> 00:24:39,408
thinking why on earth are they<font color="#CCCCCC"> doing</font>

572
00:24:35,010 --> 00:24:41,940
that<font color="#E5E5E5"> well to explain this let's again</font>

573
00:24:39,409 --> 00:24:43,889
<font color="#CCCCCC">use a scenario where</font><font color="#E5E5E5"> the client in this</font>

574
00:24:41,940 --> 00:24:46,289
<font color="#CCCCCC">case the Android is connecting to the</font>

575
00:24:43,889 --> 00:24:48,750
<font color="#E5E5E5">access points on the right and in this</font>

576
00:24:46,289 --> 00:24:50,940
<font color="#E5E5E5">case we're going to zoom in a bit on the</font>

577
00:24:48,750 --> 00:24:53,340
Android device<font color="#E5E5E5"> and we're going to look</font>

578
00:24:50,940 --> 00:24:56,909
at two components that implement Wi-Fi

579
00:24:53,340 --> 00:24:59,189
we have first here on the<font color="#CCCCCC"> Left</font><font color="#E5E5E5"> WPA</font>

580
00:24:56,909 --> 00:25:01,710
supplicant which implements the four-way

581
00:24:59,190 --> 00:25:03,929
handshake<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we also have the kernel in</font>

582
00:25:01,710 --> 00:25:06,149
this case<font color="#CCCCCC"> Linux which</font><font color="#E5E5E5"> will take the</font>

583
00:25:03,929 --> 00:25:11,549
negotiated encryption key and<font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> use</font>

584
00:25:06,149 --> 00:25:15,479
<font color="#E5E5E5">it to encrypt data frames and the way</font>

585
00:25:11,549 --> 00:25:17,279
the<font color="#E5E5E5"> tech now works to cause Android or</font>

586
00:25:15,480 --> 00:25:21,630
Linux<font color="#CCCCCC"> into using this all zero</font>

587
00:25:17,279 --> 00:25:22,799
encryption key is<font color="#E5E5E5"> that we again</font><font color="#CCCCCC"> assume</font>

588
00:25:21,630 --> 00:25:24,659
<font color="#CCCCCC">that</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> a man on</font><font color="#E5E5E5"> the middle</font>

589
00:25:22,799 --> 00:25:27,720
position<font color="#E5E5E5"> so again as an attacker</font><font color="#CCCCCC"> you are</font>

590
00:25:24,659 --> 00:25:30,529
able<font color="#E5E5E5"> to block</font><font color="#CCCCCC"> packets on similar to a</font>

591
00:25:27,720 --> 00:25:33,120
<font color="#E5E5E5">normal key reinstallation attack we</font>

592
00:25:30,529 --> 00:25:35,039
execute<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first part of the 4 Way</font>

593
00:25:33,120 --> 00:25:36,449
<font color="#CCCCCC">handshake without any modification we</font>

594
00:25:35,039 --> 00:25:40,080
simply forward<font color="#E5E5E5"> the frames</font>

595
00:25:36,450 --> 00:25:42,899
however the attacker does not forward

596
00:25:40,080 --> 00:25:44,789
message for to the access<font color="#CCCCCC"> point which is</font>

597
00:25:42,899 --> 00:25:46,830
<font color="#E5E5E5">completely the same</font><font color="#CCCCCC"> idea</font><font color="#E5E5E5"> as when</font>

598
00:25:44,789 --> 00:25:50,730
attacking the<font color="#CCCCCC"> four-way handshake</font>

599
00:25:46,830 --> 00:25:54,750
sorry in a normal situation<font color="#E5E5E5"> now the</font>

600
00:25:50,730 --> 00:25:57,929
particular<font color="#CCCCCC"> thing that WPA supplicants on</font>

601
00:25:54,750 --> 00:26:01,139
<font color="#CCCCCC">linux does is</font><font color="#E5E5E5"> that after receiving</font>

602
00:25:57,929 --> 00:26:03,419
message<font color="#CCCCCC"> 3 on sending message for it will</font>

603
00:26:01,139 --> 00:26:06,240
command the<font color="#CCCCCC"> Linux</font><font color="#E5E5E5"> kernel into installing</font>

604
00:26:03,419 --> 00:26:08,340
<font color="#E5E5E5">the negotiated encryption key on the</font>

605
00:26:06,240 --> 00:26:10,799
Linux kernel<font color="#E5E5E5"> in turn will instruct a</font>

606
00:26:08,340 --> 00:26:12,209
driver to save this<font color="#E5E5E5"> encryption key so</font>

607
00:26:10,799 --> 00:26:14,399
the driver can then start encrypting

608
00:26:12,210 --> 00:26:16,230
data frames<font color="#E5E5E5"> now this means that</font>

609
00:26:14,399 --> 00:26:20,039
<font color="#E5E5E5">encryption key</font><font color="#CCCCCC"> is stored</font><font color="#E5E5E5"> in the driver</font>

610
00:26:16,230 --> 00:26:21,929
<font color="#E5E5E5">and WPA supplicants no longer needs to</font>

611
00:26:20,039 --> 00:26:23,970
<font color="#E5E5E5">keep track</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> encryption key so it</font>

612
00:26:21,929 --> 00:26:25,980
will clear it from<font color="#E5E5E5"> memory</font><font color="#CCCCCC"> and it will</font>

613
00:26:23,970 --> 00:26:29,039
set this buffer where the<font color="#E5E5E5"> encryption key</font>

614
00:26:25,980 --> 00:26:31,380
<font color="#CCCCCC">is saved</font><font color="#E5E5E5"> to all zeros</font><font color="#CCCCCC"> so if we now</font>

615
00:26:29,039 --> 00:26:33,539
continue with<font color="#E5E5E5"> the handshake and while</font>

616
00:26:31,380 --> 00:26:34,799
with the attack on if the access point

617
00:26:33,539 --> 00:26:38,070
<font color="#E5E5E5">now retransmits</font>

618
00:26:34,799 --> 00:26:39,030
<font color="#CCCCCC">matches message 3 then</font><font color="#E5E5E5"> WPS applicant</font>

619
00:26:38,070 --> 00:26:42,149
will accept<font color="#E5E5E5"> this mess</font>

620
00:26:39,030 --> 00:26:44,250
<font color="#CCCCCC">- a reply using message four and then</font><font color="#E5E5E5"> it</font>

621
00:26:42,150 --> 00:26:46,260
will try<font color="#E5E5E5"> to reinstall the key on it will</font>

622
00:26:44,250 --> 00:26:48,900
instruct a<font color="#E5E5E5"> Linux kernel into saying hey</font>

623
00:26:46,260 --> 00:26:50,910
please install this<font color="#E5E5E5"> encryption key on</font>

624
00:26:48,900 --> 00:26:53,610
this encryption<font color="#E5E5E5"> key is saved at this</font><font color="#CCCCCC"> bug</font>

625
00:26:50,910 --> 00:26:55,220
buffer in my memory<font color="#E5E5E5"> but of course that</font>

626
00:26:53,610 --> 00:26:57,719
buffer<font color="#E5E5E5"> has been cleared</font><font color="#CCCCCC"> it's all zeros</font>

627
00:26:55,220 --> 00:27:00,630
<font color="#CCCCCC">so now it's instructing the</font><font color="#E5E5E5"> Linux kernel</font>

628
00:26:57,720 --> 00:27:02,550
kernel to install an<font color="#E5E5E5"> all zero key and of</font>

629
00:27:00,630 --> 00:27:04,530
course once you're using an all<font color="#CCCCCC"> zero key</font>

630
00:27:02,550 --> 00:27:06,629
you can intercept<font color="#E5E5E5"> all data that the</font>

631
00:27:04,530 --> 00:27:09,030
<font color="#CCCCCC">client is transmitting</font><font color="#E5E5E5"> on you can also</font>

632
00:27:06,630 --> 00:27:12,630
send any<font color="#CCCCCC"> data to the</font><font color="#E5E5E5"> client that</font><font color="#CCCCCC"> you</font>

633
00:27:09,030 --> 00:27:16,760
<font color="#E5E5E5">want so at this point you may be</font>

634
00:27:12,630 --> 00:27:19,380
wondering like is my device affected and

635
00:27:16,760 --> 00:27:22,410
<font color="#E5E5E5">you can use the scripts at the following</font>

636
00:27:19,380 --> 00:27:25,620
<font color="#E5E5E5">URL to test if your device is affected</font>

637
00:27:22,410 --> 00:27:28,050
by an attack<font color="#E5E5E5"> you can use these scripts</font>

638
00:27:25,620 --> 00:27:31,620
to test<font color="#E5E5E5"> both client devices and also</font>

639
00:27:28,050 --> 00:27:35,550
<font color="#E5E5E5">access points and I personally tested</font>

640
00:27:31,620 --> 00:27:38,370
this on<font color="#CCCCCC"> Kali</font><font color="#E5E5E5"> Linux so it works on for</font>

641
00:27:35,550 --> 00:27:41,370
example<font color="#CCCCCC"> a virtual</font><font color="#E5E5E5"> machine now I do</font>

642
00:27:38,370 --> 00:27:43,169
advise you to use a Wi-Fi<font color="#CCCCCC"> tunnel that we</font>

643
00:27:41,370 --> 00:27:45,719
<font color="#E5E5E5">tested or someone else has successfully</font>

644
00:27:43,170 --> 00:27:47,430
<font color="#E5E5E5">used because sometimes the hardware</font>

645
00:27:45,720 --> 00:27:50,610
encryption of the<font color="#E5E5E5"> Wi-Fi dongle might</font>

646
00:27:47,430 --> 00:27:52,080
interfere<font color="#E5E5E5"> with our test script so if you</font>

647
00:27:50,610 --> 00:27:53,820
use<font color="#E5E5E5"> these scripts try to disable</font>

648
00:27:52,080 --> 00:27:55,790
hardware<font color="#E5E5E5"> encryption and use a Wi-Fi</font>

649
00:27:53,820 --> 00:28:01,639
<font color="#CCCCCC">dongle that</font><font color="#E5E5E5"> we tested because otherwise</font>

650
00:27:55,790 --> 00:28:04,409
<font color="#E5E5E5">these scripts might not be reliable</font><font color="#CCCCCC"> and</font>

651
00:28:01,640 --> 00:28:07,410
<font color="#CCCCCC">one thing you're likely going</font><font color="#E5E5E5"> to notice</font>

652
00:28:04,410 --> 00:28:10,770
is<font color="#E5E5E5"> when you are going</font><font color="#CCCCCC"> to test if devices</font>

653
00:28:07,410 --> 00:28:13,020
are<font color="#CCCCCC"> affected affect</font><font color="#E5E5E5"> it is that some</font>

654
00:28:10,770 --> 00:28:14,639
clients<font color="#E5E5E5"> will still be affected anteye</font>

655
00:28:13,020 --> 00:28:16,950
will also be affected<font color="#CCCCCC"> and half-a-year</font>

656
00:28:14,640 --> 00:28:21,990
<font color="#E5E5E5">underneath on the new year because they</font>

657
00:28:16,950 --> 00:28:24,090
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> get updates luckily we can try to</font>

658
00:28:21,990 --> 00:28:27,240
mitigate<font color="#CCCCCC"> this problem</font><font color="#E5E5E5"> somewhat in</font>

659
00:28:24,090 --> 00:28:29,939
particular we<font color="#E5E5E5"> can modify the access</font>

660
00:28:27,240 --> 00:28:33,120
point so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> clients that are connected</font>

661
00:28:29,940 --> 00:28:34,920
to such modified access points are not

662
00:28:33,120 --> 00:28:37,260
vulnerable<font color="#E5E5E5"> to the most serious attacks</font>

663
00:28:34,920 --> 00:28:39,570
<font color="#E5E5E5">that we discovered in particular if we</font>

664
00:28:37,260 --> 00:28:42,629
<font color="#E5E5E5">modify an access point such that</font><font color="#CCCCCC"> it no</font>

665
00:28:39,570 --> 00:28:44,639
longer<font color="#E5E5E5"> retransmits message</font><font color="#CCCCCC"> 3 on the and</font>

666
00:28:42,630 --> 00:28:46,980
that<font color="#CCCCCC"> it doesn't</font><font color="#E5E5E5"> retransmit the first</font>

667
00:28:44,640 --> 00:28:48,840
message of the group key handshake then

668
00:28:46,980 --> 00:28:51,429
any client<font color="#CCCCCC"> that is connected to such a</font>

669
00:28:48,840 --> 00:28:54,009
modified access points

670
00:28:51,429 --> 00:28:56,789
it's no<font color="#CCCCCC"> longer can no longer</font><font color="#E5E5E5"> be attacked</font>

671
00:28:54,009 --> 00:29:01,239
<font color="#E5E5E5">against a</font><font color="#CCCCCC"> four-way and</font><font color="#E5E5E5"> group</font><font color="#CCCCCC"> K</font><font color="#E5E5E5"> handshake</font>

672
00:28:56,789 --> 00:29:03,009
<font color="#E5E5E5">now it's even though this works it's a</font>

673
00:29:01,239 --> 00:29:05,799
bit unclear what<font color="#CCCCCC"> the impact on practice</font>

674
00:29:03,009 --> 00:29:07,749
<font color="#E5E5E5">is about</font><font color="#CCCCCC"> his modification because it</font>

675
00:29:05,799 --> 00:29:09,580
might<font color="#E5E5E5"> make the handshake a bit more and</font>

676
00:29:07,749 --> 00:29:12,759
<font color="#CCCCCC">clearer for</font><font color="#E5E5E5"> example when there's a lot</font>

677
00:29:09,580 --> 00:29:14,049
of noise on frames are lost<font color="#CCCCCC"> on of course</font>

678
00:29:12,759 --> 00:29:15,969
<font color="#CCCCCC">it's still the case that if you're</font>

679
00:29:14,049 --> 00:29:17,830
vulnerable device is connected<font color="#CCCCCC"> to an</font>

680
00:29:15,969 --> 00:29:20,440
access point<font color="#CCCCCC"> that</font><font color="#E5E5E5"> doesn't implement</font>

681
00:29:17,830 --> 00:29:22,809
these extra modifications<font color="#E5E5E5"> then of course</font>

682
00:29:20,440 --> 00:29:24,519
can still be attacked but for example<font color="#CCCCCC"> if</font>

683
00:29:22,809 --> 00:29:26,440
you're a hospital<font color="#E5E5E5"> ants you can't update</font>

684
00:29:24,519 --> 00:29:29,200
your client devices<font color="#E5E5E5"> then modifying your</font>

685
00:29:26,440 --> 00:29:32,499
access point in<font color="#E5E5E5"> this way</font><font color="#CCCCCC"> is one option</font>

686
00:29:29,200 --> 00:29:39,309
to greatly reduce<font color="#CCCCCC"> the impacts of our</font>

687
00:29:32,499 --> 00:29:41,259
findings<font color="#CCCCCC"> okay so when I was reading</font><font color="#E5E5E5"> the</font>

688
00:29:39,309 --> 00:29:43,690
<font color="#E5E5E5">internet about my research I discovered</font>

689
00:29:41,259 --> 00:29:47,169
a<font color="#E5E5E5"> lot of misconceptions on discussions</font>

690
00:29:43,690 --> 00:29:50,049
about the<font color="#E5E5E5"> attack so I'm going</font><font color="#CCCCCC"> to discuss</font>

691
00:29:47,169 --> 00:29:53,289
a few that I encountered<font color="#CCCCCC"> and one of the</font>

692
00:29:50,049 --> 00:29:56,889
first misconceptions that<font color="#E5E5E5"> I saw is that</font>

693
00:29:53,289 --> 00:29:59,190
it was claimed that<font color="#CCCCCC"> you only have to</font>

694
00:29:56,889 --> 00:30:01,779
update<font color="#E5E5E5"> the</font><font color="#CCCCCC"> clients or the</font><font color="#E5E5E5"> access point</font>

695
00:29:59,190 --> 00:30:04,089
<font color="#E5E5E5">now of course if your access point</font>

696
00:30:01,779 --> 00:30:07,089
<font color="#E5E5E5">implements these extra modifications</font>

697
00:30:04,089 --> 00:30:08,678
that I just mentioned<font color="#CCCCCC"> then you can get</font>

698
00:30:07,089 --> 00:30:11,320
away with<font color="#E5E5E5"> only updating the access</font>

699
00:30:08,679 --> 00:30:13,450
<font color="#CCCCCC">points however most</font><font color="#E5E5E5"> updates of Wi-Fi</font>

700
00:30:11,320 --> 00:30:15,249
access points simply<font color="#E5E5E5"> fix the flaws</font><font color="#CCCCCC"> in</font>

701
00:30:13,450 --> 00:30:17,589
<font color="#CCCCCC">the access point and</font><font color="#E5E5E5"> they don't include</font>

702
00:30:15,249 --> 00:30:19,809
these extra countermeasures so in

703
00:30:17,589 --> 00:30:22,149
<font color="#E5E5E5">general you need to update both your</font>

704
00:30:19,809 --> 00:30:26,289
access point<font color="#CCCCCC"> and</font><font color="#E5E5E5"> your clients if they</font>

705
00:30:22,149 --> 00:30:28,869
are vulnerable another remark<font color="#E5E5E5"> that is</font>

706
00:30:26,289 --> 00:30:31,029
often<font color="#E5E5E5"> made is yeah it's a nice attack</font>

707
00:30:28,869 --> 00:30:33,580
but you need to be<font color="#E5E5E5"> physically close to</font>

708
00:30:31,029 --> 00:30:36,429
<font color="#CCCCCC">the victim on the network in order to</font>

709
00:30:33,580 --> 00:30:38,168
pull<font color="#CCCCCC"> off this attack</font><font color="#E5E5E5"> but that's not</font>

710
00:30:36,429 --> 00:30:41,889
really<font color="#E5E5E5"> the case</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> we can use</font>

711
00:30:38,169 --> 00:30:44,139
<font color="#E5E5E5">special antenna to be</font><font color="#CCCCCC"> able to manipulate</font>

712
00:30:41,889 --> 00:30:47,258
<font color="#E5E5E5">a Wi-Fi network</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is quite far away</font>

713
00:30:44,139 --> 00:30:49,119
for example<font color="#E5E5E5"> researchers have shown that</font>

714
00:30:47,259 --> 00:30:52,239
a connect<font color="#E5E5E5"> can connect to a network that</font>

715
00:30:49,119 --> 00:30:54,879
<font color="#CCCCCC">is up</font><font color="#E5E5E5"> to two miles away and if we looked</font>

716
00:30:52,239 --> 00:30:58,059
at<font color="#CCCCCC"> leaks and as a documents of</font><font color="#E5E5E5"> Snowden</font>

717
00:30:54,879 --> 00:31:00,189
then the NSA also made their<font color="#CCCCCC"> own custom</font>

718
00:30:58,059 --> 00:31:02,129
antenna on in their slides they

719
00:31:00,190 --> 00:31:04,980
mentioned that<font color="#E5E5E5"> they</font><font color="#CCCCCC"> were able to</font>

720
00:31:02,130 --> 00:31:06,720
attack a Wi-Fi network<font color="#CCCCCC"> up to eight miles</font>

721
00:31:04,980 --> 00:31:09,150
away<font color="#CCCCCC"> of course they had a clear line of</font>

722
00:31:06,720 --> 00:31:12,860
<font color="#E5E5E5">sight but you know if the NSA can do</font>

723
00:31:09,150 --> 00:31:15,539
eight miles we can surely do two miles

724
00:31:12,860 --> 00:31:19,020
another misconception that I heard is

725
00:31:15,539 --> 00:31:21,780
<font color="#CCCCCC">that as the attacker</font><font color="#E5E5E5"> you need to be able</font>

726
00:31:19,020 --> 00:31:23,460
<font color="#CCCCCC">to connect to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> network yourself</font><font color="#E5E5E5"> you</font>

727
00:31:21,780 --> 00:31:25,350
need<font color="#E5E5E5"> to be somehow associated to the</font>

728
00:31:23,460 --> 00:31:26,700
network you're trying to attack which in

729
00:31:25,350 --> 00:31:28,889
practice would mean you<font color="#E5E5E5"> have the</font>

730
00:31:26,700 --> 00:31:30,600
password<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the network but this is not</font>

731
00:31:28,890 --> 00:31:32,850
<font color="#E5E5E5">the case you</font><font color="#CCCCCC"> don't need to know anything</font>

732
00:31:30,600 --> 00:31:34,918
<font color="#E5E5E5">about a network</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> simply need to</font><font color="#CCCCCC"> be</font>

733
00:31:32,850 --> 00:31:36,600
close enough<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the victim onto the</font>

734
00:31:34,919 --> 00:31:42,900
access<font color="#CCCCCC"> point and then you</font><font color="#E5E5E5"> can carry out</font>

735
00:31:36,600 --> 00:31:47,219
<font color="#CCCCCC">the attack so another important remark</font>

736
00:31:42,900 --> 00:31:50,220
<font color="#E5E5E5">is</font><font color="#CCCCCC"> that you might say that okay</font><font color="#E5E5E5"> you can</font>

737
00:31:47,220 --> 00:31:52,710
decrypt<font color="#CCCCCC"> data frames that</font><font color="#E5E5E5"> are sent right</font>

738
00:31:50,220 --> 00:31:55,049
after the<font color="#E5E5E5"> four-way handshake but in</font>

739
00:31:52,710 --> 00:31:57,960
<font color="#E5E5E5">general when you</font><font color="#CCCCCC"> just connect it to a</font>

740
00:31:55,049 --> 00:31:58,860
network<font color="#E5E5E5"> your device isn't really sending</font>

741
00:31:57,960 --> 00:32:00,870
interesting traffic

742
00:31:58,860 --> 00:32:03,240
<font color="#CCCCCC">I mean it's sending ARP requests</font><font color="#E5E5E5"> it's</font>

743
00:32:00,870 --> 00:32:06,059
<font color="#E5E5E5">ending DHCP packets but there is no</font>

744
00:32:03,240 --> 00:32:09,780
useful<font color="#E5E5E5"> data at</font><font color="#CCCCCC"> that point of the</font>

745
00:32:06,059 --> 00:32:11,399
connection however what we<font color="#E5E5E5"> can do is we</font>

746
00:32:09,780 --> 00:32:13,530
<font color="#E5E5E5">can first let the victim connect to the</font>

747
00:32:11,400 --> 00:32:15,510
<font color="#E5E5E5">access points</font><font color="#CCCCCC"> the victim will start</font>

748
00:32:13,530 --> 00:32:17,700
surfing the internet<font color="#E5E5E5"> on at that point</font>

749
00:32:15,510 --> 00:32:19,679
when it's<font color="#CCCCCC"> already actively</font><font color="#E5E5E5"> connected to</font>

750
00:32:17,700 --> 00:32:21,990
the<font color="#E5E5E5"> internet when it has open TCP</font>

751
00:32:19,679 --> 00:32:25,530
connections what we can do then<font color="#E5E5E5"> is we</font>

752
00:32:21,990 --> 00:32:28,380
can do tentacle<font color="#E5E5E5"> the Wi-Fi clients from</font>

753
00:32:25,530 --> 00:32:30,750
<font color="#CCCCCC">the</font><font color="#E5E5E5"> network and then all operating</font>

754
00:32:28,380 --> 00:32:33,000
systems<font color="#CCCCCC"> will immediately try to perform</font>

755
00:32:30,750 --> 00:32:34,860
a new four-way handshake on this

756
00:32:33,000 --> 00:32:37,350
four-way handshake is performed while

757
00:32:34,860 --> 00:32:40,080
the TCP connections are still open<font color="#E5E5E5"> and</font>

758
00:32:37,350 --> 00:32:42,330
<font color="#E5E5E5">running on in this case the four Way</font>

759
00:32:40,080 --> 00:32:44,549
handshake then completes<font color="#E5E5E5"> and immediately</font>

760
00:32:42,330 --> 00:32:47,610
after<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> client will send any cute</font>

761
00:32:44,549 --> 00:32:50,580
data of these TCP connections<font color="#E5E5E5"> and we can</font>

762
00:32:47,610 --> 00:32:53,668
use that<font color="#CCCCCC"> to then decrypt interesting</font>

763
00:32:50,580 --> 00:32:55,860
data frames so to summarize we can

764
00:32:53,669 --> 00:32:58,559
trigger these four-way handshakes

765
00:32:55,860 --> 00:33:02,399
<font color="#E5E5E5">whenever we expect a client to send</font>

766
00:32:58,559 --> 00:33:05,490
interesting data another misconception

767
00:33:02,400 --> 00:33:07,140
is that if you attack<font color="#CCCCCC"> the four-way</font>

768
00:33:05,490 --> 00:33:09,419
handshake<font color="#CCCCCC"> you need to obtain this</font>

769
00:33:07,140 --> 00:33:12,659
special channel based man-in-the-middle

770
00:33:09,419 --> 00:33:14,669
<font color="#CCCCCC">position</font><font color="#E5E5E5"> and you might say yeah but that</font>

771
00:33:12,659 --> 00:33:15,840
might<font color="#E5E5E5"> be hard to do because in order to</font>

772
00:33:14,669 --> 00:33:17,850
<font color="#E5E5E5">trick the clients</font>

773
00:33:15,840 --> 00:33:21,409
and to attack in your<font color="#CCCCCC"> rope access points</font>

774
00:33:17,850 --> 00:33:23,520
you<font color="#E5E5E5"> need to have a high signal strength</font>

775
00:33:21,410 --> 00:33:25,890
however there<font color="#E5E5E5"> is a way to work around</font>

776
00:33:23,520 --> 00:33:28,350
this because<font color="#CCCCCC"> as an attacker we can send</font>

777
00:33:25,890 --> 00:33:32,220
special channel switch announcements

778
00:33:28,350 --> 00:33:33,480
which force the clients into connecting

779
00:33:32,220 --> 00:33:35,940
to the access<font color="#E5E5E5"> point</font><font color="#CCCCCC"> on a different</font>

780
00:33:33,480 --> 00:33:36,660
<font color="#CCCCCC">channel so we</font><font color="#E5E5E5"> can basically instruct</font>

781
00:33:35,940 --> 00:33:39,480
your device

782
00:33:36,660 --> 00:33:41,070
hey and the access point<font color="#E5E5E5"> and now</font><font color="#CCCCCC"> I'm now</font>

783
00:33:39,480 --> 00:33:43,140
<font color="#E5E5E5">on this different</font><font color="#CCCCCC"> channel and you need</font>

784
00:33:41,070 --> 00:33:45,149
to use this different<font color="#CCCCCC"> channel so we</font><font color="#E5E5E5"> can</font>

785
00:33:43,140 --> 00:33:47,070
send the special frames to command the

786
00:33:45,150 --> 00:33:49,320
clients<font color="#E5E5E5"> into connecting to a rogue</font>

787
00:33:47,070 --> 00:33:51,300
access point<font color="#CCCCCC"> and this does not rely on</font>

788
00:33:49,320 --> 00:33:55,010
<font color="#CCCCCC">the signal strength</font><font color="#E5E5E5"> that we as an</font>

789
00:33:51,300 --> 00:33:58,050
attacker have now<font color="#E5E5E5"> another remark is that</font>

790
00:33:55,010 --> 00:34:01,950
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> implementing these attacks</font><font color="#CCCCCC"> is hard</font>

791
00:33:58,050 --> 00:34:03,389
<font color="#E5E5E5">and I can agree</font><font color="#CCCCCC"> with that you do need</font><font color="#E5E5E5"> to</font>

792
00:34:01,950 --> 00:34:06,450
have<font color="#E5E5E5"> some backgrounds in order to</font>

793
00:34:03,390 --> 00:34:08,340
implement<font color="#E5E5E5"> these attacks but once you</font>

794
00:34:06,450 --> 00:34:09,929
have written the script<font color="#E5E5E5"> well then you</font>

795
00:34:08,340 --> 00:34:11,940
can just<font color="#CCCCCC"> execute the script on everyone</font>

796
00:34:09,929 --> 00:34:14,969
everyone<font color="#CCCCCC"> can perform</font><font color="#E5E5E5"> the attack</font><font color="#CCCCCC"> it's the</font>

797
00:34:11,940 --> 00:34:17,280
same with<font color="#E5E5E5"> a tricky</font><font color="#CCCCCC"> zero J or</font><font color="#E5E5E5"> a zero or</font>

798
00:34:14,969 --> 00:34:19,529
tricky<font color="#E5E5E5"> buffer overflow yeah it can be</font>

799
00:34:17,280 --> 00:34:21,660
<font color="#E5E5E5">time-consuming to write but once you</font>

800
00:34:19,530 --> 00:34:23,490
it's written<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> you can just</font>

801
00:34:21,659 --> 00:34:27,239
execute<font color="#E5E5E5"> the script and start carrying</font>

802
00:34:23,489 --> 00:34:30,000
out attacks then some final

803
00:34:27,239 --> 00:34:32,870
misconceptions<font color="#E5E5E5"> and I personally found</font>

804
00:34:30,000 --> 00:34:35,070
<font color="#CCCCCC">these</font><font color="#E5E5E5"> the most strange ones is that I</font>

805
00:34:32,870 --> 00:34:37,830
sometimes read that yeah if you use<font color="#CCCCCC"> a</font>

806
00:34:35,070 --> 00:34:40,320
CSC<font color="#CCCCCC"> CMP</font><font color="#E5E5E5"> and then you don't need really</font>

807
00:34:37,830 --> 00:34:42,690
<font color="#CCCCCC">need to worry but as I explained if you</font>

808
00:34:40,320 --> 00:34:45,570
use a<font color="#CCCCCC"> SCC MP it's still possible to</font>

809
00:34:42,690 --> 00:34:47,250
<font color="#E5E5E5">decrypt frames on to replay frames the</font>

810
00:34:45,570 --> 00:34:52,130
only thing that is<font color="#E5E5E5"> not possible</font><font color="#CCCCCC"> if you</font>

811
00:34:47,250 --> 00:34:54,870
use a CSC CMP<font color="#E5E5E5"> is to forge packets</font>

812
00:34:52,130 --> 00:34:57,480
another remark is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> enterprise</font>

813
00:34:54,870 --> 00:35:00,120
<font color="#CCCCCC">networks so those that use either on</font><font color="#E5E5E5"> the</font>

814
00:34:57,480 --> 00:35:02,100
802<font color="#E5E5E5"> dot</font><font color="#CCCCCC"> 1x authentication for example</font>

815
00:35:00,120 --> 00:35:04,380
with a username<font color="#E5E5E5"> on a password that</font><font color="#CCCCCC"> they</font>

816
00:35:02,100 --> 00:35:07,020
aren't affected<font color="#CCCCCC"> but that's not the case</font>

817
00:35:04,380 --> 00:35:10,080
<font color="#CCCCCC">because in practice every protected</font>

818
00:35:07,020 --> 00:35:11,070
Wi-Fi network is affected because<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of</font>

819
00:35:10,080 --> 00:35:14,310
them at once

820
00:35:11,070 --> 00:35:15,900
at one point<font color="#E5E5E5"> when connecting to</font><font color="#CCCCCC"> the</font>

821
00:35:14,310 --> 00:35:18,290
network<font color="#CCCCCC"> they will use</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> four way</font>

822
00:35:15,900 --> 00:35:20,550
<font color="#E5E5E5">handshake meaning they can</font><font color="#CCCCCC"> be attacked</font>

823
00:35:18,290 --> 00:35:23,310
now then there are also<font color="#E5E5E5"> other people who</font>

824
00:35:20,550 --> 00:35:26,070
<font color="#E5E5E5">say wow this is</font><font color="#CCCCCC"> very serious</font><font color="#E5E5E5"> this is the</font>

825
00:35:23,310 --> 00:35:27,589
end of the world<font color="#CCCCCC"> but let's not</font><font color="#E5E5E5"> get</font>

826
00:35:26,070 --> 00:35:30,410
<font color="#E5E5E5">carried</font><font color="#CCCCCC"> away</font>

827
00:35:27,589 --> 00:35:33,049
yes<font color="#E5E5E5"> this is a serious vulnerability it</font>

828
00:35:30,410 --> 00:35:35,359
is also very surprising<font color="#CCCCCC"> because we had</font>

829
00:35:33,049 --> 00:35:36,529
<font color="#E5E5E5">these formal proofs yet now it's still</font>

830
00:35:35,359 --> 00:35:38,348
<font color="#CCCCCC">vulnerable I think that's the most</font>

831
00:35:36,529 --> 00:35:40,819
interesting<font color="#E5E5E5"> part really about this work</font>

832
00:35:38,349 --> 00:35:42,799
<font color="#CCCCCC">these protocols were mathematically</font>

833
00:35:40,819 --> 00:35:45,589
proven to be secure<font color="#E5E5E5"> yet we still found</font>

834
00:35:42,799 --> 00:35:47,390
an attack<font color="#E5E5E5"> so yeah we have to patch this</font>

835
00:35:45,589 --> 00:35:49,219
but let's also not<font color="#E5E5E5"> get carried away with</font>

836
00:35:47,390 --> 00:35:53,449
saying<font color="#E5E5E5"> that this is the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> of the world</font>

837
00:35:49,219 --> 00:35:55,449
<font color="#E5E5E5">it's not so as the final part of the</font>

838
00:35:53,449 --> 00:35:58,309
<font color="#E5E5E5">presentation I'm going to discuss a few</font>

839
00:35:55,449 --> 00:36:01,759
lessons that we can learn from<font color="#E5E5E5"> this</font>

840
00:35:58,309 --> 00:36:03,859
research<font color="#E5E5E5"> and well I already mentioned</font>

841
00:36:01,759 --> 00:36:06,349
the first<font color="#E5E5E5"> one is</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> four-way</font>

842
00:36:03,859 --> 00:36:08,029
handshake was proven<font color="#CCCCCC"> to be secure</font><font color="#E5E5E5"> on to</font>

843
00:36:06,349 --> 00:36:11,089
the<font color="#E5E5E5"> encryption protocol after</font><font color="#CCCCCC"> it in</font>

844
00:36:08,029 --> 00:36:14,029
particular<font color="#CCCCCC"> a</font><font color="#E5E5E5"> sec MP that has also</font><font color="#CCCCCC"> been</font>

845
00:36:11,089 --> 00:36:17,180
<font color="#E5E5E5">proven to be secure but interestingly</font>

846
00:36:14,029 --> 00:36:21,859
when we<font color="#E5E5E5"> combine both</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

847
00:36:17,180 --> 00:36:23,959
technologies<font color="#CCCCCC"> then things go wrong on</font>

848
00:36:21,859 --> 00:36:28,160
what goes wrong is<font color="#CCCCCC"> that this encryption</font>

849
00:36:23,959 --> 00:36:30,348
<font color="#E5E5E5">protocol it's precondition is that</font><font color="#CCCCCC"> a</font>

850
00:36:28,160 --> 00:36:32,959
<font color="#E5E5E5">particular nonce value should only be</font>

851
00:36:30,349 --> 00:36:34,519
used once<font color="#E5E5E5"> however when you combine the</font>

852
00:36:32,959 --> 00:36:35,118
encryption protocol with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> four-way</font>

853
00:36:34,519 --> 00:36:37,399
handshake

854
00:36:35,119 --> 00:36:39,979
then we can avoid this assumption<font color="#E5E5E5"> and</font>

855
00:36:37,400 --> 00:36:42,410
<font color="#E5E5E5">cause this non-spell you this packet</font>

856
00:36:39,979 --> 00:36:44,288
number<font color="#CCCCCC"> to be reused meaning the proof</font><font color="#E5E5E5"> of</font>

857
00:36:42,410 --> 00:36:48,739
the encryption<font color="#E5E5E5"> protocol and no longer</font>

858
00:36:44,289 --> 00:36:52,309
applies<font color="#E5E5E5"> another</font><font color="#CCCCCC"> remark</font><font color="#E5E5E5"> regarding these</font>

859
00:36:48,739 --> 00:36:54,619
formal proofs<font color="#E5E5E5"> is that a different</font><font color="#CCCCCC"> way to</font>

860
00:36:52,309 --> 00:36:57,459
look at it is<font color="#CCCCCC"> that the proof of the 4</font>

861
00:36:54,619 --> 00:37:00,140
Way<font color="#CCCCCC"> handshake did not model these</font>

862
00:36:57,459 --> 00:37:02,569
retransmissions of message<font color="#CCCCCC"> 3 of the</font>

863
00:37:00,140 --> 00:37:04,189
handshake<font color="#E5E5E5"> so you can also say that the</font>

864
00:37:02,569 --> 00:37:08,679
<font color="#E5E5E5">abstract model that was used</font><font color="#CCCCCC"> in these</font>

865
00:37:04,189 --> 00:37:11,299
proofs didn't really reflect reality<font color="#E5E5E5"> and</font>

866
00:37:08,679 --> 00:37:13,429
there's a nice quote describing<font color="#E5E5E5"> this by</font>

867
00:37:11,299 --> 00:37:15,229
Einstein where he said you know in

868
00:37:13,429 --> 00:37:18,319
theory theory and practice<font color="#CCCCCC"> all</font><font color="#E5E5E5"> are the</font>

869
00:37:15,229 --> 00:37:20,538
same<font color="#CCCCCC"> which in this case you interpret</font><font color="#E5E5E5"> us</font>

870
00:37:18,319 --> 00:37:22,849
yeah it's been proven<font color="#E5E5E5"> correct so surely</font>

871
00:37:20,539 --> 00:37:24,559
and practice<font color="#E5E5E5"> we're secure as well but of</font>

872
00:37:22,849 --> 00:37:26,959
<font color="#E5E5E5">course we as hackers know that and</font>

873
00:37:24,559 --> 00:37:32,269
practice<font color="#E5E5E5"> things can always still go</font>

874
00:37:26,959 --> 00:37:33,799
wrong<font color="#E5E5E5"> as we have</font><font color="#CCCCCC"> shown</font><font color="#E5E5E5"> here now</font><font color="#CCCCCC"> a second</font>

875
00:37:32,269 --> 00:37:36,109
<font color="#E5E5E5">lesson that we can</font><font color="#CCCCCC"> learn from this</font>

876
00:37:33,799 --> 00:37:38,779
research is that we should keep

877
00:37:36,109 --> 00:37:40,910
protocols on implementations<font color="#E5E5E5"> simple</font>

878
00:37:38,779 --> 00:37:44,990
<font color="#E5E5E5">because they are easy</font><font color="#CCCCCC"> to</font>

879
00:37:40,910 --> 00:37:48,049
<font color="#E5E5E5">mess up and one example is</font><font color="#CCCCCC"> that during</font>

880
00:37:44,990 --> 00:37:52,600
<font color="#E5E5E5">the research we stopped studied version</font>

881
00:37:48,050 --> 00:37:56,120
2.6 of<font color="#CCCCCC"> WPS applicants on we thought</font><font color="#E5E5E5"> that</font>

882
00:37:52,600 --> 00:37:59,390
it wasn't vulnerable to an attack

883
00:37:56,120 --> 00:38:01,970
against a four-way handshake but<font color="#E5E5E5"> it</font>

884
00:37:59,390 --> 00:38:05,390
turned out<font color="#E5E5E5"> that once we were not a fine</font>

885
00:38:01,970 --> 00:38:08,259
companies someone did find<font color="#CCCCCC"> a method</font><font color="#E5E5E5"> to</font>

886
00:38:05,390 --> 00:38:12,440
exploit<font color="#E5E5E5"> w place applicants</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> six</font>

887
00:38:08,260 --> 00:38:13,910
<font color="#E5E5E5">so the lesson here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> even we didn't</font>

888
00:38:12,440 --> 00:38:16,970
<font color="#CCCCCC">immediately find this attack</font>

889
00:38:13,910 --> 00:38:19,310
so really it's it's just<font color="#E5E5E5"> very hard</font><font color="#CCCCCC"> to</font>

890
00:38:16,970 --> 00:38:22,009
sometimes<font color="#E5E5E5"> manually audit programs</font><font color="#CCCCCC"> and</font>

891
00:38:19,310 --> 00:38:23,870
the way to<font color="#E5E5E5"> address this ideally would be</font>

892
00:38:22,010 --> 00:38:26,420
<font color="#E5E5E5">to firmly formally verify</font>

893
00:38:23,870 --> 00:38:29,680
implementations or at least important

894
00:38:26,420 --> 00:38:34,210
parts such as a crypto implementation

895
00:38:29,680 --> 00:38:36,169
<font color="#E5E5E5">another</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> here is that another</font>

896
00:38:34,210 --> 00:38:39,560
<font color="#E5E5E5">vulnerability that</font><font color="#CCCCCC"> was discovered</font><font color="#E5E5E5"> is</font>

897
00:38:36,170 --> 00:38:43,460
that<font color="#CCCCCC"> when the four-way handshake is used</font>

898
00:38:39,560 --> 00:38:46,190
to rekey<font color="#CCCCCC"> the session key then we found</font>

899
00:38:43,460 --> 00:38:49,850
that<font color="#E5E5E5"> host apd which is the access point</font>

900
00:38:46,190 --> 00:38:53,330
used an open<font color="#CCCCCC"> source access point then it</font>

901
00:38:49,850 --> 00:38:55,370
reused the previous a nonce value and we

902
00:38:53,330 --> 00:38:57,590
also discovered a popular popular

903
00:38:55,370 --> 00:38:59,210
clients<font color="#E5E5E5"> I'm not going to name them yet</font>

904
00:38:57,590 --> 00:39:02,330
<font color="#E5E5E5">because I</font><font color="#CCCCCC"> think they still</font><font color="#E5E5E5"> have to patch</font>

905
00:38:59,210 --> 00:39:04,730
it they<font color="#E5E5E5"> also reuse the ethanol's so the</font>

906
00:39:02,330 --> 00:39:06,950
<font color="#E5E5E5">supplicant random number and we call</font>

907
00:39:04,730 --> 00:39:08,510
these<font color="#CCCCCC"> the anals on the s nons</font><font color="#E5E5E5"> they are</font>

908
00:39:06,950 --> 00:39:10,069
the<font color="#E5E5E5"> random numbers</font><font color="#CCCCCC"> that are combined</font>

909
00:39:08,510 --> 00:39:12,590
with<font color="#E5E5E5"> this pre-shared key to derive</font>

910
00:39:10,070 --> 00:39:15,170
unique session<font color="#E5E5E5"> key now of course if</font>

911
00:39:12,590 --> 00:39:17,480
during your<font color="#CCCCCC"> wiki</font><font color="#E5E5E5"> you are both using</font>

912
00:39:15,170 --> 00:39:19,790
exactly the same random<font color="#CCCCCC"> number as</font><font color="#E5E5E5"> before</font>

913
00:39:17,480 --> 00:39:22,580
then you will renegotiate<font color="#E5E5E5"> exactly the</font>

914
00:39:19,790 --> 00:39:24,830
same key<font color="#E5E5E5"> meaning you will again</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> key</font>

915
00:39:22,580 --> 00:39:27,770
reuse<font color="#E5E5E5"> so this is actually quite a</font>

916
00:39:24,830 --> 00:39:30,250
strange situation because normally

917
00:39:27,770 --> 00:39:33,230
people<font color="#E5E5E5"> recommend to regularly regularly</font>

918
00:39:30,250 --> 00:39:35,780
<font color="#CCCCCC">rekey your</font><font color="#E5E5E5"> session key because this is</font>

919
00:39:33,230 --> 00:39:37,630
supposed<font color="#CCCCCC"> to make attacks harder however</font>

920
00:39:35,780 --> 00:39:40,310
if you have a vulnerable implementation

921
00:39:37,630 --> 00:39:42,290
then it might actually reduce<font color="#CCCCCC"> your</font>

922
00:39:40,310 --> 00:39:45,080
security<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example if you</font><font color="#E5E5E5"> use this</font>

923
00:39:42,290 --> 00:39:48,430
client with hostapd<font color="#E5E5E5"> then you should not</font>

924
00:39:45,080 --> 00:39:52,310
be rekeying your session key<font color="#E5E5E5"> and</font>

925
00:39:48,430 --> 00:39:55,009
<font color="#E5E5E5">interestingly in documents that are</font>

926
00:39:52,310 --> 00:39:59,270
leaked by Wikipedia<font color="#E5E5E5"> by WikiLeaks</font>

927
00:39:55,010 --> 00:40:02,450
in particular certain<font color="#E5E5E5"> CIA CIA documents</font>

928
00:39:59,270 --> 00:40:05,000
<font color="#CCCCCC">there they also warned that</font><font color="#E5E5E5"> rekeying</font>

929
00:40:02,450 --> 00:40:07,189
functionality introduces unnecessary

930
00:40:05,000 --> 00:40:10,070
complexity and<font color="#E5E5E5"> therefore this might</font>

931
00:40:07,190 --> 00:40:12,590
introduce<font color="#E5E5E5"> bugs and this magic matches</font>

932
00:40:10,070 --> 00:40:14,750
very well<font color="#CCCCCC"> with what we just found we</font>

933
00:40:12,590 --> 00:40:16,970
found that if<font color="#CCCCCC"> you try</font><font color="#E5E5E5"> to add features to</font>

934
00:40:14,750 --> 00:40:18,380
<font color="#CCCCCC">a protocol for</font><font color="#E5E5E5"> example efficient</font>

935
00:40:16,970 --> 00:40:20,868
rekeying functionality

936
00:40:18,380 --> 00:40:22,940
well<font color="#E5E5E5"> that increases the implied</font>

937
00:40:20,869 --> 00:40:25,160
complexity of the protocol<font color="#CCCCCC"> and increases</font>

938
00:40:22,940 --> 00:40:27,050
the<font color="#E5E5E5"> complexity of the codes and that can</font>

939
00:40:25,160 --> 00:40:29,720
lead<font color="#CCCCCC"> to vulnerability so the lesson here</font>

940
00:40:27,050 --> 00:40:33,160
is<font color="#CCCCCC"> keep your protocols</font><font color="#E5E5E5"> simple and keep</font>

941
00:40:29,720 --> 00:40:35,540
your implementation<font color="#E5E5E5"> simple as well and</font>

942
00:40:33,160 --> 00:40:39,290
finally<font color="#E5E5E5"> the last</font><font color="#CCCCCC"> lesson that we can</font>

943
00:40:35,540 --> 00:40:41,320
<font color="#CCCCCC">learn</font><font color="#E5E5E5"> is that the specifications on</font><font color="#CCCCCC"> the</font>

944
00:40:39,290 --> 00:40:47,060
standards that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> use they need to be</font>

945
00:40:41,320 --> 00:40:48,619
sufficiently rigorous in particular if

946
00:40:47,060 --> 00:40:52,820
you look<font color="#CCCCCC"> at the early version of the</font>

947
00:40:48,619 --> 00:40:54,980
<font color="#CCCCCC">wpa2 standard then the state machine</font>

948
00:40:52,820 --> 00:40:57,140
<font color="#CCCCCC">which which describes</font><font color="#E5E5E5"> how the Wi-Fi</font>

949
00:40:54,980 --> 00:40:59,240
client is supposed<font color="#CCCCCC"> to be implemented it</font>

950
00:40:57,140 --> 00:41:01,520
doesn't really define when messages are

951
00:40:59,240 --> 00:41:03,140
accepted<font color="#CCCCCC"> you simply</font><font color="#E5E5E5"> have this kind of</font>

952
00:41:01,520 --> 00:41:05,150
pseudo code now you don't need<font color="#E5E5E5"> to be</font>

953
00:41:03,140 --> 00:41:08,240
able to<font color="#E5E5E5"> read this but basically this</font>

954
00:41:05,150 --> 00:41:10,580
code says that<font color="#E5E5E5"> what should happen if you</font>

955
00:41:08,240 --> 00:41:12,589
receive a particular message<font color="#CCCCCC"> but it does</font>

956
00:41:10,580 --> 00:41:14,990
not say when a particular message<font color="#E5E5E5"> is</font>

957
00:41:12,590 --> 00:41:18,830
supposed to be accepted<font color="#E5E5E5"> or not</font><font color="#CCCCCC"> and in</font>

958
00:41:14,990 --> 00:41:21,319
<font color="#E5E5E5">practice we see</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> iOS 10 on Windows</font>

959
00:41:18,830 --> 00:41:24,109
indeed don't accept retransmissions<font color="#E5E5E5"> of</font>

960
00:41:21,320 --> 00:41:27,830
message<font color="#CCCCCC"> 3 now I can forgive</font><font color="#E5E5E5"> them a bit</font>

961
00:41:24,109 --> 00:41:29,509
because the standard was unclear<font color="#E5E5E5"> if you</font>

962
00:41:27,830 --> 00:41:31,970
look at an amendment to the Wi-Fi

963
00:41:29,510 --> 00:41:34,040
standard<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can see that it now better</font>

964
00:41:31,970 --> 00:41:35,990
defines the state machine<font color="#E5E5E5"> we now have</font>

965
00:41:34,040 --> 00:41:38,390
this block diagram here on the right

966
00:41:35,990 --> 00:41:40,910
which better shows the steps<font color="#E5E5E5"> that have</font>

967
00:41:38,390 --> 00:41:42,560
<font color="#CCCCCC">to be worked through</font><font color="#E5E5E5"> so it's more clear</font>

968
00:41:40,910 --> 00:41:45,440
when certain<font color="#E5E5E5"> messages have to</font><font color="#CCCCCC"> be</font>

969
00:41:42,560 --> 00:41:47,840
<font color="#E5E5E5">accepted but still if you</font><font color="#CCCCCC"> look at it</font>

970
00:41:45,440 --> 00:41:54,230
<font color="#E5E5E5">some terms on cases are still a bit</font>

971
00:41:47,840 --> 00:41:57,710
unclear<font color="#CCCCCC"> ok so before I</font><font color="#E5E5E5"> finish the talk I</font>

972
00:41:54,230 --> 00:42:01,369
want<font color="#E5E5E5"> to make one</font><font color="#CCCCCC"> last remark</font><font color="#E5E5E5"> if there</font>

973
00:41:57,710 --> 00:42:03,970
are people of if there are<font color="#E5E5E5"> university</font>

974
00:42:01,369 --> 00:42:06,400
people<font color="#E5E5E5"> researcher in this audience and</font>

975
00:42:03,970 --> 00:42:08,169
if you are working

976
00:42:06,400 --> 00:42:10,390
security protocols then consider

977
00:42:08,170 --> 00:42:12,910
submitting<font color="#E5E5E5"> your</font><font color="#CCCCCC"> work to this conference</font>

978
00:42:10,390 --> 00:42:15,040
<font color="#E5E5E5">it is specifically aimed to testing the</font>

979
00:42:12,910 --> 00:42:16,540
<font color="#CCCCCC">security of</font><font color="#E5E5E5"> security protocols</font>

980
00:42:15,040 --> 00:42:19,720
<font color="#E5E5E5">implementation so if you work in</font>

981
00:42:16,540 --> 00:42:22,060
academia<font color="#CCCCCC"> look up</font><font color="#E5E5E5"> this workshop with that</font>

982
00:42:19,720 --> 00:42:24,189
I conclude the talk<font color="#CCCCCC"> thank you all</font><font color="#E5E5E5"> for</font>

983
00:42:22,060 --> 00:42:25,970
attending<font color="#CCCCCC"> and if you have questions feel</font>

984
00:42:24,190 --> 00:42:34,020
<font color="#E5E5E5">free to ask</font>

985
00:42:25,970 --> 00:42:34,020
[Applause]

986
00:42:38,950 --> 00:42:42,680
hi there from the back<font color="#CCCCCC"> I have a good</font>

987
00:42:41,420 --> 00:42:47,020
<font color="#CCCCCC">question we</font><font color="#E5E5E5"> found out</font><font color="#CCCCCC"> yesterday that</font>

988
00:42:42,680 --> 00:42:51,589
<font color="#E5E5E5">Apple just in the past</font><font color="#CCCCCC"> week in iOS</font><font color="#E5E5E5"> 11 to</font>

989
00:42:47,020 --> 00:42:53,930
patch this this vulnerability<font color="#E5E5E5"> for</font>

990
00:42:51,589 --> 00:42:56,630
devices other than<font color="#CCCCCC"> the iPhone 10 or the</font>

991
00:42:53,930 --> 00:42:58,460
<font color="#E5E5E5">iPad pro any thoughts on why it might</font>

992
00:42:56,630 --> 00:43:02,660
<font color="#E5E5E5">have</font><font color="#CCCCCC"> taken so long</font><font color="#E5E5E5"> like you said iOS iOS</font>

993
00:42:58,460 --> 00:43:04,819
11 had some vulnerabilities<font color="#E5E5E5"> I don't know</font>

994
00:43:02,660 --> 00:43:06,950
why it has taken so<font color="#CCCCCC"> long maybe</font><font color="#E5E5E5"> they use</font>

995
00:43:04,819 --> 00:43:09,319
a different<font color="#CCCCCC"> implementation because I do</font>

996
00:43:06,950 --> 00:43:11,180
know the difference<font color="#CCCCCC"> between iOS</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> 11</font>

997
00:43:09,319 --> 00:43:14,180
is that iOS<font color="#E5E5E5"> 10 doesn't accept</font>

998
00:43:11,180 --> 00:43:16,490
retransmissions of message<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> while iOS</font>

999
00:43:14,180 --> 00:43:18,140
11 does so maybe there are some

1000
00:43:16,490 --> 00:43:20,299
implementation<font color="#CCCCCC"> issues that the code is</font>

1001
00:43:18,140 --> 00:43:22,129
<font color="#E5E5E5">different but of course I don't know the</font>

1002
00:43:20,300 --> 00:43:31,730
<font color="#CCCCCC">details about</font><font color="#E5E5E5"> the code that Apple is</font>

1003
00:43:22,130 --> 00:43:34,130
using so<font color="#E5E5E5"> hi I just wanted to clear up so</font>

1004
00:43:31,730 --> 00:43:36,410
in the<font color="#E5E5E5"> normal situation of the 4 Way</font>

1005
00:43:34,130 --> 00:43:39,049
handshake<font color="#CCCCCC"> message for sent by the client</font>

1006
00:43:36,410 --> 00:43:40,879
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the access</font><font color="#CCCCCC"> point is unencrypted</font>

1007
00:43:39,049 --> 00:43:44,180
that's before the installation<font color="#CCCCCC"> of the</font>

1008
00:43:40,880 --> 00:43:46,640
key<font color="#E5E5E5"> right yes so normally message for</font>

1009
00:43:44,180 --> 00:43:48,890
should<font color="#E5E5E5"> be sent an encrypted yeah and</font>

1010
00:43:46,640 --> 00:43:51,589
then when<font color="#E5E5E5"> the attacker who's in the</font>

1011
00:43:48,890 --> 00:43:53,450
middle<font color="#E5E5E5"> blocks a message for and then the</font>

1012
00:43:51,589 --> 00:43:57,200
second time<font color="#E5E5E5"> message for a sent that's</font>

1013
00:43:53,450 --> 00:43:58,939
encrypted isn't<font color="#E5E5E5"> that unexpected from the</font>

1014
00:43:57,200 --> 00:44:01,460
point of<font color="#CCCCCC"> view of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> AP how does the</font><font color="#E5E5E5"> AP</font>

1015
00:43:58,940 --> 00:44:04,520
handle this<font color="#E5E5E5"> yes that is indeed</font>

1016
00:44:01,460 --> 00:44:06,410
unexpected<font color="#E5E5E5"> because the Wi-Fi standard if</font>

1017
00:44:04,520 --> 00:44:08,180
<font color="#E5E5E5">you read it very carefully says that</font>

1018
00:44:06,410 --> 00:44:10,578
message for should always be sent

1019
00:44:08,180 --> 00:44:12,980
unencrypted<font color="#E5E5E5"> however we found that nearly</font>

1020
00:44:10,579 --> 00:44:15,170
all<font color="#CCCCCC"> implementations</font><font color="#E5E5E5"> will send it in an</font>

1021
00:44:12,980 --> 00:44:17,480
<font color="#CCCCCC">encrypted</font><font color="#E5E5E5"> way and when the access point</font>

1022
00:44:15,170 --> 00:44:19,490
<font color="#E5E5E5">receives this encrypted message it will</font>

1023
00:44:17,480 --> 00:44:21,470
<font color="#E5E5E5">just drop it</font><font color="#CCCCCC"> because the access point</font>

1024
00:44:19,490 --> 00:44:22,970
hasn't<font color="#CCCCCC"> yet installed</font><font color="#E5E5E5"> the key meaning</font>

1025
00:44:21,470 --> 00:44:25,520
eventually the handshake will timeout

1026
00:44:22,970 --> 00:44:28,430
so that's actually a reliability<font color="#E5E5E5"> problem</font>

1027
00:44:25,520 --> 00:44:30,559
in implementations and<font color="#E5E5E5"> to prevent the</font>

1028
00:44:28,430 --> 00:44:33,140
access point<font color="#E5E5E5"> from dropping it could the</font>

1029
00:44:30,559 --> 00:44:36,740
attacker<font color="#CCCCCC"> maybe block</font><font color="#E5E5E5"> this message as</font>

1030
00:44:33,140 --> 00:44:39,410
well and then after can it<font color="#E5E5E5"> replay the</font>

1031
00:44:36,740 --> 00:44:44,000
previous<font color="#CCCCCC"> unencrypted frame that it had</font>

1032
00:44:39,410 --> 00:44:45,589
blocked<font color="#E5E5E5"> so you're asking</font><font color="#CCCCCC"> whether we</font><font color="#E5E5E5"> can</font>

1033
00:44:44,000 --> 00:44:48,500
replay the

1034
00:44:45,590 --> 00:44:51,350
the first first message for ya that<font color="#E5E5E5"> was</font>

1035
00:44:48,500 --> 00:44:54,530
initially<font color="#E5E5E5"> yes so that depends on the</font>

1036
00:44:51,350 --> 00:44:57,170
specific access point implementation<font color="#CCCCCC"> for</font>

1037
00:44:54,530 --> 00:44:58,820
example the open source host<font color="#CCCCCC"> APD</font><font color="#E5E5E5"> access</font>

1038
00:44:57,170 --> 00:45:03,200
point if you then<font color="#E5E5E5"> reap if you then</font>

1039
00:44:58,820 --> 00:45:03,950
forward this old message for then it

1040
00:45:03,200 --> 00:45:05,960
will accept it

1041
00:45:03,950 --> 00:45:08,210
however other access points will no

1042
00:45:05,960 --> 00:45:09,950
longer accept<font color="#E5E5E5"> this older message for</font>

1043
00:45:08,210 --> 00:45:11,750
because they only accept<font color="#CCCCCC"> the most recent</font>

1044
00:45:09,950 --> 00:45:23,379
one<font color="#E5E5E5"> so it depends on implementation</font>

1045
00:45:11,750 --> 00:45:23,380
<font color="#E5E5E5">thank you any other questions</font>

1046
00:45:30,910 --> 00:45:36,529
hey thank you for<font color="#CCCCCC"> the great talk have a</font>

1047
00:45:34,130 --> 00:45:39,890
quick question<font color="#E5E5E5"> if we</font><font color="#CCCCCC"> pass all access</font>

1048
00:45:36,530 --> 00:45:42,260
points<font color="#E5E5E5"> which no</font><font color="#CCCCCC"> longer will transmit the</font>

1049
00:45:39,890 --> 00:45:47,839
message<font color="#E5E5E5"> three why should I also touch my</font>

1050
00:45:42,260 --> 00:45:50,900
client so of course if you<font color="#E5E5E5"> are somehow</font>

1051
00:45:47,840 --> 00:45:55,520
able to<font color="#E5E5E5"> test to patch every access point</font>

1052
00:45:50,900 --> 00:45:58,250
<font color="#CCCCCC">that exists then</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> reduce the impact</font>

1053
00:45:55,520 --> 00:46:02,570
of the<font color="#E5E5E5"> attack but it's still possible to</font>

1054
00:45:58,250 --> 00:46:04,430
under<font color="#CCCCCC"> certain special cases detected</font>

1055
00:46:02,570 --> 00:46:06,830
<font color="#E5E5E5">group key handshake so you would still</font>

1056
00:46:04,430 --> 00:46:10,009
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> sometimes replay broadcast or</font>

1057
00:46:06,830 --> 00:46:12,230
multicast frames<font color="#CCCCCC"> so of</font><font color="#E5E5E5"> course if you</font>

1058
00:46:10,010 --> 00:46:14,210
live in and I am<font color="#E5E5E5"> a deal world and you</font>

1059
00:46:12,230 --> 00:46:16,370
can fetch every access point<font color="#E5E5E5"> then yeah</font>

1060
00:46:14,210 --> 00:46:17,960
you can<font color="#E5E5E5"> great really reduce</font><font color="#CCCCCC"> the impact</font>

1061
00:46:16,370 --> 00:46:21,650
of<font color="#E5E5E5"> the attack but in practice that's not</font>

1062
00:46:17,960 --> 00:46:26,750
an<font color="#E5E5E5"> option</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> for when</font><font color="#CCCCCC"> Jake is no</font><font color="#E5E5E5"> longer</font>

1063
00:46:21,650 --> 00:46:28,340
concerned<font color="#CCCCCC"> if you then</font><font color="#E5E5E5"> if you patch the</font>

1064
00:46:26,750 --> 00:46:29,840
access points on your client is

1065
00:46:28,340 --> 00:46:31,310
<font color="#CCCCCC">connected to the</font><font color="#E5E5E5"> patched access points</font>

1066
00:46:29,840 --> 00:46:33,050
you can<font color="#E5E5E5"> no longer attack the four way</font>

1067
00:46:31,310 --> 00:46:35,000
handshaking<font color="#CCCCCC"> and you can't attack</font><font color="#E5E5E5"> the</font>

1068
00:46:33,050 --> 00:46:37,940
group key handshake however there<font color="#E5E5E5"> are</font>

1069
00:46:35,000 --> 00:46:39,560
other<font color="#CCCCCC"> ways to</font><font color="#E5E5E5"> still mess with the group</font>

1070
00:46:37,940 --> 00:46:42,550
key but the<font color="#E5E5E5"> four-way handshake is safe</font>

1071
00:46:39,560 --> 00:46:42,549
then<font color="#E5E5E5"> okay thank you</font>

1072
00:46:49,959 --> 00:46:53,469
no more questions

1073
00:46:58,970 --> 00:47:01,919
<font color="#E5E5E5">okay again thank you for attending</font><font color="#CCCCCC"> the</font>

1074
00:47:01,609 --> 00:47:10,610
talk

1075
00:47:01,920 --> 00:47:10,610
[Applause]

