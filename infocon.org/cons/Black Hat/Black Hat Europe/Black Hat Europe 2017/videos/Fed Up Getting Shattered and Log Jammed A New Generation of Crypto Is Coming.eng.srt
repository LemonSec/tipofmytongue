1
00:00:00,030 --> 00:00:04,110
so I guess we're alive<font color="#E5E5E5"> this is me this</font>

2
00:00:02,100 --> 00:00:07,439
<font color="#CCCCCC">is David</font><font color="#E5E5E5"> Wong and I came here to tell</font>

3
00:00:04,110 --> 00:00:10,019
<font color="#E5E5E5">you a story</font><font color="#CCCCCC"> so my story</font><font color="#E5E5E5"> starts with a</font>

4
00:00:07,440 --> 00:00:12,269
timeline<font color="#E5E5E5"> to hash functions</font><font color="#CCCCCC"> near for an</font>

5
00:00:10,019 --> 00:00:15,890
MD for<font color="#E5E5E5"> where it is in the beginning of</font>

6
00:00:12,269 --> 00:00:17,940
the 90s<font color="#E5E5E5"> they go they got quite popular</font>

7
00:00:15,890 --> 00:00:20,060
unfortunately sniff who quickly<font color="#E5E5E5"> got</font>

8
00:00:17,940 --> 00:00:24,000
broken by the newly<font color="#E5E5E5"> introduced</font>

9
00:00:20,060 --> 00:00:27,150
<font color="#E5E5E5">differential cryptanalysis</font><font color="#CCCCCC"> nd4 remained</font>

10
00:00:24,000 --> 00:00:29,039
unbroken for some years and became the

11
00:00:27,150 --> 00:00:32,098
de<font color="#CCCCCC"> facto standard</font><font color="#E5E5E5"> for a hash function</font>

12
00:00:29,039 --> 00:00:35,489
but<font color="#CCCCCC"> also to construct hash functions so</font>

13
00:00:32,098 --> 00:00:37,050
MD here<font color="#E5E5E5"> stands for merkle-damgard so the</font>

14
00:00:35,489 --> 00:00:40,860
construction became the standard<font color="#E5E5E5"> to</font>

15
00:00:37,050 --> 00:00:42,780
build other hash functions and other

16
00:00:40,860 --> 00:00:45,600
hash functions<font color="#E5E5E5"> using</font><font color="#CCCCCC"> that standard</font><font color="#E5E5E5"> our</font>

17
00:00:42,780 --> 00:00:50,730
md5<font color="#CCCCCC"> sha-1</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> chateau and a bunch of</font>

18
00:00:45,600 --> 00:00:53,129
others so<font color="#CCCCCC"> yeah MD for</font><font color="#E5E5E5"> unfortunately we</font>

19
00:00:50,730 --> 00:00:56,489
<font color="#CCCCCC">realized that it's broken it's not very</font>

20
00:00:53,129 --> 00:00:58,410
<font color="#E5E5E5">secure md5 we quickly realized that or</font>

21
00:00:56,489 --> 00:01:01,140
not that quickly and<font color="#CCCCCC"> actually md5 it</font>

22
00:00:58,410 --> 00:01:02,730
took a<font color="#E5E5E5"> lot of time to deprecate it was</font>

23
00:01:01,140 --> 00:01:05,400
rather painful<font color="#E5E5E5"> was used all over the</font>

24
00:01:02,730 --> 00:01:09,750
<font color="#E5E5E5">place</font><font color="#CCCCCC"> right from certificates to storing</font>

25
00:01:05,400 --> 00:01:12,570
passwords<font color="#E5E5E5"> so yeah sha-1 got broken</font>

26
00:01:09,750 --> 00:01:14,369
earlier this year<font color="#E5E5E5"> right if you were at</font>

27
00:01:12,570 --> 00:01:16,559
blackhat<font color="#E5E5E5"> us you must have seen</font><font color="#CCCCCC"> Eli from</font>

28
00:01:14,369 --> 00:01:20,610
Google<font color="#E5E5E5"> giving a talk about</font><font color="#CCCCCC"> that</font>

29
00:01:16,560 --> 00:01:23,130
so no more sha-1 and<font color="#E5E5E5"> our</font><font color="#CCCCCC"> left push a to</font>

30
00:01:20,610 --> 00:01:24,900
shadow is is really<font color="#CCCCCC"> the standard that</font>

31
00:01:23,130 --> 00:01:26,880
everybody<font color="#E5E5E5"> use wherever you are on the</font>

32
00:01:24,900 --> 00:01:29,909
<font color="#E5E5E5">spectrum of security you're</font><font color="#CCCCCC"> a developer</font>

33
00:01:26,880 --> 00:01:31,500
if<font color="#E5E5E5"> your pen tester whatever you are you</font>

34
00:01:29,909 --> 00:01:33,659
must<font color="#E5E5E5"> have seen</font><font color="#CCCCCC"> shot or you must</font><font color="#E5E5E5"> have</font>

35
00:01:31,500 --> 00:01:36,930
<font color="#E5E5E5">used shattered right it's all over the</font>

36
00:01:33,659 --> 00:01:40,229
place<font color="#E5E5E5"> so the question we had back then</font>

37
00:01:36,930 --> 00:01:42,540
<font color="#CCCCCC">was</font><font color="#E5E5E5"> is shadow going to fold them fates</font>

38
00:01:40,229 --> 00:01:43,710
right it's built on the<font color="#E5E5E5"> same</font>

39
00:01:42,540 --> 00:01:45,689
construction<font color="#E5E5E5"> the merkle-damgard</font>

40
00:01:43,710 --> 00:01:48,809
construction<font color="#E5E5E5"> that</font><font color="#CCCCCC"> i'm</font><font color="#E5E5E5"> not going to</font>

41
00:01:45,689 --> 00:01:50,699
<font color="#CCCCCC">explain here</font><font color="#E5E5E5"> and if it falls</font><font color="#CCCCCC"> the same</font>

42
00:01:48,810 --> 00:01:52,649
<font color="#E5E5E5">fate</font><font color="#CCCCCC"> do we</font><font color="#E5E5E5"> have a back-up plan</font>

43
00:01:50,700 --> 00:01:56,250
<font color="#CCCCCC">do we</font><font color="#E5E5E5"> have another hash function</font><font color="#CCCCCC"> that</font>

44
00:01:52,649 --> 00:01:58,700
you<font color="#CCCCCC"> can use to replace shatter and the</font>

45
00:01:56,250 --> 00:02:01,649
answer was<font color="#E5E5E5"> not that clear back then so</font>

46
00:01:58,700 --> 00:02:04,020
the NIST's an<font color="#CCCCCC"> American organization</font>

47
00:02:01,649 --> 00:02:07,259
decided<font color="#E5E5E5"> to organize an open competition</font>

48
00:02:04,020 --> 00:02:10,530
<font color="#E5E5E5">like the AES competition for the new</font>

49
00:02:07,259 --> 00:02:14,150
<font color="#E5E5E5">standard hash algorithm shattering so it</font>

50
00:02:10,530 --> 00:02:16,830
started in 2007<font color="#E5E5E5"> lasted for</font><font color="#CCCCCC"> five years</font>

51
00:02:14,150 --> 00:02:19,370
five years in which<font color="#E5E5E5"> 64</font><font color="#CCCCCC"> different</font>

52
00:02:16,830 --> 00:02:22,080
candidates from all over the world

53
00:02:19,370 --> 00:02:25,020
thoughts to become<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> standard so</font>

54
00:02:22,080 --> 00:02:30,510
Chateau was designed by the NSA<font color="#E5E5E5"> sherry</font>

55
00:02:25,020 --> 00:02:32,940
<font color="#E5E5E5">is really an open standard so 2012</font><font color="#CCCCCC"> five</font>

56
00:02:30,510 --> 00:02:36,420
years<font color="#E5E5E5"> later finally kid</font><font color="#CCCCCC"> Shaq is</font>

57
00:02:32,940 --> 00:02:38,880
nominated as<font color="#CCCCCC"> the winner so whenever I</font>

58
00:02:36,420 --> 00:02:42,510
say sherry<font color="#E5E5E5"> I also mean</font><font color="#CCCCCC"> kid jackets</font>

59
00:02:38,880 --> 00:02:44,549
<font color="#CCCCCC">though it's the same algorithm</font><font color="#E5E5E5"> now other</font>

60
00:02:42,510 --> 00:02:47,399
candidates<font color="#E5E5E5"> that didn't make the cuts in</font>

61
00:02:44,550 --> 00:02:50,370
the<font color="#CCCCCC"> last round were Blake</font><font color="#E5E5E5"> Russell JH and</font>

62
00:02:47,400 --> 00:02:52,080
<font color="#E5E5E5">skein it's not that they were insecure</font>

63
00:02:50,370 --> 00:02:54,270
it's rather than we only had<font color="#CCCCCC"> one</font>

64
00:02:52,080 --> 00:02:56,280
position<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the winner and if you look</font>

65
00:02:54,270 --> 00:02:58,620
at Blake<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> recognize that name</font>

66
00:02:56,280 --> 00:03:01,080
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it had had a second life</font><font color="#E5E5E5"> after</font>

67
00:02:58,620 --> 00:03:03,750
the competition by releasing a second

68
00:03:01,080 --> 00:03:05,460
version<font color="#E5E5E5"> Blake - and it's been</font><font color="#CCCCCC"> adopted by</font>

69
00:03:03,750 --> 00:03:07,130
quite a lot<font color="#E5E5E5"> of standards and</font>

70
00:03:05,460 --> 00:03:12,150
applications

71
00:03:07,130 --> 00:03:13,260
<font color="#E5E5E5">all right so 2012</font><font color="#CCCCCC"> Kasich wins 2015</font><font color="#E5E5E5"> three</font>

72
00:03:12,150 --> 00:03:16,080
years after<font color="#E5E5E5"> the end of the competition</font>

73
00:03:13,260 --> 00:03:18,179
<font color="#CCCCCC">we finally have a standard so it's a</font>

74
00:03:16,080 --> 00:03:21,000
nice standard called<font color="#CCCCCC"> FIPS pub</font><font color="#E5E5E5"> - - it's</font>

75
00:03:18,180 --> 00:03:23,459
kind of an ugly name<font color="#E5E5E5"> or BPF but anyway</font>

76
00:03:21,000 --> 00:03:25,850
whatever<font color="#CCCCCC"> we have a standard only two</font>

77
00:03:23,459 --> 00:03:28,920
years<font color="#E5E5E5"> ago right so it's pretty recent</font>

78
00:03:25,850 --> 00:03:32,190
so<font color="#CCCCCC"> that's try</font><font color="#E5E5E5"> three and I was my intro</font>

79
00:03:28,920 --> 00:03:35,220
to<font color="#CCCCCC"> why we build</font><font color="#E5E5E5"> shot</font><font color="#CCCCCC"> three and why and</font>

80
00:03:32,190 --> 00:03:37,260
what's shattering<font color="#E5E5E5"> and here's my outline</font>

81
00:03:35,220 --> 00:03:39,600
and I'll basically<font color="#E5E5E5"> spend a few slides</font>

82
00:03:37,260 --> 00:03:41,850
<font color="#E5E5E5">next to explain to you how</font><font color="#CCCCCC"> shot</font><font color="#E5E5E5"> three</font>

83
00:03:39,600 --> 00:03:43,380
works<font color="#E5E5E5"> so I'm not going to go too much</font>

84
00:03:41,850 --> 00:03:45,450
into the details I'm just going<font color="#E5E5E5"> to give</font>

85
00:03:43,380 --> 00:03:45,959
you some intuition or<font color="#CCCCCC"> fight words so</font>

86
00:03:45,450 --> 00:03:49,530
don't<font color="#CCCCCC"> worry</font>

87
00:03:45,959 --> 00:03:51,030
<font color="#CCCCCC">no equations no math it's pretty cool if</font>

88
00:03:49,530 --> 00:03:52,290
you<font color="#CCCCCC"> focus on</font><font color="#E5E5E5"> the next few slides you'll</font>

89
00:03:51,030 --> 00:03:55,860
go<font color="#CCCCCC"> away from this talk with the</font>

90
00:03:52,290 --> 00:03:58,109
<font color="#E5E5E5">knowledge of how</font><font color="#CCCCCC"> shot three works after</font>

91
00:03:55,860 --> 00:04:01,110
that I'll<font color="#CCCCCC"> be looking at strobe which is</font>

92
00:03:58,110 --> 00:04:04,080
<font color="#CCCCCC">something built on top of sha-3</font><font color="#E5E5E5"> it's not</font>

93
00:04:01,110 --> 00:04:06,450
a hash function<font color="#E5E5E5"> it's actually a protocol</font>

94
00:04:04,080 --> 00:04:12,180
framework<font color="#E5E5E5"> so it allows you to</font><font color="#CCCCCC"> build make</font>

95
00:04:06,450 --> 00:04:13,560
much more than just hash functions the

96
00:04:12,180 --> 00:04:15,180
third part<font color="#CCCCCC"> of this talk will be about</font>

97
00:04:13,560 --> 00:04:18,180
noise which<font color="#CCCCCC"> is another protocol</font>

98
00:04:15,180 --> 00:04:19,709
framework<font color="#CCCCCC"> actually anyone here has heard</font>

99
00:04:18,180 --> 00:04:23,390
of noise<font color="#E5E5E5"> before the noise protocol</font>

100
00:04:19,709 --> 00:04:25,410
framework<font color="#E5E5E5"> it two three four people five</font>

101
00:04:23,390 --> 00:04:27,630
<font color="#E5E5E5">so it's</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> to build something</font>

102
00:04:25,410 --> 00:04:29,820
<font color="#E5E5E5">like TLS you can think of it</font><font color="#CCCCCC"> like that</font>

103
00:04:27,630 --> 00:04:31,409
and it really doesn't use<font color="#CCCCCC"> chattery</font><font color="#E5E5E5"> so</font>

104
00:04:29,820 --> 00:04:33,659
there will<font color="#E5E5E5"> be a break from shuttering</font>

105
00:04:31,410 --> 00:04:36,770
<font color="#E5E5E5">and find</font><font color="#CCCCCC"> finally at</font><font color="#E5E5E5"> the end</font><font color="#CCCCCC"> I have a</font>

106
00:04:33,660 --> 00:04:41,120
surprise<font color="#E5E5E5"> but more</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> later</font>

107
00:04:36,770 --> 00:04:43,710
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> so time to focus Shari Shari</font><font color="#CCCCCC"> is</font>

108
00:04:41,120 --> 00:04:46,290
something it's in the field<font color="#E5E5E5"> of</font>

109
00:04:43,710 --> 00:04:48,060
permutation based cryptography<font color="#E5E5E5"> in crypto</font>

110
00:04:46,290 --> 00:04:49,860
you have a lot of different fields<font color="#E5E5E5"> one</font>

111
00:04:48,060 --> 00:04:51,630
of<font color="#CCCCCC"> them is just</font><font color="#E5E5E5"> a field of things built</font>

112
00:04:49,860 --> 00:04:54,000
on top of permutations<font color="#CCCCCC"> so that's why</font>

113
00:04:51,630 --> 00:04:54,600
it's<font color="#E5E5E5"> called what a permitted what is a</font>

114
00:04:54,000 --> 00:04:56,130
permutation

115
00:04:54,600 --> 00:04:58,500
<font color="#E5E5E5">well don't worry I have a good</font>

116
00:04:56,130 --> 00:05:01,260
explanation<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> everybody knows a</font>

117
00:04:58,500 --> 00:05:05,420
<font color="#E5E5E5">es right he has the core algorithm to</font>

118
00:05:01,260 --> 00:05:08,370
encrypt things it takes 128 bit inputs

119
00:05:05,420 --> 00:05:11,010
<font color="#E5E5E5">plaintext and</font><font color="#CCCCCC"> it gives you a 128 bit</font>

120
00:05:08,370 --> 00:05:13,350
ciphertext<font color="#E5E5E5"> right that's how you can</font>

121
00:05:11,010 --> 00:05:14,789
encrypt<font color="#E5E5E5"> and from a cipher text you can</font>

122
00:05:13,350 --> 00:05:17,160
decrypt and get back<font color="#E5E5E5"> to your plain</font><font color="#CCCCCC"> text</font>

123
00:05:14,790 --> 00:05:20,040
so it's a one-to-one<font color="#E5E5E5"> mapping between all</font>

124
00:05:17,160 --> 00:05:23,640
the possible inputs<font color="#CCCCCC"> of 128 bits and all</font>

125
00:05:20,040 --> 00:05:24,720
the possible<font color="#CCCCCC"> outputs of 128 bits right</font>

126
00:05:23,640 --> 00:05:26,159
<font color="#E5E5E5">if you don't have this one-to-one</font>

127
00:05:24,720 --> 00:05:27,510
<font color="#E5E5E5">mapping if you have a</font><font color="#CCCCCC"> ciphertext you</font>

128
00:05:26,160 --> 00:05:30,420
don't know how to decrypt<font color="#E5E5E5"> it you don't</font>

129
00:05:27,510 --> 00:05:32,849
know<font color="#E5E5E5"> what</font><font color="#CCCCCC"> Planet</font><font color="#E5E5E5"> X you can get and here</font>

130
00:05:30,420 --> 00:05:35,700
I<font color="#E5E5E5"> pretend that I use a key of all</font><font color="#CCCCCC"> zeros</font>

131
00:05:32,850 --> 00:05:37,470
<font color="#E5E5E5">so the key is</font><font color="#CCCCCC"> known</font><font color="#E5E5E5"> everybody can use</font><font color="#CCCCCC"> it</font>

132
00:05:35,700 --> 00:05:40,140
to the create<font color="#CCCCCC"> Anchorage we don't care</font>

133
00:05:37,470 --> 00:05:41,490
<font color="#E5E5E5">there is</font><font color="#CCCCCC"> no secret here so every time</font>

134
00:05:40,140 --> 00:05:43,260
<font color="#E5E5E5">you'll see this function here this</font>

135
00:05:41,490 --> 00:05:47,010
permutation you can think of AES with

136
00:05:43,260 --> 00:05:48,960
unknown key I'm<font color="#E5E5E5"> going to I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to</font>

137
00:05:47,010 --> 00:05:52,950
build something<font color="#E5E5E5"> called</font><font color="#CCCCCC"> a sponge</font>

138
00:05:48,960 --> 00:05:55,890
construction this was<font color="#CCCCCC"> invented as part</font>

139
00:05:52,950 --> 00:05:58,050
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> Sheree competition to build the</font>

140
00:05:55,890 --> 00:05:59,430
new hash function<font color="#CCCCCC"> shattering so this</font>

141
00:05:58,050 --> 00:06:01,140
<font color="#E5E5E5">replaces this merkle-damgard</font>

142
00:05:59,430 --> 00:06:04,710
construction that<font color="#CCCCCC"> I talked about</font>

143
00:06:01,140 --> 00:06:07,229
<font color="#E5E5E5">previously</font><font color="#CCCCCC"> remember okay what is this</font>

144
00:06:04,710 --> 00:06:08,969
pond construction well first I set the

145
00:06:07,230 --> 00:06:09,720
input<font color="#E5E5E5"> of my permutation to all zeros</font>

146
00:06:08,970 --> 00:06:12,510
<font color="#CCCCCC">okay</font>

147
00:06:09,720 --> 00:06:15,710
bunch of zeros so the permutation kind

148
00:06:12,510 --> 00:06:18,870
of randomized<font color="#E5E5E5"> this and I get an output</font>

149
00:06:15,710 --> 00:06:22,109
<font color="#E5E5E5">no I decide</font><font color="#CCCCCC"> to split my inputs and my</font>

150
00:06:18,870 --> 00:06:24,660
outputs<font color="#E5E5E5"> into different parts</font><font color="#CCCCCC"> the first</font>

151
00:06:22,110 --> 00:06:26,610
part<font color="#E5E5E5"> I say the first are bits and here I</font>

152
00:06:24,660 --> 00:06:28,890
<font color="#E5E5E5">choose a very simple</font><font color="#CCCCCC"> example I have</font><font color="#E5E5E5"> five</font>

153
00:06:26,610 --> 00:06:32,130
bits here<font color="#E5E5E5"> are</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> inputs and the output</font>

154
00:06:28,890 --> 00:06:35,010
are the public parts<font color="#E5E5E5"> okay it's public</font>

155
00:06:32,130 --> 00:06:37,560
<font color="#E5E5E5">and the remaining bits of the input and</font>

156
00:06:35,010 --> 00:06:40,950
<font color="#E5E5E5">the output are</font><font color="#CCCCCC"> see bits here three bits</font>

157
00:06:37,560 --> 00:06:41,490
are the secret part<font color="#E5E5E5"> and you're going to</font>

158
00:06:40,950 --> 00:06:42,870
understand

159
00:06:41,490 --> 00:06:44,400
I<font color="#CCCCCC"> call that public why I call that</font>

160
00:06:42,870 --> 00:06:46,319
secret but just so that<font color="#E5E5E5"> we're in the</font>

161
00:06:44,400 --> 00:06:47,880
same page if it's<font color="#CCCCCC"> AES right you take the</font>

162
00:06:46,319 --> 00:06:50,340
<font color="#E5E5E5">plaintext and you just say the</font><font color="#CCCCCC"> first</font>

163
00:06:47,880 --> 00:06:51,780
<font color="#CCCCCC">hour beats are the public part and then</font>

164
00:06:50,340 --> 00:06:57,508
really<font color="#CCCCCC"> the remaining part is the secret</font>

165
00:06:51,780 --> 00:06:58,650
one all<font color="#E5E5E5"> right so a hash function is not</font>

166
00:06:57,509 --> 00:07:00,960
very<font color="#E5E5E5"> good if you don't take an input</font>

167
00:06:58,650 --> 00:07:03,780
right so we want to have something<font color="#E5E5E5"> and</font>

168
00:07:00,960 --> 00:07:05,880
here to have to take<font color="#E5E5E5"> the input inside</font>

169
00:07:03,780 --> 00:07:09,119
our algorithm what I do is<font color="#E5E5E5"> that I</font><font color="#CCCCCC"> just</font>

170
00:07:05,880 --> 00:07:10,440
XOR my input with<font color="#CCCCCC"> the public parts and</font>

171
00:07:09,120 --> 00:07:12,979
at the<font color="#E5E5E5"> beginning</font><font color="#CCCCCC"> the public part is only</font>

172
00:07:10,440 --> 00:07:15,719
<font color="#E5E5E5">zeros right very easy</font>

173
00:07:12,979 --> 00:07:17,669
so here<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> easy if I have an</font>

174
00:07:15,720 --> 00:07:19,470
input of<font color="#E5E5E5"> only five bits because</font><font color="#CCCCCC"> my</font>

175
00:07:17,669 --> 00:07:23,460
public part is<font color="#E5E5E5"> five bits but what if</font>

176
00:07:19,470 --> 00:07:25,530
it's larger well if it's larger it's

177
00:07:23,460 --> 00:07:28,289
<font color="#E5E5E5">easy as well we just split it into</font>

178
00:07:25,530 --> 00:07:30,750
<font color="#E5E5E5">blocks of five bits and we XOR the first</font>

179
00:07:28,289 --> 00:07:33,990
block of five bits with my public part

180
00:07:30,750 --> 00:07:35,460
<font color="#E5E5E5">okay we don't touch the</font><font color="#CCCCCC"> secret part then</font>

181
00:07:33,990 --> 00:07:37,289
<font color="#E5E5E5">we take the second block and we ignore</font>

182
00:07:35,460 --> 00:07:39,539
<font color="#CCCCCC">that with the public part after</font>

183
00:07:37,289 --> 00:07:40,229
<font color="#E5E5E5">permuting after using something like</font><font color="#CCCCCC"> a</font>

184
00:07:39,539 --> 00:07:43,560
<font color="#E5E5E5">yes right</font>

185
00:07:40,229 --> 00:07:46,139
we permute again<font color="#E5E5E5"> and finally if we have</font>

186
00:07:43,560 --> 00:07:48,870
<font color="#CCCCCC">only three blocks</font><font color="#E5E5E5"> we XOR the final block</font>

187
00:07:46,139 --> 00:07:50,789
<font color="#E5E5E5">with the public parts and we permeate</font>

188
00:07:48,870 --> 00:07:55,229
again<font color="#E5E5E5"> make sense</font>

189
00:07:50,789 --> 00:07:57,449
it's just what<font color="#CCCCCC"> we call absorbing right</font>

190
00:07:55,229 --> 00:08:00,930
it's it's a<font color="#CCCCCC"> sponge function we absorb a</font>

191
00:07:57,449 --> 00:08:03,180
message<font color="#E5E5E5"> make sense now how do we get</font><font color="#CCCCCC"> our</font>

192
00:08:00,930 --> 00:08:04,800
outputs it's not<font color="#E5E5E5"> very it's</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> very</font>

193
00:08:03,180 --> 00:08:07,320
<font color="#CCCCCC">useful if we don't get an output</font><font color="#E5E5E5"> from</font>

194
00:08:04,800 --> 00:08:09,240
<font color="#E5E5E5">that right so hash function what we can</font>

195
00:08:07,320 --> 00:08:12,960
do is that<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> just read the public</font>

196
00:08:09,240 --> 00:08:15,030
parts so here we<font color="#E5E5E5"> get five bits</font><font color="#CCCCCC"> if we</font>

197
00:08:12,960 --> 00:08:16,979
need<font color="#E5E5E5"> more</font><font color="#CCCCCC"> we can just permute and read</font>

198
00:08:15,030 --> 00:08:19,198
again<font color="#CCCCCC"> we get</font><font color="#E5E5E5"> ten bits</font><font color="#CCCCCC"> if we need more we</font>

199
00:08:16,979 --> 00:08:21,479
<font color="#E5E5E5">continue to do the same</font><font color="#CCCCCC"> this is called</font>

200
00:08:19,199 --> 00:08:23,460
squeezing all right make sense ready to

201
00:08:21,479 --> 00:08:26,758
<font color="#CCCCCC">sponge we absorb our message and</font><font color="#E5E5E5"> then we</font>

202
00:08:23,460 --> 00:08:29,609
squeeze it to get an output and<font color="#E5E5E5"> that's</font>

203
00:08:26,759 --> 00:08:31,949
really all there<font color="#E5E5E5"> is to shattering so we</font>

204
00:08:29,610 --> 00:08:34,649
have a paper<font color="#CCCCCC"> proof a mathematical proof</font>

205
00:08:31,949 --> 00:08:38,630
<font color="#E5E5E5">that this word this is secure</font><font color="#CCCCCC"> as long as</font>

206
00:08:34,649 --> 00:08:40,860
the permutation<font color="#E5E5E5"> at its core is secure</font>

207
00:08:38,630 --> 00:08:42,419
how do we know that the permutation at

208
00:08:40,860 --> 00:08:44,250
the core is secure well we don't really

209
00:08:42,419 --> 00:08:46,589
<font color="#E5E5E5">have</font><font color="#CCCCCC"> a good way of doing</font><font color="#E5E5E5"> that the best</font>

210
00:08:44,250 --> 00:08:48,180
way we know of is just just to try<font color="#E5E5E5"> to</font>

211
00:08:46,589 --> 00:08:50,459
break<font color="#E5E5E5"> it so</font><font color="#CCCCCC"> that's why the competition</font>

212
00:08:48,180 --> 00:08:52,739
<font color="#CCCCCC">lasted for five years is</font><font color="#E5E5E5"> just people</font>

213
00:08:50,459 --> 00:08:55,329
<font color="#E5E5E5">trying to break it using linear</font>

214
00:08:52,740 --> 00:08:56,889
cryptanalysis<font color="#E5E5E5"> differential cryptanalysis</font>

215
00:08:55,329 --> 00:08:59,349
bunch of<font color="#E5E5E5"> other kryptonite is trying to</font>

216
00:08:56,889 --> 00:09:01,420
invent new<font color="#E5E5E5"> attacks just to try to break</font>

217
00:08:59,350 --> 00:09:04,299
it after quite<font color="#CCCCCC"> some time we get more</font>

218
00:09:01,420 --> 00:09:06,699
confidence in the function<font color="#E5E5E5"> and we we say</font>

219
00:09:04,299 --> 00:09:09,579
<font color="#E5E5E5">it's secure or we know how to play with</font>

220
00:09:06,699 --> 00:09:13,149
the parameters<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so that's a</font>

221
00:09:09,579 --> 00:09:16,748
three and<font color="#E5E5E5"> know that</font><font color="#CCCCCC"> I got that out of</font>

222
00:09:13,149 --> 00:09:18,339
<font color="#E5E5E5">the way I'm going to explain</font><font color="#CCCCCC"> strobe all</font>

223
00:09:16,749 --> 00:09:23,410
<font color="#CCCCCC">right so I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to use this de-spawn</font>

224
00:09:18,339 --> 00:09:26,110
<font color="#E5E5E5">thing to build more than that so going</font>

225
00:09:23,410 --> 00:09:28,988
<font color="#E5E5E5">back to</font><font color="#CCCCCC"> that slide</font><font color="#E5E5E5"> so remember I</font><font color="#CCCCCC"> absorb</font>

226
00:09:26,110 --> 00:09:31,959
my input<font color="#E5E5E5"> and then I squeeze it to create</font>

227
00:09:28,989 --> 00:09:33,730
an<font color="#CCCCCC"> output but what if I don't stop here</font>

228
00:09:31,959 --> 00:09:36,160
and<font color="#E5E5E5"> I just continue and then I start</font>

229
00:09:33,730 --> 00:09:37,569
absorbing again and then I squeeze again

230
00:09:36,160 --> 00:09:40,809
and then I absorb again and then I

231
00:09:37,569 --> 00:09:42,128
squeeze again<font color="#E5E5E5"> is that possible well the</font>

232
00:09:40,809 --> 00:09:43,899
kid<font color="#CCCCCC"> Shack team said yes it's possible</font>

233
00:09:42,129 --> 00:09:46,269
<font color="#E5E5E5">and they came up</font><font color="#CCCCCC"> with a new</font><font color="#E5E5E5"> construction</font>

234
00:09:43,899 --> 00:09:47,889
called<font color="#E5E5E5"> a duplex construction and</font>

235
00:09:46,269 --> 00:09:49,989
basically<font color="#E5E5E5"> that's what</font><font color="#CCCCCC"> happens</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> you</font>

236
00:09:47,889 --> 00:09:51,489
absorb your input your squeeze you

237
00:09:49,989 --> 00:09:54,309
absorb<font color="#E5E5E5"> your squeeze you absorb your</font>

238
00:09:51,489 --> 00:09:55,540
squeeze<font color="#E5E5E5"> all right that's</font><font color="#CCCCCC"> interesting</font>

239
00:09:54,309 --> 00:09:59,860
what can we do with<font color="#CCCCCC"> that can</font><font color="#E5E5E5"> we do</font>

240
00:09:55,540 --> 00:10:01,509
anything<font color="#E5E5E5"> useful with this well one thing</font>

241
00:09:59,860 --> 00:10:04,029
we<font color="#E5E5E5"> can do that is interesting is that we</font>

242
00:10:01,509 --> 00:10:07,509
<font color="#CCCCCC">can absorb</font><font color="#E5E5E5"> a key right we XOR a key with</font>

243
00:10:04,029 --> 00:10:09,249
our public part and when we absorb a key

244
00:10:07,509 --> 00:10:12,399
is very<font color="#E5E5E5"> different from hashing is</font>

245
00:10:09,249 --> 00:10:14,649
usually you<font color="#CCCCCC"> hash public stuff</font><font color="#E5E5E5"> and here</font>

246
00:10:12,399 --> 00:10:17,249
we hash a key<font color="#E5E5E5"> right we absorb a key so</font>

247
00:10:14,649 --> 00:10:20,529
it's a<font color="#E5E5E5"> key mode when we use a key</font>

248
00:10:17,249 --> 00:10:23,319
keeping the secret parts private is very

249
00:10:20,529 --> 00:10:25,149
important if<font color="#E5E5E5"> you leak the secret part</font>

250
00:10:23,319 --> 00:10:27,759
somehow I don't<font color="#E5E5E5"> know some memory</font>

251
00:10:25,149 --> 00:10:29,350
disclosure<font color="#E5E5E5"> then the attacker might have</font>

252
00:10:27,759 --> 00:10:32,079
the<font color="#E5E5E5"> entire state right</font>

253
00:10:29,350 --> 00:10:33,730
the public part and the secret part and

254
00:10:32,079 --> 00:10:35,618
now the attacker can reverse all<font color="#CCCCCC"> the</font>

255
00:10:33,730 --> 00:10:37,059
<font color="#CCCCCC">permutations there</font><font color="#E5E5E5"> is there is</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> one</font>

256
00:10:35,619 --> 00:10:38,470
here but if there was multiple

257
00:10:37,059 --> 00:10:40,618
<font color="#E5E5E5">permutation you could reverse all</font><font color="#CCCCCC"> the</font>

258
00:10:38,470 --> 00:10:42,850
permutation<font color="#E5E5E5"> to go back to the</font><font color="#CCCCCC"> key</font>

259
00:10:40,619 --> 00:10:45,249
remember I said a permutation<font color="#E5E5E5"> is</font>

260
00:10:42,850 --> 00:10:46,959
basically like AES with<font color="#E5E5E5"> a non key that</font>

261
00:10:45,249 --> 00:10:48,759
<font color="#E5E5E5">means if you have the</font><font color="#CCCCCC"> ciphertext or the</font>

262
00:10:46,959 --> 00:10:50,498
output you can get the plaintext<font color="#E5E5E5"> or the</font>

263
00:10:48,759 --> 00:10:53,589
input<font color="#E5E5E5"> right so you can reverse this</font>

264
00:10:50,499 --> 00:10:55,239
<font color="#CCCCCC">thing so really</font><font color="#E5E5E5"> when you're using a key</font>

265
00:10:53,589 --> 00:10:58,329
when you're<font color="#E5E5E5"> in key mode you really want</font>

266
00:10:55,239 --> 00:11:01,119
to keep<font color="#E5E5E5"> that</font><font color="#CCCCCC"> secret</font><font color="#E5E5E5"> part secret anyway</font>

267
00:10:58,329 --> 00:11:03,939
<font color="#E5E5E5">we absorb icky we permute so we get</font>

268
00:11:01,119 --> 00:11:07,480
something<font color="#E5E5E5"> kind of random you get the ID</font>

269
00:11:03,939 --> 00:11:09,040
<font color="#E5E5E5">how can we encrypt from that I really</font>

270
00:11:07,480 --> 00:11:11,590
absorb icky we permute we get

271
00:11:09,040 --> 00:11:13,709
maybe here<font color="#E5E5E5"> five beats five random bits</font>

272
00:11:11,590 --> 00:11:15,940
<font color="#CCCCCC">how can we encrypt</font><font color="#E5E5E5"> something like that</font>

273
00:11:13,710 --> 00:11:18,010
well<font color="#E5E5E5"> very simply if you think of</font>

274
00:11:15,940 --> 00:11:20,560
one-time pads or stream ciphers or

275
00:11:18,010 --> 00:11:22,120
things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you just</font><font color="#E5E5E5"> X or your</font>

276
00:11:20,560 --> 00:11:24,969
plaintext what you want to encrypt<font color="#E5E5E5"> with</font>

277
00:11:22,120 --> 00:11:28,030
<font color="#CCCCCC">this bit string</font><font color="#E5E5E5"> this random bit string</font>

278
00:11:24,970 --> 00:11:30,850
<font color="#CCCCCC">and you get your</font><font color="#E5E5E5"> ciphertext and to</font>

279
00:11:28,030 --> 00:11:33,670
decrypt you do the inverse<font color="#CCCCCC"> you generate</font>

280
00:11:30,850 --> 00:11:35,200
the same thing<font color="#E5E5E5"> yeah the absorption</font><font color="#CCCCCC"> of</font>

281
00:11:33,670 --> 00:11:35,770
the<font color="#E5E5E5"> key and you make</font><font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> with the</font>

282
00:11:35,200 --> 00:11:37,500
<font color="#E5E5E5">ciphertext</font>

283
00:11:35,770 --> 00:11:43,000
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> get back back the plaintext</font>

284
00:11:37,500 --> 00:11:44,740
<font color="#CCCCCC">right</font><font color="#E5E5E5"> its encryption 101 okay but if you</font>

285
00:11:43,000 --> 00:11:47,140
know<font color="#E5E5E5"> about encryption probably you know</font>

286
00:11:44,740 --> 00:11:48,880
that we never<font color="#E5E5E5"> just</font><font color="#CCCCCC"> sin we never</font><font color="#E5E5E5"> just</font>

287
00:11:47,140 --> 00:11:51,220
<font color="#E5E5E5">encrypt and send the</font><font color="#CCCCCC"> ciphertext like</font>

288
00:11:48,880 --> 00:11:52,750
<font color="#E5E5E5">that just because if there is an</font>

289
00:11:51,220 --> 00:11:54,220
attacker in the middle<font color="#E5E5E5"> the attacker in</font>

290
00:11:52,750 --> 00:11:57,580
the middle can<font color="#E5E5E5"> tamper with the</font>

291
00:11:54,220 --> 00:11:59,500
ciphertext<font color="#CCCCCC"> and</font><font color="#E5E5E5"> after when we receive the</font>

292
00:11:57,580 --> 00:12:02,320
<font color="#E5E5E5">ciphertext after decryption the plant X</font>

293
00:11:59,500 --> 00:12:04,030
will be tampered with<font color="#E5E5E5"> so usually we want</font>

294
00:12:02,320 --> 00:12:06,910
to<font color="#CCCCCC"> protect the integrity of</font><font color="#E5E5E5"> the</font>

295
00:12:04,030 --> 00:12:09,819
ciphertext<font color="#E5E5E5"> by</font><font color="#CCCCCC"> generating something</font><font color="#E5E5E5"> out</font>

296
00:12:06,910 --> 00:12:12,760
of that ciphertext that<font color="#CCCCCC"> we can append to</font>

297
00:12:09,820 --> 00:12:14,260
the ciphertext<font color="#CCCCCC"> and like that we can make</font>

298
00:12:12,760 --> 00:12:16,270
<font color="#CCCCCC">sure that nobody modified it right</font>

299
00:12:14,260 --> 00:12:18,300
<font color="#E5E5E5">usually</font><font color="#CCCCCC"> you use something</font><font color="#E5E5E5"> like a</font><font color="#CCCCCC"> ES GCM</font>

300
00:12:16,270 --> 00:12:20,620
that takes care<font color="#E5E5E5"> of that</font>

301
00:12:18,300 --> 00:12:23,920
so<font color="#CCCCCC"> here a very simple way we can just</font>

302
00:12:20,620 --> 00:12:25,870
absorb the plaintext permute exactly

303
00:12:23,920 --> 00:12:27,729
like we did<font color="#CCCCCC"> for</font><font color="#E5E5E5"> hashing right and we</font>

304
00:12:25,870 --> 00:12:29,350
create basically a hash out<font color="#CCCCCC"> of that</font>

305
00:12:27,730 --> 00:12:31,720
plaintext<font color="#E5E5E5"> and</font><font color="#CCCCCC"> out of the key because we</font>

306
00:12:29,350 --> 00:12:34,540
<font color="#E5E5E5">absorb</font><font color="#CCCCCC"> everything so the the</font><font color="#E5E5E5"> thing here</font>

307
00:12:31,720 --> 00:12:38,230
in the public<font color="#E5E5E5"> parts will</font><font color="#CCCCCC"> be generated</font>

308
00:12:34,540 --> 00:12:39,790
via everything that was absord<font color="#E5E5E5"> okay so</font>

309
00:12:38,230 --> 00:12:42,340
on the other<font color="#E5E5E5"> side when we receive the</font>

310
00:12:39,790 --> 00:12:43,660
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the tag we decrypt the</font>

311
00:12:42,340 --> 00:12:45,970
ciphertext by doing this little<font color="#E5E5E5"> dance</font>

312
00:12:43,660 --> 00:12:47,680
<font color="#E5E5E5">then we absorb the plant X that we</font>

313
00:12:45,970 --> 00:12:49,270
decrypted<font color="#CCCCCC"> and if we generate something</font>

314
00:12:47,680 --> 00:12:52,089
different<font color="#E5E5E5"> then we know that someone</font>

315
00:12:49,270 --> 00:12:53,350
modified the message but these are

316
00:12:52,090 --> 00:12:56,020
details you don't<font color="#CCCCCC"> have to understand</font>

317
00:12:53,350 --> 00:13:00,100
everything<font color="#E5E5E5"> here but this is what we can</font>

318
00:12:56,020 --> 00:13:02,020
<font color="#E5E5E5">use this top</font><font color="#CCCCCC"> likes construction for what</font>

319
00:13:00,100 --> 00:13:03,850
if we want to<font color="#E5E5E5"> encrypt again well we can</font>

320
00:13:02,020 --> 00:13:05,890
<font color="#CCCCCC">just continue here and permit again do</font>

321
00:13:03,850 --> 00:13:07,390
this little<font color="#CCCCCC"> dance to</font><font color="#E5E5E5"> encrypt and then do</font>

322
00:13:05,890 --> 00:13:09,400
this little dance<font color="#CCCCCC"> to generate an</font>

323
00:13:07,390 --> 00:13:12,189
authentication tag<font color="#E5E5E5"> to authenticate</font><font color="#CCCCCC"> the</font>

324
00:13:09,400 --> 00:13:14,470
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it works</font><font color="#CCCCCC"> we didn't set up</font>

325
00:13:12,190 --> 00:13:18,220
any<font color="#E5E5E5"> nonces and encounters any</font><font color="#CCCCCC"> IVs it</font>

326
00:13:14,470 --> 00:13:20,230
just works<font color="#CCCCCC"> the second</font><font color="#E5E5E5"> cool thing</font><font color="#CCCCCC"> here is</font>

327
00:13:18,220 --> 00:13:22,970
that<font color="#E5E5E5"> when I generate this tag number two</font>

328
00:13:20,230 --> 00:13:25,670
<font color="#E5E5E5">I don't only authenticate</font>

329
00:13:22,970 --> 00:13:27,319
this<font color="#E5E5E5"> ciphertext here but I also attenti</font>

330
00:13:25,670 --> 00:13:29,540
<font color="#E5E5E5">Kate this one here that I</font><font color="#CCCCCC"> absorbed and</font>

331
00:13:27,319 --> 00:13:30,819
the key<font color="#E5E5E5"> so basically whenever I</font>

332
00:13:29,540 --> 00:13:33,649
<font color="#CCCCCC">authenticate</font>

333
00:13:30,819 --> 00:13:36,439
something<font color="#E5E5E5"> our authenticate the whole</font>

334
00:13:33,649 --> 00:13:39,230
<font color="#E5E5E5">session not just the last ciphertext the</font>

335
00:13:36,439 --> 00:13:42,079
whole session so this is a very cool

336
00:13:39,230 --> 00:13:43,579
property to have for<font color="#E5E5E5"> protocol because</font>

337
00:13:42,079 --> 00:13:45,378
<font color="#CCCCCC">like</font><font color="#E5E5E5"> that you can make sure</font><font color="#CCCCCC"> that you</font>

338
00:13:43,579 --> 00:13:47,779
have consistency<font color="#E5E5E5"> on both side</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

339
00:13:45,379 --> 00:13:50,389
connection nobody has reordered messages

340
00:13:47,779 --> 00:13:53,269
replied messages inserted things or<font color="#E5E5E5"> drop</font>

341
00:13:50,389 --> 00:13:58,879
things both side of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> connections are</font>

342
00:13:53,269 --> 00:14:00,769
seeing the same<font color="#CCCCCC"> thing strobe</font><font color="#E5E5E5"> so the</font>

343
00:13:58,879 --> 00:14:02,480
point of<font color="#E5E5E5"> my second part is a protocol</font>

344
00:14:00,769 --> 00:14:03,889
framework that gives<font color="#E5E5E5"> you access to the</font>

345
00:14:02,480 --> 00:14:06,560
duplex construction so you have all

346
00:14:03,889 --> 00:14:08,269
these functions here and you have what

347
00:14:06,560 --> 00:14:09,979
they do on the duplex construction so it

348
00:14:08,269 --> 00:14:12,139
don't<font color="#E5E5E5"> look too much at</font><font color="#CCCCCC"> that it's</font><font color="#E5E5E5"> just a</font>

349
00:14:09,980 --> 00:14:14,779
nice diagram<font color="#E5E5E5"> but basically that</font><font color="#CCCCCC"> what</font>

350
00:14:12,139 --> 00:14:17,899
<font color="#CCCCCC">strobe is it really gives you access to</font>

351
00:14:14,779 --> 00:14:20,449
<font color="#E5E5E5">this state and every time you do some</font>

352
00:14:17,899 --> 00:14:23,810
operation<font color="#E5E5E5"> you're continuously</font><font color="#CCCCCC"> muted that</font>

353
00:14:20,449 --> 00:14:25,160
<font color="#E5E5E5">states influencing new things that</font>

354
00:14:23,810 --> 00:14:26,628
you're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do in the</font><font color="#CCCCCC"> future and</font>

355
00:14:25,160 --> 00:14:30,860
being influenced<font color="#CCCCCC"> by what happened</font>

356
00:14:26,629 --> 00:14:32,269
<font color="#CCCCCC">previously so before I get</font><font color="#E5E5E5"> too much into</font>

357
00:14:30,860 --> 00:14:34,579
<font color="#E5E5E5">the details I</font><font color="#CCCCCC"> just want to give you an</font>

358
00:14:32,269 --> 00:14:37,459
overview of<font color="#E5E5E5"> how you would use</font><font color="#CCCCCC"> that as a</font>

359
00:14:34,579 --> 00:14:40,459
<font color="#E5E5E5">developer so a very simple</font><font color="#CCCCCC"> example okay</font>

360
00:14:37,459 --> 00:14:44,209
what does<font color="#E5E5E5"> it mean to use</font><font color="#CCCCCC"> the strobe</font>

361
00:14:40,459 --> 00:14:46,699
protocol framework so we're<font color="#E5E5E5"> going to</font>

362
00:14:44,209 --> 00:14:48,258
<font color="#E5E5E5">build a protocol and I have two devices</font>

363
00:14:46,699 --> 00:14:49,878
I want to encrypt communications between

364
00:14:48,259 --> 00:14:52,279
<font color="#E5E5E5">them what I will do is that I</font>

365
00:14:49,879 --> 00:14:54,800
instantiate the strobe objects via<font color="#CCCCCC"> this</font>

366
00:14:52,279 --> 00:14:56,779
function and a string so for example my

367
00:14:54,800 --> 00:15:00,740
website<font color="#CCCCCC"> would come or my protocol or</font>

368
00:14:56,779 --> 00:15:02,959
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that then</font><font color="#E5E5E5"> I absorb or</font>

369
00:15:00,740 --> 00:15:05,059
shared secrets<font color="#E5E5E5"> so I absorb it with a</font>

370
00:15:02,959 --> 00:15:07,339
function<font color="#CCCCCC"> called</font><font color="#E5E5E5"> ad that strobe give us</font>

371
00:15:05,059 --> 00:15:11,029
gives us authentication authenticated

372
00:15:07,339 --> 00:15:13,309
data and I do that on<font color="#E5E5E5"> both side right so</font>

373
00:15:11,029 --> 00:15:15,439
shared<font color="#CCCCCC"> secret so both devices have this</font>

374
00:15:13,309 --> 00:15:16,819
shared secret<font color="#CCCCCC"> I know I have a</font><font color="#E5E5E5"> secret in</font>

375
00:15:15,439 --> 00:15:18,860
place so I can encrypt so I can use the

376
00:15:16,819 --> 00:15:21,110
<font color="#E5E5E5">same</font><font color="#CCCCCC"> encrypt</font><font color="#E5E5E5"> command to encrypt</font><font color="#CCCCCC"> the get</font>

377
00:15:18,860 --> 00:15:22,790
<font color="#E5E5E5">request for example right makes sense</font>

378
00:15:21,110 --> 00:15:25,639
I'm sending some encryption<font color="#E5E5E5"> encrypted</font>

379
00:15:22,790 --> 00:15:27,769
data of course<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to authenticate</font>

380
00:15:25,639 --> 00:15:29,769
<font color="#CCCCCC">what I just</font><font color="#E5E5E5"> sent so I use the send Mac</font>

381
00:15:27,769 --> 00:15:33,529
for message authentication code with a

382
00:15:29,769 --> 00:15:35,269
<font color="#E5E5E5">16</font><font color="#CCCCCC"> byte</font><font color="#E5E5E5"> mark and I send</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and on the</font>

383
00:15:33,529 --> 00:15:36,930
<font color="#CCCCCC">other</font><font color="#E5E5E5"> side</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> receive it so I do the</font>

384
00:15:35,269 --> 00:15:39,990
inverse operation<font color="#CCCCCC"> to</font><font color="#E5E5E5"> decrypt</font>

385
00:15:36,930 --> 00:15:43,709
<font color="#E5E5E5">receive ank and I use receive</font><font color="#CCCCCC"> Mack</font><font color="#E5E5E5"> to</font>

386
00:15:39,990 --> 00:15:45,330
verify the tag<font color="#E5E5E5"> if it's incorrect</font><font color="#CCCCCC"> it</font>

387
00:15:43,710 --> 00:15:47,130
means that<font color="#E5E5E5"> somebody must have tampered</font>

388
00:15:45,330 --> 00:15:50,700
with the<font color="#E5E5E5"> connection so I can just abort</font>

389
00:15:47,130 --> 00:15:52,500
the connection<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very simple protocol</font>

390
00:15:50,700 --> 00:15:54,180
right<font color="#CCCCCC"> I</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> use these</font><font color="#E5E5E5"> functions on both</font>

391
00:15:52,500 --> 00:15:56,850
<font color="#CCCCCC">sides of</font><font color="#E5E5E5"> the connection and I encrypt my</font>

392
00:15:54,180 --> 00:15:58,380
data now if I want to continue

393
00:15:56,850 --> 00:16:00,870
encrypting I will just<font color="#E5E5E5"> continue</font><font color="#CCCCCC"> to use</font>

394
00:15:58,380 --> 00:16:03,689
<font color="#E5E5E5">the</font><font color="#CCCCCC"> sent ank and send mac to encrypt</font><font color="#E5E5E5"> and</font>

395
00:16:00,870 --> 00:16:06,240
authenticate and I will never have<font color="#CCCCCC"> to</font>

396
00:16:03,690 --> 00:16:08,760
figure<font color="#E5E5E5"> out how to create some non C's or</font>

397
00:16:06,240 --> 00:16:10,980
some IVs and every time I authenticate

398
00:16:08,760 --> 00:16:14,819
<font color="#E5E5E5">I authenticate the whole session not</font>

399
00:16:10,980 --> 00:16:17,190
just the last thing I<font color="#E5E5E5"> sent so</font><font color="#CCCCCC"> Straub is</font>

400
00:16:14,820 --> 00:16:19,920
first and<font color="#CCCCCC"> foremost</font><font color="#E5E5E5"> this thing it's a</font>

401
00:16:17,190 --> 00:16:23,339
flexible<font color="#E5E5E5"> framework to build some</font>

402
00:16:19,920 --> 00:16:24,810
protocols it's more than<font color="#E5E5E5"> that though</font>

403
00:16:23,339 --> 00:16:26,730
<font color="#CCCCCC">since</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> access to</font><font color="#E5E5E5"> all these</font>

404
00:16:24,810 --> 00:16:28,619
commands<font color="#CCCCCC"> to all these functions you can</font>

405
00:16:26,730 --> 00:16:32,390
kind of mix<font color="#E5E5E5"> and match them to create</font>

406
00:16:28,620 --> 00:16:34,709
just simple<font color="#E5E5E5"> cryptographic operations</font>

407
00:16:32,390 --> 00:16:37,800
<font color="#CCCCCC">what do I</font><font color="#E5E5E5"> mean by that well imagine you</font>

408
00:16:34,709 --> 00:16:39,750
want to<font color="#E5E5E5"> hash you have the code of stroke</font>

409
00:16:37,800 --> 00:16:41,459
because you're using it to I don't<font color="#CCCCCC"> know</font>

410
00:16:39,750 --> 00:16:43,080
build your protocol<font color="#CCCCCC"> so you can just use</font>

411
00:16:41,459 --> 00:16:44,729
<font color="#E5E5E5">drug to instantiate</font><font color="#CCCCCC"> it as a hash</font>

412
00:16:43,080 --> 00:16:46,970
function<font color="#E5E5E5"> and here I call my hash</font>

413
00:16:44,730 --> 00:16:49,500
function<font color="#CCCCCC"> david wong hash it's my hash i</font>

414
00:16:46,970 --> 00:16:51,750
absorbed the message<font color="#CCCCCC"> i want to hash with</font>

415
00:16:49,500 --> 00:16:53,760
the same ad function and then<font color="#E5E5E5"> i use</font>

416
00:16:51,750 --> 00:16:57,720
another<font color="#E5E5E5"> function PRF to get an</font><font color="#CCCCCC"> output</font>

417
00:16:53,760 --> 00:16:59,459
and here<font color="#CCCCCC"> i</font><font color="#E5E5E5"> want a 32 byte hash so here</font><font color="#CCCCCC"> I</font>

418
00:16:57,720 --> 00:17:01,880
<font color="#CCCCCC">just use the same</font><font color="#E5E5E5"> code the same code</font>

419
00:16:59,459 --> 00:17:04,379
<font color="#CCCCCC">base</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> just use</font><font color="#E5E5E5"> it as a hash function</font>

420
00:17:01,880 --> 00:17:06,839
so it's<font color="#E5E5E5"> very interesting because</font><font color="#CCCCCC"> you get</font>

421
00:17:04,380 --> 00:17:08,670
not only<font color="#CCCCCC"> this</font><font color="#E5E5E5"> this protocol framework</font>

422
00:17:06,839 --> 00:17:13,169
but you also<font color="#E5E5E5"> get a cryptographic library</font>

423
00:17:08,670 --> 00:17:15,510
for<font color="#E5E5E5"> free all of that relies on the</font>

424
00:17:13,170 --> 00:17:18,329
<font color="#CCCCCC">shatori standard</font><font color="#E5E5E5"> it uses the permutation</font>

425
00:17:15,510 --> 00:17:20,040
in size of<font color="#CCCCCC"> shatori</font><font color="#E5E5E5"> so the security comes</font>

426
00:17:18,329 --> 00:17:23,399
from somewhere<font color="#E5E5E5"> it's not just roll</font><font color="#CCCCCC"> here</font>

427
00:17:20,040 --> 00:17:25,859
<font color="#E5E5E5">on crypto and since it only relies on</font>

428
00:17:23,400 --> 00:17:27,750
sherry<font color="#E5E5E5"> it's very very very small it's</font>

429
00:17:25,859 --> 00:17:30,510
only a thousand lines of code<font color="#CCCCCC"> for the</font>

430
00:17:27,750 --> 00:17:33,510
reference<font color="#E5E5E5"> implementation in C there is a</font>

431
00:17:30,510 --> 00:17:34,980
<font color="#E5E5E5">Python implementation there is I made a</font>

432
00:17:33,510 --> 00:17:36,600
goal<font color="#E5E5E5"> and implementation it's also a</font>

433
00:17:34,980 --> 00:17:37,920
thousand<font color="#E5E5E5"> lines of code</font><font color="#CCCCCC"> so it's very</font>

434
00:17:36,600 --> 00:17:40,559
<font color="#E5E5E5">small it's very good</font><font color="#CCCCCC"> for embedded</font>

435
00:17:37,920 --> 00:17:42,420
<font color="#CCCCCC">devices and all that stuff so if you</font>

436
00:17:40,559 --> 00:17:46,620
want<font color="#E5E5E5"> to look at the specification it's</font>

437
00:17:42,420 --> 00:17:48,800
on strobe dot sourceforge.net<font color="#CCCCCC"> by Mike</font>

438
00:17:46,620 --> 00:17:52,459
<font color="#CCCCCC">hammer</font>

439
00:17:48,800 --> 00:17:55,280
and<font color="#E5E5E5"> it's alpha so it's it's still</font>

440
00:17:52,460 --> 00:18:01,070
<font color="#E5E5E5">experimental but it's it's so it's built</font>

441
00:17:55,280 --> 00:18:02,690
<font color="#E5E5E5">on solid foundations all right so that's</font>

442
00:18:01,070 --> 00:18:04,730
<font color="#E5E5E5">basically what a stroke is just this</font>

443
00:18:02,690 --> 00:18:06,070
kind<font color="#E5E5E5"> of protocol framework built on top</font>

444
00:18:04,730 --> 00:18:09,260
of<font color="#E5E5E5"> sha-3</font>

445
00:18:06,070 --> 00:18:11,240
so now<font color="#E5E5E5"> I'm going to talk about noise</font><font color="#CCCCCC"> so</font>

446
00:18:09,260 --> 00:18:13,220
<font color="#CCCCCC">I if you kind of lost</font><font color="#E5E5E5"> track of what I'm</font>

447
00:18:11,240 --> 00:18:14,870
<font color="#E5E5E5">talking about</font><font color="#CCCCCC"> I'm really</font><font color="#E5E5E5"> taking a break</font>

448
00:18:13,220 --> 00:18:17,570
from<font color="#CCCCCC"> sherry so you can get back into</font><font color="#E5E5E5"> the</font>

449
00:18:14,870 --> 00:18:20,540
talk now what is<font color="#E5E5E5"> noise now this is a</font>

450
00:18:17,570 --> 00:18:24,080
protocol framework to build stuff like

451
00:18:20,540 --> 00:18:28,280
TLS so I'm going<font color="#E5E5E5"> to be talking about TLS</font>

452
00:18:24,080 --> 00:18:30,770
first<font color="#E5E5E5"> just a recap so what is TLS tillis</font>

453
00:18:28,280 --> 00:18:32,690
is the de<font color="#CCCCCC"> facto standard for</font><font color="#E5E5E5"> encrypting</font>

454
00:18:30,770 --> 00:18:35,929
communications right we have other

455
00:18:32,690 --> 00:18:39,130
standards like SSH or IPSec etc but GLS

456
00:18:35,929 --> 00:18:41,750
<font color="#CCCCCC">is really the most</font><font color="#E5E5E5"> popular one</font><font color="#CCCCCC"> right</font>

457
00:18:39,130 --> 00:18:45,050
it's a<font color="#E5E5E5"> very complex specification I</font>

458
00:18:41,750 --> 00:18:46,520
don't know if you've tried<font color="#E5E5E5"> to read the</font>

459
00:18:45,050 --> 00:18:52,090
specification of TLS it's called a

460
00:18:46,520 --> 00:18:52,090
<font color="#E5E5E5">request for RFC record request for</font>

461
00:18:52,420 --> 00:18:57,980
<font color="#E5E5E5">request for what request for comment</font>

462
00:18:55,220 --> 00:18:59,240
thank you our<font color="#E5E5E5"> secrets for comments it's</font>

463
00:18:57,980 --> 00:19:01,340
a lot of<font color="#E5E5E5"> them actually</font>

464
00:18:59,240 --> 00:19:05,480
you have SSL version I don't know what

465
00:19:01,340 --> 00:19:06,830
<font color="#E5E5E5">TLS 1.0 TLS 121 tell us</font><font color="#CCCCCC"> 1.2</font><font color="#E5E5E5"> so depending</font>

466
00:19:05,480 --> 00:19:09,920
<font color="#CCCCCC">on</font><font color="#E5E5E5"> what you want to support you have to</font>

467
00:19:06,830 --> 00:19:11,899
read several<font color="#E5E5E5"> ones and also a bunch of</font>

468
00:19:09,920 --> 00:19:14,030
<font color="#E5E5E5">these I've been broken in the past so</font>

469
00:19:11,900 --> 00:19:17,120
there is that it's not just one

470
00:19:14,030 --> 00:19:19,250
specification<font color="#E5E5E5"> it's also if you start</font>

471
00:19:17,120 --> 00:19:21,199
reading one of<font color="#E5E5E5"> them you have to read a</font>

472
00:19:19,250 --> 00:19:22,970
<font color="#E5E5E5">bunch of them so there are a bunch</font><font color="#CCCCCC"> of</font>

473
00:19:21,200 --> 00:19:24,320
them<font color="#E5E5E5"> for certificates if you want to use</font>

474
00:19:22,970 --> 00:19:26,540
<font color="#E5E5E5">certificates and a public key</font>

475
00:19:24,320 --> 00:19:27,320
infrastructure<font color="#E5E5E5"> they're a bunch of them</font>

476
00:19:26,540 --> 00:19:29,870
if you want to<font color="#E5E5E5"> use different</font>

477
00:19:27,320 --> 00:19:31,639
cryptographic primitives<font color="#E5E5E5"> there are bunch</font>

478
00:19:29,870 --> 00:19:33,739
of them depending of the<font color="#E5E5E5"> extensions you</font>

479
00:19:31,640 --> 00:19:38,330
<font color="#E5E5E5">want to use of course certificates have</font>

480
00:19:33,740 --> 00:19:40,660
their own extensions<font color="#CCCCCC"> and it's a lot to</font>

481
00:19:38,330 --> 00:19:43,790
digest

482
00:19:40,660 --> 00:19:45,440
if it carries a lot<font color="#CCCCCC"> of legacy</font><font color="#E5E5E5"> decisions</font>

483
00:19:43,790 --> 00:19:47,809
a lot<font color="#CCCCCC"> of things are done</font><font color="#E5E5E5"> to really</font>

484
00:19:45,440 --> 00:19:50,480
support<font color="#E5E5E5"> older versions so if you look at</font>

485
00:19:47,809 --> 00:19:52,580
TLS 1.3 you will see that<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of</font>

486
00:19:50,480 --> 00:19:54,670
<font color="#E5E5E5">messages really look like older versions</font>

487
00:19:52,580 --> 00:19:57,530
of TLS or SSL just because otherwise

488
00:19:54,670 --> 00:19:59,750
nobody knows how to parse<font color="#E5E5E5"> these messages</font>

489
00:19:57,530 --> 00:20:02,580
and<font color="#E5E5E5"> it breaks the internet so it's kind</font>

490
00:19:59,750 --> 00:20:05,010
<font color="#CCCCCC">of ugly and because of legacy</font>

491
00:20:02,580 --> 00:20:07,379
and of course if you want to<font color="#E5E5E5"> use it</font><font color="#CCCCCC"> you</font>

492
00:20:05,010 --> 00:20:09,660
have<font color="#CCCCCC"> this huge and scary</font><font color="#E5E5E5"> libraries I'll</font>

493
00:20:07,380 --> 00:20:12,570
just mention<font color="#CCCCCC"> OpenSSL but basically</font>

494
00:20:09,660 --> 00:20:16,020
<font color="#CCCCCC">OpenSSL is so scary that people have 42</font>

495
00:20:12,570 --> 00:20:20,189
make it better<font color="#CCCCCC"> so you have like boring</font>

496
00:20:16,020 --> 00:20:22,230
SSL or<font color="#CCCCCC"> libras to</font><font color="#E5E5E5"> sell etc if you want</font><font color="#CCCCCC"> to</font>

497
00:20:20,190 --> 00:20:24,930
use it it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> that simple so</font><font color="#E5E5E5"> you have</font>

498
00:20:22,230 --> 00:20:26,670
to configure<font color="#E5E5E5"> it and the documentation is</font>

499
00:20:24,930 --> 00:20:28,380
not<font color="#E5E5E5"> very clear usually so you have to</font>

500
00:20:26,670 --> 00:20:30,840
read these<font color="#CCCCCC"> books</font><font color="#E5E5E5"> but then these books</font>

501
00:20:28,380 --> 00:20:33,390
are<font color="#E5E5E5"> pretty old so it doesn't really work</font>

502
00:20:30,840 --> 00:20:35,399
<font color="#E5E5E5">for the new versions and so I'm a</font>

503
00:20:33,390 --> 00:20:37,740
<font color="#E5E5E5">security consultant</font><font color="#CCCCCC"> and I often</font><font color="#E5E5E5"> look at</font>

504
00:20:35,400 --> 00:20:39,120
clients<font color="#CCCCCC"> using open SSL</font><font color="#E5E5E5"> and most of the</font>

505
00:20:37,740 --> 00:20:41,400
time they forget<font color="#CCCCCC"> to use the right</font>

506
00:20:39,120 --> 00:20:43,320
<font color="#CCCCCC">function - I</font><font color="#E5E5E5"> don't know verify</font>

507
00:20:41,400 --> 00:20:45,510
certificates or verified the<font color="#E5E5E5"> hostname in</font>

508
00:20:43,320 --> 00:20:47,520
a<font color="#E5E5E5"> certificate orders just verify the</font>

509
00:20:45,510 --> 00:20:51,000
return value of<font color="#E5E5E5"> a function</font><font color="#CCCCCC"> and then you</font>

510
00:20:47,520 --> 00:20:54,240
have a an<font color="#E5E5E5"> open fill so it's quite tricky</font>

511
00:20:51,000 --> 00:20:56,070
<font color="#CCCCCC">to use now if you want to implement</font><font color="#E5E5E5"> it</font>

512
00:20:54,240 --> 00:20:59,970
<font color="#CCCCCC">yourself first</font><font color="#E5E5E5"> don't even try to do that</font>

513
00:20:56,070 --> 00:21:01,679
it's not<font color="#CCCCCC"> it's impossible</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so that's</font>

514
00:20:59,970 --> 00:21:03,540
something<font color="#E5E5E5"> I tend to look at also as part</font>

515
00:21:01,680 --> 00:21:06,690
of my<font color="#CCCCCC"> work and it's always riddled with</font>

516
00:21:03,540 --> 00:21:09,690
bugs<font color="#CCCCCC"> so that makes my job</font><font color="#E5E5E5"> more fun but</font>

517
00:21:06,690 --> 00:21:12,060
don't try to<font color="#E5E5E5"> do it yourself</font><font color="#CCCCCC"> if all</font><font color="#E5E5E5"> these</font>

518
00:21:09,690 --> 00:21:13,140
libraries<font color="#E5E5E5"> have had their share of</font>

519
00:21:12,060 --> 00:21:15,270
problems right<font color="#E5E5E5"> you have a lot of</font>

520
00:21:13,140 --> 00:21:17,940
vulnerabilities<font color="#CCCCCC"> file every day not every</font>

521
00:21:15,270 --> 00:21:20,070
<font color="#CCCCCC">day but you</font><font color="#E5E5E5"> have a lot of programs it's</font>

522
00:21:17,940 --> 00:21:22,080
<font color="#E5E5E5">not because there are bad developers is</font>

523
00:21:20,070 --> 00:21:26,100
really because TLS is very complex<font color="#E5E5E5"> it's</font>

524
00:21:22,080 --> 00:21:28,439
complex to<font color="#CCCCCC"> implement so that's bad and</font>

525
00:21:26,100 --> 00:21:30,840
worse<font color="#CCCCCC"> the kind of thing I see sometimes</font>

526
00:21:28,440 --> 00:21:33,960
are<font color="#E5E5E5"> reinvented protocols proprietary</font>

527
00:21:30,840 --> 00:21:35,760
protocols that<font color="#CCCCCC"> are influenced by</font><font color="#E5E5E5"> TLS so</font>

528
00:21:33,960 --> 00:21:39,030
that's<font color="#CCCCCC"> usually</font><font color="#E5E5E5"> that's completely broken</font>

529
00:21:35,760 --> 00:21:40,920
<font color="#E5E5E5">so don't even try</font><font color="#CCCCCC"> so here the problem</font><font color="#E5E5E5"> is</font>

530
00:21:39,030 --> 00:21:43,590
that complexity<font color="#E5E5E5"> is the enemy of security</font>

531
00:21:40,920 --> 00:21:45,990
TLS is way too complex to use<font color="#E5E5E5"> or</font>

532
00:21:43,590 --> 00:21:46,409
implement it's it's it's hard it's it's

533
00:21:45,990 --> 00:21:48,030
<font color="#E5E5E5">not easy</font>

534
00:21:46,410 --> 00:21:50,780
people make mistakes but it's not their

535
00:21:48,030 --> 00:21:53,790
fault<font color="#CCCCCC"> this this thing is not</font><font color="#E5E5E5"> easy</font><font color="#CCCCCC"> to use</font>

536
00:21:50,780 --> 00:21:55,530
<font color="#E5E5E5">so do we have an alternative if we want</font>

537
00:21:53,790 --> 00:21:58,080
<font color="#E5E5E5">to use something else than TLS what is</font>

538
00:21:55,530 --> 00:22:01,379
out<font color="#E5E5E5"> there well the</font><font color="#CCCCCC"> nice protocol</font>

539
00:21:58,080 --> 00:22:03,720
framework is exactly that was invented

540
00:22:01,380 --> 00:22:06,660
<font color="#CCCCCC">by</font><font color="#E5E5E5"> Trevor Perrin</font><font color="#CCCCCC"> the inventor of signal</font>

541
00:22:03,720 --> 00:22:08,160
the signal protocols<font color="#E5E5E5"> and it's it's a</font>

542
00:22:06,660 --> 00:22:09,990
framework<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's exactly like the</font>

543
00:22:08,160 --> 00:22:11,430
<font color="#E5E5E5">strobe protocol framework it's not</font>

544
00:22:09,990 --> 00:22:13,140
something you<font color="#E5E5E5"> can use out</font><font color="#CCCCCC"> of the box</font>

545
00:22:11,430 --> 00:22:15,180
<font color="#E5E5E5">it's something that you can use to build</font>

546
00:22:13,140 --> 00:22:17,390
a protocol<font color="#E5E5E5"> something they</font><font color="#CCCCCC"> can use to</font>

547
00:22:15,180 --> 00:22:21,510
<font color="#E5E5E5">build something like TLS</font>

548
00:22:17,390 --> 00:22:23,400
so for example<font color="#CCCCCC"> Telus most of the time</font>

549
00:22:21,510 --> 00:22:25,230
you will use<font color="#E5E5E5"> certificates or a public</font>

550
00:22:23,400 --> 00:22:28,050
key infrastructure and if you don't want

551
00:22:25,230 --> 00:22:30,360
to use these<font color="#E5E5E5"> it's it's tricky it's very</font>

552
00:22:28,050 --> 00:22:31,889
tricky<font color="#E5E5E5"> in noise you can just use plain</font>

553
00:22:30,360 --> 00:22:33,990
<font color="#CCCCCC">Keys we don't have to use these</font>

554
00:22:31,890 --> 00:22:35,700
<font color="#CCCCCC">certificates and if you don't want to</font>

555
00:22:33,990 --> 00:22:37,350
use a public<font color="#E5E5E5"> infrastructure if you</font>

556
00:22:35,700 --> 00:22:38,910
<font color="#CCCCCC">already</font><font color="#E5E5E5"> know the public in Advent for</font>

557
00:22:37,350 --> 00:22:40,800
example if you have<font color="#CCCCCC"> some shared secret</font>

558
00:22:38,910 --> 00:22:41,280
or<font color="#E5E5E5"> something like that you can do that</font>

559
00:22:40,800 --> 00:22:44,700
as<font color="#E5E5E5"> well</font>

560
00:22:41,280 --> 00:22:46,350
<font color="#CCCCCC">entry it's very easy to do that so noise</font>

561
00:22:44,700 --> 00:22:48,330
is actually<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> different</font>

562
00:22:46,350 --> 00:22:50,129
handshakes<font color="#E5E5E5"> a lot of different ways to</font><font color="#CCCCCC"> do</font>

563
00:22:48,330 --> 00:22:53,250
<font color="#E5E5E5">things that you can choose from it's</font>

564
00:22:50,130 --> 00:22:54,780
very<font color="#CCCCCC"> flexible so if you look at the</font>

565
00:22:53,250 --> 00:22:56,880
specification you will see that maybe

566
00:22:54,780 --> 00:22:59,040
like maybe<font color="#E5E5E5"> not half of it but a large</font>

567
00:22:56,880 --> 00:23:01,440
part of the specification<font color="#CCCCCC"> spends a lot</font>

568
00:22:59,040 --> 00:23:03,540
of time analyzing<font color="#E5E5E5"> all these handshakes</font>

569
00:23:01,440 --> 00:23:04,830
<font color="#E5E5E5">and telling you what kind of</font><font color="#CCCCCC"> security</font>

570
00:23:03,540 --> 00:23:07,560
<font color="#CCCCCC">you</font><font color="#E5E5E5"> get for what kind of handshake</font>

571
00:23:04,830 --> 00:23:09,990
<font color="#E5E5E5">you're choosing once you know what you</font>

572
00:23:07,560 --> 00:23:12,540
want to use for your<font color="#E5E5E5"> specific setup it's</font>

573
00:23:09,990 --> 00:23:15,060
very straightforward<font color="#E5E5E5"> to implement</font><font color="#CCCCCC"> it's</font>

574
00:23:12,540 --> 00:23:16,830
around 2,000 lines of code if you want

575
00:23:15,060 --> 00:23:18,690
<font color="#E5E5E5">to</font><font color="#CCCCCC"> implement the</font><font color="#E5E5E5"> whole of noise and</font>

576
00:23:16,830 --> 00:23:21,840
usually you<font color="#CCCCCC"> just want to</font><font color="#E5E5E5"> implement one</font>

577
00:23:18,690 --> 00:23:23,250
part<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> have to implement it</font>

578
00:23:21,840 --> 00:23:25,740
yourself of<font color="#CCCCCC"> course you already</font><font color="#E5E5E5"> have</font>

579
00:23:23,250 --> 00:23:28,050
libraries in all major languages<font color="#CCCCCC"> to use</font>

580
00:23:25,740 --> 00:23:29,670
it so you<font color="#CCCCCC"> just</font><font color="#E5E5E5"> use these libraries and</font>

581
00:23:28,050 --> 00:23:32,940
you build your own protocol<font color="#CCCCCC"> out of that</font>

582
00:23:29,670 --> 00:23:35,280
and once you<font color="#E5E5E5"> have what you want</font><font color="#CCCCCC"> there is</font>

583
00:23:32,940 --> 00:23:39,300
<font color="#E5E5E5">a minimal configuration or zero</font>

584
00:23:35,280 --> 00:23:41,399
configuration<font color="#CCCCCC"> and it just works it's not</font>

585
00:23:39,300 --> 00:23:43,169
<font color="#E5E5E5">just a weird protocol that I'm telling</font>

586
00:23:41,400 --> 00:23:45,030
<font color="#CCCCCC">you about today it's used by whatsapp</font>

587
00:23:43,170 --> 00:23:47,010
which is by<font color="#CCCCCC"> slack</font><font color="#E5E5E5"> by the beacon lighting</font>

588
00:23:45,030 --> 00:23:48,810
<font color="#E5E5E5">Network it's used I've heard by</font>

589
00:23:47,010 --> 00:23:51,210
governments but<font color="#E5E5E5"> I don't have any insight</font>

590
00:23:48,810 --> 00:23:56,340
<font color="#CCCCCC">into that it's used by a lot of</font><font color="#E5E5E5"> people</font>

591
00:23:51,210 --> 00:24:01,680
<font color="#E5E5E5">so it's it's not it's not</font><font color="#CCCCCC"> just a weird</font>

592
00:23:56,340 --> 00:24:03,929
spec so bottom line<font color="#E5E5E5"> if you have a good</font>

593
00:24:01,680 --> 00:24:07,260
excuse<font color="#CCCCCC"> not to use</font><font color="#E5E5E5"> TLS noises the answer</font>

594
00:24:03,930 --> 00:24:09,480
<font color="#E5E5E5">not anything else</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so I'm going</font>

595
00:24:07,260 --> 00:24:14,460
<font color="#CCCCCC">to</font><font color="#E5E5E5"> spend a few slides trying to explain</font>

596
00:24:09,480 --> 00:24:16,470
to<font color="#CCCCCC"> you how noise works so when he</font><font color="#E5E5E5"> is</font>

597
00:24:14,460 --> 00:24:17,850
noise first you have to<font color="#E5E5E5"> choose what</font>

598
00:24:16,470 --> 00:24:19,380
cryptographic functions you want to use

599
00:24:17,850 --> 00:24:20,969
<font color="#E5E5E5">they are not so many and you don't</font>

600
00:24:19,380 --> 00:24:22,380
<font color="#E5E5E5">negotiate which one you want you</font><font color="#CCCCCC"> just</font>

601
00:24:20,970 --> 00:24:24,120
<font color="#E5E5E5">have to choose in the beginning and then</font>

602
00:24:22,380 --> 00:24:26,490
you<font color="#E5E5E5"> have to use these ones</font><font color="#CCCCCC"> you cannot</font>

603
00:24:24,120 --> 00:24:27,929
change so for<font color="#E5E5E5"> the key exchange you</font><font color="#CCCCCC"> can</font>

604
00:24:26,490 --> 00:24:29,389
use curve<font color="#E5E5E5"> two five five one nine or</font>

605
00:24:27,930 --> 00:24:33,139
curve for<font color="#CCCCCC"> free</font><font color="#E5E5E5"> eight there</font>

606
00:24:29,389 --> 00:24:36,049
pretty famous actually<font color="#CCCCCC"> curve 448 was</font>

607
00:24:33,139 --> 00:24:39,939
invented by Trevor<font color="#E5E5E5"> by Mike Hamburg the</font>

608
00:24:36,049 --> 00:24:42,139
creator of the<font color="#CCCCCC"> Straub</font><font color="#E5E5E5"> protocol framework</font>

609
00:24:39,940 --> 00:24:44,950
anyway if<font color="#E5E5E5"> you want to encrypt you can</font>

610
00:24:42,139 --> 00:24:47,570
you stretch<font color="#CCCCCC"> out 20 point 1305 or AES GTM</font>

611
00:24:44,950 --> 00:24:49,609
<font color="#E5E5E5">one is fast in software the</font><font color="#CCCCCC"> other one is</font>

612
00:24:47,570 --> 00:24:52,009
fast if you<font color="#CCCCCC"> have a hardware support</font><font color="#E5E5E5"> and</font>

613
00:24:49,609 --> 00:24:54,559
finally<font color="#E5E5E5"> if you want to use a hash you</font>

614
00:24:52,009 --> 00:24:56,119
can use black<font color="#CCCCCC"> 2 or</font><font color="#E5E5E5"> chateau so remember</font>

615
00:24:54,559 --> 00:24:58,219
this Blake was in the<font color="#CCCCCC"> shaft 3</font>

616
00:24:56,119 --> 00:24:59,839
competition and you can also realize

617
00:24:58,219 --> 00:25:04,719
that<font color="#E5E5E5"> there is no shot 3 in there we're</font>

618
00:24:59,839 --> 00:25:06,799
really far<font color="#CCCCCC"> away</font><font color="#E5E5E5"> from shattering</font><font color="#CCCCCC"> alright</font>

619
00:25:04,719 --> 00:25:08,659
so you have<font color="#CCCCCC"> a client you have a server</font>

620
00:25:06,799 --> 00:25:10,489
you want to<font color="#E5E5E5"> encrypt that out so first</font>

621
00:25:08,659 --> 00:25:12,229
you do a<font color="#CCCCCC"> handshake if you know TLS it</font>

622
00:25:10,489 --> 00:25:13,969
should be<font color="#E5E5E5"> pretty straightforward if you</font>

623
00:25:12,229 --> 00:25:16,700
don't know then it's<font color="#E5E5E5"> going to</font><font color="#CCCCCC"> be</font>

624
00:25:13,969 --> 00:25:18,229
protocol 101 for you so here a client on

625
00:25:16,700 --> 00:25:20,959
a server<font color="#E5E5E5"> exchange what they call</font>

626
00:25:18,229 --> 00:25:23,059
ephemeral keys keys data are<font color="#CCCCCC"> generated</font>

627
00:25:20,959 --> 00:25:26,509
only<font color="#E5E5E5"> for this session right those are</font>

628
00:25:23,059 --> 00:25:28,039
not long-term study keys once they

629
00:25:26,509 --> 00:25:29,719
<font color="#E5E5E5">exchange these keys they can do a quick</font>

630
00:25:28,039 --> 00:25:32,809
change<font color="#E5E5E5"> they can do what we call</font><font color="#CCCCCC"> detail</font>

631
00:25:29,719 --> 00:25:34,549
<font color="#E5E5E5">man-cakes change and then they get some</font>

632
00:25:32,809 --> 00:25:36,619
shared secrets that they can use<font color="#CCCCCC"> to</font>

633
00:25:34,549 --> 00:25:38,929
<font color="#CCCCCC">encrypt sin what we call a post</font>

634
00:25:36,619 --> 00:25:40,668
handshake<font color="#CCCCCC"> phase</font><font color="#E5E5E5"> so here's just</font>

635
00:25:38,929 --> 00:25:44,209
application data<font color="#CCCCCC"> whatever you want to</font>

636
00:25:40,669 --> 00:25:46,399
encrypt it's a really protocol 101 here

637
00:25:44,209 --> 00:25:50,329
<font color="#CCCCCC">this most simple kind of key exchange</font>

638
00:25:46,399 --> 00:25:54,228
you can<font color="#CCCCCC"> do now</font><font color="#E5E5E5"> is called ephemeral keys</font>

639
00:25:50,329 --> 00:25:56,269
<font color="#CCCCCC">e</font><font color="#E5E5E5"> a token</font><font color="#CCCCCC"> e and when you do a deal</font>

640
00:25:54,229 --> 00:25:59,119
medications with two or<font color="#E5E5E5"> more keys you</font>

641
00:25:56,269 --> 00:26:02,599
will call that e<font color="#E5E5E5"> e that's how noise</font>

642
00:25:59,119 --> 00:26:04,908
works and then noise<font color="#E5E5E5"> right this kind</font><font color="#CCCCCC"> of</font>

643
00:26:02,599 --> 00:26:07,519
handshake by just writing it with<font color="#E5E5E5"> this</font>

644
00:26:04,909 --> 00:26:10,070
<font color="#E5E5E5">syntax where you send a client</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> formal</font>

645
00:26:07,519 --> 00:26:12,079
key and then the server sends his<font color="#CCCCCC"> a for</font>

646
00:26:10,070 --> 00:26:14,389
monkey and then they do<font color="#CCCCCC"> an</font><font color="#E5E5E5"> D</font><font color="#CCCCCC"> filmin cake</font>

647
00:26:12,079 --> 00:26:15,769
<font color="#CCCCCC">change on both of these keys so that's</font>

648
00:26:14,389 --> 00:26:18,769
the notation you will see if<font color="#E5E5E5"> you look at</font>

649
00:26:15,769 --> 00:26:20,719
the specification there are other tokens

650
00:26:18,769 --> 00:26:23,359
<font color="#CCCCCC">there is a stokin for static keys</font><font color="#E5E5E5"> long</font>

651
00:26:20,719 --> 00:26:24,979
<font color="#E5E5E5">term keys and since there are</font><font color="#CCCCCC"> there's</font>

652
00:26:23,359 --> 00:26:27,408
another kind of key you can do different

653
00:26:24,979 --> 00:26:29,119
<font color="#CCCCCC">kind of D film and key exchange where</font>

654
00:26:27,409 --> 00:26:30,889
you need an F remote key of the client

655
00:26:29,119 --> 00:26:33,049
and<font color="#E5E5E5"> the one of the server or</font><font color="#CCCCCC"> the inverse</font>

656
00:26:30,889 --> 00:26:36,859
or<font color="#E5E5E5"> you do a development exchange with</font>

657
00:26:33,049 --> 00:26:39,379
both study key<font color="#E5E5E5"> and if you have already</font>

658
00:26:36,859 --> 00:26:40,999
pre shared key<font color="#CCCCCC"> or pre shared secrets</font><font color="#E5E5E5"> you</font>

659
00:26:39,379 --> 00:26:42,980
can you can do that kind<font color="#CCCCCC"> of key exchange</font>

660
00:26:40,999 --> 00:26:44,990
as<font color="#CCCCCC"> well</font>

661
00:26:42,980 --> 00:26:46,970
so reading<font color="#E5E5E5"> a lot of tokens and these</font>

662
00:26:44,990 --> 00:26:49,279
tokens are used to build a<font color="#CCCCCC"> lot of</font>

663
00:26:46,970 --> 00:26:52,460
<font color="#E5E5E5">different protocols</font><font color="#CCCCCC"> a lot of different</font>

664
00:26:49,279 --> 00:26:53,899
handshakes you really<font color="#E5E5E5"> and they have</font>

665
00:26:52,460 --> 00:26:55,850
names<font color="#E5E5E5"> and you really have different</font>

666
00:26:53,899 --> 00:26:57,889
<font color="#E5E5E5">handshakes for every situation</font><font color="#CCCCCC"> if you</font>

667
00:26:55,850 --> 00:27:00,019
want to authenticate<font color="#E5E5E5"> the server if you</font>

668
00:26:57,889 --> 00:27:01,370
<font color="#E5E5E5">have public infrastructure you can if</font>

669
00:27:00,019 --> 00:27:02,720
you already know the<font color="#E5E5E5"> public key of the</font>

670
00:27:01,370 --> 00:27:04,340
client you<font color="#CCCCCC"> can authenticate the client</font>

671
00:27:02,720 --> 00:27:06,590
like<font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> have a</font><font color="#CCCCCC"> pre-shot secret</font>

672
00:27:04,340 --> 00:27:08,090
you can use that<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> a lot this is</font><font color="#E5E5E5"> not</font>

673
00:27:06,590 --> 00:27:11,750
<font color="#CCCCCC">an exhaustive list</font><font color="#E5E5E5"> you have a lot</font><font color="#CCCCCC"> of</font>

674
00:27:08,090 --> 00:27:15,199
them but<font color="#E5E5E5"> today for this talk I'm just</font>

675
00:27:11,750 --> 00:27:17,200
going to<font color="#CCCCCC"> focus</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> NX</font><font color="#E5E5E5"> handshake the</font>

676
00:27:15,200 --> 00:27:21,200
first<font color="#CCCCCC"> n means that the</font><font color="#E5E5E5"> client is not</font>

677
00:27:17,200 --> 00:27:23,630
<font color="#E5E5E5">authenticated the second letter X means</font>

678
00:27:21,200 --> 00:27:26,779
that the server sends its study key as

679
00:27:23,630 --> 00:27:28,429
part of the<font color="#E5E5E5"> handshake so that means that</font>

680
00:27:26,779 --> 00:27:31,309
my rings ring a bell

681
00:27:28,429 --> 00:27:33,950
if you know how FCPS work<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> exactly</font>

682
00:27:31,309 --> 00:27:37,029
<font color="#E5E5E5">the web browser web server scenario</font>

683
00:27:33,950 --> 00:27:39,620
right when you go on<font color="#CCCCCC"> HTTPS</font><font color="#E5E5E5"> google.com</font>

684
00:27:37,029 --> 00:27:41,840
the browser doesn't<font color="#E5E5E5"> send a key doesn't</font>

685
00:27:39,620 --> 00:27:44,000
<font color="#E5E5E5">send a certificate but</font><font color="#CCCCCC"> google.com really</font>

686
00:27:41,840 --> 00:27:46,129
sends you a certificate<font color="#E5E5E5"> right so that's</font>

687
00:27:44,000 --> 00:27:48,110
exactly<font color="#E5E5E5"> what's happening here so I chose</font>

688
00:27:46,130 --> 00:27:50,450
this<font color="#E5E5E5"> handshake pattern so I got if you</font>

689
00:27:48,110 --> 00:27:53,139
<font color="#E5E5E5">don't tell</font><font color="#CCCCCC"> us you know</font><font color="#E5E5E5"> HTTPS you can</font>

690
00:27:50,450 --> 00:27:55,370
understand and can follow<font color="#E5E5E5"> more easily</font>

691
00:27:53,139 --> 00:27:57,049
<font color="#CCCCCC">all right so let's read the first token</font>

692
00:27:55,370 --> 00:27:59,299
<font color="#E5E5E5">there it's an e token</font><font color="#CCCCCC"> that means that</font>

693
00:27:57,049 --> 00:28:01,519
the<font color="#E5E5E5"> client has to send an a formal</font>

694
00:27:59,299 --> 00:28:04,070
public<font color="#CCCCCC"> key has to generate one and to</font>

695
00:28:01,519 --> 00:28:06,289
send it and now the client is done there

696
00:28:04,070 --> 00:28:09,110
<font color="#E5E5E5">is</font><font color="#CCCCCC"> nothing more so the client can send</font><font color="#E5E5E5"> a</font>

697
00:28:06,289 --> 00:28:10,519
payload can be<font color="#E5E5E5"> anything can be hey I</font>

698
00:28:09,110 --> 00:28:12,049
want<font color="#E5E5E5"> to talk to that server</font><font color="#CCCCCC"> now that</font>

699
00:28:10,519 --> 00:28:13,519
server<font color="#E5E5E5"> or it can be</font><font color="#CCCCCC"> the name of the</font>

700
00:28:12,049 --> 00:28:18,340
client can<font color="#CCCCCC"> be anything but it's</font><font color="#E5E5E5"> not</font>

701
00:28:13,519 --> 00:28:21,320
encrypted<font color="#E5E5E5"> now is the server's turn right</font>

702
00:28:18,340 --> 00:28:23,658
so the server has<font color="#CCCCCC"> to generate</font><font color="#E5E5E5"> his own</font>

703
00:28:21,320 --> 00:28:25,850
<font color="#E5E5E5">public key</font><font color="#CCCCCC"> ephemeral public key and send</font>

704
00:28:23,659 --> 00:28:29,059
it<font color="#E5E5E5"> and I call that re for</font><font color="#CCCCCC"> remotes</font><font color="#E5E5E5"> a</font>

705
00:28:25,850 --> 00:28:30,949
ephemeral<font color="#CCCCCC"> no we have two kids we</font>

706
00:28:29,059 --> 00:28:33,158
exchanged<font color="#E5E5E5"> two public keys so we</font><font color="#CCCCCC"> can do a</font>

707
00:28:30,950 --> 00:28:38,389
<font color="#CCCCCC">different key exchange</font><font color="#E5E5E5"> on both of these</font>

708
00:28:33,159 --> 00:28:40,429
ephemeral<font color="#E5E5E5"> keys which I'll put a</font><font color="#CCCCCC"> shared</font>

709
00:28:38,389 --> 00:28:42,889
secret<font color="#CCCCCC"> which we can use to encrypt the</font>

710
00:28:40,429 --> 00:28:45,320
next token the next token is a static

711
00:28:42,889 --> 00:28:48,740
key and so here I call it<font color="#CCCCCC"> rs4 remote</font>

712
00:28:45,320 --> 00:28:50,840
static encrypted<font color="#E5E5E5"> we can decrypt it and</font>

713
00:28:48,740 --> 00:28:52,519
<font color="#E5E5E5">we know we</font><font color="#CCCCCC"> have a new key to study key</font>

714
00:28:50,840 --> 00:28:55,010
of the server<font color="#E5E5E5"> that we can use to do this</font>

715
00:28:52,519 --> 00:28:56,820
<font color="#E5E5E5">es which is a</font><font color="#CCCCCC"> D filmin connections</font>

716
00:28:55,010 --> 00:29:00,870
between the ephemeral key of the client

717
00:28:56,820 --> 00:29:02,519
and the<font color="#CCCCCC"> study key of the server and then</font>

718
00:29:00,870 --> 00:29:04,590
it's the<font color="#CCCCCC"> end of the</font><font color="#E5E5E5"> handshake pattern so</font>

719
00:29:02,519 --> 00:29:07,169
the server can<font color="#E5E5E5"> send a payload as well</font>

720
00:29:04,590 --> 00:29:10,350
<font color="#E5E5E5">and encrypt it with a new key derived</font>

721
00:29:07,169 --> 00:29:11,909
from that<font color="#E5E5E5"> last key exchange that payload</font>

722
00:29:10,350 --> 00:29:14,519
<font color="#E5E5E5">can contain whatever the client</font><font color="#CCCCCC"> the</font>

723
00:29:11,909 --> 00:29:16,649
server wants<font color="#CCCCCC"> to send probably here</font><font color="#E5E5E5"> a</font>

724
00:29:14,519 --> 00:29:20,610
signature<font color="#CCCCCC"> over its public key from some</font>

725
00:29:16,649 --> 00:29:22,590
certificate authority or<font color="#E5E5E5"> some pointer so</font>

726
00:29:20,610 --> 00:29:24,779
that's that's<font color="#E5E5E5"> about it that's what noise</font>

727
00:29:22,590 --> 00:29:27,870
does<font color="#CCCCCC"> or when you do an NX handshake</font>

728
00:29:24,779 --> 00:29:30,299
<font color="#CCCCCC">right</font><font color="#E5E5E5"> you exchange</font><font color="#CCCCCC"> some public key some</font>

729
00:29:27,870 --> 00:29:32,399
ephemeral public<font color="#CCCCCC"> keys some static public</font>

730
00:29:30,299 --> 00:29:37,230
<font color="#E5E5E5">keys you do different key exchange and</font>

731
00:29:32,399 --> 00:29:38,850
then you can encrypt<font color="#E5E5E5"> simpler that all</font>

732
00:29:37,230 --> 00:29:42,029
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> I'm going to be talking about</font>

733
00:29:38,850 --> 00:29:44,279
that more<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to go through that</font>

734
00:29:42,029 --> 00:29:47,610
key exchange one more time but<font color="#E5E5E5"> this time</font>

735
00:29:44,279 --> 00:29:49,350
I'm going to<font color="#E5E5E5"> be more specific</font><font color="#CCCCCC"> I'm going</font>

736
00:29:47,610 --> 00:29:51,779
to show<font color="#E5E5E5"> you the internals of noise</font>

737
00:29:49,350 --> 00:29:54,779
<font color="#E5E5E5">what's happening under the surface and</font>

738
00:29:51,779 --> 00:29:58,049
this<font color="#CCCCCC"> is my most complicated</font><font color="#E5E5E5"> slide so</font>

739
00:29:54,779 --> 00:30:00,299
time<font color="#E5E5E5"> to focus</font><font color="#CCCCCC"> again and it's quite heavy</font>

740
00:29:58,049 --> 00:30:02,908
<font color="#E5E5E5">and basically here</font><font color="#CCCCCC"> you only</font><font color="#E5E5E5"> have the</font>

741
00:30:00,299 --> 00:30:05,009
view of<font color="#E5E5E5"> the clients</font><font color="#CCCCCC"> just because</font><font color="#E5E5E5"> I don't</font>

742
00:30:02,909 --> 00:30:07,230
<font color="#E5E5E5">have enough</font><font color="#CCCCCC"> space to put the view of the</font>

743
00:30:05,009 --> 00:30:10,019
server as well<font color="#E5E5E5"> on top you have three</font>

744
00:30:07,230 --> 00:30:11,580
<font color="#E5E5E5">different states they don't matter</font><font color="#CCCCCC"> too</font>

745
00:30:10,019 --> 00:30:14,820
much<font color="#CCCCCC"> to our dress structures where you</font>

746
00:30:11,580 --> 00:30:15,928
<font color="#E5E5E5">can store some values if you</font><font color="#CCCCCC"> kind of</font>

747
00:30:14,820 --> 00:30:19,350
<font color="#CCCCCC">know</font><font color="#E5E5E5"> noise you can follow along</font>

748
00:30:15,929 --> 00:30:20,460
<font color="#CCCCCC">otherwise you can just</font><font color="#E5E5E5"> ignore them so</font>

749
00:30:19,350 --> 00:30:23,129
the first thing you do when you<font color="#CCCCCC"> go</font>

750
00:30:20,460 --> 00:30:24,659
<font color="#E5E5E5">through a noise hand check is that you</font>

751
00:30:23,129 --> 00:30:27,000
initialize<font color="#E5E5E5"> both the client and the</font>

752
00:30:24,659 --> 00:30:28,710
<font color="#CCCCCC">server</font><font color="#E5E5E5"> what they're going to do is that</font>

753
00:30:27,000 --> 00:30:30,899
they're going<font color="#CCCCCC"> to hash this string</font><font color="#E5E5E5"> and</font>

754
00:30:28,710 --> 00:30:33,179
here this<font color="#CCCCCC"> is the name of</font><font color="#E5E5E5"> my protocol</font>

755
00:30:30,899 --> 00:30:35,219
<font color="#E5E5E5">this is noise underscore</font><font color="#CCCCCC"> NX my hand</font>

756
00:30:33,179 --> 00:30:38,759
check pattern underscore<font color="#E5E5E5"> two five five</font>

757
00:30:35,220 --> 00:30:41,070
<font color="#E5E5E5">one nine my key exchange algorithm then</font>

758
00:30:38,759 --> 00:30:42,330
<font color="#CCCCCC">ASG cm and shadow 56 I'm pretty</font>

759
00:30:41,070 --> 00:30:45,210
conservative<font color="#E5E5E5"> I'm choosing these</font>

760
00:30:42,330 --> 00:30:49,399
algorithms<font color="#CCCCCC"> I hash</font><font color="#E5E5E5"> that and I store that</font>

761
00:30:45,210 --> 00:30:52,289
into<font color="#E5E5E5"> value called H more on that later I</font>

762
00:30:49,399 --> 00:30:55,139
also store that<font color="#E5E5E5"> into a value called CK</font>

763
00:30:52,289 --> 00:30:57,929
for<font color="#E5E5E5"> chaining key again I'm not going to</font>

764
00:30:55,139 --> 00:31:00,479
explain<font color="#CCCCCC"> that yet</font><font color="#E5E5E5"> so now remember the</font>

765
00:30:57,929 --> 00:31:03,570
client<font color="#E5E5E5"> sends the net ephemeral public</font>

766
00:31:00,480 --> 00:31:06,529
key right so first the client has<font color="#E5E5E5"> to</font>

767
00:31:03,570 --> 00:31:08,970
generate<font color="#E5E5E5"> it and store it somewhere</font><font color="#CCCCCC"> and</font>

768
00:31:06,529 --> 00:31:10,230
now we're going<font color="#CCCCCC"> to do something weird</font>

769
00:31:08,970 --> 00:31:12,360
we're going to hash

770
00:31:10,230 --> 00:31:14,460
<font color="#E5E5E5">public-key</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> sang with the</font>

771
00:31:12,360 --> 00:31:19,409
previous age value and it's going to

772
00:31:14,460 --> 00:31:20,760
<font color="#E5E5E5">give us a new edge value</font><font color="#CCCCCC"> all right know</font>

773
00:31:19,410 --> 00:31:22,650
it's time for the client to<font color="#E5E5E5"> send a</font>

774
00:31:20,760 --> 00:31:24,900
payload whatever<font color="#E5E5E5"> the client wants can be</font>

775
00:31:22,650 --> 00:31:26,190
empty<font color="#E5E5E5"> and we're going</font><font color="#CCCCCC"> to do the</font><font color="#E5E5E5"> same</font>

776
00:31:24,900 --> 00:31:28,290
thing with the payload we're going to

777
00:31:26,190 --> 00:31:31,020
<font color="#E5E5E5">hash the payload with the previous H</font>

778
00:31:28,290 --> 00:31:34,168
value that we just<font color="#CCCCCC"> cut from that</font>

779
00:31:31,020 --> 00:31:36,690
previous<font color="#E5E5E5"> thing and we get a new edge</font>

780
00:31:34,169 --> 00:31:39,450
value and this kind<font color="#E5E5E5"> of looks</font><font color="#CCCCCC"> like I'm</font>

781
00:31:36,690 --> 00:31:42,570
absorbing<font color="#E5E5E5"> everything I'm sending or you</font>

782
00:31:39,450 --> 00:31:45,150
will see<font color="#CCCCCC"> letter receiving so you can see</font>

783
00:31:42,570 --> 00:31:47,330
this is kind<font color="#CCCCCC"> of a hint as to</font><font color="#E5E5E5"> what I'm</font>

784
00:31:45,150 --> 00:31:50,700
going to<font color="#E5E5E5"> do later</font>

785
00:31:47,330 --> 00:31:52,860
I'll change<font color="#E5E5E5"> these parts by this just by</font>

786
00:31:50,700 --> 00:31:55,140
absorbing<font color="#E5E5E5"> it but this is pretty much</font>

787
00:31:52,860 --> 00:31:58,799
what<font color="#CCCCCC"> the H</font><font color="#E5E5E5"> value is it's an absorption</font>

788
00:31:55,140 --> 00:32:00,299
<font color="#E5E5E5">of every message we send and receive so</font>

789
00:31:58,799 --> 00:32:03,660
it's the same<font color="#CCCCCC"> thing on both</font><font color="#E5E5E5"> the client</font>

790
00:32:00,299 --> 00:32:06,720
and<font color="#E5E5E5"> the server</font><font color="#CCCCCC"> now the server it is turn</font>

791
00:32:03,660 --> 00:32:10,740
sends and remote<font color="#E5E5E5"> ephemeral public key so</font>

792
00:32:06,720 --> 00:32:14,070
we store that somewhere and we absorb

793
00:32:10,740 --> 00:32:17,190
that now we<font color="#E5E5E5"> can do a</font><font color="#CCCCCC"> DPL man-cakes</font>

794
00:32:14,070 --> 00:32:19,439
change<font color="#E5E5E5"> and we put the output into h KD F</font>

795
00:32:17,190 --> 00:32:22,320
which<font color="#CCCCCC"> is a key derivation function with</font>

796
00:32:19,440 --> 00:32:24,690
the<font color="#CCCCCC"> C key value this chaining key</font><font color="#E5E5E5"> it</font>

797
00:32:22,320 --> 00:32:26,580
gives us the next chaining key and a key

798
00:32:24,690 --> 00:32:28,200
<font color="#CCCCCC">that we can use to encrypt</font><font color="#E5E5E5"> and so you</font>

799
00:32:26,580 --> 00:32:32,340
can see here the chaining key is<font color="#E5E5E5"> really</font>

800
00:32:28,200 --> 00:32:34,549
used<font color="#E5E5E5"> to generate encryption keys now</font>

801
00:32:32,340 --> 00:32:36,840
that we have a key we can decrypt stuff

802
00:32:34,549 --> 00:32:39,840
it's good because<font color="#E5E5E5"> the</font><font color="#CCCCCC"> server is sending</font>

803
00:32:36,840 --> 00:32:41,668
<font color="#E5E5E5">us an encrypted static key so we can use</font>

804
00:32:39,840 --> 00:32:44,520
the key we just<font color="#E5E5E5"> generated to decrypt it</font>

805
00:32:41,669 --> 00:32:46,410
<font color="#E5E5E5">and here if you know AES GCM you know</font>

806
00:32:44,520 --> 00:32:48,059
that there<font color="#E5E5E5"> is an authenticated data part</font>

807
00:32:46,410 --> 00:32:50,040
that we can use to actually authenticate

808
00:32:48,059 --> 00:32:53,070
anything we want<font color="#E5E5E5"> so here we are</font>

809
00:32:50,040 --> 00:32:54,659
authenticated this<font color="#E5E5E5"> edge value and by</font>

810
00:32:53,070 --> 00:32:56,370
<font color="#CCCCCC">doing that we authenticate the whole</font>

811
00:32:54,660 --> 00:32:58,770
transcript<font color="#E5E5E5"> we</font><font color="#CCCCCC"> authenticate the whole</font>

812
00:32:56,370 --> 00:33:00,689
handshake we make sure<font color="#CCCCCC"> that the server</font>

813
00:32:58,770 --> 00:33:03,870
is<font color="#CCCCCC"> saying the</font><font color="#E5E5E5"> same thing we're saying</font>

814
00:33:00,690 --> 00:33:09,240
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same sequence of messages</font><font color="#E5E5E5"> so it's a</font>

815
00:33:03,870 --> 00:33:10,799
very good property<font color="#E5E5E5"> of noise of course we</font>

816
00:33:09,240 --> 00:33:14,280
absorbed the cipher text we<font color="#CCCCCC"> just</font>

817
00:33:10,799 --> 00:33:15,660
<font color="#E5E5E5">received and now we have</font><font color="#CCCCCC"> a new key to</font>

818
00:33:14,280 --> 00:33:17,668
<font color="#E5E5E5">study key of the server so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can do a</font>

819
00:33:15,660 --> 00:33:19,559
new<font color="#E5E5E5"> D</font><font color="#CCCCCC"> filmin cake change</font><font color="#E5E5E5"> we put</font><font color="#CCCCCC"> that</font>

820
00:33:17,669 --> 00:33:23,570
into<font color="#CCCCCC"> H KDF with the chaining key to</font>

821
00:33:19,559 --> 00:33:23,570
derive a<font color="#CCCCCC"> new key and a new training key</font>

822
00:33:23,850 --> 00:33:33,209
finally<font color="#CCCCCC"> oops we receive a final payload</font>

823
00:33:30,030 --> 00:33:35,100
<font color="#CCCCCC">the server is done we can decrypt it</font>

824
00:33:33,210 --> 00:33:36,720
<font color="#CCCCCC">with the new key we created we can</font>

825
00:33:35,100 --> 00:33:39,240
authenticate the edge value so we make

826
00:33:36,720 --> 00:33:43,110
<font color="#CCCCCC">sure that the handshake looks the same</font>

827
00:33:39,240 --> 00:33:45,260
on<font color="#CCCCCC"> both</font><font color="#E5E5E5"> side and we absorbed this</font>

828
00:33:43,110 --> 00:33:47,820
<font color="#E5E5E5">ciphertext and</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the handshake is done</font>

829
00:33:45,260 --> 00:33:49,890
<font color="#E5E5E5">so what we do finally</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that we put the</font>

830
00:33:47,820 --> 00:33:52,678
last ck the last training key into<font color="#CCCCCC"> HK D</font>

831
00:33:49,890 --> 00:33:53,970
<font color="#CCCCCC">F again it gives us two keys one key</font><font color="#E5E5E5"> to</font>

832
00:33:52,679 --> 00:33:55,919
encrypt from the client<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> server</font>

833
00:33:53,970 --> 00:33:58,130
<font color="#CCCCCC">one key</font><font color="#E5E5E5"> to encrypt from the server to</font>

834
00:33:55,919 --> 00:34:00,299
the client<font color="#E5E5E5"> so it's like TLS</font>

835
00:33:58,130 --> 00:34:02,400
all right that's that's<font color="#CCCCCC"> quite tricky</font>

836
00:34:00,299 --> 00:34:05,400
<font color="#E5E5E5">right it's it's kind of dense</font><font color="#CCCCCC"> I don't</font>

837
00:34:02,400 --> 00:34:06,419
know if you could follow that if you're

838
00:34:05,400 --> 00:34:08,010
<font color="#CCCCCC">watching the video</font><font color="#E5E5E5"> on YouTube then</font>

839
00:34:06,419 --> 00:34:11,190
<font color="#E5E5E5">that's better because you can rewind</font>

840
00:34:08,010 --> 00:34:12,210
<font color="#E5E5E5">right</font><font color="#CCCCCC"> but yeah that one of the point of</font>

841
00:34:11,190 --> 00:34:14,129
<font color="#E5E5E5">that slide is</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> that it's</font>

842
00:34:12,210 --> 00:34:16,800
<font color="#E5E5E5">complicated it's not it's way less</font>

843
00:34:14,129 --> 00:34:20,699
complicated than TLS fortunately but

844
00:34:16,800 --> 00:34:21,810
it's still kind of dense so what I'm

845
00:34:20,699 --> 00:34:24,149
<font color="#E5E5E5">going to do is that I'm</font><font color="#CCCCCC"> going to</font>

846
00:34:21,810 --> 00:34:29,699
<font color="#E5E5E5">simplify that and that's really the part</font>

847
00:34:24,149 --> 00:34:31,440
the the<font color="#E5E5E5"> the last part of my talk which</font>

848
00:34:29,699 --> 00:34:33,839
is<font color="#E5E5E5"> called disco which is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> merger of</font>

849
00:34:31,440 --> 00:34:37,230
<font color="#CCCCCC">noise and strobe</font><font color="#E5E5E5"> I make sense</font><font color="#CCCCCC"> again</font>

850
00:34:33,840 --> 00:34:39,300
maestro disco<font color="#E5E5E5"> and I'm just going</font><font color="#CCCCCC"> to</font>

851
00:34:37,230 --> 00:34:41,609
simplify<font color="#E5E5E5"> because when I looked at noise</font>

852
00:34:39,300 --> 00:34:43,350
<font color="#E5E5E5">I was like I can simplify that using</font>

853
00:34:41,609 --> 00:34:47,819
strobe I can make it more elegant more

854
00:34:43,350 --> 00:34:49,409
<font color="#E5E5E5">smaller easier to implement</font><font color="#CCCCCC"> and all this</font>

855
00:34:47,820 --> 00:34:53,129
<font color="#CCCCCC">stuff and I'm going to show</font><font color="#E5E5E5"> you how I</font>

856
00:34:49,409 --> 00:34:56,070
did<font color="#E5E5E5"> it so going through the same</font>

857
00:34:53,129 --> 00:34:59,819
<font color="#CCCCCC">handshake one</font><font color="#E5E5E5"> more time so a third time</font>

858
00:34:56,070 --> 00:35:02,580
now but<font color="#E5E5E5"> this time using strobe so I</font>

859
00:34:59,820 --> 00:35:06,210
initialize it<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> time I've brought</font>

860
00:35:02,580 --> 00:35:08,160
a<font color="#CCCCCC"> ESG cm</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> shout 256 actually</font>

861
00:35:06,210 --> 00:35:10,500
throughout<font color="#E5E5E5"> also</font><font color="#CCCCCC"> HKD F&H Mac</font><font color="#E5E5E5"> that are</font>

862
00:35:08,160 --> 00:35:12,569
used in<font color="#CCCCCC"> noise I</font><font color="#E5E5E5"> throw out a lot of</font><font color="#CCCCCC"> this</font>

863
00:35:10,500 --> 00:35:15,270
symmetric cryptographic algorithm and I

864
00:35:12,570 --> 00:35:17,180
just replace it<font color="#E5E5E5"> with strobe so that your</font>

865
00:35:15,270 --> 00:35:21,390
<font color="#CCCCCC">cut</font><font color="#E5E5E5"> base is now much</font><font color="#CCCCCC"> smaller much</font>

866
00:35:17,180 --> 00:35:22,980
simpler<font color="#E5E5E5"> and I use this in each strobe</font>

867
00:35:21,390 --> 00:35:26,759
function that shrub gives me to

868
00:35:22,980 --> 00:35:28,170
instantiate<font color="#E5E5E5"> strobe objects now remember</font>

869
00:35:26,760 --> 00:35:30,330
I<font color="#E5E5E5"> have to send a public key as the</font>

870
00:35:28,170 --> 00:35:33,600
<font color="#E5E5E5">clients I have to</font><font color="#CCCCCC"> generate the public</font>

871
00:35:30,330 --> 00:35:36,750
key first<font color="#E5E5E5"> nothing changed</font><font color="#CCCCCC"> and now I can</font>

872
00:35:33,600 --> 00:35:37,290
absorb<font color="#E5E5E5"> the public key in my state with</font>

873
00:35:36,750 --> 00:35:38,970
this

874
00:35:37,290 --> 00:35:42,060
and clear function<font color="#E5E5E5"> makes sense right</font>

875
00:35:38,970 --> 00:35:43,980
<font color="#E5E5E5">we're sending something clear we're</font>

876
00:35:42,060 --> 00:35:46,230
sending a payload now<font color="#E5E5E5"> well I can just</font>

877
00:35:43,980 --> 00:35:49,230
<font color="#CCCCCC">use this send clear function to you send</font>

878
00:35:46,230 --> 00:35:49,560
my payload<font color="#E5E5E5"> and absorb it in my state all</font>

879
00:35:49,230 --> 00:35:52,320
right

880
00:35:49,560 --> 00:35:54,840
the server's turn we receive<font color="#E5E5E5"> a public</font>

881
00:35:52,320 --> 00:35:56,850
key that<font color="#E5E5E5"> we store using the receive</font>

882
00:35:54,840 --> 00:36:00,600
clear function<font color="#E5E5E5"> right we receive it in</font>

883
00:35:56,850 --> 00:36:01,980
clear<font color="#CCCCCC"> makes sense now we have two</font>

884
00:36:00,600 --> 00:36:04,110
ephemeral public keys we<font color="#CCCCCC"> can do a check</font>

885
00:36:01,980 --> 00:36:06,240
<font color="#CCCCCC">change detail man between</font><font color="#E5E5E5"> these two keys</font>

886
00:36:04,110 --> 00:36:11,250
and we absorb the result with this ad

887
00:36:06,240 --> 00:36:15,000
function that strobe gives us now we

888
00:36:11,250 --> 00:36:17,670
receive an encrypted<font color="#E5E5E5"> study key we can</font>

889
00:36:15,000 --> 00:36:20,520
just risk decrypt<font color="#E5E5E5"> it and also</font>

890
00:36:17,670 --> 00:36:22,800
authenticate the whole hand<font color="#E5E5E5"> check</font>

891
00:36:20,520 --> 00:36:25,290
everything that<font color="#E5E5E5"> we have absorbed so far</font>

892
00:36:22,800 --> 00:36:26,760
via this receive a<font color="#E5E5E5"> a G function which is</font>

893
00:36:25,290 --> 00:36:31,380
really receive encryption and<font color="#E5E5E5"> receive</font>

894
00:36:26,760 --> 00:36:32,670
<font color="#CCCCCC">mark now we can do a new</font><font color="#E5E5E5"> detail man with</font>

895
00:36:31,380 --> 00:36:35,130
that static key that we just received

896
00:36:32,670 --> 00:36:37,710
<font color="#CCCCCC">and we absorb it with this ad function</font>

897
00:36:35,130 --> 00:36:40,410
and I will<font color="#E5E5E5"> receive a payload that</font><font color="#CCCCCC"> we can</font>

898
00:36:37,710 --> 00:36:43,620
decrypt with this receive a EAD function

899
00:36:40,410 --> 00:36:46,700
and that's<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it that's the same</font>

900
00:36:43,620 --> 00:36:49,259
<font color="#CCCCCC">handshake that I went through previously</font>

901
00:36:46,700 --> 00:36:50,790
simplified by stroke<font color="#CCCCCC"> if you had to</font>

902
00:36:49,260 --> 00:36:55,190
implement that<font color="#E5E5E5"> it looks easier right</font>

903
00:36:50,790 --> 00:36:57,840
compared to<font color="#E5E5E5"> the previous diagram and</font>

904
00:36:55,190 --> 00:37:00,180
much more simple<font color="#E5E5E5"> and here at the end</font><font color="#CCCCCC"> if</font>

905
00:36:57,840 --> 00:37:01,560
I want to separate<font color="#CCCCCC"> two states one</font><font color="#E5E5E5"> for</font>

906
00:37:00,180 --> 00:37:03,089
<font color="#E5E5E5">the client to encrypt and one for the</font>

907
00:37:01,560 --> 00:37:05,190
server<font color="#E5E5E5"> to encrypt I can just call my</font>

908
00:37:03,090 --> 00:37:06,870
state and kind<font color="#E5E5E5"> of differentiate them</font>

909
00:37:05,190 --> 00:37:08,340
into two<font color="#E5E5E5"> different states and I can use</font>

910
00:37:06,870 --> 00:37:10,770
one for<font color="#CCCCCC"> the client one for the server</font>

911
00:37:08,340 --> 00:37:13,650
<font color="#E5E5E5">and here I can</font><font color="#CCCCCC"> just continue</font><font color="#E5E5E5"> to encrypt</font>

912
00:37:10,770 --> 00:37:15,780
and<font color="#E5E5E5"> continue to decrypt</font><font color="#CCCCCC"> I don't set up</font>

913
00:37:13,650 --> 00:37:17,190
<font color="#E5E5E5">nonsense or IVs or counters and every</font>

914
00:37:15,780 --> 00:37:19,500
time I authenticate something I

915
00:37:17,190 --> 00:37:24,840
<font color="#CCCCCC">authenticate everything starting from</font>

916
00:37:19,500 --> 00:37:27,090
the<font color="#CCCCCC"> handshake I want to go through the</font>

917
00:37:24,840 --> 00:37:28,830
same handshake one last time<font color="#E5E5E5"> but to show</font>

918
00:37:27,090 --> 00:37:32,010
<font color="#E5E5E5">you exactly what's happening with</font><font color="#CCCCCC"> that</font>

919
00:37:28,830 --> 00:37:33,150
<font color="#E5E5E5">double</font><font color="#CCCCCC"> x instruction and this</font><font color="#E5E5E5"> is</font>

920
00:37:32,010 --> 00:37:35,880
something<font color="#CCCCCC"> I</font><font color="#E5E5E5"> really couldn't have</font><font color="#CCCCCC"> done</font>

921
00:37:33,150 --> 00:37:38,490
<font color="#E5E5E5">with AES</font><font color="#CCCCCC"> DCM</font><font color="#E5E5E5"> and shout 256 and HK D F</font>

922
00:37:35,880 --> 00:37:40,800
and<font color="#CCCCCC"> and H</font><font color="#E5E5E5"> Mac but I can do it because</font>

923
00:37:38,490 --> 00:37:42,569
it's so simple<font color="#E5E5E5"> and so against that I can</font>

924
00:37:40,800 --> 00:37:45,510
<font color="#CCCCCC">actually show you what's happening under</font>

925
00:37:42,570 --> 00:37:47,610
the<font color="#CCCCCC"> surface</font><font color="#E5E5E5"> so here when I initialize</font>

926
00:37:45,510 --> 00:37:49,710
<font color="#E5E5E5">what I'm doing is</font><font color="#CCCCCC"> that I absorb</font><font color="#E5E5E5"> this</font>

927
00:37:47,610 --> 00:37:50,850
string by<font color="#E5E5E5"> exerting it with my public</font>

928
00:37:49,710 --> 00:37:53,790
parts so remember

929
00:37:50,850 --> 00:37:56,130
the diagram that I had on<font color="#CCCCCC"> sherry I had</font>

930
00:37:53,790 --> 00:37:57,900
the public part on top here I<font color="#E5E5E5"> just</font>

931
00:37:56,130 --> 00:38:00,060
rotate it<font color="#E5E5E5"> and my public part is on the</font>

932
00:37:57,900 --> 00:38:01,800
right my secret parties on the<font color="#E5E5E5"> left so</font>

933
00:38:00,060 --> 00:38:05,490
to absorb the string I just XOR it with

934
00:38:01,800 --> 00:38:08,040
the public part no need<font color="#CCCCCC"> to send a public</font>

935
00:38:05,490 --> 00:38:11,220
key<font color="#E5E5E5"> I generate it and I just XOR it in</font>

936
00:38:08,040 --> 00:38:13,470
my public<font color="#E5E5E5"> part if I reach the end</font><font color="#CCCCCC"> of the</font>

937
00:38:11,220 --> 00:38:15,240
public part I can just<font color="#E5E5E5"> permute and start</font>

938
00:38:13,470 --> 00:38:17,609
again<font color="#CCCCCC"> on a new block right exactly</font><font color="#E5E5E5"> what</font>

939
00:38:15,240 --> 00:38:21,540
<font color="#E5E5E5">what I was doing when I was hashing with</font>

940
00:38:17,610 --> 00:38:24,960
sherry I<font color="#E5E5E5"> sent a payload what do I do</font>

941
00:38:21,540 --> 00:38:27,570
I<font color="#CCCCCC"> ignore it in the public part now I</font>

942
00:38:24,960 --> 00:38:29,220
receive a public key I'm just gonna

943
00:38:27,570 --> 00:38:32,070
absorb it all so I'm just gonna<font color="#E5E5E5"> going to</font>

944
00:38:29,220 --> 00:38:35,490
<font color="#CCCCCC">XXR it</font><font color="#E5E5E5"> in the public part it's pretty</font>

945
00:38:32,070 --> 00:38:37,290
easy right<font color="#E5E5E5"> it's pretty elegant no I'm</font>

946
00:38:35,490 --> 00:38:41,189
doing<font color="#E5E5E5"> a detail man between the two keys</font>

947
00:38:37,290 --> 00:38:42,750
I just saw it in<font color="#E5E5E5"> the public part now I</font>

948
00:38:41,190 --> 00:38:45,030
<font color="#CCCCCC">receive the encryption of the study key</font>

949
00:38:42,750 --> 00:38:47,610
and a tag<font color="#CCCCCC"> I do this</font><font color="#E5E5E5"> little dance where I</font>

950
00:38:45,030 --> 00:38:49,530
permutes and I generate some random<font color="#E5E5E5"> bits</font>

951
00:38:47,610 --> 00:38:52,590
<font color="#E5E5E5">out of everything that</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> absorbed</font>

952
00:38:49,530 --> 00:38:55,350
including the key exchange<font color="#E5E5E5"> and I can</font>

953
00:38:52,590 --> 00:38:56,790
decrypt the payload and then<font color="#CCCCCC"> I can</font>

954
00:38:55,350 --> 00:38:58,529
permute again to generate<font color="#E5E5E5"> some tag</font>

955
00:38:56,790 --> 00:39:01,920
verify that it's the same<font color="#E5E5E5"> one</font><font color="#CCCCCC"> that I</font>

956
00:38:58,530 --> 00:39:03,510
received<font color="#E5E5E5"> otherwise somebody's man in the</font>

957
00:39:01,920 --> 00:39:07,410
middling me and I can cancel<font color="#E5E5E5"> the</font>

958
00:39:03,510 --> 00:39:09,750
handshake<font color="#E5E5E5"> no I can do a</font><font color="#CCCCCC"> new DPhil man</font>

959
00:39:07,410 --> 00:39:12,109
with the new static key that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> absorb</font><font color="#E5E5E5"> in</font>

960
00:39:09,750 --> 00:39:14,820
my public parts by<font color="#E5E5E5"> exploring it and</font>

961
00:39:12,110 --> 00:39:16,620
finally<font color="#E5E5E5"> I receive a payload encrypted so</font>

962
00:39:14,820 --> 00:39:18,810
I can do this<font color="#E5E5E5"> little dance again to</font>

963
00:39:16,620 --> 00:39:20,940
decrypt it and to generate<font color="#CCCCCC"> an attack</font>

964
00:39:18,810 --> 00:39:23,840
that<font color="#CCCCCC"> I can verify</font><font color="#E5E5E5"> and that's it</font>

965
00:39:20,940 --> 00:39:27,000
the handshake<font color="#CCCCCC"> that noise</font><font color="#E5E5E5"> is doing or</font>

966
00:39:23,840 --> 00:39:31,050
rather now we can we can call it disco

967
00:39:27,000 --> 00:39:33,660
is this thing it's pretty<font color="#E5E5E5"> simple right</font>

968
00:39:31,050 --> 00:39:36,420
we're just<font color="#E5E5E5"> ignoring stuff and sometimes</font>

969
00:39:33,660 --> 00:39:40,850
<font color="#CCCCCC">we're permuting compared to the previous</font>

970
00:39:36,420 --> 00:39:44,160
<font color="#CCCCCC">diagram it's pretty</font><font color="#E5E5E5"> elegant so disco is</font>

971
00:39:40,850 --> 00:39:47,940
on disco crypto come pretty easy to

972
00:39:44,160 --> 00:39:50,069
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> and what is it it's a draft</font>

973
00:39:47,940 --> 00:39:52,470
specification it's an extension of noise

974
00:39:50,070 --> 00:39:57,090
<font color="#E5E5E5">that noise protocol framework right</font>

975
00:39:52,470 --> 00:39:59,419
<font color="#E5E5E5">still</font><font color="#CCCCCC"> drafts still experimental</font><font color="#E5E5E5"> from</font>

976
00:39:57,090 --> 00:40:02,550
that<font color="#CCCCCC"> I made a library</font><font color="#E5E5E5"> called lead disco</font>

977
00:39:59,420 --> 00:40:03,990
<font color="#E5E5E5">so it's a plug and play protocol so it</font>

978
00:40:02,550 --> 00:40:04,859
<font color="#E5E5E5">allows you to</font><font color="#CCCCCC"> do something</font><font color="#E5E5E5"> like noise</font>

979
00:40:03,990 --> 00:40:06,779
where you can

980
00:40:04,859 --> 00:40:09,450
encrypt communications between two

981
00:40:06,780 --> 00:40:11,550
devices<font color="#E5E5E5"> or more but since I'm using</font>

982
00:40:09,450 --> 00:40:15,930
<font color="#E5E5E5">strobe it's also a cryptographic library</font>

983
00:40:11,550 --> 00:40:18,930
to derive keys to<font color="#CCCCCC"> hash</font><font color="#E5E5E5"> and and so on so</font>

984
00:40:15,930 --> 00:40:21,450
it's a protocol analyzer<font color="#CCCCCC"> it's written</font><font color="#E5E5E5"> in</font>

985
00:40:18,930 --> 00:40:21,930
<font color="#CCCCCC">golang it's available</font><font color="#E5E5E5"> at the same</font>

986
00:40:21,450 --> 00:40:23,580
<font color="#E5E5E5">address</font>

987
00:40:21,930 --> 00:40:26,368
so the specification and the library are

988
00:40:23,580 --> 00:40:29,430
Disko crypto comm<font color="#E5E5E5"> so you can go on it</font>

989
00:40:26,369 --> 00:40:31,080
today<font color="#E5E5E5"> and the whole</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> is only a</font>

990
00:40:29,430 --> 00:40:32,430
thousand lines of code<font color="#E5E5E5"> if you don't</font>

991
00:40:31,080 --> 00:40:35,640
count the primitives<font color="#CCCCCC"> the cryptographic</font>

992
00:40:32,430 --> 00:40:38,609
primitives<font color="#E5E5E5"> so if you want to audit disco</font>

993
00:40:35,640 --> 00:40:40,920
<font color="#CCCCCC">live disco it's very very short</font><font color="#E5E5E5"> it's</font>

994
00:40:38,609 --> 00:40:42,180
<font color="#E5E5E5">very small of course it's not very</font>

995
00:40:40,920 --> 00:40:43,770
<font color="#CCCCCC">useful</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't have the</font>

996
00:40:42,180 --> 00:40:46,319
cryptographic primitives so if you want

997
00:40:43,770 --> 00:40:48,060
strobe strobe<font color="#CCCCCC"> it's very small right it's</font>

998
00:40:46,320 --> 00:40:50,690
only<font color="#CCCCCC"> a thousand</font><font color="#E5E5E5"> lines of</font><font color="#CCCCCC"> code so the</font>

999
00:40:48,060 --> 00:40:54,630
<font color="#E5E5E5">total is two thousand lines of code</font>

1000
00:40:50,690 --> 00:40:57,080
finally if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to use the protocol</font>

1001
00:40:54,630 --> 00:40:59,430
<font color="#E5E5E5">you need some key exchange algorithm</font>

1002
00:40:57,080 --> 00:41:00,900
curve<font color="#CCCCCC"> two</font><font color="#E5E5E5"> five five</font><font color="#CCCCCC"> one nine</font><font color="#E5E5E5"> is two</font>

1003
00:40:59,430 --> 00:41:03,660
thousand lines of<font color="#E5E5E5"> code</font><font color="#CCCCCC"> so you have to</font>

1004
00:41:00,900 --> 00:41:06,150
add<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> the entirety of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> library</font>

1005
00:41:03,660 --> 00:41:08,069
<font color="#E5E5E5">we strobe the cryptographic library and</font>

1006
00:41:06,150 --> 00:41:10,080
the protocol is the<font color="#E5E5E5"> same amount</font><font color="#CCCCCC"> of lines</font>

1007
00:41:08,070 --> 00:41:12,570
of code as curve<font color="#E5E5E5"> two five five one nine</font>

1008
00:41:10,080 --> 00:41:13,589
<font color="#E5E5E5">so it's extremely small if you want to</font>

1009
00:41:12,570 --> 00:41:15,690
<font color="#E5E5E5">look at the code and</font><font color="#CCCCCC"> make sure it's</font>

1010
00:41:13,589 --> 00:41:18,990
secure yourself<font color="#CCCCCC"> you can do it</font><font color="#E5E5E5"> right it's</font>

1011
00:41:15,690 --> 00:41:21,300
not gonna take<font color="#E5E5E5"> you that long it's based</font>

1012
00:41:18,990 --> 00:41:23,069
on noise which is<font color="#E5E5E5"> let's say a stable</font>

1013
00:41:21,300 --> 00:41:25,349
<font color="#E5E5E5">draft at this point</font><font color="#CCCCCC"> sitting in</font><font color="#E5E5E5"> it's</font>

1014
00:41:23,070 --> 00:41:28,619
being used<font color="#E5E5E5"> I mean what's up use it for I</font>

1015
00:41:25,349 --> 00:41:30,960
don't<font color="#E5E5E5"> know</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> many many users strobe is</font>

1016
00:41:28,619 --> 00:41:33,180
alpha<font color="#CCCCCC"> but I</font><font color="#E5E5E5"> suspect</font><font color="#CCCCCC"> it's being used by</font>

1017
00:41:30,960 --> 00:41:36,210
<font color="#E5E5E5">Rambis other moments since it's been</font>

1018
00:41:33,180 --> 00:41:38,129
developed<font color="#CCCCCC"> there</font><font color="#E5E5E5"> disco</font><font color="#CCCCCC"> nabisco</font><font color="#E5E5E5"> are</font>

1019
00:41:36,210 --> 00:41:40,770
completely experimental<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I came</font><font color="#CCCCCC"> here</font>

1020
00:41:38,130 --> 00:41:44,160
today<font color="#E5E5E5"> to give you a glimpse of what</font><font color="#CCCCCC"> we</font>

1021
00:41:40,770 --> 00:41:45,869
have what new things we have in the

1022
00:41:44,160 --> 00:41:48,000
applied crypto<font color="#E5E5E5"> world and what it's going</font>

1023
00:41:45,869 --> 00:41:49,910
<font color="#CCCCCC">to change</font><font color="#E5E5E5"> the landscape of the applied</font>

1024
00:41:48,000 --> 00:41:52,740
crypto<font color="#CCCCCC"> but it's</font><font color="#E5E5E5"> going to take some years</font>

1025
00:41:49,910 --> 00:41:56,069
now I came<font color="#CCCCCC"> here also</font><font color="#E5E5E5"> to hype some people</font>

1026
00:41:52,740 --> 00:41:58,379
adding<font color="#E5E5E5"> more eyes more testing and at</font>

1027
00:41:56,070 --> 00:41:59,849
some point down the<font color="#CCCCCC"> line</font><font color="#E5E5E5"> we might have</font>

1028
00:41:58,380 --> 00:42:02,670
<font color="#E5E5E5">something that is very small and</font>

1029
00:41:59,849 --> 00:42:07,920
<font color="#CCCCCC">Wireless carried</font><font color="#E5E5E5"> on TLS to encrypt our</font>

1030
00:42:02,670 --> 00:42:10,020
communications so that's about<font color="#E5E5E5"> it the</font>

1031
00:42:07,920 --> 00:42:13,470
whole disco stuff again disco crypto

1032
00:42:10,020 --> 00:42:15,960
<font color="#CCCCCC">calm I write a lot about crypto on my</font>

1033
00:42:13,470 --> 00:42:18,299
blog cryptology dotnet

1034
00:42:15,960 --> 00:42:20,360
I write<font color="#CCCCCC"> about security</font>

1035
00:42:18,300 --> 00:42:22,650
technical articles or less technical so

1036
00:42:20,360 --> 00:42:25,080
<font color="#E5E5E5">come take</font><font color="#CCCCCC"> a look there and you can</font>

1037
00:42:22,650 --> 00:42:26,870
follow<font color="#E5E5E5"> me on</font><font color="#CCCCCC"> Twitter user one underscore</font>

1038
00:42:25,080 --> 00:42:31,049
David that used to<font color="#E5E5E5"> be my city in France</font>

1039
00:42:26,870 --> 00:42:33,120
and of course<font color="#E5E5E5"> I work at NCC group so if</font>

1040
00:42:31,050 --> 00:42:37,110
you need some someone to look at your

1041
00:42:33,120 --> 00:42:38,640
crypto call me give me a<font color="#E5E5E5"> call if you're</font>

1042
00:42:37,110 --> 00:42:40,560
a consultant<font color="#E5E5E5"> or if you're in the app</font><font color="#CCCCCC"> SEC</font>

1043
00:42:38,640 --> 00:42:42,089
team of your of your<font color="#E5E5E5"> company or anything</font>

1044
00:42:40,560 --> 00:42:44,130
like that you<font color="#CCCCCC"> can also</font><font color="#E5E5E5"> talk to me I'd be</font>

1045
00:42:42,090 --> 00:42:46,650
<font color="#CCCCCC">happy to help</font><font color="#E5E5E5"> you or or talk</font><font color="#CCCCCC"> to you</font>

1046
00:42:44,130 --> 00:42:48,330
about crypto or security in<font color="#E5E5E5"> general so</font>

1047
00:42:46,650 --> 00:42:48,930
yeah I'll be<font color="#E5E5E5"> here or at the conference</font>

1048
00:42:48,330 --> 00:43:02,370
if you need me

1049
00:42:48,930 --> 00:43:09,359
<font color="#CCCCCC">thanks some questions there's a mic</font>

1050
00:43:02,370 --> 00:43:14,730
hi<font color="#CCCCCC"> so I didn't see in a protocol the</font>

1051
00:43:09,360 --> 00:43:19,890
presence of static<font color="#E5E5E5"> private key how do</font>

1052
00:43:14,730 --> 00:43:24,320
you<font color="#E5E5E5"> verify who you</font><font color="#CCCCCC"> communicate</font><font color="#E5E5E5"> with so</font>

1053
00:43:19,890 --> 00:43:29,060
like I said noise<font color="#E5E5E5"> NX is pretty much like</font>

1054
00:43:24,320 --> 00:43:30,990
the web browser web server scenario so

1055
00:43:29,060 --> 00:43:34,170
<font color="#CCCCCC">alright I have to</font><font color="#E5E5E5"> go through that again</font>

1056
00:43:30,990 --> 00:43:36,450
<font color="#CCCCCC">but basically remember</font><font color="#E5E5E5"> I said that you</font>

1057
00:43:34,170 --> 00:43:38,250
can send a payload<font color="#E5E5E5"> at the end of a turn</font>

1058
00:43:36,450 --> 00:43:42,569
<font color="#E5E5E5">right the client sends</font><font color="#CCCCCC"> a payload at the</font>

1059
00:43:38,250 --> 00:43:45,630
end of<font color="#E5E5E5"> its turn and here the server can</font>

1060
00:43:42,570 --> 00:43:48,620
send a payload at the end of his turn so

1061
00:43:45,630 --> 00:43:51,890
that's the<font color="#E5E5E5"> point where you can include</font>

1062
00:43:48,620 --> 00:43:55,650
parameters<font color="#CCCCCC"> which verify you're</font>

1063
00:43:51,890 --> 00:43:57,180
communicating partner<font color="#E5E5E5"> exactly you know</font>

1064
00:43:55,650 --> 00:44:00,030
the next probably<font color="#E5E5E5"> you would include</font><font color="#CCCCCC"> a</font>

1065
00:43:57,180 --> 00:44:03,359
<font color="#E5E5E5">signature from some authority right the</font>

1066
00:44:00,030 --> 00:44:09,500
client trusts<font color="#CCCCCC"> I understand</font><font color="#E5E5E5"> thank you</font>

1067
00:44:03,360 --> 00:44:09,500
<font color="#E5E5E5">sure another question next question</font>

1068
00:44:11,690 --> 00:44:15,050
question<font color="#E5E5E5"> here</font>

1069
00:44:16,940 --> 00:44:22,740
thank you for a nice<font color="#CCCCCC"> presentation I</font>

1070
00:44:19,560 --> 00:44:25,670
really<font color="#CCCCCC"> appreciate it DLS is going to be</font>

1071
00:44:22,740 --> 00:44:27,750
<font color="#E5E5E5">extinguished hopefully but still</font>

1072
00:44:25,670 --> 00:44:30,510
<font color="#E5E5E5">yesterday there was a talk</font><font color="#CCCCCC"> that we</font>

1073
00:44:27,750 --> 00:44:33,000
shouldn't<font color="#E5E5E5"> put all our trust</font><font color="#CCCCCC"> in like one</font>

1074
00:44:30,510 --> 00:44:35,369
<font color="#E5E5E5">cryptographic primitive because in case</font>

1075
00:44:33,000 --> 00:44:37,650
this shown that it becomes broken<font color="#E5E5E5"> or</font>

1076
00:44:35,369 --> 00:44:39,869
backdoored<font color="#E5E5E5"> then we are kind of screwed</font>

1077
00:44:37,650 --> 00:44:42,510
<font color="#E5E5E5">right and here what you're doing is</font>

1078
00:44:39,869 --> 00:44:45,180
<font color="#E5E5E5">basically using</font><font color="#CCCCCC"> sha free for everything</font>

1079
00:44:42,510 --> 00:44:48,660
<font color="#E5E5E5">right so in case there's a vulnerability</font>

1080
00:44:45,180 --> 00:44:51,440
<font color="#E5E5E5">or weakness or backdoor into free that</font>

1081
00:44:48,660 --> 00:44:55,020
means<font color="#E5E5E5"> that all</font><font color="#CCCCCC"> of this is broken</font><font color="#E5E5E5"> as well</font>

1082
00:44:51,440 --> 00:44:58,230
right<font color="#E5E5E5"> so so there are two different</font>

1083
00:44:55,020 --> 00:44:59,609
<font color="#CCCCCC">schools of thoughts I</font><font color="#E5E5E5"> would say there</font>

1084
00:44:58,230 --> 00:45:01,380
are<font color="#E5E5E5"> the</font><font color="#CCCCCC"> people who think you shouldn't</font>

1085
00:44:59,609 --> 00:45:04,619
put all your eggs in one<font color="#E5E5E5"> basket and have</font>

1086
00:45:01,380 --> 00:45:06,540
as many cryptographic<font color="#E5E5E5"> permits that that</font>

1087
00:45:04,619 --> 00:45:08,160
we can have for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> TrueCrypt</font><font color="#E5E5E5"> you</font>

1088
00:45:06,540 --> 00:45:10,349
can choose what<font color="#E5E5E5"> what you want to use to</font>

1089
00:45:08,160 --> 00:45:13,020
encrypt tell us you<font color="#E5E5E5"> can choose your</font>

1090
00:45:10,349 --> 00:45:15,089
primitive<font color="#E5E5E5"> the other school of thought is</font>

1091
00:45:13,020 --> 00:45:17,550
that<font color="#E5E5E5"> we've had</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> things broken in</font>

1092
00:45:15,089 --> 00:45:22,170
the past and this cryptographic agility

1093
00:45:17,550 --> 00:45:23,970
is kind of a mess in TLS<font color="#E5E5E5"> so we must it's</font>

1094
00:45:22,170 --> 00:45:26,010
better to make<font color="#CCCCCC"> sure that one thing works</font>

1095
00:45:23,970 --> 00:45:28,560
well and<font color="#E5E5E5"> just use this</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> for</font>

1096
00:45:26,010 --> 00:45:30,150
<font color="#CCCCCC">everything else</font><font color="#E5E5E5"> so like that if you want</font>

1097
00:45:28,560 --> 00:45:31,950
to<font color="#CCCCCC"> audit your system you have just this</font>

1098
00:45:30,150 --> 00:45:34,260
I don't<font color="#E5E5E5"> know the thousand lines of code</font>

1099
00:45:31,950 --> 00:45:38,430
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> shatter is even less it's like</font>

1100
00:45:34,260 --> 00:45:40,200
maybe 200 300<font color="#E5E5E5"> she gone Twitter there is</font>

1101
00:45:38,430 --> 00:45:43,109
a Twitter account<font color="#E5E5E5"> called tweet</font><font color="#CCCCCC"> Pheebs -</font>

1102
00:45:40,200 --> 00:45:44,220
or<font color="#CCCCCC"> - it's 9 tweets if you concatenate</font>

1103
00:45:43,109 --> 00:45:46,109
all the tweets together it's an

1104
00:45:44,220 --> 00:45:49,200
<font color="#CCCCCC">implementation of chattering but it's</font>

1105
00:45:46,109 --> 00:45:51,690
very<font color="#E5E5E5"> very small so it's better to</font><font color="#CCCCCC"> have</font>

1106
00:45:49,200 --> 00:45:53,549
one<font color="#E5E5E5"> thing to</font><font color="#CCCCCC"> edit and then make sure</font>

1107
00:45:51,690 --> 00:45:55,190
<font color="#CCCCCC">it's secure and like</font><font color="#E5E5E5"> that everything</font>

1108
00:45:53,550 --> 00:45:59,670
<font color="#CCCCCC">else relies on that and you</font><font color="#E5E5E5"> don't have</font>

1109
00:45:55,190 --> 00:46:02,220
many threads running<font color="#E5E5E5"> around now if one</font>

1110
00:45:59,670 --> 00:46:04,589
day we<font color="#CCCCCC"> realized</font><font color="#E5E5E5"> that the permutation of</font>

1111
00:46:02,220 --> 00:46:06,330
chatter is broken we can just<font color="#E5E5E5"> replace it</font>

1112
00:46:04,589 --> 00:46:07,859
<font color="#E5E5E5">and it should</font><font color="#CCCCCC"> work because</font><font color="#E5E5E5"> we have</font>

1113
00:46:06,330 --> 00:46:11,549
<font color="#CCCCCC">proved that the</font><font color="#E5E5E5"> construction</font><font color="#CCCCCC"> on top of</font>

1114
00:46:07,859 --> 00:46:12,830
it works<font color="#E5E5E5"> right so so does</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> answer</font>

1115
00:46:11,550 --> 00:46:19,170
your question

1116
00:46:12,830 --> 00:46:20,759
<font color="#CCCCCC">all right another question</font><font color="#E5E5E5"> where I we</font>

1117
00:46:19,170 --> 00:46:24,050
still<font color="#CCCCCC"> have to mean it</font><font color="#E5E5E5"> so if you have any</font>

1118
00:46:20,760 --> 00:46:24,050
<font color="#E5E5E5">question just ask</font>

1119
00:46:25,860 --> 00:46:32,630
<font color="#E5E5E5">thanks for the talk very nice I</font><font color="#CCCCCC"> had the</font>

1120
00:46:29,970 --> 00:46:35,759
<font color="#E5E5E5">question use with you</font><font color="#CCCCCC"> steel rely on</font>

1121
00:46:32,630 --> 00:46:39,290
<font color="#CCCCCC">isometric keys to prove the identity of</font>

1122
00:46:35,760 --> 00:46:42,570
the<font color="#CCCCCC"> other party</font><font color="#E5E5E5"> you communicating with</font>

1123
00:46:39,290 --> 00:46:45,300
so so you don't<font color="#CCCCCC"> have</font><font color="#E5E5E5"> to this is one</font>

1124
00:46:42,570 --> 00:46:47,880
example<font color="#E5E5E5"> this is nice annex you have</font>

1125
00:46:45,300 --> 00:46:50,640
other handshakes where you can<font color="#E5E5E5"> just use</font>

1126
00:46:47,880 --> 00:46:53,460
<font color="#E5E5E5">a</font><font color="#CCCCCC"> pre-shared key so some so no public</font>

1127
00:46:50,640 --> 00:46:55,589
key well you still do<font color="#CCCCCC"> the ephemeral</font>

1128
00:46:53,460 --> 00:46:57,810
public key parts but<font color="#E5E5E5"> you rely on that</font>

1129
00:46:55,590 --> 00:47:00,930
shared secret<font color="#CCCCCC"> so not on a static key</font>

1130
00:46:57,810 --> 00:47:05,130
<font color="#E5E5E5">long-term study key I'm asking that</font>

1131
00:47:00,930 --> 00:47:09,960
<font color="#CCCCCC">because I so talked</font><font color="#E5E5E5"> recently talking</font>

1132
00:47:05,130 --> 00:47:13,140
<font color="#E5E5E5">about quantum</font><font color="#CCCCCC"> computing and how it could</font>

1133
00:47:09,960 --> 00:47:17,310
affect<font color="#E5E5E5"> the trust we</font><font color="#CCCCCC"> have in</font><font color="#E5E5E5"> a symmetric</font>

1134
00:47:13,140 --> 00:47:20,190
keys is there a solution<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have in</font>

1135
00:47:17,310 --> 00:47:23,430
mind for<font color="#E5E5E5"> this kind of problem also</font><font color="#CCCCCC"> so</font>

1136
00:47:20,190 --> 00:47:26,100
for quantum crypto<font color="#CCCCCC"> pretty much all the</font>

1137
00:47:23,430 --> 00:47:28,080
symmetric crypto we have should we stand

1138
00:47:26,100 --> 00:47:31,170
whatever<font color="#E5E5E5"> quantum computers we</font><font color="#CCCCCC"> have one</font>

1139
00:47:28,080 --> 00:47:33,210
day we have any when it comes to<font color="#CCCCCC"> public</font>

1140
00:47:31,170 --> 00:47:36,270
key cryptography so here<font color="#E5E5E5"> curve</font><font color="#CCCCCC"> 2 5 5 1 9</font>

1141
00:47:33,210 --> 00:47:39,330
or curve<font color="#E5E5E5"> 48 probably</font><font color="#CCCCCC"> it would be more</font>

1142
00:47:36,270 --> 00:47:42,509
difficult so right now we have<font color="#E5E5E5"> a nice</font>

1143
00:47:39,330 --> 00:47:44,490
kind of open thing it's not<font color="#E5E5E5"> a</font>

1144
00:47:42,510 --> 00:47:47,460
<font color="#CCCCCC">competition where a lot of people have</font>

1145
00:47:44,490 --> 00:47:50,939
submitted designs for signatures for key

1146
00:47:47,460 --> 00:47:53,310
exchanges that<font color="#CCCCCC"> are secured against</font>

1147
00:47:50,940 --> 00:47:54,900
quantum computers<font color="#CCCCCC"> I think it was over</font>

1148
00:47:53,310 --> 00:47:58,650
<font color="#CCCCCC">like 2 days ago or</font><font color="#E5E5E5"> something like that</font>

1149
00:47:54,900 --> 00:48:01,470
<font color="#E5E5E5">so research is ongoing</font><font color="#CCCCCC"> this is not</font>

1150
00:47:58,650 --> 00:48:02,820
<font color="#E5E5E5">something that we have now or rather we</font>

1151
00:48:01,470 --> 00:48:05,100
don't have confidence<font color="#E5E5E5"> in these</font>

1152
00:48:02,820 --> 00:48:07,410
algorithms now but in the<font color="#CCCCCC"> future it may</font>

1153
00:48:05,100 --> 00:48:11,520
<font color="#E5E5E5">be in</font><font color="#CCCCCC"> 5 years 10</font><font color="#E5E5E5"> years</font><font color="#CCCCCC"> will have solid</font>

1154
00:48:07,410 --> 00:48:13,740
post quantum crypto please another<font color="#E5E5E5"> thing</font>

1155
00:48:11,520 --> 00:48:16,190
I can<font color="#E5E5E5"> tell you about that also</font><font color="#CCCCCC"> Google</font>

1156
00:48:13,740 --> 00:48:20,009
<font color="#E5E5E5">Chrome made some</font><font color="#CCCCCC"> experiments they</font>

1157
00:48:16,190 --> 00:48:21,570
included<font color="#E5E5E5"> post quantum key exchange but</font>

1158
00:48:20,010 --> 00:48:24,060
since they were not<font color="#CCCCCC"> sure it was secure</font>

1159
00:48:21,570 --> 00:48:27,090
because hasn't received the<font color="#CCCCCC"> same amount</font>

1160
00:48:24,060 --> 00:48:29,160
of cryptanalysis<font color="#E5E5E5"> they also included</font><font color="#CCCCCC"> a</font>

1161
00:48:27,090 --> 00:48:31,350
normal creation so something like<font color="#E5E5E5"> 255</font>

1162
00:48:29,160 --> 00:48:33,060
1:9 and<font color="#E5E5E5"> what they would do is</font><font color="#CCCCCC"> that they</font>

1163
00:48:31,350 --> 00:48:35,970
would do two key exchange in parallel

1164
00:48:33,060 --> 00:48:39,779
one with an algorithm<font color="#CCCCCC"> that we know that</font>

1165
00:48:35,970 --> 00:48:40,859
we're fond of<font color="#E5E5E5"> that we think is secure</font>

1166
00:48:39,780 --> 00:48:42,660
and one with the post quantum

1167
00:48:40,860 --> 00:48:44,760
cryptography<font color="#E5E5E5"> and then they would export</font>

1168
00:48:42,660 --> 00:48:47,430
<font color="#E5E5E5">the results to use that as a key</font><font color="#CCCCCC"> so like</font>

1169
00:48:44,760 --> 00:48:49,290
<font color="#E5E5E5">that if the post quantum crypto</font><font color="#CCCCCC"> turns</font>

1170
00:48:47,430 --> 00:48:50,700
out<font color="#CCCCCC"> not to</font><font color="#E5E5E5"> be secure you</font><font color="#CCCCCC"> can use the</font>

1171
00:48:49,290 --> 00:48:52,560
other one<font color="#CCCCCC"> you can rely on the</font><font color="#E5E5E5"> other one</font>

1172
00:48:50,700 --> 00:48:54,089
<font color="#E5E5E5">if one day</font><font color="#CCCCCC"> we have post quantum</font>

1173
00:48:52,560 --> 00:48:56,460
computers you<font color="#CCCCCC"> can rely on the post</font>

1174
00:48:54,090 --> 00:48:58,560
quantum crypto algorithm<font color="#E5E5E5"> so so do they</font>

1175
00:48:56,460 --> 00:49:00,810
are called<font color="#E5E5E5"> hybrid schemes where they mix</font>

1176
00:48:58,560 --> 00:49:18,420
both algorithms together like<font color="#CCCCCC"> that you</font>

1177
00:49:00,810 --> 00:49:20,250
can rely on both of them I just allow

1178
00:49:18,420 --> 00:49:24,050
myself to add for the<font color="#E5E5E5"> google chrome</font>

1179
00:49:20,250 --> 00:49:29,010
experiment<font color="#E5E5E5"> because I was busy with this</font>

1180
00:49:24,050 --> 00:49:33,540
it was the<font color="#E5E5E5"> New Hope algorithm right and</font>

1181
00:49:29,010 --> 00:49:37,310
they<font color="#E5E5E5"> embedded it into an ECC because a</font>

1182
00:49:33,540 --> 00:49:42,870
signature<font color="#E5E5E5"> was</font><font color="#CCCCCC"> not included the algorithm</font>

1183
00:49:37,310 --> 00:49:47,610
itself<font color="#E5E5E5"> is secure and it's used by</font><font color="#CCCCCC"> infini</font>

1184
00:49:42,870 --> 00:49:50,310
<font color="#CCCCCC">Infineon Infineon now for new contact</font>

1185
00:49:47,610 --> 00:49:52,530
<font color="#E5E5E5">contactless chips they produce these</font>

1186
00:49:50,310 --> 00:49:55,130
chips<font color="#CCCCCC"> already are you talking about the</font>

1187
00:49:52,530 --> 00:49:58,260
<font color="#E5E5E5">post quantum algorithm yes</font><font color="#CCCCCC"> okay new hope</font>

1188
00:49:55,130 --> 00:50:01,440
<font color="#E5E5E5">right yeah they prepare themselves for</font>

1189
00:49:58,260 --> 00:50:02,970
connected<font color="#CCCCCC"> car infrastructure so that</font>

1190
00:50:01,440 --> 00:50:05,190
there was<font color="#E5E5E5"> no</font><font color="#CCCCCC"> hope but what I said that</font>

1191
00:50:02,970 --> 00:50:07,730
<font color="#CCCCCC">they did was</font><font color="#E5E5E5"> to do that hybrid scheme</font>

1192
00:50:05,190 --> 00:50:10,530
where they would use new hope<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> as</font>

1193
00:50:07,730 --> 00:50:15,210
<font color="#E5E5E5">together exactly that's what they</font><font color="#CCCCCC"> did</font>

1194
00:50:10,530 --> 00:50:19,860
<font color="#E5E5E5">they embedded</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> hope in in a ECC</font>

1195
00:50:15,210 --> 00:50:23,460
elliptic curve scheme right but New Hope

1196
00:50:19,860 --> 00:50:25,620
has no signature<font color="#E5E5E5"> integrated so that's</font>

1197
00:50:23,460 --> 00:50:28,950
why they did<font color="#CCCCCC"> it right</font><font color="#E5E5E5"> it's quite</font>

1198
00:50:25,620 --> 00:50:30,630
interesting<font color="#E5E5E5"> and I believe</font><font color="#CCCCCC"> that this is</font>

1199
00:50:28,950 --> 00:50:32,759
<font color="#CCCCCC">not in</font><font color="#E5E5E5"> chrome anymore so that was just a</font>

1200
00:50:30,630 --> 00:50:37,890
<font color="#E5E5E5">test and they removed the test but they</font>

1201
00:50:32,760 --> 00:50:46,850
were<font color="#E5E5E5"> just testing all right more</font>

1202
00:50:37,890 --> 00:50:48,230
<font color="#E5E5E5">questions</font><font color="#CCCCCC"> I guess we can</font><font color="#E5E5E5"> call it yeah</font>

1203
00:50:46,850 --> 00:50:50,470
<font color="#E5E5E5">all right</font>

1204
00:50:48,230 --> 00:50:50,470
thank you

1205
00:50:50,900 --> 00:50:55,499
[Applause]

