1
00:00:00,000 --> 00:00:04,560
hello<font color="#E5E5E5"> everybody thank you</font><font color="#CCCCCC"> for coming so</font>

2
00:00:02,520 --> 00:00:06,420
today we're<font color="#E5E5E5"> gonna talk about mainframes</font>

3
00:00:04,560 --> 00:00:07,830
<font color="#CCCCCC">and the subjects are really AM</font>

4
00:00:06,420 --> 00:00:09,870
passionate and excited about because

5
00:00:07,830 --> 00:00:11,460
well you<font color="#E5E5E5"> know I get to pop shells on</font>

6
00:00:09,870 --> 00:00:14,250
machine that look a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> like this</font>

7
00:00:11,460 --> 00:00:16,080
<font color="#E5E5E5">and you know</font><font color="#CCCCCC"> frigate like machines</font><font color="#E5E5E5"> true</font>

8
00:00:14,250 --> 00:00:18,509
but<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> cool blue neon I</font><font color="#E5E5E5"> mean</font>

9
00:00:16,079 --> 00:00:20,070
what's not<font color="#E5E5E5"> to love right</font><font color="#CCCCCC"> and like I know</font>

10
00:00:18,510 --> 00:00:22,320
what you're thinking is<font color="#E5E5E5"> that really what</font>

11
00:00:20,070 --> 00:00:24,240
a mainframe looks like<font color="#E5E5E5"> I think you're</font>

12
00:00:22,320 --> 00:00:26,550
probably<font color="#E5E5E5"> more used to pictures that look</font>

13
00:00:24,240 --> 00:00:29,519
<font color="#CCCCCC">a little</font><font color="#E5E5E5"> bit like this or that you know</font>

14
00:00:26,550 --> 00:00:31,590
<font color="#E5E5E5">like big old gray boxes giant red tapes</font>

15
00:00:29,519 --> 00:00:34,920
<font color="#E5E5E5">that nobody cares about</font><font color="#CCCCCC"> that you know</font>

16
00:00:31,590 --> 00:00:36,269
some<font color="#E5E5E5"> people even</font><font color="#CCCCCC"> call legacy well</font><font color="#E5E5E5"> it's</font>

17
00:00:34,920 --> 00:00:39,570
true<font color="#E5E5E5"> that's what they used to look like</font>

18
00:00:36,270 --> 00:00:41,640
<font color="#CCCCCC">but in the 1960s</font><font color="#E5E5E5"> I mean they have</font>

19
00:00:39,570 --> 00:00:43,379
evolved since like every other product

20
00:00:41,640 --> 00:00:45,120
<font color="#E5E5E5">from the 1960s like when I</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> about</font>

21
00:00:43,379 --> 00:00:47,789
Tesla<font color="#CCCCCC"> for instance when I say test them</font>

22
00:00:45,120 --> 00:00:49,410
you don't<font color="#E5E5E5"> picture</font><font color="#CCCCCC"> a for 1964 machine</font>

23
00:00:47,789 --> 00:00:51,449
wouldn't break great suspension<font color="#CCCCCC"> breaks</font>

24
00:00:49,410 --> 00:00:53,069
right you picture<font color="#E5E5E5"> a</font><font color="#CCCCCC"> freaking</font><font color="#E5E5E5"> car that</font>

25
00:00:51,449 --> 00:00:55,730
can park itself<font color="#CCCCCC"> well it's the same</font><font color="#E5E5E5"> thing</font>

26
00:00:53,070 --> 00:00:59,399
<font color="#CCCCCC">with the mainframe they have evolved and</font>

27
00:00:55,730 --> 00:01:01,858
they like they're very<font color="#E5E5E5"> beautiful piece</font>

28
00:00:59,399 --> 00:01:03,809
<font color="#CCCCCC">of hardware that</font><font color="#E5E5E5"> actually performs well</font>

29
00:01:01,859 --> 00:01:07,439
<font color="#E5E5E5">and they have amazing stability and</font>

30
00:01:03,809 --> 00:01:08,700
amazing performance criteria is<font color="#CCCCCC"> that</font>

31
00:01:07,439 --> 00:01:10,250
<font color="#CCCCCC">anyway just</font><font color="#E5E5E5"> to show you</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> the</font>

32
00:01:08,700 --> 00:01:13,140
latest mainframe that<font color="#E5E5E5"> was released in</font>

33
00:01:10,250 --> 00:01:15,299
2017<font color="#CCCCCC"> so you can hardly call it legacy</font>

34
00:01:13,140 --> 00:01:17,130
<font color="#E5E5E5">now I</font><font color="#CCCCCC"> just put the specs that you would</font>

35
00:01:15,299 --> 00:01:19,049
look into<font color="#E5E5E5"> a computer</font><font color="#CCCCCC"> if you're looking</font>

36
00:01:17,130 --> 00:01:20,850
at it<font color="#E5E5E5"> on Amazon but you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> just to</font>

37
00:01:19,049 --> 00:01:22,740
give you an idea<font color="#E5E5E5"> so this is the IBM</font><font color="#CCCCCC"> G</font>

38
00:01:20,850 --> 00:01:24,539
<font color="#CCCCCC">Series mainframe and</font><font color="#E5E5E5"> we're only going to</font>

39
00:01:22,740 --> 00:01:27,089
<font color="#E5E5E5">talk about IBM</font><font color="#CCCCCC"> Z</font><font color="#E5E5E5"> series</font><font color="#CCCCCC"> in this talk</font>

40
00:01:24,540 --> 00:01:28,740
so these just just like just a few<font color="#CCCCCC"> of</font>

41
00:01:27,090 --> 00:01:32,130
the specs so you can see like<font color="#CCCCCC"> 32</font>

42
00:01:28,740 --> 00:01:34,229
<font color="#E5E5E5">terabytes</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> 170 processors</font><font color="#CCCCCC"> cocoanut 5.2</font>

43
00:01:32,130 --> 00:01:36,420
gigahertz<font color="#CCCCCC"> this is not a machine that you</font>

44
00:01:34,229 --> 00:01:38,549
use to run your<font color="#E5E5E5"> email server this</font><font color="#CCCCCC"> is a</font>

45
00:01:36,420 --> 00:01:40,500
<font color="#E5E5E5">machine that</font><font color="#CCCCCC"> you use or you want to</font>

46
00:01:38,549 --> 00:01:42,890
spend money on to<font color="#E5E5E5"> host your most</font>

47
00:01:40,500 --> 00:01:45,270
<font color="#E5E5E5">sensitive business applications like</font>

48
00:01:42,890 --> 00:01:46,979
like my friend Chad says if it's

49
00:01:45,270 --> 00:01:49,020
<font color="#E5E5E5">critical it's running on a mainframe</font>

50
00:01:46,979 --> 00:01:50,579
like no questions asked and these

51
00:01:49,020 --> 00:01:53,460
machines<font color="#CCCCCC"> have amazing stability of</font>

52
00:01:50,579 --> 00:01:55,320
amazing performance<font color="#E5E5E5"> that you cannot find</font>

53
00:01:53,460 --> 00:01:58,048
or easily find anywhere else basically

54
00:01:55,320 --> 00:01:59,219
<font color="#CCCCCC">oh and by the way I just included a</font><font color="#E5E5E5"> link</font>

55
00:01:58,049 --> 00:02:01,500
for the presentation because there's

56
00:01:59,219 --> 00:02:03,059
gonna<font color="#E5E5E5"> be some demos etc so if like if</font>

57
00:02:01,500 --> 00:02:05,420
it's you can't see it quite<font color="#E5E5E5"> well just</font>

58
00:02:03,060 --> 00:02:08,399
downloaded<font color="#E5E5E5"> I'm gonna keep the link here</font>

59
00:02:05,420 --> 00:02:10,348
<font color="#E5E5E5">so who needs this these machines who</font>

60
00:02:08,399 --> 00:02:13,379
<font color="#CCCCCC">need such performance such a reliability</font>

61
00:02:10,348 --> 00:02:14,540
<font color="#CCCCCC">well I want you to</font><font color="#E5E5E5"> think about every</font>

62
00:02:13,379 --> 00:02:16,950
basically

63
00:02:14,540 --> 00:02:19,799
critical service that you rely on in

64
00:02:16,950 --> 00:02:21,989
<font color="#E5E5E5">your everyday life let's say</font><font color="#CCCCCC"> wire</font>

65
00:02:19,800 --> 00:02:23,940
transfer<font color="#E5E5E5"> money getting money out of an</font>

66
00:02:21,990 --> 00:02:26,450
ATM<font color="#E5E5E5"> booking flights to come see</font>

67
00:02:23,940 --> 00:02:29,370
conferences<font color="#CCCCCC"> a</font><font color="#E5E5E5"> hotel booking</font><font color="#CCCCCC"> all of these</font>

68
00:02:26,450 --> 00:02:33,030
important transactions occur on a

69
00:02:29,370 --> 00:02:34,650
mainframe like<font color="#E5E5E5"> 87% of credit card</font>

70
00:02:33,030 --> 00:02:37,020
transactions go through one of<font color="#E5E5E5"> these</font>

71
00:02:34,650 --> 00:02:39,000
machines<font color="#CCCCCC"> so you know it's it's just</font>

72
00:02:37,020 --> 00:02:41,459
wrong and<font color="#E5E5E5"> sad to call them legacy these</font>

73
00:02:39,000 --> 00:02:43,560
machines power the world<font color="#CCCCCC"> economy and yet</font>

74
00:02:41,459 --> 00:02:44,670
we do<font color="#CCCCCC"> not spend jesters and</font><font color="#E5E5E5"> hackers or</font>

75
00:02:43,560 --> 00:02:47,970
whatever we do not give a about

76
00:02:44,670 --> 00:02:49,200
them<font color="#E5E5E5"> and that's just</font><font color="#CCCCCC"> too sad</font><font color="#E5E5E5"> and so just</font>

77
00:02:47,970 --> 00:02:50,850
to give<font color="#E5E5E5"> you an idea</font><font color="#CCCCCC"> of some of</font><font color="#E5E5E5"> the</font>

78
00:02:49,200 --> 00:02:53,190
<font color="#E5E5E5">companies that actually rely on a</font>

79
00:02:50,850 --> 00:02:54,989
mainframe so I like I put a slide<font color="#CCCCCC"> and I</font>

80
00:02:53,190 --> 00:02:57,450
put a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of logos of</font><font color="#E5E5E5"> the company but I</font>

81
00:02:54,989 --> 00:02:58,950
couldn't fit them<font color="#E5E5E5"> all in but I hope you</font>

82
00:02:57,450 --> 00:03:00,720
recognize<font color="#E5E5E5"> some of the companies that you</font>

83
00:02:58,950 --> 00:03:02,250
care about<font color="#E5E5E5"> you use in your daily life</font>

84
00:03:00,720 --> 00:03:03,840
some<font color="#E5E5E5"> of them</font><font color="#CCCCCC"> maybe are your clients</font>

85
00:03:02,250 --> 00:03:05,940
maybe it's your bank maybe it's your

86
00:03:03,840 --> 00:03:07,319
airline and if you don't know you do not

87
00:03:05,940 --> 00:03:08,550
find the company that you care<font color="#CCCCCC"> about on</font>

88
00:03:07,319 --> 00:03:08,910
this slide maybe you'll find out on<font color="#E5E5E5"> this</font>

89
00:03:08,550 --> 00:03:11,459
one

90
00:03:08,910 --> 00:03:13,950
my point is like a lot<font color="#E5E5E5"> of companies</font><font color="#CCCCCC"> use</font>

91
00:03:11,459 --> 00:03:15,959
this use these<font color="#E5E5E5"> machines</font><font color="#CCCCCC"> your three years</font>

92
00:03:13,950 --> 00:03:17,929
<font color="#CCCCCC">pen testers we prefer going</font><font color="#E5E5E5"> after domain</font>

93
00:03:15,959 --> 00:03:20,220
admins<font color="#E5E5E5"> or after email servers I mean</font>

94
00:03:17,930 --> 00:03:22,560
honestly I do<font color="#E5E5E5"> not care</font><font color="#CCCCCC"> about the emails</font>

95
00:03:20,220 --> 00:03:24,359
but the CEOs email if I can add a<font color="#E5E5E5"> zero</font>

96
00:03:22,560 --> 00:03:26,040
<font color="#CCCCCC">to my bank account</font><font color="#E5E5E5"> and guess where the</font>

97
00:03:24,360 --> 00:03:28,320
bank account is stored on a<font color="#E5E5E5"> database on</font>

98
00:03:26,040 --> 00:03:30,720
a mainframe<font color="#E5E5E5"> so like there was this</font>

99
00:03:28,320 --> 00:03:32,489
awesome code by<font color="#E5E5E5"> Dominic</font><font color="#CCCCCC"> White that said</font>

100
00:03:30,720 --> 00:03:34,320
when<font color="#CCCCCC"> chester's</font><font color="#E5E5E5"> tend to resemble</font><font color="#CCCCCC"> other</font>

101
00:03:32,489 --> 00:03:36,900
pen testers instead of resembling actual

102
00:03:34,320 --> 00:03:38,100
attackers<font color="#E5E5E5"> and like it's so true in the</font>

103
00:03:36,900 --> 00:03:40,410
<font color="#E5E5E5">world of their mainframe at least</font>

104
00:03:38,100 --> 00:03:42,840
<font color="#E5E5E5">actually so before we</font><font color="#CCCCCC"> move on just</font><font color="#E5E5E5"> a</font>

105
00:03:40,410 --> 00:03:44,880
little<font color="#E5E5E5"> bit about me</font><font color="#CCCCCC"> pen tester PwC</font>

106
00:03:42,840 --> 00:03:46,680
France<font color="#E5E5E5"> I'm mainly hacking</font><font color="#CCCCCC"> Windows and</font>

107
00:03:44,880 --> 00:03:48,840
<font color="#CCCCCC">UNIX stuff right I'm as guilty as</font><font color="#E5E5E5"> the</font>

108
00:03:46,680 --> 00:03:50,700
rest<font color="#E5E5E5"> of you but I first got my hands on</font>

109
00:03:48,840 --> 00:03:52,829
a mainframe in 2014 I<font color="#E5E5E5"> was working out</font>

110
00:03:50,700 --> 00:03:54,540
<font color="#CCCCCC">waystone at the time and we were doing</font>

111
00:03:52,829 --> 00:03:55,920
<font color="#CCCCCC">this</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know global audit like</font>

112
00:03:54,540 --> 00:03:59,970
basically scanning everything<font color="#E5E5E5"> that had</font>

113
00:03:55,920 --> 00:04:03,358
an IP address<font color="#E5E5E5"> and we found this this</font>

114
00:03:59,970 --> 00:04:05,250
<font color="#E5E5E5">basically like telnet like service and</font>

115
00:04:03,359 --> 00:04:07,200
you know you google it<font color="#E5E5E5"> you find the word</font>

116
00:04:05,250 --> 00:04:09,120
mainframe etc and like we were so

117
00:04:07,200 --> 00:04:10,738
excited<font color="#E5E5E5"> like this this is an old</font><font color="#CCCCCC"> machine</font>

118
00:04:09,120 --> 00:04:12,180
that's sitting on<font color="#E5E5E5"> the network we're so</font>

119
00:04:10,739 --> 00:04:14,670
<font color="#E5E5E5">gonna you know pulling the out of</font>

120
00:04:12,180 --> 00:04:16,739
it but we didn't<font color="#E5E5E5"> for various reasons</font>

121
00:04:14,670 --> 00:04:18,839
<font color="#CCCCCC">like lack of tools lack of easily</font>

122
00:04:16,738 --> 00:04:20,339
<font color="#E5E5E5">accessible</font><font color="#CCCCCC"> documentation lack of you</font>

123
00:04:18,839 --> 00:04:22,799
<font color="#E5E5E5">know talks about it there was</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> talk</font>

124
00:04:20,339 --> 00:04:25,200
at blackhat<font color="#CCCCCC"> at the time</font><font color="#E5E5E5"> and so I decided</font>

125
00:04:22,800 --> 00:04:27,240
to<font color="#E5E5E5"> look into it do the research develop</font>

126
00:04:25,200 --> 00:04:27,979
some tools<font color="#E5E5E5"> I presented some of my tools</font>

127
00:04:27,240 --> 00:04:30,980
like last

128
00:04:27,980 --> 00:04:33,380
year<font color="#CCCCCC"> at hugging the box and so this is</font>

129
00:04:30,980 --> 00:04:35,480
<font color="#E5E5E5">basically the continuity of</font><font color="#CCCCCC"> that of that</font>

130
00:04:33,380 --> 00:04:37,580
<font color="#CCCCCC">truck</font><font color="#E5E5E5"> and all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> tools that I will</font>

131
00:04:35,480 --> 00:04:41,390
present are on<font color="#E5E5E5"> github</font><font color="#CCCCCC"> my github</font><font color="#E5E5E5"> so you</font>

132
00:04:37,580 --> 00:04:42,789
<font color="#E5E5E5">can go fetch them and yeah</font><font color="#CCCCCC"> like here's</font>

133
00:04:41,390 --> 00:04:44,870
my<font color="#E5E5E5"> Twitter if you</font><font color="#CCCCCC"> follow follow me</font>

134
00:04:42,790 --> 00:04:48,500
<font color="#E5E5E5">promise I don't only talk</font><font color="#CCCCCC"> about me</font>

135
00:04:44,870 --> 00:04:50,690
frames<font color="#E5E5E5"> so what are we</font><font color="#CCCCCC"> gonna talk</font><font color="#E5E5E5"> about</font>

136
00:04:48,500 --> 00:04:53,000
<font color="#E5E5E5">today</font><font color="#CCCCCC"> the meat</font><font color="#E5E5E5"> of this talk will be</font>

137
00:04:50,690 --> 00:04:55,100
about<font color="#E5E5E5"> post</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> stuff like what do</font>

138
00:04:53,000 --> 00:04:57,560
you<font color="#E5E5E5"> do once you</font><font color="#CCCCCC"> have a shell on</font><font color="#E5E5E5"> a</font>

139
00:04:55,100 --> 00:04:59,360
mainframe<font color="#CCCCCC"> however I found</font><font color="#E5E5E5"> out that</font>

140
00:04:57,560 --> 00:05:02,210
<font color="#E5E5E5">people actually struggle a little bit</font>

141
00:04:59,360 --> 00:05:04,550
with the idea<font color="#E5E5E5"> of like executing code</font>

142
00:05:02,210 --> 00:05:06,320
remotely on a mainframe<font color="#CCCCCC"> like they have</font>

143
00:05:04,550 --> 00:05:08,480
trouble<font color="#E5E5E5"> believing it like I had to</font>

144
00:05:06,320 --> 00:05:10,010
convince<font color="#E5E5E5"> some actually pen testers</font>

145
00:05:08,480 --> 00:05:11,630
clients or whatever that<font color="#E5E5E5"> hey it's</font>

146
00:05:10,010 --> 00:05:13,880
possible to attack<font color="#E5E5E5"> this machine like</font><font color="#CCCCCC"> you</font>

147
00:05:11,630 --> 00:05:15,710
would any other machine<font color="#E5E5E5"> so I'm just</font>

148
00:05:13,880 --> 00:05:17,690
before going<font color="#E5E5E5"> to the fun</font><font color="#CCCCCC"> stuff of like</font>

149
00:05:15,710 --> 00:05:19,310
assembly playing with memory<font color="#E5E5E5"> and all</font>

150
00:05:17,690 --> 00:05:21,350
that cool stuff<font color="#CCCCCC"> I just want to do a</font>

151
00:05:19,310 --> 00:05:23,000
quick<font color="#CCCCCC"> recap of like the current tools</font>

152
00:05:21,350 --> 00:05:24,530
and current techniques to execute code

153
00:05:23,000 --> 00:05:27,050
that our mainframe like how<font color="#E5E5E5"> would you</font>

154
00:05:24,530 --> 00:05:28,820
approach this<font color="#E5E5E5"> machine if you find it on</font>

155
00:05:27,050 --> 00:05:30,950
<font color="#E5E5E5">a network so just 10 minutes briefly on</font>

156
00:05:28,820 --> 00:05:34,099
<font color="#E5E5E5">that and then we'll go and do some</font>

157
00:05:30,950 --> 00:05:36,770
really<font color="#CCCCCC"> cool stuff okay brilliant</font>

158
00:05:34,100 --> 00:05:38,270
now this<font color="#CCCCCC"> machine if you find it on a</font>

159
00:05:36,770 --> 00:05:41,120
<font color="#E5E5E5">network you want to communicate with it</font>

160
00:05:38,270 --> 00:05:44,510
it<font color="#CCCCCC"> has an IP address</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can find</font><font color="#E5E5E5"> like</font>

161
00:05:41,120 --> 00:05:46,160
HTTP FTP SSH all the cool normal classic

162
00:05:44,510 --> 00:05:49,640
stuff because it basically<font color="#E5E5E5"> has a</font><font color="#CCCCCC"> UNIX on</font>

163
00:05:46,160 --> 00:05:52,790
it so yeah<font color="#E5E5E5"> again</font><font color="#CCCCCC"> I'm only</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font>

164
00:05:49,640 --> 00:05:54,500
<font color="#CCCCCC">IBM's e-series so the main protocol to</font>

165
00:05:52,790 --> 00:06:00,010
communicate<font color="#CCCCCC"> with this machine is called</font>

166
00:05:54,500 --> 00:06:02,330
<font color="#CCCCCC">TN 3217 TN 3270 is nothing but a telnet</font>

167
00:06:00,010 --> 00:06:04,130
rebrand<font color="#E5E5E5"> rebranded channel</font><font color="#CCCCCC"> ed</font><font color="#E5E5E5"> that's it</font>

168
00:06:02,330 --> 00:06:06,650
except<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> will need a virtual</font>

169
00:06:04,130 --> 00:06:09,170
emulator<font color="#E5E5E5"> or you know the real</font><font color="#CCCCCC"> phone</font><font color="#E5E5E5"> the</font>

170
00:06:06,650 --> 00:06:10,489
real terminal<font color="#E5E5E5"> to basically download it</font>

171
00:06:09,170 --> 00:06:11,600
and<font color="#CCCCCC"> communicate with</font><font color="#E5E5E5"> the Machine and</font>

172
00:06:10,490 --> 00:06:13,940
it's just you know telnet with

173
00:06:11,600 --> 00:06:16,580
additional<font color="#E5E5E5"> data streams</font><font color="#CCCCCC"> etc so there's</font><font color="#E5E5E5"> X</font>

174
00:06:13,940 --> 00:06:18,469
<font color="#E5E5E5">30 to 70</font><font color="#CCCCCC"> there's WC 30 to 70 there are</font>

175
00:06:16,580 --> 00:06:20,289
other tools<font color="#CCCCCC"> just download</font><font color="#E5E5E5"> them and then</font>

176
00:06:18,470 --> 00:06:23,810
you<font color="#E5E5E5"> can communicate with the mainframe</font>

177
00:06:20,290 --> 00:06:27,320
but the thing is<font color="#E5E5E5"> like telnet 1032 70 is</font>

178
00:06:23,810 --> 00:06:30,230
clear text so right there you have<font color="#CCCCCC"> a you</font>

179
00:06:27,320 --> 00:06:32,480
know<font color="#E5E5E5"> possibility of sniffing the the</font>

180
00:06:30,230 --> 00:06:34,610
<font color="#E5E5E5">network and</font><font color="#CCCCCC"> just get credentials</font><font color="#E5E5E5"> and you</font>

181
00:06:32,480 --> 00:06:36,500
know so many<font color="#CCCCCC"> clients like spend like</font>

182
00:06:34,610 --> 00:06:39,140
minutes hours<font color="#CCCCCC"> arguing that their machine</font>

183
00:06:36,500 --> 00:06:41,000
is is you know unhackable so we do you

184
00:06:39,140 --> 00:06:41,568
should not apply<font color="#E5E5E5"> this or that security</font>

185
00:06:41,000 --> 00:06:43,759
measure and

186
00:06:41,569 --> 00:06:46,309
like this one question<font color="#CCCCCC"> like okay do you</font>

187
00:06:43,759 --> 00:06:47,809
auntie<font color="#CCCCCC"> and</font><font color="#E5E5E5"> 3270 yes is it over</font><font color="#CCCCCC"> ssl</font><font color="#E5E5E5"> no</font>

188
00:06:46,309 --> 00:06:50,929
and they're like what the hell are<font color="#E5E5E5"> you</font>

189
00:06:47,809 --> 00:06:52,819
talking about<font color="#E5E5E5"> it's unbreakable</font><font color="#CCCCCC"> anyway so</font>

190
00:06:50,929 --> 00:06:54,859
<font color="#E5E5E5">just to show you</font><font color="#CCCCCC"> basically that it's</font>

191
00:06:52,819 --> 00:06:56,360
possible<font color="#CCCCCC"> to like there are tools like</font><font color="#E5E5E5"> if</font>

192
00:06:54,860 --> 00:06:58,939
you download the latest<font color="#CCCCCC"> ettercap on</font>

193
00:06:56,360 --> 00:07:01,520
github<font color="#E5E5E5"> you can just basically get a</font><font color="#CCCCCC"> TN</font>

194
00:06:58,939 --> 00:07:04,459
<font color="#CCCCCC">30 to 70 dissector</font><font color="#E5E5E5"> that will you know</font>

195
00:07:01,520 --> 00:07:05,929
parse the network and<font color="#E5E5E5"> I will just show</font>

196
00:07:04,459 --> 00:07:07,639
you like a basic<font color="#E5E5E5"> man-in-the-middle</font>

197
00:07:05,929 --> 00:07:10,429
attack with our people<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> actually</font>

198
00:07:07,639 --> 00:07:11,599
works<font color="#CCCCCC"> so here we have we</font><font color="#E5E5E5"> launched at</font>

199
00:07:10,429 --> 00:07:13,789
<font color="#E5E5E5">your</font><font color="#CCCCCC"> cap and</font><font color="#E5E5E5"> you can see that our</font>

200
00:07:11,599 --> 00:07:16,188
peoples are in mode like classic 1990

201
00:07:13,789 --> 00:07:18,378
stuff<font color="#E5E5E5"> right and then on the other side</font>

202
00:07:16,189 --> 00:07:19,939
we<font color="#CCCCCC"> launch an emulator mainframe emulator</font>

203
00:07:18,379 --> 00:07:22,669
you can see we connect we type in<font color="#E5E5E5"> the IP</font>

204
00:07:19,939 --> 00:07:24,740
address<font color="#CCCCCC"> it connects to port 23</font><font color="#E5E5E5"> and here</font>

205
00:07:22,669 --> 00:07:26,479
we have the like welcoming screen and a

206
00:07:24,740 --> 00:07:28,430
mainframe<font color="#E5E5E5"> so this is custom design</font><font color="#CCCCCC"> I</font>

207
00:07:26,479 --> 00:07:30,199
designed it it<font color="#E5E5E5"> doesn't look as cool</font><font color="#CCCCCC"> as</font>

208
00:07:28,430 --> 00:07:32,389
<font color="#CCCCCC">that normally so you have a</font><font color="#E5E5E5"> choice</font>

209
00:07:30,199 --> 00:07:34,279
<font color="#E5E5E5">between two apps</font><font color="#CCCCCC"> TSO and euro</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> Chea so</font>

210
00:07:32,389 --> 00:07:35,659
just the bin bash it just<font color="#CCCCCC"> executes you</font>

211
00:07:34,279 --> 00:07:38,149
<font color="#CCCCCC">know lets you execute commands</font><font color="#E5E5E5"> so we</font>

212
00:07:35,659 --> 00:07:39,769
type in<font color="#E5E5E5"> TSO and then we can type in our</font>

213
00:07:38,149 --> 00:07:41,569
username and password so<font color="#CCCCCC"> this is what an</font>

214
00:07:39,769 --> 00:07:44,449
actual connection on the mainframe looks

215
00:07:41,569 --> 00:07:46,399
like new type in a username password

216
00:07:44,449 --> 00:07:47,899
then here we<font color="#CCCCCC"> have the you know</font><font color="#E5E5E5"> the</font>

217
00:07:46,399 --> 00:07:50,300
prompt where we can execute commands

218
00:07:47,899 --> 00:07:52,189
like<font color="#CCCCCC"> netstat like ping like</font><font color="#E5E5E5"> nslookup</font>

219
00:07:50,300 --> 00:07:54,349
<font color="#E5E5E5">like normal commands to list files etc</font>

220
00:07:52,189 --> 00:07:56,269
<font color="#E5E5E5">and you can see here that</font><font color="#CCCCCC"> the ettercap</font>

221
00:07:54,349 --> 00:07:58,998
basically<font color="#E5E5E5"> just got the username and</font>

222
00:07:56,269 --> 00:08:01,519
<font color="#E5E5E5">password</font><font color="#CCCCCC"> just to say that hey simple</font>

223
00:07:58,999 --> 00:08:03,259
attacks like<font color="#CCCCCC"> not</font><font color="#E5E5E5"> network sniffing still</font>

224
00:08:01,519 --> 00:08:05,659
work<font color="#E5E5E5"> because nobody cares about</font>

225
00:08:03,259 --> 00:08:07,369
implementing SSL on<font color="#CCCCCC"> a mainframe</font><font color="#E5E5E5"> like a</font>

226
00:08:05,659 --> 00:08:10,009
soldier of<font color="#E5E5E5"> Fortran the same guy that</font>

227
00:08:07,369 --> 00:08:11,959
<font color="#E5E5E5">wrote this ettercap dissector scanned</font>

228
00:08:10,009 --> 00:08:14,449
all the<font color="#E5E5E5"> mainframes on the internet</font><font color="#CCCCCC"> only</font>

229
00:08:11,959 --> 00:08:17,479
half of<font color="#E5E5E5"> them use SSL so you can imagine</font>

230
00:08:14,449 --> 00:08:18,979
this<font color="#CCCCCC"> stage in the like how it is</font><font color="#E5E5E5"> in the</font>

231
00:08:17,479 --> 00:08:22,248
internal<font color="#E5E5E5"> network where nobody cares</font>

232
00:08:18,979 --> 00:08:23,930
about<font color="#E5E5E5"> SSL and even if SSL is present the</font>

233
00:08:22,249 --> 00:08:26,899
virtual emulator<font color="#CCCCCC"> that we just</font><font color="#E5E5E5"> used is</font>

234
00:08:23,930 --> 00:08:28,699
not as modern<font color="#E5E5E5"> as browsers you know like</font>

235
00:08:26,899 --> 00:08:30,499
it doesn't<font color="#E5E5E5"> maintain</font><font color="#CCCCCC"> a list of</font>

236
00:08:28,699 --> 00:08:32,688
certificates<font color="#E5E5E5"> that it needs to check</font>

237
00:08:30,499 --> 00:08:34,699
etcetera it doesn't have that<font color="#E5E5E5"> so even</font>

238
00:08:32,688 --> 00:08:37,938
then with SSL you can actually<font color="#E5E5E5"> perform</font>

239
00:08:34,698 --> 00:08:40,338
SSL interception and decryption

240
00:08:37,938 --> 00:08:42,110
<font color="#E5E5E5">so just to say that I don't need a</font>

241
00:08:40,339 --> 00:08:45,230
<font color="#CCCCCC">zero-day to go inside a mainframe if I</font>

242
00:08:42,110 --> 00:08:47,540
can sniff<font color="#E5E5E5"> Network and get credentials so</font>

243
00:08:45,230 --> 00:08:49,420
just staying in<font color="#CCCCCC"> the like very simple</font>

244
00:08:47,540 --> 00:08:51,260
attacks<font color="#E5E5E5"> that actually work in the field</font>

245
00:08:49,420 --> 00:08:53,860
<font color="#E5E5E5">we're gonna look at brute force</font>

246
00:08:51,260 --> 00:08:55,670
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that you would not think</font><font color="#E5E5E5"> of</font>

247
00:08:53,860 --> 00:08:57,170
trying on

248
00:08:55,670 --> 00:08:59,390
on a<font color="#E5E5E5"> normal environment or like you</font>

249
00:08:57,170 --> 00:09:01,339
would do<font color="#E5E5E5"> in the last week risa</font><font color="#CCCCCC"> like you</font>

250
00:08:59,390 --> 00:09:04,880
know last thing that<font color="#E5E5E5"> you would do</font><font color="#CCCCCC"> in a</font>

251
00:09:01,340 --> 00:09:06,650
Windows<font color="#E5E5E5"> environment but it got me just</font>

252
00:09:04,880 --> 00:09:08,540
so many<font color="#CCCCCC"> mainframes it's insane it works</font>

253
00:09:06,650 --> 00:09:10,970
like<font color="#E5E5E5"> and I'm gonna show you very quickly</font>

254
00:09:08,540 --> 00:09:12,650
how<font color="#E5E5E5"> basically I go about it it's just</font>

255
00:09:10,970 --> 00:09:15,200
like the<font color="#E5E5E5"> Chia so like the command-line</font>

256
00:09:12,650 --> 00:09:16,699
interpreter that lets you connect to the

257
00:09:15,200 --> 00:09:19,460
<font color="#CCCCCC">mainframe and you know authenticate and</font>

258
00:09:16,700 --> 00:09:23,090
execute commands it<font color="#E5E5E5"> actually it tells</font>

259
00:09:19,460 --> 00:09:27,560
you if the username<font color="#E5E5E5"> is valid or not</font><font color="#CCCCCC"> now</font>

260
00:09:23,090 --> 00:09:29,180
I<font color="#E5E5E5"> chose a poor example but usually there</font>

261
00:09:27,560 --> 00:09:31,280
<font color="#CCCCCC">are like there are some restrictions on</font>

262
00:09:29,180 --> 00:09:32,839
<font color="#E5E5E5">the</font><font color="#CCCCCC"> user name that makes them very</font>

263
00:09:31,280 --> 00:09:35,270
predictable<font color="#E5E5E5"> so the user name cannot</font>

264
00:09:32,840 --> 00:09:37,670
exceed<font color="#E5E5E5"> seven characters it's always</font>

265
00:09:35,270 --> 00:09:39,050
<font color="#E5E5E5">uppercase</font><font color="#CCCCCC"> it has three special</font>

266
00:09:37,670 --> 00:09:40,579
<font color="#CCCCCC">characters you</font><font color="#E5E5E5"> can input only three</font>

267
00:09:39,050 --> 00:09:42,469
types of special<font color="#E5E5E5"> characters called</font>

268
00:09:40,580 --> 00:09:44,390
<font color="#E5E5E5">national characters</font><font color="#CCCCCC"> you know and you</font>

269
00:09:42,470 --> 00:09:46,490
cannot start it with a with a number so

270
00:09:44,390 --> 00:09:47,900
all these restrictions makes it makes<font color="#E5E5E5"> it</font>

271
00:09:46,490 --> 00:09:49,400
like you know the companies are<font color="#E5E5E5"> not</font>

272
00:09:47,900 --> 00:09:51,079
<font color="#E5E5E5">cannot get too creative with their</font>

273
00:09:49,400 --> 00:09:52,490
<font color="#CCCCCC">username</font><font color="#E5E5E5"> so all the developers would be</font>

274
00:09:51,080 --> 00:09:55,130
like<font color="#E5E5E5"> def</font><font color="#CCCCCC"> zero zero one they have zero</font>

275
00:09:52,490 --> 00:09:56,540
<font color="#CCCCCC">zero two</font><font color="#E5E5E5"> or a user from users from</font>

276
00:09:55,130 --> 00:09:58,880
certain<font color="#E5E5E5"> Department will be like for</font>

277
00:09:56,540 --> 00:10:01,430
instance<font color="#E5E5E5"> G GA</font><font color="#CCCCCC"> zero and then three</font>

278
00:09:58,880 --> 00:10:03,170
letters and something like<font color="#CCCCCC"> that so all</font>

279
00:10:01,430 --> 00:10:05,209
of this makes it<font color="#E5E5E5"> very</font><font color="#CCCCCC"> easy</font><font color="#E5E5E5"> and very</font>

280
00:10:03,170 --> 00:10:07,040
practical<font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> conduct a</font>

281
00:10:05,210 --> 00:10:09,200
<font color="#CCCCCC">brute-force</font><font color="#E5E5E5"> attack to enumerate users</font>

282
00:10:07,040 --> 00:10:11,089
and it has worked<font color="#E5E5E5"> so many times and</font>

283
00:10:09,200 --> 00:10:13,610
<font color="#E5E5E5">there's an nmap script to do it again</font>

284
00:10:11,090 --> 00:10:15,530
<font color="#E5E5E5">courtesy of soldier</font><font color="#CCCCCC"> of fortran so it's</font>

285
00:10:13,610 --> 00:10:17,000
included<font color="#E5E5E5"> in the latest and</font><font color="#CCCCCC"> maps so you</font>

286
00:10:15,530 --> 00:10:18,760
<font color="#CCCCCC">do not have to do anything just</font><font color="#E5E5E5"> think</font>

287
00:10:17,000 --> 00:10:21,800
<font color="#CCCCCC">about this type of attack</font><font color="#E5E5E5"> when you're</font>

288
00:10:18,760 --> 00:10:23,420
facing a mainframe<font color="#CCCCCC"> now once you identify</font>

289
00:10:21,800 --> 00:10:25,310
the list of<font color="#CCCCCC"> user names</font><font color="#E5E5E5"> that are valid</font>

290
00:10:23,420 --> 00:10:29,689
<font color="#E5E5E5">obviously the next step</font><font color="#CCCCCC"> is to guess the</font>

291
00:10:25,310 --> 00:10:31,640
password<font color="#CCCCCC"> now the password that</font><font color="#E5E5E5"> I usually</font>

292
00:10:29,690 --> 00:10:33,710
<font color="#E5E5E5">trying with which the one I the give me</font>

293
00:10:31,640 --> 00:10:35,960
<font color="#E5E5E5">gives me the most results it's just</font>

294
00:10:33,710 --> 00:10:38,210
passwords equal<font color="#CCCCCC"> username</font><font color="#E5E5E5"> it's so stupid</font>

295
00:10:35,960 --> 00:10:40,010
<font color="#E5E5E5">it's so but it works</font><font color="#CCCCCC"> it's like like a</font>

296
00:10:38,210 --> 00:10:41,630
like I<font color="#CCCCCC"> said before like you</font><font color="#E5E5E5"> don't need</font>

297
00:10:40,010 --> 00:10:44,180
<font color="#E5E5E5">zero days it's these simple attacks</font>

298
00:10:41,630 --> 00:10:46,130
still work on<font color="#E5E5E5"> a mainframe I mean come on</font>

299
00:10:44,180 --> 00:10:48,140
and so just<font color="#E5E5E5"> to show you how effective</font><font color="#CCCCCC"> it</font>

300
00:10:46,130 --> 00:10:49,960
is<font color="#E5E5E5"> I'm just</font><font color="#CCCCCC"> gonna show you a dump that</font>

301
00:10:48,140 --> 00:10:53,060
<font color="#E5E5E5">like basically I did on like</font><font color="#CCCCCC"> client</font>

302
00:10:49,960 --> 00:10:55,610
assignment<font color="#CCCCCC"> I just be</font><font color="#E5E5E5"> like a dump between</font>

303
00:10:53,060 --> 00:10:58,849
like we<font color="#CCCCCC"> dumped</font><font color="#E5E5E5"> the entity s did file</font>

304
00:10:55,610 --> 00:11:00,500
like the<font color="#CCCCCC"> Active Directory</font><font color="#E5E5E5"> hash table on</font>

305
00:10:58,850 --> 00:11:03,310
<font color="#E5E5E5">Windows and did the same on the</font>

306
00:11:00,500 --> 00:11:05,960
mainframe<font color="#E5E5E5"> so</font><font color="#CCCCCC"> 1000</font><font color="#E5E5E5"> users on Windows 998</font>

307
00:11:03,310 --> 00:11:07,430
users on mainframe<font color="#CCCCCC"> and so you can see</font>

308
00:11:05,960 --> 00:11:09,560
that on<font color="#CCCCCC"> the windows world</font><font color="#E5E5E5"> in the windows</font>

309
00:11:07,430 --> 00:11:12,020
world<font color="#CCCCCC"> only 5%</font>

310
00:11:09,560 --> 00:11:14,869
like you<font color="#E5E5E5"> used password the password was</font>

311
00:11:12,020 --> 00:11:17,449
<font color="#E5E5E5">username plus a number on a mainframe</font><font color="#CCCCCC"> 27</font>

312
00:11:14,870 --> 00:11:19,460
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> where the password was equal to</font>

313
00:11:17,450 --> 00:11:22,280
<font color="#CCCCCC">username plus</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> number 19</font><font color="#E5E5E5"> percent</font>

314
00:11:19,460 --> 00:11:25,790
<font color="#E5E5E5">password equals username now obviously</font>

315
00:11:22,280 --> 00:11:28,310
this<font color="#CCCCCC"> is a totally biased</font><font color="#E5E5E5"> result but what</font>

316
00:11:25,790 --> 00:11:30,949
I want<font color="#E5E5E5"> to convey is</font><font color="#CCCCCC"> that there's a</font>

317
00:11:28,310 --> 00:11:32,569
really<font color="#E5E5E5"> difference or a gap in security</font>

318
00:11:30,950 --> 00:11:33,650
maturity between<font color="#E5E5E5"> the windows world in</font>

319
00:11:32,570 --> 00:11:35,600
the mainframe world like in the windows

320
00:11:33,650 --> 00:11:37,850
<font color="#CCCCCC">world it has</font><font color="#E5E5E5"> been broken so many times</font>

321
00:11:35,600 --> 00:11:39,650
that<font color="#CCCCCC"> people have no trouble believing</font>

322
00:11:37,850 --> 00:11:41,180
that<font color="#E5E5E5"> it's you know it's attackers are</font>

323
00:11:39,650 --> 00:11:42,709
out there and they're<font color="#E5E5E5"> after the platform</font>

324
00:11:41,180 --> 00:11:44,420
they know how<font color="#E5E5E5"> to exploit it the</font>

325
00:11:42,710 --> 00:11:46,370
<font color="#E5E5E5">mainframe world is the only environment</font>

326
00:11:44,420 --> 00:11:48,560
<font color="#E5E5E5">where I actually heard this the</font>

327
00:11:46,370 --> 00:11:50,210
<font color="#E5E5E5">following justifications we don't need</font>

328
00:11:48,560 --> 00:11:51,979
to worry about that<font color="#E5E5E5"> hackers will not go</font>

329
00:11:50,210 --> 00:11:53,450
<font color="#CCCCCC">through</font><font color="#E5E5E5"> the trouble</font><font color="#CCCCCC"> of actually doing</font>

330
00:11:51,980 --> 00:11:55,460
this stuff on a mainframe<font color="#E5E5E5"> or learning</font>

331
00:11:53,450 --> 00:11:56,930
the<font color="#E5E5E5"> mainframe or developing tools to pen</font>

332
00:11:55,460 --> 00:11:58,100
test it or something they don't<font color="#E5E5E5"> they</font>

333
00:11:56,930 --> 00:12:00,589
don't<font color="#CCCCCC"> know how</font><font color="#E5E5E5"> to do it it's closed</font>

334
00:11:58,100 --> 00:12:02,960
that's<font color="#E5E5E5"> but it's insane to</font><font color="#CCCCCC"> have this</font><font color="#E5E5E5"> kind</font>

335
00:12:00,590 --> 00:12:04,970
of justifications<font color="#E5E5E5"> in 2017 given</font><font color="#CCCCCC"> the</font>

336
00:12:02,960 --> 00:12:07,280
multiple<font color="#CCCCCC"> security context that</font><font color="#E5E5E5"> are out</font>

337
00:12:04,970 --> 00:12:08,600
there<font color="#E5E5E5"> but it's still true</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

338
00:12:07,280 --> 00:12:11,120
mainframe world so people<font color="#CCCCCC"> just don't</font>

339
00:12:08,600 --> 00:12:13,160
<font color="#E5E5E5">care</font><font color="#CCCCCC"> about it</font><font color="#E5E5E5"> or don't care about</font>

340
00:12:11,120 --> 00:12:16,550
securing it so<font color="#CCCCCC"> these attacks</font><font color="#E5E5E5"> work so</font>

341
00:12:13,160 --> 00:12:20,360
<font color="#E5E5E5">that's basically</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> the whole point</font>

342
00:12:16,550 --> 00:12:22,359
<font color="#CCCCCC">behind this small statistics now</font><font color="#E5E5E5"> now</font>

343
00:12:20,360 --> 00:12:24,460
these are two<font color="#E5E5E5"> attacks that you</font><font color="#CCCCCC"> know work</font>

344
00:12:22,360 --> 00:12:27,620
<font color="#CCCCCC">there's another one that basically</font>

345
00:12:24,460 --> 00:12:30,470
<font color="#E5E5E5">showed last year</font><font color="#CCCCCC"> hacking</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Box in</font>

346
00:12:27,620 --> 00:12:33,230
<font color="#CCCCCC">hacking Paris like I'm</font><font color="#E5E5E5"> just gonna like</font>

347
00:12:30,470 --> 00:12:35,060
you know<font color="#E5E5E5"> very briefly describe it but if</font>

348
00:12:33,230 --> 00:12:37,250
you want more information<font color="#CCCCCC"> about it just</font>

349
00:12:35,060 --> 00:12:38,359
go see<font color="#CCCCCC"> the</font><font color="#E5E5E5"> talk because it's it's a bit</font>

350
00:12:37,250 --> 00:12:40,730
heavier<font color="#CCCCCC"> than that</font><font color="#E5E5E5"> but I'm just gonna</font>

351
00:12:38,360 --> 00:12:43,010
<font color="#CCCCCC">graze over it very quickly</font><font color="#E5E5E5"> now if we</font>

352
00:12:40,730 --> 00:12:44,750
come back<font color="#CCCCCC"> to the main welcome and</font>

353
00:12:43,010 --> 00:12:46,310
interface of a mainframe<font color="#E5E5E5"> so we had the</font>

354
00:12:44,750 --> 00:12:47,570
choice between<font color="#E5E5E5"> you know TSO the</font>

355
00:12:46,310 --> 00:12:50,750
<font color="#E5E5E5">command-line interpreter where we can</font>

356
00:12:47,570 --> 00:12:53,240
execute<font color="#E5E5E5"> commands and euro now</font><font color="#CCCCCC"> euro</font><font color="#E5E5E5"> is</font>

357
00:12:50,750 --> 00:12:55,370
just a<font color="#E5E5E5"> business app that's present on</font>

358
00:12:53,240 --> 00:12:56,750
this mainframe so think of it<font color="#E5E5E5"> like when</font>

359
00:12:55,370 --> 00:12:59,000
you go to your bank and your bank<font color="#CCCCCC"> an</font>

360
00:12:56,750 --> 00:13:00,620
operator<font color="#E5E5E5"> like for instance wants to get</font>

361
00:12:59,000 --> 00:13:01,790
customer customer information<font color="#E5E5E5"> about your</font>

362
00:13:00,620 --> 00:13:04,640
<font color="#E5E5E5">account or</font><font color="#CCCCCC"> whatever like that</font>

363
00:13:01,790 --> 00:13:08,150
they may use<font color="#E5E5E5"> in-house developed app</font>

364
00:13:04,640 --> 00:13:09,770
<font color="#E5E5E5">right over</font><font color="#CCCCCC"> 13 and 30 to 70 and it looks</font>

365
00:13:08,150 --> 00:13:12,410
a little bit<font color="#E5E5E5"> like this so</font><font color="#CCCCCC"> if you type in</font>

366
00:13:09,770 --> 00:13:15,110
<font color="#E5E5E5">euro here you get this authentication</font>

367
00:13:12,410 --> 00:13:17,390
form<font color="#E5E5E5"> and like the banking operator</font>

368
00:13:15,110 --> 00:13:19,250
<font color="#CCCCCC">authenticate</font><font color="#E5E5E5"> itself</font><font color="#CCCCCC"> and you know then</font>

369
00:13:17,390 --> 00:13:21,110
they type in like your customer<font color="#CCCCCC"> number</font>

370
00:13:19,250 --> 00:13:22,290
to get information or to<font color="#CCCCCC"> make a wire</font>

371
00:13:21,110 --> 00:13:24,990
transfer<font color="#CCCCCC"> or</font>

372
00:13:22,290 --> 00:13:28,019
you know whatever<font color="#CCCCCC"> but the thing is this</font>

373
00:13:24,990 --> 00:13:30,029
isn't<font color="#E5E5E5"> a web obviously</font><font color="#CCCCCC"> like and what I</font>

374
00:13:28,019 --> 00:13:32,339
found out<font color="#E5E5E5"> is that almost all interactive</font>

375
00:13:30,029 --> 00:13:34,829
applications that run on<font color="#CCCCCC"> a mainframe run</font>

376
00:13:32,339 --> 00:13:38,579
over<font color="#CCCCCC"> t + 30 to 70 that are heavily used</font>

377
00:13:34,829 --> 00:13:40,829
by on the mainframe world they run<font color="#E5E5E5"> over</font>

378
00:13:38,579 --> 00:13:42,269
them<font color="#E5E5E5"> same middleware</font><font color="#CCCCCC"> or most of them run</font>

379
00:13:40,829 --> 00:13:44,339
<font color="#E5E5E5">over the same middleware that's called</font>

380
00:13:42,269 --> 00:13:45,660
<font color="#CCCCCC">Kix customer information control system</font>

381
00:13:44,339 --> 00:13:47,279
now

382
00:13:45,660 --> 00:13:50,009
<font color="#CCCCCC">Kix there are hundreds of</font><font color="#E5E5E5"> books about</font>

383
00:13:47,279 --> 00:13:52,350
<font color="#CCCCCC">Kix</font><font color="#E5E5E5"> even more</font><font color="#CCCCCC"> maybe but I'm</font><font color="#E5E5E5"> just gonna</font>

384
00:13:50,009 --> 00:13:54,389
<font color="#E5E5E5">try to you know summarize it in one</font>

385
00:13:52,350 --> 00:13:56,399
<font color="#E5E5E5">sentence and I hope I'm</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> gonna offend</font>

386
00:13:54,389 --> 00:13:59,100
too many mainframe purists but to me

387
00:13:56,399 --> 00:14:02,610
<font color="#CCCCCC">Kix</font><font color="#E5E5E5"> is really a combination of an Apache</font>

388
00:13:59,100 --> 00:14:04,560
Tomcat<font color="#E5E5E5"> in a CMS like Drupal in the sense</font>

389
00:14:02,610 --> 00:14:07,380
that<font color="#E5E5E5"> a developer will code his app in</font>

390
00:14:04,560 --> 00:14:09,630
COBOL assembly<font color="#E5E5E5"> C or whatever compile</font><font color="#CCCCCC"> it</font>

391
00:14:07,380 --> 00:14:11,730
<font color="#E5E5E5">and then put</font><font color="#CCCCCC"> it on kicks and kicks will</font>

392
00:14:09,630 --> 00:14:13,259
make it<font color="#E5E5E5"> available to everyone and all</font>

393
00:14:11,730 --> 00:14:15,089
the requests<font color="#CCCCCC"> that come in</font><font color="#E5E5E5"> will get</font>

394
00:14:13,259 --> 00:14:18,779
routed to the proper sub application or

395
00:14:15,089 --> 00:14:23,130
sub task kicks will do like the memory

396
00:14:18,779 --> 00:14:26,519
handling task scheduling<font color="#E5E5E5"> caching of</font>

397
00:14:23,130 --> 00:14:29,040
files<font color="#CCCCCC"> handling locks and resources on</font>

398
00:14:26,519 --> 00:14:30,899
disk etc so it's like it's<font color="#E5E5E5"> really it</font>

399
00:14:29,040 --> 00:14:32,939
really<font color="#E5E5E5"> is a middleware except that it</font>

400
00:14:30,899 --> 00:14:35,310
was developed<font color="#E5E5E5"> in 1968 long before the</font>

401
00:14:32,940 --> 00:14:39,269
web pal long before<font color="#E5E5E5"> right before it even</font>

402
00:14:35,310 --> 00:14:41,069
<font color="#CCCCCC">internet so basically and why is it</font>

403
00:14:39,269 --> 00:14:42,510
<font color="#E5E5E5">still used it's just it's</font><font color="#CCCCCC"> just because</font>

404
00:14:41,069 --> 00:14:45,120
it can<font color="#E5E5E5"> handle</font><font color="#CCCCCC"> 20 billion</font><font color="#E5E5E5"> transactions a</font>

405
00:14:42,510 --> 00:14:46,980
day<font color="#CCCCCC"> you know simple as</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it so it's</font>

406
00:14:45,120 --> 00:14:49,829
<font color="#E5E5E5">very powerful but the thing is just like</font>

407
00:14:46,980 --> 00:14:52,500
on<font color="#E5E5E5"> Apache Tomcat</font><font color="#CCCCCC"> where one of the checks</font>

408
00:14:49,829 --> 00:14:55,529
<font color="#E5E5E5">is to find the slash manager slash HTML</font>

409
00:14:52,500 --> 00:14:58,589
to upload the web shell<font color="#E5E5E5"> well the same</font>

410
00:14:55,529 --> 00:15:00,810
<font color="#E5E5E5">thing or the same concept applies to</font>

411
00:14:58,589 --> 00:15:02,819
kicks in the in the idea that in the

412
00:15:00,810 --> 00:15:04,800
sense that the idea<font color="#E5E5E5"> is to find a</font>

413
00:15:02,819 --> 00:15:06,899
combination<font color="#E5E5E5"> of keys there's no you know</font>

414
00:15:04,800 --> 00:15:09,000
notion of<font color="#CCCCCC"> an URL URL so the idea is to</font>

415
00:15:06,899 --> 00:15:10,920
<font color="#CCCCCC">find a combination</font><font color="#E5E5E5"> of keys to press to</font>

416
00:15:09,000 --> 00:15:12,839
exit the app and when we exit the app

417
00:15:10,920 --> 00:15:15,689
that's you know available<font color="#E5E5E5"> kicks asks us</font>

418
00:15:12,839 --> 00:15:17,430
<font color="#E5E5E5">well what do you want to go which which</font>

419
00:15:15,689 --> 00:15:20,430
other app you wanna<font color="#CCCCCC"> launch</font><font color="#E5E5E5"> and there the</font>

420
00:15:17,430 --> 00:15:23,310
<font color="#CCCCCC">idea is to launch an admin app that will</font>

421
00:15:20,430 --> 00:15:25,769
allow<font color="#CCCCCC"> us to you know execute code</font><font color="#E5E5E5"> now</font>

422
00:15:23,310 --> 00:15:27,930
I'm just briefly summarizing what it is

423
00:15:25,769 --> 00:15:31,230
but just<font color="#CCCCCC"> to show you</font><font color="#E5E5E5"> what it looks like</font>

424
00:15:27,930 --> 00:15:34,349
<font color="#CCCCCC">so it's like it's</font><font color="#E5E5E5"> maybe clearer so here</font>

425
00:15:31,230 --> 00:15:36,569
we have<font color="#E5E5E5"> euro we type in</font><font color="#CCCCCC"> euro</font><font color="#E5E5E5"> and here we</font>

426
00:15:34,350 --> 00:15:38,459
have the app so instead of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> fan</font><font color="#E5E5E5"> ticket</font>

427
00:15:36,569 --> 00:15:40,679
we just click on<font color="#CCCCCC"> pf3 on the top right</font>

428
00:15:38,459 --> 00:15:43,258
<font color="#CCCCCC">corner</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we click on pf3 we have a</font>

429
00:15:40,679 --> 00:15:44,939
blank screen<font color="#E5E5E5"> now here basically</font><font color="#CCCCCC"> Kix</font><font color="#E5E5E5"> is</font>

430
00:15:43,259 --> 00:15:46,949
asking us where you<font color="#E5E5E5"> want to go and we</font>

431
00:15:44,939 --> 00:15:48,829
type in the<font color="#E5E5E5"> admin utility and if it's</font>

432
00:15:46,949 --> 00:15:51,748
not<font color="#E5E5E5"> protected we get</font><font color="#CCCCCC"> access to all these</font>

433
00:15:48,829 --> 00:15:53,819
cool functions that may seem obscure but

434
00:15:51,749 --> 00:15:56,009
these one<font color="#E5E5E5"> of these functions lets us</font>

435
00:15:53,819 --> 00:15:57,779
read and write<font color="#E5E5E5"> files and I'm not talking</font>

436
00:15:56,009 --> 00:15:59,009
about configuration<font color="#E5E5E5"> files</font><font color="#CCCCCC"> I'm talking</font>

437
00:15:57,779 --> 00:16:01,229
<font color="#CCCCCC">about</font><font color="#E5E5E5"> business files that contain</font>

438
00:15:59,009 --> 00:16:03,839
customer data that<font color="#E5E5E5"> contain that</font><font color="#CCCCCC"> balance</font>

439
00:16:01,229 --> 00:16:05,519
that contain<font color="#CCCCCC"> all that cool stuff so</font><font color="#E5E5E5"> I</font>

440
00:16:03,839 --> 00:16:07,289
wrote a tool<font color="#E5E5E5"> that will basically take</font>

441
00:16:05,519 --> 00:16:09,569
advantage<font color="#CCCCCC"> of all this stuff and it will</font>

442
00:16:07,289 --> 00:16:11,999
it will automate all these steps<font color="#E5E5E5"> that I</font>

443
00:16:09,569 --> 00:16:13,709
showed<font color="#CCCCCC"> you</font><font color="#E5E5E5"> and some more</font><font color="#CCCCCC"> and like it</font>

444
00:16:11,999 --> 00:16:17,220
will find the right combination<font color="#CCCCCC"> of keys</font>

445
00:16:13,709 --> 00:16:19,949
<font color="#E5E5E5">to exit the app it will upload a reverse</font>

446
00:16:17,220 --> 00:16:21,269
<font color="#E5E5E5">shell like coded in JCL and racks like</font>

447
00:16:19,949 --> 00:16:22,829
<font color="#E5E5E5">some special scripting languages on the</font>

448
00:16:21,269 --> 00:16:24,449
<font color="#E5E5E5">mainframe</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it will give you a reverse</font>

449
00:16:22,829 --> 00:16:27,329
shell<font color="#E5E5E5"> just like</font><font color="#CCCCCC"> you know classic called</font>

450
00:16:24,449 --> 00:16:28,829
reverse shell<font color="#E5E5E5"> and so this is the tool</font>

451
00:16:27,329 --> 00:16:30,089
<font color="#CCCCCC">that I</font><font color="#E5E5E5"> presented earlier it's on my</font>

452
00:16:28,829 --> 00:16:32,128
github if you want I'm just<font color="#CCCCCC"> gonna show</font>

453
00:16:30,089 --> 00:16:35,279
you so this is<font color="#E5E5E5"> remotely like basically</font>

454
00:16:32,129 --> 00:16:36,809
sit in a listener<font color="#E5E5E5"> and then remotely</font>

455
00:16:35,279 --> 00:16:39,449
<font color="#E5E5E5">talking with the mainframe with this</font>

456
00:16:36,809 --> 00:16:41,249
tool that's called<font color="#CCCCCC"> kik spoon and like I</font>

457
00:16:39,449 --> 00:16:43,079
said<font color="#E5E5E5"> it will</font><font color="#CCCCCC"> take care it</font><font color="#E5E5E5"> will alleviate</font>

458
00:16:41,249 --> 00:16:45,720
some or bypass some protections if there

459
00:16:43,079 --> 00:16:47,189
are any so<font color="#E5E5E5"> you know it</font><font color="#CCCCCC"> does all suffer</font>

460
00:16:45,720 --> 00:16:49,649
well let you check it out<font color="#E5E5E5"> later but this</font>

461
00:16:47,189 --> 00:16:51,179
<font color="#CCCCCC">is just</font><font color="#E5E5E5"> to show you an actual case of a</font>

462
00:16:49,649 --> 00:16:53,279
<font color="#CCCCCC">diva's</font><font color="#E5E5E5"> show on a</font><font color="#CCCCCC"> mainframe that</font><font color="#E5E5E5"> hey it's</font>

463
00:16:51,179 --> 00:16:55,319
possible so you can see here it did all

464
00:16:53,279 --> 00:16:57,869
that's all<font color="#CCCCCC"> it's magic</font><font color="#E5E5E5"> and then here we</font>

465
00:16:55,319 --> 00:16:59,699
have<font color="#E5E5E5"> a TSO shell prompt that basically</font>

466
00:16:57,869 --> 00:17:01,649
lists user we<font color="#CCCCCC"> can type in commands and</font>

467
00:16:59,699 --> 00:17:05,928
that's that<font color="#E5E5E5"> list files and all that</font>

468
00:17:01,649 --> 00:17:09,388
stuff<font color="#CCCCCC"> so all</font><font color="#E5E5E5"> this all these like small</font>

469
00:17:05,929 --> 00:17:11,009
<font color="#E5E5E5">tips are</font><font color="#CCCCCC"> just ways current ways of</font>

470
00:17:09,388 --> 00:17:12,779
<font color="#E5E5E5">executing code in a mainframe</font><font color="#CCCCCC"> but there</font>

471
00:17:11,009 --> 00:17:15,289
are many more like<font color="#CCCCCC"> you can execute go</font>

472
00:17:12,779 --> 00:17:18,809
<font color="#E5E5E5">through FTP</font><font color="#CCCCCC"> it's a feature</font><font color="#E5E5E5"> not a phone</font>

473
00:17:15,289 --> 00:17:20,699
<font color="#CCCCCC">you have</font><font color="#E5E5E5"> network job entry but yeah</font>

474
00:17:18,809 --> 00:17:22,918
there's buffer overflows on a mainframe

475
00:17:20,699 --> 00:17:25,019
just that there's<font color="#E5E5E5"> there there are buffer</font>

476
00:17:22,919 --> 00:17:26,339
overflows on<font color="#E5E5E5"> a</font><font color="#CCCCCC"> mainframe and like people</font>

477
00:17:25,019 --> 00:17:28,019
still<font color="#E5E5E5"> think this machine is unhackable</font>

478
00:17:26,339 --> 00:17:30,090
<font color="#CCCCCC">it's just like any</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> machine that</font>

479
00:17:28,019 --> 00:17:31,950
that is one of<font color="#CCCCCC"> the key messages of this</font>

480
00:17:30,090 --> 00:17:35,250
presentation and we<font color="#E5E5E5"> should care</font><font color="#CCCCCC"> about it</font>

481
00:17:31,950 --> 00:17:36,450
<font color="#E5E5E5">because if you know Windows goes down</font>

482
00:17:35,250 --> 00:17:38,580
nobody cares about it if a mainframe

483
00:17:36,450 --> 00:17:40,289
goes down citizens are impacted<font color="#E5E5E5"> so it's</font>

484
00:17:38,580 --> 00:17:42,240
that critical<font color="#CCCCCC"> and like you check out</font>

485
00:17:40,289 --> 00:17:43,799
these awesome<font color="#CCCCCC"> guys talks they they've</font>

486
00:17:42,240 --> 00:17:46,980
developed<font color="#E5E5E5"> tools and they represented a</font>

487
00:17:43,799 --> 00:17:48,530
lot<font color="#E5E5E5"> they've contributed a lot to the</font>

488
00:17:46,980 --> 00:17:51,170
security well

489
00:17:48,530 --> 00:17:53,810
<font color="#CCCCCC">two</font><font color="#E5E5E5"> skewers your mainframe so check it</font>

490
00:17:51,170 --> 00:17:55,520
out<font color="#CCCCCC"> anyway so now that we are</font>

491
00:17:53,810 --> 00:17:58,060
comfortable<font color="#E5E5E5"> with the hypothesis of</font>

492
00:17:55,520 --> 00:18:00,440
having a shell<font color="#E5E5E5"> on</font><font color="#CCCCCC"> a mainframe I hope</font>

493
00:17:58,060 --> 00:18:02,590
<font color="#E5E5E5">what can we do once we are</font><font color="#CCCCCC"> on the</font>

494
00:18:00,440 --> 00:18:05,240
<font color="#CCCCCC">machine like we are a standard</font><font color="#E5E5E5"> user</font>

495
00:18:02,590 --> 00:18:07,129
what's blocking us from<font color="#E5E5E5"> going route and</font>

496
00:18:05,240 --> 00:18:09,380
doing whatever we want what does<font color="#E5E5E5"> it even</font>

497
00:18:07,130 --> 00:18:11,840
mean<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> route on a mainframe now I'm</font>

498
00:18:09,380 --> 00:18:13,640
only<font color="#E5E5E5"> gonna talk on z/os</font><font color="#CCCCCC"> about z/os which</font>

499
00:18:11,840 --> 00:18:17,810
is the most common<font color="#E5E5E5"> operating system on a</font>

500
00:18:13,640 --> 00:18:21,530
mainframe<font color="#E5E5E5"> and so once you have a shell</font>

501
00:18:17,810 --> 00:18:23,690
<font color="#CCCCCC">on</font><font color="#E5E5E5"> IBM</font><font color="#CCCCCC"> Z mainframe hosting z/os the main</font>

502
00:18:21,530 --> 00:18:25,129
hurdle like between<font color="#CCCCCC"> you and accessing</font>

503
00:18:23,690 --> 00:18:27,620
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> like the main obstacle is</font>

504
00:18:25,130 --> 00:18:29,630
called<font color="#E5E5E5"> most of the time rack F now rack</font>

505
00:18:27,620 --> 00:18:31,820
every resource<font color="#CCCCCC"> artists control facility</font>

506
00:18:29,630 --> 00:18:33,980
is a product one<font color="#CCCCCC"> of three that you may</font>

507
00:18:31,820 --> 00:18:36,379
find<font color="#E5E5E5"> on a mainframe</font><font color="#CCCCCC"> think of</font><font color="#E5E5E5"> it like Pam</font>

508
00:18:33,980 --> 00:18:38,570
<font color="#CCCCCC">right it</font><font color="#E5E5E5"> doesn't on occasion but it also</font>

509
00:18:36,380 --> 00:18:40,910
does<font color="#E5E5E5"> access control and it's mandatory</font>

510
00:18:38,570 --> 00:18:43,550
<font color="#E5E5E5">access control</font><font color="#CCCCCC"> so think of it like a</font><font color="#E5E5E5"> big</font>

511
00:18:40,910 --> 00:18:45,950
giant firewall table that says this user

512
00:18:43,550 --> 00:18:47,930
can<font color="#CCCCCC"> access this resource this</font><font color="#E5E5E5"> particular</font>

513
00:18:45,950 --> 00:18:50,540
time of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> with this type of access</font>

514
00:18:47,930 --> 00:18:52,670
<font color="#CCCCCC">we'd</font><font color="#E5E5E5"> write update whatever from this</font>

515
00:18:50,540 --> 00:18:53,780
<font color="#E5E5E5">terminal and so on a firewall you would</font>

516
00:18:52,670 --> 00:18:58,190
have<font color="#CCCCCC"> 1,000 rules</font>

517
00:18:53,780 --> 00:19:00,320
<font color="#CCCCCC">raka</font><font color="#E5E5E5"> 5060 thousand worlds easily so it's</font>

518
00:18:58,190 --> 00:19:04,100
it's mandatory<font color="#CCCCCC"> access control yeah and</font>

519
00:19:00,320 --> 00:19:05,600
just one small digression<font color="#CCCCCC"> for</font><font color="#E5E5E5"> people</font>

520
00:19:04,100 --> 00:19:08,209
<font color="#E5E5E5">that</font><font color="#CCCCCC"> think that</font><font color="#E5E5E5"> a mainframe is secured</font>

521
00:19:05,600 --> 00:19:10,730
by default or<font color="#CCCCCC"> by design</font><font color="#E5E5E5"> no such thing</font>

522
00:19:08,210 --> 00:19:12,530
<font color="#E5E5E5">and when you get a mainframe when you</font>

523
00:19:10,730 --> 00:19:15,710
get it<font color="#E5E5E5"> from the shop rack</font><font color="#CCCCCC"> F is not</font>

524
00:19:12,530 --> 00:19:17,570
<font color="#E5E5E5">activated so let me just you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> let</font>

525
00:19:15,710 --> 00:19:20,180
that sink in you do<font color="#CCCCCC"> not</font><font color="#E5E5E5"> have access</font>

526
00:19:17,570 --> 00:19:22,040
control<font color="#E5E5E5"> enforced when you get your</font>

527
00:19:20,180 --> 00:19:24,050
mainframe set up<font color="#E5E5E5"> in fact one of the</font>

528
00:19:22,040 --> 00:19:27,230
checks<font color="#E5E5E5"> and any auditing guide is to</font>

529
00:19:24,050 --> 00:19:29,870
<font color="#CCCCCC">actually verify</font><font color="#E5E5E5"> that rock F is properly</font>

530
00:19:27,230 --> 00:19:32,750
enforced in control<font color="#E5E5E5"> you know it in fail</font>

531
00:19:29,870 --> 00:19:33,919
mode so in like by default<font color="#CCCCCC"> if you access</font>

532
00:19:32,750 --> 00:19:35,780
<font color="#E5E5E5">something</font><font color="#CCCCCC"> rocket</font><font color="#E5E5E5"> will tell you it will</font>

533
00:19:33,920 --> 00:19:38,240
<font color="#CCCCCC">raise the security notice but</font><font color="#E5E5E5"> it will</font>

534
00:19:35,780 --> 00:19:39,410
<font color="#E5E5E5">let you access that resource so</font><font color="#CCCCCC"> just one</font>

535
00:19:38,240 --> 00:19:41,600
<font color="#E5E5E5">of the checks is to activate this</font>

536
00:19:39,410 --> 00:19:43,340
protection<font color="#E5E5E5"> so think</font><font color="#CCCCCC"> about it</font><font color="#E5E5E5"> next time</font>

537
00:19:41,600 --> 00:19:45,230
somebody<font color="#CCCCCC"> says oh yeah</font><font color="#E5E5E5"> remain frame is</font>

538
00:19:43,340 --> 00:19:47,240
locked down<font color="#E5E5E5"> like IBM did a good job and</font>

539
00:19:45,230 --> 00:19:49,490
<font color="#E5E5E5">they</font><font color="#CCCCCC"> did a good job</font><font color="#E5E5E5"> this is a highly</font>

540
00:19:47,240 --> 00:19:51,320
customizable machine<font color="#E5E5E5"> you cannot expect</font>

541
00:19:49,490 --> 00:19:52,910
it to be secured by default it's not a

542
00:19:51,320 --> 00:19:54,800
<font color="#CCCCCC">freaking iPhone it's you know it's a</font>

543
00:19:52,910 --> 00:19:56,210
machine<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you need to tune and not</font>

544
00:19:54,800 --> 00:19:59,240
only tune performance wise but<font color="#E5E5E5"> also</font>

545
00:19:56,210 --> 00:20:01,750
<font color="#E5E5E5">security wise</font><font color="#CCCCCC"> so that's small digression</font>

546
00:19:59,240 --> 00:20:04,330
right there<font color="#E5E5E5"> so anyway on rack F</font>

547
00:20:01,750 --> 00:20:05,890
<font color="#E5E5E5">you have you know standard users and the</font>

548
00:20:04,330 --> 00:20:07,419
equivalent<font color="#E5E5E5"> of</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> I would</font><font color="#CCCCCC"> say on a</font>

549
00:20:05,890 --> 00:20:08,950
mainframe would be special

550
00:20:07,420 --> 00:20:11,230
now special does not mean that<font color="#E5E5E5"> you can</font>

551
00:20:08,950 --> 00:20:12,880
access<font color="#E5E5E5"> anything it means you can give</font>

552
00:20:11,230 --> 00:20:15,310
yourself<font color="#E5E5E5"> access to average or anything</font>

553
00:20:12,880 --> 00:20:18,370
<font color="#CCCCCC">so again</font><font color="#E5E5E5"> mandatory access control you</font>

554
00:20:15,310 --> 00:20:20,320
need to write a rule that says<font color="#E5E5E5"> hey I can</font>

555
00:20:18,370 --> 00:20:21,310
access<font color="#E5E5E5"> that resource</font><font color="#CCCCCC"> even in your spec</font>

556
00:20:20,320 --> 00:20:22,870
when<font color="#E5E5E5"> you're special</font>

557
00:20:21,310 --> 00:20:25,360
<font color="#E5E5E5">there's another attribute</font><font color="#CCCCCC"> that's called</font>

558
00:20:22,870 --> 00:20:27,639
operations which<font color="#E5E5E5"> means you can access</font>

559
00:20:25,360 --> 00:20:30,120
<font color="#CCCCCC">any resource</font><font color="#E5E5E5"> unless there is a rule</font><font color="#CCCCCC"> in</font>

560
00:20:27,640 --> 00:20:32,680
racket<font color="#CCCCCC"> that says hey</font><font color="#E5E5E5"> you cannot do</font><font color="#CCCCCC"> that</font>

561
00:20:30,120 --> 00:20:34,330
<font color="#E5E5E5">so it's still very interesting one and</font>

562
00:20:32,680 --> 00:20:36,040
all<font color="#CCCCCC"> that remains you can manage some</font>

563
00:20:34,330 --> 00:20:37,360
auditing classes and do some fun<font color="#CCCCCC"> stuff</font>

564
00:20:36,040 --> 00:20:39,700
with<font color="#E5E5E5"> log in classes we're not gonna</font>

565
00:20:37,360 --> 00:20:41,979
really care about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> that much</font><font color="#E5E5E5"> anyway</font>

566
00:20:39,700 --> 00:20:44,200
<font color="#E5E5E5">so when you type in the list so if you</font>

567
00:20:41,980 --> 00:20:46,690
go back to<font color="#CCCCCC"> our TSO command prompt if you</font>

568
00:20:44,200 --> 00:20:49,270
<font color="#E5E5E5">type in the list user command you will</font>

569
00:20:46,690 --> 00:20:52,300
basically see your attributes so list

570
00:20:49,270 --> 00:20:53,980
user or<font color="#CCCCCC"> Lu</font><font color="#E5E5E5"> like which I before you get</font>

571
00:20:52,300 --> 00:20:56,139
to see your<font color="#E5E5E5"> attributes so in this case</font>

572
00:20:53,980 --> 00:20:57,760
we're special<font color="#E5E5E5"> you can see here we're</font>

573
00:20:56,140 --> 00:21:00,400
special<font color="#E5E5E5"> with operations and even with</font>

574
00:20:57,760 --> 00:21:03,520
auditors<font color="#E5E5E5"> but</font><font color="#CCCCCC"> what if we have zero</font>

575
00:21:00,400 --> 00:21:06,490
privileges how can we become<font color="#CCCCCC"> root</font><font color="#E5E5E5"> right</font>

576
00:21:03,520 --> 00:21:08,800
<font color="#E5E5E5">and that's where we will place the</font><font color="#CCCCCC"> play</font>

577
00:21:06,490 --> 00:21:10,930
with with you know z/os in journals<font color="#E5E5E5"> and</font>

578
00:21:08,800 --> 00:21:14,950
play with<font color="#CCCCCC"> some memory and do some cool</font>

579
00:21:10,930 --> 00:21:16,120
<font color="#CCCCCC">stuff</font><font color="#E5E5E5"> now just before we</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> on because</font>

580
00:21:14,950 --> 00:21:19,180
<font color="#E5E5E5">we're gonna talk a little bit about</font>

581
00:21:16,120 --> 00:21:20,649
assembling some low-level<font color="#E5E5E5"> stuff I</font><font color="#CCCCCC"> just</font>

582
00:21:19,180 --> 00:21:23,800
want to stress out that<font color="#CCCCCC"> z/architecture</font>

583
00:21:20,650 --> 00:21:26,440
<font color="#CCCCCC">is it has nothing to do</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> intel ok</font>

584
00:21:23,800 --> 00:21:28,780
it's properly<font color="#E5E5E5"> to</font><font color="#CCCCCC"> resi pu</font><font color="#E5E5E5"> it has its own</font>

585
00:21:26,440 --> 00:21:31,570
instructions like over<font color="#E5E5E5"> 1100 instructions</font>

586
00:21:28,780 --> 00:21:34,210
so it's it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> RM it's not x86</font><font color="#E5E5E5"> it's</font>

587
00:21:31,570 --> 00:21:36,159
you know it's another<font color="#CCCCCC"> cpu basically so</font>

588
00:21:34,210 --> 00:21:37,390
you<font color="#E5E5E5"> have many variants each instruction</font>

589
00:21:36,160 --> 00:21:39,520
<font color="#E5E5E5">has many variants memory</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> memory</font>

590
00:21:37,390 --> 00:21:42,520
register to register<font color="#CCCCCC"> registry media</font>

591
00:21:39,520 --> 00:21:45,010
<font color="#E5E5E5">whatever on x86 we have a</font>

592
00:21:42,520 --> 00:21:48,970
<font color="#CCCCCC">general-purpose</font><font color="#E5E5E5"> registers</font><font color="#CCCCCC"> on Xeon Z we</font>

593
00:21:45,010 --> 00:21:51,100
<font color="#CCCCCC">have</font><font color="#E5E5E5"> 16 general-purpose registers</font><font color="#CCCCCC"> but</font>

594
00:21:48,970 --> 00:21:52,720
the main one<font color="#E5E5E5"> plus you know plus dozens</font>

595
00:21:51,100 --> 00:21:54,129
<font color="#E5E5E5">others control registers access</font>

596
00:21:52,720 --> 00:21:55,420
registers floating registers but<font color="#E5E5E5"> the</font>

597
00:21:54,130 --> 00:21:57,970
main one that<font color="#E5E5E5"> we're going to focus on is</font>

598
00:21:55,420 --> 00:22:00,970
called<font color="#E5E5E5"> the PSW register now the PSW</font>

599
00:21:57,970 --> 00:22:03,250
register is like the EIP register on x86

600
00:22:00,970 --> 00:22:04,690
<font color="#CCCCCC">it holds the instruction that the</font>

601
00:22:03,250 --> 00:22:06,850
address of the next<font color="#E5E5E5"> instruction to be</font>

602
00:22:04,690 --> 00:22:09,100
<font color="#CCCCCC">executed but</font><font color="#E5E5E5"> it also</font><font color="#CCCCCC"> holds</font><font color="#E5E5E5"> some other</font>

603
00:22:06,850 --> 00:22:11,110
important control<font color="#CCCCCC"> flags like like this</font>

604
00:22:09,100 --> 00:22:13,360
<font color="#E5E5E5">is the register</font><font color="#CCCCCC"> that will say for</font><font color="#E5E5E5"> in</font>

605
00:22:11,110 --> 00:22:14,800
user<font color="#E5E5E5"> mode or kernel mode let's say for</font>

606
00:22:13,360 --> 00:22:15,429
<font color="#CCCCCC">instance so we're gonna focus on it a</font>

607
00:22:14,800 --> 00:22:18,820
<font color="#E5E5E5">little bit</font>

608
00:22:15,430 --> 00:22:23,680
we inspect<font color="#E5E5E5"> one we know debug our</font>

609
00:22:18,820 --> 00:22:25,240
programs<font color="#CCCCCC"> etc so z/os like any modern</font>

610
00:22:23,680 --> 00:22:28,000
operating<font color="#E5E5E5"> system and I stress the word</font>

611
00:22:25,240 --> 00:22:29,920
<font color="#CCCCCC">modern uses</font><font color="#E5E5E5"> data structures or keeps</font>

612
00:22:28,000 --> 00:22:31,900
their structures in memory<font color="#E5E5E5"> to describe</font>

613
00:22:29,920 --> 00:22:33,700
the current<font color="#E5E5E5"> state</font><font color="#CCCCCC"> of the operating</font>

614
00:22:31,900 --> 00:22:35,890
systems on<font color="#E5E5E5"> Windows you</font><font color="#CCCCCC"> have a process</font>

615
00:22:33,700 --> 00:22:37,450
<font color="#E5E5E5">structures that you know describe the</font>

616
00:22:35,890 --> 00:22:40,180
<font color="#E5E5E5">process that are running they're kept in</font>

617
00:22:37,450 --> 00:22:42,970
<font color="#E5E5E5">a</font><font color="#CCCCCC"> doubly-linked list</font><font color="#E5E5E5"> etc</font><font color="#CCCCCC"> all that</font><font color="#E5E5E5"> stuff</font>

618
00:22:40,180 --> 00:22:45,010
same thing<font color="#E5E5E5"> on the US except that these</font>

619
00:22:42,970 --> 00:22:45,690
data<font color="#E5E5E5"> structures they're called control</font>

620
00:22:45,010 --> 00:22:48,160
blocks

621
00:22:45,690 --> 00:22:49,840
so these think of it<font color="#CCCCCC"> just like in a</font>

622
00:22:48,160 --> 00:22:51,190
bunch of data with bunch of pointers

623
00:22:49,840 --> 00:22:53,560
that describe the<font color="#CCCCCC"> current state of the</font>

624
00:22:51,190 --> 00:22:57,100
program<font color="#CCCCCC"> so tasks user running</font><font color="#E5E5E5"> etc etc</font>

625
00:22:53,560 --> 00:22:59,710
etcetera and rocof initializes it

626
00:22:57,100 --> 00:23:02,590
initializes<font color="#E5E5E5"> one of these control blocks</font>

627
00:22:59,710 --> 00:23:05,200
that's called the AC<font color="#CCCCCC"> EE</font><font color="#E5E5E5"> access accessor</font>

628
00:23:02,590 --> 00:23:09,730
environment<font color="#E5E5E5"> accessor control environment</font>

629
00:23:05,200 --> 00:23:11,560
element<font color="#CCCCCC"> and basically what a accessor</font>

630
00:23:09,730 --> 00:23:14,320
<font color="#E5E5E5">element environment</font><font color="#CCCCCC"> oh my god I'm</font><font color="#E5E5E5"> gonna</font>

631
00:23:11,560 --> 00:23:17,169
make<font color="#E5E5E5"> it no I'll give it give it I give</font>

632
00:23:14,320 --> 00:23:19,200
in anyway<font color="#CCCCCC"> check</font><font color="#E5E5E5"> it out these acronyms</font>

633
00:23:17,170 --> 00:23:21,400
are<font color="#CCCCCC"> impossible so racket basically</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a</font>

634
00:23:19,200 --> 00:23:24,730
<font color="#CCCCCC">initializes the</font><font color="#E5E5E5"> AC control</font><font color="#CCCCCC"> block and it</font>

635
00:23:21,400 --> 00:23:26,230
stores the user ID the<font color="#E5E5E5"> group and the</font>

636
00:23:24,730 --> 00:23:27,400
privileges of<font color="#CCCCCC"> the current user</font><font color="#E5E5E5"> like</font>

637
00:23:26,230 --> 00:23:28,870
think<font color="#CCCCCC"> of</font><font color="#E5E5E5"> it as the choke in the</font>

638
00:23:27,400 --> 00:23:31,570
scripture or the security<font color="#CCCCCC"> token the</font>

639
00:23:28,870 --> 00:23:33,580
scripture on<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> so this control</font>

640
00:23:31,570 --> 00:23:35,290
block holds the current privileges of

641
00:23:33,580 --> 00:23:36,790
the user<font color="#E5E5E5"> and we need when you type in</font>

642
00:23:35,290 --> 00:23:39,010
<font color="#CCCCCC">list</font><font color="#E5E5E5"> user or</font><font color="#CCCCCC"> if you want</font><font color="#E5E5E5"> to check in</font>

643
00:23:36,790 --> 00:23:41,440
like you go through memory and find<font color="#E5E5E5"> this</font>

644
00:23:39,010 --> 00:23:43,330
control block<font color="#E5E5E5"> you always want to start a</font>

645
00:23:41,440 --> 00:23:44,860
virtual address space<font color="#E5E5E5"> 0 if you want</font><font color="#CCCCCC"> to</font>

646
00:23:43,330 --> 00:23:46,780
find actually any control block in

647
00:23:44,860 --> 00:23:49,090
memory<font color="#E5E5E5"> you start at virtual address</font>

648
00:23:46,780 --> 00:23:52,840
space<font color="#E5E5E5"> 0 that's where you find basically</font>

649
00:23:49,090 --> 00:23:55,419
the PSA or<font color="#E5E5E5"> the the prefix safe area like</font>

650
00:23:52,840 --> 00:23:57,070
the the<font color="#CCCCCC"> Genesis control block I'm gonna</font>

651
00:23:55,420 --> 00:23:58,720
call it but<font color="#E5E5E5"> just like you know the main</font>

652
00:23:57,070 --> 00:24:00,399
one<font color="#CCCCCC"> Rev</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> references</font><font color="#E5E5E5"> all the other</font>

653
00:23:58,720 --> 00:24:01,780
major control blocks and you can see

654
00:24:00,400 --> 00:24:04,120
here it's just a<font color="#E5E5E5"> matter of walking from</font>

655
00:24:01,780 --> 00:24:06,670
one pointer to another<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can do it</font>

656
00:24:04,120 --> 00:24:09,790
<font color="#E5E5E5">an assembly and</font><font color="#CCCCCC"> C or</font><font color="#E5E5E5"> whatever and see</font>

657
00:24:06,670 --> 00:24:11,440
basically<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just go to offset 548 we</font>

658
00:24:09,790 --> 00:24:13,030
found a pointer to the control block

659
00:24:11,440 --> 00:24:16,600
<font color="#E5E5E5">that describes our current virtual</font>

660
00:24:13,030 --> 00:24:18,190
<font color="#E5E5E5">address space after</font><font color="#CCCCCC"> 100 in H we find an</font>

661
00:24:16,600 --> 00:24:21,370
extended pointer an extended control

662
00:24:18,190 --> 00:24:23,380
<font color="#E5E5E5">block and after 200 we go and we</font>

663
00:24:21,370 --> 00:24:26,409
actually<font color="#E5E5E5"> find a</font><font color="#CCCCCC"> point which was the AC</font>

664
00:24:23,380 --> 00:24:28,860
now all these offsets<font color="#E5E5E5"> or most of them I</font>

665
00:24:26,410 --> 00:24:33,090
would say<font color="#CCCCCC"> are documented in</font><font color="#E5E5E5"> M</font>

666
00:24:28,860 --> 00:24:34,709
<font color="#CCCCCC">data areas so PDF files</font><font color="#E5E5E5"> like there are</font>

667
00:24:33,090 --> 00:24:37,199
four or five<font color="#CCCCCC"> that are released</font><font color="#E5E5E5"> by IBM</font>

668
00:24:34,710 --> 00:24:40,049
each<font color="#E5E5E5"> for five thousand pages long</font><font color="#CCCCCC"> but</font>

669
00:24:37,200 --> 00:24:41,309
you find all this stuff<font color="#CCCCCC"> inside</font><font color="#E5E5E5"> so you</font>

670
00:24:40,049 --> 00:24:43,769
can<font color="#CCCCCC"> have at it I'm just gonna</font><font color="#E5E5E5"> leave</font><font color="#CCCCCC"> it</font>

671
00:24:41,309 --> 00:24:45,269
there<font color="#CCCCCC"> you know for future reference if</font>

672
00:24:43,769 --> 00:24:47,940
you<font color="#E5E5E5"> want to do the same thing and you</font>

673
00:24:45,269 --> 00:24:49,789
<font color="#CCCCCC">know</font><font color="#E5E5E5"> but basically it's</font><font color="#CCCCCC"> just walking</font>

674
00:24:47,940 --> 00:24:53,460
from one pointer to<font color="#E5E5E5"> the to another right</font>

675
00:24:49,789 --> 00:24:55,980
so upset<font color="#CCCCCC"> 38 in this</font><font color="#E5E5E5"> structure in memory</font>

676
00:24:53,460 --> 00:24:57,659
<font color="#E5E5E5">we have you know the user</font><font color="#CCCCCC"> flags so you</font>

677
00:24:55,980 --> 00:24:59,460
can see here the you know this bit

678
00:24:57,659 --> 00:25:01,799
<font color="#CCCCCC">controls it for</font><font color="#E5E5E5"> special operations or</font>

679
00:24:59,460 --> 00:25:04,200
auditor<font color="#E5E5E5"> so the idea naively I'm gonna</font>

680
00:25:01,799 --> 00:25:05,809
say one that is<font color="#E5E5E5"> not familiar with the</font>

681
00:25:04,200 --> 00:25:08,279
platform in the protections in place

682
00:25:05,809 --> 00:25:10,289
what like one of the possible vectors<font color="#CCCCCC"> of</font>

683
00:25:08,279 --> 00:25:13,529
attack is<font color="#CCCCCC"> to well write a code that will</font>

684
00:25:10,289 --> 00:25:16,220
<font color="#E5E5E5">find this control block and update</font>

685
00:25:13,529 --> 00:25:19,260
despite<font color="#CCCCCC"> like and yeah like I said</font><font color="#E5E5E5"> it's</font>

686
00:25:16,220 --> 00:25:20,760
naively<font color="#E5E5E5"> we are very naive we just want</font>

687
00:25:19,260 --> 00:25:21,929
to write on this program<font color="#E5E5E5"> and assembly</font>

688
00:25:20,760 --> 00:25:23,519
that just finds the structure<font color="#E5E5E5"> and patch</font>

689
00:25:21,929 --> 00:25:25,590
it in memory<font color="#E5E5E5"> and boom see if we can</font>

690
00:25:23,519 --> 00:25:27,179
become<font color="#CCCCCC"> root or special so that's the</font>

691
00:25:25,590 --> 00:25:28,949
first step of<font color="#E5E5E5"> the attack right but if</font>

692
00:25:27,179 --> 00:25:30,480
you go<font color="#E5E5E5"> ahead and do</font><font color="#CCCCCC"> that you will</font><font color="#E5E5E5"> get</font>

693
00:25:28,950 --> 00:25:33,809
this beautiful<font color="#E5E5E5"> error that says hey you</font>

694
00:25:30,480 --> 00:25:35,370
<font color="#E5E5E5">can't obviously so</font><font color="#CCCCCC"> there happened at</font><font color="#E5E5E5"> 0 C</font>

695
00:25:33,809 --> 00:25:37,230
<font color="#CCCCCC">for</font><font color="#E5E5E5"> which just means</font><font color="#CCCCCC"> that you know we</font>

696
00:25:35,370 --> 00:25:40,350
<font color="#E5E5E5">have a memory exception that</font><font color="#CCCCCC"> occurred</font>

697
00:25:37,230 --> 00:25:42,899
<font color="#CCCCCC">now what happened was</font><font color="#E5E5E5"> that on z/os or on</font>

698
00:25:40,350 --> 00:25:45,779
<font color="#E5E5E5">Z sorry</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> protection that you do</font>

699
00:25:42,899 --> 00:25:49,080
not<font color="#E5E5E5"> have on x86 but basically each page</font>

700
00:25:45,779 --> 00:25:52,679
frame is allocated<font color="#E5E5E5"> a protection key</font><font color="#CCCCCC"> 5</font>

701
00:25:49,080 --> 00:25:55,019
bit that is composed<font color="#E5E5E5"> of a storage bit on</font>

702
00:25:52,679 --> 00:25:59,039
<font color="#CCCCCC">four bits and a fetch protection bit so</font>

703
00:25:55,019 --> 00:26:02,070
each<font color="#CCCCCC"> 4k of memory has this protection</font>

704
00:25:59,039 --> 00:26:03,539
right<font color="#E5E5E5"> and let's just focus on the</font>

705
00:26:02,070 --> 00:26:05,158
storage key that's<font color="#E5E5E5"> the main key that's</font>

706
00:26:03,539 --> 00:26:07,110
the<font color="#E5E5E5"> main important piece of information</font>

707
00:26:05,159 --> 00:26:10,019
<font color="#CCCCCC">so there</font><font color="#E5E5E5"> are 16</font><font color="#CCCCCC"> possible values</font>

708
00:26:07,110 --> 00:26:12,870
obviously<font color="#E5E5E5"> so if a patch</font><font color="#CCCCCC"> of memory has</font><font color="#E5E5E5"> a</font>

709
00:26:10,019 --> 00:26:14,730
storage<font color="#E5E5E5"> key between 0</font><font color="#CCCCCC"> and 7</font><font color="#E5E5E5"> it means</font>

710
00:26:12,870 --> 00:26:17,939
that patch<font color="#E5E5E5"> of memory is allocated by</font>

711
00:26:14,730 --> 00:26:20,250
system services<font color="#E5E5E5"> if that patch of memory</font>

712
00:26:17,940 --> 00:26:23,279
has an storage key of<font color="#E5E5E5"> H it means it has</font>

713
00:26:20,250 --> 00:26:24,990
been<font color="#E5E5E5"> allocated by users</font><font color="#CCCCCC"> if that's page</font>

714
00:26:23,279 --> 00:26:28,620
frame has<font color="#CCCCCC"> the storage key</font><font color="#E5E5E5"> between 9 and</font>

715
00:26:24,990 --> 00:26:30,360
15<font color="#E5E5E5"> it means that patch of memory is real</font>

716
00:26:28,620 --> 00:26:31,830
memory there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> no translation</font>

717
00:26:30,360 --> 00:26:33,330
you<font color="#E5E5E5"> know virtual address space</font>

718
00:26:31,830 --> 00:26:34,649
translation<font color="#CCCCCC"> none</font><font color="#E5E5E5"> of that it's real</font>

719
00:26:33,330 --> 00:26:35,939
memory you're dealing with so you have

720
00:26:34,649 --> 00:26:38,370
other problems<font color="#CCCCCC"> like process isolation</font>

721
00:26:35,940 --> 00:26:40,320
<font color="#E5E5E5">and all that kind of</font><font color="#CCCCCC"> stuff so anyway</font>

722
00:26:38,370 --> 00:26:41,870
when a program accesses a patch of

723
00:26:40,320 --> 00:26:44,120
<font color="#E5E5E5">memory</font>

724
00:26:41,870 --> 00:26:47,479
the current<font color="#E5E5E5"> storage key in the PSW</font>

725
00:26:44,120 --> 00:26:49,969
register gets compared with the<font color="#E5E5E5"> storage</font>

726
00:26:47,480 --> 00:26:52,820
key<font color="#E5E5E5"> in memory</font><font color="#CCCCCC"> if they match we have full</font>

727
00:26:49,970 --> 00:26:54,470
access<font color="#CCCCCC"> if they don't match then we get</font>

728
00:26:52,820 --> 00:26:56,450
denied or we only<font color="#E5E5E5"> get read access</font>

729
00:26:54,470 --> 00:26:59,659
<font color="#CCCCCC">depending on this</font><font color="#E5E5E5"> fetch protection bit</font>

730
00:26:56,450 --> 00:27:01,039
<font color="#E5E5E5">so if we go</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> the error of our you</font>

731
00:26:59,659 --> 00:27:02,600
<font color="#E5E5E5">know simple program that</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> running you</font>

732
00:27:01,039 --> 00:27:05,299
can see that the<font color="#E5E5E5"> PSW at the time of the</font>

733
00:27:02,600 --> 00:27:08,299
error the storage key was<font color="#CCCCCC"> 8 you can see</font>

734
00:27:05,299 --> 00:27:10,940
here and that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that with the the AC</font>

735
00:27:08,299 --> 00:27:13,370
<font color="#E5E5E5">e the control block is most probably in</font>

736
00:27:10,940 --> 00:27:16,130
a space that<font color="#CCCCCC"> will have</font><font color="#E5E5E5"> the storage key</font>

737
00:27:13,370 --> 00:27:18,860
<font color="#E5E5E5">different than H actually</font><font color="#CCCCCC"> it's a storage</font>

738
00:27:16,130 --> 00:27:21,679
key of<font color="#CCCCCC"> 0 so here I just</font><font color="#E5E5E5"> mapped all the</font>

739
00:27:18,860 --> 00:27:23,479
possible outcomes<font color="#CCCCCC"> so if the</font><font color="#E5E5E5"> PSW key you</font>

740
00:27:21,679 --> 00:27:26,840
have<font color="#CCCCCC"> a 0 you can access</font><font color="#E5E5E5"> anything in</font>

741
00:27:23,480 --> 00:27:29,149
<font color="#E5E5E5">memory so full read/write if it's not 0</font>

742
00:27:26,840 --> 00:27:31,010
and<font color="#E5E5E5"> the storage</font><font color="#CCCCCC"> keys match</font><font color="#E5E5E5"> yeah full</font>

743
00:27:29,149 --> 00:27:33,199
access<font color="#E5E5E5"> if they don't match but the fetch</font>

744
00:27:31,010 --> 00:27:34,970
protection bill is on<font color="#E5E5E5"> it's none no</font>

745
00:27:33,200 --> 00:27:36,649
access<font color="#CCCCCC"> if the fetch protection bit is</font>

746
00:27:34,970 --> 00:27:39,500
off you<font color="#E5E5E5"> only have read access so the AC</font>

747
00:27:36,649 --> 00:27:41,418
e<font color="#CCCCCC"> falls in this</font><font color="#E5E5E5"> category</font><font color="#CCCCCC"> so the storage</font>

748
00:27:39,500 --> 00:27:43,789
key is 0<font color="#E5E5E5"> but there is no such protection</font>

749
00:27:41,419 --> 00:27:46,640
bit so we can read<font color="#E5E5E5"> it but we cannot</font>

750
00:27:43,789 --> 00:27:50,120
update<font color="#E5E5E5"> it right so now the attack plot</font>

751
00:27:46,640 --> 00:27:52,960
evolves<font color="#E5E5E5"> and now the before patch in the</font>

752
00:27:50,120 --> 00:27:55,428
<font color="#CCCCCC">ACA memory where the privileges are held</font>

753
00:27:52,960 --> 00:27:57,710
<font color="#E5E5E5">we need to switch</font><font color="#CCCCCC"> the storage key in the</font>

754
00:27:55,429 --> 00:27:59,840
PSW register now there's an<font color="#E5E5E5"> instruction</font>

755
00:27:57,710 --> 00:28:03,799
<font color="#CCCCCC">to do it and assembly that's</font><font color="#E5E5E5"> called the</font>

756
00:27:59,840 --> 00:28:06,230
mod set macro however this instruction

757
00:28:03,799 --> 00:28:08,840
like all other powerful instructions are

758
00:28:06,230 --> 00:28:12,080
only<font color="#CCCCCC"> available</font><font color="#E5E5E5"> in kernel mode or what is</font>

759
00:28:08,840 --> 00:28:14,299
called<font color="#E5E5E5"> supervisor</font><font color="#CCCCCC"> state so on z0s</font>

760
00:28:12,080 --> 00:28:17,418
basically<font color="#E5E5E5"> supervisors</font><font color="#CCCCCC"> h equals the</font>

761
00:28:14,299 --> 00:28:20,750
kernel<font color="#E5E5E5"> mode on angel problem</font><font color="#CCCCCC"> stage</font><font color="#E5E5E5"> it's</font>

762
00:28:17,419 --> 00:28:22,399
user mode right<font color="#CCCCCC"> so some instructions are</font>

763
00:28:20,750 --> 00:28:25,100
all available<font color="#CCCCCC"> in supervisor state so the</font>

764
00:28:22,399 --> 00:28:29,149
question now<font color="#E5E5E5"> becomes how do we get into</font>

765
00:28:25,100 --> 00:28:30,500
supervisor<font color="#CCCCCC"> set now on</font><font color="#E5E5E5"> linux let's say if</font>

766
00:28:29,149 --> 00:28:32,539
you want<font color="#E5E5E5"> to go into</font><font color="#CCCCCC"> supervised into</font>

767
00:28:30,500 --> 00:28:34,549
kernel mode you just<font color="#CCCCCC"> write</font><font color="#E5E5E5"> your program</font>

768
00:28:32,539 --> 00:28:36,110
<font color="#E5E5E5">compiler as a loadable kernel and then</font>

769
00:28:34,549 --> 00:28:39,350
<font color="#E5E5E5">use in smaller more probable</font><font color="#CCCCCC"> or whatever</font>

770
00:28:36,110 --> 00:28:43,010
on<font color="#E5E5E5"> z/os is very different on</font><font color="#CCCCCC"> z/os</font><font color="#E5E5E5"> you</font>

771
00:28:39,350 --> 00:28:45,949
have some kernel folders<font color="#E5E5E5"> that are called</font>

772
00:28:43,010 --> 00:28:48,289
<font color="#E5E5E5">a PF libraries and any program</font><font color="#CCCCCC"> that is</font>

773
00:28:45,950 --> 00:28:51,350
dropped in these<font color="#E5E5E5"> folders can go into</font>

774
00:28:48,289 --> 00:28:52,760
kernel mode no questions asked<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me</font>

775
00:28:51,350 --> 00:28:54,230
stress<font color="#CCCCCC"> that again</font><font color="#E5E5E5"> you have</font><font color="#CCCCCC"> Carano</font>

776
00:28:52,760 --> 00:28:56,780
folders like 60

777
00:28:54,230 --> 00:29:01,100
<font color="#CCCCCC">hundred whatever they can be custom</font>

778
00:28:56,780 --> 00:29:02,899
defined<font color="#CCCCCC"> most of them are</font><font color="#E5E5E5"> you have no way</font>

779
00:29:01,100 --> 00:29:05,540
of easily listing them on a mainframe

780
00:29:02,900 --> 00:29:08,240
<font color="#CCCCCC">except if you're running the z/os 2.1</font>

781
00:29:05,540 --> 00:29:10,760
<font color="#CCCCCC">which</font><font color="#E5E5E5"> introduced instruction to a</font>

782
00:29:08,240 --> 00:29:12,350
command<font color="#CCCCCC"> to list</font><font color="#E5E5E5"> a PF libraries but you</font>

783
00:29:10,760 --> 00:29:13,400
have no way to<font color="#E5E5E5"> easily</font><font color="#CCCCCC"> except from going</font>

784
00:29:12,350 --> 00:29:17,780
through memory that's what we're gonna

785
00:29:13,400 --> 00:29:19,880
do basically<font color="#E5E5E5"> and you know you have these</font>

786
00:29:17,780 --> 00:29:21,590
folders and one of them is not protected

787
00:29:19,880 --> 00:29:24,530
in<font color="#E5E5E5"> fact many of them are not protected</font>

788
00:29:21,590 --> 00:29:26,000
like almost<font color="#E5E5E5"> all like not</font><font color="#CCCCCC"> almost</font><font color="#E5E5E5"> all</font>

789
00:29:24,530 --> 00:29:27,950
<font color="#CCCCCC">these assignments</font><font color="#E5E5E5"> but a lot of the</font>

790
00:29:26,000 --> 00:29:29,090
assignments that<font color="#E5E5E5"> I had actually we found</font>

791
00:29:27,950 --> 00:29:32,090
these<font color="#CCCCCC"> APF libraries that</font><font color="#E5E5E5"> were not</font>

792
00:29:29,090 --> 00:29:33,678
protected<font color="#CCCCCC"> and the client</font><font color="#E5E5E5"> went well who</font>

793
00:29:32,090 --> 00:29:34,939
cares like who can can you show me what

794
00:29:33,679 --> 00:29:36,650
he can do with<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and like well that was</font>

795
00:29:34,940 --> 00:29:38,600
<font color="#E5E5E5">the key years ago and I was like well</font>

796
00:29:36,650 --> 00:29:40,190
<font color="#E5E5E5">yeah theoretically</font><font color="#CCCCCC"> it is possible to</font>

797
00:29:38,600 --> 00:29:41,959
code a program<font color="#CCCCCC"> an assembly</font><font color="#E5E5E5"> that will do</font>

798
00:29:40,190 --> 00:29:43,460
pop up and he's like<font color="#E5E5E5"> yeah shut</font><font color="#CCCCCC"> up go</font>

799
00:29:41,960 --> 00:29:45,530
ahead<font color="#CCCCCC"> like I don't want to</font><font color="#E5E5E5"> hear about it</font>

800
00:29:43,460 --> 00:29:48,500
<font color="#CCCCCC">and</font><font color="#E5E5E5"> that's you know people believe that</font>

801
00:29:45,530 --> 00:29:50,570
this knowledge is<font color="#E5E5E5"> so out of reach</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> in</font>

802
00:29:48,500 --> 00:29:51,830
fact it's not<font color="#CCCCCC"> and you know I'm</font><font color="#E5E5E5"> gonna</font>

803
00:29:50,570 --> 00:29:53,330
show you later<font color="#CCCCCC"> on the program that will</font>

804
00:29:51,830 --> 00:29:56,600
<font color="#CCCCCC">explore all</font><font color="#E5E5E5"> this it will see it's</font><font color="#CCCCCC"> very</font>

805
00:29:53,330 --> 00:29:59,750
trivial now<font color="#E5E5E5"> the idea is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find these</font>

806
00:29:56,600 --> 00:30:02,510
APF libraries there are the one we can

807
00:29:59,750 --> 00:30:04,190
alter and then you know<font color="#E5E5E5"> then we can move</font>

808
00:30:02,510 --> 00:30:06,320
on with<font color="#CCCCCC"> our scheme find an APF library</font>

809
00:30:04,190 --> 00:30:08,450
with<font color="#E5E5E5"> alter access write a program drop a</font>

810
00:30:06,320 --> 00:30:10,820
program that<font color="#E5E5E5"> will switch the PSW key and</font>

811
00:30:08,450 --> 00:30:11,600
then having the supervisor state having

812
00:30:10,820 --> 00:30:13,549
<font color="#E5E5E5">the PSW</font>

813
00:30:11,600 --> 00:30:16,070
storage key set to<font color="#E5E5E5"> zero we can patch the</font>

814
00:30:13,549 --> 00:30:18,139
<font color="#CCCCCC">ACAB remembering now to find a PF</font>

815
00:30:16,070 --> 00:30:19,700
libraries like<font color="#E5E5E5"> I said if you run in</font><font color="#CCCCCC"> zero</font>

816
00:30:18,140 --> 00:30:23,419
as to that one there's a simple command

817
00:30:19,700 --> 00:30:25,790
<font color="#E5E5E5">to do it</font><font color="#CCCCCC"> CSV</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> APF but if you run in</font>

818
00:30:23,419 --> 00:30:28,160
like other versions you have to go

819
00:30:25,790 --> 00:30:29,750
through memory and to find them<font color="#CCCCCC"> now I'm</font>

820
00:30:28,160 --> 00:30:31,720
not gonna detail the scheme but it's

821
00:30:29,750 --> 00:30:34,100
just<font color="#E5E5E5"> basically just going from one</font>

822
00:30:31,720 --> 00:30:35,960
pointer to<font color="#E5E5E5"> one another it's as easy as</font>

823
00:30:34,100 --> 00:30:37,639
that<font color="#CCCCCC"> so I'm just gonna</font><font color="#E5E5E5"> leave</font><font color="#CCCCCC"> it there</font>

824
00:30:35,960 --> 00:30:39,169
for reference<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I wrote a tool that</font>

825
00:30:37,640 --> 00:30:40,820
<font color="#E5E5E5">will do</font><font color="#CCCCCC"> all this automatically</font><font color="#E5E5E5"> so you do</font>

826
00:30:39,169 --> 00:30:44,000
not<font color="#E5E5E5"> have to worry about it don't just</font>

827
00:30:40,820 --> 00:30:45,678
leave it to<font color="#CCCCCC"> be exhaustion and you know</font>

828
00:30:44,000 --> 00:30:47,870
once we found<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> APF libraries we</font>

829
00:30:45,679 --> 00:30:49,929
just check which access we have<font color="#E5E5E5"> on them</font>

830
00:30:47,870 --> 00:30:53,418
and the program<font color="#E5E5E5"> that we're gonna drop</font>

831
00:30:49,929 --> 00:30:54,500
<font color="#E5E5E5">inside one of these folders</font><font color="#CCCCCC"> is it</font><font color="#E5E5E5"> looks</font>

832
00:30:53,419 --> 00:30:55,700
a little<font color="#E5E5E5"> bit like this now I do not</font>

833
00:30:54,500 --> 00:30:58,370
<font color="#E5E5E5">expect everyone to know like</font>

834
00:30:55,700 --> 00:31:00,080
<font color="#E5E5E5">z/architecture assembly but I just want</font>

835
00:30:58,370 --> 00:31:01,459
<font color="#E5E5E5">to go quickly very quickly through the</font>

836
00:31:00,080 --> 00:31:03,770
program to show you that it's<font color="#CCCCCC"> not</font>

837
00:31:01,460 --> 00:31:05,210
magical<font color="#E5E5E5"> that it's not too complicated</font>

838
00:31:03,770 --> 00:31:07,070
<font color="#E5E5E5">but it's not really actually complicated</font>

839
00:31:05,210 --> 00:31:07,879
<font color="#E5E5E5">so we have the first section that says</font>

840
00:31:07,070 --> 00:31:10,189
hey our program

841
00:31:07,879 --> 00:31:11,809
runs in<font color="#CCCCCC"> 31-bit</font><font color="#E5E5E5"> right we have the program</font>

842
00:31:10,190 --> 00:31:14,149
prologue where we save some registers

843
00:31:11,809 --> 00:31:16,069
and then we say our<font color="#CCCCCC"> stock register will</font>

844
00:31:14,149 --> 00:31:19,549
be<font color="#CCCCCC"> register</font><font color="#E5E5E5"> number 12 because there is</font>

845
00:31:16,069 --> 00:31:21,049
no set or defined<font color="#E5E5E5"> stock register so</font><font color="#CCCCCC"> you</font>

846
00:31:19,549 --> 00:31:23,209
have to<font color="#E5E5E5"> define it every time and then we</font>

847
00:31:21,049 --> 00:31:24,979
call the mod<font color="#E5E5E5"> set macro we switch</font><font color="#CCCCCC"> the</font>

848
00:31:23,209 --> 00:31:26,599
keys to<font color="#CCCCCC"> zero we go to supervisor stage</font>

849
00:31:24,979 --> 00:31:29,239
and then it's just<font color="#E5E5E5"> a matter</font><font color="#CCCCCC"> of loading</font>

850
00:31:26,599 --> 00:31:30,019
<font color="#E5E5E5">different offsets into register until we</font>

851
00:31:29,239 --> 00:31:33,919
find the<font color="#E5E5E5"> AC</font><font color="#CCCCCC"> e</font>

852
00:31:30,019 --> 00:31:37,099
right and then we just you know<font color="#CCCCCC"> execute</font>

853
00:31:33,919 --> 00:31:41,179
an immediate or to flip the proper bytes

854
00:31:37,099 --> 00:31:42,589
<font color="#CCCCCC">at offset 26</font><font color="#E5E5E5"> and 27 so that's it basic</font>

855
00:31:41,179 --> 00:31:44,539
<font color="#E5E5E5">this is the program</font><font color="#CCCCCC"> that will make us</font>

856
00:31:42,589 --> 00:31:46,819
<font color="#CCCCCC">root on a mainframe</font><font color="#E5E5E5"> we just need to find</font>

857
00:31:44,539 --> 00:31:48,889
an<font color="#E5E5E5"> API libraries where library where we</font>

858
00:31:46,819 --> 00:31:51,319
drop it so it can run<font color="#E5E5E5"> into kernel mode</font>

859
00:31:48,889 --> 00:31:53,658
<font color="#E5E5E5">that's it basically</font><font color="#CCCCCC"> so just to</font><font color="#E5E5E5"> show you</font>

860
00:31:51,319 --> 00:31:55,519
how simple it<font color="#E5E5E5"> now however compiling this</font>

861
00:31:53,659 --> 00:31:57,109
piece of code took me nearly two days to

862
00:31:55,519 --> 00:31:58,789
figure<font color="#E5E5E5"> it</font><font color="#CCCCCC"> out honest to god</font><font color="#E5E5E5"> it's not</font>

863
00:31:57,109 --> 00:32:00,379
<font color="#E5E5E5">like that it's not a simple instruction</font>

864
00:31:58,789 --> 00:32:01,519
<font color="#E5E5E5">it's not one instruction to run on a</font>

865
00:32:00,379 --> 00:32:02,869
mainframe to compile code it's a

866
00:32:01,519 --> 00:32:05,419
<font color="#E5E5E5">freaking script that you have to write</font>

867
00:32:02,869 --> 00:32:09,529
so I decided to<font color="#E5E5E5"> wrap this program in a</font>

868
00:32:05,419 --> 00:32:13,299
<font color="#E5E5E5">scripting Python like</font><font color="#CCCCCC"> other mainframes</font>

869
00:32:09,529 --> 00:32:16,369
<font color="#E5E5E5">called</font><font color="#CCCCCC"> Rex so it will like you know</font>

870
00:32:13,299 --> 00:32:18,349
properly<font color="#E5E5E5"> compile the code set the link</font>

871
00:32:16,369 --> 00:32:20,089
<font color="#E5E5E5">it with the proper options so it can put</font>

872
00:32:18,349 --> 00:32:21,889
it<font color="#CCCCCC"> into inside an AP of library which</font>

873
00:32:20,089 --> 00:32:23,658
will find the<font color="#CCCCCC"> AP off library with ultra</font>

874
00:32:21,889 --> 00:32:25,218
access and you know<font color="#E5E5E5"> will drop it</font>

875
00:32:23,659 --> 00:32:28,849
automatically so<font color="#E5E5E5"> you have like it's just</font>

876
00:32:25,219 --> 00:32:32,749
one command<font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> and but like when</font>

877
00:32:28,849 --> 00:32:34,729
<font color="#E5E5E5">I first run this program</font><font color="#CCCCCC"> it worked but</font>

878
00:32:32,749 --> 00:32:37,339
<font color="#CCCCCC">it would it was tricky actually because</font>

879
00:32:34,729 --> 00:32:39,769
when the program<font color="#CCCCCC"> runs it runs</font><font color="#E5E5E5"> in its own</font>

880
00:32:37,339 --> 00:32:42,229
<font color="#E5E5E5">virtual address space</font><font color="#CCCCCC"> so when it finds</font>

881
00:32:39,769 --> 00:32:45,079
<font color="#E5E5E5">the memory to patch it patches its own</font>

882
00:32:42,229 --> 00:32:47,059
virtual<font color="#E5E5E5"> address space</font><font color="#CCCCCC"> so true the</font>

883
00:32:45,079 --> 00:32:50,418
program becomes<font color="#E5E5E5"> pet became special and</font>

884
00:32:47,059 --> 00:32:53,299
then you know<font color="#CCCCCC"> quit but my user was still</font>

885
00:32:50,419 --> 00:32:55,159
standard user<font color="#CCCCCC"> so you know there's this</font>

886
00:32:53,299 --> 00:32:57,168
separation virtual address separation so

887
00:32:55,159 --> 00:32:59,690
I had to add this small instruction<font color="#E5E5E5"> at</font>

888
00:32:57,169 --> 00:33:02,179
<font color="#CCCCCC">the end that says to the program hey</font>

889
00:32:59,690 --> 00:33:04,849
when<font color="#CCCCCC"> you're special</font><font color="#E5E5E5"> well add the</font><font color="#CCCCCC"> rack</font>

890
00:33:02,179 --> 00:33:07,039
after<font color="#E5E5E5"> rule that says</font><font color="#CCCCCC"> that user</font><font color="#E5E5E5"> me is</font>

891
00:33:04,849 --> 00:33:09,019
also<font color="#E5E5E5"> special hence this small</font>

892
00:33:07,039 --> 00:33:10,639
instruction<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the end alter user user</font>

893
00:33:09,019 --> 00:33:12,829
ID that's<font color="#E5E5E5"> running the script</font><font color="#CCCCCC"> special</font>

894
00:33:10,639 --> 00:33:14,359
<font color="#CCCCCC">operations so that's basically just</font><font color="#E5E5E5"> to</font>

895
00:33:12,829 --> 00:33:16,099
explain<font color="#E5E5E5"> that piece of code and I'm just</font>

896
00:33:14,359 --> 00:33:18,799
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> show you quick demo of</font><font color="#CCCCCC"> how what it</font>

897
00:33:16,099 --> 00:33:21,830
looks like<font color="#E5E5E5"> so here list user we</font><font color="#CCCCCC"> have 0</font>

898
00:33:18,799 --> 00:33:23,418
attributes right<font color="#CCCCCC"> next</font>

899
00:33:21,830 --> 00:33:25,220
<font color="#CCCCCC">we run Eldar APF which is the name of</font>

900
00:33:23,419 --> 00:33:27,470
the script<font color="#E5E5E5"> we downloaded via FTP each on</font>

901
00:33:25,220 --> 00:33:29,779
that or<font color="#CCCCCC"> whatever and then we list all</font>

902
00:33:27,470 --> 00:33:31,340
<font color="#E5E5E5">the</font><font color="#CCCCCC"> APF libraries so here's this one</font>

903
00:33:29,779 --> 00:33:32,929
that link<font color="#E5E5E5"> clips is one that SVC</font><font color="#CCCCCC"> like</font>

904
00:33:31,340 --> 00:33:34,820
these are<font color="#E5E5E5"> our folders that we can write</font>

905
00:33:32,929 --> 00:33:36,320
to basically<font color="#E5E5E5"> because we know our</font><font color="#CCCCCC"> craft</font>

906
00:33:34,820 --> 00:33:38,928
<font color="#E5E5E5">profile is defined this is obviously</font>

907
00:33:36,320 --> 00:33:41,450
just<font color="#E5E5E5"> a test system right</font><font color="#CCCCCC"> so all</font><font color="#E5E5E5"> these</font>

908
00:33:38,929 --> 00:33:43,519
folders<font color="#CCCCCC"> are writable and we can</font><font color="#E5E5E5"> drop a</font>

909
00:33:41,450 --> 00:33:46,880
program inside of them<font color="#E5E5E5"> so you can see</font>

910
00:33:43,519 --> 00:33:48,470
here we choose one arbitrarily<font color="#E5E5E5"> the the</font>

911
00:33:46,880 --> 00:33:51,919
script will compile the<font color="#E5E5E5"> program there</font>

912
00:33:48,470 --> 00:33:53,659
was no error<font color="#E5E5E5"> on the compiler and you can</font>

913
00:33:51,919 --> 00:33:55,610
see<font color="#E5E5E5"> that now</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> we became special since</font>

914
00:33:53,659 --> 00:33:59,299
as easy as that<font color="#E5E5E5"> now what I did</font><font color="#CCCCCC"> was just</font>

915
00:33:55,610 --> 00:34:01,219
weaponize something that obviously<font color="#CCCCCC"> a lot</font>

916
00:33:59,299 --> 00:34:03,200
<font color="#CCCCCC">of</font><font color="#E5E5E5"> people were aware</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> like everybody</font>

917
00:34:01,220 --> 00:34:05,750
from IBM to any auditor will tell you

918
00:34:03,200 --> 00:34:08,210
hey APF libraries you need to<font color="#CCCCCC"> protect</font>

919
00:34:05,750 --> 00:34:09,649
them but like<font color="#E5E5E5"> I said</font><font color="#CCCCCC"> people are very</font>

920
00:34:08,210 --> 00:34:11,690
stubborn<font color="#CCCCCC"> and like you know proof of</font>

921
00:34:09,649 --> 00:34:13,790
concept<font color="#CCCCCC"> will get the out and that's</font>

922
00:34:11,690 --> 00:34:15,440
the<font color="#CCCCCC"> real attitude of people like that's</font>

923
00:34:13,790 --> 00:34:18,020
how they assess risk if you know there

924
00:34:15,440 --> 00:34:19,490
is no<font color="#E5E5E5"> immediate or known threat they</font>

925
00:34:18,020 --> 00:34:21,849
will not address<font color="#E5E5E5"> it so what I did was</font>

926
00:34:19,489 --> 00:34:24,348
<font color="#E5E5E5">basically just weaponize it and makes it</font>

927
00:34:21,849 --> 00:34:26,629
like easy for any<font color="#CCCCCC"> pen chester</font><font color="#E5E5E5"> who's</font>

928
00:34:24,349 --> 00:34:28,280
<font color="#E5E5E5">facing a</font><font color="#CCCCCC"> mainframe</font><font color="#E5E5E5"> to download the</font>

929
00:34:26,629 --> 00:34:30,139
<font color="#E5E5E5">script put another mainframe and boom</font>

930
00:34:28,280 --> 00:34:31,760
<font color="#E5E5E5">there their</font><font color="#CCCCCC"> route on</font><font color="#E5E5E5"> the mainframe</font><font color="#CCCCCC"> so</font>

931
00:34:30,139 --> 00:34:34,369
you do not<font color="#E5E5E5"> have to go through the</font>

932
00:34:31,760 --> 00:34:36,770
trouble<font color="#E5E5E5"> of you know</font><font color="#CCCCCC"> all like digging</font>

933
00:34:34,369 --> 00:34:38,149
into this stuff like<font color="#CCCCCC"> i did just to know</font>

934
00:34:36,770 --> 00:34:41,359
<font color="#CCCCCC">how to compile the</font><font color="#E5E5E5"> freaking assembly</font>

935
00:34:38,149 --> 00:34:42,949
code of<font color="#CCCCCC"> twelve lines</font><font color="#E5E5E5"> so like</font><font color="#CCCCCC"> i said a</font>

936
00:34:41,359 --> 00:34:44,629
lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> people who are</font><font color="#E5E5E5"> aware of this like</font>

937
00:34:42,949 --> 00:34:46,899
a PF library is<font color="#CCCCCC"> very dangerous</font><font color="#E5E5E5"> you have</font>

938
00:34:44,629 --> 00:34:49,489
<font color="#E5E5E5">to protect them blah blah blah blah and</font>

939
00:34:46,899 --> 00:34:52,129
like Mark Wilson<font color="#CCCCCC"> from</font><font color="#E5E5E5"> our some partners</font>

940
00:34:49,489 --> 00:34:55,729
they<font color="#CCCCCC"> discussed something similar</font><font color="#E5E5E5"> but</font>

941
00:34:52,129 --> 00:34:58,670
using SVC now SVC<font color="#E5E5E5"> our supervisor calls</font>

942
00:34:55,730 --> 00:35:00,380
<font color="#E5E5E5">and just</font><font color="#CCCCCC"> like on Linux</font><font color="#E5E5E5"> or Windows you</font>

943
00:34:58,670 --> 00:35:02,960
<font color="#E5E5E5">have like you know Linux you have sis</font>

944
00:35:00,380 --> 00:35:04,820
<font color="#E5E5E5">calls that</font><font color="#CCCCCC"> go into kernel mode and you</font>

945
00:35:02,960 --> 00:35:05,930
know they do some fancy dangerous stuff

946
00:35:04,820 --> 00:35:08,060
and<font color="#CCCCCC"> they</font><font color="#E5E5E5"> bring you the result in user</font>

947
00:35:05,930 --> 00:35:09,379
<font color="#E5E5E5">mode same thing on</font><font color="#CCCCCC"> 0s but</font><font color="#E5E5E5"> these are</font>

948
00:35:08,060 --> 00:35:11,119
called supervisor calls<font color="#E5E5E5"> so this is just</font>

949
00:35:09,380 --> 00:35:13,970
API functions that go into<font color="#E5E5E5"> kernel mode</font>

950
00:35:11,119 --> 00:35:16,910
do something<font color="#E5E5E5"> very deep</font><font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> and</font>

951
00:35:13,970 --> 00:35:20,149
then come back and now on you<font color="#E5E5E5"> have a</font>

952
00:35:16,910 --> 00:35:23,868
<font color="#E5E5E5">table basically of 255 SVC is available</font>

953
00:35:20,150 --> 00:35:26,060
so from<font color="#E5E5E5"> 0 to 200 these functions are IBM</font>

954
00:35:23,869 --> 00:35:29,060
reserved and 201<font color="#E5E5E5"> to 205 can be</font>

955
00:35:26,060 --> 00:35:31,759
user-defined so like<font color="#E5E5E5"> basically</font>

956
00:35:29,060 --> 00:35:34,520
<font color="#CCCCCC">Mark</font><font color="#E5E5E5"> Wilson talked about some admins</font>

957
00:35:31,760 --> 00:35:35,190
<font color="#E5E5E5">some vendors that they like that that</font>

958
00:35:34,520 --> 00:35:37,230
registers

959
00:35:35,190 --> 00:35:39,660
<font color="#E5E5E5">as we see on a mainframe some</font><font color="#CCCCCC"> Cisco's on</font>

960
00:35:37,230 --> 00:35:41,790
the<font color="#CCCCCC"> mainframe that when they go into</font>

961
00:35:39,660 --> 00:35:43,980
<font color="#E5E5E5">Cardinal mode they make the whole</font>

962
00:35:41,790 --> 00:35:46,950
program calling<font color="#E5E5E5"> them go into</font><font color="#CCCCCC"> Coronel</font>

963
00:35:43,980 --> 00:35:48,150
mode now this this is<font color="#CCCCCC"> very dangerous</font>

964
00:35:46,950 --> 00:35:51,839
stuff<font color="#E5E5E5"> and I'm just gonna show</font><font color="#CCCCCC"> you what</font>

965
00:35:48,150 --> 00:35:54,869
what it might look like<font color="#E5E5E5"> so like they are</font>

966
00:35:51,839 --> 00:35:57,990
<font color="#E5E5E5">dubbed the magic a species again</font><font color="#CCCCCC"> I do</font>

967
00:35:54,869 --> 00:35:59,550
not care much about the code I just<font color="#CCCCCC"> I'm</font>

968
00:35:57,990 --> 00:36:01,379
just<font color="#E5E5E5"> gonna show it like</font><font color="#CCCCCC"> there just to</font>

969
00:35:59,550 --> 00:36:02,790
give you an example what it looks<font color="#E5E5E5"> like</font>

970
00:36:01,380 --> 00:36:04,079
<font color="#E5E5E5">what I want you to focus on is that</font>

971
00:36:02,790 --> 00:36:06,540
<font color="#E5E5E5">there is not a single piece of</font>

972
00:36:04,079 --> 00:36:10,079
authentication<font color="#E5E5E5"> or access control in that</font>

973
00:36:06,540 --> 00:36:12,300
code nothing so and by definition

974
00:36:10,079 --> 00:36:16,050
<font color="#E5E5E5">everybody can call an SVC right that's</font>

975
00:36:12,300 --> 00:36:18,030
what they're for<font color="#CCCCCC"> and so if you like</font><font color="#E5E5E5"> if</font>

976
00:36:16,050 --> 00:36:20,130
you<font color="#E5E5E5"> want to apply the same trick that</font><font color="#CCCCCC"> we</font>

977
00:36:18,030 --> 00:36:22,290
<font color="#E5E5E5">did earlier you do not need a PF</font>

978
00:36:20,130 --> 00:36:24,869
libraries now you just need this

979
00:36:22,290 --> 00:36:27,450
SVC that<font color="#CCCCCC"> with like say it's SVC number</font>

980
00:36:24,869 --> 00:36:28,980
233 you just call it in<font color="#E5E5E5"> your assembly</font>

981
00:36:27,450 --> 00:36:31,049
and then boom you can<font color="#E5E5E5"> call them</font><font color="#CCCCCC"> outside</font>

982
00:36:28,980 --> 00:36:32,670
<font color="#E5E5E5">macro and go into kernel mode so you do</font>

983
00:36:31,050 --> 00:36:35,369
not need<font color="#E5E5E5"> a PF libraries</font><font color="#CCCCCC"> anymore to</font>

984
00:36:32,670 --> 00:36:37,560
achieve<font color="#E5E5E5"> your privilege escalation now</font><font color="#CCCCCC"> I</font>

985
00:36:35,369 --> 00:36:38,760
<font color="#CCCCCC">bro like I wrote this is a proof</font><font color="#E5E5E5"> of</font>

986
00:36:37,560 --> 00:36:40,470
<font color="#CCCCCC">concept to kind of learn about more</font>

987
00:36:38,760 --> 00:36:42,750
<font color="#E5E5E5">about SPC so I wrote a script that will</font>

988
00:36:40,470 --> 00:36:44,009
list all<font color="#CCCCCC"> the SVC s in memory</font><font color="#E5E5E5"> again it's</font>

989
00:36:42,750 --> 00:36:45,450
just<font color="#E5E5E5"> a matter of walking from</font><font color="#CCCCCC"> one</font>

990
00:36:44,010 --> 00:36:47,490
control block to<font color="#CCCCCC"> another is just</font><font color="#E5E5E5"> one</font>

991
00:36:45,450 --> 00:36:50,399
pointer to another and then<font color="#CCCCCC"> will</font>

992
00:36:47,490 --> 00:36:53,189
basically check for some instructions

993
00:36:50,400 --> 00:36:55,380
<font color="#CCCCCC">that will</font><font color="#E5E5E5"> how to say there are</font>

994
00:36:53,190 --> 00:36:57,530
suspicious<font color="#E5E5E5"> that play with that piece</font><font color="#CCCCCC"> of</font>

995
00:36:55,380 --> 00:37:00,750
memory that controls whether we are in

996
00:36:57,530 --> 00:37:02,280
<font color="#E5E5E5">supervisor state or not and so I focused</font>

997
00:37:00,750 --> 00:37:04,619
<font color="#E5E5E5">on these two</font><font color="#CCCCCC"> instructions obviously this</font>

998
00:37:02,280 --> 00:37:07,230
is<font color="#CCCCCC"> not bulletproof but it's just a</font><font color="#E5E5E5"> proof</font>

999
00:37:04,619 --> 00:37:09,960
of concept<font color="#CCCCCC"> so I focused</font><font color="#E5E5E5"> on this first</font>

1000
00:37:07,230 --> 00:37:12,510
instruction that<font color="#E5E5E5"> loads offset 540 which</font>

1001
00:37:09,960 --> 00:37:13,890
<font color="#E5E5E5">corresponds to the control control block</font>

1002
00:37:12,510 --> 00:37:16,079
described in the current task that is

1003
00:37:13,890 --> 00:37:19,500
running<font color="#E5E5E5"> and this second instruction that</font>

1004
00:37:16,079 --> 00:37:21,060
flips<font color="#CCCCCC"> a certain byte at a offset 236 in</font>

1005
00:37:19,500 --> 00:37:25,109
memory so I just decided to write<font color="#CCCCCC"> a</font>

1006
00:37:21,060 --> 00:37:28,319
small reg X like in<font color="#E5E5E5"> Python Rex not</font>

1007
00:37:25,109 --> 00:37:30,299
Python to find all the<font color="#CCCCCC"> SPC's in memory</font>

1008
00:37:28,319 --> 00:37:31,890
<font color="#E5E5E5">and check whether or not they perform</font>

1009
00:37:30,300 --> 00:37:33,300
these fishy operations and I'm<font color="#E5E5E5"> just</font>

1010
00:37:31,890 --> 00:37:36,810
<font color="#E5E5E5">going to show you what the script looks</font>

1011
00:37:33,300 --> 00:37:40,260
<font color="#E5E5E5">like it looks</font><font color="#CCCCCC"> like so here we execute</font>

1012
00:37:36,810 --> 00:37:42,359
elf<font color="#CCCCCC"> that</font><font color="#E5E5E5"> SVC and you can see that we we</font>

1013
00:37:40,260 --> 00:37:44,130
type in<font color="#CCCCCC"> lists and you</font><font color="#E5E5E5"> can list all the</font>

1014
00:37:42,359 --> 00:37:45,869
SV<font color="#CCCCCC"> seas that are</font><font color="#E5E5E5"> running and</font><font color="#CCCCCC"> you can see</font>

1015
00:37:44,130 --> 00:37:49,050
that<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's inspects the code</font><font color="#E5E5E5"> looking</font>

1016
00:37:45,869 --> 00:37:50,820
for an<font color="#E5E5E5"> off-grid</font><font color="#CCCCCC"> so SVC 233</font>

1017
00:37:49,050 --> 00:37:54,030
after it was detected and<font color="#E5E5E5"> it dumps the</font>

1018
00:37:50,820 --> 00:37:55,590
up code of the SVC<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can see here</font>

1019
00:37:54,030 --> 00:37:58,740
<font color="#E5E5E5">that we are</font><font color="#CCCCCC"> obviously we have no</font>

1020
00:37:55,590 --> 00:38:01,020
attribute<font color="#CCCCCC"> and when we run rerun the</font>

1021
00:37:58,740 --> 00:38:03,810
program and specify<font color="#CCCCCC"> this time the SVC</font><font color="#E5E5E5"> it</font>

1022
00:38:01,020 --> 00:38:06,870
will again compile the program<font color="#CCCCCC"> drop it</font>

1023
00:38:03,810 --> 00:38:08,730
drop it<font color="#CCCCCC"> into any folder we do not</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> a</font>

1024
00:38:06,870 --> 00:38:10,950
PF libraries anymore<font color="#CCCCCC"> and it will go into</font>

1025
00:38:08,730 --> 00:38:13,710
kernel mode and patch<font color="#CCCCCC"> the AC a bit and</font>

1026
00:38:10,950 --> 00:38:16,680
make us special<font color="#E5E5E5"> so that's what I did</font>

1027
00:38:13,710 --> 00:38:17,730
here now when I<font color="#E5E5E5"> first go</font><font color="#CCCCCC"> to this I just</font>

1028
00:38:16,680 --> 00:38:18,149
<font color="#E5E5E5">wanted to keep it</font><font color="#CCCCCC"> for myself</font><font color="#E5E5E5"> I was</font><font color="#CCCCCC"> like</font>

1029
00:38:17,730 --> 00:38:20,670
<font color="#CCCCCC">eh</font>

1030
00:38:18,150 --> 00:38:24,330
who's gonna you know use<font color="#CCCCCC"> it in the</font><font color="#E5E5E5"> wild</font>

1031
00:38:20,670 --> 00:38:25,830
I mean have a magic<font color="#E5E5E5"> SVC magic</font><font color="#CCCCCC"> Cisco</font><font color="#E5E5E5"> that</font>

1032
00:38:24,330 --> 00:38:27,960
lets anybody<font color="#E5E5E5"> go into kernel mode like</font>

1033
00:38:25,830 --> 00:38:30,060
yeah who's gonna do<font color="#CCCCCC"> that and</font><font color="#E5E5E5"> then I was</font>

1034
00:38:27,960 --> 00:38:31,560
<font color="#CCCCCC">talking with</font><font color="#E5E5E5"> the soldier of Fortran and</font>

1035
00:38:30,060 --> 00:38:33,299
we were talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this lease</font>

1036
00:38:31,560 --> 00:38:35,670
privilege escalation possibilities

1037
00:38:33,300 --> 00:38:37,620
techniques<font color="#CCCCCC"> etc</font><font color="#E5E5E5"> and then like at some</font>

1038
00:38:35,670 --> 00:38:38,910
<font color="#CCCCCC">point we talked about</font><font color="#E5E5E5"> elves that SVC so</font>

1039
00:38:37,620 --> 00:38:41,730
this script that<font color="#E5E5E5"> I showed you</font><font color="#CCCCCC"> and he</font>

1040
00:38:38,910 --> 00:38:44,279
exactly<font color="#E5E5E5"> said dude I just need to show</font>

1041
00:38:41,730 --> 00:38:46,800
you something<font color="#CCCCCC"> and he showed me this</font>

1042
00:38:44,280 --> 00:38:51,000
script<font color="#CCCCCC"> that basically there was</font><font color="#E5E5E5"> a big</font>

1043
00:38:46,800 --> 00:38:52,860
mainframe<font color="#E5E5E5"> breach in Sweden in 2012 and</font>

1044
00:38:51,000 --> 00:38:55,080
he<font color="#E5E5E5"> was involved in investigation so he</font>

1045
00:38:52,860 --> 00:38:57,090
got access<font color="#E5E5E5"> to some scripts involved in a</font>

1046
00:38:55,080 --> 00:39:00,240
good<font color="#E5E5E5"> way not a bad way by the way anyway</font>

1047
00:38:57,090 --> 00:39:02,190
<font color="#E5E5E5">so he sent</font><font color="#CCCCCC"> me this</font><font color="#E5E5E5"> script that</font><font color="#CCCCCC"> way and</font>

1048
00:39:00,240 --> 00:39:03,930
it's not<font color="#CCCCCC"> his github anyway and you can</font>

1049
00:39:02,190 --> 00:39:07,920
see here<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> script for that</font>

1050
00:39:03,930 --> 00:39:09,720
<font color="#E5E5E5">the attacker used now</font><font color="#CCCCCC"> I think you will</font>

1051
00:39:07,920 --> 00:39:11,310
now be built familiar with some<font color="#E5E5E5"> of these</font>

1052
00:39:09,720 --> 00:39:14,609
<font color="#E5E5E5">instructions so you can see that the</font>

1053
00:39:11,310 --> 00:39:17,220
attacker basically called an SVC<font color="#E5E5E5"> 242 for</font>

1054
00:39:14,610 --> 00:39:19,980
<font color="#E5E5E5">it</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> called the mod set macro exactly</font>

1055
00:39:17,220 --> 00:39:22,049
like we did<font color="#CCCCCC"> and then flip some you know</font>

1056
00:39:19,980 --> 00:39:25,280
bytes in memory<font color="#CCCCCC"> that are related to</font><font color="#E5E5E5"> the</font>

1057
00:39:22,050 --> 00:39:28,380
AC flag<font color="#E5E5E5"> AC special operations etc</font>

1058
00:39:25,280 --> 00:39:30,990
<font color="#E5E5E5">exactly what I just showed you so this</font>

1059
00:39:28,380 --> 00:39:33,180
just<font color="#CCCCCC"> to say again that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> you know</font>

1060
00:39:30,990 --> 00:39:34,379
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is real stuff that</font><font color="#E5E5E5"> works in the</font>

1061
00:39:33,180 --> 00:39:36,600
world<font color="#E5E5E5"> and I was</font><font color="#CCCCCC"> very surprised to</font>

1062
00:39:34,380 --> 00:39:39,930
actually know about description oh wow

1063
00:39:36,600 --> 00:39:41,700
holy holy crap anyway and this<font color="#E5E5E5"> further</font>

1064
00:39:39,930 --> 00:39:43,470
<font color="#E5E5E5">you know proves my point of the</font>

1065
00:39:41,700 --> 00:39:45,870
difference<font color="#CCCCCC"> between the security</font><font color="#E5E5E5"> maturity</font>

1066
00:39:43,470 --> 00:39:47,669
in the windows<font color="#CCCCCC"> world or Linux world and</font>

1067
00:39:45,870 --> 00:39:49,500
in the mainframe world people<font color="#CCCCCC"> on the</font>

1068
00:39:47,670 --> 00:39:51,660
mainframe world still think they can<font color="#E5E5E5"> get</font>

1069
00:39:49,500 --> 00:39:53,190
<font color="#E5E5E5">away with security by obscurity a lot of</font>

1070
00:39:51,660 --> 00:39:55,430
people think they can<font color="#E5E5E5"> get away</font><font color="#CCCCCC"> with it</font>

1071
00:39:53,190 --> 00:39:58,620
<font color="#E5E5E5">well you know we know</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> true</font>

1072
00:39:55,430 --> 00:40:00,450
<font color="#CCCCCC">obviously every time you like there's</font>

1073
00:39:58,620 --> 00:40:01,950
this awesome code that says every<font color="#CCCCCC"> time</font>

1074
00:40:00,450 --> 00:40:02,250
you think nobody<font color="#CCCCCC"> will go through the</font>

1075
00:40:01,950 --> 00:40:04,140
trouble

1076
00:40:02,250 --> 00:40:06,150
of doing<font color="#E5E5E5"> something some kid in Finland</font>

1077
00:40:04,140 --> 00:40:09,060
<font color="#E5E5E5">goes</font><font color="#CCCCCC"> through the</font><font color="#E5E5E5"> trouble well this is</font>

1078
00:40:06,150 --> 00:40:11,490
<font color="#E5E5E5">basically the same thing</font><font color="#CCCCCC"> now get inside</font>

1079
00:40:09,060 --> 00:40:13,740
<font color="#CCCCCC">like like when</font><font color="#E5E5E5"> you think about like the</font>

1080
00:40:11,490 --> 00:40:16,799
logic<font color="#E5E5E5"> or how these scripts</font><font color="#CCCCCC"> that I wrote</font>

1081
00:40:13,740 --> 00:40:18,419
operate they go into kernel mode they go

1082
00:40:16,800 --> 00:40:21,360
into<font color="#E5E5E5"> they become special and then they</font>

1083
00:40:18,420 --> 00:40:23,670
alter the<font color="#CCCCCC"> rack</font><font color="#E5E5E5"> F table to make the user</font>

1084
00:40:21,360 --> 00:40:26,310
who called them special I did not it<font color="#CCCCCC"> was</font>

1085
00:40:23,670 --> 00:40:28,830
not<font color="#CCCCCC"> very upset</font><font color="#E5E5E5"> sick you know proof I did</font>

1086
00:40:26,310 --> 00:40:30,690
not like it<font color="#CCCCCC"> that much because a we write</font>

1087
00:40:28,830 --> 00:40:33,200
something<font color="#E5E5E5"> into the</font><font color="#CCCCCC"> rack cap</font><font color="#E5E5E5"> table I do</font>

1088
00:40:30,690 --> 00:40:36,270
not like<font color="#CCCCCC"> alter interactive database</font><font color="#E5E5E5"> and</font>

1089
00:40:33,200 --> 00:40:37,589
second in<font color="#E5E5E5"> the field you can</font><font color="#CCCCCC"> be special</font>

1090
00:40:36,270 --> 00:40:38,910
all you want<font color="#E5E5E5"> doesn't mean you can access</font>

1091
00:40:37,590 --> 00:40:40,680
anything<font color="#CCCCCC"> it means</font><font color="#E5E5E5"> you can give yourself</font>

1092
00:40:38,910 --> 00:40:44,580
access to anything<font color="#E5E5E5"> it to</font><font color="#CCCCCC"> do something</font>

1093
00:40:40,680 --> 00:40:47,339
<font color="#CCCCCC">and figuring out which resource you need</font>

1094
00:40:44,580 --> 00:40:49,049
<font color="#E5E5E5">to access to in order</font><font color="#CCCCCC"> to you know get</font>

1095
00:40:47,340 --> 00:40:50,760
<font color="#E5E5E5">rid</font><font color="#CCCCCC"> of business get business files and</font>

1096
00:40:49,050 --> 00:40:52,830
all that stuff is hard<font color="#E5E5E5"> on that make them</font>

1097
00:40:50,760 --> 00:40:54,570
like doing<font color="#E5E5E5"> stuff on right calf</font>

1098
00:40:52,830 --> 00:40:56,069
<font color="#CCCCCC">manipulation Rock</font><font color="#E5E5E5"> F is very</font><font color="#CCCCCC"> hardcore</font>

1099
00:40:54,570 --> 00:40:58,380
stuff like<font color="#E5E5E5"> some companies have a</font>

1100
00:40:56,070 --> 00:40:59,700
dedicated<font color="#CCCCCC"> rack F administrator to do</font>

1101
00:40:58,380 --> 00:41:02,160
this stuff and you come in as a pen

1102
00:40:59,700 --> 00:41:04,770
tester<font color="#E5E5E5"> and try to mess up the rules to</font>

1103
00:41:02,160 --> 00:41:06,779
access<font color="#E5E5E5"> this business app it's</font><font color="#CCCCCC"> helped</font><font color="#E5E5E5"> so</font>

1104
00:41:04,770 --> 00:41:08,640
it kind of troubled me a<font color="#CCCCCC"> lot because</font><font color="#E5E5E5"> I</font>

1105
00:41:06,780 --> 00:41:10,290
wanted to<font color="#E5E5E5"> get some business data I</font>

1106
00:41:08,640 --> 00:41:12,029
<font color="#CCCCCC">wanted you</font><font color="#E5E5E5"> know to really get something</font>

1107
00:41:10,290 --> 00:41:15,270
<font color="#E5E5E5">out of the mainframe not just show</font><font color="#CCCCCC"> that</font>

1108
00:41:12,030 --> 00:41:17,700
it<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be you can be</font><font color="#E5E5E5"> rude so I decided</font>

1109
00:41:15,270 --> 00:41:20,550
<font color="#CCCCCC">to write a program</font><font color="#E5E5E5"> that does what</font>

1110
00:41:17,700 --> 00:41:23,310
basically incognito<font color="#CCCCCC"> on Windows does so</font>

1111
00:41:20,550 --> 00:41:24,930
it<font color="#CCCCCC"> internet on Windows</font><font color="#E5E5E5"> steals the token</font>

1112
00:41:23,310 --> 00:41:27,450
the scripture so you can impersonate

1113
00:41:24,930 --> 00:41:29,609
<font color="#E5E5E5">other users</font><font color="#CCCCCC"> so same thing on z/os I</font>

1114
00:41:27,450 --> 00:41:31,230
decided to do the same thing and like I

1115
00:41:29,610 --> 00:41:32,640
said<font color="#E5E5E5"> the choke in the script or the</font>

1116
00:41:31,230 --> 00:41:36,570
<font color="#CCCCCC">equivalent to the token</font><font color="#E5E5E5"> descriptor is</font>

1117
00:41:32,640 --> 00:41:39,390
the AC<font color="#E5E5E5"> so the idea is try to</font><font color="#CCCCCC"> program</font>

1118
00:41:36,570 --> 00:41:40,950
that will dive into virtual<font color="#E5E5E5"> a foreign</font>

1119
00:41:39,390 --> 00:41:43,680
virtual address space<font color="#CCCCCC"> before</font><font color="#E5E5E5"> an user</font>

1120
00:41:40,950 --> 00:41:46,230
<font color="#E5E5E5">grab the AC e the token descriptor and</font>

1121
00:41:43,680 --> 00:41:50,100
<font color="#E5E5E5">then copy it</font><font color="#CCCCCC"> over into</font><font color="#E5E5E5"> our own session</font>

1122
00:41:46,230 --> 00:41:51,870
<font color="#E5E5E5">so the AC e again</font><font color="#CCCCCC"> is 168 bytes or</font><font color="#E5E5E5"> so of</font>

1123
00:41:50,100 --> 00:41:54,060
<font color="#E5E5E5">data so you have user ID group names</font>

1124
00:41:51,870 --> 00:41:57,420
user flag privileges terminal

1125
00:41:54,060 --> 00:41:59,340
information<font color="#E5E5E5"> like pointers</font><font color="#CCCCCC"> etc</font><font color="#E5E5E5"> and the</font>

1126
00:41:57,420 --> 00:42:01,770
idea is<font color="#CCCCCC"> to copy these fields from</font><font color="#E5E5E5"> a</font>

1127
00:41:59,340 --> 00:42:05,190
foreign<font color="#E5E5E5"> virtual address space</font><font color="#CCCCCC"> obviously</font>

1128
00:42:01,770 --> 00:42:08,160
<font color="#CCCCCC">not so easy</font><font color="#E5E5E5"> because like I</font><font color="#CCCCCC"> said each</font>

1129
00:42:05,190 --> 00:42:09,780
user in each program runs in their own

1130
00:42:08,160 --> 00:42:13,680
<font color="#E5E5E5">virtual address space so</font><font color="#CCCCCC"> you cannot just</font>

1131
00:42:09,780 --> 00:42:15,210
<font color="#E5E5E5">dive in into any a foreign virtual</font>

1132
00:42:13,680 --> 00:42:16,089
address space like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and in Windows</font>

1133
00:42:15,210 --> 00:42:17,710
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> I'm</font>

1134
00:42:16,090 --> 00:42:19,120
gonna say it's easy but it's practical

1135
00:42:17,710 --> 00:42:20,650
you have api's to do it you have you

1136
00:42:19,120 --> 00:42:22,870
know right process<font color="#CCCCCC"> memory</font><font color="#E5E5E5"> we process</font>

1137
00:42:20,650 --> 00:42:24,880
memory<font color="#E5E5E5"> up</font><font color="#CCCCCC"> and process memory</font><font color="#E5E5E5"> on z/os you</font>

1138
00:42:22,870 --> 00:42:28,890
have zip zero nada you have assembly

1139
00:42:24,880 --> 00:42:31,600
instructions<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you're that brave and so</font>

1140
00:42:28,890 --> 00:42:33,580
so the same so basically I decided<font color="#CCCCCC"> to</font>

1141
00:42:31,600 --> 00:42:36,040
write<font color="#E5E5E5"> you know a script that will do all</font>

1142
00:42:33,580 --> 00:42:37,630
<font color="#E5E5E5">this stuff so you know you can easily do</font>

1143
00:42:36,040 --> 00:42:40,630
some proof of concepts and<font color="#E5E5E5"> use it in</font>

1144
00:42:37,630 --> 00:42:42,160
<font color="#E5E5E5">your pen tests in</font><font color="#CCCCCC"> engagement</font><font color="#E5E5E5"> so yeah</font>

1145
00:42:40,630 --> 00:42:43,840
just<font color="#E5E5E5"> like on</font><font color="#CCCCCC"> Windows and</font><font color="#E5E5E5"> Linux you have</font>

1146
00:42:42,160 --> 00:42:47,230
some address space<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are shared some</font>

1147
00:42:43,840 --> 00:42:50,650
are private<font color="#E5E5E5"> etc etc and the AC e is</font>

1148
00:42:47,230 --> 00:42:53,710
located exactly<font color="#E5E5E5"> here so between the HK</font>

1149
00:42:50,650 --> 00:42:56,080
<font color="#E5E5E5">and</font><font color="#CCCCCC"> 24k so in the user region area and</font>

1150
00:42:53,710 --> 00:42:59,440
like I said<font color="#E5E5E5"> the idea is to run a program</font>

1151
00:42:56,080 --> 00:43:01,210
that will go into kernel mode issue<font color="#E5E5E5"> some</font>

1152
00:42:59,440 --> 00:43:04,930
you know special instructions that go

1153
00:43:01,210 --> 00:43:07,060
into cross memory mode<font color="#CCCCCC"> copy DAC e is</font><font color="#E5E5E5"> in</font>

1154
00:43:04,930 --> 00:43:08,680
some special instructions<font color="#CCCCCC"> bring them</font>

1155
00:43:07,060 --> 00:43:10,930
back in<font color="#E5E5E5"> this primary virtual address</font>

1156
00:43:08,680 --> 00:43:14,049
space<font color="#E5E5E5"> then go into kernel mode again</font>

1157
00:43:10,930 --> 00:43:16,839
<font color="#E5E5E5">dive in cross memory operations</font><font color="#CCCCCC"> pass the</font>

1158
00:43:14,050 --> 00:43:19,480
AC<font color="#E5E5E5"> that we just got earlier so this is</font>

1159
00:43:16,840 --> 00:43:21,370
basically the script<font color="#E5E5E5"> does in its essence</font>

1160
00:43:19,480 --> 00:43:23,260
<font color="#E5E5E5">and this is just small demo again it's</font>

1161
00:43:21,370 --> 00:43:25,240
on github it's called alpha itself<font color="#E5E5E5"> and</font>

1162
00:43:23,260 --> 00:43:29,860
you can see here<font color="#CCCCCC"> that list user</font><font color="#E5E5E5"> my user</font>

1163
00:43:25,240 --> 00:43:32,259
is<font color="#CCCCCC"> is special right here but if I want</font>

1164
00:43:29,860 --> 00:43:33,910
to access the file that's<font color="#CCCCCC"> called IBM</font>

1165
00:43:32,260 --> 00:43:37,180
user that<font color="#CCCCCC"> test which</font><font color="#E5E5E5"> is owned by IBM</font>

1166
00:43:33,910 --> 00:43:38,859
user<font color="#E5E5E5"> you can see here the security</font>

1167
00:43:37,180 --> 00:43:40,750
verification fail<font color="#E5E5E5"> I do not have to right</font>

1168
00:43:38,860 --> 00:43:43,060
now<font color="#CCCCCC"> I can add a</font><font color="#E5E5E5"> record</font><font color="#CCCCCC"> through to let</font><font color="#E5E5E5"> me</font>

1169
00:43:40,750 --> 00:43:44,440
to allow access<font color="#E5E5E5"> but I do not want to</font>

1170
00:43:43,060 --> 00:43:47,740
touch the<font color="#CCCCCC"> rack of rules okay</font>

1171
00:43:44,440 --> 00:43:51,490
so what I do is basically I execute my

1172
00:43:47,740 --> 00:43:52,720
script<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the list of operands and you</font>

1173
00:43:51,490 --> 00:43:54,160
can see here<font color="#E5E5E5"> that these are</font><font color="#CCCCCC"> all the</font>

1174
00:43:52,720 --> 00:43:55,899
programs<font color="#CCCCCC"> that are running</font><font color="#E5E5E5"> and all the</font>

1175
00:43:54,160 --> 00:43:57,700
users<font color="#CCCCCC"> that are currently connected you</font>

1176
00:43:55,900 --> 00:44:01,630
<font color="#E5E5E5">can see here that IBM user is connected</font>

1177
00:43:57,700 --> 00:44:04,480
<font color="#E5E5E5">so we can relaunch the tool and this</font>

1178
00:44:01,630 --> 00:44:06,970
time set IBM user as target and specify

1179
00:44:04,480 --> 00:44:10,540
an IPF library<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we can write U or</font>

1180
00:44:06,970 --> 00:44:13,419
SVC that is<font color="#CCCCCC"> vulnerable and then we</font>

1181
00:44:10,540 --> 00:44:16,480
become a you know IBM user<font color="#E5E5E5"> as you can</font>

1182
00:44:13,420 --> 00:44:18,580
see here and once we<font color="#E5E5E5"> are IBM user now we</font>

1183
00:44:16,480 --> 00:44:21,130
can access the file<font color="#E5E5E5"> and we did not touch</font>

1184
00:44:18,580 --> 00:44:23,259
<font color="#CCCCCC">the</font><font color="#E5E5E5"> rack</font><font color="#CCCCCC"> F database</font><font color="#E5E5E5"> that's the the</font>

1185
00:44:21,130 --> 00:44:24,910
beauty of<font color="#E5E5E5"> the script and here I'm gonna</font>

1186
00:44:23,260 --> 00:44:26,110
<font color="#E5E5E5">launch the GUI so we can</font><font color="#CCCCCC"> actually see</font>

1187
00:44:24,910 --> 00:44:28,359
the contents of the file but it's

1188
00:44:26,110 --> 00:44:29,770
basically some operation as before so

1189
00:44:28,360 --> 00:44:31,420
view file and you<font color="#E5E5E5"> can</font>

1190
00:44:29,770 --> 00:44:36,580
to hear that<font color="#CCCCCC"> hey we have access to</font><font color="#E5E5E5"> the</font>

1191
00:44:31,420 --> 00:44:38,650
file so in summary<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> if you like</font>

1192
00:44:36,580 --> 00:44:40,779
you have<font color="#E5E5E5"> to get some key points out of</font>

1193
00:44:38,650 --> 00:44:42,640
this<font color="#E5E5E5"> talk it's just a</font><font color="#CCCCCC"> mainframes are</font><font color="#E5E5E5"> not</font>

1194
00:44:40,780 --> 00:44:45,730
legacy it's a lot to say that mainframe

1195
00:44:42,640 --> 00:44:48,250
<font color="#E5E5E5">our legacy they power the you know the</font>

1196
00:44:45,730 --> 00:44:50,680
world economy without say<font color="#CCCCCC"> 87 percent of</font>

1197
00:44:48,250 --> 00:44:52,390
credit<font color="#CCCCCC"> card transactions run through</font>

1198
00:44:50,680 --> 00:44:54,580
<font color="#CCCCCC">mainframes so we should care about</font><font color="#E5E5E5"> them</font>

1199
00:44:52,390 --> 00:44:56,560
<font color="#CCCCCC">as spent jesters as security researchers</font>

1200
00:44:54,580 --> 00:44:58,480
as clients whatever<font color="#E5E5E5"> we should look into</font>

1201
00:44:56,560 --> 00:45:00,549
this stuff<font color="#E5E5E5"> and</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> really the Wild West</font>

1202
00:44:58,480 --> 00:45:03,460
because<font color="#E5E5E5"> like I</font><font color="#CCCCCC"> said many</font><font color="#E5E5E5"> concepts many</font>

1203
00:45:00,550 --> 00:45:04,720
security by obscurity stuff so like it's

1204
00:45:03,460 --> 00:45:08,920
<font color="#E5E5E5">really the Wild West and we can have</font>

1205
00:45:04,720 --> 00:45:10,509
some<font color="#CCCCCC"> really great</font><font color="#E5E5E5"> fun and yeah</font><font color="#CCCCCC"> like now</font>

1206
00:45:08,920 --> 00:45:12,040
there<font color="#E5E5E5"> are tools</font><font color="#CCCCCC"> open test mainframes so</font>

1207
00:45:10,510 --> 00:45:14,860
check them out if you want<font color="#CCCCCC"> to contribute</font>

1208
00:45:12,040 --> 00:45:16,360
please<font color="#E5E5E5"> like we can talk afterwards about</font>

1209
00:45:14,860 --> 00:45:18,940
how to set<font color="#CCCCCC"> up the platform</font><font color="#E5E5E5"> and how to</font>

1210
00:45:16,360 --> 00:45:23,110
get access<font color="#E5E5E5"> to it and how to write tools</font>

1211
00:45:18,940 --> 00:45:26,260
<font color="#E5E5E5">to do</font><font color="#CCCCCC"> it like thank these are some</font>

1212
00:45:23,110 --> 00:45:29,260
<font color="#E5E5E5">people</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I work with on the like in</font>

1213
00:45:26,260 --> 00:45:31,150
the mainframe world and yeah if you have

1214
00:45:29,260 --> 00:45:34,060
questions<font color="#E5E5E5"> please do not hesitate to</font><font color="#CCCCCC"> ask</font>

1215
00:45:31,150 --> 00:45:37,150
<font color="#E5E5E5">afterwards this basically that concludes</font>

1216
00:45:34,060 --> 00:45:42,788
my presentation<font color="#CCCCCC"> thank</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> very much</font>

1217
00:45:37,150 --> 00:45:42,789
[Applause]

