1
00:00:01,180 --> 00:00:14,730
[Music]

2
00:00:16,560 --> 00:00:18,480
hello everyone

3
00:00:18,480 --> 00:00:22,240
i'm happy my colleague

4
00:00:22,240 --> 00:00:26,080
yong kawang and i will give a talk

5
00:00:26,080 --> 00:00:29,119
about angel chrome

6
00:00:29,119 --> 00:00:32,320
shelled with a whole new security

7
00:00:32,320 --> 00:00:33,680
mitigation

8
00:00:33,680 --> 00:00:37,520
helps us escape chrome sandbox

9
00:00:37,520 --> 00:00:41,600
to exaggerate user privacy

10
00:00:41,600 --> 00:00:45,840
let's begin

11
00:00:47,039 --> 00:00:50,719
we are from tencent company the largest

12
00:00:50,719 --> 00:00:53,680
social media and entertainment company

13
00:00:53,680 --> 00:00:56,320
in china

14
00:00:56,559 --> 00:01:00,239
and my department tessense security

15
00:01:00,239 --> 00:01:04,959
xiaohu lab a land security research lab

16
00:01:04,959 --> 00:01:08,880
based in beijing we focus on

17
00:01:08,880 --> 00:01:12,159
various applied and the real world

18
00:01:12,159 --> 00:01:15,360
security research

19
00:01:15,360 --> 00:01:18,640
yong koa and i are members

20
00:01:18,640 --> 00:01:23,040
of mobile security team of our lab

21
00:01:23,040 --> 00:01:27,840
many focused on android by hearty

22
00:01:31,280 --> 00:01:35,439
this is outline of our work

23
00:01:35,520 --> 00:01:38,960
we will introduce a work from following

24
00:01:38,960 --> 00:01:41,679
five part

25
00:01:42,320 --> 00:01:46,479
first we will show a brief introduction

26
00:01:46,479 --> 00:01:55,680
about chrome security mechanism

27
00:01:55,680 --> 00:01:58,880
this is an evolution of broader process

28
00:01:58,880 --> 00:02:01,679
architecture

29
00:02:02,159 --> 00:02:06,399
before 2007 other browsers

30
00:02:06,399 --> 00:02:09,840
a single process

31
00:02:10,560 --> 00:02:14,400
since 2008

32
00:02:14,400 --> 00:02:17,599
chrome became the first multi-process

33
00:02:17,599 --> 00:02:20,160
browser

34
00:02:20,640 --> 00:02:25,520
and now the architecture of chrome

35
00:02:25,520 --> 00:02:30,319
has changed a little for example

36
00:02:30,319 --> 00:02:33,440
the network process a auto browser

37
00:02:33,440 --> 00:02:34,840
process

38
00:02:34,840 --> 00:02:37,840
now

39
00:02:41,120 --> 00:02:45,120
now take a look at basic security policy

40
00:02:45,120 --> 00:02:47,200
or chrome

41
00:02:47,200 --> 00:02:50,640
same arrange policy

42
00:02:50,640 --> 00:02:54,239
a basic security policy of chrome

43
00:02:54,239 --> 00:02:57,280
protect the web resource from

44
00:02:57,280 --> 00:03:00,480
different range

45
00:03:01,200 --> 00:03:05,680
and the cross arrange resource sharing

46
00:03:05,680 --> 00:03:08,879
and no other course can

47
00:03:08,879 --> 00:03:12,159
relax the restriction or same arrange

48
00:03:12,159 --> 00:03:15,280
policy slightly

49
00:03:16,159 --> 00:03:19,440
it means some cross arranged

50
00:03:19,440 --> 00:03:23,599
requests can be upload

51
00:03:28,319 --> 00:03:30,480
there are some special particles on

52
00:03:30,480 --> 00:03:31,760
angel

53
00:03:31,760 --> 00:03:35,519
such as the content through content

54
00:03:35,519 --> 00:03:36,959
particle

55
00:03:36,959 --> 00:03:40,959
we can access media files on android

56
00:03:40,959 --> 00:03:45,440
by media or download provider

57
00:03:45,760 --> 00:03:48,799
how about course policy between

58
00:03:48,799 --> 00:03:52,799
content http or https

59
00:03:52,799 --> 00:04:01,840
and the fail particle angel chrome

60
00:04:01,840 --> 00:04:05,599
there is a case about contained particle

61
00:04:05,599 --> 00:04:09,519
androchrome george and the robot

62
00:04:09,519 --> 00:04:12,640
perform an attack chain or chrome

63
00:04:12,640 --> 00:04:16,798
in 2017

64
00:04:20,720 --> 00:04:25,120
their attack chain contains three stamps

65
00:04:25,120 --> 00:04:29,840
first download the payload

66
00:04:30,560 --> 00:04:33,759
then jump to the content domain from

67
00:04:33,759 --> 00:04:36,960
http domain

68
00:04:38,080 --> 00:04:41,440
finally read other resource using

69
00:04:41,440 --> 00:04:42,160
content

70
00:04:42,160 --> 00:04:44,720
protocol

71
00:04:45,440 --> 00:04:48,720
and that time course think

72
00:04:48,720 --> 00:04:53,040
about content is very weak

73
00:04:55,120 --> 00:05:00,400
after that chain chrome do some fix

74
00:05:01,360 --> 00:05:05,199
now the payload

75
00:05:05,199 --> 00:05:08,639
which downloading same one will be

76
00:05:08,639 --> 00:05:11,680
renamed to mh team

77
00:05:11,680 --> 00:05:15,280
and the javascript code will be

78
00:05:15,280 --> 00:05:17,758
removed

79
00:05:18,800 --> 00:05:24,639
the jump in stamp 2 will be intercepted

80
00:05:24,639 --> 00:05:27,759
and the across domain access

81
00:05:27,759 --> 00:05:32,160
in stem 3 is also blocked

82
00:05:32,160 --> 00:05:36,840
so the fortune is broken

83
00:05:36,840 --> 00:05:39,840
completely

84
00:05:41,840 --> 00:05:45,199
but during our research

85
00:05:45,199 --> 00:05:48,160
we found that

86
00:05:48,400 --> 00:05:52,160
the restriction in stem 3 disappear

87
00:05:52,160 --> 00:05:56,240
after an update or chrome

88
00:05:59,360 --> 00:06:02,960
what happened why the course between

89
00:06:02,960 --> 00:06:04,400
content domain

90
00:06:04,400 --> 00:06:09,120
failed since version 79

91
00:06:09,520 --> 00:06:12,280
this is due to a change of course

92
00:06:12,280 --> 00:06:14,400
implementation

93
00:06:14,400 --> 00:06:18,000
in the or course

94
00:06:18,639 --> 00:06:22,240
let's learn more about it

95
00:06:26,000 --> 00:06:31,199
or of course a new course implementation

96
00:06:31,199 --> 00:06:34,240
introduced to saw some historical design

97
00:06:34,240 --> 00:06:36,479
problem

98
00:06:36,479 --> 00:06:40,318
and to be more secure

99
00:06:40,800 --> 00:06:44,720
before this change chrome implement

100
00:06:44,720 --> 00:06:48,080
course in the render engine

101
00:06:48,080 --> 00:06:53,280
blink running in a render process

102
00:06:53,919 --> 00:06:57,680
or calls means course will be moved to

103
00:06:57,680 --> 00:07:00,880
network service running in a

104
00:07:00,880 --> 00:07:05,440
separate process let's look at it

105
00:07:05,440 --> 00:07:08,479
in chrome angel

106
00:07:12,240 --> 00:07:15,680
before version 79

107
00:07:15,680 --> 00:07:19,919
all our costs are not completely done

108
00:07:19,919 --> 00:07:23,280
but we can turn on a switch

109
00:07:23,280 --> 00:07:26,800
named auto blink course

110
00:07:26,800 --> 00:07:30,400
to experience this feature will handle

111
00:07:30,400 --> 00:07:32,400
time

112
00:07:32,400 --> 00:07:35,919
in version 79 or calls

113
00:07:35,919 --> 00:07:39,280
and undone and the switch

114
00:07:39,280 --> 00:07:42,000
disappear

115
00:07:42,479 --> 00:07:45,599
but actually some

116
00:07:45,599 --> 00:07:48,160
course check are not moved to network

117
00:07:48,160 --> 00:07:51,440
service completely

118
00:07:51,440 --> 00:07:54,319
show me your code

119
00:07:57,599 --> 00:08:00,639
the code shows enforcing about

120
00:08:00,639 --> 00:08:03,759
resource request from

121
00:08:03,759 --> 00:08:07,520
render process to browser or network

122
00:08:07,520 --> 00:08:11,039
process if

123
00:08:11,039 --> 00:08:14,560
auto blink course enabled

124
00:08:14,560 --> 00:08:17,919
enforcing in may cross range

125
00:08:17,919 --> 00:08:26,000
access request will be removed

126
00:08:26,000 --> 00:08:29,360
this code shows the enforcing about

127
00:08:29,360 --> 00:08:33,440
resource response to render

128
00:08:33,440 --> 00:08:37,599
if auto blink cores enabled

129
00:08:37,599 --> 00:08:40,559
will escape from the following enforcing

130
00:08:40,559 --> 00:08:42,958
again

131
00:08:46,640 --> 00:08:50,320
unfortunately to check mentioned

132
00:08:50,320 --> 00:08:55,519
before and not move to network service

133
00:08:55,519 --> 00:08:58,800
the thing turn off in render

134
00:08:58,800 --> 00:09:02,959
doesn't appear in network service

135
00:09:02,959 --> 00:09:09,839
let's leave a hole in or calls

136
00:09:10,000 --> 00:09:14,160
it means before auto bling calls

137
00:09:14,160 --> 00:09:17,839
enable the request between content

138
00:09:17,839 --> 00:09:18,720
domain

139
00:09:18,720 --> 00:09:22,240
will be blocked because of the course

140
00:09:22,240 --> 00:09:23,360


141
00:09:23,360 --> 00:09:26,560
in render process

142
00:09:28,800 --> 00:09:33,360
but with all closing able

143
00:09:33,360 --> 00:09:36,880
the change of content request

144
00:09:36,880 --> 00:09:40,320
disappear completely so

145
00:09:40,320 --> 00:09:43,519
content can cross to may access other

146
00:09:43,519 --> 00:09:44,959
content

147
00:09:44,959 --> 00:09:48,160
without any check

148
00:09:49,519 --> 00:09:52,800
this is a code example to read

149
00:09:52,800 --> 00:09:57,040
media field by ajax request

150
00:09:57,200 --> 00:10:02,160
and we can set the field content to our

151
00:10:02,839 --> 00:10:05,040
server

152
00:10:05,040 --> 00:10:10,240
the hole also exists in android view

153
00:10:10,240 --> 00:10:13,680
we can trigger this bug as long as

154
00:10:13,680 --> 00:10:17,519
set low content access enabled

155
00:10:17,519 --> 00:10:20,720
without set law field access from

156
00:10:20,720 --> 00:10:25,360
failures or set a law universal access

157
00:10:25,360 --> 00:10:29,360
from failures enabled

158
00:10:31,120 --> 00:10:34,560
in short our course is introduced

159
00:10:34,560 --> 00:10:38,160
in chrome for android and then security

160
00:10:38,160 --> 00:10:40,959
mitigation

161
00:10:41,680 --> 00:10:44,640
but we found a bug in the mitigation

162
00:10:44,640 --> 00:10:45,760
manual

163
00:10:45,760 --> 00:10:50,560
just like a hole in the shell

164
00:10:51,200 --> 00:10:55,040
now let my colleague yonko wang

165
00:10:55,040 --> 00:10:58,160
show you the following part

166
00:10:58,160 --> 00:11:01,680
thank you hello everyone i'm yunka wang

167
00:11:01,680 --> 00:11:04,399
my colleague have been suzaku we found

168
00:11:04,399 --> 00:11:05,760
incro

169
00:11:05,760 --> 00:11:09,920
let's go on now we have across to me

170
00:11:09,920 --> 00:11:11,519
access back

171
00:11:11,519 --> 00:11:15,040
but it's not enough for us

172
00:11:15,040 --> 00:11:17,760
we want about the chain to attack chrome

173
00:11:17,760 --> 00:11:18,959
for android

174
00:11:18,959 --> 00:11:21,680
remotely

175
00:11:22,160 --> 00:11:24,720
so let's begin to detail our first

176
00:11:24,720 --> 00:11:29,120
exploit chain

177
00:11:29,120 --> 00:11:32,640
in step one we should download html

178
00:11:32,640 --> 00:11:34,000
payload file

179
00:11:34,000 --> 00:11:38,880
to external storage automatically

180
00:11:38,880 --> 00:11:42,959
and we tried many ways with hif

181
00:11:42,959 --> 00:11:47,040
and download attribute of the atmr

182
00:11:47,040 --> 00:11:49,680
a tag

183
00:11:50,079 --> 00:11:53,440
and simulated click the a tag

184
00:11:53,440 --> 00:11:57,040
by javascript

185
00:11:57,040 --> 00:12:00,480
and we found that in this way

186
00:12:00,480 --> 00:12:04,480
chrome will open a dot html file

187
00:12:04,480 --> 00:12:11,839
directly so this way is not okay for us

188
00:12:12,560 --> 00:12:16,959
the second way pro will download

189
00:12:16,959 --> 00:12:20,880
mhm file removing javascript code

190
00:12:20,880 --> 00:12:24,800
from the original html file

191
00:12:24,800 --> 00:12:28,959
so this will also fill us

192
00:12:31,120 --> 00:12:34,320
the third way is the same as the second

193
00:12:34,320 --> 00:12:34,959
way

194
00:12:34,959 --> 00:12:39,839
so it also fails

195
00:12:40,079 --> 00:12:43,680
and the last way chrome will download

196
00:12:43,680 --> 00:12:47,040
a dot html file to the download

197
00:12:47,040 --> 00:12:51,600
directory of external shared storage

198
00:12:51,600 --> 00:12:57,120
which many type is text slash html

199
00:12:57,120 --> 00:13:01,680
so this way works well for us

200
00:13:04,880 --> 00:13:08,320
at last we found a way to download

201
00:13:08,320 --> 00:13:13,680
html payload file without any user click

202
00:13:14,399 --> 00:13:21,120
so step 1 is done

203
00:13:21,120 --> 00:13:24,720
in step 2 we try to jump to content

204
00:13:24,720 --> 00:13:29,279
from http or https

205
00:13:29,600 --> 00:13:32,720
and this is the test result our

206
00:13:32,720 --> 00:13:33,680
cross-domain

207
00:13:33,680 --> 00:13:37,200
jumping between http file

208
00:13:37,200 --> 00:13:40,240
and content

209
00:13:40,399 --> 00:13:44,160
after georgie and robertson's work

210
00:13:44,160 --> 00:13:47,199
contained has become a lucrative

211
00:13:47,199 --> 00:13:50,639
the same as firm

212
00:13:51,760 --> 00:13:56,000
so we cannot jump content from http

213
00:13:56,000 --> 00:14:02,480
directly anymore

214
00:14:02,480 --> 00:14:04,320
when we look into the android

215
00:14:04,320 --> 00:14:07,760
manufacture file or chrome for android

216
00:14:07,760 --> 00:14:13,040
we found the intent dispatcher activity

217
00:14:13,519 --> 00:14:16,720
this activity can accept a deep link

218
00:14:16,720 --> 00:14:21,760
from browser with content at this scheme

219
00:14:21,760 --> 00:14:27,920
text slash html and date menu type

220
00:14:28,560 --> 00:14:34,000
so can we jump to content by deep link

221
00:14:37,120 --> 00:14:39,760
according to the intended filter of

222
00:14:39,760 --> 00:14:42,639
intense dispatcher activity

223
00:14:42,639 --> 00:14:45,920
we can deduce the intent object that

224
00:14:45,920 --> 00:14:50,319
should send to this activity

225
00:14:50,959 --> 00:14:54,959
the intent objects should like this

226
00:14:54,959 --> 00:14:58,399
which action is android dot

227
00:14:58,399 --> 00:15:02,959
intent dot action dot view

228
00:15:02,959 --> 00:15:06,160
category is android dot

229
00:15:06,160 --> 00:15:10,839
intent dot category dot

230
00:15:10,839 --> 00:15:13,040
browser data

231
00:15:13,040 --> 00:15:16,160
is contained calling slash slash blah

232
00:15:16,160 --> 00:15:18,240
blah

233
00:15:18,240 --> 00:15:23,839
minitab is text slash html

234
00:15:25,279 --> 00:15:28,560
so what db link can be passed to this

235
00:15:28,560 --> 00:15:28,959
tab

236
00:15:28,959 --> 00:15:32,319
oriented object

237
00:15:34,160 --> 00:15:36,639
in the light of android app deep link

238
00:15:36,639 --> 00:15:38,639
painting

239
00:15:38,639 --> 00:15:43,040
we can get the result deep link

240
00:15:44,480 --> 00:15:47,199
like this

241
00:15:53,759 --> 00:15:56,720
so we get the deep link but which

242
00:15:56,720 --> 00:15:58,000
content provider

243
00:15:58,000 --> 00:16:00,800
should we use

244
00:16:04,399 --> 00:16:07,279
at last we found the chrome file

245
00:16:07,279 --> 00:16:08,320
provider

246
00:16:08,320 --> 00:16:12,160
in the android manufacture file

247
00:16:12,160 --> 00:16:15,680
and chrome file provider extends

248
00:16:15,680 --> 00:16:20,079
file provider of android framework

249
00:16:20,079 --> 00:16:23,199
file provider will transform contained

250
00:16:23,199 --> 00:16:24,079
ui

251
00:16:24,079 --> 00:16:27,440
to fair pass by the rule defined

252
00:16:27,440 --> 00:16:36,959
in the xml file passes

253
00:16:36,959 --> 00:16:40,160
this is the zoo file for android chrome

254
00:16:40,160 --> 00:16:43,199
located in dress slash

255
00:16:43,199 --> 00:16:46,880
scammer slash file and line passes

256
00:16:46,880 --> 00:16:51,839
dot xml file or chrome apk

257
00:16:53,120 --> 00:16:56,720
and the external path represents

258
00:16:56,720 --> 00:17:00,079
the external storage path

259
00:17:00,079 --> 00:17:03,920
usually the result of environment dot

260
00:17:03,920 --> 00:17:08,639
get external storage directory api

261
00:17:10,079 --> 00:17:13,679
and the cat path represents the private

262
00:17:13,679 --> 00:17:15,039
cache directory

263
00:17:15,039 --> 00:17:19,839
of android chrome app

264
00:17:22,720 --> 00:17:26,079
for example the above contains ui

265
00:17:26,079 --> 00:17:28,960
and contains provider level will be

266
00:17:28,960 --> 00:17:29,760
mapped

267
00:17:29,760 --> 00:17:34,559
to this bar on file level

268
00:17:38,400 --> 00:17:47,840
and this is my ping for catch passwords

269
00:17:48,640 --> 00:17:51,919
when users export their saved website

270
00:17:51,919 --> 00:17:52,720
password

271
00:17:52,720 --> 00:17:56,080
from chrome your account name

272
00:17:56,080 --> 00:17:59,120
and password will be saved in this type

273
00:17:59,120 --> 00:18:00,000
of file

274
00:18:00,000 --> 00:18:03,039
in plain text

275
00:18:07,440 --> 00:18:10,960
so step 2 simply done by this android

276
00:18:10,960 --> 00:18:11,360
app

277
00:18:11,360 --> 00:18:15,840
deep link

278
00:18:17,600 --> 00:18:21,280
but during our research android queue

279
00:18:21,280 --> 00:18:24,320
jumps out and

280
00:18:24,320 --> 00:18:27,679
white script mitigation called scooped

281
00:18:27,679 --> 00:18:31,200
storage broke our step 2 our android

282
00:18:31,200 --> 00:18:33,520
screen

283
00:18:35,760 --> 00:18:38,960
what is scope storage

284
00:18:38,960 --> 00:18:42,000
it is quality mitigation android

285
00:18:42,000 --> 00:18:47,520
shared storage is borrowed by sandbox

286
00:18:48,960 --> 00:18:52,400
and apps are limited to only

287
00:18:52,400 --> 00:18:56,240
access shared files they own

288
00:18:56,240 --> 00:18:59,120
and cannot access shared storage

289
00:18:59,120 --> 00:19:00,400
directly

290
00:19:00,400 --> 00:19:04,400
for example by far api

291
00:19:06,400 --> 00:19:09,600
as owning can do it by media provider

292
00:19:09,600 --> 00:19:11,840
app

293
00:19:15,440 --> 00:19:18,080
if we try to jump to content by this

294
00:19:18,080 --> 00:19:19,600
deep link

295
00:19:19,600 --> 00:19:24,880
chrome so that are not found

296
00:19:24,880 --> 00:19:28,240
the reason is that chrome file provider

297
00:19:28,240 --> 00:19:32,880
uses file api to read the payload file

298
00:19:32,880 --> 00:19:38,320
which is forbidding or android thing

299
00:19:38,320 --> 00:19:42,080
so this deep link does not work anymore

300
00:19:42,080 --> 00:19:45,039
on android thing

301
00:19:48,559 --> 00:19:52,240
how to bypass scope storage

302
00:19:52,240 --> 00:19:56,640
we may can use this content ui

303
00:19:58,720 --> 00:20:01,760
chrome request to media provider by this

304
00:20:01,760 --> 00:20:03,760
content ui

305
00:20:03,760 --> 00:20:07,440
then media provider returns a pacifier

306
00:20:07,440 --> 00:20:08,799
descriptor

307
00:20:08,799 --> 00:20:13,760
of the requested file backed crawl

308
00:20:14,400 --> 00:20:17,039
because the payload file is downloaded

309
00:20:17,039 --> 00:20:20,000
by chrome itself

310
00:20:20,000 --> 00:20:23,039
so the enforcing from media provider

311
00:20:23,039 --> 00:20:25,840
is all right

312
00:20:28,320 --> 00:20:32,559
but another problem comes out

313
00:20:32,559 --> 00:20:35,520
we cannot predict the id of the

314
00:20:35,520 --> 00:20:39,039
downloaded payload file

315
00:20:40,080 --> 00:20:44,240
and this way by script element

316
00:20:44,240 --> 00:20:49,840
to probe id is not working anymore

317
00:20:50,159 --> 00:20:53,360
because we cannot access content

318
00:20:53,360 --> 00:20:56,399
under http

319
00:21:01,600 --> 00:21:04,960
inspired by hip spray in banana heap

320
00:21:04,960 --> 00:21:08,880
exploit technology we came up with an

321
00:21:08,880 --> 00:21:11,039
idea

322
00:21:11,039 --> 00:21:13,840
firstly

323
00:21:14,159 --> 00:21:17,039
we can download multiple payload files

324
00:21:17,039 --> 00:21:17,440
to

325
00:21:17,440 --> 00:21:21,120
improve success rate

326
00:21:21,520 --> 00:21:24,320
as long as we hit one of the downloaded

327
00:21:24,320 --> 00:21:27,120
payload files

328
00:21:27,120 --> 00:21:31,840
we can jump successfully

329
00:21:34,640 --> 00:21:38,240
but chrome blocked us if we try to

330
00:21:38,240 --> 00:21:38,880
download

331
00:21:38,880 --> 00:21:43,440
multiple files in the sim type

332
00:21:43,840 --> 00:21:47,120
like the picture shows

333
00:21:49,840 --> 00:21:52,880
come back to the android file or chrome

334
00:21:52,880 --> 00:21:55,600
for android

335
00:21:55,840 --> 00:21:59,600
we found that we can jump to http

336
00:21:59,600 --> 00:22:02,720
by deep link just like jumping to

337
00:22:02,720 --> 00:22:05,360
content

338
00:22:08,000 --> 00:22:11,039
by this deep link chrome will open

339
00:22:11,039 --> 00:22:15,919
this http url in a new tab

340
00:22:16,320 --> 00:22:20,000
so first we download one panel file

341
00:22:20,000 --> 00:22:23,840
automatically then

342
00:22:23,840 --> 00:22:28,159
jump back to text text.html itself

343
00:22:28,159 --> 00:22:31,200
by this deep link

344
00:22:31,360 --> 00:22:34,480
we can download multiple payload files

345
00:22:34,480 --> 00:22:41,840
without any blocking

346
00:22:42,480 --> 00:22:45,679
after download multiple payload files

347
00:22:45,679 --> 00:22:49,600
we can jump to content by the steep link

348
00:22:49,600 --> 00:22:55,840
with ascending my number to id

349
00:22:57,840 --> 00:23:01,760
so step 2 works again

350
00:23:04,320 --> 00:23:07,600
when android 11 comes out it

351
00:23:07,600 --> 00:23:10,480
allowed us to use file api to access

352
00:23:10,480 --> 00:23:13,600
shared storage again

353
00:23:13,600 --> 00:23:16,799
so these two deep links are all key on

354
00:23:16,799 --> 00:23:19,840
android 11.

355
00:23:21,520 --> 00:23:25,840
good news or venues we don't know

356
00:23:30,159 --> 00:23:32,559
but it's protein the herb or shield in

357
00:23:32,559 --> 00:23:33,280
crow

358
00:23:33,280 --> 00:23:36,559
that my colleague have been shown before

359
00:23:36,559 --> 00:23:40,799
73 is okay already for us

360
00:23:44,799 --> 00:23:50,159
job seemed that already

361
00:23:50,159 --> 00:23:54,080
but the update of chrome 83

362
00:23:54,080 --> 00:23:58,080
broke our export chain again

363
00:23:58,480 --> 00:24:02,240
jumping to content from http in step 2

364
00:24:02,240 --> 00:24:05,600
was blocked

365
00:24:05,600 --> 00:24:08,159
we must find another way to bypass the

366
00:24:08,159 --> 00:24:10,720
blocking

367
00:24:13,600 --> 00:24:17,600
what happened we dive into the

368
00:24:17,600 --> 00:24:21,520
deep link passing code or android claw

369
00:24:21,520 --> 00:24:24,640
chrome will call intent pass

370
00:24:24,640 --> 00:24:28,240
intent dot pass ui function to pass deep

371
00:24:28,240 --> 00:24:29,039
link

372
00:24:29,039 --> 00:24:34,240
to maintain object direct effortlessly

373
00:24:35,440 --> 00:24:39,840
then do some filter on the intent

374
00:24:43,760 --> 00:24:47,440
at last we found two checking points

375
00:24:47,440 --> 00:24:50,559
it should override url loading

376
00:24:50,559 --> 00:24:53,440
internal function

377
00:24:53,840 --> 00:24:57,120
these two taking real field intent

378
00:24:57,120 --> 00:24:58,000
containing

379
00:24:58,000 --> 00:25:01,840
fair uncontained scale

380
00:25:02,080 --> 00:25:05,440
so chrome will block the deep link

381
00:25:05,440 --> 00:25:15,520
that jumps to file or content

382
00:25:15,520 --> 00:25:19,360
so the current situation is like this

383
00:25:19,360 --> 00:25:22,799
everything is okay except for

384
00:25:22,799 --> 00:25:29,520
chrome 83

385
00:25:29,520 --> 00:25:32,559
jumping to content by deep link is

386
00:25:32,559 --> 00:25:36,559
blocked by chrome itself

387
00:25:36,559 --> 00:25:41,360
can we do it by deepening auto pro

388
00:25:41,679 --> 00:25:45,200
of course we can trigger the deep link

389
00:25:45,200 --> 00:25:48,880
from some song browser

390
00:25:52,720 --> 00:25:56,080
but the exploit chain is not

391
00:25:56,080 --> 00:25:59,679
perfect depending on

392
00:25:59,679 --> 00:26:02,240
other app

393
00:26:02,960 --> 00:26:06,080
can we do it only by the pre-installed

394
00:26:06,080 --> 00:26:06,799
apps

395
00:26:06,799 --> 00:26:11,440
on pixel devices

396
00:26:11,440 --> 00:26:14,640
maybe jump to one app from chrome

397
00:26:14,640 --> 00:26:17,760
then jump bike just like

398
00:26:17,760 --> 00:26:24,240
ping pong

399
00:26:24,240 --> 00:26:27,360
so if we can jump to another app by

400
00:26:27,360 --> 00:26:28,000
dipping

401
00:26:28,000 --> 00:26:31,200
a from chrome

402
00:26:31,440 --> 00:26:36,400
then jump back by dipping b like this

403
00:26:36,400 --> 00:26:40,720
then we can finish step two

404
00:26:41,360 --> 00:26:45,760
so what is the deep link a

405
00:26:50,559 --> 00:26:54,000
after a lot of searching we target

406
00:26:54,000 --> 00:26:57,679
google quick search box app

407
00:26:57,679 --> 00:27:01,120
because we found that it can accept

408
00:27:01,120 --> 00:27:04,400
intent with android app scheme

409
00:27:04,400 --> 00:27:07,840
and data ui

410
00:27:11,760 --> 00:27:14,400
after you was analyzing the google quick

411
00:27:14,400 --> 00:27:16,720
search box

412
00:27:16,720 --> 00:27:21,679
we found that it accept android appdui

413
00:27:21,679 --> 00:27:24,559
from dplink

414
00:27:26,720 --> 00:27:30,880
then pass the dui by intent dot

415
00:27:30,880 --> 00:27:35,840
path ui function

416
00:27:40,880 --> 00:27:46,480
so we can get the dipping a like this

417
00:27:47,440 --> 00:27:50,480
first we can trigger the deep link a in

418
00:27:50,480 --> 00:27:52,000
crow

419
00:27:52,000 --> 00:27:55,679
it will send deep link b to google quick

420
00:27:55,679 --> 00:27:58,399
search box app

421
00:27:58,399 --> 00:28:02,240
then google quick search box f

422
00:28:02,240 --> 00:28:05,279
passes deep link b

423
00:28:05,279 --> 00:28:08,640
jumping back to chrome

424
00:28:13,679 --> 00:28:16,640
we call this type of tag deep link

425
00:28:16,640 --> 00:28:19,840
reflection attack

426
00:28:23,039 --> 00:28:30,240
by now job really done

427
00:28:30,240 --> 00:28:33,840
let's take a look at our demo first

428
00:28:33,840 --> 00:28:36,880
demo one attacking chrome or android

429
00:28:36,880 --> 00:28:39,200
thing

430
00:28:40,880 --> 00:28:44,000
we use two devices the left one

431
00:28:44,000 --> 00:28:47,520
is pix4 as victim and

432
00:28:47,520 --> 00:28:50,960
the right one is as attacker

433
00:28:50,960 --> 00:28:54,159
first let's look at android system

434
00:28:54,159 --> 00:28:56,559
ruling

435
00:28:57,760 --> 00:29:01,120
it's android thing and

436
00:29:01,120 --> 00:29:05,760
is already up to date at that time

437
00:29:06,640 --> 00:29:10,840
then look at the wording of android

438
00:29:10,840 --> 00:29:13,039
chrome

439
00:29:13,039 --> 00:29:18,879
is 83 and also update

440
00:29:20,880 --> 00:29:23,679
we prepared a picture in the left victim

441
00:29:23,679 --> 00:29:26,080
device in other words

442
00:29:26,080 --> 00:29:29,440
and this picture does not exist

443
00:29:29,440 --> 00:29:41,840
on the right device

444
00:29:46,960 --> 00:29:50,320
then we send one short message with a

445
00:29:50,320 --> 00:29:50,880
link

446
00:29:50,880 --> 00:29:55,840
to the victim

447
00:29:58,799 --> 00:30:02,080
after victim clicks the link

448
00:30:02,080 --> 00:30:09,840
of exploit begins

449
00:30:10,960 --> 00:30:14,240
our exploit downloads multiple

450
00:30:14,240 --> 00:30:18,159
files at first then jump to one of the

451
00:30:18,159 --> 00:30:20,559
downloaded payload file

452
00:30:20,559 --> 00:30:23,678
by contain skin

453
00:30:29,559 --> 00:30:32,880
exfiltrate the picture and

454
00:30:32,880 --> 00:30:37,840
send it to our server

455
00:30:40,640 --> 00:30:43,039
on the right side we can download the

456
00:30:43,039 --> 00:30:44,080
payload

457
00:30:44,080 --> 00:30:47,360
the picture from server then

458
00:30:47,360 --> 00:30:51,440
we got the picture is the same as

459
00:30:51,440 --> 00:31:04,480
the picture on the left device

460
00:31:04,480 --> 00:31:07,679
okay this is this is the end of our term

461
00:31:07,679 --> 00:31:08,720
one

462
00:31:08,720 --> 00:31:12,159
let's look at our demo tool attacking

463
00:31:12,159 --> 00:31:13,279
android review

464
00:31:13,279 --> 00:31:16,799
on android thing we take an app called

465
00:31:16,799 --> 00:31:17,440
wish

466
00:31:17,440 --> 00:31:20,480
as an example

467
00:31:22,080 --> 00:31:24,960
just like demo one the warning of

468
00:31:24,960 --> 00:31:26,640
android c term

469
00:31:26,640 --> 00:31:32,960
is up to date let's look at it

470
00:31:32,960 --> 00:31:47,840
it's also android thing

471
00:31:50,480 --> 00:31:55,200
then look at the warning of android

472
00:31:58,840 --> 00:32:01,840
webview

473
00:32:08,159 --> 00:32:10,320
then look at the warning of android

474
00:32:10,320 --> 00:32:12,720
chrome

475
00:32:12,840 --> 00:32:15,840
h83

476
00:32:16,640 --> 00:32:20,880
look at the wording of which app

477
00:32:22,080 --> 00:32:25,360
is also up to date

478
00:32:25,919 --> 00:32:28,480
we also prepared my picture on the left

479
00:32:28,480 --> 00:32:29,919
device

480
00:32:29,919 --> 00:32:32,799
and the picture does not exist on the

481
00:32:32,799 --> 00:32:35,600
right device

482
00:32:39,760 --> 00:32:43,039
then we send a short message from the

483
00:32:43,039 --> 00:32:45,440
right

484
00:32:46,159 --> 00:32:49,360
once victim clicked the link

485
00:32:49,360 --> 00:32:53,199
our expert was triggered

486
00:32:53,760 --> 00:32:59,360
at first download multiple payload html

487
00:33:08,840 --> 00:33:11,840
files

488
00:33:13,679 --> 00:33:16,880
then jump to which app by deep link

489
00:33:16,880 --> 00:33:21,600
loading payload html file by contains

490
00:33:22,840 --> 00:33:24,159
key

491
00:33:24,159 --> 00:33:26,720
then we can get the picture on the right

492
00:33:26,720 --> 00:33:29,039
device

493
00:33:29,039 --> 00:33:33,440
it's the same with picture on the left

494
00:33:37,440 --> 00:33:42,960
okay it's in our demo two let's go on

495
00:33:43,760 --> 00:33:47,840
how are the bombs fixed for bug one

496
00:33:47,840 --> 00:33:52,159
chrome squad team won't fix it part

497
00:33:52,159 --> 00:33:57,360
2 chrome opens http url in the sim type

498
00:33:57,360 --> 00:33:59,840
so multiple files downloading can be

499
00:33:59,840 --> 00:34:02,320
blocked

500
00:34:03,120 --> 00:34:06,880
part 3 the browser marquetry is removed

501
00:34:06,880 --> 00:34:09,918
from the intent filter or we intend this

502
00:34:09,918 --> 00:34:12,960
pattern activity

503
00:34:13,440 --> 00:34:18,320
so we cannot jump to content by deep

504
00:34:18,839 --> 00:34:20,320
link

505
00:34:20,320 --> 00:34:23,520
bug 4 cross checking on content

506
00:34:23,520 --> 00:34:26,800
is enforced out of render process just

507
00:34:26,800 --> 00:34:28,960
like

508
00:34:32,839 --> 00:34:34,159
firm

509
00:34:34,159 --> 00:34:37,679
takeaways be careful when you introduce

510
00:34:37,679 --> 00:34:39,119
security mitigation

511
00:34:39,119 --> 00:34:42,719
it may be introduced bobs

512
00:34:42,719 --> 00:34:45,119
we explain the reason why news create

513
00:34:45,119 --> 00:34:46,839
mitigation leads to

514
00:34:46,839 --> 00:34:50,960
vulnerabilities we also detail

515
00:34:50,960 --> 00:34:54,159
some skills to bypass all kinds of

516
00:34:54,159 --> 00:34:57,119
mitigation in our exploit developing

517
00:34:57,119 --> 00:34:59,599
process

518
00:35:00,400 --> 00:35:03,599
and the last one the security

519
00:35:03,599 --> 00:35:06,400
of chrome is also influenced by

520
00:35:06,400 --> 00:35:07,839
surroundings

521
00:35:07,839 --> 00:35:11,520
besides itself for example

522
00:35:11,520 --> 00:35:14,640
in our deep link reflection attack we

523
00:35:14,640 --> 00:35:16,000
can attack

524
00:35:16,000 --> 00:35:20,800
chrome by google quick search box app

525
00:35:24,160 --> 00:35:27,200
thanks for the great work of gold dodie

526
00:35:27,200 --> 00:35:28,720
and robert

527
00:35:28,720 --> 00:35:32,240
their previous work helped us a lot

528
00:35:32,240 --> 00:35:36,320
thanks to chrome's great team members

529
00:35:36,320 --> 00:35:39,520
the response quickly for our bugs we

530
00:35:39,520 --> 00:35:41,839
found

531
00:35:42,480 --> 00:35:46,400
and at last thanks to our team members

532
00:35:46,400 --> 00:35:49,680
from tencent scholarship online

533
00:35:49,680 --> 00:35:52,400
they give a lot of help to us during our

534
00:35:52,400 --> 00:35:54,960
research

535
00:35:55,920 --> 00:36:00,720
okay i'll talk in aurora thank you

