1
00:00:01,180 --> 00:00:14,730
[Music]

2
00:00:16,720 --> 00:00:18,080
hello everyone

3
00:00:18,080 --> 00:00:21,199
i'm tatsumi over panasonic

4
00:00:21,199 --> 00:00:24,000
today i will talk about graph commercial

5
00:00:24,000 --> 00:00:26,000
network with suspicious communication

6
00:00:26,000 --> 00:00:27,760
pair estimation

7
00:00:27,760 --> 00:00:31,840
or industrial control systems

8
00:00:32,399 --> 00:00:36,160
after here we call our method simply gcn

9
00:00:36,160 --> 00:00:38,480
scope

10
00:00:38,480 --> 00:00:42,718
and industrial control system

11
00:00:42,840 --> 00:00:45,840
ics

12
00:00:45,840 --> 00:00:49,200
as background let's introduce notorious

13
00:00:49,200 --> 00:00:50,320
2 malwares

14
00:00:50,320 --> 00:00:54,160
triton and wannacry

15
00:00:54,160 --> 00:00:56,719
a tritone is a sophisticated malware

16
00:00:56,719 --> 00:00:58,879
targeting petrochemical facilities in

17
00:00:58,879 --> 00:01:01,680
the middle east

18
00:01:02,480 --> 00:01:05,280
although there are no evidence found

19
00:01:05,280 --> 00:01:07,760
attackers

20
00:01:07,760 --> 00:01:11,360
interrupted it system in some way

21
00:01:11,360 --> 00:01:16,560
and reached to engineering workstation

22
00:01:16,560 --> 00:01:20,080
and then they deployed marvel triton

23
00:01:20,080 --> 00:01:24,320
and triton started to configure

24
00:01:24,320 --> 00:01:28,000
sis controllers sis controllers

25
00:01:28,000 --> 00:01:30,640
are systems designed for securing

26
00:01:30,640 --> 00:01:33,280
processes

27
00:01:33,680 --> 00:01:37,759
however the attack failed

28
00:01:37,759 --> 00:01:41,840
because of deficiency of attackers

29
00:01:41,840 --> 00:01:45,840
but important things is that

30
00:01:45,840 --> 00:01:48,320
tritone may have caused critical damage

31
00:01:48,320 --> 00:01:51,439
in ics-specific

32
00:01:52,840 --> 00:01:54,000
assets

33
00:01:54,000 --> 00:01:56,960
next one is wannacry monochromatic is

34
00:01:56,960 --> 00:01:58,240
also a

35
00:01:58,240 --> 00:02:02,399
famous ransomware and wannacry's

36
00:02:02,399 --> 00:02:05,520
chronograph is not targeting ics

37
00:02:05,520 --> 00:02:09,840
but causing damage to ics

38
00:02:10,560 --> 00:02:13,840
because many devices in ics are not

39
00:02:13,840 --> 00:02:17,360
patched the damage in ics tended to be

40
00:02:17,360 --> 00:02:18,160
larger

41
00:02:18,160 --> 00:02:21,280
than ordinary id systems

42
00:02:21,280 --> 00:02:23,680
the damaged companies are from

43
00:02:23,680 --> 00:02:25,599
manufacturing companies

44
00:02:25,599 --> 00:02:29,440
railway companies to water companies

45
00:02:29,440 --> 00:02:33,040
etc and

46
00:02:33,040 --> 00:02:36,160
there are many cases where the amount of

47
00:02:36,160 --> 00:02:37,200
damage

48
00:02:37,200 --> 00:02:40,799
reaches millions of dollars

49
00:02:42,800 --> 00:02:46,000
so to mitigate the threat of cyber

50
00:02:46,000 --> 00:02:47,360
attacks

51
00:02:47,360 --> 00:02:50,400
we consider it is effective to install

52
00:02:50,400 --> 00:02:53,040
securing devices in industrial

53
00:02:53,040 --> 00:02:54,239
facilities

54
00:02:54,239 --> 00:02:57,599
and monitor them in security operation

55
00:02:57,599 --> 00:02:58,400
centers

56
00:02:58,400 --> 00:03:01,120
called sock

57
00:03:01,440 --> 00:03:04,720
we panasonic are working to monitor

58
00:03:04,720 --> 00:03:07,920
connected cars smart homes

59
00:03:07,920 --> 00:03:11,360
factories and smart buildings

60
00:03:11,360 --> 00:03:14,000
we also use ai machine learning

61
00:03:14,000 --> 00:03:15,440
algorithms

62
00:03:15,440 --> 00:03:18,800
to find a normality

63
00:03:18,800 --> 00:03:21,840
and analyze them

64
00:03:27,280 --> 00:03:30,239
although there are many ways to monitor

65
00:03:30,239 --> 00:03:31,519
ics facilities

66
00:03:31,519 --> 00:03:34,879
such as factories and buildings

67
00:03:34,879 --> 00:03:37,120
around listing is considered suitable

68
00:03:37,120 --> 00:03:40,560
algorithm for ics

69
00:03:40,560 --> 00:03:44,560
and actually many ideas for ics

70
00:03:44,560 --> 00:03:49,280
are use around listing

71
00:03:52,080 --> 00:03:53,840
so why are our listing is considered

72
00:03:53,840 --> 00:03:56,400
effective in ics

73
00:03:56,400 --> 00:03:59,599
before talking about that we explain how

74
00:03:59,599 --> 00:04:02,959
our lists are generated

75
00:04:02,959 --> 00:04:04,959
the error listing here uses the

76
00:04:04,959 --> 00:04:06,799
parabolic addresses and

77
00:04:06,799 --> 00:04:10,159
ports by using this information

78
00:04:10,159 --> 00:04:12,799
we can detect unexpected protocol not

79
00:04:12,799 --> 00:04:15,760
used between two devices

80
00:04:15,760 --> 00:04:18,880
from here we refer to the communication

81
00:04:18,880 --> 00:04:20,959
of specific two devices

82
00:04:20,959 --> 00:04:25,680
with specific depreciation port as link

83
00:04:25,680 --> 00:04:30,000
in the left figure there are two rings

84
00:04:30,000 --> 00:04:33,919
in these two devices a link of http

85
00:04:33,919 --> 00:04:37,440
and wrinkle modbus

86
00:04:41,040 --> 00:04:43,360
this arrow listing can be executed

87
00:04:43,360 --> 00:04:44,880
network-based

88
00:04:44,880 --> 00:04:47,840
and network-based monitoring is

89
00:04:47,840 --> 00:04:50,880
preferred in ics

90
00:04:50,880 --> 00:04:53,919
because network-based monitoring

91
00:04:53,919 --> 00:04:56,800
does not interfere with normal operation

92
00:04:56,800 --> 00:04:58,400
in ics

93
00:04:58,400 --> 00:05:00,880
but host-based monitoring needs some

94
00:05:00,880 --> 00:05:01,840
installation

95
00:05:01,840 --> 00:05:04,880
of softwares and may cause negative

96
00:05:04,880 --> 00:05:10,320
impact on operations

97
00:05:10,320 --> 00:05:13,440
however a serious problem occurs

98
00:05:13,440 --> 00:05:16,720
when we use our listing

99
00:05:16,720 --> 00:05:20,560
the problem of many horse alerts

100
00:05:20,560 --> 00:05:23,440
as you can see the right figure in

101
00:05:23,440 --> 00:05:24,560
reality

102
00:05:24,560 --> 00:05:27,280
there are emerges many unobserved links

103
00:05:27,280 --> 00:05:29,840
in detection phase

104
00:05:29,840 --> 00:05:32,560
in theory our listing can memorize all

105
00:05:32,560 --> 00:05:33,840
possible communication

106
00:05:33,840 --> 00:05:36,800
if running sufficiently long time but

107
00:05:36,800 --> 00:05:40,479
this is difficult for some reasons

108
00:05:40,479 --> 00:05:43,440
now the reason is that we would like to

109
00:05:43,440 --> 00:05:45,440
change the detection mode to

110
00:05:45,440 --> 00:05:48,639
uh sorry we'd like to change the mode

111
00:05:48,639 --> 00:05:53,280
from running mode to detection mode re

112
00:05:53,280 --> 00:05:55,120
we can't wait for one month or two

113
00:05:55,120 --> 00:05:56,560
months or more

114
00:05:56,560 --> 00:05:59,919
to run no racing

115
00:06:00,080 --> 00:06:02,639
there are also cases where unusual

116
00:06:02,639 --> 00:06:04,160
communication such as

117
00:06:04,160 --> 00:06:06,080
maintenance troubleshooting etcetera

118
00:06:06,080 --> 00:06:07,440
happen

119
00:06:07,440 --> 00:06:10,560
and these are difficult to observe

120
00:06:10,560 --> 00:06:13,759
during running phase

121
00:06:15,520 --> 00:06:18,800
so we propose dcn scope

122
00:06:18,800 --> 00:06:20,960
which is a method to avoid the problem

123
00:06:20,960 --> 00:06:24,239
with many false alarms

124
00:06:24,880 --> 00:06:27,199
our methods enable us to focus on your

125
00:06:27,199 --> 00:06:28,479
important alerts

126
00:06:28,479 --> 00:06:30,800
and you know know important errors

127
00:06:30,800 --> 00:06:35,840
caused by our listing

128
00:06:36,080 --> 00:06:38,319
we can see the concrete example of the

129
00:06:38,319 --> 00:06:40,160
effect of a gcn scope

130
00:06:40,160 --> 00:06:44,400
in these figures ordinary listing causes

131
00:06:44,400 --> 00:06:45,280
many

132
00:06:45,280 --> 00:06:48,639
rats like this

133
00:06:48,639 --> 00:06:51,520
the number of out of our lists are out

134
00:06:51,520 --> 00:06:54,240
of the factory of our

135
00:06:54,240 --> 00:06:57,440
factories which is 4302

136
00:06:57,440 --> 00:07:01,120
only a week the number of this

137
00:07:01,120 --> 00:07:04,400
is more than 150 times larger than the

138
00:07:04,400 --> 00:07:05,120
number of

139
00:07:05,120 --> 00:07:07,919
routes where egyptian scope is used in

140
00:07:07,919 --> 00:07:10,400
this factory

141
00:07:10,400 --> 00:07:13,120
furthermore not only adjacent scope

142
00:07:13,120 --> 00:07:16,560
reduces the number of four sarats

143
00:07:16,560 --> 00:07:19,360
but it provides us a severity measure of

144
00:07:19,360 --> 00:07:21,680
each allot

145
00:07:21,680 --> 00:07:24,160
as you can see in the case of our

146
00:07:24,160 --> 00:07:24,800
listing

147
00:07:24,800 --> 00:07:28,639
the stability is always constant

148
00:07:28,639 --> 00:07:31,840
which means communication deviates the

149
00:07:31,840 --> 00:07:36,479
arrow list run in a week

150
00:07:36,479 --> 00:07:39,919
on the other hand dcn scope shows us

151
00:07:39,919 --> 00:07:42,840
how unknowns the detected communication

152
00:07:42,840 --> 00:07:45,120
is this information

153
00:07:45,120 --> 00:07:47,440
is helpful for social analysts to

154
00:07:47,440 --> 00:07:51,440
prioritize a lot to be analyzed

155
00:07:54,800 --> 00:07:58,000
the main challenge here is how

156
00:07:58,000 --> 00:08:01,120
we can quantify the abnormality of

157
00:08:01,120 --> 00:08:04,960
our observed links in environments

158
00:08:04,960 --> 00:08:08,000
where our observed links appear even

159
00:08:08,000 --> 00:08:12,160
after running for a long time

160
00:08:12,160 --> 00:08:14,479
if we quantify the abnormality of

161
00:08:14,479 --> 00:08:16,400
unsolved links

162
00:08:16,400 --> 00:08:19,440
it is easy to judge whether an observed

163
00:08:19,440 --> 00:08:19,919
link

164
00:08:19,919 --> 00:08:22,240
is anomalous or not by simply

165
00:08:22,240 --> 00:08:23,160
thresholding

166
00:08:23,160 --> 00:08:27,840
abnormality score

167
00:08:27,919 --> 00:08:31,599
to realize quantifying abnormality score

168
00:08:31,599 --> 00:08:34,320
we take an approach to run the

169
00:08:34,320 --> 00:08:37,919
relationship of round links

170
00:08:38,240 --> 00:08:41,279
run links have source device type

171
00:08:41,279 --> 00:08:45,279
decision device type and protocol type

172
00:08:45,279 --> 00:08:48,480
if one of that link has the same type

173
00:08:48,480 --> 00:08:51,680
as landlink it can be considered

174
00:08:51,680 --> 00:08:55,600
normal running type of devices and

175
00:08:55,600 --> 00:08:56,320
protocol

176
00:08:56,320 --> 00:08:58,800
implicitly helps us to predict

177
00:08:58,800 --> 00:09:02,640
abnormality score of rings

178
00:09:02,640 --> 00:09:06,000
so in the case of this figure

179
00:09:06,000 --> 00:09:10,160
the unobserved link here

180
00:09:10,160 --> 00:09:13,200
has the same source type and destination

181
00:09:13,200 --> 00:09:13,760
type

182
00:09:13,760 --> 00:09:17,440
and protocol type of these links

183
00:09:17,440 --> 00:09:22,240
which are observed already

184
00:09:22,240 --> 00:09:25,760
but this link this modbus link

185
00:09:25,760 --> 00:09:29,920
a completely new link

186
00:09:29,920 --> 00:09:34,959
which was not observed in running phase

187
00:09:35,279 --> 00:09:38,320
so we can use this information to

188
00:09:38,320 --> 00:09:41,519
score the normality of

189
00:09:41,519 --> 00:09:44,640
unobserved links

190
00:09:48,880 --> 00:09:53,279
here are key ideas of our method

191
00:09:53,600 --> 00:09:55,760
there are two important points to

192
00:09:55,760 --> 00:09:58,240
understand the idea

193
00:09:58,240 --> 00:10:01,839
one is that a link between two devices

194
00:10:01,839 --> 00:10:05,360
is determined by the device roles

195
00:10:05,360 --> 00:10:08,480
for example hmis are

196
00:10:08,480 --> 00:10:11,519
likely to communicate using modbus with

197
00:10:11,519 --> 00:10:15,120
plc and historians are likely to

198
00:10:15,120 --> 00:10:16,240
communicate

199
00:10:16,240 --> 00:10:21,440
using sql with hmis or plcs

200
00:10:22,640 --> 00:10:25,920
the other point is a hypothesis

201
00:10:25,920 --> 00:10:29,440
that device roles can be recursively

202
00:10:29,440 --> 00:10:32,240
estimated from the role of neighboring

203
00:10:32,240 --> 00:10:34,800
devices

204
00:10:34,959 --> 00:10:37,040
graph commercial networks are designed

205
00:10:37,040 --> 00:10:38,720
to propagate latent vector

206
00:10:38,720 --> 00:10:39,760
representation

207
00:10:39,760 --> 00:10:43,600
to neighboring devices which is

208
00:10:43,600 --> 00:10:48,079
constant suitable for of idea

209
00:10:51,120 --> 00:10:54,880
so dcn scope is designed to realize

210
00:10:54,880 --> 00:10:57,600
those points

211
00:10:58,000 --> 00:11:00,240
using graph convolutional network

212
00:11:00,240 --> 00:11:03,120
enables latent vector representation

213
00:11:03,120 --> 00:11:06,959
of each node the latent vector here

214
00:11:06,959 --> 00:11:09,360
can be considered as roles of each

215
00:11:09,360 --> 00:11:11,839
devices

216
00:11:11,839 --> 00:11:15,279
the phase of running links in gcn scope

217
00:11:15,279 --> 00:11:18,320
contributes to interviews that improve

218
00:11:18,320 --> 00:11:22,880
the accuracy of global estimation

219
00:11:25,839 --> 00:11:30,320
here is the overview of gcn scope

220
00:11:30,640 --> 00:11:33,440
while our listing always judges and

221
00:11:33,440 --> 00:11:34,560
observed links

222
00:11:34,560 --> 00:11:39,120
as a numerous ones gcn scope evaluates

223
00:11:39,120 --> 00:11:42,720
how enormous the unobserved link is

224
00:11:42,720 --> 00:11:46,959
and square the abnormality

225
00:11:47,519 --> 00:11:50,399
suppose rest of figure left figure shows

226
00:11:50,399 --> 00:11:51,760
links

227
00:11:51,760 --> 00:11:55,519
which emerged in running phase

228
00:11:55,519 --> 00:11:59,279
in this case there are four links

229
00:12:00,639 --> 00:12:03,600
if two red sounds of links are observed

230
00:12:03,600 --> 00:12:05,839
in detection phase

231
00:12:05,839 --> 00:12:09,040
gcn scope scores how a normal settings

232
00:12:09,040 --> 00:12:10,320
are

233
00:12:10,320 --> 00:12:15,760
and judge them normal or numerous

234
00:12:15,839 --> 00:12:18,959
according to the scores and predefined

235
00:12:18,959 --> 00:12:25,839
threshold values

236
00:12:26,480 --> 00:12:28,399
you can see the difference of our

237
00:12:28,399 --> 00:12:30,639
listing and gcn scope

238
00:12:30,639 --> 00:12:33,519
with this slide

239
00:12:34,079 --> 00:12:36,240
in both of running phase and detection

240
00:12:36,240 --> 00:12:38,320
phase of our listing

241
00:12:38,320 --> 00:12:41,839
the system winter start ics network

242
00:12:41,839 --> 00:12:46,079
and extract communication links

243
00:12:46,079 --> 00:12:49,200
in learning phase the system memorize

244
00:12:49,200 --> 00:12:54,399
all the links appearing in running time

245
00:12:54,399 --> 00:12:58,399
and in detection phase it queries

246
00:12:58,399 --> 00:13:01,839
the memory whether links

247
00:13:01,839 --> 00:13:04,399
appearing in detection phase observed in

248
00:13:04,399 --> 00:13:07,440
learning phase

249
00:13:07,440 --> 00:13:10,160
and if the link turned out not to be in

250
00:13:10,160 --> 00:13:11,680
the

251
00:13:11,680 --> 00:13:15,120
memory the system detects the linkups

252
00:13:15,120 --> 00:13:20,160
as a normal one

253
00:13:20,160 --> 00:13:23,519
on the other hand in gcn scope

254
00:13:23,519 --> 00:13:26,959
additional steps appears

255
00:13:26,959 --> 00:13:31,120
in both phases in learning phase

256
00:13:31,120 --> 00:13:34,240
the process of gcn scope is the same as

257
00:13:34,240 --> 00:13:35,360
servicing

258
00:13:35,360 --> 00:13:39,199
up to the point of memorized links

259
00:13:39,199 --> 00:13:42,800
but gcn scope then runs a model of ai

260
00:13:42,800 --> 00:13:47,199
called rgcn the land module now

261
00:13:47,199 --> 00:13:49,680
has a writing vector representation of

262
00:13:49,680 --> 00:13:53,360
each devices and protocols

263
00:13:53,360 --> 00:13:56,720
then detection phase only unobserved

264
00:13:56,720 --> 00:13:58,000
link

265
00:13:58,000 --> 00:14:01,199
in running phase are to be scored using

266
00:14:01,199 --> 00:14:04,079
the run model

267
00:14:04,240 --> 00:14:07,920
finally if the score of an observed link

268
00:14:07,920 --> 00:14:10,399
is smaller than predefined threshold

269
00:14:10,399 --> 00:14:11,600
value

270
00:14:11,600 --> 00:14:17,839
the link is considered enormous

271
00:14:19,360 --> 00:14:22,880
to understand how gcn scope works

272
00:14:22,880 --> 00:14:26,399
it is convenient to understand rgcn

273
00:14:26,399 --> 00:14:28,839
which is a brilliant component of gcn

274
00:14:28,839 --> 00:14:30,959
scope

275
00:14:30,959 --> 00:14:34,399
rgcn is multi-graph extension of graph

276
00:14:34,399 --> 00:14:37,519
convolutional network

277
00:14:38,639 --> 00:14:41,519
as i said graph commercial networks are

278
00:14:41,519 --> 00:14:43,360
designed to propagate

279
00:14:43,360 --> 00:14:45,839
latent vector representations to

280
00:14:45,839 --> 00:14:48,720
neighboring devices

281
00:14:48,720 --> 00:14:51,839
as in the upper figure propagation to

282
00:14:51,839 --> 00:14:55,760
node b is executed using

283
00:14:55,760 --> 00:14:58,800
the information neighboring node a and

284
00:14:58,800 --> 00:14:59,120
cell

285
00:14:59,120 --> 00:15:04,399
node b the latent vector of node b

286
00:15:04,399 --> 00:15:07,600
after propagation is obtained according

287
00:15:07,600 --> 00:15:08,160
to

288
00:15:08,160 --> 00:15:11,040
this equation

289
00:15:11,360 --> 00:15:14,880
in this equation h a indicates the

290
00:15:14,880 --> 00:15:17,279
latent vector of node a

291
00:15:17,279 --> 00:15:21,279
h b indicates a related vector of node b

292
00:15:21,279 --> 00:15:24,720
and w indicates how to propagate the

293
00:15:24,720 --> 00:15:25,199
latent

294
00:15:25,199 --> 00:15:27,839
information

295
00:15:28,240 --> 00:15:31,519
please don't care about cb

296
00:15:31,519 --> 00:15:35,360
function sigma and l here

297
00:15:35,360 --> 00:15:38,079
what is important here is that the

298
00:15:38,079 --> 00:15:38,639
latent

299
00:15:38,639 --> 00:15:42,160
vector of node a and node b

300
00:15:42,160 --> 00:15:45,199
are propagated to obtain ideal

301
00:15:45,199 --> 00:15:49,680
latent vector of node b

302
00:15:51,120 --> 00:15:55,040
in the case of rgcn the propagation rule

303
00:15:55,040 --> 00:15:56,800
is quite similar to

304
00:15:56,800 --> 00:16:00,240
ordinary gcn the difference

305
00:16:00,240 --> 00:16:03,600
is that different protocols protocol

306
00:16:03,600 --> 00:16:07,040
propagates latent vectors in different

307
00:16:07,040 --> 00:16:08,959
ways

308
00:16:08,959 --> 00:16:12,320
as in the lower figure a node b

309
00:16:12,320 --> 00:16:15,680
and node a has two links atp

310
00:16:15,680 --> 00:16:19,279
link and mssqlink

311
00:16:19,279 --> 00:16:22,079
the propagation equation shows that the

312
00:16:22,079 --> 00:16:23,199
latent vector of

313
00:16:23,199 --> 00:16:25,680
a is propagated according to the

314
00:16:25,680 --> 00:16:30,240
protocols used between the two devices

315
00:16:30,240 --> 00:16:35,199
so here is a propagated information from

316
00:16:35,199 --> 00:16:38,639
node a with http

317
00:16:38,639 --> 00:16:42,000
protocols and this is a

318
00:16:42,000 --> 00:16:46,720
propagated information using ms sql

319
00:16:48,839 --> 00:16:50,560
links

320
00:16:50,560 --> 00:16:53,120
so let's see the running phase of gcn

321
00:16:53,120 --> 00:16:54,800
scope

322
00:16:54,800 --> 00:16:57,600
in step one observed links in learning

323
00:16:57,600 --> 00:16:58,160
phase

324
00:16:58,160 --> 00:17:02,079
are converted into a multi graph

325
00:17:02,079 --> 00:17:04,959
multigraph is a graph which is permitted

326
00:17:04,959 --> 00:17:07,520
to have multiple edges

327
00:17:07,520 --> 00:17:10,799
that is edges that have the same end

328
00:17:10,799 --> 00:17:13,119
nodes

329
00:17:13,679 --> 00:17:16,799
in step two rdcn extract vector

330
00:17:16,799 --> 00:17:17,839
representation

331
00:17:17,839 --> 00:17:20,000
using propagation rule described in the

332
00:17:20,000 --> 00:17:22,640
last page

333
00:17:22,880 --> 00:17:25,839
note that the vector representations of

334
00:17:25,839 --> 00:17:27,520
each node here

335
00:17:27,520 --> 00:17:30,160
is completely not random now before

336
00:17:30,160 --> 00:17:33,840
running rdcn

337
00:17:35,200 --> 00:17:39,919
and step 3 is a step to run where links

338
00:17:39,919 --> 00:17:44,640
do and do not exist in the multi graph

339
00:17:44,640 --> 00:17:47,520
in the case of this figure some existing

340
00:17:47,520 --> 00:17:49,600
links and not existing links are

341
00:17:49,600 --> 00:17:51,919
extracted

342
00:17:51,919 --> 00:17:57,280
in the first case device a and device b

343
00:17:57,280 --> 00:18:00,400
are connected with smb

344
00:18:00,400 --> 00:18:05,200
links so as in this figure

345
00:18:05,200 --> 00:18:08,960
the vector transpose smb matrix

346
00:18:08,960 --> 00:18:12,240
and vector d

347
00:18:12,240 --> 00:18:15,600
is run to be high value

348
00:18:15,600 --> 00:18:19,200
in the second case uh device b

349
00:18:19,200 --> 00:18:23,280
and device c do not have link

350
00:18:23,280 --> 00:18:26,840
of s and b so the value of vector b

351
00:18:26,840 --> 00:18:30,160
transpose smb

352
00:18:30,160 --> 00:18:33,760
matrix and vector c

353
00:18:33,760 --> 00:18:37,440
is run to be low value

354
00:18:38,720 --> 00:18:41,679
after repeating step 3 again and again

355
00:18:41,679 --> 00:18:43,760
we finally obtain the ideal vector

356
00:18:43,760 --> 00:18:46,240
representation of each devices and

357
00:18:46,240 --> 00:18:48,799
protocols

358
00:18:52,480 --> 00:18:54,960
the scoring phase of gcn scope is very

359
00:18:54,960 --> 00:18:56,720
simple

360
00:18:56,720 --> 00:19:00,000
in step 1 we simply extract each

361
00:19:00,000 --> 00:19:04,720
representation obtaining learning phase

362
00:19:05,120 --> 00:19:07,760
now in step 2 we extract our observed

363
00:19:07,760 --> 00:19:11,840
rings to be squared

364
00:19:11,919 --> 00:19:14,720
in step 3 we calculate the score of

365
00:19:14,720 --> 00:19:16,720
target links

366
00:19:16,720 --> 00:19:20,400
in the case of the this ms sql link

367
00:19:20,400 --> 00:19:23,280
we use a latent vector of device a and

368
00:19:23,280 --> 00:19:24,240
divide c

369
00:19:24,240 --> 00:19:28,880
and that means sql like this

370
00:19:28,880 --> 00:19:32,320
and we calculate vectors representations

371
00:19:32,320 --> 00:19:34,960
transpose

372
00:19:34,960 --> 00:19:38,400
matrix ms square vector c

373
00:19:38,400 --> 00:19:41,840
and if the value is high we find this

374
00:19:41,840 --> 00:19:42,559
link

375
00:19:42,559 --> 00:19:47,600
normal and vice versa

376
00:19:49,280 --> 00:19:52,640
so let's go to the evaluation

377
00:19:52,640 --> 00:19:54,720
this table shows the data set for

378
00:19:54,720 --> 00:19:57,679
evaluation of gcn scope

379
00:19:57,679 --> 00:19:59,600
we use the data collected in our

380
00:19:59,600 --> 00:20:01,760
factories

381
00:20:01,760 --> 00:20:04,400
in each factories our links appeared

382
00:20:04,400 --> 00:20:04,960
more than

383
00:20:04,960 --> 00:20:08,960
2000 in a week surprisingly

384
00:20:08,960 --> 00:20:12,559
more than a lot of new links appeared

385
00:20:12,559 --> 00:20:15,120
in next one week as you can see from the

386
00:20:15,120 --> 00:20:16,000
table

387
00:20:16,000 --> 00:20:18,880
as test links

388
00:20:19,120 --> 00:20:21,360
the new links do not include training

389
00:20:21,360 --> 00:20:22,559
links and

390
00:20:22,559 --> 00:20:27,520
links with new devices or new link types

391
00:20:30,080 --> 00:20:32,480
here is the experimental results of gcn

392
00:20:32,480 --> 00:20:35,520
scope and baselines

393
00:20:35,520 --> 00:20:39,679
this table shows mrl and heat saturn

394
00:20:39,679 --> 00:20:43,520
higher is better in both metrics

395
00:20:44,000 --> 00:20:47,039
the intuitive understanding of this

396
00:20:47,039 --> 00:20:50,240
meaning of these metrics is

397
00:20:50,240 --> 00:20:54,000
how well these methods predict the

398
00:20:54,000 --> 00:20:57,360
non-observed normal rings

399
00:20:57,520 --> 00:21:01,360
the first baseline is called this smart

400
00:21:01,360 --> 00:21:05,520
which is a method similar to gcn scope

401
00:21:05,520 --> 00:21:07,880
this smart uses latent vector

402
00:21:07,880 --> 00:21:09,280
representations

403
00:21:09,280 --> 00:21:12,400
but do not execute graph convolution

404
00:21:12,400 --> 00:21:15,039
so this smart can be interpreted as dcn

405
00:21:15,039 --> 00:21:18,640
scope without graph combination

406
00:21:18,640 --> 00:21:21,360
the two heuristics used in this

407
00:21:21,360 --> 00:21:22,320
experiment

408
00:21:22,320 --> 00:21:25,200
are methods which do not use rate and

409
00:21:25,200 --> 00:21:27,760
vector representations

410
00:21:27,760 --> 00:21:29,840
and use information called first order

411
00:21:29,840 --> 00:21:32,480
proximity and second of the proximity

412
00:21:32,480 --> 00:21:35,120
of graphs

413
00:21:35,679 --> 00:21:39,520
the last one is informal random scoring

414
00:21:39,520 --> 00:21:42,799
as you can see a dcn scope has performed

415
00:21:42,799 --> 00:21:44,880
other methods in mlr

416
00:21:44,880 --> 00:21:49,600
and heater 10 in almost every situations

417
00:21:49,600 --> 00:21:52,919
this result means gcn scope can

418
00:21:52,919 --> 00:21:56,320
appropriately score absorbed links

419
00:21:56,320 --> 00:21:58,559
and by comparing gcn scope with this

420
00:21:58,559 --> 00:21:59,440
smart

421
00:21:59,440 --> 00:22:02,320
it can be seen that the contribution

422
00:22:02,320 --> 00:22:03,360
graph convolution

423
00:22:03,360 --> 00:22:06,479
is very large

424
00:22:08,960 --> 00:22:11,919
the comparison of the last slide shows

425
00:22:11,919 --> 00:22:12,640
how well

426
00:22:12,640 --> 00:22:16,159
these methods predict the abnormal links

427
00:22:16,159 --> 00:22:19,760
however we are curious about the ability

428
00:22:19,760 --> 00:22:21,600
to distinguish normal links and

429
00:22:21,600 --> 00:22:24,320
anomalous links

430
00:22:24,320 --> 00:22:27,200
in order to test the discrimination

431
00:22:27,200 --> 00:22:28,799
performance

432
00:22:28,799 --> 00:22:31,840
we set unobserved random links

433
00:22:31,840 --> 00:22:34,559
as a numerous ones and let each

434
00:22:34,559 --> 00:22:35,360
algorithm

435
00:22:35,360 --> 00:22:38,720
score all the random links and the arms

436
00:22:38,720 --> 00:22:41,840
of normal links

437
00:22:42,080 --> 00:22:45,840
the result is shown this table

438
00:22:45,840 --> 00:22:49,280
as expected dcn scope outperforms

439
00:22:49,280 --> 00:22:52,400
all the other methods in roca you see

440
00:22:52,400 --> 00:22:56,720
in every factory um roca you see

441
00:22:56,720 --> 00:22:58,799
is a metric indicating how well the

442
00:22:58,799 --> 00:23:00,000
method quantify

443
00:23:00,000 --> 00:23:02,880
abnormality and if the method achieves

444
00:23:02,880 --> 00:23:04,559
false distinction

445
00:23:04,559 --> 00:23:09,520
the value of value cauc equals 1.

446
00:23:09,919 --> 00:23:13,200
dcn scope achieves average a

447
00:23:13,200 --> 00:23:17,760
roc ac of 0.95

448
00:23:17,760 --> 00:23:23,840
which is quite accurate

449
00:23:24,000 --> 00:23:26,400
here is a concrete example of the number

450
00:23:26,400 --> 00:23:28,640
of four salads

451
00:23:28,640 --> 00:23:31,039
the table can be obtained by fixing one

452
00:23:31,039 --> 00:23:33,440
threshold value

453
00:23:33,440 --> 00:23:36,320
as you can see from this table rao

454
00:23:36,320 --> 00:23:36,880
racing

455
00:23:36,880 --> 00:23:39,200
produces hundreds of barracks in one

456
00:23:39,200 --> 00:23:40,799
week

457
00:23:40,799 --> 00:23:44,240
which seems impractical to use in stock

458
00:23:44,240 --> 00:23:47,760
however this in scope reduce significant

459
00:23:47,760 --> 00:23:49,600
number of false alarms

460
00:23:49,600 --> 00:23:52,080
while keeping random link detection rate

461
00:23:52,080 --> 00:23:55,439
about eighty percent

462
00:23:55,520 --> 00:23:58,400
so decision scope makes it possible for

463
00:23:58,400 --> 00:23:59,600
stock analysts to

464
00:23:59,600 --> 00:24:04,320
work efficiently

465
00:24:04,320 --> 00:24:07,520
the performance setting of gcn scope

466
00:24:07,520 --> 00:24:11,520
is quite easy although gcn scope can run

467
00:24:11,520 --> 00:24:13,760
links unsupervised manner

468
00:24:13,760 --> 00:24:16,080
narrow c curves can be obtained using

469
00:24:16,080 --> 00:24:18,640
random links

470
00:24:18,640 --> 00:24:20,480
if you value the number of force

471
00:24:20,480 --> 00:24:21,919
positive

472
00:24:21,919 --> 00:24:23,760
you can set the slider handle to this

473
00:24:23,760 --> 00:24:26,000
position

474
00:24:26,000 --> 00:24:29,760
in this case dcn scope achieves 8.5

475
00:24:29,760 --> 00:24:31,200
percent detection rate

476
00:24:31,200 --> 00:24:35,360
and 2 2.0 percent false

477
00:24:35,360 --> 00:24:38,080
positive rate

478
00:24:38,880 --> 00:24:41,840
and if you value the number of deduction

479
00:24:41,840 --> 00:24:43,039
rate

480
00:24:43,039 --> 00:24:44,840
you can set the trade 100 to this

481
00:24:44,840 --> 00:24:46,240
position

482
00:24:46,240 --> 00:24:49,360
in this case this end scope achieves

483
00:24:49,360 --> 00:24:52,720
98 percent detection rate and

484
00:24:52,720 --> 00:24:57,039
20.3 percent volts voltage rate

485
00:24:58,080 --> 00:24:59,679
maybe some of you care about the

486
00:24:59,679 --> 00:25:02,640
computational cost about gcn scope

487
00:25:02,640 --> 00:25:05,279
but please don't worry this is a

488
00:25:05,279 --> 00:25:06,799
computational time

489
00:25:06,799 --> 00:25:10,320
using my laptop the time of running

490
00:25:10,320 --> 00:25:11,679
links in one week

491
00:25:11,679 --> 00:25:15,120
took several months

492
00:25:15,120 --> 00:25:18,400
but this does not matter

493
00:25:18,400 --> 00:25:20,880
because it is enough to run the model

494
00:25:20,880 --> 00:25:23,760
once in a day or a week

495
00:25:23,760 --> 00:25:27,279
the notable point is the time of scoring

496
00:25:27,279 --> 00:25:30,000
it only takes several millisecond per

497
00:25:30,000 --> 00:25:32,480
unobserved blink

498
00:25:32,480 --> 00:25:34,000
this means we can ignore the

499
00:25:34,000 --> 00:25:36,000
computational cost of the scoring

500
00:25:36,000 --> 00:25:38,159
and makes decent scope to be deployed

501
00:25:38,159 --> 00:25:40,640
easily

502
00:25:41,679 --> 00:25:43,220
so here's a take away

503
00:25:43,220 --> 00:25:46,249
[Music]

504
00:25:50,640 --> 00:25:53,559
so thank you for listening to my

505
00:25:53,559 --> 00:25:56,559
presentation

