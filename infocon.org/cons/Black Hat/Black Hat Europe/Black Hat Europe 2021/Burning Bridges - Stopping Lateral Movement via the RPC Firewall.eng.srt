1
00:00:00,860 --> 00:00:09,040
[Music]

2
00:00:09,040 --> 00:00:11,759
hello and thank you for tuning in to

3
00:00:11,759 --> 00:00:13,519
this spiritual talk

4
00:00:13,519 --> 00:00:15,519
my name is sagi dolce i'm the vp of

5
00:00:15,519 --> 00:00:16,880
research

6
00:00:16,880 --> 00:00:19,439
here at zero networks

7
00:00:19,439 --> 00:00:20,640
um

8
00:00:20,640 --> 00:00:22,240
i've been doing defensive research for

9
00:00:22,240 --> 00:00:23,279
the past

10
00:00:23,279 --> 00:00:26,320
10 plus years now in areas such as

11
00:00:26,320 --> 00:00:28,800
lateral movement identity access and

12
00:00:28,800 --> 00:00:31,679
several others

13
00:00:31,679 --> 00:00:34,719
i often write and produce some open

14
00:00:34,719 --> 00:00:36,719
source tools you can check them out

15
00:00:36,719 --> 00:00:38,800
at our github

16
00:00:38,800 --> 00:00:40,480
i've been fortunate enough to speak at

17
00:00:40,480 --> 00:00:43,200
previous blackett events and awasp and a

18
00:00:43,200 --> 00:00:44,879
few other chapters

19
00:00:44,879 --> 00:00:46,640
and of course you can check me out on

20
00:00:46,640 --> 00:00:49,520
twitter uh if you want to dm me about

21
00:00:49,520 --> 00:00:50,879
this session or

22
00:00:50,879 --> 00:00:52,640
anything else

23
00:00:52,640 --> 00:00:54,960
so enough about me let's dive into the

24
00:00:54,960 --> 00:00:57,680
actual talk uh today we're gonna spend a

25
00:00:57,680 --> 00:00:59,920
lot of time talking about

26
00:00:59,920 --> 00:01:01,120
rpc

27
00:01:01,120 --> 00:01:04,000
uh so before i say why this talk is

28
00:01:04,000 --> 00:01:07,600
important or maybe why another rpc talk

29
00:01:07,600 --> 00:01:09,439
i think we need a little bit of

30
00:01:09,439 --> 00:01:11,840
introduction about our pc so we all

31
00:01:11,840 --> 00:01:15,040
speak the same language

32
00:01:15,280 --> 00:01:18,159
and then i'll dive deeper on why

33
00:01:18,159 --> 00:01:21,040
rpc is so important

34
00:01:21,040 --> 00:01:22,880
one hint is of course

35
00:01:22,880 --> 00:01:25,280
heavily utilized by it administrators

36
00:01:25,280 --> 00:01:27,360
have been utilized by ransomware and

37
00:01:27,360 --> 00:01:28,880
other attackers

38
00:01:28,880 --> 00:01:30,079
um

39
00:01:30,079 --> 00:01:33,280
and the problem of course with uh our

40
00:01:33,280 --> 00:01:35,680
rcp is that's the third thing that i'm

41
00:01:35,680 --> 00:01:37,040
going to touch upon

42
00:01:37,040 --> 00:01:39,360
is the native protection that you have

43
00:01:39,360 --> 00:01:41,759
in windows environment a little bit

44
00:01:41,759 --> 00:01:45,439
painful and they don't quite do the job

45
00:01:45,439 --> 00:01:47,439
and this is part of the reason why

46
00:01:47,439 --> 00:01:50,320
we wrote the rpc firewall and we'll dive

47
00:01:50,320 --> 00:01:52,159
deeper into the tool itself show you how

48
00:01:52,159 --> 00:01:53,200
it works

49
00:01:53,200 --> 00:01:57,439
and we'll end up with a lot of

50
00:01:57,439 --> 00:01:59,600
practical examples show you how you can

51
00:01:59,600 --> 00:02:00,640
put them

52
00:02:00,640 --> 00:02:03,680
use this firewall for research or your

53
00:02:03,680 --> 00:02:05,360
production environment

54
00:02:05,360 --> 00:02:06,880
and so on and

55
00:02:06,880 --> 00:02:09,199
short summary question time

56
00:02:09,199 --> 00:02:11,120
so let's start

57
00:02:11,120 --> 00:02:14,400
so rpc of course when i say rpc i mean

58
00:02:14,400 --> 00:02:17,040
remote procedure call

59
00:02:17,040 --> 00:02:18,319
a very

60
00:02:18,319 --> 00:02:20,640
i think a basic or a simple concept i

61
00:02:20,640 --> 00:02:21,520
think

62
00:02:21,520 --> 00:02:23,120
anyone can relate to

63
00:02:23,120 --> 00:02:25,520
when a client want to call a function

64
00:02:25,520 --> 00:02:28,400
on a server they can do it so through

65
00:02:28,400 --> 00:02:30,959
rpc the server can be in the same

66
00:02:30,959 --> 00:02:33,360
process it can be a different process

67
00:02:33,360 --> 00:02:35,840
or it can be on a different host

68
00:02:35,840 --> 00:02:37,519
altogether

69
00:02:37,519 --> 00:02:39,280
of course if it's on a different host

70
00:02:39,280 --> 00:02:42,480
this is a remote rpc call

71
00:02:42,480 --> 00:02:45,920
if it's a local it usually uses a local

72
00:02:45,920 --> 00:02:47,680
lpc lpc

73
00:02:47,680 --> 00:02:48,800
ports

74
00:02:48,800 --> 00:02:51,760
if it's remote normally or most commonly

75
00:02:51,760 --> 00:02:55,120
it's done over tcp or smb and this is

76
00:02:55,120 --> 00:02:56,480
what we're most

77
00:02:56,480 --> 00:02:57,680
interested in

78
00:02:57,680 --> 00:03:00,080
uh there's a bunch of other transport

79
00:03:00,080 --> 00:03:01,760
which are linked here

80
00:03:01,760 --> 00:03:02,800
in the

81
00:03:02,800 --> 00:03:05,040
below

82
00:03:05,040 --> 00:03:06,879
so some of the terminology of course

83
00:03:06,879 --> 00:03:09,200
there's a lot of information about rpc

84
00:03:09,200 --> 00:03:11,280
we're not going to get into uh

85
00:03:11,280 --> 00:03:13,599
everything but the basic concept that we

86
00:03:13,599 --> 00:03:16,319
need to understand is uh the operation

87
00:03:16,319 --> 00:03:17,840
number the op numb

88
00:03:17,840 --> 00:03:19,599
this basically identifies the function

89
00:03:19,599 --> 00:03:21,200
that you want to call

90
00:03:21,200 --> 00:03:24,560
we have the uuid the universal

91
00:03:24,560 --> 00:03:27,680
universal unique identifier

92
00:03:27,680 --> 00:03:31,120
and that one identifies the

93
00:03:31,120 --> 00:03:33,760
rpc interface that you uh want to

94
00:03:33,760 --> 00:03:35,040
contact and the endpoint that's

95
00:03:35,040 --> 00:03:38,080
basically the internet uh the transport

96
00:03:38,080 --> 00:03:40,799
that you're writing over it could be smb

97
00:03:40,799 --> 00:03:44,799
it could be tcp a specific pipe over smb

98
00:03:44,799 --> 00:03:47,519
or a specific board or tcp and so forth

99
00:03:47,519 --> 00:03:49,840
uh maybe to make this example more

100
00:03:49,840 --> 00:03:51,120
tangible

101
00:03:51,120 --> 00:03:54,000
uh for example you could look at this

102
00:03:54,000 --> 00:03:55,680
uh protocol the

103
00:03:55,680 --> 00:03:56,480
tax

104
00:03:56,480 --> 00:03:58,840
task schedule protocol

105
00:03:58,840 --> 00:04:01,760
um so this is one example of an rpc

106
00:04:01,760 --> 00:04:03,599
protocol among many

107
00:04:03,599 --> 00:04:05,280
and if you go to the standards

108
00:04:05,280 --> 00:04:06,799
assignment you can see there are

109
00:04:06,799 --> 00:04:08,879
different uuids

110
00:04:08,879 --> 00:04:12,560
that describe various versions of

111
00:04:12,560 --> 00:04:14,959
this protocol uh

112
00:04:14,959 --> 00:04:16,959
for example this is a well-known end

113
00:04:16,959 --> 00:04:18,880
point that you can contact this protocol

114
00:04:18,880 --> 00:04:20,320
so if you want to

115
00:04:20,320 --> 00:04:22,960
talk to the task scheduler of the name

116
00:04:22,960 --> 00:04:26,080
pipe you'll use the at svc

117
00:04:26,080 --> 00:04:27,199
pipe name

118
00:04:27,199 --> 00:04:29,440
and when i look at the actual details of

119
00:04:29,440 --> 00:04:32,240
the protocol

120
00:04:34,240 --> 00:04:37,680
let's take this for example

121
00:04:37,680 --> 00:04:39,360
so you see different

122
00:04:39,360 --> 00:04:42,000
functions and each function has their

123
00:04:42,000 --> 00:04:43,680
own up now

124
00:04:43,680 --> 00:04:44,639
so

125
00:04:44,639 --> 00:04:46,080
that's just to make this a little bit

126
00:04:46,080 --> 00:04:48,240
more tangible

127
00:04:48,240 --> 00:04:50,160
now in windows environment

128
00:04:50,160 --> 00:04:52,840
which is the focus of the stock the rpc

129
00:04:52,840 --> 00:04:57,040
rt4 dll that's the library also that the

130
00:04:57,040 --> 00:04:59,040
clients the rpc clients are using their

131
00:04:59,040 --> 00:05:01,280
servers are using and it's basically in

132
00:05:01,280 --> 00:05:02,320
charge of

133
00:05:02,320 --> 00:05:03,919
doing everything all they have is

134
00:05:03,919 --> 00:05:05,520
lifting

135
00:05:05,520 --> 00:05:07,520
and of course like i said before

136
00:05:07,520 --> 00:05:09,440
there's a lot of resources

137
00:05:09,440 --> 00:05:10,639
that you can

138
00:05:10,639 --> 00:05:13,440
use to read and understand more what rpc

139
00:05:13,440 --> 00:05:15,600
is and dive a little bit deeper

140
00:05:15,600 --> 00:05:17,360
this is some of the resources that i've

141
00:05:17,360 --> 00:05:20,000
used to understand myself and of course

142
00:05:20,000 --> 00:05:22,240
some of those are referenced later here

143
00:05:22,240 --> 00:05:24,400
in this presentation

144
00:05:24,400 --> 00:05:26,639
okay so now that we have

145
00:05:26,639 --> 00:05:28,320
our basic uh

146
00:05:28,320 --> 00:05:31,520
fundamentals of rpc 101

147
00:05:31,520 --> 00:05:34,160
why is this talk important

148
00:05:34,160 --> 00:05:36,720
and i hadn't hinted before

149
00:05:36,720 --> 00:05:39,919
about this and one of the reason is that

150
00:05:39,919 --> 00:05:42,160
maybe you don't realize that maybe you

151
00:05:42,160 --> 00:05:43,120
do

152
00:05:43,120 --> 00:05:45,840
our pc is simply uh everywhere when

153
00:05:45,840 --> 00:05:48,400
you're discussing a windows environment

154
00:05:48,400 --> 00:05:50,560
almost any service

155
00:05:50,560 --> 00:05:53,680
that you can think of probably exposes

156
00:05:53,680 --> 00:05:55,919
one or many

157
00:05:55,919 --> 00:05:58,560
rpc interfaces which exposes

158
00:05:58,560 --> 00:05:59,680
tens or

159
00:05:59,680 --> 00:06:01,039
maybe

160
00:06:01,039 --> 00:06:04,400
hundreds or even rpc functions

161
00:06:04,400 --> 00:06:07,280
and they're used for everything for

162
00:06:07,280 --> 00:06:09,199
from creating scheduled tasks just like

163
00:06:09,199 --> 00:06:10,160
we saw

164
00:06:10,160 --> 00:06:11,520
printing

165
00:06:11,520 --> 00:06:13,360
authentication

166
00:06:13,360 --> 00:06:17,280
uh directories services live replication

167
00:06:17,280 --> 00:06:19,919
uh remote management wmi dcom and so on

168
00:06:19,919 --> 00:06:21,440
and so forth

169
00:06:21,440 --> 00:06:23,280
they're so prevalent that of course

170
00:06:23,280 --> 00:06:24,639
almost any

171
00:06:24,639 --> 00:06:25,840
uh

172
00:06:25,840 --> 00:06:28,319
attacker group ransomware or

173
00:06:28,319 --> 00:06:31,280
off-the-shelf malware uses usually one

174
00:06:31,280 --> 00:06:34,720
or another form of rpc some common

175
00:06:34,720 --> 00:06:36,720
examples that we see on the right of

176
00:06:36,720 --> 00:06:38,319
course you can use schedule test for

177
00:06:38,319 --> 00:06:40,080
lateral movement

178
00:06:40,080 --> 00:06:43,440
dc sync to dump credentials

179
00:06:43,440 --> 00:06:45,520
samr another protocol you can use to

180
00:06:45,520 --> 00:06:49,039
read or write from the domain controller

181
00:06:49,039 --> 00:06:51,840
other uh lovable tools that we all know

182
00:06:51,840 --> 00:06:53,520
of ps exec

183
00:06:53,520 --> 00:06:55,440
remote decode and so on and so forth

184
00:06:55,440 --> 00:06:57,120
shower pound used by bloodhound for

185
00:06:57,120 --> 00:06:58,720
reconnaissance

186
00:06:58,720 --> 00:07:00,880
corner shot

187
00:07:00,880 --> 00:07:03,360
also for constant and the list goes on

188
00:07:03,360 --> 00:07:04,960
and on

189
00:07:04,960 --> 00:07:07,599
um i just want to highlight the these

190
00:07:07,599 --> 00:07:08,880
top three

191
00:07:08,880 --> 00:07:11,199
because i'm going to use uh these

192
00:07:11,199 --> 00:07:13,599
attacks over and over in demos to to

193
00:07:13,599 --> 00:07:15,440
show how the rpc file

194
00:07:15,440 --> 00:07:17,680
works and make a few points about the

195
00:07:17,680 --> 00:07:19,759
native protections

196
00:07:19,759 --> 00:07:21,919
um

197
00:07:21,919 --> 00:07:23,360
and of course

198
00:07:23,360 --> 00:07:25,199
i've said the word demo so let's start

199
00:07:25,199 --> 00:07:28,319
off with the demo

200
00:07:29,199 --> 00:07:31,280
and it's going to be a very quick demo

201
00:07:31,280 --> 00:07:33,599
uh it's not anything new but just to

202
00:07:33,599 --> 00:07:35,840
show if you haven't really understood it

203
00:07:35,840 --> 00:07:38,720
yet that some of the very

204
00:07:38,720 --> 00:07:41,599
common attack that we all know about all

205
00:07:41,599 --> 00:07:43,759
rely on rpc

206
00:07:43,759 --> 00:07:45,120
so this is the setup that we're going to

207
00:07:45,120 --> 00:07:47,120
see throughout this presentation we have

208
00:07:47,120 --> 00:07:48,560
the target on the left it's a domain

209
00:07:48,560 --> 00:07:50,720
controller we have on the right the

210
00:07:50,720 --> 00:07:52,879
client which does the attacking and it's

211
00:07:52,879 --> 00:07:54,319
running i'm going to run a bunch of

212
00:07:54,319 --> 00:07:56,400
attacks the ps exec

213
00:07:56,400 --> 00:08:00,080
which produces a calculator because

214
00:08:00,080 --> 00:08:03,199
hackers love arithmetics for some reason

215
00:08:03,199 --> 00:08:06,400
um test scheduler different kind of rpc

216
00:08:06,400 --> 00:08:07,599
protocol

217
00:08:07,599 --> 00:08:10,479
same type of result in this case again

218
00:08:10,479 --> 00:08:13,599
we're gonna get the evil twin colic

219
00:08:13,599 --> 00:08:15,520
attack

220
00:08:15,520 --> 00:08:17,680
mini cuts of course you can't talk about

221
00:08:17,680 --> 00:08:19,360
security and domains without saying

222
00:08:19,360 --> 00:08:20,560
mimikats

223
00:08:20,560 --> 00:08:22,720
and this will simply read the kerberos

224
00:08:22,720 --> 00:08:25,039
tgt uh

225
00:08:25,039 --> 00:08:27,919
password hash the nth ntlm hash

226
00:08:27,919 --> 00:08:30,319
directly from the domain controller

227
00:08:30,319 --> 00:08:33,440
again over rpc

228
00:08:33,440 --> 00:08:35,919
and finally i'm going to do a couple of

229
00:08:35,919 --> 00:08:38,839
more attacks using the smr

230
00:08:38,839 --> 00:08:41,599
protocol uh the fourth the first one is

231
00:08:41,599 --> 00:08:43,519
a very common procedure that is being

232
00:08:43,519 --> 00:08:45,920
called in a domain uh which can be used

233
00:08:45,920 --> 00:08:49,120
for reconnaissance just to collect users

234
00:08:49,120 --> 00:08:51,120
uh and some other properties from the

235
00:08:51,120 --> 00:08:53,680
domain controller you can do it over rpc

236
00:08:53,680 --> 00:08:54,880
and the other operation is more

237
00:08:54,880 --> 00:08:56,640
intrusive it's the right operation i'm

238
00:08:56,640 --> 00:08:58,240
actually creating

239
00:08:58,240 --> 00:09:00,160
a fake computer

240
00:09:00,160 --> 00:09:02,720
inside the domain controller so once i

241
00:09:02,720 --> 00:09:04,480
refresh you can see i have the fake name

242
00:09:04,480 --> 00:09:06,560
it's a fake computer that i've created

243
00:09:06,560 --> 00:09:09,360
so in a matter of about one minute we

244
00:09:09,360 --> 00:09:11,839
saw five different attacks uh all of

245
00:09:11,839 --> 00:09:14,320
them utilize rpc

246
00:09:14,320 --> 00:09:15,839
um

247
00:09:15,839 --> 00:09:18,080
again just to drive the point that

248
00:09:18,080 --> 00:09:19,680
it's a thing it's a thing that happens

249
00:09:19,680 --> 00:09:22,240
it happens a lot

250
00:09:22,240 --> 00:09:24,880
so what is it about rpc because apart

251
00:09:24,880 --> 00:09:27,040
from being so

252
00:09:27,040 --> 00:09:29,839
so much popular and so heavily used if

253
00:09:29,839 --> 00:09:31,519
you look at it as opposed to other

254
00:09:31,519 --> 00:09:33,360
protocols which are

255
00:09:33,360 --> 00:09:34,480
could be are

256
00:09:34,480 --> 00:09:36,320
very heavily used by administrators such

257
00:09:36,320 --> 00:09:39,600
as rdp or windows management

258
00:09:39,600 --> 00:09:42,080
uh there can't be uh

259
00:09:42,080 --> 00:09:44,080
this one can be easily firewalled but

260
00:09:44,080 --> 00:09:47,200
rpc can't be easily fireable uh just

261
00:09:47,200 --> 00:09:48,720
because of how it's built it's been also

262
00:09:48,720 --> 00:09:52,480
for tcp or smd or other transports

263
00:09:52,480 --> 00:09:54,640
the name pipe for the port are not well

264
00:09:54,640 --> 00:09:56,800
known in advanced always

265
00:09:56,800 --> 00:09:58,959
so you can't block a specific port or

266
00:09:58,959 --> 00:10:01,760
disable a specific pipe

267
00:10:01,760 --> 00:10:04,160
and sometimes you can do it just like

268
00:10:04,160 --> 00:10:06,240
we've seen in domain controller your

269
00:10:06,240 --> 00:10:08,880
domain controller rpc services have to

270
00:10:08,880 --> 00:10:10,720
be open

271
00:10:10,720 --> 00:10:12,399
to almost any user

272
00:10:12,399 --> 00:10:14,160
because that's how they domain functions

273
00:10:14,160 --> 00:10:15,440
otherwise user won't be able to

274
00:10:15,440 --> 00:10:16,959
authenticate

275
00:10:16,959 --> 00:10:18,880
your domain wouldn't work

276
00:10:18,880 --> 00:10:21,279
so not only you can block it

277
00:10:21,279 --> 00:10:23,040
it has to be

278
00:10:23,040 --> 00:10:24,959
you can block it has to be open for the

279
00:10:24,959 --> 00:10:27,120
main function

280
00:10:27,120 --> 00:10:28,720
so to sum up

281
00:10:28,720 --> 00:10:30,880
very heavily used your attack surface or

282
00:10:30,880 --> 00:10:34,320
any given host can easily be 2 000 plus

283
00:10:34,320 --> 00:10:35,839
rpc calls

284
00:10:35,839 --> 00:10:36,880
uh

285
00:10:36,880 --> 00:10:39,279
potentially exposed to attackers

286
00:10:39,279 --> 00:10:40,880
we just saw there are many different

287
00:10:40,880 --> 00:10:43,680
types of attacks that utilize rpc

288
00:10:43,680 --> 00:10:46,560
can be firewall has to be open

289
00:10:46,560 --> 00:10:49,519
uh and that's why it's so interesting

290
00:10:49,519 --> 00:10:50,560
um

291
00:10:50,560 --> 00:10:53,279
so what you as a defender can do uh some

292
00:10:53,279 --> 00:10:54,880
i guess some of you already know about

293
00:10:54,880 --> 00:10:56,880
rpc and some of the issues that it gives

294
00:10:56,880 --> 00:10:58,399
you uh

295
00:10:58,399 --> 00:11:01,839
during pen tests or or others

296
00:11:01,839 --> 00:11:03,360
and the problem with

297
00:11:03,360 --> 00:11:06,079
trying out native protections is you

298
00:11:06,079 --> 00:11:08,320
find out they're very much lacking

299
00:11:08,320 --> 00:11:10,240
uh of course the first thing that you're

300
00:11:10,240 --> 00:11:12,160
trying to look for is is there any

301
00:11:12,160 --> 00:11:14,560
windows event that i can use and turns

302
00:11:14,560 --> 00:11:17,040
out there isn't one

303
00:11:17,040 --> 00:11:19,760
according to microsoft themselves

304
00:11:19,760 --> 00:11:21,920
it looks like they planned on the event

305
00:11:21,920 --> 00:11:25,839
but the event never occurs

306
00:11:26,079 --> 00:11:28,959
so there is no group policy or a flag or

307
00:11:28,959 --> 00:11:30,800
registry settings that you can turn on

308
00:11:30,800 --> 00:11:33,839
and get native or pc logs that you can

309
00:11:33,839 --> 00:11:37,120
consume and start working on them

310
00:11:37,120 --> 00:11:38,640
you have another option you can use the

311
00:11:38,640 --> 00:11:42,000
event tracing for windows a little bit

312
00:11:42,000 --> 00:11:44,959
lower level a little bit more complex

313
00:11:44,959 --> 00:11:48,800
um but even if you do that you still get

314
00:11:48,800 --> 00:11:52,320
information that is very much limited

315
00:11:52,320 --> 00:11:54,720
for example if we look at this event log

316
00:11:54,720 --> 00:11:57,279
i hope you can see uh you know very

317
00:11:57,279 --> 00:11:59,760
basic things about the rpc call you know

318
00:11:59,760 --> 00:12:02,639
the interface id you know the optimum

319
00:12:02,639 --> 00:12:04,560
you know the endpoints and that's

320
00:12:04,560 --> 00:12:07,360
basically it where did this rpc come

321
00:12:07,360 --> 00:12:11,040
from uh was it locally over tcp or named

322
00:12:11,040 --> 00:12:12,480
pipe or smb

323
00:12:12,480 --> 00:12:15,040
was it remotely uh we don't really know

324
00:12:15,040 --> 00:12:16,560
who made this call

325
00:12:16,560 --> 00:12:20,399
is it a anonymous is it a another user

326
00:12:20,399 --> 00:12:23,440
if so which user it is we don't know

327
00:12:23,440 --> 00:12:26,240
uh the other problem is that those trace

328
00:12:26,240 --> 00:12:29,920
uh events produce a lot of logs

329
00:12:29,920 --> 00:12:31,680
uh we're talking about roughly two

330
00:12:31,680 --> 00:12:34,000
million uh events per second because

331
00:12:34,000 --> 00:12:36,800
that includes the remote rpc and also

332
00:12:36,800 --> 00:12:39,040
the local rpc

333
00:12:39,040 --> 00:12:40,079
so

334
00:12:40,079 --> 00:12:40,959
if you

335
00:12:40,959 --> 00:12:44,160
run even a medium environment that's a

336
00:12:44,160 --> 00:12:46,320
lot of information to consume and filter

337
00:12:46,320 --> 00:12:48,160
out and even after you do it doesn't

338
00:12:48,160 --> 00:12:50,480
give you everything that you need

339
00:12:50,480 --> 00:12:51,600
if you still want to use this

340
00:12:51,600 --> 00:12:53,360
information for hunting

341
00:12:53,360 --> 00:12:56,720
uh that's also pretty complex for

342
00:12:56,720 --> 00:12:58,880
example

343
00:12:58,880 --> 00:13:00,880
this information talks about detecting

344
00:13:00,880 --> 00:13:02,240
just one

345
00:13:02,240 --> 00:13:04,800
form of lateral movement over rpc the

346
00:13:04,800 --> 00:13:08,240
psx that we've seen in the previous demo

347
00:13:08,240 --> 00:13:09,040
um

348
00:13:09,040 --> 00:13:11,120
and that require a lot of logs you need

349
00:13:11,120 --> 00:13:13,120
to go to the clients

350
00:13:13,120 --> 00:13:15,200
collect the rpc logs and the process

351
00:13:15,200 --> 00:13:16,720
creation logs you need to go to the

352
00:13:16,720 --> 00:13:19,200
server take some logs from there you

353
00:13:19,200 --> 00:13:23,120
need to put your uh

354
00:13:23,120 --> 00:13:25,440
sensors on the network click that logs

355
00:13:25,440 --> 00:13:26,959
from there you need to create all this

356
00:13:26,959 --> 00:13:28,240
logic

357
00:13:28,240 --> 00:13:30,079
to create the correlations between those

358
00:13:30,079 --> 00:13:31,600
logs and after you do that maybe you'll

359
00:13:31,600 --> 00:13:33,440
get a detection for one

360
00:13:33,440 --> 00:13:35,120
type of lateral movement so that's a lot

361
00:13:35,120 --> 00:13:37,600
of work

362
00:13:37,760 --> 00:13:38,639
and

363
00:13:38,639 --> 00:13:40,560
it's very hard to do and very hard to

364
00:13:40,560 --> 00:13:42,160
scale

365
00:13:42,160 --> 00:13:44,079
and of course it has its drawbacks one

366
00:13:44,079 --> 00:13:46,800
what happens if the client is custom not

367
00:13:46,800 --> 00:13:49,040
a native rpc client so you don't get

368
00:13:49,040 --> 00:13:50,160
those logs

369
00:13:50,160 --> 00:13:52,160
or the client is compromised maybe you

370
00:13:52,160 --> 00:13:54,639
don't get any logs or false logs and so

371
00:13:54,639 --> 00:13:56,560
on

372
00:13:56,560 --> 00:13:58,880
so what happens if you can't detect rpc

373
00:13:58,880 --> 00:14:01,760
with the logs can you still block it so

374
00:14:01,760 --> 00:14:04,160
if you ask me those this question a few

375
00:14:04,160 --> 00:14:06,320
months ago i would say apparently

376
00:14:06,320 --> 00:14:08,959
apparently not but i was wrong because

377
00:14:08,959 --> 00:14:10,480
apparently yes

378
00:14:10,480 --> 00:14:13,279
um i found this out through a tweet from

379
00:14:13,279 --> 00:14:14,800
benjamin delphi and i want to thank of

380
00:14:14,800 --> 00:14:18,160
course craig uh kirby for letting most

381
00:14:18,160 --> 00:14:20,720
of the community know who probably

382
00:14:20,720 --> 00:14:23,279
weren't aware that there are instance

383
00:14:23,279 --> 00:14:25,199
things rpc filters

384
00:14:25,199 --> 00:14:27,920
uh but it's a thing uh the windows

385
00:14:27,920 --> 00:14:30,480
filtering platform actually supports

386
00:14:30,480 --> 00:14:33,360
them and the rpc runtime can

387
00:14:33,360 --> 00:14:35,519
query or load those

388
00:14:35,519 --> 00:14:36,720
filters

389
00:14:36,720 --> 00:14:39,600
from the firewall

390
00:14:40,480 --> 00:14:42,639
and they have a lot of options

391
00:14:42,639 --> 00:14:45,760
apparently that you can use

392
00:14:45,760 --> 00:14:47,519
many of them i i would say they're not

393
00:14:47,519 --> 00:14:49,680
that practical like

394
00:14:49,680 --> 00:14:53,040
the image name or specific rpc flags you

395
00:14:53,040 --> 00:14:54,560
probably won't need to use them on the

396
00:14:54,560 --> 00:14:56,880
databases

397
00:14:56,880 --> 00:14:59,279
the interface uad is a practical one you

398
00:14:59,279 --> 00:15:01,040
can actually use them to completely

399
00:15:01,040 --> 00:15:03,040
block or allow

400
00:15:03,040 --> 00:15:04,959
whole interfaces

401
00:15:04,959 --> 00:15:07,120
but there are some issues if you want to

402
00:15:07,120 --> 00:15:09,120
create filters based on the remote

403
00:15:09,120 --> 00:15:11,440
address for example which can be very

404
00:15:11,440 --> 00:15:13,680
useful for example in the case of this

405
00:15:13,680 --> 00:15:14,959
sync

406
00:15:14,959 --> 00:15:17,839
you can't because it's not working it's

407
00:15:17,839 --> 00:15:19,519
actually an issue

408
00:15:19,519 --> 00:15:21,920
we're working on with microsoft to try

409
00:15:21,920 --> 00:15:23,920
and resolve

410
00:15:23,920 --> 00:15:25,600
another thing is that if you want to

411
00:15:25,600 --> 00:15:27,519
filter out a specific function

412
00:15:27,519 --> 00:15:29,279
just like we've seen

413
00:15:29,279 --> 00:15:31,360
some operations like read operation from

414
00:15:31,360 --> 00:15:33,279
the sam database are

415
00:15:33,279 --> 00:15:35,360
common they happen a lot maybe they're

416
00:15:35,360 --> 00:15:36,240
okay

417
00:15:36,240 --> 00:15:38,079
some operations like writing into the

418
00:15:38,079 --> 00:15:40,560
database less common maybe you need to

419
00:15:40,560 --> 00:15:42,079
check them out

420
00:15:42,079 --> 00:15:46,399
it doesn't have that granularity

421
00:15:46,399 --> 00:15:47,360
um

422
00:15:47,360 --> 00:15:48,399
so

423
00:15:48,399 --> 00:15:50,560
what i said earlier let's just see that

424
00:15:50,560 --> 00:15:52,480
again in a in a quick demo we're going

425
00:15:52,480 --> 00:15:53,160
to see

426
00:15:53,160 --> 00:15:54,720
[Music]

427
00:15:54,720 --> 00:15:57,279
how the dc sync attack

428
00:15:57,279 --> 00:15:59,279
can be protected

429
00:15:59,279 --> 00:16:02,160
with using the rpc filters and show you

430
00:16:02,160 --> 00:16:04,000
how the rpc filters work

431
00:16:04,000 --> 00:16:06,160
but of course once it does it breaks

432
00:16:06,160 --> 00:16:08,800
your environment so this is the attack

433
00:16:08,800 --> 00:16:10,320
we've seen before and it's the same

434
00:16:10,320 --> 00:16:12,399
setup that we've seen before i would

435
00:16:12,399 --> 00:16:14,800
just run the dc sync attack and of

436
00:16:14,800 --> 00:16:17,040
course nothing nothing new it works just

437
00:16:17,040 --> 00:16:19,199
like it did last time

438
00:16:19,199 --> 00:16:21,120
this time i'm going to

439
00:16:21,120 --> 00:16:23,440
use those rc filters now you can use

440
00:16:23,440 --> 00:16:26,320
them with the windows api so they have

441
00:16:26,320 --> 00:16:28,320
an api that you can use to create those

442
00:16:28,320 --> 00:16:30,800
rpc filters you can use them

443
00:16:30,800 --> 00:16:32,800
in this example i'm using the net sh

444
00:16:32,800 --> 00:16:34,320
command

445
00:16:34,320 --> 00:16:36,079
and i'm creating a rule the rule is a

446
00:16:36,079 --> 00:16:37,360
block rule

447
00:16:37,360 --> 00:16:39,440
uh it's going to use the

448
00:16:39,440 --> 00:16:43,120
uuid of the directory application to

449
00:16:43,120 --> 00:16:44,399
block

450
00:16:44,399 --> 00:16:48,000
and once i apply this rule i will try to

451
00:16:48,000 --> 00:16:50,160
run this attack again and of course

452
00:16:50,160 --> 00:16:52,240
unsurprisingly this attack will be

453
00:16:52,240 --> 00:16:54,240
blocked

454
00:16:54,240 --> 00:16:55,839
so you do have that option so once

455
00:16:55,839 --> 00:16:58,240
around this we'll get the error file

456
00:16:58,240 --> 00:17:01,040
which means access denied

457
00:17:01,040 --> 00:17:04,240
and the attack was blocked it worked of

458
00:17:04,240 --> 00:17:06,240
course but the patient died you know the

459
00:17:06,240 --> 00:17:07,919
operation worked

460
00:17:07,919 --> 00:17:09,919
you blocked the rpc calls but you also

461
00:17:09,919 --> 00:17:11,359
block your

462
00:17:11,359 --> 00:17:14,559
your domain possibly

463
00:17:14,640 --> 00:17:17,199
so what can one do when

464
00:17:17,199 --> 00:17:19,359
native logs are not that

465
00:17:19,359 --> 00:17:21,760
non-existent

466
00:17:21,760 --> 00:17:25,039
tracing logs are complex filters as bugs

467
00:17:25,039 --> 00:17:27,919
of course build your own rpc

468
00:17:27,919 --> 00:17:29,200
of course you don't have to build your

469
00:17:29,200 --> 00:17:31,919
own pc because we already did

470
00:17:31,919 --> 00:17:35,280
so let's talk about the rpc firewall

471
00:17:35,280 --> 00:17:37,200
you can find it in our

472
00:17:37,200 --> 00:17:40,559
git repository um

473
00:17:40,559 --> 00:17:41,600
of course

474
00:17:41,600 --> 00:17:43,520
welcome questions if you have feature

475
00:17:43,520 --> 00:17:45,440
requests if you have any issues

476
00:17:45,440 --> 00:17:46,960
we'd like to know about it so you can

477
00:17:46,960 --> 00:17:48,160
contact us

478
00:17:48,160 --> 00:17:49,200
and

479
00:17:49,200 --> 00:17:51,600
should be easy enough to download read

480
00:17:51,600 --> 00:17:54,320
the code and contribute

481
00:17:54,320 --> 00:17:56,080
so we also encourage

482
00:17:56,080 --> 00:17:57,520
that

483
00:17:57,520 --> 00:17:59,600
so the goals of

484
00:17:59,600 --> 00:18:00,400
writing

485
00:18:00,400 --> 00:18:02,799
the rpc firewall were

486
00:18:02,799 --> 00:18:05,039
pretty simple you wanted something to

487
00:18:05,039 --> 00:18:07,360
work alongside the rpc filters so you

488
00:18:07,360 --> 00:18:08,160
can

489
00:18:08,160 --> 00:18:10,799
use them as complementary

490
00:18:10,799 --> 00:18:12,799
tools

491
00:18:12,799 --> 00:18:15,600
sometimes you can't use the filters as

492
00:18:15,600 --> 00:18:17,440
we just saw there are other cases where

493
00:18:17,440 --> 00:18:18,559
you may

494
00:18:18,559 --> 00:18:21,200
you may want to use the rpc filters

495
00:18:21,200 --> 00:18:22,960
instead that i perceive instead of the

496
00:18:22,960 --> 00:18:24,400
rpc firewall

497
00:18:24,400 --> 00:18:26,559
so they work side by side

498
00:18:26,559 --> 00:18:29,840
uh and they give you very usable audits

499
00:18:29,840 --> 00:18:33,039
and filtering i like the native ones

500
00:18:33,039 --> 00:18:36,320
um it gives you native logging so it

501
00:18:36,320 --> 00:18:38,240
produces the

502
00:18:38,240 --> 00:18:40,400
windows event logs you can take those

503
00:18:40,400 --> 00:18:42,320
you can forward them to your sim it

504
00:18:42,320 --> 00:18:44,320
doesn't produce millions of logs it

505
00:18:44,320 --> 00:18:46,320
produces just enough logs

506
00:18:46,320 --> 00:18:47,840
and you can tell it which logs to

507
00:18:47,840 --> 00:18:49,600
produce

508
00:18:49,600 --> 00:18:51,679
can be useful for research you can put

509
00:18:51,679 --> 00:18:54,480
it on your server run a few attacks

510
00:18:54,480 --> 00:18:56,799
see how it looks like in rpc understand

511
00:18:56,799 --> 00:18:58,960
how it works and so on

512
00:18:58,960 --> 00:19:01,200
and you can use it in production uh you

513
00:19:01,200 --> 00:19:02,720
you can put in

514
00:19:02,720 --> 00:19:06,720
one or more or all your rpc servers

515
00:19:06,720 --> 00:19:09,039
and configure it to block any unwanted

516
00:19:09,039 --> 00:19:11,120
activity

517
00:19:11,120 --> 00:19:12,559
so before we

518
00:19:12,559 --> 00:19:14,720
dive into the firewall itself explain

519
00:19:14,720 --> 00:19:17,200
what it does i think it's important to

520
00:19:17,200 --> 00:19:18,720
do a quick demo

521
00:19:18,720 --> 00:19:19,679
um

522
00:19:19,679 --> 00:19:21,120
just to give you a feel of how it looks

523
00:19:21,120 --> 00:19:23,600
like so here we have an rpc client in

524
00:19:23,600 --> 00:19:24,960
rpc server

525
00:19:24,960 --> 00:19:26,799
now notice that the

526
00:19:26,799 --> 00:19:27,520
uh

527
00:19:27,520 --> 00:19:29,440
the direction is mixed on the bottom

528
00:19:29,440 --> 00:19:31,280
it's actually the server the client so

529
00:19:31,280 --> 00:19:34,080
the server is listing on the name pipe

530
00:19:34,080 --> 00:19:35,919
and the client has two functions that

531
00:19:35,919 --> 00:19:37,520
they can call

532
00:19:37,520 --> 00:19:39,440
over on the server

533
00:19:39,440 --> 00:19:41,919
one option is to just simply send text

534
00:19:41,919 --> 00:19:43,679
messages so

535
00:19:43,679 --> 00:19:46,160
things that will be appropriate for

536
00:19:46,160 --> 00:19:48,000
this london event would be

537
00:19:48,000 --> 00:19:51,679
messages like t i would guess

538
00:19:51,679 --> 00:19:53,280
and once they write these messages the

539
00:19:53,280 --> 00:19:55,120
server

540
00:19:55,120 --> 00:19:57,360
writes them another more risky thing

541
00:19:57,360 --> 00:20:00,000
that the client can do is break and exit

542
00:20:00,000 --> 00:20:02,480
or brexit for short which will terminate

543
00:20:02,480 --> 00:20:04,640
the server

544
00:20:04,640 --> 00:20:06,080
and on the right on the top we have the

545
00:20:06,080 --> 00:20:08,559
rpc file uh it's a very simple command

546
00:20:08,559 --> 00:20:09,760
line tool

547
00:20:09,760 --> 00:20:12,640
uh and you can use it uh in this example

548
00:20:12,640 --> 00:20:15,760
would simply apply the firewall to this

549
00:20:15,760 --> 00:20:18,000
server process

550
00:20:18,000 --> 00:20:21,200
so once i do that uh let's look what it

551
00:20:21,200 --> 00:20:22,640
should do by looking at the

552
00:20:22,640 --> 00:20:24,240
configuration because it takes a

553
00:20:24,240 --> 00:20:26,400
configuration file and it allows

554
00:20:26,400 --> 00:20:28,000
everything so we should expect

555
00:20:28,000 --> 00:20:29,760
everything to work just like it did

556
00:20:29,760 --> 00:20:30,720
before

557
00:20:30,720 --> 00:20:34,720
so when i send a message like a queen

558
00:20:34,720 --> 00:20:37,679
again very appropriate message

559
00:20:37,679 --> 00:20:39,919
server writes it on the bottom

560
00:20:39,919 --> 00:20:43,039
and once i block it first before i after

561
00:20:43,039 --> 00:20:45,200
i change the configuration i need to

562
00:20:45,200 --> 00:20:47,840
update the file itself so it's the

563
00:20:47,840 --> 00:20:49,919
update command

564
00:20:49,919 --> 00:20:52,240
now as you would expect the client tries

565
00:20:52,240 --> 00:20:54,640
to send more messages and of course all

566
00:20:54,640 --> 00:20:56,159
the messages are being blocked and we

567
00:20:56,159 --> 00:20:57,039
get

568
00:20:57,039 --> 00:20:58,159
uh

569
00:20:58,159 --> 00:21:00,159
an error number five again it's the

570
00:21:00,159 --> 00:21:02,960
access denied error

571
00:21:02,960 --> 00:21:05,039
and i want to do something more

572
00:21:05,039 --> 00:21:07,919
sophisticated or more granular

573
00:21:07,919 --> 00:21:09,200
i want to

574
00:21:09,200 --> 00:21:11,440
allow only messages

575
00:21:11,440 --> 00:21:12,799
and i want to

576
00:21:12,799 --> 00:21:15,360
block all the break and exit

577
00:21:15,360 --> 00:21:18,080
so clients can write messages to the

578
00:21:18,080 --> 00:21:21,039
server they can't shut the servers down

579
00:21:21,039 --> 00:21:22,640
and i want to have this granularity

580
00:21:22,640 --> 00:21:24,720
again i need to update and now as you

581
00:21:24,720 --> 00:21:27,760
would expect once i write messages they

582
00:21:27,760 --> 00:21:31,840
get written inside the server no problem

583
00:21:31,840 --> 00:21:33,440
um

584
00:21:33,440 --> 00:21:36,000
i will write another messages

585
00:21:36,000 --> 00:21:38,400
one more so this is the last one and now

586
00:21:38,400 --> 00:21:40,640
when the client tries to actually break

587
00:21:40,640 --> 00:21:41,919
and exit

588
00:21:41,919 --> 00:21:44,720
it it gets blocked and another last

589
00:21:44,720 --> 00:21:46,480
feature that i want to show you you can

590
00:21:46,480 --> 00:21:49,280
do unprotect this will

591
00:21:49,280 --> 00:21:51,200
remove the firewall from any process

592
00:21:51,200 --> 00:21:53,600
that it's being protected on

593
00:21:53,600 --> 00:21:55,840
and now the client can send messages and

594
00:21:55,840 --> 00:21:58,400
they can also brexit

595
00:21:58,400 --> 00:22:00,400
because there is no firewall nothing is

596
00:22:00,400 --> 00:22:02,400
blocking it

597
00:22:02,400 --> 00:22:04,000
so this is just we saw the basic

598
00:22:04,000 --> 00:22:05,120
operation

599
00:22:05,120 --> 00:22:07,679
of the rpc firewall

600
00:22:07,679 --> 00:22:08,880
um

601
00:22:08,880 --> 00:22:11,520
the rpc file itself has three components

602
00:22:11,520 --> 00:22:14,640
uh the firewall dealer itself

603
00:22:14,640 --> 00:22:16,720
uh this is what does all the heavy

604
00:22:16,720 --> 00:22:18,640
lifting this one hooks a specific

605
00:22:18,640 --> 00:22:21,360
function inside the rpc runtime

606
00:22:21,360 --> 00:22:24,799
um i won't go into too much detail about

607
00:22:24,799 --> 00:22:27,440
this because of of time constraints uh

608
00:22:27,440 --> 00:22:29,600
you can read about it more in the

609
00:22:29,600 --> 00:22:32,960
git documentation or

610
00:22:32,960 --> 00:22:35,120
or the code itself

611
00:22:35,120 --> 00:22:36,559
but that's what it basically does it

612
00:22:36,559 --> 00:22:38,080
hooks specific function collects

613
00:22:38,080 --> 00:22:39,520
information

614
00:22:39,520 --> 00:22:40,960
about the function that makes the

615
00:22:40,960 --> 00:22:42,960
decision should this be blocked or

616
00:22:42,960 --> 00:22:45,200
should this be allowed

617
00:22:45,200 --> 00:22:48,640
we have the rpc manager this is the tool

618
00:22:48,640 --> 00:22:51,440
that we just saw it does the controlling

619
00:22:51,440 --> 00:22:54,320
installation on the rpc5 will uninstall

620
00:22:54,320 --> 00:22:56,240
protect specific processes or all

621
00:22:56,240 --> 00:22:58,720
processes and so on and we have the rpc

622
00:22:58,720 --> 00:23:01,039
messages this this is the dll that

623
00:23:01,039 --> 00:23:02,799
actually formats

624
00:23:02,799 --> 00:23:03,840
um

625
00:23:03,840 --> 00:23:05,919
the the messages to be written to the

626
00:23:05,919 --> 00:23:08,720
event log

627
00:23:08,720 --> 00:23:10,559
so the rpc firewall just like we

628
00:23:10,559 --> 00:23:13,280
mentioned it extracts a lot of

629
00:23:13,280 --> 00:23:15,200
information that is useful

630
00:23:15,200 --> 00:23:18,000
from the rpc call itself

631
00:23:18,000 --> 00:23:20,240
the uid and the op num

632
00:23:20,240 --> 00:23:22,159
which interface which function was

633
00:23:22,159 --> 00:23:24,720
called the source address where it came

634
00:23:24,720 --> 00:23:26,640
from which is crucial

635
00:23:26,640 --> 00:23:29,280
um the identity of the client if there

636
00:23:29,280 --> 00:23:32,320
is one um so if i find it authenticated

637
00:23:32,320 --> 00:23:34,320
i should see that identity

638
00:23:34,320 --> 00:23:36,240
uh the process of course hosting the

639
00:23:36,240 --> 00:23:38,880
server uh as a side note

640
00:23:38,880 --> 00:23:40,400
using pretty much

641
00:23:40,400 --> 00:23:41,840
the same mechanism you can also

642
00:23:41,840 --> 00:23:44,720
understand if it's a local call of rpc

643
00:23:44,720 --> 00:23:46,880
because we're discussing remote calls if

644
00:23:46,880 --> 00:23:50,000
it's a local call you know the source uh

645
00:23:50,000 --> 00:23:52,799
process id that made that call but let's

646
00:23:52,799 --> 00:23:54,559
i just want to mention this let's out of

647
00:23:54,559 --> 00:23:56,400
scope for

648
00:23:56,400 --> 00:23:59,200
this discussion

649
00:23:59,200 --> 00:24:02,559
and the log that is being produced is

650
00:24:02,559 --> 00:24:04,480
i would say much more usable

651
00:24:04,480 --> 00:24:07,840
uh we know which process uh received uh

652
00:24:07,840 --> 00:24:09,360
the rpc call

653
00:24:09,360 --> 00:24:11,679
uh we you can also see here by the way

654
00:24:11,679 --> 00:24:13,760
the function that we hooked so you have

655
00:24:13,760 --> 00:24:14,480
the

656
00:24:14,480 --> 00:24:17,200
name of the function in this event log

657
00:24:17,200 --> 00:24:20,640
um we get the network information like

658
00:24:20,640 --> 00:24:23,279
which endpoint was used uh what was the

659
00:24:23,279 --> 00:24:25,840
port or named pipe and we have the

660
00:24:25,840 --> 00:24:27,760
source network address so we know

661
00:24:27,760 --> 00:24:29,840
exactly where this call came from which

662
00:24:29,840 --> 00:24:31,360
is crucial

663
00:24:31,360 --> 00:24:32,799
we have of course the information about

664
00:24:32,799 --> 00:24:35,440
the rpc the op number and the uid

665
00:24:35,440 --> 00:24:37,200
and we have the subject we know who made

666
00:24:37,200 --> 00:24:39,360
this rpc call so we have

667
00:24:39,360 --> 00:24:41,520
uh i would say enough information to

668
00:24:41,520 --> 00:24:44,320
make it this this is a decision

669
00:24:44,320 --> 00:24:47,520
if this is a good call or a bad call

670
00:24:47,520 --> 00:24:49,760
um also if you're interested you can use

671
00:24:49,760 --> 00:24:51,919
some uh debug logs that write some debug

672
00:24:51,919 --> 00:24:53,039
information

673
00:24:53,039 --> 00:24:54,159
and gives you a little bit more

674
00:24:54,159 --> 00:24:57,120
information about uh our other rpc

675
00:24:57,120 --> 00:24:59,440
interfaces inside the servers

676
00:24:59,440 --> 00:25:02,159
you can understand more the logic of the

677
00:25:02,159 --> 00:25:04,080
rpc firewall if you want to debug

678
00:25:04,080 --> 00:25:06,400
something or understand this as a little

679
00:25:06,400 --> 00:25:09,360
bit deeper level

680
00:25:09,360 --> 00:25:11,360
and let's talk about the manager itself

681
00:25:11,360 --> 00:25:13,840
um i've shown some of these commands i

682
00:25:13,840 --> 00:25:16,640
have the install uninstall

683
00:25:16,640 --> 00:25:19,600
pretty self-explanatory

684
00:25:19,600 --> 00:25:21,200
the install basically

685
00:25:21,200 --> 00:25:24,960
dumps some dlls inside the system 32

686
00:25:24,960 --> 00:25:26,880
the messages in the rpc firewall that

687
00:25:26,880 --> 00:25:28,720
they need to use they configure the

688
00:25:28,720 --> 00:25:30,720
event log and the uninstall of course

689
00:25:30,720 --> 00:25:32,880
does the opposite is the event log it

690
00:25:32,880 --> 00:25:35,600
deletes your dlls

691
00:25:35,600 --> 00:25:37,360
and then you can protect specific

692
00:25:37,360 --> 00:25:39,760
services or all services based on their

693
00:25:39,760 --> 00:25:42,159
name based on their pits and you can

694
00:25:42,159 --> 00:25:44,000
unprotect if you want to remove the

695
00:25:44,000 --> 00:25:47,520
firewall altogether

696
00:25:47,520 --> 00:25:50,240
configuration wise

697
00:25:50,240 --> 00:25:52,799
there is a

698
00:25:52,799 --> 00:25:55,120
the file manager reads the configuration

699
00:25:55,120 --> 00:25:57,919
file from the local folder where it's

700
00:25:57,919 --> 00:25:58,880
running

701
00:25:58,880 --> 00:26:00,720
that's the name of the configuration

702
00:26:00,720 --> 00:26:03,600
file the rpc file conf

703
00:26:03,600 --> 00:26:05,200
just like we saw

704
00:26:05,200 --> 00:26:07,760
for every change you simply update

705
00:26:07,760 --> 00:26:10,400
called the update command and

706
00:26:10,400 --> 00:26:11,440
it should

707
00:26:11,440 --> 00:26:12,640
update all the

708
00:26:12,640 --> 00:26:14,080
firewalls

709
00:26:14,080 --> 00:26:16,640
currently it supports uuid

710
00:26:16,640 --> 00:26:19,039
it supports opnom and it supports

711
00:26:19,039 --> 00:26:20,240
address

712
00:26:20,240 --> 00:26:22,799
for filtering and you can also control

713
00:26:22,799 --> 00:26:25,520
the action of course if if it's block or

714
00:26:25,520 --> 00:26:28,240
allow and you can also control the audit

715
00:26:28,240 --> 00:26:30,400
whether you produce an event log

716
00:26:30,400 --> 00:26:32,159
or don't produce an event logger that's

717
00:26:32,159 --> 00:26:34,960
very important for performance

718
00:26:34,960 --> 00:26:37,679
uh the way that uh

719
00:26:37,679 --> 00:26:39,919
the filtering works is simply line by

720
00:26:39,919 --> 00:26:41,120
line

721
00:26:41,120 --> 00:26:44,080
uh the first match determines

722
00:26:44,080 --> 00:26:44,450
um

723
00:26:44,450 --> 00:26:46,159
[Music]

724
00:26:46,159 --> 00:26:49,279
and for example if we just seen the dc

725
00:26:49,279 --> 00:26:51,200
sync attack

726
00:26:51,200 --> 00:26:54,960
if we want if we we would want to block

727
00:26:54,960 --> 00:26:56,320
uh

728
00:26:56,320 --> 00:26:58,720
all dc sync action except for ones

729
00:26:58,720 --> 00:27:00,960
coming from other domain controllers we

730
00:27:00,960 --> 00:27:03,360
can do this with this configuration so

731
00:27:03,360 --> 00:27:04,720
we allow

732
00:27:04,720 --> 00:27:07,760
uh specific addresses to call this

733
00:27:07,760 --> 00:27:10,240
interface which is the drsr we've seen

734
00:27:10,240 --> 00:27:12,960
it before and every other interface

735
00:27:12,960 --> 00:27:15,440
would be any other call from another ip

736
00:27:15,440 --> 00:27:16,960
address would be block

737
00:27:16,960 --> 00:27:19,279
so we can control our

738
00:27:19,279 --> 00:27:22,799
attack surface for rpc and for any rpc

739
00:27:22,799 --> 00:27:25,679
in this specifically

740
00:27:25,679 --> 00:27:28,480
performance-wise i ran multiple tests

741
00:27:28,480 --> 00:27:30,480
and as long as you don't the most happy

742
00:27:30,480 --> 00:27:32,320
operation is the writing of the event

743
00:27:32,320 --> 00:27:34,320
log

744
00:27:34,320 --> 00:27:36,480
of course we're constantly improving

745
00:27:36,480 --> 00:27:37,600
that

746
00:27:37,600 --> 00:27:39,279
maybe by the time you see this which

747
00:27:39,279 --> 00:27:40,399
will be

748
00:27:40,399 --> 00:27:42,159
in the future after i recall this

749
00:27:42,159 --> 00:27:44,559
presentation we will already fix that

750
00:27:44,559 --> 00:27:46,159
there is some penalty performance if

751
00:27:46,159 --> 00:27:47,919
there is an audit but as long as there

752
00:27:47,919 --> 00:27:49,679
is no audit you get

753
00:27:49,679 --> 00:27:52,320
nothing that can be distinguished uh

754
00:27:52,320 --> 00:27:55,200
i've run tens of thousands of rpc calls

755
00:27:55,200 --> 00:27:57,039
for different services i couldn't detect

756
00:27:57,039 --> 00:27:58,880
any cpu

757
00:27:58,880 --> 00:28:00,320
differences

758
00:28:00,320 --> 00:28:02,799
timing differences and so on so it looks

759
00:28:02,799 --> 00:28:05,360
like it doesn't have any uh

760
00:28:05,360 --> 00:28:07,679
major penalties for using this in

761
00:28:07,679 --> 00:28:09,440
production

762
00:28:09,440 --> 00:28:11,600
uh some consideration that you need to

763
00:28:11,600 --> 00:28:13,679
take in mind when using the opposite

764
00:28:13,679 --> 00:28:15,360
firewall is this

765
00:28:15,360 --> 00:28:17,679
persistency and again

766
00:28:17,679 --> 00:28:19,600
this is simply out of scope for this

767
00:28:19,600 --> 00:28:21,919
tool uh currently maybe in a future

768
00:28:21,919 --> 00:28:22,880
version

769
00:28:22,880 --> 00:28:24,960
uh once the process is down the firewall

770
00:28:24,960 --> 00:28:25,919
of course

771
00:28:25,919 --> 00:28:27,919
because it hooks to specific functions

772
00:28:27,919 --> 00:28:29,919
when the process is down the firewall

773
00:28:29,919 --> 00:28:31,120
and

774
00:28:31,120 --> 00:28:33,360
spins up as a new process

775
00:28:33,360 --> 00:28:35,200
the file won't be there

776
00:28:35,200 --> 00:28:37,919
so for most services it's not a big

777
00:28:37,919 --> 00:28:39,440
issue because most of them are

778
00:28:39,440 --> 00:28:41,840
persistent throughout the time that the

779
00:28:41,840 --> 00:28:43,760
server has been up

780
00:28:43,760 --> 00:28:46,000
so you can create a startup script or

781
00:28:46,000 --> 00:28:47,440
service that

782
00:28:47,440 --> 00:28:51,039
continuously installs the rpc server

783
00:28:51,039 --> 00:28:52,720
if you want so fit maybe you will do

784
00:28:52,720 --> 00:28:55,520
this in a future version

785
00:28:55,520 --> 00:28:57,279
of course when you run you need to have

786
00:28:57,279 --> 00:29:00,000
admin privileges you can actually hook

787
00:29:00,000 --> 00:29:02,880
higher privileges higher privilege

788
00:29:02,880 --> 00:29:05,440
processes

789
00:29:05,440 --> 00:29:06,720
there is an issue of course with

790
00:29:06,720 --> 00:29:09,200
protected process out of the box i think

791
00:29:09,200 --> 00:29:10,559
you only get

792
00:29:10,559 --> 00:29:13,679
the rpc process which is relevant uh is

793
00:29:13,679 --> 00:29:15,360
maybe one

794
00:29:15,360 --> 00:29:16,399
um

795
00:29:16,399 --> 00:29:18,559
but most of the processes that you can

796
00:29:18,559 --> 00:29:20,559
and should protect don't

797
00:29:20,559 --> 00:29:22,159
are not protected

798
00:29:22,159 --> 00:29:23,120
um

799
00:29:23,120 --> 00:29:24,720
but if you still want to use the rpc

800
00:29:24,720 --> 00:29:27,600
firewall for research for example

801
00:29:27,600 --> 00:29:30,080
you can do that with tools like mimikats

802
00:29:30,080 --> 00:29:32,080
you can remove the protection

803
00:29:32,080 --> 00:29:35,200
install the rpc file we'll see how

804
00:29:35,200 --> 00:29:38,880
see how the calls work on the inside

805
00:29:38,880 --> 00:29:41,520
and then you use maybe the rpc filters

806
00:29:41,520 --> 00:29:43,919
side by side and in production with the

807
00:29:43,919 --> 00:29:45,919
rpc firewall so this is also why it's

808
00:29:45,919 --> 00:29:47,360
important to

809
00:29:47,360 --> 00:29:50,159
to have that distinction

810
00:29:50,159 --> 00:29:52,559
so now we come up to the last part

811
00:29:52,559 --> 00:29:53,520
called

812
00:29:53,520 --> 00:29:55,840
burning bridges and now we're going to

813
00:29:55,840 --> 00:29:57,679
give practical example of how you can

814
00:29:57,679 --> 00:29:59,360
use this tool

815
00:29:59,360 --> 00:30:01,440
if you're in a defensive team or just a

816
00:30:01,440 --> 00:30:05,200
researcher doing some rpc research

817
00:30:05,200 --> 00:30:06,480
how you can use it and how you can

818
00:30:06,480 --> 00:30:08,480
actually use the production uh to

819
00:30:08,480 --> 00:30:12,240
protect your uh your server and services

820
00:30:12,240 --> 00:30:14,799
uh so basic um

821
00:30:14,799 --> 00:30:16,720
two types of cycles or two types of

822
00:30:16,720 --> 00:30:18,799
operations i guess that you can use it

823
00:30:18,799 --> 00:30:22,080
for you can use the rpc file to create a

824
00:30:22,080 --> 00:30:23,600
allow list

825
00:30:23,600 --> 00:30:26,720
simply audit everything allow everything

826
00:30:26,720 --> 00:30:29,840
look at what is normal

827
00:30:29,840 --> 00:30:32,480
and if you're positive that it's normal

828
00:30:32,480 --> 00:30:35,360
allow this and block everything else

829
00:30:35,360 --> 00:30:37,760
you can create your block list or deny

830
00:30:37,760 --> 00:30:40,000
list

831
00:30:40,399 --> 00:30:41,919
do the same thing

832
00:30:41,919 --> 00:30:43,919
run specific attacks that you know that

833
00:30:43,919 --> 00:30:46,399
are bad record

834
00:30:46,399 --> 00:30:48,480
use it to create your configuration that

835
00:30:48,480 --> 00:30:50,880
blocks all of these attacks

836
00:30:50,880 --> 00:30:51,760
and

837
00:30:51,760 --> 00:30:54,000
put it in production and maybe later

838
00:30:54,000 --> 00:30:55,120
profit

839
00:30:55,120 --> 00:30:57,120
so let's see the final demo and again in

840
00:30:57,120 --> 00:30:59,200
this demo i'm going to show

841
00:30:59,200 --> 00:31:00,399
uh

842
00:31:00,399 --> 00:31:02,000
some of the attacks that again we've

843
00:31:02,000 --> 00:31:04,480
already seen the smr

844
00:31:04,480 --> 00:31:05,919
the samo

845
00:31:05,919 --> 00:31:08,000
as you remember we did a read operation

846
00:31:08,000 --> 00:31:09,679
from database which is like a

847
00:31:09,679 --> 00:31:11,600
reconnaissance attack but also can be

848
00:31:11,600 --> 00:31:13,200
very common

849
00:31:13,200 --> 00:31:15,200
maybe you don't need to know every time

850
00:31:15,200 --> 00:31:18,559
that this happens and we see a write

851
00:31:18,559 --> 00:31:20,720
attack so we create objects inside the

852
00:31:20,720 --> 00:31:22,000
domain

853
00:31:22,000 --> 00:31:23,519
inside the directory

854
00:31:23,519 --> 00:31:26,159
uh so we'll see how you can block that

855
00:31:26,159 --> 00:31:28,559
and create alerts specifically for that

856
00:31:28,559 --> 00:31:31,039
and for this sync we can see how unlike

857
00:31:31,039 --> 00:31:33,600
the rpc filter

858
00:31:33,600 --> 00:31:35,519
the windows rpc filter which has this

859
00:31:35,519 --> 00:31:38,080
bug you can use it to block specific ip

860
00:31:38,080 --> 00:31:41,760
address and allow everything else

861
00:31:42,960 --> 00:31:44,640
so again we have the same setup this is

862
00:31:44,640 --> 00:31:46,480
the target domain controller

863
00:31:46,480 --> 00:31:48,240
as you've seen

864
00:31:48,240 --> 00:31:49,919
we have a configuration to allow

865
00:31:49,919 --> 00:31:53,200
everything and audit everything

866
00:31:53,200 --> 00:31:55,440
and before uh before we start of course

867
00:31:55,440 --> 00:31:58,399
we need to install the rpc firewall

868
00:31:58,399 --> 00:32:01,519
so luckily we have the install command

869
00:32:01,519 --> 00:32:04,880
that's exactly what i'm going to use

870
00:32:05,840 --> 00:32:07,840
and once it's installed

871
00:32:07,840 --> 00:32:10,399
um it will create the

872
00:32:10,399 --> 00:32:14,320
it will dump dlls inside the root folder

873
00:32:14,320 --> 00:32:17,760
it will also create the

874
00:32:17,760 --> 00:32:20,000
registry keys for the

875
00:32:20,000 --> 00:32:21,840
windows event

876
00:32:21,840 --> 00:32:23,200
and i can

877
00:32:23,200 --> 00:32:25,919
what i just did is run it

878
00:32:25,919 --> 00:32:29,760
to protect all processes inside my my

879
00:32:29,760 --> 00:32:30,799
machine

880
00:32:30,799 --> 00:32:32,480
so once i do that i have the log i

881
00:32:32,480 --> 00:32:34,320
protect all the processes

882
00:32:34,320 --> 00:32:37,200
uh we can clear the log and start our

883
00:32:37,200 --> 00:32:38,399
cycle

884
00:32:38,399 --> 00:32:40,320
like i described earlier

885
00:32:40,320 --> 00:32:42,480
so first things uh first we're going to

886
00:32:42,480 --> 00:32:45,279
do the read operation from the database

887
00:32:45,279 --> 00:32:47,679
and again we've seen this attack uh we

888
00:32:47,679 --> 00:32:49,519
know that it works

889
00:32:49,519 --> 00:32:52,640
previously if you would run it using uh

890
00:32:52,640 --> 00:32:54,960
native logs you'll get

891
00:32:54,960 --> 00:32:56,720
thousands if not hundreds of logs now we

892
00:32:56,720 --> 00:32:58,799
get a very limited information of logs

893
00:32:58,799 --> 00:33:01,519
of only the rpc calls that we need

894
00:33:01,519 --> 00:33:03,600
uh so we can see exactly what's the

895
00:33:03,600 --> 00:33:05,440
interface id that was called what's the

896
00:33:05,440 --> 00:33:10,000
up num where it came from the ip address

897
00:33:10,000 --> 00:33:11,760
who made this call and so on and so

898
00:33:11,760 --> 00:33:12,960
forth

899
00:33:12,960 --> 00:33:15,200
and we can use it create our

900
00:33:15,200 --> 00:33:17,039
configuration file i will show that

901
00:33:17,039 --> 00:33:18,399
later

902
00:33:18,399 --> 00:33:20,399
and create a

903
00:33:20,399 --> 00:33:22,000
and know that it's a good operation that

904
00:33:22,000 --> 00:33:23,200
we can allow

905
00:33:23,200 --> 00:33:25,360
now we're doing again the tech that we

906
00:33:25,360 --> 00:33:27,919
did before of writing a computer

907
00:33:27,919 --> 00:33:29,919
inside the domain controller

908
00:33:29,919 --> 00:33:32,640
uh again we saw that it works and

909
00:33:32,640 --> 00:33:35,039
unsurprisingly once i go to the event

910
00:33:35,039 --> 00:33:36,960
log

911
00:33:36,960 --> 00:33:39,120
uh i will see only the events related to

912
00:33:39,120 --> 00:33:40,399
this attack

913
00:33:40,399 --> 00:33:41,760
and again i have all the information

914
00:33:41,760 --> 00:33:44,960
that i need to create a block uh rule

915
00:33:44,960 --> 00:33:46,320
um

916
00:33:46,320 --> 00:33:48,320
and know when somebody is trying to

917
00:33:48,320 --> 00:33:50,240
create uh

918
00:33:50,240 --> 00:33:52,720
objects inside my directory and finally

919
00:33:52,720 --> 00:33:53,440
the

920
00:33:53,440 --> 00:33:55,200
this is sync attack that again we

921
00:33:55,200 --> 00:33:56,559
already seen

922
00:33:56,559 --> 00:33:57,760
um

923
00:33:57,760 --> 00:33:59,039
again i'm going to run through it's the

924
00:33:59,039 --> 00:34:01,519
same type of operation and i'm just

925
00:34:01,519 --> 00:34:03,760
doing everything for uh completely

926
00:34:03,760 --> 00:34:07,519
completeness so you know that it works

927
00:34:07,519 --> 00:34:08,960
and you see it for yourself again we get

928
00:34:08,960 --> 00:34:10,480
all the information that we need where

929
00:34:10,480 --> 00:34:13,599
it came from this time it's not a dc so

930
00:34:13,599 --> 00:34:15,359
we know we need to allow it only for

931
00:34:15,359 --> 00:34:16,719
disease

932
00:34:16,719 --> 00:34:18,480
and now i'm going to do i will go ahead

933
00:34:18,480 --> 00:34:21,520
and create a configuration which i

934
00:34:21,520 --> 00:34:24,560
already prepared in advance

935
00:34:24,560 --> 00:34:26,960
and this configuration will block

936
00:34:26,960 --> 00:34:29,760
the specific sam operations that are

937
00:34:29,760 --> 00:34:31,839
right these are not the only ones the

938
00:34:31,839 --> 00:34:34,320
operation 15 and 58 they're not the only

939
00:34:34,320 --> 00:34:36,320
write operations but just for simplicity

940
00:34:36,320 --> 00:34:38,719
i just use these ones so i'm blocking

941
00:34:38,719 --> 00:34:41,839
them and i'm putting the audit on true

942
00:34:41,839 --> 00:34:44,159
because i want to know when somebody is

943
00:34:44,159 --> 00:34:46,320
quote unquote attacking me using this

944
00:34:46,320 --> 00:34:47,839
type of techniques and i'm going to

945
00:34:47,839 --> 00:34:50,879
allow everything else and not audit it

946
00:34:50,879 --> 00:34:52,560
because all the other operations maybe

947
00:34:52,560 --> 00:34:54,399
are not that interested

948
00:34:54,399 --> 00:34:56,879
and under the same thing for the dc sync

949
00:34:56,879 --> 00:34:59,359
i'm only going to allow it from an ip

950
00:34:59,359 --> 00:35:01,760
which belongs to domain controller block

951
00:35:01,760 --> 00:35:03,040
everything else

952
00:35:03,040 --> 00:35:05,760
mark audit true and that will create an

953
00:35:05,760 --> 00:35:08,480
event basically an alert a one-to-one

954
00:35:08,480 --> 00:35:10,079
event to alert

955
00:35:10,079 --> 00:35:11,680
that i need to know about it especially

956
00:35:11,680 --> 00:35:14,480
if i'm in the security team

957
00:35:14,480 --> 00:35:16,800
so now i need to update the firewall and

958
00:35:16,800 --> 00:35:18,400
once i do i'll run through all these

959
00:35:18,400 --> 00:35:19,920
tests just like we've seen before and

960
00:35:19,920 --> 00:35:20,880
just to

961
00:35:20,880 --> 00:35:22,640
show you that it works

962
00:35:22,640 --> 00:35:26,000
um i'm going to run the read operation

963
00:35:26,000 --> 00:35:27,839
the read operation is allowed so it's

964
00:35:27,839 --> 00:35:29,200
going to work

965
00:35:29,200 --> 00:35:31,839
but maybe more importantly no events are

966
00:35:31,839 --> 00:35:34,640
produced so as long as everything's okay

967
00:35:34,640 --> 00:35:36,240
i don't get any events i don't get any

968
00:35:36,240 --> 00:35:39,119
penalty basically performance penalty

969
00:35:39,119 --> 00:35:41,119
once i try to write i get an access

970
00:35:41,119 --> 00:35:44,400
denied and i get an event so now i know

971
00:35:44,400 --> 00:35:46,800
that i'm being attacked over rpc i know

972
00:35:46,800 --> 00:35:48,960
it's where it's coming from the attack

973
00:35:48,960 --> 00:35:51,119
failed because it was blocked and i can

974
00:35:51,119 --> 00:35:53,599
investigate the machine same thing for

975
00:35:53,599 --> 00:35:55,119
the moving because this is sync again i

976
00:35:55,119 --> 00:35:57,119
get a single event i know where i got

977
00:35:57,119 --> 00:35:59,920
attacked from i know the hosts did it i

978
00:35:59,920 --> 00:36:01,040
can

979
00:36:01,040 --> 00:36:02,400
isolate them

980
00:36:02,400 --> 00:36:04,240
and i didn't compromise they didn't

981
00:36:04,240 --> 00:36:07,280
compromise my domain

982
00:36:07,280 --> 00:36:09,040
uh

983
00:36:09,040 --> 00:36:12,599
sorry about that

984
00:36:14,640 --> 00:36:17,280
with that little glitch um

985
00:36:17,280 --> 00:36:19,359
i want to thank you for tuning in to my

986
00:36:19,359 --> 00:36:22,400
talk i just want to put up here my uh uh

987
00:36:22,400 --> 00:36:24,720
the github you can check it out again

988
00:36:24,720 --> 00:36:26,960
contact me for anything

989
00:36:26,960 --> 00:36:29,440
you wish um

990
00:36:29,440 --> 00:36:32,160
contribution are encouraged and i want

991
00:36:32,160 --> 00:36:33,680
to thank you again for tuning into my

992
00:36:33,680 --> 00:36:35,599
talk and i guess this is virtual

993
00:36:35,599 --> 00:36:37,200
question time

994
00:36:37,200 --> 00:36:38,240
uh

995
00:36:38,240 --> 00:36:41,910
so thank you very much ciao

996
00:36:41,910 --> 00:36:51,519
[Music]

