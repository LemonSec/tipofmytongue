1
00:00:00,860 --> 00:00:09,280
[Music]

2
00:00:09,280 --> 00:00:11,679
hello everybody and welcome to my talk

3
00:00:11,679 --> 00:00:14,880
the bad guys win analysis of 10 000 mage

4
00:00:14,880 --> 00:00:16,960
card vulnerabilities

5
00:00:16,960 --> 00:00:18,640
a little about myself my name is

6
00:00:18,640 --> 00:00:21,600
nathaniel gallaranter ceo and cto at

7
00:00:21,600 --> 00:00:24,720
cyberpion we protect the organization's

8
00:00:24,720 --> 00:00:26,320
hyper-connected attack surface from the

9
00:00:26,320 --> 00:00:29,039
perimeter to the direct and indirect

10
00:00:29,039 --> 00:00:30,720
supply chain

11
00:00:30,720 --> 00:00:33,680
i'm security researcher hacker

12
00:00:33,680 --> 00:00:36,320
web application security cloud security

13
00:00:36,320 --> 00:00:38,320
expert i have phd in computer science

14
00:00:38,320 --> 00:00:41,120
hacks research paper cvs talks

15
00:00:41,120 --> 00:00:44,120
etc

16
00:00:44,879 --> 00:00:46,640
the agenda for this talk

17
00:00:46,640 --> 00:00:49,600
background uh the magical problem some

18
00:00:49,600 --> 00:00:51,360
statistics

19
00:00:51,360 --> 00:00:54,000
we then we dive into the core uh of the

20
00:00:54,000 --> 00:00:55,520
talk which is about protection

21
00:00:55,520 --> 00:00:59,039
mechanisms and how the hikers

22
00:00:59,039 --> 00:01:02,559
relatively easily bypass them and today

23
00:01:02,559 --> 00:01:05,119
why the bad guys win and how

24
00:01:05,119 --> 00:01:06,479
they win

25
00:01:06,479 --> 00:01:08,799
then we will summarize the talk and

26
00:01:08,799 --> 00:01:10,000
obviously

27
00:01:10,000 --> 00:01:12,479
when we talk about more than

28
00:01:12,479 --> 00:01:14,960
10 000 mage called vulnerabilities we

29
00:01:14,960 --> 00:01:16,240
will allow

30
00:01:16,240 --> 00:01:18,400
organizations to test whether they are

31
00:01:18,400 --> 00:01:21,119
in the statistic

32
00:01:21,119 --> 00:01:22,880
so let's start with some background

33
00:01:22,880 --> 00:01:24,960
about mage card

34
00:01:24,960 --> 00:01:27,200
mage card is a web application security

35
00:01:27,200 --> 00:01:29,040
attack that

36
00:01:29,040 --> 00:01:31,280
in which hackers steal information by

37
00:01:31,280 --> 00:01:34,079
running malicious script javascript in

38
00:01:34,079 --> 00:01:36,640
web applications it is named after the

39
00:01:36,640 --> 00:01:38,079
infamous

40
00:01:38,079 --> 00:01:40,799
hacking group magekart

41
00:01:40,799 --> 00:01:42,240
that launched

42
00:01:42,240 --> 00:01:44,640
the most famous mage card attack against

43
00:01:44,640 --> 00:01:48,159
uh british airways and some others

44
00:01:48,159 --> 00:01:52,720
although this vector was used um before

45
00:01:53,360 --> 00:01:54,560
the famous

46
00:01:54,560 --> 00:01:56,960
mage card attacks triggered

47
00:01:56,960 --> 00:02:00,000
new generation of anti-mage card

48
00:02:00,000 --> 00:02:01,840
solutions and

49
00:02:01,840 --> 00:02:04,880
we will analyze that

50
00:02:05,040 --> 00:02:06,240
in this talk

51
00:02:06,240 --> 00:02:08,560
when we say mage card we will refer to

52
00:02:08,560 --> 00:02:10,160
specific the most

53
00:02:10,160 --> 00:02:12,160
challenging and interesting

54
00:02:12,160 --> 00:02:14,640
uh variant of mage card in which the

55
00:02:14,640 --> 00:02:16,000
hackers attack

56
00:02:16,000 --> 00:02:19,280
third party sometimes fourth fifth party

57
00:02:19,280 --> 00:02:21,280
they compromise the script that is

58
00:02:21,280 --> 00:02:22,800
loaded from this

59
00:02:22,800 --> 00:02:24,800
uh third party

60
00:02:24,800 --> 00:02:27,360
and then just you know from the third

61
00:02:27,360 --> 00:02:30,640
party they serve malicious code to

62
00:02:30,640 --> 00:02:32,800
other applications that rely on this

63
00:02:32,800 --> 00:02:34,239
third party

64
00:02:34,239 --> 00:02:36,319
from one vulnerable infrastructure of a

65
00:02:36,319 --> 00:02:38,160
vendor it is possible obviously to

66
00:02:38,160 --> 00:02:40,160
affect many applications many

67
00:02:40,160 --> 00:02:42,239
organizations

68
00:02:42,239 --> 00:02:43,840
it could be done for stealing

69
00:02:43,840 --> 00:02:46,080
information but

70
00:02:46,080 --> 00:02:48,000
potentially it is possible to do more

71
00:02:48,000 --> 00:02:50,480
than that

72
00:02:50,480 --> 00:02:52,000
before we

73
00:02:52,000 --> 00:02:53,200
dive

74
00:02:53,200 --> 00:02:55,519
into the mage card diagram let's go

75
00:02:55,519 --> 00:02:57,840
through the script inclusion diagram so

76
00:02:57,840 --> 00:02:58,640
when

77
00:02:58,640 --> 00:03:00,840
a user serves to

78
00:03:00,840 --> 00:03:02,400
apps.com

79
00:03:02,400 --> 00:03:04,640
the first thing the browser sends an

80
00:03:04,640 --> 00:03:07,920
http get request to get app.com

81
00:03:07,920 --> 00:03:09,760
maybe through the firewall of the web

82
00:03:09,760 --> 00:03:13,360
server and it gets back html page once

83
00:03:13,360 --> 00:03:15,760
the html page is loaded it is rendered

84
00:03:15,760 --> 00:03:18,400
by the browser and the html page might

85
00:03:18,400 --> 00:03:21,680
include instructions to load additional

86
00:03:21,680 --> 00:03:24,560
code or other objects from third fourth

87
00:03:24,560 --> 00:03:25,920
fifth party

88
00:03:25,920 --> 00:03:28,000
and this is what is happening the

89
00:03:28,000 --> 00:03:29,280
browser

90
00:03:29,280 --> 00:03:30,720
sends from the context of the

91
00:03:30,720 --> 00:03:33,280
application a request to load scripts

92
00:03:33,280 --> 00:03:34,959
the script is loaded the script can

93
00:03:34,959 --> 00:03:37,040
change the application and the script

94
00:03:37,040 --> 00:03:38,799
potentially can send some data to the

95
00:03:38,799 --> 00:03:41,920
third party or to other parties

96
00:03:41,920 --> 00:03:44,080
in a mage card attack

97
00:03:44,080 --> 00:03:46,799
it starts the same the browser the user

98
00:03:46,799 --> 00:03:49,920
wants to serve to app.com the browser

99
00:03:49,920 --> 00:03:53,280
sends the http request gets the same

100
00:03:53,280 --> 00:03:56,400
html page from the web server

101
00:03:56,400 --> 00:03:58,879
the app is loaded same app

102
00:03:58,879 --> 00:04:00,799
the same request for a third party

103
00:04:00,799 --> 00:04:01,840
script

104
00:04:01,840 --> 00:04:03,920
is sent to the third party but this time

105
00:04:03,920 --> 00:04:07,120
the hacker can reply with malicious code

106
00:04:07,120 --> 00:04:09,760
the malicious code can change the app

107
00:04:09,760 --> 00:04:11,599
but for bad

108
00:04:11,599 --> 00:04:13,519
and just as

109
00:04:13,519 --> 00:04:15,840
information could be sent to the legit

110
00:04:15,840 --> 00:04:17,918
third party now it could be sent

111
00:04:17,918 --> 00:04:19,199
either to the hacker or to the

112
00:04:19,199 --> 00:04:22,639
compromised third party

113
00:04:24,000 --> 00:04:25,600
so mage cart traditionally is about

114
00:04:25,600 --> 00:04:27,040
stealing information i would like to

115
00:04:27,040 --> 00:04:30,560
bring an example for a webpage

116
00:04:30,560 --> 00:04:33,040
through which an abuse

117
00:04:33,040 --> 00:04:34,240
could achieve

118
00:04:34,240 --> 00:04:35,600
more than

119
00:04:35,600 --> 00:04:36,960
um

120
00:04:36,960 --> 00:04:38,960
more than just stealing information so

121
00:04:38,960 --> 00:04:39,759
let's

122
00:04:39,759 --> 00:04:42,560
go through this page so this is an old

123
00:04:42,560 --> 00:04:45,840
one no longer active obviously so if

124
00:04:45,840 --> 00:04:47,440
some time ago

125
00:04:47,440 --> 00:04:49,280
you search for

126
00:04:49,280 --> 00:04:52,639
downloading the microsoft edge browser

127
00:04:52,639 --> 00:04:54,240
application

128
00:04:54,240 --> 00:04:57,280
you google it you follow the first

129
00:04:57,280 --> 00:04:58,880
link

130
00:04:58,880 --> 00:05:00,720
and then you get

131
00:05:00,720 --> 00:05:03,520
um this web page in which you can

132
00:05:03,520 --> 00:05:06,400
type your phone number or email and then

133
00:05:06,400 --> 00:05:08,800
you're gonna get a link to download so

134
00:05:08,800 --> 00:05:10,560
obviously

135
00:05:10,560 --> 00:05:12,800
it is possible because this page was

136
00:05:12,800 --> 00:05:15,120
vulnerable to mage card it was possible

137
00:05:15,120 --> 00:05:16,639
to steal the phone number and the emails

138
00:05:16,639 --> 00:05:19,280
that i that are tied but

139
00:05:19,280 --> 00:05:21,759
more than that think about hackers

140
00:05:21,759 --> 00:05:24,560
getting the phone numbers and then just

141
00:05:24,560 --> 00:05:26,560
sending

142
00:05:26,560 --> 00:05:28,240
malicious links

143
00:05:28,240 --> 00:05:31,360
so the users download malware to their

144
00:05:31,360 --> 00:05:32,560
computer

145
00:05:32,560 --> 00:05:34,720
it is enough that somebody will download

146
00:05:34,720 --> 00:05:36,720
such

147
00:05:36,720 --> 00:05:38,479
a fake application to a mobile device

148
00:05:38,479 --> 00:05:39,680
that includes credentials to an

149
00:05:39,680 --> 00:05:41,199
organization it could this could be the

150
00:05:41,199 --> 00:05:44,479
beginning of an apt attack

151
00:05:44,479 --> 00:05:46,720
so that's one example but in general

152
00:05:46,720 --> 00:05:48,960
mage cut from what we see is

153
00:05:48,960 --> 00:05:51,520
classical digital supply chain attack

154
00:05:51,520 --> 00:05:53,759
mistake of one vendor allows reaching

155
00:05:53,759 --> 00:05:56,000
many organizations and i would like to

156
00:05:56,000 --> 00:05:57,680
bring two examples

157
00:05:57,680 --> 00:05:59,520
in the first one

158
00:05:59,520 --> 00:06:01,919
a misconfiguration in marketing

159
00:06:01,919 --> 00:06:05,199
performance platform in the us

160
00:06:05,199 --> 00:06:07,759
we detected strong indications to the

161
00:06:07,759 --> 00:06:09,039
fact that

162
00:06:09,039 --> 00:06:10,240
this

163
00:06:10,240 --> 00:06:12,000
the misconfigured

164
00:06:12,000 --> 00:06:16,639
cloud instance of the vendor was abused

165
00:06:16,639 --> 00:06:19,199
uh and it could affect many retailers

166
00:06:19,199 --> 00:06:22,319
that loaded script from that instance we

167
00:06:22,319 --> 00:06:24,479
reported about this

168
00:06:24,479 --> 00:06:26,400
issue to one of the largest retailers in

169
00:06:26,400 --> 00:06:27,680
the us

170
00:06:27,680 --> 00:06:30,000
that was affected in one of its login

171
00:06:30,000 --> 00:06:31,199
pages

172
00:06:31,199 --> 00:06:33,039
it was fixed immediately by this

173
00:06:33,039 --> 00:06:35,919
retailer and the retailer also notified

174
00:06:35,919 --> 00:06:38,479
the vendor that quickly fixed the issue

175
00:06:38,479 --> 00:06:41,840
but we know that many other retailers

176
00:06:41,840 --> 00:06:44,400
do not even know about this incident

177
00:06:44,400 --> 00:06:46,800
they don't know that they were affected

178
00:06:46,800 --> 00:06:51,520
by it a second example even bigger one

179
00:06:51,520 --> 00:06:54,319
security misconfiguration in one of the

180
00:06:54,319 --> 00:06:57,360
five largest advertising agency networks

181
00:06:57,360 --> 00:06:59,120
according to wikipedia

182
00:06:59,120 --> 00:07:01,919
allows to run code on many of their

183
00:07:01,919 --> 00:07:04,000
customers we talk about

184
00:07:04,000 --> 00:07:06,960
the largest brands in the world most of

185
00:07:06,960 --> 00:07:09,840
the largest brands in some countries

186
00:07:09,840 --> 00:07:11,840
global corporations and really many

187
00:07:11,840 --> 00:07:13,599
others

188
00:07:13,599 --> 00:07:16,960
here we directly contacted um the vendor

189
00:07:16,960 --> 00:07:18,560
the vendor quickly

190
00:07:18,560 --> 00:07:21,360
fixed the issue yet as far as we know

191
00:07:21,360 --> 00:07:24,160
the vendor has never reported

192
00:07:24,160 --> 00:07:27,440
about this security vulnerability

193
00:07:27,440 --> 00:07:32,719
to any of the many affected companies

194
00:07:33,039 --> 00:07:33,759
so

195
00:07:33,759 --> 00:07:36,000
what are the challenges about mage card

196
00:07:36,000 --> 00:07:38,400
it happens without

197
00:07:38,400 --> 00:07:39,599
anybody

198
00:07:39,599 --> 00:07:41,520
knowing about it in most of the cases it

199
00:07:41,520 --> 00:07:44,319
happens outside the organization as you

200
00:07:44,319 --> 00:07:45,840
could see from the few examples we

201
00:07:45,840 --> 00:07:47,680
brought and we so many examples like

202
00:07:47,680 --> 00:07:50,479
that the third part is do not disclose

203
00:07:50,479 --> 00:07:52,720
vulnerabilities incidents to affect it

204
00:07:52,720 --> 00:07:54,800
and companies

205
00:07:54,800 --> 00:07:56,560
if you remember the diagram it looks the

206
00:07:56,560 --> 00:07:59,280
same from the server's perspective so

207
00:07:59,280 --> 00:08:00,960
hackers can complete a major card attack

208
00:08:00,960 --> 00:08:03,199
without a single packet going through

209
00:08:03,199 --> 00:08:05,919
the organizational network

210
00:08:05,919 --> 00:08:07,599
and what we are going to talk about is

211
00:08:07,599 --> 00:08:09,520
the fact that security solutions today

212
00:08:09,520 --> 00:08:10,960
are blind about it including the ones

213
00:08:10,960 --> 00:08:13,610
that should be anti-magic

214
00:08:13,610 --> 00:08:15,199
[Music]

215
00:08:15,199 --> 00:08:16,560
so uh

216
00:08:16,560 --> 00:08:19,280
some statistics the data

217
00:08:19,280 --> 00:08:21,520
in the title of the talk we say ten

218
00:08:21,520 --> 00:08:23,280
thousand major vulnerabilities actually

219
00:08:23,280 --> 00:08:24,160
it is

220
00:08:24,160 --> 00:08:27,199
much more than that um so the source of

221
00:08:27,199 --> 00:08:28,720
the data is cyberpunk's global

222
00:08:28,720 --> 00:08:30,400
monitoring system we have a system that

223
00:08:30,400 --> 00:08:32,479
analyzes the entire internet a little

224
00:08:32,479 --> 00:08:33,839
more than that

225
00:08:33,839 --> 00:08:36,159
assets and the connections between them

226
00:08:36,159 --> 00:08:37,760
we were able to detect mage card

227
00:08:37,760 --> 00:08:39,760
vulnerabilities and to track their

228
00:08:39,760 --> 00:08:41,599
exploitation

229
00:08:41,599 --> 00:08:44,080
in some of the cases we took

230
00:08:44,080 --> 00:08:48,000
active steps and we hijack

231
00:08:48,000 --> 00:08:50,560
hijacked

232
00:08:50,640 --> 00:08:53,040
servers so we were able to see

233
00:08:53,040 --> 00:08:55,279
and analyze the server side of the

234
00:08:55,279 --> 00:08:57,040
attack to see

235
00:08:57,040 --> 00:08:59,760
what the hackers can see once they take

236
00:08:59,760 --> 00:09:00,800
over

237
00:09:00,800 --> 00:09:02,720
the servers the servers of the third

238
00:09:02,720 --> 00:09:04,160
party

239
00:09:04,160 --> 00:09:05,839
the trigger for the research if you're

240
00:09:05,839 --> 00:09:06,839
interested

241
00:09:06,839 --> 00:09:09,519
basically we detected several major

242
00:09:09,519 --> 00:09:12,080
vulnerabilities in our system

243
00:09:12,080 --> 00:09:15,279
including several incidents of mage cart

244
00:09:15,279 --> 00:09:16,800
abused

245
00:09:16,800 --> 00:09:17,680
you know

246
00:09:17,680 --> 00:09:20,319
resources

247
00:09:20,480 --> 00:09:23,279
and we found that some of the assets

248
00:09:23,279 --> 00:09:25,680
that suffered from the issue

249
00:09:25,680 --> 00:09:26,800
uh

250
00:09:26,800 --> 00:09:28,640
were actually protected by anti-mage

251
00:09:28,640 --> 00:09:31,120
cart solutions so it triggered it

252
00:09:31,120 --> 00:09:32,480
brought us to

253
00:09:32,480 --> 00:09:35,519
deeply dive into this problem and see

254
00:09:35,519 --> 00:09:37,440
why

255
00:09:37,440 --> 00:09:39,600
why it happened why the solution failed

256
00:09:39,600 --> 00:09:42,320
to catch the attacks

257
00:09:42,320 --> 00:09:44,880
so to the numbers we detected more than

258
00:09:44,880 --> 00:09:48,399
30 000 vulnerable assets we made efforts

259
00:09:48,399 --> 00:09:51,519
to disclose vulnerabilities and yet

260
00:09:51,519 --> 00:09:52,959
it would be nice for me to say that we

261
00:09:52,959 --> 00:09:55,920
had partial success in most of the cases

262
00:09:55,920 --> 00:09:57,279
third parties

263
00:09:57,279 --> 00:09:58,720
haven't reported to affected

264
00:09:58,720 --> 00:10:01,920
organizations or replied to us

265
00:10:01,920 --> 00:10:04,560
organizations that were affected we

266
00:10:04,560 --> 00:10:06,640
did not respond to emails

267
00:10:06,640 --> 00:10:08,959
um so the situation

268
00:10:08,959 --> 00:10:11,360
today is that organizations do not know

269
00:10:11,360 --> 00:10:14,240
that they are or were vulnerable to

270
00:10:14,240 --> 00:10:17,200
magical vulnerabilities as of today

271
00:10:17,200 --> 00:10:19,440
october the 8th

272
00:10:19,440 --> 00:10:22,959
there are more than 15 000

273
00:10:22,959 --> 00:10:25,120
unique fully qualified domain names that

274
00:10:25,120 --> 00:10:28,560
are still vulnerable or abused and new

275
00:10:28,560 --> 00:10:29,519
issues

276
00:10:29,519 --> 00:10:31,600
are still being found just today this

277
00:10:31,600 --> 00:10:33,200
morning we found

278
00:10:33,200 --> 00:10:36,000
10 assets of our application security

279
00:10:36,000 --> 00:10:38,160
company one of the largest ones that are

280
00:10:38,160 --> 00:10:41,839
vulnerable to magic

281
00:10:42,320 --> 00:10:43,920
let's talk about the popularity of the

282
00:10:43,920 --> 00:10:44,839
affected

283
00:10:44,839 --> 00:10:48,240
sites so as of today they said more than

284
00:10:48,240 --> 00:10:50,240
fifteen thousand unique fully qualified

285
00:10:50,240 --> 00:10:52,160
domain names domain or subdomains belong

286
00:10:52,160 --> 00:10:52,880
to

287
00:10:52,880 --> 00:10:54,000
um

288
00:10:54,000 --> 00:10:56,160
ten thousand uh unique second level

289
00:10:56,160 --> 00:10:58,640
domain apex domain

290
00:10:58,640 --> 00:11:01,040
including very popular sites and main

291
00:11:01,040 --> 00:11:03,839
pages of newspapers

292
00:11:03,839 --> 00:11:06,640
there are the most famous tech retail

293
00:11:06,640 --> 00:11:09,360
and other uh companies

294
00:11:09,360 --> 00:11:12,399
more than ten thousand uh more than one

295
00:11:12,399 --> 00:11:14,880
thousand are in the alexa top ten

296
00:11:14,880 --> 00:11:17,200
thousands and more than two thousands

297
00:11:17,200 --> 00:11:22,640
are uh in the alexa top one million

298
00:11:24,160 --> 00:11:26,240
we found that this is a cross-sector

299
00:11:26,240 --> 00:11:27,440
problem

300
00:11:27,440 --> 00:11:30,079
so just to give an idea about the big

301
00:11:30,079 --> 00:11:31,279
names and

302
00:11:31,279 --> 00:11:34,240
the fact that it affects many sectors

303
00:11:34,240 --> 00:11:37,519
we found that in the following sectors

304
00:11:37,519 --> 00:11:40,320
at least one of the top five

305
00:11:40,320 --> 00:11:42,720
okay and and of course others

306
00:11:42,720 --> 00:11:44,480
were affected

307
00:11:44,480 --> 00:11:47,200
banking insurance healthcare retail

308
00:11:47,200 --> 00:11:49,839
pharma tech media and use both

309
00:11:49,839 --> 00:11:51,839
newspapers and

310
00:11:51,839 --> 00:11:54,000
mass media agencies

311
00:11:54,000 --> 00:11:57,519
energy industrials airline accounting

312
00:11:57,519 --> 00:11:58,560
including

313
00:11:58,560 --> 00:12:00,000
the big four

314
00:12:00,000 --> 00:12:02,240
food beverages companies telecom

315
00:12:02,240 --> 00:12:04,480
manufacturing electronics and

316
00:12:04,480 --> 00:12:05,440
some of the

317
00:12:05,440 --> 00:12:08,639
biggest names in the security sector

318
00:12:08,639 --> 00:12:10,399
government universities global

319
00:12:10,399 --> 00:12:12,079
organizations

320
00:12:12,079 --> 00:12:15,120
such as the red cross or uh or similar

321
00:12:15,120 --> 00:12:16,000
ones

322
00:12:16,000 --> 00:12:18,720
and some of the big companies are are

323
00:12:18,720 --> 00:12:20,639
not only affected by third party they

324
00:12:20,639 --> 00:12:23,200
are themselves the third party through

325
00:12:23,200 --> 00:12:26,240
which other organizations are vulnerable

326
00:12:26,240 --> 00:12:30,399
to magic which is worse

327
00:12:30,399 --> 00:12:32,320
analyzing the pages

328
00:12:32,320 --> 00:12:34,560
that were vulnerable we found that

329
00:12:34,560 --> 00:12:36,320
it is possible to steal credit card

330
00:12:36,320 --> 00:12:38,959
numbers login and personal information

331
00:12:38,959 --> 00:12:40,800
more sensitive business information such

332
00:12:40,800 --> 00:12:43,440
as crm information we found several

333
00:12:43,440 --> 00:12:46,480
customized crm pages for example

334
00:12:46,480 --> 00:12:49,040
customized salesforce login pages that

335
00:12:49,040 --> 00:12:51,200
are vulnerable to magecart

336
00:12:51,200 --> 00:12:54,800
um customer ticketing systems web forms

337
00:12:54,800 --> 00:12:55,600
and

338
00:12:55,600 --> 00:12:57,680
on the active site we found you know as

339
00:12:57,680 --> 00:12:59,440
i said main page

340
00:12:59,440 --> 00:13:01,279
main pages of newspapers so it is

341
00:13:01,279 --> 00:13:02,880
possible it is possible to change the

342
00:13:02,880 --> 00:13:04,160
headlines

343
00:13:04,160 --> 00:13:07,279
of the most popular media news sites

344
00:13:07,279 --> 00:13:08,959
just think about a stock exchange

345
00:13:08,959 --> 00:13:11,519
manipulations that could be done

346
00:13:11,519 --> 00:13:13,440
it is possible to change advertisements

347
00:13:13,440 --> 00:13:16,320
steal revenues from online ad services

348
00:13:16,320 --> 00:13:18,800
and he demonstrated the download app but

349
00:13:18,800 --> 00:13:20,399
we have many other examples so it is

350
00:13:20,399 --> 00:13:22,639
possible to download and install

351
00:13:22,639 --> 00:13:25,680
malicious files and

352
00:13:25,680 --> 00:13:28,079
when the magic card is beyond you know

353
00:13:28,079 --> 00:13:29,360
behind

354
00:13:29,360 --> 00:13:31,279
authentication so it is possible to act

355
00:13:31,279 --> 00:13:32,560
on

356
00:13:32,560 --> 00:13:34,560
authenticated applications on behalf of

357
00:13:34,560 --> 00:13:36,959
authenticated users and basically we

358
00:13:36,959 --> 00:13:39,360
found in many cases it is possible to

359
00:13:39,360 --> 00:13:41,279
start the penetration into

360
00:13:41,279 --> 00:13:44,560
the organizational network

361
00:13:45,040 --> 00:13:47,440
the most important thing when we talk

362
00:13:47,440 --> 00:13:49,839
about magekart and the most important

363
00:13:49,839 --> 00:13:52,079
thing that is required to understand the

364
00:13:52,079 --> 00:13:53,120
big gap

365
00:13:53,120 --> 00:13:55,360
is the threat model and we strongly

366
00:13:55,360 --> 00:13:56,399
believe

367
00:13:56,399 --> 00:13:59,360
that both enterprises and some of the

368
00:13:59,360 --> 00:14:01,440
security solutions

369
00:14:01,440 --> 00:14:03,279
that aim to help enterprises fight

370
00:14:03,279 --> 00:14:06,959
mageguard kind of forgot about

371
00:14:06,959 --> 00:14:08,399
the threat model

372
00:14:08,399 --> 00:14:09,440
part

373
00:14:09,440 --> 00:14:10,800
and when we talk about magic card we

374
00:14:10,800 --> 00:14:12,639
talk about the careful hacker

375
00:14:12,639 --> 00:14:15,360
professional hackers are interested in

376
00:14:15,360 --> 00:14:16,480
earning money

377
00:14:16,480 --> 00:14:19,839
they are not gonna deface your site

378
00:14:19,839 --> 00:14:22,720
they want to maximize their benefits

379
00:14:22,720 --> 00:14:24,639
they want to stay

380
00:14:24,639 --> 00:14:27,519
under the radar keep the attack

381
00:14:27,519 --> 00:14:28,959
unknown

382
00:14:28,959 --> 00:14:30,639
they understand the web they are not

383
00:14:30,639 --> 00:14:32,480
script kitties

384
00:14:32,480 --> 00:14:35,360
and therefore they are careful as much

385
00:14:35,360 --> 00:14:37,279
as they can

386
00:14:37,279 --> 00:14:38,720
on the other side there are the

387
00:14:38,720 --> 00:14:41,519
enterprises okay so many websites many

388
00:14:41,519 --> 00:14:44,480
applications distributedly managed many

389
00:14:44,480 --> 00:14:46,880
teams some of their applications are

390
00:14:46,880 --> 00:14:48,959
managed by third parties

391
00:14:48,959 --> 00:14:52,480
complex distributed applications variety

392
00:14:52,480 --> 00:14:56,079
of websites and applications so

393
00:14:56,079 --> 00:14:58,480
very difficult to to act on

394
00:14:58,480 --> 00:15:01,760
all of them at once

395
00:15:01,760 --> 00:15:03,839
and

396
00:15:03,839 --> 00:15:06,959
to the help of the enterprises

397
00:15:06,959 --> 00:15:09,680
come the anti-mage card solutions

398
00:15:09,680 --> 00:15:12,560
the most naive one script monitoring

399
00:15:12,560 --> 00:15:14,480
periodically load script and just check

400
00:15:14,480 --> 00:15:16,639
whether

401
00:15:16,639 --> 00:15:19,519
it has been manipulated

402
00:15:19,519 --> 00:15:21,600
we will go through this one quickly

403
00:15:21,600 --> 00:15:25,199
cliented solutions add a script

404
00:15:25,199 --> 00:15:27,120
to the pages you want to protect and

405
00:15:27,120 --> 00:15:30,000
this script will fight the other

406
00:15:30,000 --> 00:15:31,680
injected scripts

407
00:15:31,680 --> 00:15:33,759
and solutions that use browser native

408
00:15:33,759 --> 00:15:39,120
mechanisms csp sri and combinations

409
00:15:39,279 --> 00:15:41,199
general notes about the careful hacker

410
00:15:41,199 --> 00:15:43,440
and that's very important just think

411
00:15:43,440 --> 00:15:45,519
about it when you consider solving the

412
00:15:45,519 --> 00:15:47,120
problem

413
00:15:47,120 --> 00:15:48,480
once

414
00:15:48,480 --> 00:15:50,959
the hackers the kerf yeah

415
00:15:50,959 --> 00:15:53,279
took over a third party

416
00:15:53,279 --> 00:15:57,040
the hackers will not act recklessly

417
00:15:57,040 --> 00:15:58,399
they have

418
00:15:58,399 --> 00:16:00,240
all the time and all the resources to

419
00:16:00,240 --> 00:16:01,440
detect

420
00:16:01,440 --> 00:16:04,160
the anti-mage card solutions major is a

421
00:16:04,160 --> 00:16:06,480
client-side attack so they can do it

422
00:16:06,480 --> 00:16:09,199
easily they can study them carefully we

423
00:16:09,199 --> 00:16:10,800
will discuss this

424
00:16:10,800 --> 00:16:13,120
and for hackers that plan to earn

425
00:16:13,120 --> 00:16:15,519
millions of dollars from a mage card

426
00:16:15,519 --> 00:16:16,560
attack

427
00:16:16,560 --> 00:16:18,639
it is worth to invest hundreds of

428
00:16:18,639 --> 00:16:21,120
thousands dollars

429
00:16:21,120 --> 00:16:23,279
in launching

430
00:16:23,279 --> 00:16:25,920
a perfect attack that is undetected

431
00:16:25,920 --> 00:16:28,079
okay

432
00:16:28,079 --> 00:16:30,639
so even before we talk about the

433
00:16:30,639 --> 00:16:34,639
specific anti-mage card solutions

434
00:16:34,639 --> 00:16:36,720
let's talk about something that the

435
00:16:36,720 --> 00:16:39,040
hackers can do they can start in small

436
00:16:39,040 --> 00:16:40,959
change the script gradually

437
00:16:40,959 --> 00:16:42,800
the beginning they will add spaces then

438
00:16:42,800 --> 00:16:44,959
unmeaningful changes replace one line in

439
00:16:44,959 --> 00:16:46,880
equivalent another line then changes

440
00:16:46,880 --> 00:16:49,920
that are failed not exactly the same but

441
00:16:49,920 --> 00:16:52,000
not malicious and only then if they see

442
00:16:52,000 --> 00:16:53,839
that nobody detects what they do they

443
00:16:53,839 --> 00:16:55,279
they can attack

444
00:16:55,279 --> 00:16:57,839
orthogonally they can start not on all

445
00:16:57,839 --> 00:17:00,959
the users but on specific ip addresses

446
00:17:00,959 --> 00:17:02,560
potentially not from the organizational

447
00:17:02,560 --> 00:17:04,880
network or just from the organizational

448
00:17:04,880 --> 00:17:07,119
network

449
00:17:07,119 --> 00:17:09,839
so they can start in small and

450
00:17:09,839 --> 00:17:11,280
carefully

451
00:17:11,280 --> 00:17:13,520
and increase the effect of the attack

452
00:17:13,520 --> 00:17:15,119
they can be non-deterministic they can

453
00:17:15,119 --> 00:17:16,640
change their behavior

454
00:17:16,640 --> 00:17:18,000
and they can generally decrease

455
00:17:18,000 --> 00:17:20,079
detection chance by

456
00:17:20,079 --> 00:17:22,720
making noise

457
00:17:22,720 --> 00:17:24,400
you will be you will see in most of the

458
00:17:24,400 --> 00:17:26,240
cases the hackers can

459
00:17:26,240 --> 00:17:28,960
generate false positive alerts

460
00:17:28,960 --> 00:17:31,440
easily

461
00:17:31,440 --> 00:17:33,360
and therefore

462
00:17:33,360 --> 00:17:35,760
just think about it you are a stock team

463
00:17:35,760 --> 00:17:37,360
member you get an alert about a script

464
00:17:37,360 --> 00:17:39,360
that got changed from one of your many

465
00:17:39,360 --> 00:17:41,200
security solutions

466
00:17:41,200 --> 00:17:42,320
but

467
00:17:42,320 --> 00:17:44,880
in the last two weeks you got

468
00:17:44,880 --> 00:17:47,919
20 similar alerts that are basically

469
00:17:47,919 --> 00:17:50,320
false positive

470
00:17:50,320 --> 00:17:51,679
most of the stock teams most of the

471
00:17:51,679 --> 00:17:55,440
security teams will just ignore it

472
00:17:55,840 --> 00:17:58,400
okay so let's now just

473
00:17:58,400 --> 00:18:00,559
dive into their specific solutions start

474
00:18:00,559 --> 00:18:02,400
with bypass street monitoring the

475
00:18:02,400 --> 00:18:05,039
easiest the simplest ones

476
00:18:05,039 --> 00:18:06,000
so

477
00:18:06,000 --> 00:18:07,280
in this case

478
00:18:07,280 --> 00:18:09,440
obviously the careful hacker will always

479
00:18:09,440 --> 00:18:12,559
operate and control machine service

480
00:18:12,559 --> 00:18:14,720
as usual before acting

481
00:18:14,720 --> 00:18:16,160
the hacker have

482
00:18:16,160 --> 00:18:18,480
the hacker has all the time to learn the

483
00:18:18,480 --> 00:18:20,400
traffic pattern to identify the

484
00:18:20,400 --> 00:18:23,440
monitoring tool to correlate

485
00:18:23,440 --> 00:18:24,160
the

486
00:18:24,160 --> 00:18:27,039
potential monitoring tools with

487
00:18:27,039 --> 00:18:30,000
with the documentation of the vendors

488
00:18:30,000 --> 00:18:32,080
providing these scans

489
00:18:32,080 --> 00:18:35,600
potentially the hacker can buy a demo of

490
00:18:35,600 --> 00:18:37,200
the product

491
00:18:37,200 --> 00:18:40,160
um the hacker can identify the source

492
00:18:40,160 --> 00:18:42,559
the sources of the request what

493
00:18:42,559 --> 00:18:43,919
uh whether

494
00:18:43,919 --> 00:18:45,520
it comes from the cloud from a specific

495
00:18:45,520 --> 00:18:46,799
subnet

496
00:18:46,799 --> 00:18:49,440
um and basically the hackers can use the

497
00:18:49,440 --> 00:18:52,000
same techniques the enterprises use

498
00:18:52,000 --> 00:18:55,280
um to avoid serving bots the hackers can

499
00:18:55,280 --> 00:18:57,039
use the same techniques

500
00:18:57,039 --> 00:18:59,360
to avoid serving the monitoring

501
00:18:59,360 --> 00:19:02,480
solutions okay

502
00:19:02,480 --> 00:19:04,080
and

503
00:19:04,080 --> 00:19:05,679
as i mentioned we had the opportunity to

504
00:19:05,679 --> 00:19:07,840
analyze some server side logs of

505
00:19:07,840 --> 00:19:10,480
protected sites and

506
00:19:10,480 --> 00:19:13,360
you will never believe how easy it is to

507
00:19:13,360 --> 00:19:15,679
distinguish between the legit traffic

508
00:19:15,679 --> 00:19:17,919
and the monitoring one

509
00:19:17,919 --> 00:19:20,240
the the frequency the

510
00:19:20,240 --> 00:19:21,919
the subnets the fact that they come from

511
00:19:21,919 --> 00:19:23,919
the cloud most of them and some of them

512
00:19:23,919 --> 00:19:25,679
are super nice maybe after this talk no

513
00:19:25,679 --> 00:19:26,640
longer

514
00:19:26,640 --> 00:19:29,120
but some of them just add to the user

515
00:19:29,120 --> 00:19:31,440
agent their name

516
00:19:31,440 --> 00:19:33,520
okay just like that who you can the

517
00:19:33,520 --> 00:19:35,600
hacker can simply check

518
00:19:35,600 --> 00:19:38,320
the user agent oh that's

519
00:19:38,320 --> 00:19:41,440
vendor x i'm gonna

520
00:19:41,440 --> 00:19:44,720
return a reply with the original script

521
00:19:44,720 --> 00:19:47,120
others i will reply with the modified

522
00:19:47,120 --> 00:19:49,200
malicious one

523
00:19:49,200 --> 00:19:51,840
so that's about

524
00:19:51,840 --> 00:19:53,600
the script monitoring and

525
00:19:53,600 --> 00:19:56,640
the ease of bypassing it

526
00:19:56,640 --> 00:19:58,480
the client side in this family of

527
00:19:58,480 --> 00:20:01,120
solutions there is a client-side script

528
00:20:01,120 --> 00:20:03,360
of the security vendor that is added to

529
00:20:03,360 --> 00:20:04,840
the pages of the

530
00:20:04,840 --> 00:20:06,880
applications of the website and this

531
00:20:06,880 --> 00:20:08,880
script should detect

532
00:20:08,880 --> 00:20:12,159
uh bad behavior uh of other scripts or

533
00:20:12,159 --> 00:20:14,000
malicious scripts are loaded from some

534
00:20:14,000 --> 00:20:16,720
blacklist or something

535
00:20:16,720 --> 00:20:18,559
and by definition these family of

536
00:20:18,559 --> 00:20:20,960
solutions cannot work against the

537
00:20:20,960 --> 00:20:22,559
careful hacker

538
00:20:22,559 --> 00:20:24,240
remember that client-side solutions

539
00:20:24,240 --> 00:20:27,039
could be carefully analyzed and

540
00:20:27,039 --> 00:20:28,400
in the end this is

541
00:20:28,400 --> 00:20:31,200
a file between the fixed script of the

542
00:20:31,200 --> 00:20:32,799
security solution

543
00:20:32,799 --> 00:20:35,360
and the hacker that can

544
00:20:35,360 --> 00:20:37,280
simulate the attack and change

545
00:20:37,280 --> 00:20:39,440
its own script millions of times until

546
00:20:39,440 --> 00:20:41,120
he succeeds in

547
00:20:41,120 --> 00:20:42,720
bypassing

548
00:20:42,720 --> 00:20:45,679
um the script of the security solution

549
00:20:45,679 --> 00:20:48,080
more than that we talk about many

550
00:20:48,080 --> 00:20:50,080
environments in which the attack can

551
00:20:50,080 --> 00:20:51,520
happen

552
00:20:51,520 --> 00:20:53,919
dozens of desktop and

553
00:20:53,919 --> 00:20:55,039
mobile

554
00:20:55,039 --> 00:20:56,159
browsers

555
00:20:56,159 --> 00:20:57,520
each of them

556
00:20:57,520 --> 00:21:00,400
is updated every few weeks

557
00:21:00,400 --> 00:21:02,720
and different pages sometimes different

558
00:21:02,720 --> 00:21:05,120
pages could be different cases or

559
00:21:05,120 --> 00:21:06,640
different scenarios in which i don't

560
00:21:06,640 --> 00:21:08,960
know some bypass will work

561
00:21:08,960 --> 00:21:11,120
for the hack

562
00:21:11,120 --> 00:21:12,960
and the hackers can basically find the

563
00:21:12,960 --> 00:21:14,720
bottom line the hackers can find the

564
00:21:14,720 --> 00:21:16,480
bypass and choose the vulnerable

565
00:21:16,480 --> 00:21:20,159
environment without being detected

566
00:21:20,159 --> 00:21:21,600
so

567
00:21:21,600 --> 00:21:22,960
let's see how it

568
00:21:22,960 --> 00:21:25,440
happens you know on the hacker side

569
00:21:25,440 --> 00:21:26,559
so

570
00:21:26,559 --> 00:21:29,600
a real world situation is that the user

571
00:21:29,600 --> 00:21:31,039
the browser of the user sends the

572
00:21:31,039 --> 00:21:35,200
company.com gets the html page then the

573
00:21:35,200 --> 00:21:37,440
once the page is rendered the page

574
00:21:37,440 --> 00:21:39,919
triggers a request to load a script from

575
00:21:39,919 --> 00:21:41,600
the third party

576
00:21:41,600 --> 00:21:44,640
when the hacker

577
00:21:44,640 --> 00:21:46,480
who that compromise who compromised the

578
00:21:46,480 --> 00:21:48,480
third party wants to simulate the attack

579
00:21:48,480 --> 00:21:50,880
and make sure he can bypass

580
00:21:50,880 --> 00:21:53,600
he only needs his own laptop and an and

581
00:21:53,600 --> 00:21:56,080
an http proxy potentially as a software

582
00:21:56,080 --> 00:21:58,720
on the laptop itself yes

583
00:21:58,720 --> 00:22:00,240
and the hacker will

584
00:22:00,240 --> 00:22:02,640
do the same the hacker will

585
00:22:02,640 --> 00:22:06,880
load the page will get the web page

586
00:22:06,880 --> 00:22:08,799
once the page is loaded a request for

587
00:22:08,799 --> 00:22:11,039
the script will be sent but then on the

588
00:22:11,039 --> 00:22:14,000
proxy side on the proxy level

589
00:22:14,000 --> 00:22:16,559
the response will be modified

590
00:22:16,559 --> 00:22:19,600
to the attack code

591
00:22:19,600 --> 00:22:22,559
then the hacker can carefully monitor

592
00:22:22,559 --> 00:22:24,559
what is happening

593
00:22:24,559 --> 00:22:28,400
on the client side on the company side

594
00:22:28,400 --> 00:22:31,200
if he sees that the solution somehow

595
00:22:31,200 --> 00:22:33,360
succeeds um

596
00:22:33,360 --> 00:22:35,679
you know in the text in detecting the

597
00:22:35,679 --> 00:22:37,360
change

598
00:22:37,360 --> 00:22:40,159
the hacker can simply block it okay the

599
00:22:40,159 --> 00:22:42,720
hacker controls the environment

600
00:22:42,720 --> 00:22:44,000
and the hacker

601
00:22:44,000 --> 00:22:46,640
can try this again and again and again

602
00:22:46,640 --> 00:22:48,559
and again until

603
00:22:48,559 --> 00:22:50,159
he succeeds

604
00:22:50,159 --> 00:22:53,280
and once a change

605
00:22:53,280 --> 00:22:54,720
no

606
00:22:54,720 --> 00:22:57,440
successful change is done and there is

607
00:22:57,440 --> 00:23:00,240
no reaction on the cliented solution

608
00:23:00,240 --> 00:23:02,799
then the actor can run the same attack

609
00:23:02,799 --> 00:23:04,240
on the real world

610
00:23:04,240 --> 00:23:06,640
directly from the compromised third

611
00:23:06,640 --> 00:23:07,840
party

612
00:23:07,840 --> 00:23:10,159
but now the hacker knows that the client

613
00:23:10,159 --> 00:23:15,280
resolution will not be able to detect it

614
00:23:16,559 --> 00:23:18,000
notice that

615
00:23:18,000 --> 00:23:21,120
in each of the steps

616
00:23:21,440 --> 00:23:24,559
the it is you know none of the situation

617
00:23:24,559 --> 00:23:26,080
the situations are

618
00:23:26,080 --> 00:23:27,840
indistinguishable from the perspective

619
00:23:27,840 --> 00:23:29,440
of both the monitoring tool and the

620
00:23:29,440 --> 00:23:32,640
company so this is the real world

621
00:23:32,640 --> 00:23:34,799
that's the simulation and his success

622
00:23:34,799 --> 00:23:36,799
that's the success

623
00:23:36,799 --> 00:23:38,240
and that's

624
00:23:38,240 --> 00:23:39,520
the the

625
00:23:39,520 --> 00:23:42,400
the actual attack you can see

626
00:23:42,400 --> 00:23:43,919
on both the

627
00:23:43,919 --> 00:23:45,600
company server and the monitoring tool

628
00:23:45,600 --> 00:23:48,559
it looks the same they cannot detect

629
00:23:48,559 --> 00:23:50,960
anything

630
00:23:50,960 --> 00:23:52,720
other disadvantages of client-side

631
00:23:52,720 --> 00:23:55,840
solutions there is performance effect or

632
00:23:55,840 --> 00:23:57,520
might there might be performance effect

633
00:23:57,520 --> 00:24:00,559
let's be accurate deployment is required

634
00:24:00,559 --> 00:24:02,880
so they're going to be skill issue

635
00:24:02,880 --> 00:24:06,320
um we're gonna solve the script problem

636
00:24:06,320 --> 00:24:09,679
by adding another script so

637
00:24:09,679 --> 00:24:11,200
based on other

638
00:24:11,200 --> 00:24:13,440
uh

639
00:24:13,919 --> 00:24:16,320
other cases in security uh

640
00:24:16,320 --> 00:24:19,039
we know that it it might cause

641
00:24:19,039 --> 00:24:20,799
the same other problems or the same

642
00:24:20,799 --> 00:24:22,559
problem because

643
00:24:22,559 --> 00:24:25,919
um just like the xss is an example

644
00:24:25,919 --> 00:24:29,760
um anti-access solutions that kind of

645
00:24:29,760 --> 00:24:30,640
change

646
00:24:30,640 --> 00:24:31,760
um

647
00:24:31,760 --> 00:24:34,799
http responses and by that triggered

648
00:24:34,799 --> 00:24:37,279
cross-set scripting attacks okay

649
00:24:37,279 --> 00:24:39,120
potentially it can happen

650
00:24:39,120 --> 00:24:41,918
here as well

651
00:24:42,559 --> 00:24:44,320
to summarize we found mage card

652
00:24:44,320 --> 00:24:45,919
vulnerabilities in organizations that

653
00:24:45,919 --> 00:24:48,640
are protected that way we were able to

654
00:24:48,640 --> 00:24:49,440
use

655
00:24:49,440 --> 00:24:51,279
the methodology we demonstrated to

656
00:24:51,279 --> 00:24:53,440
reproduce the attacks on protected

657
00:24:53,440 --> 00:24:55,919
organizations and to document

658
00:24:55,919 --> 00:24:57,919
exfiltration of data

659
00:24:57,919 --> 00:25:00,400
we haven't encountered a cliented

660
00:25:00,400 --> 00:25:02,400
solution that successfully stopped our

661
00:25:02,400 --> 00:25:03,679
mage cart

662
00:25:03,679 --> 00:25:06,960
attack effort and in all the cases we

663
00:25:06,960 --> 00:25:08,640
we succeeded to

664
00:25:08,640 --> 00:25:11,840
exfiltrate the data uh also you know not

665
00:25:11,840 --> 00:25:14,080
to the third to the compromised third

666
00:25:14,080 --> 00:25:17,600
party but to other new parties

667
00:25:17,600 --> 00:25:19,840
obviously we can save

668
00:25:19,840 --> 00:25:22,080
with 100 confidence that

669
00:25:22,080 --> 00:25:24,480
none of the solutions detect

670
00:25:24,480 --> 00:25:26,640
what we did we believe they didn't

671
00:25:26,640 --> 00:25:28,400
because we didn't see any

672
00:25:28,400 --> 00:25:29,760
change but

673
00:25:29,760 --> 00:25:32,559
potentially and it is important to say

674
00:25:32,559 --> 00:25:34,480
there could be something that we missed

675
00:25:34,480 --> 00:25:37,279
and they somehow found what we can be

676
00:25:37,279 --> 00:25:40,640
100 sure is that we succeeded in running

677
00:25:40,640 --> 00:25:41,940
the code

678
00:25:41,940 --> 00:25:43,679
[Music]

679
00:25:43,679 --> 00:25:47,279
the third type of solution is

680
00:25:47,279 --> 00:25:49,360
you know is using browser native

681
00:25:49,360 --> 00:25:50,640
mechanisms

682
00:25:50,640 --> 00:25:53,279
csp content security policy

683
00:25:53,279 --> 00:25:55,279
white listing instructing the browser to

684
00:25:55,279 --> 00:25:58,000
whitelist the sources from which scripts

685
00:25:58,000 --> 00:26:00,400
could be loaded or limited and or

686
00:26:00,400 --> 00:26:01,600
limiting

687
00:26:01,600 --> 00:26:03,279
um

688
00:26:03,279 --> 00:26:05,120
the origins to which

689
00:26:05,120 --> 00:26:08,840
a ajax request or others could be sent

690
00:26:08,840 --> 00:26:10,720
um

691
00:26:10,720 --> 00:26:13,679
about whitelisting we all know that

692
00:26:13,679 --> 00:26:16,000
the csp should be used carefully usually

693
00:26:16,000 --> 00:26:17,679
could be bypassed

694
00:26:17,679 --> 00:26:20,640
the second part of limiting this the

695
00:26:20,640 --> 00:26:24,400
target could be bypassed easily

696
00:26:24,400 --> 00:26:27,120
a later mechanism that was added is sri

697
00:26:27,120 --> 00:26:31,600
sri is basically adding integrity um

698
00:26:31,600 --> 00:26:34,960
check by cryptographic hash

699
00:26:34,960 --> 00:26:37,440
and then if the script

700
00:26:37,440 --> 00:26:39,919
doesn't match the hash the browser will

701
00:26:39,919 --> 00:26:40,640
not

702
00:26:40,640 --> 00:26:44,400
uh execute the script

703
00:26:44,400 --> 00:26:46,400
okay um

704
00:26:46,400 --> 00:26:47,600
so

705
00:26:47,600 --> 00:26:49,919
about mage cart and these solutions so

706
00:26:49,919 --> 00:26:52,640
csv is almost irrelevant when it comes

707
00:26:52,640 --> 00:26:54,720
to compromised third party okay the

708
00:26:54,720 --> 00:26:56,480
third party

709
00:26:56,480 --> 00:26:58,880
the compromise that party is whitelisted

710
00:26:58,880 --> 00:27:01,760
yesterday it was okay today it is bad

711
00:27:01,760 --> 00:27:04,000
csp is not gonna help here

712
00:27:04,000 --> 00:27:07,360
um about executing the data hackers can

713
00:27:07,360 --> 00:27:08,960
send the data to the compromised third

714
00:27:08,960 --> 00:27:11,919
party which is whitelisted or as i said

715
00:27:11,919 --> 00:27:15,840
could exploit the data without adjust or

716
00:27:15,840 --> 00:27:18,640
you know either via dns tricks

717
00:27:18,640 --> 00:27:21,360
or others sri

718
00:27:21,360 --> 00:27:23,200
could have been a challenge but it is

719
00:27:23,200 --> 00:27:26,559
very difficult to deploy it in scale

720
00:27:26,559 --> 00:27:28,480
it is almost impossible

721
00:27:28,480 --> 00:27:32,799
to deploy sri on dynamic scripts

722
00:27:32,799 --> 00:27:35,520
and remember also that legit scripts

723
00:27:35,520 --> 00:27:39,039
change all the time so we haven't seen a

724
00:27:39,039 --> 00:27:42,240
wide appointment of sri

725
00:27:42,880 --> 00:27:45,520
so how do enterprises can use the

726
00:27:45,520 --> 00:27:47,360
browser native mechanisms

727
00:27:47,360 --> 00:27:50,320
the first option will be manual

728
00:27:50,320 --> 00:27:51,279
and

729
00:27:51,279 --> 00:27:53,360
this option could be done for a fraction

730
00:27:53,360 --> 00:27:55,279
minimal fraction of the organization's

731
00:27:55,279 --> 00:27:57,360
apps or sites

732
00:27:57,360 --> 00:27:59,840
but again based on researches

733
00:27:59,840 --> 00:28:01,760
that were that were done in the past

734
00:28:01,760 --> 00:28:04,159
usually it could be bypassed at least

735
00:28:04,159 --> 00:28:06,960
for some pages

736
00:28:06,960 --> 00:28:08,080
the second

737
00:28:08,080 --> 00:28:09,679
and more interesting for this talk is

738
00:28:09,679 --> 00:28:11,919
the semi-automated tools

739
00:28:11,919 --> 00:28:13,919
that usually work with the following

740
00:28:13,919 --> 00:28:14,880
flow

741
00:28:14,880 --> 00:28:16,640
find the current use of the script by

742
00:28:16,640 --> 00:28:19,360
using the csp report only mode or

743
00:28:19,360 --> 00:28:20,880
scripts themselves will collect

744
00:28:20,880 --> 00:28:22,960
information and analyze the

745
00:28:22,960 --> 00:28:24,000
current

746
00:28:24,000 --> 00:28:25,200
behavior

747
00:28:25,200 --> 00:28:27,200
then define a policy that will prevent

748
00:28:27,200 --> 00:28:30,080
the use of new sources or be heavier

749
00:28:30,080 --> 00:28:33,279
and then move to the block mode okay

750
00:28:33,279 --> 00:28:34,480
so this

751
00:28:34,480 --> 00:28:36,080
mechanism could be done to a larger

752
00:28:36,080 --> 00:28:38,320
fraction of the organization but yet for

753
00:28:38,320 --> 00:28:40,640
enterprises that we analyze they have

754
00:28:40,640 --> 00:28:41,840
six thousand

755
00:28:41,840 --> 00:28:43,760
size application you know web accessible

756
00:28:43,760 --> 00:28:44,559
ones

757
00:28:44,559 --> 00:28:47,120
and magikov was deployed on anti-mage

758
00:28:47,120 --> 00:28:48,960
card solutions like that were deployed

759
00:28:48,960 --> 00:28:49,919
on

760
00:28:49,919 --> 00:28:51,440
10.

761
00:28:51,440 --> 00:28:53,120
okay so

762
00:28:53,120 --> 00:28:55,440
the skate problem is still here when we

763
00:28:55,440 --> 00:28:56,720
talk about

764
00:28:56,720 --> 00:28:59,120
csp so yes

765
00:28:59,120 --> 00:29:00,880
the solution that

766
00:29:00,880 --> 00:29:02,880
the policies still

767
00:29:02,880 --> 00:29:05,840
could be bypassed

768
00:29:06,240 --> 00:29:08,640
the challenges so again cannot be

769
00:29:08,640 --> 00:29:09,760
deployed

770
00:29:09,760 --> 00:29:11,200
strictly

771
00:29:11,200 --> 00:29:13,120
in scale

772
00:29:13,120 --> 00:29:15,679
we found that in protected apps or sites

773
00:29:15,679 --> 00:29:20,159
not all the pages use sri and csp

774
00:29:20,159 --> 00:29:22,640
example we you can find applications in

775
00:29:22,640 --> 00:29:23,679
which

776
00:29:23,679 --> 00:29:27,279
in one page there is a script it is

777
00:29:27,279 --> 00:29:29,279
protected by sri

778
00:29:29,279 --> 00:29:30,720
and

779
00:29:30,720 --> 00:29:32,240
a second page

780
00:29:32,240 --> 00:29:34,720
the same script without sri

781
00:29:34,720 --> 00:29:35,520
okay

782
00:29:35,520 --> 00:29:38,480
just as an example

783
00:29:38,480 --> 00:29:40,559
and now let's talk about some new

784
00:29:40,559 --> 00:29:43,279
techniques to

785
00:29:43,360 --> 00:29:46,960
manipulate bypass each of the attacks

786
00:29:46,960 --> 00:29:49,279
so the first attack is the trusted

787
00:29:49,279 --> 00:29:51,679
source injection tsi attack and this

788
00:29:51,679 --> 00:29:54,559
attack exploits the user of csp or

789
00:29:54,559 --> 00:29:55,840
client

790
00:29:55,840 --> 00:29:57,679
based scripts

791
00:29:57,679 --> 00:29:59,120
solutions

792
00:29:59,120 --> 00:30:02,080
is done by tools security solutions we

793
00:30:02,080 --> 00:30:04,559
do not exploit the implementation and

794
00:30:04,559 --> 00:30:06,720
the design of csp

795
00:30:06,720 --> 00:30:09,360
and the idea would be to manipulate the

796
00:30:09,360 --> 00:30:12,240
tools during the learning phase to

797
00:30:12,240 --> 00:30:13,360
widely

798
00:30:13,360 --> 00:30:16,960
hacker controlled origins

799
00:30:16,960 --> 00:30:19,200
so the attack will work as follows so

800
00:30:19,200 --> 00:30:21,679
inspect the target website and detect

801
00:30:21,679 --> 00:30:23,200
the learning phase of the tool this

802
00:30:23,200 --> 00:30:26,399
could be done easily because there is

803
00:30:26,399 --> 00:30:27,679
an evidence

804
00:30:27,679 --> 00:30:30,159
for that on the client side

805
00:30:30,159 --> 00:30:34,240
either a csp report header or a new

806
00:30:34,240 --> 00:30:36,080
script of a known anti-mage called

807
00:30:36,080 --> 00:30:37,440
vendor

808
00:30:37,440 --> 00:30:38,320
then

809
00:30:38,320 --> 00:30:41,679
once the learning phase begins start

810
00:30:41,679 --> 00:30:44,000
manipulating it by

811
00:30:44,000 --> 00:30:46,320
start running the page but manipulate it

812
00:30:46,320 --> 00:30:47,039
with

813
00:30:47,039 --> 00:30:49,200
on the proxy level

814
00:30:49,200 --> 00:30:51,200
and kind of add

815
00:30:51,200 --> 00:30:54,080
new sources to the manipulated pages

816
00:30:54,080 --> 00:30:56,640
preferably run this from many ips many

817
00:30:56,640 --> 00:30:59,760
times and remember that because there

818
00:30:59,760 --> 00:31:02,880
could be many environments for example

819
00:31:02,880 --> 00:31:06,080
applications can act on ip based or

820
00:31:06,080 --> 00:31:07,919
depending on whether

821
00:31:07,919 --> 00:31:11,120
users are authenticated or not

822
00:31:11,120 --> 00:31:13,200
antimate card solutions will not be able

823
00:31:13,200 --> 00:31:14,720
to detect

824
00:31:14,720 --> 00:31:15,600
that

825
00:31:15,600 --> 00:31:18,559
there is something wrong here

826
00:31:18,559 --> 00:31:20,399
uh the hackers will continue the

827
00:31:20,399 --> 00:31:21,919
manipulation until the learning phase is

828
00:31:21,919 --> 00:31:24,559
over when in csp based solutions it is

829
00:31:24,559 --> 00:31:26,080
easy to see that

830
00:31:26,080 --> 00:31:28,000
it is over and that the attack is

831
00:31:28,000 --> 00:31:30,159
successful you just see your origins

832
00:31:30,159 --> 00:31:32,480
widely instead in others it depends on

833
00:31:32,480 --> 00:31:34,159
the implementation

834
00:31:34,159 --> 00:31:36,880
of the solution

835
00:31:37,279 --> 00:31:38,559
another

836
00:31:38,559 --> 00:31:41,200
attack that bypasses

837
00:31:41,200 --> 00:31:43,360
all the attacks that we mentioned is the

838
00:31:43,360 --> 00:31:45,360
scriptless mage card attack

839
00:31:45,360 --> 00:31:48,559
the idea here is basically to avoid

840
00:31:48,559 --> 00:31:52,159
changing the script itself by changing

841
00:31:52,159 --> 00:31:55,120
other resources potentially fourth fifth

842
00:31:55,120 --> 00:31:58,240
part is that the script is affected by

843
00:31:58,240 --> 00:32:00,399
them the most common one

844
00:32:00,399 --> 00:32:02,159
fourth party

845
00:32:02,159 --> 00:32:06,000
to which ajax requests uh is sent and

846
00:32:06,000 --> 00:32:09,760
the third party script is affected by

847
00:32:09,760 --> 00:32:12,240
so for example if the third-party script

848
00:32:12,240 --> 00:32:14,240
evolves

849
00:32:14,240 --> 00:32:15,440
parse or

850
00:32:15,440 --> 00:32:17,200
row response from

851
00:32:17,200 --> 00:32:18,480
fourth part

852
00:32:18,480 --> 00:32:20,159
okay

853
00:32:20,159 --> 00:32:22,159
an example for you know

854
00:32:22,159 --> 00:32:24,080
some statistics from a scripted major

855
00:32:24,080 --> 00:32:25,840
card attack that we were able to launch

856
00:32:25,840 --> 00:32:27,600
and analyze again from the from the

857
00:32:27,600 --> 00:32:29,039
server side

858
00:32:29,039 --> 00:32:33,039
um so we talk about common fourth party

859
00:32:33,039 --> 00:32:36,159
that was adjust we

860
00:32:36,159 --> 00:32:37,760
were able to

861
00:32:37,760 --> 00:32:40,240
to take over the fourth party

862
00:32:40,240 --> 00:32:41,360
and

863
00:32:41,360 --> 00:32:43,679
we were able to see that

864
00:32:43,679 --> 00:32:48,080
uh 15 alexa top 10 000 sites uh

865
00:32:48,080 --> 00:32:50,320
and many others

866
00:32:50,320 --> 00:32:53,919
uh are running script third-party script

867
00:32:53,919 --> 00:32:57,039
that load that eval the http response

868
00:32:57,039 --> 00:32:59,360
that they adjust you know

869
00:32:59,360 --> 00:33:00,159
from

870
00:33:00,159 --> 00:33:02,320
from our fourth party

871
00:33:02,320 --> 00:33:04,159
most of them were in this case media and

872
00:33:04,159 --> 00:33:08,000
use and media news and retail sites

873
00:33:08,000 --> 00:33:08,880
and

874
00:33:08,880 --> 00:33:11,279
in three hours we were able to see

875
00:33:11,279 --> 00:33:13,279
half a million

876
00:33:13,279 --> 00:33:16,880
requests from more than 200 000 unique

877
00:33:16,880 --> 00:33:18,080
ips

878
00:33:18,080 --> 00:33:20,080
um many of them from android

879
00:33:20,080 --> 00:33:21,600
applications many of

880
00:33:21,600 --> 00:33:22,840
some of them

881
00:33:22,840 --> 00:33:26,399
from vulnerable browsers so we could

882
00:33:26,399 --> 00:33:28,720
even do more than just

883
00:33:28,720 --> 00:33:30,240
attacking the application but we could

884
00:33:30,240 --> 00:33:31,679
attack potentially the machines

885
00:33:31,679 --> 00:33:33,840
themselves

886
00:33:33,840 --> 00:33:38,000
um and yes we could do we were able to

887
00:33:38,000 --> 00:33:39,600
manipulate the fourth party and see that

888
00:33:39,600 --> 00:33:42,799
actually it could is being run

889
00:33:42,799 --> 00:33:43,760
uh

890
00:33:43,760 --> 00:33:44,960
on the

891
00:33:44,960 --> 00:33:47,600
on the sides

892
00:33:47,919 --> 00:33:50,399
so yes to summarize um the anti-mage

893
00:33:50,399 --> 00:33:52,080
card

894
00:33:52,080 --> 00:33:53,840
solutions the enterprise versus the

895
00:33:53,840 --> 00:33:55,200
hackers

896
00:33:55,200 --> 00:33:57,840
we see scalability problems solutions

897
00:33:57,840 --> 00:34:00,320
are either

898
00:34:00,880 --> 00:34:03,519
not scalable you know in terms of sites

899
00:34:03,519 --> 00:34:06,080
and applications or not to all the pages

900
00:34:06,080 --> 00:34:07,440
on the same

901
00:34:07,440 --> 00:34:09,840
site

902
00:34:10,159 --> 00:34:11,839
none of the attacks can

903
00:34:11,839 --> 00:34:14,639
catch the scriptless variants

904
00:34:14,639 --> 00:34:17,199
or similar ones hackers can generate

905
00:34:17,199 --> 00:34:18,960
false positive

906
00:34:18,960 --> 00:34:21,199
in many of the cases

907
00:34:21,199 --> 00:34:23,440
if they attack

908
00:34:23,440 --> 00:34:25,280
the attack

909
00:34:25,280 --> 00:34:26,639
in some of the cases in the split

910
00:34:26,639 --> 00:34:30,239
monitoring cannot work and cannot catch

911
00:34:30,239 --> 00:34:32,639
targeted attacks

912
00:34:32,639 --> 00:34:34,960
some of the attacks might pose

913
00:34:34,960 --> 00:34:37,918
performance over it or more worse than

914
00:34:37,918 --> 00:34:40,719
that security risk and in all of them

915
00:34:40,719 --> 00:34:42,239
based on what we saw

916
00:34:42,239 --> 00:34:45,359
the bad guys win the enterprise

917
00:34:45,359 --> 00:34:47,918
just lose to the hackers the hackers to

918
00:34:47,918 --> 00:34:51,440
be more accurate the hackers can't lose

919
00:34:51,440 --> 00:34:54,079
so based on our analysis we believe that

920
00:34:54,079 --> 00:34:56,000
most major card attacks are completed

921
00:34:56,000 --> 00:34:57,920
without being detected

922
00:34:57,920 --> 00:35:00,400
organizations only later

923
00:35:00,400 --> 00:35:02,960
find their data sold or exploited and

924
00:35:02,960 --> 00:35:04,800
maybe they will be able to detect what

925
00:35:04,800 --> 00:35:06,160
is the source

926
00:35:06,160 --> 00:35:07,599
of the breach

927
00:35:07,599 --> 00:35:09,760
we found that

928
00:35:09,760 --> 00:35:12,079
script vendors do not report

929
00:35:12,079 --> 00:35:13,599
to their customers to the affected

930
00:35:13,599 --> 00:35:15,599
companies that's why the awareness is so

931
00:35:15,599 --> 00:35:16,400
low

932
00:35:16,400 --> 00:35:17,359
and

933
00:35:17,359 --> 00:35:20,480
in the bottom line the bad guys win

934
00:35:20,480 --> 00:35:22,320
what could be done

935
00:35:22,320 --> 00:35:23,680
we believe that

936
00:35:23,680 --> 00:35:25,520
the best option

937
00:35:25,520 --> 00:35:27,280
is yet the browser native mechanisms but

938
00:35:27,280 --> 00:35:29,040
they should be used carefully

939
00:35:29,040 --> 00:35:31,599
manually by the

940
00:35:31,599 --> 00:35:32,960
people who know

941
00:35:32,960 --> 00:35:34,720
the best the application they will be

942
00:35:34,720 --> 00:35:36,000
able to detect

943
00:35:36,000 --> 00:35:37,440
when something is manipulated they would

944
00:35:37,440 --> 00:35:38,640
they know

945
00:35:38,640 --> 00:35:41,520
what are the third parties

946
00:35:41,520 --> 00:35:43,839
we call the browser vendors provide us

947
00:35:43,839 --> 00:35:46,480
with more tools to protect ourselves

948
00:35:46,480 --> 00:35:48,400
and for sure a different approach is

949
00:35:48,400 --> 00:35:50,000
required

950
00:35:50,000 --> 00:35:51,760
you can be sure that

951
00:35:51,760 --> 00:35:53,520
the amazing findings here and the

952
00:35:53,520 --> 00:35:56,240
findings that we still get every day

953
00:35:56,240 --> 00:35:57,359
triggered or

954
00:35:57,359 --> 00:35:58,640
triggered

955
00:35:58,640 --> 00:36:01,280
more research you know on our side we

956
00:36:01,280 --> 00:36:03,040
already developed something

957
00:36:03,040 --> 00:36:03,920
and i

958
00:36:03,920 --> 00:36:05,359
invite you to follow myself and

959
00:36:05,359 --> 00:36:07,520
cyberpunk on linkedin

960
00:36:07,520 --> 00:36:10,160
hopefully um

961
00:36:10,160 --> 00:36:12,240
we now allow everybody to check whether

962
00:36:12,240 --> 00:36:15,040
they are affected and we plan to publish

963
00:36:15,040 --> 00:36:16,640
more information

964
00:36:16,640 --> 00:36:19,599
about the many cases we detected

965
00:36:19,599 --> 00:36:21,119
um

966
00:36:21,119 --> 00:36:23,200
so stay tuned

967
00:36:23,200 --> 00:36:24,640
if you want to check whether your

968
00:36:24,640 --> 00:36:26,400
organization is in the statistic we

969
00:36:26,400 --> 00:36:27,599
developed

970
00:36:27,599 --> 00:36:30,000
a site simple app

971
00:36:30,000 --> 00:36:32,480
we don't send the sensitive data we

972
00:36:32,480 --> 00:36:34,400
don't keep it you know on this public

973
00:36:34,400 --> 00:36:35,760
server but this page will tell you

974
00:36:35,760 --> 00:36:37,680
whether your organization is affected

975
00:36:37,680 --> 00:36:40,480
was affected still affected and you will

976
00:36:40,480 --> 00:36:44,720
be able then to get more details

977
00:36:45,280 --> 00:36:48,079
and yes thank you very very much

978
00:36:48,079 --> 00:36:49,440
and

979
00:36:49,440 --> 00:36:50,960
i'm available

980
00:36:50,960 --> 00:36:52,839
connect via

981
00:36:52,839 --> 00:36:55,599
linkedin and you're welcome you know

982
00:36:55,599 --> 00:36:57,280
to ask questions

983
00:36:57,280 --> 00:36:59,520
email or any other way

984
00:36:59,520 --> 00:37:01,640
thank you

985
00:37:01,640 --> 00:37:11,279
[Music]

986
00:37:11,760 --> 00:37:13,839
you

