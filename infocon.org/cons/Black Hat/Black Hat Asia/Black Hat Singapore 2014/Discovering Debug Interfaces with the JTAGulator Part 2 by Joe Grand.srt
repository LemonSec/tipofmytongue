1
00:00:00,110 --> 00:00:03,310
rights organize the talk about the
details on chip even interface is now so

2
00:00:03,310 --> 00:00:05,049
the two that Jay tag editor supports

3
00:00:05,049 --> 00:00:08,780
J tag and you are and I'll give demos

4
00:00:08,780 --> 00:00:13,130
a beach once want to go into the details
CJ tag is this industry standard

5
00:00:13,130 --> 00:00:13,889
interface

6
00:00:13,889 --> 00:00:17,859
on that is really there's a low-level
definition

7
00:00:17,859 --> 00:00:22,470
that was designed up initially for a
chip level and system-level testing

8
00:00:22,470 --> 00:00:26,160
during the manufacturing process and
sort of expanded

9
00:00:26,160 --> 00:00:30,510
into being able to be used for
programming of parks

10
00:00:30,510 --> 00:00:33,719
for debugging a parts some vendors
actually

11
00:00:33,719 --> 00:00:38,149
create additional vendor specific
functionality that can be

12
00:00:38,149 --> 00:00:41,800
that could be communicating controlled
through Jaytech does become sort of this

13
00:00:41,800 --> 00:00:44,980
universal interface when it really
started as a very low level

14
00:00:44,980 --> 00:00:49,750
on specific interface to like test the
connections opinions on a circuit board

15
00:00:49,750 --> 00:00:52,840
was really cool I J tag is

16
00:00:52,840 --> 00:00:56,710
you can actually hijack all the pins on
a device

17
00:00:56,710 --> 00:01:00,920
through something called call the
boundary scan or you could individually

18
00:01:00,920 --> 00:01:02,059
control

19
00:01:02,059 --> 00:01:05,400
either outputs or inputs um

20
00:01:05,400 --> 00:01:08,720
%uh each pin

21
00:01:08,720 --> 00:01:12,689
so if you can't we'll all those pins you
can now potentially communicate with

22
00:01:12,689 --> 00:01:14,439
other things that are connected

23
00:01:14,439 --> 00:01:17,799
to do that device that your twiddling
which is how you can like

24
00:01:17,799 --> 00:01:21,240
you know program external memory through
controlling

25
00:01:21,240 --> 00:01:25,520
a chip NJ tech also sometimes you know
that most devices now have internal

26
00:01:25,520 --> 00:01:26,920
memory so you can access

27
00:01:26,920 --> 00:01:30,640
internal memory through through a 2g tag

28
00:01:30,640 --> 00:01:34,729
so you can do standard programming
standard debugging and a lot other stuff

29
00:01:34,729 --> 00:01:35,400
too

30
00:01:35,400 --> 00:01:38,740
you can which a tag you can do some
functionality without

31
00:01:38,740 --> 00:01:43,280
affecting the system operation at all so
if we're doing an ID code scan which

32
00:01:43,280 --> 00:01:44,729
will do our bypass can

33
00:01:44,729 --> 00:01:49,189
the the actual CPU operation the product
is going to continue running because Jay

34
00:01:49,189 --> 00:01:50,479
tag a sort of its own

35
00:01:50,479 --> 00:01:54,640
specialized you know part part of the
silicon the jury company you can start

36
00:01:54,640 --> 00:01:56,640
working with the device while things
actually running

37
00:01:56,640 --> 00:02:02,170
in most the time you won't mess anything
up unless you end up doing i/debug

38
00:02:02,170 --> 00:02:05,890
commander programming command the halt
the processor something but it's no

39
00:02:05,890 --> 00:02:10,209
the very powerful interface what's also
interesting about Jay tag verses

40
00:02:10,209 --> 00:02:14,720
love the industry standard are are sorry
I'm vendor specific interfaces

41
00:02:14,720 --> 00:02:19,510
is you have multiple devices connected
to a single-chain say could have won Jae

42
00:02:19,510 --> 00:02:20,940
tag connection on the board

43
00:02:20,940 --> 00:02:25,140
that connects sated three or four
different devices on a board

44
00:02:25,140 --> 00:02:30,910
maybe a CPU a a baseband for a mobile
phone or something

45
00:02:30,910 --> 00:02:35,209
I or it could be multiple chips in a
single device

46
00:02:35,209 --> 00:02:39,569
so now you look at a board in there
might be you know 22 dies inside of a

47
00:02:39,569 --> 00:02:41,590
single packaging you don't know that
there's two

48
00:02:41,590 --> 00:02:45,030
though he do a Jay tags can you say wait
a second there's two devices there

49
00:02:45,030 --> 00:02:48,050
you can communicate with both a so just
makes it easy don't need to have

50
00:02:48,050 --> 00:02:48,849
multiple

51
00:02:48,849 --> 00:02:52,840
connections for multiple a device on the
board

52
00:02:52,840 --> 00:02:56,580
the vendor specific interfaces that are
out there so microchip as their

53
00:02:56,580 --> 00:03:00,540
in circuits your programming interface
Texas Instruments has their

54
00:03:00,540 --> 00:03:04,200
a spy by wire interface Atmel has their

55
00:03:04,200 --> 00:03:08,230
ISP interface every member has their own
kinda programming debugging her face

56
00:03:08,230 --> 00:03:13,519
that the use if they don't use gtech DJ
taga system

57
00:03:13,519 --> 00:03:17,459
way more universal up the bell
environment

58
00:03:17,459 --> 00:03:22,060
for whatever target processor looking at
loves tracked a lot at a low level

59
00:03:22,060 --> 00:03:25,780
I details OJ tag which is great

60
00:03:25,780 --> 00:03:29,170
because all the detail I'll give you
this presentation is all that you really

61
00:03:29,170 --> 00:03:30,299
need to care about

62
00:03:30,299 --> 00:03:33,540
I just understand how we're detecting
the pinout

63
00:03:33,540 --> 00:03:36,599
Howard detecting interface but at that
point everything else going to be

64
00:03:36,599 --> 00:03:39,459
abstracted so once you find the
interface that's our whole thing is once

65
00:03:39,459 --> 00:03:40,780
again look at that interface

66
00:03:40,780 --> 00:03:44,610
we can rely on the standard
off-the-shelf development environment

67
00:03:44,610 --> 00:03:48,980
for that particular Target Chip and rely
on standard off-the-shelf J tack

68
00:03:48,980 --> 00:03:49,739
hardware

69
00:03:49,739 --> 00:03:52,780
as designed to do DJ tag communication

70
00:03:52,780 --> 00:03:56,110
using liked what I tell people is try to
put yourself in the mindset

71
00:03:56,110 --> 00:04:00,200
above the legitimate engineer that
designed the product say if we

72
00:04:00,200 --> 00:04:04,519
if we're looking on on access points a
Broadcom BCM 4702

73
00:04:04,519 --> 00:04:09,310
I would try to find out if there's a
development environment for the 4702

74
00:04:09,310 --> 00:04:13,580
is their recommended J tag hardware to
use for that

75
00:04:13,580 --> 00:04:17,079
Architektur and I believe that as an
arm-based architecture side probably

76
00:04:17,079 --> 00:04:21,000
find it are you know something that
supports our

77
00:04:21,000 --> 00:04:24,169
because then everything's abstracted and
we don't have to worry about low level

78
00:04:24,169 --> 00:04:26,540
stuff anymore

79
00:04:26,540 --> 00:04:29,560
that makes a nice his have a fun slide
this is you know

80
00:04:29,560 --> 00:04:34,910
this is what happens if we if we get
access to a target 3j tag

81
00:04:34,910 --> 00:04:41,910
we control the entire thing

82
00:04:41,970 --> 00:04:45,870
so the Architektur is basically it's a
tiny little state machine

83
00:04:45,870 --> 00:04:49,280
on that can execute instructions sorta
like a little

84
00:04:49,280 --> 00:04:52,590
little CPU were were basically shifting
data in

85
00:04:52,590 --> 00:04:56,699
and that getting data out so it's lots a
shift registers

86
00:04:56,699 --> 00:04:59,650
the interface is a synchronous serial
interface synchronous meaning that it

87
00:04:59,650 --> 00:05:01,289
requires an external clock

88
00:05:01,289 --> 00:05:05,350
so there's four singles that required a
day in day out mode selecting clock

89
00:05:05,350 --> 00:05:08,580
in the mode select is what we used to go
through the different states that the

90
00:05:08,580 --> 00:05:09,490
state machine

91
00:05:09,490 --> 00:05:13,020
and they were shipped to get in shifting
get out there's an optional

92
00:05:13,020 --> 00:05:17,039
test reset pin that some target boards
use

93
00:05:17,039 --> 00:05:20,590
I to a synchronously reset

94
00:05:20,590 --> 00:05:24,650
the J tag or usually what they mostly
use it for is to disable J tag

95
00:05:24,650 --> 00:05:28,370
I just by pulling the pin low to keep
the J tag

96
00:05:28,370 --> 00:05:31,759
port in reset so somebody can just come
up in attached to it

97
00:05:31,759 --> 00:05:34,889
so what I'm working on now in the did
the first I have released right now

98
00:05:34,889 --> 00:05:35,910
looks poor

99
00:05:35,910 --> 00:05:40,289
I just TDI TDOT a mess and TCK assuming
that test reset his

100
00:05:40,289 --> 00:05:43,979
user that is being held high which is
also the case on some boards

101
00:05:43,979 --> 00:05:47,910
but the next version I'm working on will
detect

102
00:05:47,910 --> 00:05:51,759
reset as well so if it is being used we
won't miss the interface

103
00:05:51,759 --> 00:05:54,840
is right now if if test we said hello
and we don't

104
00:05:54,840 --> 00:05:58,210
I'm hooked up to it if we happen to miss
that in

105
00:05:58,210 --> 00:06:01,340
then rocketed detected

106
00:06:01,340 --> 00:06:04,690
so yes sometimes that use but we can
actually what we when we reset the tap

107
00:06:04,690 --> 00:06:07,050
we could do it in a different way that
out but I'll show you

108
00:06:07,050 --> 00:06:11,190
up for the test access port which is
that the kinda CPU if you will

109
00:06:11,190 --> 00:06:14,880
OJ tag has an instruction register that
has to be greater than two bits per the

110
00:06:14,880 --> 00:06:15,550
spec

111
00:06:15,550 --> 00:06:18,970
usually it's like 45 8 bit

112
00:06:18,970 --> 00:06:22,470
wide instructions it sorta be whatever
the vendor what's

113
00:06:22,470 --> 00:06:25,500
I and then for the data sets for

114
00:06:25,500 --> 00:06:28,389
sending instructions and then there's
data registers and depending on the

115
00:06:28,389 --> 00:06:29,080
command

116
00:06:29,080 --> 00:06:32,810
we send that Apple enable a different
day to register

117
00:06:32,810 --> 00:06:36,139
so there's one at the bypass register
which is what were you what we use

118
00:06:36,139 --> 00:06:40,819
in our bypass can did detect the J Tiger
face where we send data in on TDI

119
00:06:40,819 --> 00:06:43,880
and it comes out on TD 01 clocks like
the later

120
00:06:43,880 --> 00:06:47,340
such as the past through and that that's
useful if we wanna access like the

121
00:06:47,340 --> 00:06:48,740
second

122
00:06:48,740 --> 00:06:51,860
chip in a scanner and a chain we would
use ale

123
00:06:51,860 --> 00:06:55,240
enter the but the first device in the
bypass and then

124
00:06:55,240 --> 00:06:58,389
go to the second one sounds like you
know just passes the data along

125
00:06:58,389 --> 00:07:01,410
boundary scan depends on the number of
pins on the chip

126
00:07:01,410 --> 00:07:04,849
and that device ID is an option to
register the most vendors use it and

127
00:07:04,849 --> 00:07:07,050
that's the other mode that we use to

128
00:07:07,050 --> 00:07:11,479
to try to head determine the J Tiger
face because on power-up

129
00:07:11,479 --> 00:07:16,319
are reset above the tap the 32-bit
device ID is in the day to register

130
00:07:16,319 --> 00:07:20,020
so we can do is say okay let's let's
reset the tap try to shift

131
00:07:20,020 --> 00:07:23,280
date out a day to register and if
there's a 32-bit value in there that

132
00:07:23,280 --> 00:07:30,280
matches what it needs to be for device
ID then that's probably good interface

133
00:07:30,569 --> 00:07:34,310
a block diagram Thomas get

134
00:07:34,310 --> 00:07:37,240
here's the here so he business or two
when you when you do a search for Jay

135
00:07:37,240 --> 00:07:39,650
tag like this is that picture that you
most

136
00:07:39,650 --> 00:07:43,180
always see in this is the actual state
machine and it looks really complicated

137
00:07:43,180 --> 00:07:44,830
in the in the specification

138
00:07:44,830 --> 00:07:48,750
for Jay tag is really really long really
really boring like any other spec you

139
00:07:48,750 --> 00:07:49,470
read

140
00:07:49,470 --> 00:07:54,919
but once you distill it down to digest
it it's really not that complicated

141
00:07:54,919 --> 00:07:58,770
I'm so what we do since we're not sure
the state love the other J tagged for

142
00:07:58,770 --> 00:08:02,129
on the target is we always need to do a
we always do a reset

143
00:08:02,129 --> 00:08:06,849
and get back to that that test logic
reset state you can do that by holding

144
00:08:06,849 --> 00:08:11,270
TMS hi for five clock cycles and he
sorta follow where the

145
00:08:11,270 --> 00:08:16,720
where the high bid goes you always get
back to the BX were always able to reset

146
00:08:16,720 --> 00:08:23,240
first and then continue with our
continue with their operations

147
00:08:23,240 --> 00:08:26,250
as much instructions that are listed in
the a

148
00:08:26,250 --> 00:08:30,069
in the g8 expect the only ones that
we're looking at our bypass

149
00:08:30,069 --> 00:08:33,200
which is a required instruction and then

150
00:08:33,200 --> 00:08:36,029
access the old that's really the only
one that work that we're looking at

151
00:08:36,029 --> 00:08:37,330
their other ones as well

152
00:08:37,330 --> 00:08:41,800
that are summer requires a bypass a is
required there's a few others in there

153
00:08:41,800 --> 00:08:44,760
some that are optional but usually those
are implemented

154
00:08:44,760 --> 00:08:49,040
and their command so there is actually
an ID code opcode

155
00:08:49,040 --> 00:08:53,870
thats specific to you to some devices so
instead of just shifting the idid could

156
00:08:53,870 --> 00:08:56,490
I which is all we're trying to do you
can actually send out code and get the

157
00:08:56,490 --> 00:08:57,300
date out

158
00:08:57,300 --> 00:09:00,519
but all that we don't we don't need any
of that stuff bypasses the only one

159
00:09:00,519 --> 00:09:02,959
that's required by the g8 expect

160
00:09:02,959 --> 00:09:06,350
to be all and I'll cordova ones for the
instruction register so no matter which

161
00:09:06,350 --> 00:09:07,649
chip you use

162
00:09:07,649 --> 00:09:11,250
if you shift all ones into the
instruction register you can enable

163
00:09:11,250 --> 00:09:15,510
bypass mode in that that way we can
always force the device in a bypass mode

164
00:09:15,510 --> 00:09:19,070
even if we don't notice

165
00:09:19,070 --> 00:09:22,580
site about protection little bit it is
implementation specific

166
00:09:22,580 --> 00:09:25,839
if you do encounter device is password
protected there is no

167
00:09:25,839 --> 00:09:29,760
no gold standard out how to defeat it
you might be a try to do some brute

168
00:09:29,760 --> 00:09:30,810
forcing

169
00:09:30,810 --> 00:09:35,660
I if there's a physical security fuse
has blown or a diode or something on the

170
00:09:35,660 --> 00:09:36,529
diet self

171
00:09:36,529 --> 00:09:40,970
you might be a lady cap the chip repair
it %uh Chris Tarnowski is a good guy

172
00:09:40,970 --> 00:09:44,250
who can do that stuff from fly logic
which is now part of I'll active

173
00:09:44,250 --> 00:09:47,230
there's a handful of people like that
that are really good at doing silicon

174
00:09:47,230 --> 00:09:47,839
die

175
00:09:47,839 --> 00:09:51,290
acting so maybe that's an option to
physically repair that

176
00:09:51,290 --> 00:09:54,950
broken fuse on the diet to re enable the
J Tiger face

177
00:09:54,950 --> 00:09:58,480
basically if if if there's J tech
support on that on the chip itself

178
00:09:58,480 --> 00:10:05,480
on the diet self there's always a
potential to relabel it

179
00:10:05,550 --> 00:10:09,329
and usually even if there is pastor
protection bypass mode

180
00:10:09,329 --> 00:10:12,640
still needs to be active because if you
imagine if there is a few devices a

181
00:10:12,640 --> 00:10:14,440
chance the first ones protected

182
00:10:14,440 --> 00:10:17,760
any taxes the second one you still need
to have bypassed so we can take

183
00:10:17,760 --> 00:10:20,240
advantage of that would still be other
find the interface

184
00:10:20,240 --> 00:10:23,519
which is great and then maybe we can
devise an attack or something to try to

185
00:10:23,519 --> 00:10:24,790
actually defeat

186
00:10:24,790 --> 00:10:28,890
the protection so they're they're a
bunch of the shelf hardware tools

187
00:10:28,890 --> 00:10:29,700
available

188
00:10:29,700 --> 00:10:34,269
I mention once we find the pinout
relying on existing tools is the way to

189
00:10:34,269 --> 00:10:34,940
go

190
00:10:34,940 --> 00:10:37,899
there's no point recreating the wheel
with the Jade Jagger later really all

191
00:10:37,899 --> 00:10:39,630
you do is find that interface

192
00:10:39,630 --> 00:10:44,180
a and and we're good to go there's a
buncha software tools to open source

193
00:10:44,180 --> 00:10:45,029
tools as well

194
00:10:45,029 --> 00:10:48,170
so again if you can use the same
development environment

195
00:10:48,170 --> 00:10:51,360
that a normal %uh engineer would use
with the chip

196
00:10:51,360 --> 00:10:55,250
thats or the best way to go but if you
need to you can use open source tools as

197
00:10:55,250 --> 00:10:56,750
well that that are designed

198
00:10:56,750 --> 00:10:59,940
I'm to manipulate different types the
processor is an extract memory and and

199
00:10:59,940 --> 00:11:03,880
stuff like that

200
00:11:03,880 --> 00:11:06,649
so here's the here's the ID codes can
this is one of the two methods above

201
00:11:06,649 --> 00:11:08,550
detecting the interface

202
00:11:08,550 --> 00:11:11,970
with ID code one series at the tap

203
00:11:11,970 --> 00:11:15,560
if there is a device ID available it's
gonna be in the day to register so all

204
00:11:15,560 --> 00:11:17,380
we do is reset the tap

205
00:11:17,380 --> 00:11:21,240
and then clock out data

206
00:11:21,240 --> 00:11:24,269
and see if anything comes out

207
00:11:24,269 --> 00:11:28,829
if it does then we know that that's know
if it matches the device id:

208
00:11:28,829 --> 00:11:32,370
a format which has Lee significant but
as one

209
00:11:32,370 --> 00:11:36,320
and as potentially a valid device id:

210
00:11:36,320 --> 00:11:40,110
in the device ID is gonna very with with
part number with family with vendor

211
00:11:40,110 --> 00:11:44,000
usually it's documented within the data
sheet of the part or maybe in a BS DL

212
00:11:44,000 --> 00:11:45,250
file which are used for

213
00:11:45,250 --> 00:11:48,500
for Jay tag complex is a boundary scan
description language

214
00:11:48,500 --> 00:11:52,240
so few usual do is and I'll show you
this may give the demo

215
00:11:52,240 --> 00:11:55,510
is when you get the ID code if you do
successfully find one

216
00:11:55,510 --> 00:11:58,260
then you just do a google search for
that ID code and I'll probably come up

217
00:11:58,260 --> 00:12:00,139
with some website telling you what

218
00:12:00,139 --> 00:12:03,279
with the party's which is cool and then
you can validate and verify that you

219
00:12:03,279 --> 00:12:04,620
have the right one

220
00:12:04,620 --> 00:12:08,290
the manufacture id: portion above the
device ID is

221
00:12:08,290 --> 00:12:11,510
is given out by Jay Dec standards
organisation

222
00:12:11,510 --> 00:12:14,769
so if you don't find anything online you
can at least take the manufacture id:

223
00:12:14,769 --> 00:12:16,430
version %uh portion

224
00:12:16,430 --> 00:12:19,709
go to their website grab the free PDS in
lookin

225
00:12:19,709 --> 00:12:23,200
you know verify though it is a Qualcomm
chip bread is a Motorola chip

226
00:12:23,200 --> 00:12:28,130
and know that you you know got no
correct ID code

227
00:12:28,130 --> 00:12:32,440
so the way that week that works is we
basically go through every possible pin

228
00:12:32,440 --> 00:12:34,180
permutation

229
00:12:34,180 --> 00:12:39,230
and and you know set what we think might
be tier or what we think might be

230
00:12:39,230 --> 00:12:42,649
TD 0 we think might be TMS what we think
might be TCK

231
00:12:42,649 --> 00:12:45,930
and try it if we get a device ID
outgoing with every print out that

232
00:12:45,930 --> 00:12:46,560
result

233
00:12:46,560 --> 00:12:53,560
and keep trying over and over again it's
a device ID is invalid we just skip it

234
00:12:53,579 --> 00:12:57,370
for bypassed and we're doing is I'm
shifting

235
00:12:57,370 --> 00:13:01,079
32 bits of data in in seeing if we get
32 bits of data

236
00:13:01,079 --> 00:13:05,970
out and at the same time as we're doing
that

237
00:13:05,970 --> 00:13:10,000
where trying to determine how many
devices there are in the chain

238
00:13:10,000 --> 00:13:13,649
it so we doing bypass can as we
basically just flush

239
00:13:13,649 --> 00:13:17,769
as many ones we descended ton of one's
down down the line I think we

240
00:13:17,769 --> 00:13:23,800
have 30 32 I can support up to 32
devices I think S&A 128 bits per device

241
00:13:23,800 --> 00:13:26,930
so it's a lot of one's I I'm shifting
through

242
00:13:26,930 --> 00:13:30,120
a chain because we don't know how long
the chain is either rights with the ship

243
00:13:30,120 --> 00:13:33,310
a buncha ones in to try to force every
device in the bypass mode

244
00:13:33,310 --> 00:13:38,290
and then ice and 10 in on TDI or what i
think is TDI

245
00:13:38,290 --> 00:13:41,790
clock it and see if I see 0 come out

246
00:13:41,790 --> 00:13:45,360
eventually I when I think my PTO so
takes a longer time because I'm sorta

247
00:13:45,360 --> 00:13:48,250
shifting and I'm waiting and listening
and waiting for a zero to come down the

248
00:13:48,250 --> 00:13:48,709
line

249
00:13:48,709 --> 00:13:51,839
that might not ever show up so just
takes a little bit longer but as you'll

250
00:13:51,839 --> 00:13:56,329
see from a time it's really not that
much longer

251
00:13:56,329 --> 00:13:59,350
yes that's basically the process is just
in a resetting the top performing this

252
00:13:59,350 --> 00:14:00,440
interrogation

253
00:14:00,440 --> 00:14:04,649
and hopefully we find if we if we get
the same 32 bits out then we know

254
00:14:04,649 --> 00:14:09,120
I with bring the certainty that that's
going to be a valid interface

255
00:14:09,120 --> 00:14:13,310
to hear the timing with ID code I'm is
pretty fast we're actually not concerned

256
00:14:13,310 --> 00:14:13,660
with

257
00:14:13,660 --> 00:14:16,899
TDI with data in right because we're
only

258
00:14:16,899 --> 00:14:20,529
worry setting that happen only reading
data out so we're only looking for three

259
00:14:20,529 --> 00:14:21,529
of the four pins

260
00:14:21,529 --> 00:14:25,079
so it's a lot faster 264 permutations a
second

261
00:14:25,079 --> 00:14:29,170
but the problem is then you still need
the other pin you still need TDI

262
00:14:29,170 --> 00:14:33,160
the usual do is run an ID codes can
first to verify that there is

263
00:14:33,160 --> 00:14:36,209
J Tiger face and once I know there is
one

264
00:14:36,209 --> 00:14:40,190
then I can do the bypass can I'm to get
that you know to get TDI to get that

265
00:14:40,190 --> 00:14:41,610
final Penn

266
00:14:41,610 --> 00:14:46,120
for the bypass can 13.37 permutations
per second

267
00:14:46,120 --> 00:14:49,839
just happened that way a to elite

268
00:14:49,839 --> 00:14:53,910
and the reason it's so much slower is
because you have to deal with TDI

269
00:14:53,910 --> 00:14:56,970
and we have to shift in all these
different bits

270
00:14:56,970 --> 00:15:00,420
but still if you look at it like that
and I say we had eight channels hooked

271
00:15:00,420 --> 00:15:00,910
up

272
00:15:00,910 --> 00:15:05,290
a ton on test points on the board two
seconds to do and I D could skip

273
00:15:05,290 --> 00:15:08,899
even less than a minute for 24 channels
but if you look over here

274
00:15:08,899 --> 00:15:12,579
with 24 channels for bypass almost
255,000

275
00:15:12,579 --> 00:15:16,690
permutations I think it's Iran a little
more than five hours

276
00:15:16,690 --> 00:15:20,000
set something where you'd set up take a
long lunch break and come back it would

277
00:15:20,000 --> 00:15:21,410
be done

278
00:15:21,410 --> 00:15:24,470
and that's why you know you wanna test
with ID codes can first but maybe

279
00:15:24,470 --> 00:15:27,620
sometimes you know if the ID code is not
used in the chip

280
00:15:27,620 --> 00:15:30,920
you have to use bypass can first

281
00:15:30,920 --> 00:15:34,570
I guess I'm gonna give I'll yes as
examples first

282
00:15:34,570 --> 00:15:37,920
I justice just to show you see have on
paper the slides are available on the

283
00:15:37,920 --> 00:15:39,500
DVD also my website

284
00:15:39,500 --> 00:15:43,300
the Def Con badge I'm gonna give a demo
with this one

285
00:15:43,300 --> 00:15:47,449
showing the ID code and I found this BS
the L file that showed

286
00:15:47,449 --> 00:15:52,029
the pinout showed the format so I can
you know compare it

287
00:15:52,029 --> 00:15:55,149
here's one alexis de prêt 54g I have

288
00:15:55,149 --> 00:16:01,680
that here too I give a demo that one
Broadcom chip

289
00:16:01,680 --> 00:16:05,699
another access point to Samsung as one
to put these in as references lot

290
00:16:05,699 --> 00:16:06,420
summoned

291
00:16:06,420 --> 00:16:09,660
I just have a handful aboard at home
that I'd that I test on

292
00:16:09,660 --> 00:16:12,519
here's a I here's a cpl the a
programmable logic device that has a Jay

293
00:16:12,519 --> 00:16:13,720
tag interface

294
00:16:13,720 --> 00:16:17,209
I was kinda neat is a mobile phone

295
00:16:17,209 --> 00:16:21,170
Samsung SCH I 910 what was interesting
about this one

296
00:16:21,170 --> 00:16:26,389
is when I I'm not exactly sure

297
00:16:26,389 --> 00:16:31,209
how how how this works on but when I
will when I'm powering the phone

298
00:16:31,209 --> 00:16:34,560
with like the with the wall wart like up
or the charger

299
00:16:34,560 --> 00:16:39,009
I or if it's on with the battery like if
it's actually on it shows a screen

300
00:16:39,009 --> 00:16:43,440
on J tag is disabled if I turn the phone
off

301
00:16:43,440 --> 00:16:48,100
and I remove the power plug NJ tag will

302
00:16:48,100 --> 00:16:51,449
will work I don't know if that's like an
intentional security

303
00:16:51,449 --> 00:16:55,490
mechanism for something where the you
know I I'm not sure I'm so first I was

304
00:16:55,490 --> 00:16:58,300
working I'm like well why is that I
unplug it worked out like what this

305
00:16:58,300 --> 00:16:59,000
really weird

306
00:16:59,000 --> 00:17:02,130
and I did a search and there's like some
some phone hacking web sites that have

307
00:17:02,130 --> 00:17:04,929
mentioned similar thing so I don't know
I just don't know if it's intentional or

308
00:17:04,929 --> 00:17:05,350
not

309
00:17:05,350 --> 00:17:08,199
this sort of interesting so sometimes
you can have to play around with stuff

310
00:17:08,199 --> 00:17:09,220
like that

311
00:17:09,220 --> 00:17:14,020
to uncover the secrets okay so I'll give
a demonstration at the J tag portion now

312
00:17:14,020 --> 00:17:15,959
and we'll talk about you are next

313
00:17:15,959 --> 00:17:22,959
so the switch to the to the camera for
second as I can show the setup

314
00:17:28,700 --> 00:17:35,700
remain your camera switching action

315
00:17:42,920 --> 00:17:49,920
okay

316
00:17:55,490 --> 00:17:58,910
okay is a little bit by the but just so
decide on after you hold

317
00:17:58,910 --> 00:18:02,690
hold things up this %uh so here's the
day tag later

318
00:18:02,690 --> 00:18:07,430
but I have is I'm using a screw terminal
blocks

319
00:18:07,430 --> 00:18:11,260
and I put a little 5 pin header in here
just for the first demo

320
00:18:11,260 --> 00:18:14,970
I was like to make sure the demos gonna
work before i'd start doing other demos

321
00:18:14,970 --> 00:18:20,490
to have a five pin header here and I
have a cable connected

322
00:18:20,490 --> 00:18:24,940
to you this desk on bad witches and MC
56 at

323
00:18:24,940 --> 00:18:28,010
but 8,000 MC MC

324
00:18:28,010 --> 00:18:32,720
it is except eight thousand six a
digital single control it has J tag

325
00:18:32,720 --> 00:18:37,060
and I designed this this def gun badge
of years ago this is def con 17

326
00:18:37,060 --> 00:18:40,540
and just happen to have J Tiger face and
I had brought out

327
00:18:40,540 --> 00:18:44,040
DJ tag pins to test test points on the
board

328
00:18:44,040 --> 00:18:48,120
so for the demo I said okay what this
welds make a little cable

329
00:18:48,120 --> 00:18:52,430
wire--the test points to a cable so
everything is kinda hard coded

330
00:18:52,430 --> 00:18:56,680
so give them a first I was gonna plug
that into you

331
00:18:56,680 --> 00:18:59,790
a plan that is the G together which is
grounded

332
00:18:59,790 --> 00:19:04,410
channel 0 Jan 01 channel to channel 3
the next demo I'll actually

333
00:19:04,410 --> 00:19:07,980
use our I'm not gonna switch back to the
camera mode for but I have this

334
00:19:07,980 --> 00:19:11,950
link this device right have a JAG Corps
on some other pins

335
00:19:11,950 --> 00:19:16,470
and then a UART on other with justice
requires in this is normally how you do

336
00:19:16,470 --> 00:19:17,310
it you just have

337
00:19:17,310 --> 00:19:21,700
discrete wires solder down to connect it
up and you just arbitrarily connect the

338
00:19:21,700 --> 00:19:22,850
the to the device

339
00:19:22,850 --> 00:19:25,970
so we'll do that um will do that next

340
00:19:25,970 --> 00:19:32,970
so first let's go back to that to normal
screen and I'll have my terminal program

341
00:19:45,660 --> 00:19:47,679
apps

342
00:19:47,679 --> 00:19:51,670
ever until their heads good

343
00:19:51,670 --> 00:19:54,950
up okay so is there a program a

344
00:19:54,950 --> 00:19:58,390
Rd have plugged in the detail later

345
00:19:58,390 --> 00:20:05,390
and on reset what you'll see

346
00:20:15,270 --> 00:20:22,270
group

347
00:20:23,030 --> 00:20:30,030
sure the rates you're poor

348
00:20:37,080 --> 00:20:40,260
get than ever its report so i reset

349
00:20:40,260 --> 00:20:44,060
a lil header with some information

350
00:20:44,060 --> 00:20:48,390
he returned the command that the colin
is the command prompt to visit return

351
00:20:48,390 --> 00:20:52,960
I we see question mark invalid command
eight you can actually see the different

352
00:20:52,960 --> 00:20:54,510
commands we have available right now

353
00:20:54,510 --> 00:20:57,750
the first thing that we need to do is
set the target voltage

354
00:20:57,750 --> 00:21:03,080
targets as the voltage so we're doing a
the CR 2032 battery so it's a three-ball

355
00:21:03,080 --> 00:21:06,680
City 3.0 new target voltage that

356
00:21:06,680 --> 00:21:12,810
now would you identify J typing as they
will do that ID codes can first

357
00:21:12,810 --> 00:21:16,820
and it will do bypass can identify

358
00:21:16,820 --> 00:21:21,060
pinout include optional reset pin so
this version of code I'm running right

359
00:21:21,060 --> 00:21:21,940
now is

360
00:21:21,940 --> 00:21:26,350
is a the development version I'm using
to add the new reset punch valujet

361
00:21:26,350 --> 00:21:27,500
started doing last night

362
00:21:27,500 --> 00:21:30,920
so is as a no cuz are not using that
right now

363
00:21:30,920 --> 00:21:34,220
and her number channels to use I have
four channels connected

364
00:21:34,220 --> 00:21:39,780
4 pins connected it says ensure
connections are on stage 32 seeds your

365
00:21:39,780 --> 00:21:40,510
what they are

366
00:21:40,510 --> 00:21:44,740
24 possible permutations hit spacebar

367
00:21:44,740 --> 00:21:48,210
at you know pretty much right away
there's the pinout

368
00:21:48,210 --> 00:21:53,050
but we don't know TDI it says n/a not
available but with the TDOT sick ATMs

369
00:21:53,050 --> 00:21:53,850
that's pretty cool

370
00:21:53,850 --> 00:21:57,300
week actually verify that I believe it's
the de-

371
00:21:57,300 --> 00:22:04,280
command 30 I not needed to reach you the
device ID so now it says enter new enter

372
00:22:04,280 --> 00:22:05,790
to: pants it's gonna be

373
00:22:05,790 --> 00:22:09,300
in three in one

374
00:22:09,300 --> 00:22:12,450
into that so we just got from the scan

375
00:22:12,450 --> 00:22:17,520
one device in the chain and there's a
device id:

376
00:22:17,520 --> 00:22:20,950
now the number device in the chain
normally I would do a bypass campers it

377
00:22:20,950 --> 00:22:22,150
would tell me the device id: are

378
00:22:22,150 --> 00:22:26,500
I'll do that next as one you the ID code
I where you can see here the ID code

379
00:22:26,500 --> 00:22:29,680
your a1c 06 01 D

380
00:22:29,680 --> 00:22:34,100
so then what you do is go to

381
00:22:34,100 --> 00:22:36,930
go to Google and look that up and see
what the rest so I don't have internet

382
00:22:36,930 --> 00:22:38,630
access but actually loaded

383
00:22:38,630 --> 00:22:43,700
I loaded this beforehand so when you do
that you'll see stuff like this is ABI

384
00:22:43,700 --> 00:22:46,920
STL file that's that says you know
information there it is

385
00:22:46,920 --> 00:22:50,580
said Dempsey 56 F eight thousand six and
then let you know that

386
00:22:50,580 --> 00:22:53,560
then you can go and grab data sheet at
the parts and manufacture and start

387
00:22:53,560 --> 00:22:55,880
reading in more and continuing down your
down your

388
00:22:55,880 --> 00:23:02,880
your are tracking path that ID code was
to bypass can

389
00:23:06,020 --> 00:23:11,770
Richard B no

390
00:23:11,770 --> 00:23:15,320
they notice it says that

391
00:23:15,320 --> 00:23:18,960
the minimum number pens is now four
instead of three because now we have to

392
00:23:18,960 --> 00:23:20,600
look for Tati as well

393
00:23:20,600 --> 00:23:24,840
support channels still 24 bus conditions
spacebar

394
00:23:24,840 --> 00:23:28,780
again he thought I'd like a slight
slight bit of extra time

395
00:23:28,780 --> 00:23:33,170
number devices detected one so that's
how we know one device in the chain and

396
00:23:33,170 --> 00:23:33,680
there's

397
00:23:33,680 --> 00:23:36,790
$10,000 a TDI so now we have the full um

398
00:23:36,790 --> 00:23:40,500
the foreskin we can vet validate that
with the test bypass

399
00:23:40,500 --> 00:23:44,580
we hit enter it

400
00:23:44,580 --> 00:23:47,890
saves the default value it saves the
most recent Valley Cir apt to keep

401
00:23:47,890 --> 00:23:49,590
retyping something to say and their

402
00:23:49,590 --> 00:23:52,640
to skip it up to skip it City i0 I

403
00:23:52,640 --> 00:23:56,310
TD 0 3 12

404
00:23:56,310 --> 00:23:59,340
one device G so match

405
00:23:59,340 --> 00:24:02,680
pattern in pattern out match and we can
like do it again

406
00:24:02,680 --> 00:24:07,140
just enter for everything and it will be
different 32-bit value is being set

407
00:24:07,140 --> 00:24:10,340
now we know that that's the ballad J tag
for

408
00:24:10,340 --> 00:24:16,040
now we can continue on with our tech so
let's do it with the

409
00:24:16,040 --> 00:24:19,230
with this Linksys WRT 54g

410
00:24:19,230 --> 00:24:22,520
version 2 just for fun

411
00:24:22,520 --> 00:24:27,170
I'm gonna disable the target voltage 20
three bodies of

412
00:24:27,170 --> 00:24:31,600
now may connect up the new one now the
the one thing you do need to do

413
00:24:31,600 --> 00:24:35,130
is make sure you have a shared round
between the systems

414
00:24:35,130 --> 00:24:38,940
sort of a reference to 0 vote reference
between the two so you will be at least

415
00:24:38,940 --> 00:24:41,750
need to do that reverse engineering to
figure out where ground is

416
00:24:41,750 --> 00:24:45,550
sick to share otherwise it at they're
not able to communicate properly

417
00:24:45,550 --> 00:24:49,390
some a connect ground and then

418
00:24:49,390 --> 00:24:53,640
is arms can arbitrarily plug in these
four

419
00:24:53,640 --> 00:25:00,640
pins from this connector I don't know
what they are

420
00:25:07,810 --> 00:25:11,150
when a fit in there there okay now have
the four wires from this

421
00:25:11,150 --> 00:25:15,270
unknown connector against the Jets
regulator and the

422
00:25:15,270 --> 00:25:18,860
a/c it's all powered on so I should be
able to

423
00:25:18,860 --> 00:25:22,500
now set the target voters I think the
target voltage for the

424
00:25:22,500 --> 00:25:27,390
for the router is 3.3 we'll see if
that's right

425
00:25:27,390 --> 00:25:30,780
and how do I decode ID codes can

426
00:25:30,780 --> 00:25:34,080
no we don't want the reset number
channels I have

427
00:25:34,080 --> 00:25:40,510
1230 case I saw four spacebar

428
00:25:40,510 --> 00:25:43,920
have been the right away so dirty I we
don't know then 1280

429
00:25:43,920 --> 00:25:46,980
was to bypass can no

430
00:25:46,980 --> 00:25:53,300
for yep

431
00:25:53,300 --> 00:25:56,680
so now we know titi spin and three want
either

432
00:25:56,680 --> 00:26:01,210
so I actually just to prove that I'm not
faking this a switch some the pins

433
00:26:01,210 --> 00:26:07,320
okay

434
00:26:07,320 --> 00:26:10,660
now let's do it again was that bypass
can't hoops

435
00:26:10,660 --> 00:26:14,520
bypass can

436
00:26:14,520 --> 00:26:18,070
no four channels

437
00:26:18,070 --> 00:26:23,950
but I going to 130 so it was what 32

438
00:26:23,950 --> 00:26:28,350
10 or something and now it's that's
different so

439
00:26:28,350 --> 00:26:33,340
3120 into 130 so

440
00:26:33,340 --> 00:26:37,930
is gonna work no matter you know how you
plug in the connections okay

441
00:26:37,930 --> 00:26:41,310
so that some that's the Jags can

442
00:26:41,310 --> 00:26:48,310
go back to slides and I'll show you you
art

443
00:26:52,820 --> 00:26:56,320
okay so this is much this is the the
second um

444
00:26:56,320 --> 00:26:59,950
protocol I added to the date I get it
originally was just a tag in this is the

445
00:26:59,950 --> 00:27:02,080
next thing I have a whole list of other
interfaces

446
00:27:02,080 --> 00:27:06,289
so you aren't is a very common a
interface for debug

447
00:27:06,289 --> 00:27:10,750
and for communicating to to a device is
in a synchronous serial interface

448
00:27:10,750 --> 00:27:15,179
so anything about serial ports this is
this is what it is

449
00:27:15,179 --> 00:27:19,150
you are a synchronous receiver and
transmitter so a synchronous me there's

450
00:27:19,150 --> 00:27:20,309
no external clock

451
00:27:20,309 --> 00:27:23,380
so the signal itself has the timing

452
00:27:23,380 --> 00:27:26,559
kind of associated with it so you have
to have the correct bada rate in order

453
00:27:26,559 --> 00:27:27,450
to correctly

454
00:27:27,450 --> 00:27:34,450
identify the date and here's sort of us
back you have start bit

455
00:27:35,240 --> 00:27:39,590
5 to 8 data bits in a stop it and
looking at your data is C is

456
00:27:39,590 --> 00:27:43,309
sort of the more you look at it the more
obvious it that it's

457
00:27:43,309 --> 00:27:46,740
a synchronous serial versus some other
single so if you're probing aboard you

458
00:27:46,740 --> 00:27:47,270
might be less

459
00:27:47,270 --> 00:27:50,529
to take a guess and I think that's your
but in most cases

460
00:27:50,529 --> 00:27:55,700
you know being able to automatically
detect it will be easier the most

461
00:27:55,700 --> 00:27:59,860
commonly use pins these days are just TX
& rx to transmit and receive

462
00:27:59,860 --> 00:28:03,330
I'm back in the day we had a bunch
different control signals that were used

463
00:28:03,330 --> 00:28:06,620
for handshaking and making sure that the
systems you know one system was ready to

464
00:28:06,620 --> 00:28:08,240
receive data from the other ed

465
00:28:08,240 --> 00:28:11,470
there's sort of all these
incompatibilities but nowadays

466
00:28:11,470 --> 00:28:14,500
Tx and Rx are usually what you see so on
a

467
00:28:14,500 --> 00:28:18,190
on embedded system say an access point
which I give you the demo love

468
00:28:18,190 --> 00:28:22,390
usually see something like power tx/rx
ground

469
00:28:22,390 --> 00:28:27,490
I as as a for a 4-pin connector for
example if they don't really need power

470
00:28:27,490 --> 00:28:28,659
usually it's on the connector

471
00:28:28,659 --> 00:28:33,490
or other times not but tx/rx those the
ones and those are the only ones that

472
00:28:33,490 --> 00:28:35,730
we're looking at we're not trying to
find these are the control signals

473
00:28:35,730 --> 00:28:39,490
lots of embedded systems are using UART
for debug output spur route shells and

474
00:28:39,490 --> 00:28:41,000
stuff and also an example

475
00:28:41,000 --> 00:28:45,470
and I'll show you a real demo as well
here looks like if you do

476
00:28:45,470 --> 00:28:48,799
probe on a board in looking at a
synchronous serial

477
00:28:48,799 --> 00:28:52,130
data stream just kinda looks like that

478
00:28:52,130 --> 00:28:55,140
the important thing in the way that we
can figure out the bar to rate

479
00:28:55,140 --> 00:28:58,409
is by measuring the bid with which is
the narrowest

480
00:28:58,409 --> 00:29:02,059
portion love the way the narrowest
transition

481
00:29:02,059 --> 00:29:05,100
sonar case you can see there's some
small

482
00:29:05,100 --> 00:29:10,110
a small pieces ends up being around 8.7
microseconds

483
00:29:10,110 --> 00:29:14,690
if you do one over 8.7 you end up
getting around 215

484
00:29:14,690 --> 00:29:18,730
I point2 kilobits a second actually 114
.9

485
00:29:18,730 --> 00:29:22,280
which is within the standard on kinda
deviation

486
00:29:22,280 --> 00:29:26,030
I within the tolerance love are seeded
you for under

487
00:29:26,030 --> 00:29:29,570
of cereal for 115 point to kill was the
second they normally would take a

488
00:29:29,570 --> 00:29:30,220
measurement

489
00:29:30,220 --> 00:29:33,580
a bit with and then set our terminal
program to the

490
00:29:33,580 --> 00:29:36,700
near a standard baud rate and that's
basically

491
00:29:36,700 --> 00:29:40,830
what a that that's how you would as a
youth manually

492
00:29:40,830 --> 00:29:45,100
figure out York but in our case what
we're doing is we're just setting up the

493
00:29:45,100 --> 00:29:46,830
standard configuration a data bits

494
00:29:46,830 --> 00:29:51,070
one stop it eight and one and we have a
bunch of standard baud rate store to

495
00:29:51,070 --> 00:29:51,870
look up table

496
00:29:51,870 --> 00:29:55,190
so all of these it is possible

497
00:29:55,190 --> 00:29:58,390
for a vendor to be tricky in using a
non-standard baud rate

498
00:29:58,390 --> 00:30:02,490
which in our cases were doing a table
lookup we might not see it

499
00:30:02,490 --> 00:30:05,700
but the cool thing about a synchronous
data is

500
00:30:05,700 --> 00:30:09,780
even though we might not see the exact
data we might still see a response

501
00:30:09,780 --> 00:30:13,440
of some sort and you'll see in the demo
other like different bond rates are

502
00:30:13,440 --> 00:30:15,210
gonna show you maybe maybe it's John

503
00:30:15,210 --> 00:30:18,559
but at least you know that you see a
signal on that and then you could always

504
00:30:18,559 --> 00:30:20,289
go and use the source got to figure out

505
00:30:20,289 --> 00:30:23,590
so you never vendors trying to obfuscate
you'll be able to find it was the time

506
00:30:23,590 --> 00:30:27,950
so this can we do

507
00:30:27,950 --> 00:30:31,010
is we ask the user for a desired string

508
00:30:31,010 --> 00:30:34,760
in normally is just carriage return you
know it's like when you connect up to

509
00:30:34,760 --> 00:30:37,860
system you use a hit and her something
to try to wake up the system

510
00:30:37,860 --> 00:30:41,970
I maybe you know that the system
requires some other

511
00:30:41,970 --> 00:30:46,419
sequence some other key keystrokes see
have up to 16 by so you can actually

512
00:30:46,419 --> 00:30:47,340
enter

513
00:30:47,340 --> 00:30:51,429
what you want it to send on what you
think the TX pin is

514
00:30:51,429 --> 00:30:54,510
and then we're gonna look for responses
and what we think the RX pin is that we

515
00:30:54,510 --> 00:30:55,919
try all the different permutations

516
00:30:55,919 --> 00:31:00,399
that's basically what we do I what we do
as well since we're sending a string

517
00:31:00,399 --> 00:31:03,970
we're gonna wait up to 20 milliseconds
to receive a bite back which is pretty

518
00:31:03,970 --> 00:31:06,059
long in computer time

519
00:31:06,059 --> 00:31:08,960
and if you don't get a response back on
it and within 20 milliseconds we just

520
00:31:08,960 --> 00:31:10,309
assume that it's not

521
00:31:10,309 --> 00:31:14,320
a not a valid York if there are any
bites that

522
00:31:14,320 --> 00:31:19,020
received we're gonna c6 this for 16
bytes

523
00:31:19,020 --> 00:31:22,299
that the system sends back to the target
is sending back to us and again as

524
00:31:22,299 --> 00:31:23,500
you'll see

525
00:31:23,500 --> 00:31:26,590
different if it's not the ballot box
rate you might still see date

526
00:31:26,590 --> 00:31:30,149
and then the human you will go through
and choose the one that seems to be the

527
00:31:30,149 --> 00:31:31,610
most valid one or try

528
00:31:31,610 --> 00:31:36,100
your try those at least you have that
you know and that's the key

529
00:31:36,100 --> 00:31:39,820
here's an example above the above the
UART scan

530
00:31:39,820 --> 00:31:43,559
so I have a a defined string like a
member to what I think you have some I

531
00:31:43,559 --> 00:31:45,679
define string I think with hello

532
00:31:45,679 --> 00:31:50,090
is run transmitting at at different bond
rates I have my soul scope setup

533
00:31:50,090 --> 00:31:53,399
with Digital decoding at a certain
moderate and I'm trying

534
00:31:53,399 --> 00:31:57,770
all the different bond rates STX

535
00:31:57,770 --> 00:32:01,530
so I'm sending hello as my string to the
target given broad rates

536
00:32:01,530 --> 00:32:05,320
and I see its wait until so there's that
one body rate

537
00:32:05,320 --> 00:32:07,830
where we get a response back that's
basically what we're doing is we're just

538
00:32:07,830 --> 00:32:14,830
reading that receive line till we see
some data

539
00:32:15,740 --> 00:32:19,110
so for the speed since you only have to
locate two pans ends up being about one

540
00:32:19,110 --> 00:32:20,580
permutation a second

541
00:32:20,580 --> 00:32:24,419
up so 10 minutes at the most

542
00:32:24,419 --> 00:32:29,190
that Tibet two examples

543
00:32:29,190 --> 00:32:33,299
so the same Broadcom the there are they
are Linksys wrt54g the same one we just

544
00:32:33,299 --> 00:32:35,570
did the g8 I test on also has a UART

545
00:32:35,570 --> 00:32:40,240
on a separate set up tents so you are
that the J tag was here

546
00:32:40,240 --> 00:32:43,830
here's the UART and I'll show you

547
00:32:43,830 --> 00:32:48,940
I'll give you demo that one here's
another example where the set-top box

548
00:32:48,940 --> 00:32:52,590
I'm from mud from Israel

549
00:32:52,590 --> 00:32:56,200
and thus do not come to NY harder acting
classes and said hey I've heard that

550
00:32:56,200 --> 00:32:57,049
there's a

551
00:32:57,049 --> 00:33:01,669
some sort of a root shell interface on
here on but I don't know where it is

552
00:33:01,669 --> 00:33:05,049
can we find it so we sorta went through
the process of looking on the board

553
00:33:05,049 --> 00:33:10,399
identifying the interface is looking for
that in a very obvious connectors

554
00:33:10,399 --> 00:33:15,299
and then poking around with are still a
scope to find out which one it was

555
00:33:15,299 --> 00:33:18,700
now if I had the UART detection
functionality done on the J tell you

556
00:33:18,700 --> 00:33:20,649
later we could have just looked up

557
00:33:20,649 --> 00:33:23,990
you know test points put all those up to
the J Tiger later and how to do it

558
00:33:23,990 --> 00:33:25,590
automatically but we didn't

559
00:33:25,590 --> 00:33:30,649
once we ended up finding the crack
pinout we had to use a level shifter

560
00:33:30,649 --> 00:33:34,360
which an FTDI part on it so USB to
serial adapter

561
00:33:34,360 --> 00:33:37,520
look that up to a terminal program we
got the moderate right

562
00:33:37,520 --> 00:33:41,429
and we can see it's just you know boot
up screen with you boo and stuff

563
00:33:41,429 --> 00:33:44,429
which is pretty cool that was more a
manual process

564
00:33:44,429 --> 00:33:47,520
I'll show you now you can do with the J
tell you later that I

565
00:33:47,520 --> 00:33:53,399
is way cooler and requires is less less
hassle

566
00:33:53,399 --> 00:33:56,740
okay so let's switch

567
00:33:56,740 --> 00:34:01,159
I see no you know what you need to
switch that

568
00:34:01,159 --> 00:34:06,250
your cat are as I can just use the term
a program

569
00:34:06,250 --> 00:34:10,470
no switch back to the sides is

570
00:34:10,470 --> 00:34:13,730
on doing here you really need to see
this on the on-screen

571
00:34:13,730 --> 00:34:17,000
I'm disconnecting DJ tag cables

572
00:34:17,000 --> 00:34:21,580
and I have a bunch connected to the UART
which now I know is the UART

573
00:34:21,580 --> 00:34:24,609
but I remember what the pins are
anything so I was gonna connect these

574
00:34:24,609 --> 00:34:28,069
a make these up so there's it's a

575
00:34:28,069 --> 00:34:33,889
it to my fibro header but one side i'm
looking at one side

576
00:34:33,889 --> 00:34:37,639
and there's five pins I have ground
looked up and I have for their pen so

577
00:34:37,639 --> 00:34:39,940
many connect those two CH 0

578
00:34:39,940 --> 00:34:43,270
one two and three just like I did before

579
00:34:43,270 --> 00:34:50,270
not care how they how they go in

580
00:34:53,309 --> 00:34:59,690
reset the devices to be safe a case an
hour incall term

581
00:34:59,690 --> 00:35:03,140
I I think the settings are probably
still the same yes I still were set at

582
00:35:03,140 --> 00:35:04,089
3.3 volts

583
00:35:04,089 --> 00:35:07,369
now have things worked up a

584
00:35:07,369 --> 00:35:11,950
you are and okay so now all we do is

585
00:35:11,950 --> 00:35:15,819
identify UART text string we're going to
use carriage return

586
00:35:15,819 --> 00:35:21,500
as our texting to stand to send number
channels we have

587
00:35:21,500 --> 00:35:26,380
for 12 possible permutations

588
00:35:26,380 --> 00:35:33,380
press spacebar but if anything comes up

589
00:35:41,940 --> 00:35:44,880
and you see those old ashes that were
coming I was another feature I decided

590
00:35:44,880 --> 00:35:46,490
to go to show progress indicator

591
00:35:46,490 --> 00:35:50,230
and then all the sudden we get this
massive dump responses

592
00:35:50,230 --> 00:35:55,619
you can see the Tx and Rx are all the
same in three for TX

593
00:35:55,619 --> 00:36:01,530
into for rx but for different bond rates
we're seeing different data coming back

594
00:36:01,530 --> 00:36:05,390
that since we don't know what type of
data were expecting back to the target

595
00:36:05,390 --> 00:36:06,069
lot of times

596
00:36:06,069 --> 00:36:09,230
at least the J tag editor doesn't know
if it's supposed to be printable ASCII

597
00:36:09,230 --> 00:36:12,839
effort if it's supposed to be something
else this is where the user comes in

598
00:36:12,839 --> 00:36:16,890
did to actually go through manually and
determine if that's a likely

599
00:36:16,890 --> 00:36:20,910
scenario if it if that's worth checking
out more go through and see if we see

600
00:36:20,910 --> 00:36:21,369
any

601
00:36:21,369 --> 00:36:25,289
any bites that might be on that might
you know be something

602
00:36:25,289 --> 00:36:29,559
useful so you go through we see 57.6%

603
00:36:29,559 --> 00:36:32,730
as your ID carriage return rate

604
00:36:32,730 --> 00:36:36,819
go down my here's one fifteen to 20 d0
as a carriage return line feed

605
00:36:36,819 --> 00:36:41,299
that's probably the one I that's the
right body rates let's try that TX have

606
00:36:41,299 --> 00:36:42,430
three rx up to

607
00:36:42,430 --> 00:36:47,559
now we can do instead of having to
disconnect the Jager later put on a

608
00:36:47,559 --> 00:36:48,859
different level shifter

609
00:36:48,859 --> 00:36:52,640
get your terminal program set up again
all that we can use what's called

610
00:36:52,640 --> 00:36:56,829
that passed through mode to let the J
Tai Chi to do all of that

611
00:36:56,829 --> 00:37:00,150
so it's too P was it TX in three

612
00:37:00,150 --> 00:37:03,319
art in to YouTube operate

613
00:37:03,319 --> 00:37:06,829
150 stuff not 116 SI core

614
00:37:06,829 --> 00:37:13,599
p

615
00:37:13,599 --> 00:37:16,720
3 to one one

616
00:37:16,720 --> 00:37:21,490
by to sometimes I'm bad at typing

617
00:37:21,490 --> 00:37:24,720
okay enduring you are passed through so
now we can just

618
00:37:24,720 --> 00:37:29,029
start communicating interfacing directly
with the device

619
00:37:29,029 --> 00:37:33,230
that we've just discovered the UART for
so here we go dd-wrt I think the login

620
00:37:33,230 --> 00:37:33,599
is

621
00:37:33,599 --> 00:37:38,599
us that route I think it's admin

622
00:37:38,599 --> 00:37:44,109
password or something admin yes or no

623
00:37:44,109 --> 00:37:47,240
a beer I've local echo turned on route

624
00:37:47,240 --> 00:37:51,059
at yes

625
00:37:51,059 --> 00:37:55,730
hacked it okay so now we log in to
dd-wrt which is loaded on this access

626
00:37:55,730 --> 00:37:57,299
point now

627
00:37:57,299 --> 00:38:01,160
now have a root shell and I can just
sort of you know manipulate the device

628
00:38:01,160 --> 00:38:02,470
out now amid

629
00:38:02,470 --> 00:38:07,049
so kinda cool and then when I'm done

630
00:38:07,049 --> 00:38:11,069
I can't relax your past the complete now
I'm back

631
00:38:11,069 --> 00:38:16,450
communicating with the Jade Jagger later
instead so that is York detection

632
00:38:16,450 --> 00:38:23,450
so there are some limitations like any
tool

633
00:38:25,640 --> 00:38:29,880
I'm sometimes tools are good for certain
jobs sometimes are not sometimes it was

634
00:38:29,880 --> 00:38:30,539
gonna work

635
00:38:30,539 --> 00:38:34,049
%uh so there are some limitations wanna
mate might be that there is no on to

636
00:38:34,049 --> 00:38:34,890
debug interface

637
00:38:34,890 --> 00:38:39,250
up for that for that target maybe the
device is physically disconnected like

638
00:38:39,250 --> 00:38:40,119
we talked about

639
00:38:40,119 --> 00:38:44,349
may be there is a reset pin being pulled
low to disable

640
00:38:44,349 --> 00:38:47,960
I J tag what we have right now with the
current firmware that's available and

641
00:38:47,960 --> 00:38:49,339
get her been that's on the unit's

642
00:38:49,339 --> 00:38:52,680
I I basically any any pin that we're not
currently

643
00:38:52,680 --> 00:38:55,740
manipulating H&R not thinking currently
manipulating

644
00:38:55,740 --> 00:38:58,789
I have said Hi so if there is the reset
pin

645
00:38:58,789 --> 00:39:02,319
is gonna keep it high so it's going to
enable it I'm so

646
00:39:02,319 --> 00:39:04,880
so the cyst you'll still be able to
detect the interface but eventually the

647
00:39:04,880 --> 00:39:05,589
next version

648
00:39:05,589 --> 00:39:10,020
there are gonna be low and I'm gonna try
to set high only to discover

649
00:39:10,020 --> 00:39:13,760
if there is a reset pin their maybe
after protected maybe some other

650
00:39:13,760 --> 00:39:15,109
configuration we don't know about

651
00:39:15,109 --> 00:39:17,829
I'm sure there's a lot to differ edge
cases have different parts that don't

652
00:39:17,829 --> 00:39:18,380
work

653
00:39:18,380 --> 00:39:21,910
on but my goal is to try to eventually
fit those in and you know get feedback

654
00:39:21,910 --> 00:39:23,119
from people are using their

655
00:39:23,119 --> 00:39:27,510
using the device I have a list on get
high above like known good targets

656
00:39:27,510 --> 00:39:30,880
so as that list grows people will be
other know if you know there's like a

657
00:39:30,880 --> 00:39:32,369
special thing they need to do

658
00:39:32,369 --> 00:39:36,500
if they're strong pull-up resistors that
are preventing on the J tackle a tard

659
00:39:36,500 --> 00:39:38,450
signals from being the proper levels

660
00:39:38,450 --> 00:39:42,299
one limitation which is only a
limitation sometimes

661
00:39:42,299 --> 00:39:45,910
is that no possibly as your fuzzing this
interface you're sending different

662
00:39:45,910 --> 00:39:49,680
different data streams on different pens
a test by say don't know they are

663
00:39:49,680 --> 00:39:53,319
you might end up causing the causing the
device to to operate

664
00:39:53,319 --> 00:39:56,569
I abnormally but from a hacker point of
view you can

665
00:39:56,569 --> 00:40:01,059
if you can cause some service you to
happen like that might be another clue

666
00:40:01,059 --> 00:40:04,309
they can use for another partner actor
something so I'm

667
00:40:04,309 --> 00:40:08,250
someone a limitation but it but if you
use it right I can be useful

668
00:40:08,250 --> 00:40:11,940
some future work I mention I have lotsa
stuff to do this list keeps growing

669
00:40:11,940 --> 00:40:15,440
I want to do lots of different faces
flash memory devices

670
00:40:15,440 --> 00:40:19,240
you can't even communicate directly to
those in get information back from them

671
00:40:19,240 --> 00:40:22,540
about you no matter their memory size
and configuration

672
00:40:22,540 --> 00:40:27,059
so now we might be able to detect if
there's a flash memory device on a board

673
00:40:27,059 --> 00:40:30,579
but I thought would be kinda neat
possibly doing a level shifting module

674
00:40:30,579 --> 00:40:31,250
to allow

675
00:40:31,250 --> 00:40:35,119
adjustable target voltages above 3.3 so
for industrial equipment skater

676
00:40:35,119 --> 00:40:35,839
equipment

677
00:40:35,839 --> 00:40:39,279
there's not just about there that still
five all and above

678
00:40:39,279 --> 00:40:43,470
especially for you are gonna faces maybe
do a logic analyzer

679
00:40:43,470 --> 00:40:47,460
since you know we have 24 channels with
proper in for protection

680
00:40:47,460 --> 00:40:50,599
there's no reason why we couldn't write
some code

681
00:40:50,599 --> 00:40:53,720
to just read the state whatever pins
that were connected to

682
00:40:53,720 --> 00:40:56,589
in an interface it was something like
seeing rockin open source logic analyzer

683
00:40:56,589 --> 00:40:57,650
tool

684
00:40:57,650 --> 00:41:01,020
that would probably be done in assembly
language on the

685
00:41:01,020 --> 00:41:04,579
on the Gypsy can get kinda maximum speed
I think that might be cool

686
00:41:04,579 --> 00:41:07,930
you know since you already know if you
already have one he also to prevent you

687
00:41:07,930 --> 00:41:11,809
from having to buy another logic
analyzer

688
00:41:11,809 --> 00:41:15,420
so lotsa stuff in the future if you
wanna get

689
00:41:15,420 --> 00:41:19,359
information I all the stuff is available
on Jay tag editor dot com which is links

690
00:41:19,359 --> 00:41:20,779
over to my

691
00:41:20,779 --> 00:41:24,109
but might buy website which is grand
idea studio

692
00:41:24,109 --> 00:41:27,930
systematic source code bill materials
test procedure

693
00:41:27,930 --> 00:41:32,180
a everything you need to reply if you
wanna send those to a local PC board

694
00:41:32,180 --> 00:41:35,049
I'm fabricator you could do that
everything's on line that and then from

695
00:41:35,049 --> 00:41:36,339
there there's a link to the

696
00:41:36,339 --> 00:41:40,970
to the firmware get her para lacks I
mention they manufacture the units

697
00:41:40,970 --> 00:41:44,309
so they sell assembled units and they
sell

698
00:41:44,309 --> 00:41:48,529
but I believe they have the bus pirate
probes

699
00:41:48,529 --> 00:41:53,029
and they currently sell bare boards I
think they have maybe like 20 or 30 bear

700
00:41:53,029 --> 00:41:53,940
blank

701
00:41:53,940 --> 00:41:57,089
PC boards left for 20 bucks so if you
want to buy a bear want to build your

702
00:41:57,089 --> 00:41:57,720
own

703
00:41:57,720 --> 00:42:00,819
you could do that oosh Park is a is

704
00:42:00,819 --> 00:42:04,640
is a oMG I had a Portland named Neil
lane is handle

705
00:42:04,640 --> 00:42:09,220
and he builds if advocate circuit boards
for the hobbyist community and basically

706
00:42:09,220 --> 00:42:10,190
batches

707
00:42:10,190 --> 00:42:13,819
Inc copies everybody's designs onto a
giant circuit board panel

708
00:42:13,819 --> 00:42:18,099
and gets that fabricated because it that
the the cost aboard fabrications really

709
00:42:18,099 --> 00:42:19,930
determined by the size the panel

710
00:42:19,930 --> 00:42:22,869
so if you only have a tiny little part
you might still have to use their

711
00:42:22,869 --> 00:42:24,040
minimum panel size:

712
00:42:24,040 --> 00:42:27,220
so he does is back everything together I
and

713
00:42:27,220 --> 00:42:30,309
see wait a few days longer but now you
pay

714
00:42:30,309 --> 00:42:33,940
some few dollars per square inch to get
your boards back

715
00:42:33,940 --> 00:42:40,829
so I uploaded the designs to there as
well see can always order from him

716
00:42:40,829 --> 00:42:43,960
so we have about 15 more minutes

717
00:42:43,960 --> 00:42:46,970
in the presentation so what I do is I
guess what what

718
00:42:46,970 --> 00:42:50,200
will open up for questions and then I

719
00:42:50,200 --> 00:42:53,299
feel free if you wanna come up an
experiment we can use my machine

720
00:42:53,299 --> 00:42:56,589
I have two day Tiger leaders here I have
a bunch of different

721
00:42:56,589 --> 00:42:59,880
target board that a BlackBerry device in
another access point

722
00:42:59,880 --> 00:43:03,819
I have a logic analyzer a buncha stuff
is gonna come up an experiment

723
00:43:03,819 --> 00:43:08,240
a.m. kinda play around with with the
technology feel free

724
00:43:08,240 --> 00:43:11,770
I and then the yeah we'll just do that

725
00:43:11,770 --> 00:43:16,490
in till it or not so any any questions
before we can open it up for that

726
00:43:16,490 --> 00:43:20,619
for the hands-on

727
00:43:20,619 --> 00:43:22,250
yep okay well thanks for coming

