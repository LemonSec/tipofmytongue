1
00:00:00,070 --> 00:00:04,259
my name is Joe Grande I am a hardware
hacker in like to engineer

2
00:00:04,259 --> 00:00:07,310
basically design stuff and break stuff

3
00:00:07,310 --> 00:00:11,550
I'm today I mean it a given talk about
the J tell you later which is a tool

4
00:00:11,550 --> 00:00:14,759
that I've recently designed that will
help you identify

5
00:00:14,759 --> 00:00:18,520
a on-chip debug interfaces and useful
things on

6
00:00:18,520 --> 00:00:22,820
pieces love target hardware so I'll get
get right into it

7
00:00:22,820 --> 00:00:27,689
and explain everything as I go I went to
demos today

8
00:00:27,689 --> 00:00:31,099
and sorta interspersed the demos with
some the lecture

9
00:00:31,099 --> 00:00:34,149
and is a two-hour workshop we actually
have

10
00:00:34,149 --> 00:00:37,980
sometime at the end above the lecture to
actually get

11
00:00:37,980 --> 00:00:41,879
a people involved you guys can come up
here experiment I have a few

12
00:00:41,879 --> 00:00:45,620
different J tag editors I'm a few
different target devices that you guys

13
00:00:45,620 --> 00:00:46,090
can

14
00:00:46,090 --> 00:00:49,750
Inc plug into either with your laptop or
my laptop and just going to experiment

15
00:00:49,750 --> 00:00:50,660
with stuff so

16
00:00:50,660 --> 00:00:54,309
part of the session is meant to be an
open kind of hands-on experience seeking

17
00:00:54,309 --> 00:00:56,590
to play with new hardware and tinker
with things that

18
00:00:56,590 --> 00:01:00,000
you might not normally get to tinker
with up so that's why we we have the

19
00:01:00,000 --> 00:01:00,960
same extra time

20
00:01:00,960 --> 00:01:04,269
so the agenda we're gonna go through I'm
kinda introduction

21
00:01:04,269 --> 00:01:08,110
%uh look at some inspiration for the
project talk about

22
00:01:08,110 --> 00:01:11,890
identifying interfaces on a circuit
board so what our interface is well how

23
00:01:11,890 --> 00:01:12,560
can they be

24
00:01:12,560 --> 00:01:17,240
how can they beat located wire they've
been useful and then once we find those

25
00:01:17,240 --> 00:01:22,090
a talk about why manually locating these
interfaces a sort of hard-wired to

26
00:01:22,090 --> 00:01:23,570
allege a tiger there's actually

27
00:01:23,570 --> 00:01:27,700
a useful now go into the design
requirements and summer the actual

28
00:01:27,700 --> 00:01:30,119
hardware and firmware design details
above the unit

29
00:01:30,119 --> 00:01:34,040
I figured I you know a lot of tools that
are out there sort of these black boxes

30
00:01:34,040 --> 00:01:35,460
aid is getting you use

31
00:01:35,460 --> 00:01:39,369
but the J tabulate it was meant to be in
open source platform that you can

32
00:01:39,369 --> 00:01:42,869
build from scratch if you honor build
with the a get a

33
00:01:42,869 --> 00:01:46,530
a bear circuit board assembly yourself
and really does make it

34
00:01:46,530 --> 00:01:50,250
completely opening completely accessible
so I think you're going into the details

35
00:01:50,250 --> 00:01:52,840
of the actual design and why it works
the way it does

36
00:01:52,840 --> 00:01:56,240
but will this help you understand the
two on the better you understand a tool

37
00:01:56,240 --> 00:02:00,399
the better you can use the tool then
we're going to specifically

38
00:02:00,399 --> 00:02:04,380
but two different on-chip debug
interface is one of them BJ tag

39
00:02:04,380 --> 00:02:07,619
hence the name Jay tell you later that's
a industry standard

40
00:02:07,619 --> 00:02:10,679
debug interface RN talk about that first
and will also

41
00:02:10,679 --> 00:02:14,220
mom talk about you are interfaces for a
synchronous serial interfaces

42
00:02:14,220 --> 00:02:17,959
us those are the two types of interfaces
that the Jade I go to concurrently

43
00:02:17,959 --> 00:02:18,620
detect

44
00:02:18,620 --> 00:02:23,040
and then we'll up over time hopefully
add more functionality and kinda more

45
00:02:23,040 --> 00:02:23,580
features

46
00:02:23,580 --> 00:02:28,069
they're going to limitations future work
and then open up for that kinda hands-on

47
00:02:28,069 --> 00:02:28,580
workshop

48
00:02:28,580 --> 00:02:32,129
we will take a break at ten o'clock

49
00:02:32,129 --> 00:02:39,110
a for 15 minutes so on ship the bike
interfaces are certain a well-known

50
00:02:39,110 --> 00:02:41,269
attack vector in the in the hardware
space

51
00:02:41,269 --> 00:02:45,379
if your harbor act: usually what are the
first steps that you do when you're when

52
00:02:45,379 --> 00:02:48,450
you're attacking hardware as you get
access to the circuit board you say okay

53
00:02:48,450 --> 00:02:53,569
where where are their interfaces were
can i connect to on the board

54
00:02:53,569 --> 00:02:58,159
that might give me extra functionality
or might get serve as a stepping stone

55
00:02:58,159 --> 00:03:01,840
for me to do other things like extract
data or manipulate the system

56
00:03:01,840 --> 00:03:06,650
a there's plenty of examples above
recent hardware hacks people using these

57
00:03:06,650 --> 00:03:08,480
debug interface is so it's really

58
00:03:08,480 --> 00:03:12,180
it's sort of an Achilles heel and
vendors know that but vendors and

59
00:03:12,180 --> 00:03:13,500
engineers need

60
00:03:13,500 --> 00:03:17,700
these interfaces to develop the product
into actually work with their products

61
00:03:17,700 --> 00:03:18,019
so

62
00:03:18,019 --> 00:03:20,360
you know they don't really want to
remove them because gonna make their job

63
00:03:20,360 --> 00:03:21,190
way harder

64
00:03:21,190 --> 00:03:23,909
so we can take advantage of the fact
that anything that's there for engineers

65
00:03:23,909 --> 00:03:24,760
gonna be great

66
00:03:24,760 --> 00:03:31,060
from the attack point of view sometimes
the vendors try to do

67
00:03:31,060 --> 00:03:33,709
since they know that that that attackers
and hackers and go after these

68
00:03:33,709 --> 00:03:36,700
interfaces the China obfuscated in some
way maybe they say okay

69
00:03:36,700 --> 00:03:40,080
we need to have RJ Tiger face on there
but let's cut some traces

70
00:03:40,080 --> 00:03:43,440
during production once we're done
programming the device

71
00:03:43,440 --> 00:03:46,569
once we're done testing the board are
less remove some resistors from the

72
00:03:46,569 --> 00:03:47,040
board

73
00:03:47,040 --> 00:03:50,430
or maybe they try to implement up

74
00:03:50,430 --> 00:03:54,049
password protection which is sorta
there's no standard for

75
00:03:54,049 --> 00:03:57,510
for passive protection on on interfaces
Cesar all their own security

76
00:03:57,510 --> 00:04:01,310
usually as we know rolling on security
isn't good and maybe they'll be other

77
00:04:01,310 --> 00:04:02,489
ways that you can find

78
00:04:02,489 --> 00:04:09,489
a to defeat that Pastor protection the
one problem is that identifying on-chip

79
00:04:13,159 --> 00:04:14,890
debug interface is actually

80
00:04:14,890 --> 00:04:18,370
I can be time consuming it can just be
really annoying

81
00:04:18,370 --> 00:04:21,790
I and and potentially difficult
depending on the integration of the

82
00:04:21,790 --> 00:04:22,460
board

83
00:04:22,460 --> 00:04:25,840
%uh how much stuff is on the board how
how much access you can get to different

84
00:04:25,840 --> 00:04:27,110
features on the board

85
00:04:27,110 --> 00:04:30,690
%uh and and sometimes you might not have
the equipment you might not have the

86
00:04:30,690 --> 00:04:34,120
a desoldering equipment or the

87
00:04:34,120 --> 00:04:38,330
oscilloscope or a logic analyzer that
you might need to manually probing try

88
00:04:38,330 --> 00:04:39,860
to figure out what interfaces are

89
00:04:39,860 --> 00:04:43,790
so sort of requires a some somewhat of
an engineering

90
00:04:43,790 --> 00:04:48,270
skill set but to to figure out these
on-chip debug interface is so

91
00:04:48,270 --> 00:04:52,190
what I want to do is make that you know
a little bit easier and simplify the

92
00:04:52,190 --> 00:04:53,009
process

93
00:04:53,009 --> 00:04:56,870
did to detect these interfaces and to
bring more software focused

94
00:04:56,870 --> 00:05:00,380
non hardware people into hardware
hacking and I think this is one of the

95
00:05:00,380 --> 00:05:02,360
first steps is trying to get people

96
00:05:02,360 --> 00:05:05,690
know to use a tool that will give them
something

97
00:05:05,690 --> 00:05:12,060
in that thread tools all about the kind
I help them through the process

98
00:05:12,060 --> 00:05:15,410
so I did have some inspiration up for
the project but

99
00:05:15,410 --> 00:05:19,460
there are few things that it existed
already as far as proving the concept

100
00:05:19,460 --> 00:05:23,289
love can you enumerate through a bunch
of different

101
00:05:23,289 --> 00:05:27,000
unknown test points on a circuit board
and try different pin permutations to

102
00:05:27,000 --> 00:05:29,180
see if there's a debug interface their

103
00:05:29,180 --> 00:05:33,710
up but none of them were so they're all
kinda packed together in hand

104
00:05:33,710 --> 00:05:36,919
not not really suited for what I wanted
to do and I want to have a platform that

105
00:05:36,919 --> 00:05:38,350
it had to share with people

106
00:05:38,350 --> 00:05:41,430
a in at least have a little more control
over what it was doing

107
00:05:41,430 --> 00:05:46,660
but hunches Jaytech finder was the first
he gave us a presentation back in 2006

108
00:05:46,660 --> 00:05:49,930
about you know having a set up on known
test points on the board

109
00:05:49,930 --> 00:05:53,139
and having a platform I think it was a I

110
00:05:53,139 --> 00:05:56,850
Atmel base development border something
that he was using with with some set a

111
00:05:56,850 --> 00:05:57,889
Buy opens

112
00:05:57,889 --> 00:06:00,960
and he prove the concept he could
actually

113
00:06:00,960 --> 00:06:04,810
minute be late the pans and go through
so certain pre-mutation to detect an

114
00:06:04,810 --> 00:06:08,009
interface those are prove the concept
which is really cool

115
00:06:08,009 --> 00:06:11,050
%uh there are some other work J tagging
on RS 232 in um

116
00:06:11,050 --> 00:06:14,639
by guy named Ed hacker who gave a
presentation at

117
00:06:14,639 --> 00:06:18,520
Chaos Computer congress two years ago
maybe

118
00:06:18,520 --> 00:06:21,539
that sort of refined on hunches work

119
00:06:21,539 --> 00:06:25,729
but it was hardly know based on Arduino
is a sort of a microcontroller platform

120
00:06:25,729 --> 00:06:27,590
obvious microcontroller platform

121
00:06:27,590 --> 00:06:30,979
it had limited I hope and it didn't
really have the features I want it

122
00:06:30,979 --> 00:06:32,800
didn't have good input protection

123
00:06:32,800 --> 00:06:36,160
acted to protect the jet angulated also
to protect the targets are good for that

124
00:06:36,160 --> 00:06:37,009
you're connecting to

125
00:06:37,009 --> 00:06:39,240
since you don't really know what you're
looking up to you and have good

126
00:06:39,240 --> 00:06:40,229
protection there

127
00:06:40,229 --> 00:06:44,020
but it but it took another step further
so I got some inspiration and said okay

128
00:06:44,020 --> 00:06:45,960
cool I noted I know it's possible

129
00:06:45,960 --> 00:06:49,240
on let's try to let's try to make it a
little better

130
00:06:49,240 --> 00:06:52,940
if we can and then the darkest hour fast
track

131
00:06:52,940 --> 00:06:56,419
project on which is a program that was
funding

132
00:06:56,419 --> 00:07:00,750
hackers and small businesses in in the
United States to do kind of

133
00:07:00,750 --> 00:07:04,919
a novel research like new research it
without having to deal with all the

134
00:07:04,919 --> 00:07:06,289
bureaucracy of the government

135
00:07:06,289 --> 00:07:09,509
says it okay cool I'm gonna try to
propose developing the J tag you later

136
00:07:09,509 --> 00:07:10,500
for this project

137
00:07:10,500 --> 00:07:13,840
and get paid to do build stuff which
would be awesome

138
00:07:13,840 --> 00:07:18,370
so I wrote this whole proposal on did
also the research on how the system is

139
00:07:18,370 --> 00:07:19,289
gonna go together

140
00:07:19,289 --> 00:07:22,979
submitted to work it actually got
rejected

141
00:07:22,979 --> 00:07:27,349
said shucks but by that point at RT done
all that base research so now it's just

142
00:07:27,349 --> 00:07:30,430
a matter of designing the things I like
I forget I'm a dude anyway

143
00:07:30,430 --> 00:07:37,430
and that that I can you share with the
world

144
00:07:37,479 --> 00:07:40,509
so the first step that we need to do
regardless if we have

145
00:07:40,509 --> 00:07:43,979
J tag later or not is look for
interfaces on the board look for things

146
00:07:43,979 --> 00:07:45,789
we can actually tap onto

147
00:07:45,789 --> 00:07:49,490
but solder wires on to connect up the
connectors

148
00:07:49,490 --> 00:07:53,590
and see if there's something useful for
us sometimes they will be sometimes they

149
00:07:53,590 --> 00:07:56,330
won't be and that's part of the are
tracking process up and going through

150
00:07:56,330 --> 00:07:56,870
and

151
00:07:56,870 --> 00:08:00,930
and narrowing down the important
information

152
00:08:00,930 --> 00:08:03,400
so personal look at it external
interfaces these are things that you

153
00:08:03,400 --> 00:08:06,740
don't necessarily have to even get
access to the circuitry for

154
00:08:06,740 --> 00:08:10,550
which can be really handy a lot of times
maybe may be on the first unit that your

155
00:08:10,550 --> 00:08:12,430
hacking with you have to open up and see
where that

156
00:08:12,430 --> 00:08:15,699
pins are and see how they come out but
eventually you know if you can do an

157
00:08:15,699 --> 00:08:18,490
attack without having to physically open
up the product

158
00:08:18,490 --> 00:08:21,840
that just makes it that much cooler up
to extend their faces are things that

159
00:08:21,840 --> 00:08:25,610
would be accessible to the outside world
without having to go directly onto

160
00:08:25,610 --> 00:08:28,930
the circuitry those are normally things
that maybe our

161
00:08:28,930 --> 00:08:32,000
are hidden underneath the battery cover
underneath the sticker because they're

162
00:08:32,000 --> 00:08:35,120
not intended for the end user their
intended for the manufacture during the

163
00:08:35,120 --> 00:08:36,620
manufacturing process

164
00:08:36,620 --> 00:08:40,620
maybe clip onto applied onto once the
device is built and assembled to do

165
00:08:40,620 --> 00:08:42,570
final programming our final testing

166
00:08:42,570 --> 00:08:45,820
and then maybe they just covered up in
hopes that the user never sees it

167
00:08:45,820 --> 00:08:48,890
so we can find that maybe that's
something we could take advantage of

168
00:08:48,890 --> 00:08:52,540
and usually it you know might be like a
set of said it s points in a row or

169
00:08:52,540 --> 00:08:53,660
maybe it's some

170
00:08:53,660 --> 00:08:57,130
proprietary connector it all depends on
the product

171
00:08:57,130 --> 00:09:01,970
doesn't examples here here's like 14
pins on the back up a Garmin GPS unit

172
00:09:01,970 --> 00:09:05,880
covered by a little rubber a cover

173
00:09:05,880 --> 00:09:09,610
here five test points in the back when R
is a security token

174
00:09:09,610 --> 00:09:12,660
so it's like 00 interesting there's a
sticker over that little black sticker

175
00:09:12,660 --> 00:09:13,930
see take that off its okay

176
00:09:13,930 --> 00:09:17,149
is that an interface that I can users at
a read-only interface or write only

177
00:09:17,149 --> 00:09:18,950
interface who knows

178
00:09:18,950 --> 00:09:22,279
this one hears from a job on up
wristband like the wearable wristband

179
00:09:22,279 --> 00:09:23,220
device

180
00:09:23,220 --> 00:09:26,970
that there's a little button at the end
that you can select modes

181
00:09:26,970 --> 00:09:31,050
and that device is pretty cool it so
it's not like I've a molded rubber

182
00:09:31,050 --> 00:09:35,980
wristband on for you if you take this
cap of years the button

183
00:09:35,980 --> 00:09:39,680
there's actually four other connections
on their

184
00:09:39,680 --> 00:09:43,959
see okay that's probably the programming
interface to program the microcontroller

185
00:09:43,959 --> 00:09:45,390
during the production process

186
00:09:45,390 --> 00:09:48,589
because you think about the complexity
of this wristband

187
00:09:48,589 --> 00:09:51,959
it's this its there's like a rubber kind
of

188
00:09:51,959 --> 00:09:56,120
sheath around it see can't program it
once it's all put together its on

189
00:09:56,120 --> 00:09:57,029
nice-looking

190
00:09:57,029 --> 00:10:00,230
there's an there's no way to program it
so the only way to do it and usually

191
00:10:00,230 --> 00:10:01,540
don't wanna program

192
00:10:01,540 --> 00:10:04,690
the devices in in a system that
manufacturing in till as late

193
00:10:04,690 --> 00:10:07,880
in the manufacturing process as you can
in case there's changes in case you have

194
00:10:07,880 --> 00:10:09,470
to do for more updates are at the end

195
00:10:09,470 --> 00:10:13,320
so this is sort of I'm you know the way
they can manufacture the product and the

196
00:10:13,320 --> 00:10:14,570
final programming

197
00:10:14,570 --> 00:10:18,329
but for us if we can if we detect that a
week and then figure out what kind of

198
00:10:18,329 --> 00:10:19,500
interface it is

199
00:10:19,500 --> 00:10:25,149
you know that we have built a convention
that

200
00:10:25,149 --> 00:10:29,410
the moving to internal interface is the
third usually

201
00:10:29,410 --> 00:10:32,450
I guess maybe there's same level as you
say their day usually easier to find but

202
00:10:32,450 --> 00:10:33,589
it sorta depends

203
00:10:33,589 --> 00:10:36,260
I'm internal interfaces are gonna be
things that are on the actual circuit

204
00:10:36,260 --> 00:10:38,410
board itself that requires you to open
up

205
00:10:38,410 --> 00:10:41,410
the housing to get it and that's not
normally a big deal

206
00:10:41,410 --> 00:10:44,800
I have a bunch of access points up here
that are pretty easy to to get access to

207
00:10:44,800 --> 00:10:45,529
you either you know

208
00:10:45,529 --> 00:10:50,649
unscrew the case retracted the unit
apart or whatever

209
00:10:50,649 --> 00:10:54,540
but the finer faces we'd normally look
for a few different kinda key features

210
00:10:54,540 --> 00:10:58,230
one of them would be test points
unpopulated pads and test points

211
00:10:58,230 --> 00:11:02,880
are copper pads all over the circuit
boards

212
00:11:02,880 --> 00:11:06,339
that are put on and signals that I'm

213
00:11:06,339 --> 00:11:09,550
interesting signal that the engineer
might need or that manufacture might

214
00:11:09,550 --> 00:11:10,040
need

215
00:11:10,040 --> 00:11:13,240
so you're not going to see test points
on signals that are unimportant

216
00:11:13,240 --> 00:11:16,360
usually would see test point some things
that are like programming

217
00:11:16,360 --> 00:11:20,260
interfaces maybe debug interface is
maybe on

218
00:11:20,260 --> 00:11:24,350
you know different voltages from from
regulators or something they need to

219
00:11:24,350 --> 00:11:25,120
check

220
00:11:25,120 --> 00:11:28,470
during manufacturing so we can look at a
board and you know identify test points

221
00:11:28,470 --> 00:11:30,370
pretty easily

222
00:11:30,370 --> 00:11:34,140
to see okay those are probably good
targets a look at

223
00:11:34,140 --> 00:11:38,320
but even better safer this example
there's been a lot small test points but

224
00:11:38,320 --> 00:11:40,760
then there's like the sport obvious ones
right in the middle

225
00:11:40,760 --> 00:11:43,899
big day fat test points are in the
middle of the board

226
00:11:43,899 --> 00:11:48,230
so I would say okay those are probably
more interesting than the smaller ones

227
00:11:48,230 --> 00:11:50,339
I'm gonna look at the big ones first

228
00:11:50,339 --> 00:11:53,700
same thing on this site here is the
BlackBerry device as much a small test

229
00:11:53,700 --> 00:11:54,720
points

230
00:11:54,720 --> 00:11:58,529
all over the place but then there's this
big clumping up six plus that one

231
00:11:58,529 --> 00:12:03,560
on right in that group so naturally I
say okay those are bigger so bigger must

232
00:12:03,560 --> 00:12:05,370
be better I'm gonna go for those first

233
00:12:05,370 --> 00:12:09,170
and that's just kinda the process you
can also take advantage of 63 markings

234
00:12:09,170 --> 00:12:12,430
6 silkscreen being printed information
on the board

235
00:12:12,430 --> 00:12:15,620
so if we look on this one this is from a
cordless phone

236
00:12:15,620 --> 00:12:20,250
the background i2c clock i2c data

237
00:12:20,250 --> 00:12:23,490
now I know right away the engineer put
those markings there to help them in to

238
00:12:23,490 --> 00:12:24,610
help to manufacture

239
00:12:24,610 --> 00:12:28,360
now I know that that's an i2c interface
is an internship communication interface

240
00:12:28,360 --> 00:12:32,420
now I can go and and put down with my so
let's go for my logic analyzer actually

241
00:12:32,420 --> 00:12:35,600
start sniffing information that's being
transmitted across that bus

242
00:12:35,600 --> 00:12:40,389
sometimes it's really easy and actually
give you you know that good information

243
00:12:40,389 --> 00:12:44,610
other times too if the test by turning
easy access easy to access location

244
00:12:44,610 --> 00:12:47,790
that also sorta gives it away a lot of
times will see the connectors on the

245
00:12:47,790 --> 00:12:49,510
Anza boards

246
00:12:49,510 --> 00:12:52,589
so I i just dont I'm not gonna switch
the camera for this but

247
00:12:52,589 --> 00:12:56,459
you can come up and look I but so for
example like the J Tiger face on this

248
00:12:56,459 --> 00:13:00,079
access point is right in the upper right
corner so it's kinda away from

249
00:13:00,079 --> 00:13:04,010
I all the other stuff to make it easy to
access

250
00:13:04,010 --> 00:13:07,730
same with like this BlackBerry device
there along the bottom behind where that

251
00:13:07,730 --> 00:13:12,440
where the SIM card was so it sorta bad
either way but easy to access

252
00:13:12,440 --> 00:13:15,459
the normally we would look you look
around the edges first and sort of move

253
00:13:15,459 --> 00:13:19,800
in from there

254
00:13:19,800 --> 00:13:24,910
other times the the pinout is based on
like a common format or maybe an

255
00:13:24,910 --> 00:13:26,430
industry standard format

256
00:13:26,430 --> 00:13:29,720
so it's not just a bunch of random test
flights are like it unknown

257
00:13:29,720 --> 00:13:33,829
um grouping but it's something that's
actually can go online and verify

258
00:13:33,829 --> 00:13:37,060
pinouts

259
00:13:37,060 --> 00:13:40,500
to sometimes it be like a single row
been out sometimes double row

260
00:13:40,500 --> 00:13:43,600
the most the most commonly used to be
like a Jay tag interface which again

261
00:13:43,600 --> 00:13:45,269
will talk about more later

262
00:13:45,269 --> 00:13:48,440
but where you can go to this website J
Tate si.com

263
00:13:48,440 --> 00:13:51,930
and and look at different common pinouts
for different architectures

264
00:13:51,930 --> 00:13:55,639
it doesn't mean that the engineers are
going to use those pinouts

265
00:13:55,639 --> 00:13:58,519
but it makes their job easier right
because if they just use a standard

266
00:13:58,519 --> 00:13:59,139
pinout

267
00:13:59,139 --> 00:14:01,579
than their standard development tools
are gonna work on it right away don't

268
00:14:01,579 --> 00:14:04,000
have to create some interface module to
make it harder

269
00:14:04,000 --> 00:14:08,070
a lot of times we'll see just a standard
interface we can just plug into with Jay

270
00:14:08,070 --> 00:14:08,649
tag

271
00:14:08,649 --> 00:14:12,320
hardware not not even meeting Jade
Jagger later at all

272
00:14:12,320 --> 00:14:15,459
because we already know the pinout
plugin and and go to town

273
00:14:15,459 --> 00:14:19,790
so this example overhears from Barnaby
Jack ATM hack from black cat

274
00:14:19,790 --> 00:14:24,480
2010 and %uh part of part of his
researchers figure out how that

275
00:14:24,480 --> 00:14:28,560
you know how to get access to the ATM is
a Windows CE based platform

276
00:14:28,560 --> 00:14:33,070
and you open up the the unit inside
there's actually a connector right there

277
00:14:33,070 --> 00:14:36,510
Jaytech connector standard industry
standard pinout

278
00:14:36,510 --> 00:14:40,290
so all he had to do is buy an
off-the-shelf J tagged

279
00:14:40,290 --> 00:14:43,380
adapter that supported that Architektur
plugin

280
00:14:43,380 --> 00:14:46,560
and and continue on with his attacks
though he didn't know how have to do any

281
00:14:46,560 --> 00:14:49,600
searching to find the interface is right
there and very obvious

282
00:14:49,600 --> 00:14:52,880
same thing on this side is from the
Xboxes a low pin count debug

283
00:14:52,880 --> 00:14:56,290
a conectar el PC in this one we sleep in
one

284
00:14:56,290 --> 00:15:00,279
which has the arrow it's also up in ones
usually denoted by a square pad as

285
00:15:00,279 --> 00:15:01,199
opposed to assert

286
00:15:01,199 --> 00:15:05,540
circular pad so we can look on the
boards okay you know that's unpopulated

287
00:15:05,540 --> 00:15:08,600
we would still have to suck the solder
out of these holes and put a connector

288
00:15:08,600 --> 00:15:09,839
and

289
00:15:09,839 --> 00:15:12,529
but we have to do a lot of work to
figure out you know what it is in the

290
00:15:12,529 --> 00:15:15,649
LBC debug is another one that sort of a
standard pinout

291
00:15:15,649 --> 00:15:19,490
sometimes you get lucky sometimes it's
easy

292
00:15:19,490 --> 00:15:22,709
you can also use on kinda PCB layout US
tix

293
00:15:22,709 --> 00:15:27,170
to get an idea of maybe which connector
is might be

294
00:15:27,170 --> 00:15:30,410
interesting ones are might contain some
sorta bus so

295
00:15:30,410 --> 00:15:34,050
be taken Evangel a fact that similar
traces are grouped together

296
00:15:34,050 --> 00:15:37,170
so if we look at a board like this you
know there's other little traces and

297
00:15:37,170 --> 00:15:39,209
stuff and some other pads around there

298
00:15:39,209 --> 00:15:43,130
but we see this big grouping up traces
coming up

299
00:15:43,130 --> 00:15:46,509
to this connector at the corner the
right away you can say okay the fact

300
00:15:46,509 --> 00:15:49,360
that all these trace their going up
together probably means

301
00:15:49,360 --> 00:15:53,070
it's some sort of similar interface name
it's a bus have some sort or maybe it's

302
00:15:53,070 --> 00:15:55,170
something else all those traces going
together

303
00:15:55,170 --> 00:15:58,180
I miss something that's a clue but
that's no probably where we want to

304
00:15:58,180 --> 00:15:58,820
attack some

305
00:15:58,820 --> 00:16:02,120
some points at the J tell you later

306
00:16:02,120 --> 00:16:06,480
on the other side I'm here's a picture
of another access point I was looking at

307
00:16:06,480 --> 00:16:10,459
this connector was in here I put that on
later absurd is a match in that there's

308
00:16:10,459 --> 00:16:12,519
no just unpopulated footprint there

309
00:16:12,519 --> 00:16:15,639
but there's these resistors connected to
some other pens

310
00:16:15,639 --> 00:16:19,670
so sometimes you can actually look at
aboard and say okay there's a buncha

311
00:16:19,670 --> 00:16:23,470
resistors Nexus unpopular the connector
a buncha resistors neck to this group a

312
00:16:23,470 --> 00:16:24,570
test points

313
00:16:24,570 --> 00:16:27,920
that might be an interface because
resistors either pull-up or pull-down

314
00:16:27,920 --> 00:16:30,550
resistors are used to set the static
state

315
00:16:30,550 --> 00:16:34,380
above a up a system or other bus

316
00:16:34,380 --> 00:16:38,880
so the unused know kinda idle state so
when I saw that I saw you know there's a

317
00:16:38,880 --> 00:16:41,470
few other connectors on the board but I
saw this one with three this is right

318
00:16:41,470 --> 00:16:43,130
there just seem very obvious to me

319
00:16:43,130 --> 00:16:47,070
and that ended up being the J tag
interface I didn't know which pins

320
00:16:47,070 --> 00:16:50,810
but that's legit I get a human rights
like Italy's identify it and then go to

321
00:16:50,810 --> 00:16:54,420
the next step

322
00:16:54,420 --> 00:16:58,259
other boards try to be a little more
sneaky covering the interface with

323
00:16:58,259 --> 00:16:59,769
solder mask

324
00:16:59,769 --> 00:17:03,110
and solder mask is a coating that goes
on top the board to protect

325
00:17:03,110 --> 00:17:06,699
any copper areas that don't need to be
exposed

326
00:17:06,699 --> 00:17:10,010
but to the to the outside world like for
you know that don't need to have

327
00:17:10,010 --> 00:17:11,439
component soldered onto them

328
00:17:11,439 --> 00:17:15,610
so here's a connector two different two
different connectors actually

329
00:17:15,610 --> 00:17:19,630
with the the solder mask on top so the
only way you can get access to the

330
00:17:19,630 --> 00:17:23,870
to the actual copper and make contact
it's a scrape off

331
00:17:23,870 --> 00:17:27,360
the solder mask so it seems like maybe
during

332
00:17:27,360 --> 00:17:31,360
manufacturing now are maybe during I
development

333
00:17:31,360 --> 00:17:35,110
that area was exposed so developers
could have you know some connector

334
00:17:35,110 --> 00:17:38,820
plugged in or something like that and
then they just changes on a mask

335
00:17:38,820 --> 00:17:42,539
a plot when they were manufactured their
boards just covering

336
00:17:42,539 --> 00:17:45,950
cover that over as a very kinda low
low-cost easy thing to do changing the

337
00:17:45,950 --> 00:17:47,590
mask is not a big problem during many

338
00:17:47,590 --> 00:17:51,929
manufacturing and then PCB fabrication
so maybe they did that to cover it up

339
00:17:51,929 --> 00:17:55,240
knowing that you know and users

340
00:17:55,240 --> 00:17:59,350
aren't supposed to touch those things
same day on this side is from a peak

341
00:17:59,350 --> 00:18:02,720
a two-way a email device

342
00:18:02,720 --> 00:18:06,960
that was on the market for few years
this is what you take apart

343
00:18:06,960 --> 00:18:11,390
housing there's these tiny tiny little
test points

344
00:18:11,390 --> 00:18:16,190
all covered in solder mask so you have
to very carefully scrape those of

345
00:18:16,190 --> 00:18:19,559
solder wires down to it or maybe you
could create little test fixture and

346
00:18:19,559 --> 00:18:21,140
have some pogo pin spring-loaded

347
00:18:21,140 --> 00:18:24,530
in a decade touchdown I love those test
points

348
00:18:24,530 --> 00:18:30,330
which is probably what the developers
had I and then figure out what they are

349
00:18:30,330 --> 00:18:33,630
so that gets that damn that is a little
bit harder right because if they put

350
00:18:33,630 --> 00:18:34,720
solder mask over it

351
00:18:34,720 --> 00:18:37,929
what if what if instead of instead of
having this very obvious connector

352
00:18:37,929 --> 00:18:41,110
looking thing if they were just smaller
points that maybe look like beers which

353
00:18:41,110 --> 00:18:42,660
are connections they go through the
board

354
00:18:42,660 --> 00:18:45,990
it might be really hard at to figure out
what's

355
00:18:45,990 --> 00:18:49,630
a legitimate test point for an interface
purses what's just a normal

356
00:18:49,630 --> 00:18:52,669
you know connection on the board that we
don't care about so gets a little bit

357
00:18:52,669 --> 00:18:54,120
harder and you might have to then do

358
00:18:54,120 --> 00:18:59,000
additional reverse engineer try to try
to narrow down your search

359
00:18:59,000 --> 00:19:02,410
another thing that some vendors try to
do is instead of using connectors at all

360
00:19:02,410 --> 00:19:05,900
or test points at all are using existing
rearm

361
00:19:05,900 --> 00:19:08,900
part packages so this case there's four
resistor

362
00:19:08,900 --> 00:19:14,520
footprints but these are the actual J
tag connections

363
00:19:14,520 --> 00:19:17,990
so its security through obscurity right
on the board when you look at it you

364
00:19:17,990 --> 00:19:18,980
don't know which

365
00:19:18,980 --> 00:19:22,770
which components are there are which
components are missing intentionally or

366
00:19:22,770 --> 00:19:25,190
which ones are there to obfuscate
interface you just don't know

367
00:19:25,190 --> 00:19:29,169
but once you find out that these are the
interfaces

368
00:19:29,169 --> 00:19:32,130
those the interface pins that's not
gonna change for any revision of the

369
00:19:32,130 --> 00:19:32,700
board

370
00:19:32,700 --> 00:19:35,490
so it's totally just security through
obscurity that way only takes one person

371
00:19:35,490 --> 00:19:36,410
to find that

372
00:19:36,410 --> 00:19:39,870
the fine and then release it on the
website for everybody but it does make

373
00:19:39,870 --> 00:19:42,190
it way harder

374
00:19:42,190 --> 00:19:47,280
and that's where the jet I get it comes
in

375
00:19:47,280 --> 00:19:51,410
so once you do find the interface the
kinda traditional way to do things

376
00:19:51,410 --> 00:19:52,240
manually

377
00:19:52,240 --> 00:19:56,169
determining pinouts is you first look at
the board you find your connectors like

378
00:19:56,169 --> 00:19:57,740
we talked about

379
00:19:57,740 --> 00:20:00,919
then you try to trace out where they go
I usually there be like I mean

380
00:20:00,919 --> 00:20:03,980
microcontroller on the board somewhere
that's very obviously marked arts

381
00:20:03,980 --> 00:20:05,740
towards the center the board

382
00:20:05,740 --> 00:20:09,240
and usually the connector you want to
see if it goes back to that party could

383
00:20:09,240 --> 00:20:10,409
visually tracings

384
00:20:10,409 --> 00:20:14,309
use a continuity tester a multimeter Inc
on new demoted

385
00:20:14,309 --> 00:20:17,480
check connections and see if you can get
it

386
00:20:17,480 --> 00:20:20,480
no trace them back to the part

387
00:20:20,480 --> 00:20:24,460
and then use the data sheet to correlate
those pin-ups sometimes they can't get

388
00:20:24,460 --> 00:20:26,770
access to the park if it's a ball grid
array device

389
00:20:26,770 --> 00:20:31,000
which have solder balls underneath the
part as opposed to pins that come out

390
00:20:31,000 --> 00:20:34,610
so it's a lot harder to to probe what's
going on as lot harder to see what's

391
00:20:34,610 --> 00:20:35,620
going on

392
00:20:35,620 --> 00:20:38,690
then maybe you need to use x-ray which
is common with

393
00:20:38,690 --> 00:20:42,360
with contract manufacturers you can go
and stupid device an x-ray machine and

394
00:20:42,360 --> 00:20:44,820
see where traces come out see where they
get broken out

395
00:20:44,820 --> 00:20:49,440
and see if you can follow those to the
connectors I

396
00:20:49,440 --> 00:20:52,630
maybe have to remove the part from the
board remove the BJ parts you can

397
00:20:52,630 --> 00:20:54,059
actually see where things are going

398
00:20:54,059 --> 00:20:56,970
there's lots of ways to do it but that's
where things get difficult if you don't

399
00:20:56,970 --> 00:21:00,409
have the experience you don't have the
tools

400
00:21:00,409 --> 00:21:03,220
and then you can also you know probe the
connections use an oscilloscope monitor

401
00:21:03,220 --> 00:21:04,470
what's going on

402
00:21:04,470 --> 00:21:07,909
trial and error of pulling pins high and
low and seeing if that kicks of some

403
00:21:07,909 --> 00:21:09,390
sort of process with the other pens

404
00:21:09,390 --> 00:21:13,360
is a very a very long process in that's
you know that that would that's the

405
00:21:13,360 --> 00:21:14,970
whole goal the day Tiger leaders to

406
00:21:14,970 --> 00:21:21,280
simplify the process a little bit

407
00:21:21,280 --> 00:21:24,710
so the design requirements um for this
tool

408
00:21:24,710 --> 00:21:27,880
as I talked about open source has to be
open source has to be hackable in this

409
00:21:27,880 --> 00:21:29,669
community that's just you know

410
00:21:29,669 --> 00:21:33,110
that's how we make better products as
have things open have people be able to

411
00:21:33,110 --> 00:21:36,720
look at the design and comment on and
look at the firmware comment on it

412
00:21:36,720 --> 00:21:40,340
I am I'm proud to say I learned how to
use get hub

413
00:21:40,340 --> 00:21:44,150
but upload my firmware so it took me a
while

414
00:21:44,150 --> 00:21:48,110
being a hardware guy is a a learning
curve to figure out get her but I did

415
00:21:48,110 --> 00:21:51,210
and now you know that way everything can
be shared sorta it's a it's a really

416
00:21:51,210 --> 00:21:52,230
cool thing

417
00:21:52,230 --> 00:21:55,450
I a lot of the products that design
especially the hobbyist

418
00:21:55,450 --> 00:21:58,700
types the modules I like to have very
simple command based interfaces

419
00:21:58,700 --> 00:22:03,140
to cook up Anderson commands you know to
see a list of commands it just kinda

420
00:22:03,140 --> 00:22:06,679
inner interact with the device in a very
easy way so I have a simple interface

421
00:22:06,679 --> 00:22:08,559
which we do

422
00:22:08,559 --> 00:22:12,409
proper input protection now talk about
somebody's features in detail but in for

423
00:22:12,409 --> 00:22:13,659
protection to protect

424
00:22:13,659 --> 00:22:17,150
are board from getting damaged from

425
00:22:17,150 --> 00:22:20,549
from voltage levels and from from things
that we do that we're not sure about on

426
00:22:20,549 --> 00:22:23,070
the target workers were connecting up to
punch a different test points on the

427
00:22:23,070 --> 00:22:24,039
board

428
00:22:24,039 --> 00:22:27,720
and they can be a you know negative
voltages they could be higher voltages

429
00:22:27,720 --> 00:22:31,299
to drive an LCD year to drive a motor or
something like it forges arbitrarily

430
00:22:31,299 --> 00:22:32,549
hooking up the test points

431
00:22:32,549 --> 00:22:35,940
which sometimes we do we need to make
sure that we're protected that the J

432
00:22:35,940 --> 00:22:37,250
Taylor is protected

433
00:22:37,250 --> 00:22:40,500
that your machine is protected so if you
look up to something

434
00:22:40,500 --> 00:22:44,080
potentially bad or potentially damaging
is not gonna actually damage to

435
00:22:44,080 --> 00:22:47,970
adjustable target voltage lots of
different systems

436
00:22:47,970 --> 00:22:51,210
have different system voltage levels I

437
00:22:51,210 --> 00:22:56,870
so things like the say the desk on bad
that I have here they'll show demo of

438
00:22:56,870 --> 00:23:00,799
that runs on a CR 2032 with revolt
lithium coin cell

439
00:23:00,799 --> 00:23:04,740
so that's a three vote system mobile
phones maybe our

440
00:23:04,740 --> 00:23:09,169
2.6 volts or 1.8 volts made to get even
lower now

441
00:23:09,169 --> 00:23:14,110
I'm so we wanna have some sort of way to
properly communicate probably properly

442
00:23:14,110 --> 00:23:17,150
have the levels that were sending from
the J tell you later

443
00:23:17,150 --> 00:23:20,850
meet the specifications of the target
port because the jet angular system is a

444
00:23:20,850 --> 00:23:22,620
3.3 volt system

445
00:23:22,620 --> 00:23:25,750
that's what the propeller processor runs
on and that's that's what we're using so

446
00:23:25,750 --> 00:23:28,590
we need a way to come to convert that
make sure that we don't damage any

447
00:23:28,590 --> 00:23:29,580
signals going out any

448
00:23:29,580 --> 00:23:33,870
signals coming back at off-the-shelf
components party being hackable

449
00:23:33,870 --> 00:23:37,210
right being able to just get components
from did you hear from what

450
00:23:37,210 --> 00:23:41,720
market or whatever I'm so just where
using very common parts

451
00:23:41,720 --> 00:23:45,559
and then you could hand soldering it's a
two-sided board the current lots are

452
00:23:45,559 --> 00:23:46,700
available online you could

453
00:23:46,700 --> 00:23:50,470
you know fabricator on board somewhere
you can talk to the park someone ummmm

454
00:23:50,470 --> 00:23:51,110
I'll

455
00:23:51,110 --> 00:23:54,190
most in them our service now up

456
00:23:54,190 --> 00:23:57,620
and some of them are pretty fine pitch
but you can do it it's great practice

457
00:23:57,620 --> 00:23:58,510
actually if you wanted

458
00:23:58,510 --> 00:24:02,279
you know if you don't have a a good
project a really learned service not

459
00:24:02,279 --> 00:24:03,890
soldering this to be the one

460
00:24:03,890 --> 00:24:07,140
I built for them by hand I'm never gonna
do it again but

461
00:24:07,140 --> 00:24:11,330
so the practice

462
00:24:11,330 --> 00:24:14,620
I saw going to some details on the
hardware

463
00:24:14,620 --> 00:24:17,770
is just kinda general block diagram and
I'll go through I'm

464
00:24:17,770 --> 00:24:21,760
summer the some the details but we have
a as the core

465
00:24:21,760 --> 00:24:25,370
a propeller parallax propeller processor
which is a really neat and 8-core

466
00:24:25,370 --> 00:24:28,169
processor is a lot for obvious
applications in industrial applications

467
00:24:28,169 --> 00:24:29,080
and

468
00:24:29,080 --> 00:24:33,870
sort of low-volume I very interesting
complex systems

469
00:24:33,870 --> 00:24:38,179
that was a fun one to kinda hackworth in
Para lacks is a a manufacturer of

470
00:24:38,179 --> 00:24:40,120
electronics designer Electronics mostly

471
00:24:40,120 --> 00:24:44,059
hobbyist educational they do a buncha
stuff and and they

472
00:24:44,059 --> 00:24:48,360
they sell a bunch of other products as I
know this is a cool kinda hackable part

473
00:24:48,360 --> 00:24:52,190
let's use it we have USB coming in a
mini USB

474
00:24:52,190 --> 00:24:56,029
up coming in that's going to provide
power to the J tag you later

475
00:24:56,029 --> 00:24:59,710
also serve as the programming interface
to program

476
00:24:59,710 --> 00:25:03,140
the propeller processor so when we do
for more updates and also to serve is

477
00:25:03,140 --> 00:25:06,710
that the actual user interface to us
three terminal program so showbiz a

478
00:25:06,710 --> 00:25:10,789
a virtual serial port EE prom for for
more storage

479
00:25:10,789 --> 00:25:14,080
our level translators which are for the
adjustable target voltage in for

480
00:25:14,080 --> 00:25:15,429
protection circuitry

481
00:25:15,429 --> 00:25:19,090
and on the on the other side we have a
digital analog converter

482
00:25:19,090 --> 00:25:22,620
that we're generating are just about
target voltage from one point to 3.3

483
00:25:22,620 --> 00:25:24,029
boats are going to detail that

484
00:25:24,029 --> 00:25:27,260
but it's been pretty much like that kind
of a basic system

485
00:25:27,260 --> 00:25:30,320
if you look at it is really the that you
know that the CPU

486
00:25:30,320 --> 00:25:34,179
with a bunch of protection on 24
channels

487
00:25:34,179 --> 00:25:37,330
so it's a very kind a generic for that
you can use for all sorts of other stuff

488
00:25:37,330 --> 00:25:38,130
as well

489
00:25:38,130 --> 00:25:42,049
is why I love it two years the board

490
00:25:42,049 --> 00:25:47,059
very pink I figured you know with the
name ID tag you later

491
00:25:47,059 --> 00:25:50,299
gotta have like you know very pink
border kinda offsets the heavy metal

492
00:25:50,299 --> 00:25:50,970
missive the

493
00:25:50,970 --> 00:25:55,080
J tag you later name and I think you're
a pink circuit board

494
00:25:55,080 --> 00:25:58,409
is gonna be a lot harder to lose on your
desk right at the Evergreen Borgata

495
00:25:58,409 --> 00:26:00,020
blends in with everything else

496
00:26:00,020 --> 00:26:03,940
but people stand out the low is built up
on your tool I'm here looks like

497
00:26:03,940 --> 00:26:07,690
we started the side USB coming in at
status indicator up at the top will be

498
00:26:07,690 --> 00:26:09,150
red or green depending on

499
00:26:09,150 --> 00:26:13,299
you know what's going on in the system
are %ah pants are bitches down here

500
00:26:13,299 --> 00:26:16,350
level translators and protection and
hear the probes

501
00:26:16,350 --> 00:26:19,409
are the the interface connections
there's two different ways that you can

502
00:26:19,409 --> 00:26:20,840
connect to it one is gonna be

503
00:26:20,840 --> 00:26:24,690
through the screw terminal blocks at the
top so if you have flying leads are

504
00:26:24,690 --> 00:26:26,740
wires coming in you can just screw down

505
00:26:26,740 --> 00:26:29,929
to the terms on the top the bottom

506
00:26:29,929 --> 00:26:33,270
RT by five row headers that are
compatible with the bus pirate probes

507
00:26:33,270 --> 00:26:37,110
and when I switch the camera show you
I'm closer what they look like was

508
00:26:37,110 --> 00:26:38,809
basically just an off the shelf

509
00:26:38,809 --> 00:26:42,039
a set up roads that have a little
connector on it

510
00:26:42,039 --> 00:26:45,750
with a bunch of test leads on the other
side in the bus pirate is

511
00:26:45,750 --> 00:26:50,400
a I and a hobbyist hacker tool to let
you interface with serial devices and

512
00:26:50,400 --> 00:26:52,090
manipulate serial devices

513
00:26:52,090 --> 00:26:55,100
but and that's another open source tool
but

514
00:26:55,100 --> 00:26:58,700
because that's been around for so long
there's

515
00:26:58,700 --> 00:27:02,270
these cables that are available
everywhere for like five or six bucks

516
00:27:02,270 --> 00:27:05,090
so I figured okay let's use these
because then you can just click down

517
00:27:05,090 --> 00:27:07,850
help like this on to your jacket and you
have a bunch a test clips you can clip

518
00:27:07,850 --> 00:27:09,000
onto a target port

519
00:27:09,000 --> 00:27:12,929
which is kinda cool having two
interfaces as well is useful

520
00:27:12,929 --> 00:27:17,289
I if you want to hook up like a logic
analyzer organised sniff what's going on

521
00:27:17,289 --> 00:27:18,230
at the same time

522
00:27:18,230 --> 00:27:21,659
because then you can connect your
interfere your target on one of them and

523
00:27:21,659 --> 00:27:22,309
then

524
00:27:22,309 --> 00:27:29,309
connect up to the other ones to sniff
seizes Kennedy

525
00:27:29,320 --> 00:27:32,909
something and did some details of the
the actual hardware subsystems

526
00:27:32,909 --> 00:27:36,600
on the propellers I mentioned as an
8-core architecture

527
00:27:36,600 --> 00:27:41,260
very very neat not completely designed
from the ground up so I'm

528
00:27:41,260 --> 00:27:45,320
chip gracie is a guy that started
parallax and he's he's a a hacker in the

529
00:27:45,320 --> 00:27:46,770
true sense of the word

530
00:27:46,770 --> 00:27:50,510
and he was a retired UHV having to deal
with these proprietary chips in

531
00:27:50,510 --> 00:27:54,010
deal with semiconductor manufacturers
that don't give out all the information

532
00:27:54,010 --> 00:27:58,029
sees a cover design my own ship from the
ground up so he you know built his own

533
00:27:58,029 --> 00:27:59,929
registers and CPU and

534
00:27:59,929 --> 00:28:03,580
everything and it ultimately after six
or seven years turned into the

535
00:28:03,580 --> 00:28:05,299
propellers that is a really neat chip

536
00:28:05,299 --> 00:28:08,510
there's lots of information about it
lots a very smart people on the

537
00:28:08,510 --> 00:28:10,840
discussion forum sharing information

538
00:28:10,840 --> 00:28:14,070
there's a a site I'm on the parallax a

539
00:28:14,070 --> 00:28:17,820
cycle the object exchange where people
can write modules and write different

540
00:28:17,820 --> 00:28:22,120
different but programs for the propeller
and upload them

541
00:28:22,120 --> 00:28:25,580
so it's sort of like a if you look it
was like I wanna have LCD controller I

542
00:28:25,580 --> 00:28:28,590
don't have an FM transmitter I want
output composite video

543
00:28:28,590 --> 00:28:31,710
you can go online and look the object
exchanges or to grab objects

544
00:28:31,710 --> 00:28:35,600
objects are basically like header files
are functions grab those are two

545
00:28:35,600 --> 00:28:38,360
integrated into your design so super
cool

546
00:28:38,360 --> 00:28:41,309
so you know in reality gore the object
exchange in look stuff up its okay I

547
00:28:41,309 --> 00:28:42,130
want to add

548
00:28:42,130 --> 00:28:45,690
VGA output to the J tag you later hook
it up to it you know stand-alone

549
00:28:45,690 --> 00:28:46,570
terminal

550
00:28:46,570 --> 00:28:49,770
out stand alone monitor something there
is also the stuff you can do

551
00:28:49,770 --> 00:28:54,149
so I just love the community support
aspect of it

552
00:28:54,149 --> 00:28:57,919
you can code I'm in Spain which is the
proprietor another Friday but a custom

553
00:28:57,919 --> 00:28:58,500
language

554
00:28:58,500 --> 00:29:02,110
on bill specifically for the Jade

555
00:29:02,110 --> 00:29:06,640
the propeller sorta a high-level kind of
like

556
00:29:06,640 --> 00:29:10,929
Pascal CE sort of combination

557
00:29:10,929 --> 00:29:14,529
mashup live stuff little bit of a
learning curve to to figure it out

558
00:29:14,529 --> 00:29:18,399
that's what but the J Taylor is
currently all all written and spin

559
00:29:18,399 --> 00:29:22,200
so it's very it's at least easy to kinda
look through and read comments and

560
00:29:22,200 --> 00:29:23,960
seized up as opposed to assembly
language

561
00:29:23,960 --> 00:29:26,899
which tends to be a little bit harder we
could write in assembly language also

562
00:29:26,899 --> 00:29:30,049
you can write and see their their
paradox is creating a to right now

563
00:29:30,049 --> 00:29:33,770
a cross-platform tool to be alert to
great see

564
00:29:33,770 --> 00:29:37,580
right now everything is done in spin

565
00:29:37,580 --> 00:29:40,899
the the system normally runs eighty
megahertz would seem slow when you

566
00:29:40,899 --> 00:29:41,789
compare to like

567
00:29:41,789 --> 00:29:45,510
you know a linux-based being a red a
mobile phone or something that really a

568
00:29:45,510 --> 00:29:47,059
megahertz for like I did

569
00:29:47,059 --> 00:29:50,270
a stand-alone hobbyist typeof

570
00:29:50,270 --> 00:29:54,980
Meyer jewelers is pretty good is pretty
fast you can actually overclocking 220

571
00:29:54,980 --> 00:29:56,970
makers have pretty good reliability

572
00:29:56,970 --> 00:30:00,919
on the way the system setup is you have
but some global memory which is called

573
00:30:00,919 --> 00:30:01,890
her memory

574
00:30:01,890 --> 00:30:05,450
that shared with all of the at all the
eight Coggs

575
00:30:05,450 --> 00:30:09,690
there's 3008 32k RAM the ROM is actually

576
00:30:09,690 --> 00:30:13,710
a master on which has the bootloader and
character set and some other stuff

577
00:30:13,710 --> 00:30:14,760
specific to the

578
00:30:14,760 --> 00:30:18,649
to that to get the propeller up and
running I'm so code basically

579
00:30:18,649 --> 00:30:22,350
gets loaded from an external EE prom on
power-up and executes

580
00:30:22,350 --> 00:30:26,309
avram in the remaining portion avram
after that is used for the stack

581
00:30:26,309 --> 00:30:28,320
inferred variables and things

582
00:30:28,320 --> 00:30:32,440
shared memory and then each card has its
own 2k avram as well see could have a

583
00:30:32,440 --> 00:30:33,299
cog

584
00:30:33,299 --> 00:30:36,750
but kinda executing its own stuff in
using its own memory than maybe once in

585
00:30:36,750 --> 00:30:39,830
a while dumping things to the main
memory if you want to know if you need

586
00:30:39,830 --> 00:30:40,360
some other

587
00:30:40,360 --> 00:30:44,600
on taxes it I for for the day together
we don't really have a lot of

588
00:30:44,600 --> 00:30:48,899
complex stuff going on with college but
there is lotsa capability there

589
00:30:48,899 --> 00:30:53,419
up 32 I opens at forty million amps I'm
sink or source current

590
00:30:53,419 --> 00:30:57,240
for Penn in 10 things I want to do and I
was designed as tools like find a

591
00:30:57,240 --> 00:30:58,659
processor that I could use

592
00:30:58,659 --> 00:31:03,980
that had lotsa pins but also had an easy
way to program it and didn't need like

593
00:31:03,980 --> 00:31:04,340
this

594
00:31:04,340 --> 00:31:09,470
you know that weird a large development
environment all the stuff that China

595
00:31:09,470 --> 00:31:10,440
find that balance

596
00:31:10,440 --> 00:31:13,700
but 32 pins reason 24 those pens for i/o
and other

597
00:31:13,700 --> 00:31:16,679
other stuff for using for that you know
and like visual ordeal analog converter

598
00:31:16,679 --> 00:31:17,279
and stuff

599
00:31:17,279 --> 00:31:20,990
so it sort of goes its it's a pretty
good number

600
00:31:20,990 --> 00:31:25,140
you know is you know design a similar
for Jagya later with an FPGA with you

601
00:31:25,140 --> 00:31:26,899
know 128 pins or something

602
00:31:26,899 --> 00:31:31,720
so you could potentially get larger I
over I think 24 sort of a good

603
00:31:31,720 --> 00:31:35,460
a good number for now anyway

604
00:31:35,460 --> 00:31:38,590
so senator ehlmann is done as a tool
called the propeller tool which actually

605
00:31:38,590 --> 00:31:38,850
is

606
00:31:38,850 --> 00:31:41,940
it is in the in a black cat materials on
a DVD

607
00:31:41,940 --> 00:31:44,760
so if you are low that up in kinda play
with it let the source code in you you

608
00:31:44,760 --> 00:31:45,519
can

609
00:31:45,519 --> 00:31:49,299
I'm right now that is Windows only us I
mention that they are doing

610
00:31:49,299 --> 00:31:50,360
cross-platform

611
00:31:50,360 --> 00:31:54,370
version for for CR for C but they're
also

612
00:31:54,370 --> 00:31:58,080
creating cross-platform to let let you
right spin on up things other than

613
00:31:58,080 --> 00:31:58,630
Windows

614
00:31:58,630 --> 00:32:02,149
but for now it's a windows-based

615
00:32:02,149 --> 00:32:05,539
every program the device through that
same interface that were using as the as

616
00:32:05,539 --> 00:32:08,380
a user interface and that's me I just
one connector and we don't need to do a

617
00:32:08,380 --> 00:32:09,590
lot of stuff if we wanna

618
00:32:09,590 --> 00:32:14,039
one program is again never the intent is
to get non hardware people involved in

619
00:32:14,039 --> 00:32:16,590
the stuff that has to be easy

620
00:32:16,590 --> 00:32:21,100
is a block diagram of that up the core

621
00:32:21,100 --> 00:32:23,419
from a circuit point-of-view there's
really not much there we just have the

622
00:32:23,419 --> 00:32:24,190
main part

623
00:32:24,190 --> 00:32:28,159
50 lost external oscillator and their
the

624
00:32:28,159 --> 00:32:31,460
loading capacitors actually internal to
the propeller so just one less thing to

625
00:32:31,460 --> 00:32:32,289
have to deal with

626
00:32:32,289 --> 00:32:36,090
or two less things they have to deal
with the normally need to capacitor so

627
00:32:36,090 --> 00:32:39,059
to Thursday's things you can just throw
on to a five megahertz personal and be

628
00:32:39,059 --> 00:32:39,789
good to go

629
00:32:39,789 --> 00:32:42,909
and there's not much else just some just
that the Sree prop

630
00:32:42,909 --> 00:32:47,440
has a very simple to get up and running

631
00:32:47,440 --> 00:32:51,830
for the USB interface assertive serves
multi-purpose but I love

632
00:32:51,830 --> 00:32:55,529
it powers a device and then let this
program and serves as your interface

633
00:32:55,529 --> 00:32:58,730
I'm using FTIR FTDI ft 232

634
00:32:58,730 --> 00:33:02,260
device which is a standard USB to serial

635
00:33:02,260 --> 00:33:06,960
interface so when we we can send TTL
level cereal from the Jade Jagger later

636
00:33:06,960 --> 00:33:08,490
0 to 3 vote signals

637
00:33:08,490 --> 00:33:13,340
this FTDI parts and convert that into
proper signals and also show up as a

638
00:33:13,340 --> 00:33:16,960
but US USB virtual comp or on your
machine

639
00:33:16,960 --> 00:33:20,809
to work with you know with Mac PC Linux

640
00:33:20,809 --> 00:33:24,120
whatever Windows whatever what everyone
anything that supports

641
00:33:24,120 --> 00:33:27,210
I USB virtual servers virtual com ports

642
00:33:27,210 --> 00:33:31,179
and it under different drivers on the
FTDI website %uh anything that supports

643
00:33:31,179 --> 00:33:35,649
for cio.com poor you'll be other users
this thing with possibly even

644
00:33:35,649 --> 00:33:38,720
maybe Raspberry Pi at some point out um

645
00:33:38,720 --> 00:33:41,690
part of the third party USB interface I
wanted to make sure that we did properly

646
00:33:41,690 --> 00:33:43,289
was have a power distributions which

647
00:33:43,289 --> 00:33:47,890
oftentimes you'll see products that just
have a USB connector going straight

648
00:33:47,890 --> 00:33:51,470
from the board directly but to the
target computer if you look on the

649
00:33:51,470 --> 00:33:52,200
actual

650
00:33:52,200 --> 00:33:57,029
a inside the the board that power is
shared between two red is USB provides

651
00:33:57,029 --> 00:33:57,799
power

652
00:33:57,799 --> 00:34:02,450
but you're supposed to actually have

653
00:34:02,450 --> 00:34:05,519
kinda proper enumeration process to make
sure that you don't

654
00:34:05,519 --> 00:34:10,159
but potentially try to this try to sort
to sink too much current from the target

655
00:34:10,159 --> 00:34:13,230
and make sure that the that the computer
properly knows that you're probably knew

656
00:34:13,230 --> 00:34:15,690
rated it knows what kinda current You're
Expecting

657
00:34:15,690 --> 00:34:19,240
before provided to you so as part of the
USB spec you actually need to come to

658
00:34:19,240 --> 00:34:20,169
power up

659
00:34:20,169 --> 00:34:23,690
properly in a numerate properly when you
plug your device into a computer

660
00:34:23,690 --> 00:34:28,179
most things out there very cheap devices
don't do that

661
00:34:28,179 --> 00:34:32,550
so technically they're not USB compliant
I but I wanted to at least have a way

662
00:34:32,550 --> 00:34:36,320
that if there is some problem with the J
tag later we had hooked up to some board

663
00:34:36,320 --> 00:34:37,000
that was just

664
00:34:37,000 --> 00:34:41,089
causing it to like suck so much turnout
have a device

665
00:34:41,089 --> 00:34:44,409
that would fail properly and it would
kinda disconnect itself from the system

666
00:34:44,409 --> 00:34:49,139
they're using nm I see a micro I see
2025 a power distribution switch

667
00:34:49,139 --> 00:34:53,260
which basically what we're doing is
disconnecting

668
00:34:53,260 --> 00:34:56,290
most have this utmost to the circuit
from the system

669
00:34:56,290 --> 00:34:59,579
and when you plug in the tag you later
only the FTI part

670
00:34:59,579 --> 00:35:03,210
it's powered up so it the new numeration
happens properly

671
00:35:03,210 --> 00:35:06,960
with the target and then once the new
rated and the

672
00:35:06,960 --> 00:35:10,700
the the FTDI parts as I need five
hundred millions

673
00:35:10,700 --> 00:35:14,290
then the that target the PC will give
you that curator at least allow that

674
00:35:14,290 --> 00:35:15,480
about a current to be

675
00:35:15,480 --> 00:35:21,740
to be a to be drawn and then it will
enable the the rest the system

676
00:35:21,740 --> 00:35:25,130
so here we basically can see like the
USB is only plugin

677
00:35:25,130 --> 00:35:28,220
the USB that's it that's the 50 lineup
USB

678
00:35:28,220 --> 00:35:32,490
were only powering FTDI part and then
once everything's good

679
00:35:32,490 --> 00:35:36,150
12 pins on the FTI part says okay we're
all a new rated lets an able to wrestle

680
00:35:36,150 --> 00:35:37,130
owed

681
00:35:37,130 --> 00:35:41,839
and then we enable Asia a low dropout
linear regulator

682
00:35:41,839 --> 00:35:45,800
to enable the 530 to the Bible line will
then go and feed the rest the detailer

683
00:35:45,800 --> 00:35:50,910
system so it's just a good thing to do
with proper kind of power

684
00:35:50,910 --> 00:35:53,280
sick you know is pretty good certainty
that when you play this thing into a

685
00:35:53,280 --> 00:35:55,210
into your computer stock at

686
00:35:55,210 --> 00:35:59,560
blow up hopefully

687
00:35:59,560 --> 00:36:04,359
okay so the adjustable target voltage
this is just a way I can sorta some way

688
00:36:04,359 --> 00:36:07,490
you know to create this adjustable
voltage that we can connect to different

689
00:36:07,490 --> 00:36:08,349
targets

690
00:36:08,349 --> 00:36:11,609
I'm so I'm using the post with modulated
signal PWM on

691
00:36:11,609 --> 00:36:14,810
on 1 I'll line are one output line up
the propeller

692
00:36:14,810 --> 00:36:18,140
and basically the duty cycle over the
PWM

693
00:36:18,140 --> 00:36:22,410
corresponds to the output voltage and I
have is a lookup table

694
00:36:22,410 --> 00:36:25,810
with different duty cycles that I've
measured out I

695
00:36:25,810 --> 00:36:29,579
measure the kinda resulting voltage and
now we have .1

696
00:36:29,579 --> 00:36:33,490
vol increments from one point to 3.3
volt spending on target for the

697
00:36:33,490 --> 00:36:36,670
in the way it works I have a an op-amp
basically RC

698
00:36:36,670 --> 00:36:40,160
filter going through a buffer

699
00:36:40,160 --> 00:36:44,820
to provide the voltage and we really
don't even really need the buffer

700
00:36:44,820 --> 00:36:47,750
but that's going to provide us a little
bit of isolation and also give us

701
00:36:47,750 --> 00:36:48,480
additional

702
00:36:48,480 --> 00:36:51,500
output current is this this %ah that op
amp in

703
00:36:51,500 --> 00:36:55,020
write home about 150 billions about
would try it

704
00:36:55,020 --> 00:36:59,550
so it sorta accesses amplifier for us
where now we have a voltage

705
00:36:59,550 --> 00:37:02,760
but we can also source someone on a
current case you want to use

706
00:37:02,760 --> 00:37:06,890
this be a DJ line he just what target
voltage line maybe two

707
00:37:06,890 --> 00:37:10,430
control the target on the target our
control another piece a circuit your

708
00:37:10,430 --> 00:37:12,839
something gives it'll just a little bit
more about

709
00:37:12,839 --> 00:37:16,070
pits you know kinda future expandability
by having this buffering here it's just

710
00:37:16,070 --> 00:37:17,430
safer that way to

711
00:37:17,430 --> 00:37:24,430
I'm so this is a single supply standard
of it

712
00:37:24,630 --> 00:37:28,369
for level translation this again allow
the 3.3 volt signals from the propeller

713
00:37:28,369 --> 00:37:31,680
up to be converted to whatever are just
will target voltages

714
00:37:31,680 --> 00:37:36,510
we have the txts 0108 you which is a
very common by directional

715
00:37:36,510 --> 00:37:40,829
level translator still takin 3.3 and
then I'll put it

716
00:37:40,829 --> 00:37:44,920
at whatever voted for putting in on the
on the other side

717
00:37:44,920 --> 00:37:48,970
the show you the schematic that I the
cool thing about this part is has

718
00:37:48,970 --> 00:37:52,460
it has a high impedance outputs so we
can use the output enable line

719
00:37:52,460 --> 00:37:55,480
to essentially keep all of the

720
00:37:55,480 --> 00:37:59,130
I O pins that might be connected to a
target board high impedance which

721
00:37:59,130 --> 00:38:00,710
essentially disconnected from the

722
00:38:00,710 --> 00:38:04,109
from the system are from those
connections until we're ready

723
00:38:04,109 --> 00:38:07,260
just RJ tabulating that way you know as
we're plugging things

724
00:38:07,260 --> 00:38:11,690
in were not hopefully not gonna screw
stuff up because the system doesn't

725
00:38:11,690 --> 00:38:13,990
really the target doesn't really know
that there there yet

726
00:38:13,990 --> 00:38:17,970
until we enable the output enable and
then those pens go higher low

727
00:38:17,970 --> 00:38:22,280
79 pins is really kinda a useful feature

728
00:38:22,280 --> 00:38:25,960
and there's not much to it pins coming
in

729
00:38:25,960 --> 00:38:31,260
in going out

730
00:38:31,260 --> 00:38:36,000
for it but protection we have %uh trent
let me resistors and I unclamps

731
00:38:36,000 --> 00:38:40,170
to prevent over current and overvoltage

732
00:38:40,170 --> 00:38:43,349
love test points on the target port
because we don't know what we're gonna

733
00:38:43,349 --> 00:38:46,490
connect to do we need to protect
ourselves there

734
00:38:46,490 --> 00:38:50,390
to an extent there you know there is a
range above some voltage

735
00:38:50,390 --> 00:38:53,710
up that things will get damage but

736
00:38:53,710 --> 00:38:57,190
it's still gonna protect us a lot I'm so
we have is our

737
00:38:57,190 --> 00:39:00,730
from from each target on each channel
resistor coming in and then to a

738
00:39:00,730 --> 00:39:01,490
resistor gone

739
00:39:01,490 --> 00:39:05,070
are a diode going higher and I don't low
so they're called I would clamps

740
00:39:05,070 --> 00:39:08,230
what those do are basically clamping

741
00:39:08,230 --> 00:39:11,280
in voltage to a fixed level which in EB

742
00:39:11,280 --> 00:39:14,790
I a positive it's going to be the
therefore go to the diode

743
00:39:14,790 --> 00:39:19,040
plus whatever the adjustable target
voltage is that points1 point2 3.3 volt

744
00:39:19,040 --> 00:39:22,230
and then for the negative side it's just
gonna be the negative um

745
00:39:22,230 --> 00:39:28,900
forward forward a bodies are the diodes
the Dow dropped

746
00:39:28,900 --> 00:39:33,490
and that was that we use our Schottky
diodes said you need 24 we need forty

747
00:39:33,490 --> 00:39:34,089
eight of them

748
00:39:34,089 --> 00:39:37,650
2 per line having individual discrete
diodes are just sorta be a pain

749
00:39:37,650 --> 00:39:38,560
especially if you wanna

750
00:39:38,560 --> 00:39:42,130
you know hand assemble these things so I
found these diode arrays which are sorta

751
00:39:42,130 --> 00:39:42,820
cool

752
00:39:42,820 --> 00:39:46,940
they're actually designed for for diode
clapping and free St protection

753
00:39:46,940 --> 00:39:50,510
I where each I O line has

754
00:39:50,510 --> 00:39:55,119
its own diode going in. on owned I don't
look so now we only need

755
00:39:55,119 --> 00:39:59,320
I there's four channels per chip so we
only need six of them

756
00:39:59,320 --> 00:40:03,180
that's slightly better

757
00:40:03,180 --> 00:40:05,500
that's pretty much all the hardware for
the bill materials there's mostly

758
00:40:05,500 --> 00:40:07,740
discrete components and resistors and
stuff

759
00:40:07,740 --> 00:40:11,140
the total cost is around 50 bucks US

760
00:40:11,140 --> 00:40:14,700
if you want to buy one no single single
quantity fifty dollars the more you buy

761
00:40:14,700 --> 00:40:16,260
the cheaper parts are

762
00:40:16,260 --> 00:40:20,089
I'm here this bill materials is from
digikey which is a up

763
00:40:20,089 --> 00:40:23,920
fairly large parts distributor worldwide

764
00:40:23,920 --> 00:40:26,930
I'm in the folio PDF is on my website a
few

765
00:40:26,930 --> 00:40:31,980
if you want to see it better

766
00:40:31,980 --> 00:40:36,200
so from a firm or side currently this is
kinda source tree that we have

767
00:40:36,200 --> 00:40:40,190
G tabulate about spin is the mains bin
file that handles all that the initial

768
00:40:40,190 --> 00:40:42,290
state machine a setup and everything

769
00:40:42,290 --> 00:40:46,349
and I tried to I want to keep things
modular size I add new

770
00:40:46,349 --> 00:40:49,470
I functionality our new protocols I have
that as an

771
00:40:49,470 --> 00:40:53,829
as a separate spin file they have the
pair like serial terminal which is a I'm

772
00:40:53,829 --> 00:40:58,930
1ad fall spin files to enable user
interface to enable a serial

773
00:40:58,930 --> 00:41:02,119
serial interface for users I'm using
that for the user interface

774
00:41:02,119 --> 00:41:06,280
real random is a %uh see a random number
generator based on some PLL

775
00:41:06,280 --> 00:41:10,720
I'm jitter the CPU that we use for
bypass can test

776
00:41:10,720 --> 00:41:15,520
which I'll show you and probs a tag is
on the low level J Tiger face tough

777
00:41:15,520 --> 00:41:18,640
in NJ de Kock serial is a low-level

778
00:41:18,640 --> 00:41:21,690
additional serial port I'm using for the
York detection

779
00:41:21,690 --> 00:41:24,500
so it sort of your eyes you add more
stuff there may be a tree gets gets

780
00:41:24,500 --> 00:41:25,730
wider anything but

781
00:41:25,730 --> 00:41:29,690
I'm and house pretty simple you can
think I've like these other spin files

782
00:41:29,690 --> 00:41:30,910
is kinda extra

783
00:41:30,910 --> 00:41:34,560
header files or something even though
they're the other the x-axis the files I

784
00:41:34,560 --> 00:41:37,650
guess

785
00:41:37,650 --> 00:41:41,490
there's still plenty of space left on
this thing even with all of my horribly

786
00:41:41,490 --> 00:41:46,000
um probably bloated and not very a

787
00:41:46,000 --> 00:41:50,490
not very efficient code we're still only
using

788
00:41:50,490 --> 00:41:53,760
1800 longs 32-bit

789
00:41:53,760 --> 00:41:56,810
value so we have we still have quite a
bit of space available

790
00:41:56,810 --> 00:42:03,810
so all the blue lotsa lotsa space for
excess stuff later

791
00:42:07,030 --> 00:42:09,310
I guess we're actually we're going to
take a break now I think it's gonna be a

792
00:42:09,310 --> 00:42:10,099
good time

793
00:42:10,099 --> 00:42:14,839
we'll take a break now until 10:15 come
back and look at the actual details on

794
00:42:14,839 --> 00:42:16,960
chip debugging faces a Jay tagging you
are

795
00:42:16,960 --> 00:42:19,079
I mean we opened up you know do the
demos and I love that

