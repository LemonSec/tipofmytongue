1
00:00:01,130 --> 00:00:14,690
[Music]

2
00:00:15,679 --> 00:00:17,720
hello everyone and welcome to

3
00:00:17,720 --> 00:00:20,240
anti-forensics reverse engineering a

4
00:00:20,240 --> 00:00:23,599
leading phone forensic tool

5
00:00:23,760 --> 00:00:25,760
my name is matt burgin and i'm a red

6
00:00:25,760 --> 00:00:28,080
team member and vulnerability researcher

7
00:00:28,080 --> 00:00:30,640
for corelogic security i have released

8
00:00:30,640 --> 00:00:32,800
just over 50 security advisories in the

9
00:00:32,800 --> 00:00:35,120
last 10 years and today i would like to

10
00:00:35,120 --> 00:00:38,640
talk to you about three of them

11
00:00:38,719 --> 00:00:41,120
so we have a bit of ground to cover but

12
00:00:41,120 --> 00:00:42,399
we'll quickly review what we'll be

13
00:00:42,399 --> 00:00:44,719
talking about i'll give you an idea of

14
00:00:44,719 --> 00:00:46,879
what initially caught my attention

15
00:00:46,879 --> 00:00:48,800
how i went about getting targets to play

16
00:00:48,800 --> 00:00:49,680
with

17
00:00:49,680 --> 00:00:51,360
what i had to do in order to set up a

18
00:00:51,360 --> 00:00:53,760
debugging environment my reverse

19
00:00:53,760 --> 00:00:55,520
engineering process

20
00:00:55,520 --> 00:00:57,120
things i found after breaking their

21
00:00:57,120 --> 00:00:58,800
encryption algorithm

22
00:00:58,800 --> 00:01:01,359
concerns that i have and a way you might

23
00:01:01,359 --> 00:01:04,719
be able to protect your data

24
00:01:05,600 --> 00:01:07,439
so what does it celebrate well pretty

25
00:01:07,439 --> 00:01:09,439
much what you see is what you get

26
00:01:09,439 --> 00:01:11,280
it's a tool designed to help break into

27
00:01:11,280 --> 00:01:13,520
mobile phones and enable the user to

28
00:01:13,520 --> 00:01:15,600
recover information from it

29
00:01:15,600 --> 00:01:18,479
it can unlock encrypted devices remove

30
00:01:18,479 --> 00:01:22,000
lock screens read application data etc

31
00:01:22,000 --> 00:01:23,840
this information can then be imported

32
00:01:23,840 --> 00:01:25,920
into analysis software that they also

33
00:01:25,920 --> 00:01:28,240
develop

34
00:01:29,040 --> 00:01:30,799
it's an honorable goal right they want

35
00:01:30,799 --> 00:01:32,720
to help law enforcement solve criminal

36
00:01:32,720 --> 00:01:35,439
cases and bring justice to victims

37
00:01:35,439 --> 00:01:37,439
forensic evidence undoubtedly helps do

38
00:01:37,439 --> 00:01:40,079
this more information for investigators

39
00:01:40,079 --> 00:01:42,560
means leads and cases are established

40
00:01:42,560 --> 00:01:44,960
easier and relevant information can be

41
00:01:44,960 --> 00:01:46,560
uncovered more quickly

42
00:01:46,560 --> 00:01:48,000
i'm sure these tools have helped make

43
00:01:48,000 --> 00:01:49,840
the job of law enforcement investigators

44
00:01:49,840 --> 00:01:51,360
much easier

45
00:01:51,360 --> 00:01:52,399
normally

46
00:01:52,399 --> 00:01:53,920
companies like celebrity don't want

47
00:01:53,920 --> 00:01:55,680
their tools to be leaked either with

48
00:01:55,680 --> 00:01:58,560
reasons ranging from not wanting to help

49
00:01:58,560 --> 00:02:01,040
quote unquote the bad guys or protecting

50
00:02:01,040 --> 00:02:03,840
trade secrets

51
00:02:04,320 --> 00:02:06,399
when you google tools like these though

52
00:02:06,399 --> 00:02:09,280
you often see both sides of the coin

53
00:02:09,280 --> 00:02:11,038
groups like the human rights watch

54
00:02:11,038 --> 00:02:15,040
privacy international eff the aclu

55
00:02:15,040 --> 00:02:17,040
as well as many others who agree that in

56
00:02:17,040 --> 00:02:19,280
some way shape or form law enforcement

57
00:02:19,280 --> 00:02:21,840
hacking can be harmful and not just in

58
00:02:21,840 --> 00:02:23,760
the united states

59
00:02:23,760 --> 00:02:25,760
there was a court petition recently

60
00:02:25,760 --> 00:02:27,360
filed in israel for their foreign

61
00:02:27,360 --> 00:02:30,160
defense ministry to no longer allow

62
00:02:30,160 --> 00:02:32,640
celebrity to be sold to hong kong i'm

63
00:02:32,640 --> 00:02:34,560
not sure what happened to this this was

64
00:02:34,560 --> 00:02:37,680
in august of 2020 but not too long after

65
00:02:37,680 --> 00:02:39,360
that celebrity announced that it would

66
00:02:39,360 --> 00:02:42,800
no longer sell to customers in russia

67
00:02:42,800 --> 00:02:45,200
after an israeli newspaper discussed

68
00:02:45,200 --> 00:02:47,040
celebrates tools being used to hack

69
00:02:47,040 --> 00:02:49,680
political opposition

70
00:02:49,680 --> 00:02:52,080
gizmodo also released a story about a

71
00:02:52,080 --> 00:02:54,400
k-12 school district in the united

72
00:02:54,400 --> 00:02:56,400
states who was relying on these tools

73
00:02:56,400 --> 00:02:58,560
for investigations into student-teacher

74
00:02:58,560 --> 00:03:01,280
relationships

75
00:03:01,519 --> 00:03:03,599
also in the u.s i went through some of

76
00:03:03,599 --> 00:03:05,760
our public information websites

77
00:03:05,760 --> 00:03:07,760
i found groups like the secret service

78
00:03:07,760 --> 00:03:09,599
spending half a million dollars on tools

79
00:03:09,599 --> 00:03:11,200
from celebrity

80
00:03:11,200 --> 00:03:13,840
the city of beverly hills spent fifty

81
00:03:13,840 --> 00:03:16,159
thousand dollars on tools from celebrity

82
00:03:16,159 --> 00:03:18,159
and the department of homeland security

83
00:03:18,159 --> 00:03:19,519
spent

84
00:03:19,519 --> 00:03:21,599
somewhere between 30 and 35 million

85
00:03:21,599 --> 00:03:24,159
dollars on tools from celebrate you'll

86
00:03:24,159 --> 00:03:26,480
you'll see the cost for a used and or

87
00:03:26,480 --> 00:03:27,840
new version

88
00:03:27,840 --> 00:03:29,920
of these tools in just a moment and with

89
00:03:29,920 --> 00:03:32,000
that number in mind the budget of 35

90
00:03:32,000 --> 00:03:35,200
million dollars is pretty mind-boggling

91
00:03:35,200 --> 00:03:37,360
checking out google trends it is not

92
00:03:37,360 --> 00:03:39,120
just the united states these tools are

93
00:03:39,120 --> 00:03:43,280
being used it's pretty much everywhere

94
00:03:45,599 --> 00:03:47,120
uh so others have talked about these

95
00:03:47,120 --> 00:03:50,480
tools before i'm by no means the first

96
00:03:50,480 --> 00:03:52,080
the source code for celebrate had been

97
00:03:52,080 --> 00:03:53,519
leaked at one point

98
00:03:53,519 --> 00:03:54,959
encryption mechanisms that we'll talk

99
00:03:54,959 --> 00:03:57,360
about later on had been broken

100
00:03:57,360 --> 00:03:59,360
celebrate had been hacked into and lost

101
00:03:59,360 --> 00:04:01,360
almost a terabyte of data

102
00:04:01,360 --> 00:04:02,879
someone even ran doom on one of the

103
00:04:02,879 --> 00:04:05,439
celebrate you feds which is kind of cool

104
00:04:05,439 --> 00:04:06,799
i didn't know if i would be wasting my

105
00:04:06,799 --> 00:04:08,400
time here or not but

106
00:04:08,400 --> 00:04:09,920
i was definitely

107
00:04:09,920 --> 00:04:14,000
curious about what was going on

108
00:04:14,000 --> 00:04:15,360
uh so how do you get a hold of these

109
00:04:15,360 --> 00:04:17,600
though right well it turns out there are

110
00:04:17,600 --> 00:04:19,600
two models a consumer model and a

111
00:04:19,600 --> 00:04:21,600
government model one that's more

112
00:04:21,600 --> 00:04:23,759
commonly used by law enforcement

113
00:04:23,759 --> 00:04:26,080
and you can acquire either model through

114
00:04:26,080 --> 00:04:29,680
ebay and they range in costs between 100

115
00:04:29,680 --> 00:04:31,840
and 2500

116
00:04:31,840 --> 00:04:34,240
if you look kind of mid-center screen

117
00:04:34,240 --> 00:04:35,199
you'll see

118
00:04:35,199 --> 00:04:37,280
this one particular one has a valid

119
00:04:37,280 --> 00:04:39,759
license through 2025

120
00:04:39,759 --> 00:04:42,400
it costs two thousand dollars usd

121
00:04:42,400 --> 00:04:44,479
and presumably you can still get updates

122
00:04:44,479 --> 00:04:47,199
for this device

123
00:04:48,400 --> 00:04:51,280
so you can also get the you fed uh just

124
00:04:51,280 --> 00:04:53,600
as a software a normal thick application

125
00:04:53,600 --> 00:04:56,160
install for a laptop i think you might

126
00:04:56,160 --> 00:04:58,639
also need a special hub to go with it

127
00:04:58,639 --> 00:05:00,720
but i'm not sure

128
00:05:00,720 --> 00:05:02,639
on the left side of the screen you'll

129
00:05:02,639 --> 00:05:05,199
see the mix and models that

130
00:05:05,199 --> 00:05:07,840
i've just taken some sample screenshots

131
00:05:07,840 --> 00:05:10,240
of what these tools can go after and on

132
00:05:10,240 --> 00:05:12,240
the right hand side you'll see

133
00:05:12,240 --> 00:05:14,560
the version and settings the top right

134
00:05:14,560 --> 00:05:17,199
one is from the physical you fed device

135
00:05:17,199 --> 00:05:19,039
and the bottom

136
00:05:19,039 --> 00:05:20,960
right one is from the you fed 4 pc

137
00:05:20,960 --> 00:05:23,960
software

138
00:05:25,520 --> 00:05:27,840
so i keep up with their release notes in

139
00:05:27,840 --> 00:05:29,840
case anything particularly interesting

140
00:05:29,840 --> 00:05:32,479
pops up and to give you an idea of what

141
00:05:32,479 --> 00:05:34,800
their latest tools support

142
00:05:34,800 --> 00:05:38,639
you fed 4 pc has around 31 000 different

143
00:05:38,639 --> 00:05:40,479
extraction profiles

144
00:05:40,479 --> 00:05:42,880
it supports up almost 11 000

145
00:05:42,880 --> 00:05:45,360
applications and can read data from

146
00:05:45,360 --> 00:05:47,360
applications ranging from things like

147
00:05:47,360 --> 00:05:50,080
text messaging apps to your social media

148
00:05:50,080 --> 00:05:51,680
apps to travel

149
00:05:51,680 --> 00:05:53,600
and of course your dating applications

150
00:05:53,600 --> 00:05:56,880
like tinder and grinder

151
00:05:58,000 --> 00:06:00,960
so some of the exploits used by these

152
00:06:00,960 --> 00:06:03,199
tools i don't know

153
00:06:03,199 --> 00:06:05,840
i can't say when they became public

154
00:06:05,840 --> 00:06:07,199
i can't say if celebrate first

155
00:06:07,199 --> 00:06:08,720
discovered one or more of these

156
00:06:08,720 --> 00:06:10,800
vulnerabilities and

157
00:06:10,800 --> 00:06:12,479
prior to being discovered in the public

158
00:06:12,479 --> 00:06:13,919
or if they were first publicly

159
00:06:13,919 --> 00:06:16,240
documented and then later implemented in

160
00:06:16,240 --> 00:06:17,520
their tools

161
00:06:17,520 --> 00:06:19,360
i believe at least in the case of

162
00:06:19,360 --> 00:06:22,080
checkpoint or checkpaint it was

163
00:06:22,080 --> 00:06:24,160
implemented later on but that was mostly

164
00:06:24,160 --> 00:06:26,800
based off of media coverage

165
00:06:26,800 --> 00:06:29,360
the content i had access to at the time

166
00:06:29,360 --> 00:06:31,840
i was a couple years old

167
00:06:31,840 --> 00:06:33,919
there were recent or there weren't any

168
00:06:33,919 --> 00:06:35,520
recent or unreleased privilege

169
00:06:35,520 --> 00:06:37,199
escalation exploits in the archives that

170
00:06:37,199 --> 00:06:39,360
i found but there was still some

171
00:06:39,360 --> 00:06:42,960
interesting content worth reviewing

172
00:06:44,800 --> 00:06:46,560
if for some reason your ufed device

173
00:06:46,560 --> 00:06:48,720
can't compromise a target

174
00:06:48,720 --> 00:06:50,800
you can send it off to them and their

175
00:06:50,800 --> 00:06:53,039
services team will run some exploits

176
00:06:53,039 --> 00:06:55,120
that they keep behind the scenes

177
00:06:55,120 --> 00:06:57,440
third-party forensic firms often have

178
00:06:57,440 --> 00:06:59,759
services teams with other capabilities

179
00:06:59,759 --> 00:07:01,440
that aren't otherwise offered through

180
00:07:01,440 --> 00:07:03,360
their product line in the case of

181
00:07:03,360 --> 00:07:05,599
celebrity at least what you do is you

182
00:07:05,599 --> 00:07:07,840
send in your the device that you want to

183
00:07:07,840 --> 00:07:09,840
be compromised and they'll send it back

184
00:07:09,840 --> 00:07:12,639
to you in an unlocked form

185
00:07:12,639 --> 00:07:14,240
this is what their services team

186
00:07:14,240 --> 00:07:16,720
capabilities look like currently and you

187
00:07:16,720 --> 00:07:19,039
can always find the up-to-date

188
00:07:19,039 --> 00:07:20,960
information on their website but it

189
00:07:20,960 --> 00:07:24,159
doesn't change too often

190
00:07:26,800 --> 00:07:28,639
so i had some devices

191
00:07:28,639 --> 00:07:30,319
and i needed to get system privilege

192
00:07:30,319 --> 00:07:31,599
that i could set up my debugging

193
00:07:31,599 --> 00:07:34,960
environment they try to lock you into

194
00:07:34,960 --> 00:07:37,199
a pretty jailed environment

195
00:07:37,199 --> 00:07:38,960
you're not able to access things like

196
00:07:38,960 --> 00:07:41,199
the task manager the start menu has a

197
00:07:41,199 --> 00:07:43,280
lot of reduced items in it you can't

198
00:07:43,280 --> 00:07:46,000
access the file system directly

199
00:07:46,000 --> 00:07:47,440
and all of this is done through local

200
00:07:47,440 --> 00:07:49,520
policy

201
00:07:49,520 --> 00:07:50,479
so

202
00:07:50,479 --> 00:07:52,080
what i did was you still have to be able

203
00:07:52,080 --> 00:07:53,520
to connect these things to the internet

204
00:07:53,520 --> 00:07:55,599
to receive updates etc

205
00:07:55,599 --> 00:07:56,639
so

206
00:07:56,639 --> 00:07:59,039
one of the the features that is left

207
00:07:59,039 --> 00:08:00,960
available is the windows networking

208
00:08:00,960 --> 00:08:02,160
manager

209
00:08:02,160 --> 00:08:04,240
so i use the windows networking manager

210
00:08:04,240 --> 00:08:05,199
to

211
00:08:05,199 --> 00:08:07,759
open up a file dialog using a

212
00:08:07,759 --> 00:08:10,639
certificate based authentication

213
00:08:10,639 --> 00:08:12,720
for wireless

214
00:08:12,720 --> 00:08:15,199
and once i had a file dialog there very

215
00:08:15,199 --> 00:08:17,840
similar to a citrus escape if anybody is

216
00:08:17,840 --> 00:08:19,599
familiar with those

217
00:08:19,599 --> 00:08:22,000
i simply traverse to the system 32

218
00:08:22,000 --> 00:08:25,360
directory where i could hit cmd.exe

219
00:08:25,360 --> 00:08:27,680
then i copied over a meterpreter payload

220
00:08:27,680 --> 00:08:29,280
where i could then run it and have it

221
00:08:29,280 --> 00:08:32,240
connect back to a c2 which i controlled

222
00:08:32,240 --> 00:08:35,599
then i set up a local forward from my c2

223
00:08:35,599 --> 00:08:36,799
to the

224
00:08:36,799 --> 00:08:40,320
target celebrate device for the port 445

225
00:08:40,320 --> 00:08:42,799
so that i could deliver eternal blue

226
00:08:42,799 --> 00:08:45,680
and escalate to system privilege

227
00:08:45,680 --> 00:08:48,399
from here i simply added myself a local

228
00:08:48,399 --> 00:08:50,720
administrator user that i could log into

229
00:08:50,720 --> 00:08:55,240
and i was able to continue from there

230
00:08:56,720 --> 00:08:58,640
so the ufed software does have some

231
00:08:58,640 --> 00:09:01,040
anti-debugging features compiled in you

232
00:09:01,040 --> 00:09:03,040
can see on the right hand side the

233
00:09:03,040 --> 00:09:05,200
themed error message that you receive

234
00:09:05,200 --> 00:09:06,800
when you launch the application and the

235
00:09:06,800 --> 00:09:09,120
debugger is also running

236
00:09:09,120 --> 00:09:11,120
those familiar with the media know it

237
00:09:11,120 --> 00:09:12,880
can be a pretty tough battle

238
00:09:12,880 --> 00:09:14,640
i didn't do anything original in this

239
00:09:14,640 --> 00:09:17,120
case i just read what was implemented by

240
00:09:17,120 --> 00:09:21,200
others before me and use that

241
00:09:21,360 --> 00:09:23,279
the combination of

242
00:09:23,279 --> 00:09:26,560
plugins i was able to bypass the

243
00:09:26,560 --> 00:09:28,320
debugger detection

244
00:09:28,320 --> 00:09:29,920
mid screen you'll see

245
00:09:29,920 --> 00:09:32,080
a cheap motorola phone attached to the

246
00:09:32,080 --> 00:09:34,560
celebrity console powered by a smd

247
00:09:34,560 --> 00:09:37,120
rework station with some

248
00:09:37,120 --> 00:09:38,800
duct tape to hold the power connectors

249
00:09:38,800 --> 00:09:40,240
in

250
00:09:40,240 --> 00:09:41,360
the

251
00:09:41,360 --> 00:09:43,839
debugger is ollie debug it's sitting at

252
00:09:43,839 --> 00:09:46,240
a break point on the shot 256 function

253
00:09:46,240 --> 00:09:48,000
from common dll

254
00:09:48,000 --> 00:09:49,760
and i've used

255
00:09:49,760 --> 00:09:52,800
olliescript to help dump

256
00:09:52,800 --> 00:09:53,680
the

257
00:09:53,680 --> 00:09:56,160
file and packing dlls rebuild the import

258
00:09:56,160 --> 00:09:58,720
address tables as well as other plugins

259
00:09:58,720 --> 00:10:01,360
like strong od and phantom to help hide

260
00:10:01,360 --> 00:10:05,399
the process the debugger process

261
00:10:07,200 --> 00:10:10,720
so i'm not the first person to break epr

262
00:10:10,720 --> 00:10:13,200
it was first broken in 2017 by somebody

263
00:10:13,200 --> 00:10:16,240
associated with a hack against celebrity

264
00:10:16,240 --> 00:10:18,399
i didn't realize the epr had

265
00:10:18,399 --> 00:10:20,399
already been broken until after i had

266
00:10:20,399 --> 00:10:21,839
finished breaking the first version

267
00:10:21,839 --> 00:10:22,959
myself

268
00:10:22,959 --> 00:10:25,120
uh the experience breaking it myself

269
00:10:25,120 --> 00:10:27,279
though was pretty invaluable as version

270
00:10:27,279 --> 00:10:29,200
2 was similar but slightly more

271
00:10:29,200 --> 00:10:30,720
difficult

272
00:10:30,720 --> 00:10:33,040
it slowly progressed over the years but

273
00:10:33,040 --> 00:10:34,480
they're at a point now where the

274
00:10:34,480 --> 00:10:36,560
architecture they have chosen has given

275
00:10:36,560 --> 00:10:38,480
them very limited options on what

276
00:10:38,480 --> 00:10:40,079
additional measures they can take in the

277
00:10:40,079 --> 00:10:43,279
future so i don't suspect this will be

278
00:10:43,279 --> 00:10:45,600
unbreakable anytime soon

279
00:10:45,600 --> 00:10:47,920
but within these archives they're just

280
00:10:47,920 --> 00:10:50,720
zip files once you decrypt them

281
00:10:50,720 --> 00:10:51,680
and

282
00:10:51,680 --> 00:10:53,519
they have some some of their their

283
00:10:53,519 --> 00:10:56,480
hacker goodies in there

284
00:10:56,880 --> 00:10:58,640
so a little bit of background

285
00:10:58,640 --> 00:11:02,880
these are aes 256 cbc encrypted archives

286
00:11:02,880 --> 00:11:05,600
each vendor has their own archive things

287
00:11:05,600 --> 00:11:07,360
that apply generically are stored

288
00:11:07,360 --> 00:11:08,320
together

289
00:11:08,320 --> 00:11:10,959
the decryption process happens in memory

290
00:11:10,959 --> 00:11:13,440
it doesn't rely on a standard library

291
00:11:13,440 --> 00:11:15,519
and i tried two different approaches

292
00:11:15,519 --> 00:11:17,120
only one of which i had real success

293
00:11:17,120 --> 00:11:18,240
with

294
00:11:18,240 --> 00:11:19,839
i tried hooking directly into their

295
00:11:19,839 --> 00:11:21,519
libraries and making calls to the

296
00:11:21,519 --> 00:11:23,760
relevant functions and it started to

297
00:11:23,760 --> 00:11:26,480
work but i wasn't making enough ground

298
00:11:26,480 --> 00:11:29,120
so i moved to simply attaching to the

299
00:11:29,120 --> 00:11:31,200
process with the debugger and observing

300
00:11:31,200 --> 00:11:33,839
what was going on in assembly and memory

301
00:11:33,839 --> 00:11:35,920
and then recreating that same process

302
00:11:35,920 --> 00:11:38,319
outside

303
00:11:40,480 --> 00:11:41,440
um

304
00:11:41,440 --> 00:11:43,200
so uh

305
00:11:43,200 --> 00:11:45,920
with the first version a shot 256 hash

306
00:11:45,920 --> 00:11:47,040
of a string

307
00:11:47,040 --> 00:11:49,360
is immediately identifiable it's hard

308
00:11:49,360 --> 00:11:53,279
coded inside of the decryption dll

309
00:11:54,560 --> 00:11:55,839
there's a header that you can also

310
00:11:55,839 --> 00:11:59,040
discard um basically byte 22

311
00:11:59,040 --> 00:12:00,480
everything after that is the actual

312
00:12:00,480 --> 00:12:02,639
encrypted cipher text and everything

313
00:12:02,639 --> 00:12:05,519
before that is a header you can kind of

314
00:12:05,519 --> 00:12:07,839
ignore everything before that

315
00:12:07,839 --> 00:12:11,600
byte 22 goes away in the next version

316
00:12:11,600 --> 00:12:13,680
for version 2 we start with an encrypted

317
00:12:13,680 --> 00:12:16,160
header and use an aes key and iv that is

318
00:12:16,160 --> 00:12:18,240
hard coded in the unpacking dll to

319
00:12:18,240 --> 00:12:19,360
decrypt it

320
00:12:19,360 --> 00:12:21,680
the first envelope is open now josh

321
00:12:21,680 --> 00:12:23,200
hardin a colleague of mine helped

322
00:12:23,200 --> 00:12:25,279
reverse some of the second envelope for

323
00:12:25,279 --> 00:12:26,800
this one we have

324
00:12:26,800 --> 00:12:29,519
two or we xor two d words together which

325
00:12:29,519 --> 00:12:33,040
produces the ending d word of a sha-256

326
00:12:33,040 --> 00:12:35,680
i use this d word to find the sha-256

327
00:12:35,680 --> 00:12:38,320
hash from within the unpacking dll and

328
00:12:38,320 --> 00:12:40,160
the next iv is taken from the file

329
00:12:40,160 --> 00:12:41,440
header

330
00:12:41,440 --> 00:12:44,000
the second envelope is open now and

331
00:12:44,000 --> 00:12:46,240
third envelope can then be opened where

332
00:12:46,240 --> 00:12:48,720
the final key material resides

333
00:12:48,720 --> 00:12:50,639
using this key material everything after

334
00:12:50,639 --> 00:12:54,760
byte 128 can be decrypted in blocks of

335
00:12:54,760 --> 00:12:57,600
65536 producing a valid zip file at the

336
00:12:57,600 --> 00:12:59,839
end

337
00:13:02,000 --> 00:13:04,240
so version 3 is the same as version 2

338
00:13:04,240 --> 00:13:06,000
for the most part with the bytes used to

339
00:13:06,000 --> 00:13:07,760
derive subsequent keys having been

340
00:13:07,760 --> 00:13:08,880
updated

341
00:13:08,880 --> 00:13:10,560
i believe their approach going forward

342
00:13:10,560 --> 00:13:13,120
will be to rotate these bytes with each

343
00:13:13,120 --> 00:13:14,800
new release

344
00:13:14,800 --> 00:13:16,639
this would require someone to reverse

345
00:13:16,639 --> 00:13:18,800
engineer the correct bytemap each

346
00:13:18,800 --> 00:13:20,880
release or develop an automated method

347
00:13:20,880 --> 00:13:23,439
to do so

348
00:13:24,320 --> 00:13:26,240
here's a screenshot of the decrypter

349
00:13:26,240 --> 00:13:28,079
that i've written and released

350
00:13:28,079 --> 00:13:30,720
you'll notice the key material is not

351
00:13:30,720 --> 00:13:33,440
shown and has not been publicly released

352
00:13:33,440 --> 00:13:35,279
my goal is not to give everyone blanket

353
00:13:35,279 --> 00:13:37,279
access to these resources but to provide

354
00:13:37,279 --> 00:13:39,519
proof that these problems do exist and

355
00:13:39,519 --> 00:13:41,040
we should be talking about them more

356
00:13:41,040 --> 00:13:42,480
openly

357
00:13:42,480 --> 00:13:44,480
i think the content of these archives is

358
00:13:44,480 --> 00:13:46,800
just as important though and we'll talk

359
00:13:46,800 --> 00:13:49,839
about that also

360
00:13:50,639 --> 00:13:52,800
so what do you get

361
00:13:52,800 --> 00:13:54,320
one of the things you get is a post

362
00:13:54,320 --> 00:13:57,760
exploitation toolkit called knockout ng

363
00:13:57,760 --> 00:14:00,160
this is heavily relied on this tool

364
00:14:00,160 --> 00:14:02,639
facili facilitates different types of

365
00:14:02,639 --> 00:14:04,880
device access for the user

366
00:14:04,880 --> 00:14:06,160
for example

367
00:14:06,160 --> 00:14:08,480
you can use knockout ng to build an

368
00:14:08,480 --> 00:14:10,560
image that will load adb with no

369
00:14:10,560 --> 00:14:12,959
authentication requirements you can use

370
00:14:12,959 --> 00:14:14,880
it to run automated reading of the

371
00:14:14,880 --> 00:14:16,639
device's file system

372
00:14:16,639 --> 00:14:18,160
or you can use it to remove

373
00:14:18,160 --> 00:14:20,240
authentication or run attacks against

374
00:14:20,240 --> 00:14:22,240
encrypted partitions

375
00:14:22,240 --> 00:14:24,399
for example on the right we have a

376
00:14:24,399 --> 00:14:27,040
function from the binary brute force

377
00:14:27,040 --> 00:14:29,680
this function has a generic call to the

378
00:14:29,680 --> 00:14:32,560
kmtz run command function

379
00:14:32,560 --> 00:14:34,480
nested in a while loop which iterates

380
00:14:34,480 --> 00:14:36,480
over a password dictionary

381
00:14:36,480 --> 00:14:38,079
an interesting limitation in this

382
00:14:38,079 --> 00:14:40,240
function

383
00:14:40,240 --> 00:14:42,079
is that when it reads the next password

384
00:14:42,079 --> 00:14:43,360
to be tested

385
00:14:43,360 --> 00:14:45,360
on line 104

386
00:14:45,360 --> 00:14:47,360
this limits the length of that password

387
00:14:47,360 --> 00:14:50,720
to 32 characters

388
00:14:52,079 --> 00:14:53,600
what about when the device is up and

389
00:14:53,600 --> 00:14:54,639
running

390
00:14:54,639 --> 00:14:57,519
apks like mr meseeks help automate the

391
00:14:57,519 --> 00:14:59,519
process of evidence collection by

392
00:14:59,519 --> 00:15:02,240
running binaries or performing tasks and

393
00:15:02,240 --> 00:15:04,160
like a good misigs it'll disappear when

394
00:15:04,160 --> 00:15:05,600
it's done

395
00:15:05,600 --> 00:15:07,760
in our case mr misig starts an

396
00:15:07,760 --> 00:15:10,800
action.delete intent on itself

397
00:15:10,800 --> 00:15:13,199
mr meeseeks is a reference to the rick

398
00:15:13,199 --> 00:15:15,600
and morty tv show episode where jerry

399
00:15:15,600 --> 00:15:18,240
has to improve his golf game and he has

400
00:15:18,240 --> 00:15:21,680
a mr meeseeks box uh that you pop and

401
00:15:21,680 --> 00:15:23,839
out comes a mr me seeks to give him some

402
00:15:23,839 --> 00:15:26,959
extra help

403
00:15:26,959 --> 00:15:28,880
perhaps even more interesting is

404
00:15:28,880 --> 00:15:31,360
alohomora alohomora is a reference to a

405
00:15:31,360 --> 00:15:33,440
magical spell and the harry potter

406
00:15:33,440 --> 00:15:36,000
series which is used to unlock locks

407
00:15:36,000 --> 00:15:37,839
it seems like a fitting name given the

408
00:15:37,839 --> 00:15:39,759
feature is designed to remove the lock

409
00:15:39,759 --> 00:15:42,000
screen from affected devices

410
00:15:42,000 --> 00:15:44,000
publicly facing this feature is called

411
00:15:44,000 --> 00:15:46,720
lockpick i don't know much about it

412
00:15:46,720 --> 00:15:48,720
it's probably the least investigated

413
00:15:48,720 --> 00:15:51,360
portion of my research and is likely to

414
00:15:51,360 --> 00:15:53,199
be one of the future

415
00:15:53,199 --> 00:15:56,160
projects down the road

416
00:15:56,560 --> 00:15:58,079
one of the biggest issues i found

417
00:15:58,079 --> 00:15:59,759
relates to adb

418
00:15:59,759 --> 00:16:01,519
some of the available extractions will

419
00:16:01,519 --> 00:16:03,920
rely on the android debug bridge

420
00:16:03,920 --> 00:16:06,560
forensic tools will often use adb to

421
00:16:06,560 --> 00:16:08,880
silo their tools or download information

422
00:16:08,880 --> 00:16:11,360
from the target device

423
00:16:11,360 --> 00:16:12,800
at least when i was working on this

424
00:16:12,800 --> 00:16:14,800
research the celebrite devices

425
00:16:14,800 --> 00:16:16,720
instructed the user to permanently

426
00:16:16,720 --> 00:16:19,199
accept the rsa keys on the devices being

427
00:16:19,199 --> 00:16:20,480
extracted

428
00:16:20,480 --> 00:16:22,560
that may or may not still be the case

429
00:16:22,560 --> 00:16:24,160
i'm not sure

430
00:16:24,160 --> 00:16:26,160
i found the private keys used for their

431
00:16:26,160 --> 00:16:28,480
adb authentication

432
00:16:28,480 --> 00:16:30,720
within hard-coded deal were hard-coded

433
00:16:30,720 --> 00:16:32,320
within dlls

434
00:16:32,320 --> 00:16:34,000
here on the right-hand side you can see

435
00:16:34,000 --> 00:16:36,399
the location to where these keys are and

436
00:16:36,399 --> 00:16:39,920
their cross references to them

437
00:16:40,720 --> 00:16:42,560
maybe i was wrong though dead code or

438
00:16:42,560 --> 00:16:44,720
something right i thought a quick and

439
00:16:44,720 --> 00:16:46,560
easy test would be to plug in some

440
00:16:46,560 --> 00:16:49,600
android phones to my celebrate devices i

441
00:16:49,600 --> 00:16:51,920
had five or six at this point and a lot

442
00:16:51,920 --> 00:16:54,480
of 40 or so motorola devices

443
00:16:54,480 --> 00:16:56,160
and see what fingerprint they gave when

444
00:16:56,160 --> 00:16:57,360
connecting

445
00:16:57,360 --> 00:16:59,519
i'm sure you can guess what happened

446
00:16:59,519 --> 00:17:02,079
they all shared the same fingerprint

447
00:17:02,079 --> 00:17:03,519
so what does that mean

448
00:17:03,519 --> 00:17:06,480
well every celebrate regardless of owner

449
00:17:06,480 --> 00:17:08,559
country government whatever you want to

450
00:17:08,559 --> 00:17:09,359
say

451
00:17:09,359 --> 00:17:11,679
they all used the same keys

452
00:17:11,679 --> 00:17:13,199
a total of three keys were found

453
00:17:13,199 --> 00:17:15,520
hard-coded in the adb client and a

454
00:17:15,520 --> 00:17:17,039
fourth key was found alongside the

455
00:17:17,039 --> 00:17:19,919
knockout ng tool

456
00:17:19,919 --> 00:17:21,760
you could get a copy of the private keys

457
00:17:21,760 --> 00:17:23,439
by hooking the right functions or just

458
00:17:23,439 --> 00:17:25,280
copying the bytes straight from the adb

459
00:17:25,280 --> 00:17:27,359
clients dll

460
00:17:27,359 --> 00:17:29,919
with the you fed ui instructing users to

461
00:17:29,919 --> 00:17:32,640
permanently trust these keys anyone with

462
00:17:32,640 --> 00:17:34,559
access to them could come back and later

463
00:17:34,559 --> 00:17:36,799
reattach to the target devices without

464
00:17:36,799 --> 00:17:38,640
needing the you fed at all and without

465
00:17:38,640 --> 00:17:42,160
any additional user prompts

466
00:17:43,919 --> 00:17:46,000
a design like this makes it possible for

467
00:17:46,000 --> 00:17:47,840
someone to plant fake evidence on a

468
00:17:47,840 --> 00:17:50,240
device with plausible attribution that

469
00:17:50,240 --> 00:17:52,160
it was a you fed having connected and

470
00:17:52,160 --> 00:17:54,160
not a malicious actor doing something

471
00:17:54,160 --> 00:17:55,440
nodding

472
00:17:55,440 --> 00:17:58,080
now it isn't just this easy an actual

473
00:17:58,080 --> 00:18:00,080
malicious actor would need to stomp on

474
00:18:00,080 --> 00:18:02,480
the file metadata to place the device in

475
00:18:02,480 --> 00:18:05,039
the possession of the target individual

476
00:18:05,039 --> 00:18:07,760
or potentially other considerations that

477
00:18:07,760 --> 00:18:10,559
would be need to be made as well

478
00:18:10,559 --> 00:18:12,559
from an operational perspective though

479
00:18:12,559 --> 00:18:14,240
the exploits you would need to make

480
00:18:14,240 --> 00:18:17,039
these changes are on the file system of

481
00:18:17,039 --> 00:18:19,440
the celebrite device and you can access

482
00:18:19,440 --> 00:18:21,679
them

483
00:18:23,679 --> 00:18:25,520
now i debated about not including these

484
00:18:25,520 --> 00:18:27,520
next slides since they're only relevant

485
00:18:27,520 --> 00:18:29,840
to the united states but i kept them in

486
00:18:29,840 --> 00:18:31,440
in the hopes that your takeaway will be

487
00:18:31,440 --> 00:18:33,440
a curiosity about how this may work in

488
00:18:33,440 --> 00:18:35,919
your own country

489
00:18:35,919 --> 00:18:37,520
so with all this in mind i started

490
00:18:37,520 --> 00:18:39,919
having other questions like regarding

491
00:18:39,919 --> 00:18:42,160
zero days should we use zero days for

492
00:18:42,160 --> 00:18:43,840
law enforcement

493
00:18:43,840 --> 00:18:45,280
well i'd be lying if i said i knew the

494
00:18:45,280 --> 00:18:47,440
right answer but i've worked with enough

495
00:18:47,440 --> 00:18:49,440
zero days to know that each we don't

496
00:18:49,440 --> 00:18:52,080
patch exposes us a little bit and

497
00:18:52,080 --> 00:18:53,919
sometimes a lot

498
00:18:53,919 --> 00:18:55,679
the exploits used to collect evidence

499
00:18:55,679 --> 00:18:57,679
from someone suspected of a murder are

500
00:18:57,679 --> 00:18:59,600
the same kind of exploits that are often

501
00:18:59,600 --> 00:19:01,840
used by a country's adversaries against

502
00:19:01,840 --> 00:19:03,679
them and they could potentially even be

503
00:19:03,679 --> 00:19:06,240
for the same vulnerabilities

504
00:19:06,240 --> 00:19:08,400
with over 50 public advisories that i

505
00:19:08,400 --> 00:19:10,960
have released it takes both both hands

506
00:19:10,960 --> 00:19:12,640
to count the number of times i've gotten

507
00:19:12,640 --> 00:19:14,640
an email from someone saying they knew

508
00:19:14,640 --> 00:19:16,240
about the vulnerability that i had just

509
00:19:16,240 --> 00:19:17,679
published

510
00:19:17,679 --> 00:19:20,240
at least in my experience the implied

511
00:19:20,240 --> 00:19:22,320
secrecy is just not nearly as effective

512
00:19:22,320 --> 00:19:25,280
as one might think it is and more often

513
00:19:25,280 --> 00:19:27,120
than not you're probably not the only

514
00:19:27,120 --> 00:19:28,720
person that knows about a particular

515
00:19:28,720 --> 00:19:30,720
vulnerability

516
00:19:30,720 --> 00:19:33,200
so how do you balance public risk versus

517
00:19:33,200 --> 00:19:35,760
reward

518
00:19:35,919 --> 00:19:38,320
i don't envy the people involved but the

519
00:19:38,320 --> 00:19:40,960
u.s does have a policy and process i

520
00:19:40,960 --> 00:19:42,960
think in and of itself has some flaws

521
00:19:42,960 --> 00:19:44,640
but we do have one

522
00:19:44,640 --> 00:19:46,320
some of the issues i see with it at

523
00:19:46,320 --> 00:19:48,880
least in my own reading is that it only

524
00:19:48,880 --> 00:19:50,799
applies to vulnerabilities discovered by

525
00:19:50,799 --> 00:19:52,400
the u.s government

526
00:19:52,400 --> 00:19:54,640
presumably when law enforcement reaches

527
00:19:54,640 --> 00:19:57,200
out to a third party like cass and they

528
00:19:57,200 --> 00:20:00,400
use exploits they keep behind the scenes

529
00:20:00,400 --> 00:20:02,720
the use of those exploits is not subject

530
00:20:02,720 --> 00:20:04,840
to the same risk for reward

531
00:20:04,840 --> 00:20:07,840
evaluation further the ones that are

532
00:20:07,840 --> 00:20:10,640
under this policy have part 2a and part

533
00:20:10,640 --> 00:20:13,200
2b of appendix b which act as a

534
00:20:13,200 --> 00:20:15,120
catch-all for continued use until

535
00:20:15,120 --> 00:20:17,200
they're no longer effective

536
00:20:17,200 --> 00:20:19,840
some exploits have lived for a decade

537
00:20:19,840 --> 00:20:21,679
that's exposed risk for everybody

538
00:20:21,679 --> 00:20:24,799
regardless if you break the law or not

539
00:20:24,799 --> 00:20:27,360
and finally we have no transparency into

540
00:20:27,360 --> 00:20:29,679
the input and output of this policy

541
00:20:29,679 --> 00:20:32,720
the executive summary is supposedly not

542
00:20:32,720 --> 00:20:35,360
classified but everything else is and

543
00:20:35,360 --> 00:20:37,039
i've been unable to find the

544
00:20:37,039 --> 00:20:39,600
unclassified summaries and trust me i've

545
00:20:39,600 --> 00:20:42,000
tried

546
00:20:44,159 --> 00:20:46,159
so i reported all of these issues to

547
00:20:46,159 --> 00:20:48,480
celebrate and although they disagreed

548
00:20:48,480 --> 00:20:50,880
with the risk they produced patches for

549
00:20:50,880 --> 00:20:52,159
all of the issues that we brought

550
00:20:52,159 --> 00:20:53,600
forward

551
00:20:53,600 --> 00:20:55,200
surely things like this should have been

552
00:20:55,200 --> 00:20:57,280
caught before though right

553
00:20:57,280 --> 00:20:59,520
why should forensic examiners in other

554
00:20:59,520 --> 00:21:01,679
countries have access to the same key

555
00:21:01,679 --> 00:21:04,320
material used to image devices

556
00:21:04,320 --> 00:21:06,640
in another country

557
00:21:06,640 --> 00:21:09,520
before our disclosure this was the case

558
00:21:09,520 --> 00:21:12,320
going back to at least march of 2016 and

559
00:21:12,320 --> 00:21:14,480
in all reality probably earlier than

560
00:21:14,480 --> 00:21:15,679
that

561
00:21:15,679 --> 00:21:17,840
this got me wondering whether or not

562
00:21:17,840 --> 00:21:20,400
tools like these have to comply with any

563
00:21:20,400 --> 00:21:21,919
sort of minimum standards or

564
00:21:21,919 --> 00:21:24,400
accreditation process and the short

565
00:21:24,400 --> 00:21:26,400
answer is they don't

566
00:21:26,400 --> 00:21:28,480
we do have the cftt

567
00:21:28,480 --> 00:21:32,240
the cftt is a testing program from nist

568
00:21:32,240 --> 00:21:33,039
that

569
00:21:33,039 --> 00:21:35,360
validates that tools function as their

570
00:21:35,360 --> 00:21:37,200
features describe

571
00:21:37,200 --> 00:21:40,000
that is if a forensic tool is being

572
00:21:40,000 --> 00:21:42,640
marketed as able to extract instagram

573
00:21:42,640 --> 00:21:45,120
messages from a samsung 10 running

574
00:21:45,120 --> 00:21:46,559
android 11

575
00:21:46,559 --> 00:21:48,640
they'll build a test case that validates

576
00:21:48,640 --> 00:21:50,000
this

577
00:21:50,000 --> 00:21:51,760
nothing in their methodology though

578
00:21:51,760 --> 00:21:53,919
calls for the type of testing that we've

579
00:21:53,919 --> 00:21:56,000
talked about today i would call it

580
00:21:56,000 --> 00:21:58,480
adversarial testing

581
00:21:58,480 --> 00:22:00,720
the cftt does seem like a great

582
00:22:00,720 --> 00:22:02,960
framework to extend this type of testing

583
00:22:02,960 --> 00:22:04,240
into though

584
00:22:04,240 --> 00:22:06,960
it produces valid findings as it is

585
00:22:06,960 --> 00:22:09,280
today and extending it while also

586
00:22:09,280 --> 00:22:11,919
adopting legislation that requires tools

587
00:22:11,919 --> 00:22:14,720
like these to undergo and pass tests

588
00:22:14,720 --> 00:22:17,600
including the type of adversarial tests

589
00:22:17,600 --> 00:22:19,360
we've talked about today

590
00:22:19,360 --> 00:22:21,360
would provide the ability to regulate

591
00:22:21,360 --> 00:22:24,400
and enforce standards on these tools

592
00:22:24,400 --> 00:22:26,320
i think that's good for everybody i

593
00:22:26,320 --> 00:22:28,640
think it's good for from everyone from a

594
00:22:28,640 --> 00:22:30,640
forensic analyst and prosecutors who

595
00:22:30,640 --> 00:22:33,440
rely on these tools to gather evidence

596
00:22:33,440 --> 00:22:35,280
all the way to someone who has been

597
00:22:35,280 --> 00:22:39,000
accused of a crime

598
00:22:40,000 --> 00:22:42,480
i also believe the way that any process

599
00:22:42,480 --> 00:22:44,400
is implemented to acquire forensic

600
00:22:44,400 --> 00:22:46,559
evidence should be publicly known and

601
00:22:46,559 --> 00:22:49,039
freely available for scrutiny

602
00:22:49,039 --> 00:22:51,840
in a fair system of justice the accused

603
00:22:51,840 --> 00:22:53,600
should have a right to confront their

604
00:22:53,600 --> 00:22:54,720
accusers

605
00:22:54,720 --> 00:22:56,559
and that should extend to information

606
00:22:56,559 --> 00:22:58,799
about the way data are gathered for use

607
00:22:58,799 --> 00:23:01,039
in criminal investigations

608
00:23:01,039 --> 00:23:03,200
the core issue is that every citizen

609
00:23:03,200 --> 00:23:05,280
should have the right to cross-examine

610
00:23:05,280 --> 00:23:08,080
the evidence acquired the origin of the

611
00:23:08,080 --> 00:23:10,159
process used to acquire it the

612
00:23:10,159 --> 00:23:13,280
acquisition process itself how acquired

613
00:23:13,280 --> 00:23:16,480
data were processed or analyzed and how

614
00:23:16,480 --> 00:23:18,320
any conclusions were drawn from those

615
00:23:18,320 --> 00:23:19,919
efforts

616
00:23:19,919 --> 00:23:22,640
it's my opinion that our community

617
00:23:22,640 --> 00:23:26,080
should be advocating for transparency

618
00:23:26,080 --> 00:23:28,880
open source solutions and legislative

619
00:23:28,880 --> 00:23:30,880
policies designed to strike an

620
00:23:30,880 --> 00:23:33,200
appropriate balance between human rights

621
00:23:33,200 --> 00:23:35,679
and the needs of law enforcement while

622
00:23:35,679 --> 00:23:38,480
also respecting national security

623
00:23:38,480 --> 00:23:41,600
basically any government agency not part

624
00:23:41,600 --> 00:23:43,840
of the military acting in defense of the

625
00:23:43,840 --> 00:23:46,480
nation should be required to disclose

626
00:23:46,480 --> 00:23:48,559
vulnerabilities identified or used in

627
00:23:48,559 --> 00:23:50,559
criminal investigations

628
00:23:50,559 --> 00:23:52,880
using industry recognized procedures and

629
00:23:52,880 --> 00:23:55,120
standards

630
00:23:55,120 --> 00:23:56,799
we're at least starting to see some

631
00:23:56,799 --> 00:23:59,600
courts requiring disclosure relating to

632
00:23:59,600 --> 00:24:01,520
technologies used in criminal

633
00:24:01,520 --> 00:24:04,000
investigations and i'm hopeful this is a

634
00:24:04,000 --> 00:24:07,200
trend we see continue

635
00:24:09,039 --> 00:24:11,520
so occasionally i see questions like um

636
00:24:11,520 --> 00:24:14,080
can i defend against celebrate and i

637
00:24:14,080 --> 00:24:16,559
like a challenge so the answer is yes

638
00:24:16,559 --> 00:24:18,799
but also very much no

639
00:24:18,799 --> 00:24:21,840
the easiest to deploy defenses are while

640
00:24:21,840 --> 00:24:24,240
the android os is running and i wrote an

641
00:24:24,240 --> 00:24:26,159
example of how that could work

642
00:24:26,159 --> 00:24:28,080
generally speaking though i wouldn't run

643
00:24:28,080 --> 00:24:30,400
anything like lockup and expect to be

644
00:24:30,400 --> 00:24:32,640
safe from forensics tools as that's

645
00:24:32,640 --> 00:24:34,799
unlikely to be the case

646
00:24:34,799 --> 00:24:36,799
lockup specifically is a user land

647
00:24:36,799 --> 00:24:39,520
application and a proof of concept it's

648
00:24:39,520 --> 00:24:42,000
designed to fail open makes no attempt

649
00:24:42,000 --> 00:24:43,279
to hide itself

650
00:24:43,279 --> 00:24:44,880
and is only meant to show that some

651
00:24:44,880 --> 00:24:46,400
defenses are possible

652
00:24:46,400 --> 00:24:48,720
not to provide them in depth

653
00:24:48,720 --> 00:24:50,960
the concept does not require root

654
00:24:50,960 --> 00:24:52,960
privilege but does require the device

655
00:24:52,960 --> 00:24:54,400
admin privilege

656
00:24:54,400 --> 00:24:56,159
it will start on boot and attempt to

657
00:24:56,159 --> 00:24:57,760
defend itself against some of the

658
00:24:57,760 --> 00:25:00,159
techniques used by the you fed very much

659
00:25:00,159 --> 00:25:02,640
dependent upon the extraction type and

660
00:25:02,640 --> 00:25:06,080
what device you've installed it on

661
00:25:06,880 --> 00:25:08,960
so how does it work

662
00:25:08,960 --> 00:25:10,880
the application registers to receive

663
00:25:10,880 --> 00:25:13,200
broadcasts that can be used to influence

664
00:25:13,200 --> 00:25:15,919
what checks are performed and when

665
00:25:15,919 --> 00:25:18,720
in the case of mr meeseeks for example a

666
00:25:18,720 --> 00:25:20,960
broadcast is sent when any application

667
00:25:20,960 --> 00:25:23,200
is installed and that's received by

668
00:25:23,200 --> 00:25:24,320
lockup

669
00:25:24,320 --> 00:25:27,360
lockup will check the sha-256 hash and

670
00:25:27,360 --> 00:25:30,000
other certificate characteristics of the

671
00:25:30,000 --> 00:25:32,320
applications certificate

672
00:25:32,320 --> 00:25:34,960
against known malicious applications and

673
00:25:34,960 --> 00:25:37,440
if it ever found then the a call to

674
00:25:37,440 --> 00:25:40,159
factory reset the device occurs

675
00:25:40,159 --> 00:25:41,919
this is also true for exploits and

676
00:25:41,919 --> 00:25:43,840
binaries that copy on to the device as

677
00:25:43,840 --> 00:25:45,200
well

678
00:25:45,200 --> 00:25:47,919
lockup also lets you set a plausibility

679
00:25:47,919 --> 00:25:50,000
a possible deniability password through

680
00:25:50,000 --> 00:25:52,640
the user accessibility service

681
00:25:52,640 --> 00:25:54,799
when this service is enabled the lock

682
00:25:54,799 --> 00:25:56,799
screen will leak one character of your

683
00:25:56,799 --> 00:25:58,960
password at a time and lockup can

684
00:25:58,960 --> 00:26:01,919
register to receive these keystrokes

685
00:26:01,919 --> 00:26:03,919
having an application receive your

686
00:26:03,919 --> 00:26:06,000
keystrokes is also a good reason not to

687
00:26:06,000 --> 00:26:07,520
run an application

688
00:26:07,520 --> 00:26:09,919
and so it's optional and disabled by

689
00:26:09,919 --> 00:26:11,120
default

690
00:26:11,120 --> 00:26:13,120
i'll say it one more time

691
00:26:13,120 --> 00:26:15,600
don't run a lockup on your actual device

692
00:26:15,600 --> 00:26:18,799
let's check out a demo though

693
00:26:20,000 --> 00:26:22,400
so here we see lockup's user interface

694
00:26:22,400 --> 00:26:25,039
and is connected to the celebrity it's a

695
00:26:25,039 --> 00:26:27,919
rather old install of android and here

696
00:26:27,919 --> 00:26:30,159
we're at the emergency screen and we're

697
00:26:30,159 --> 00:26:31,679
performing a file system based

698
00:26:31,679 --> 00:26:34,960
extraction to a removable drive

699
00:26:34,960 --> 00:26:38,159
the adb client will then connect to the

700
00:26:38,159 --> 00:26:40,960
adb daemon on the target device

701
00:26:40,960 --> 00:26:41,760
the

702
00:26:41,760 --> 00:26:43,760
it'll instruct you to always accept the

703
00:26:43,760 --> 00:26:44,960
key

704
00:26:44,960 --> 00:26:47,360
you hit ok and now the celebrate is

705
00:26:47,360 --> 00:26:49,120
connecting to pull some information that

706
00:26:49,120 --> 00:26:52,159
it will use to decide what to do next

707
00:26:52,159 --> 00:26:54,720
and now it's decided and is installing

708
00:26:54,720 --> 00:26:57,120
applications and copying things over to

709
00:26:57,120 --> 00:26:58,240
the device

710
00:26:58,240 --> 00:27:01,440
which has been detected now and a lockup

711
00:27:01,440 --> 00:27:03,760
then sent a command to

712
00:27:03,760 --> 00:27:07,279
factory reset the device uh and and now

713
00:27:07,279 --> 00:27:09,120
it's this the

714
00:27:09,120 --> 00:27:11,120
demo is over

715
00:27:11,120 --> 00:27:14,239
um all right so

716
00:27:17,679 --> 00:27:21,760
um a slightly better way patching aosp

717
00:27:21,760 --> 00:27:23,840
seems like a better way to go

718
00:27:23,840 --> 00:27:26,000
something that you simply can't easily

719
00:27:26,000 --> 00:27:28,159
remove as in the case of lock up you can

720
00:27:28,159 --> 00:27:30,880
just uninstall it before you begin to

721
00:27:30,880 --> 00:27:32,799
image your device

722
00:27:32,799 --> 00:27:35,360
and then the checks no longer apply and

723
00:27:35,360 --> 00:27:37,600
you're good to go um so i wanted to have

724
00:27:37,600 --> 00:27:40,480
something that wasn't as easy to remove

725
00:27:40,480 --> 00:27:42,960
so i forked lineage os

726
00:27:42,960 --> 00:27:44,720
um and i've been working on a set of

727
00:27:44,720 --> 00:27:48,799
patches um in my spare time but i'm by

728
00:27:48,799 --> 00:27:51,919
no means a seasoned android developer

729
00:27:51,919 --> 00:27:54,240
um so during this talk if any of you

730
00:27:54,240 --> 00:27:56,240
have had the thought there's a way

731
00:27:56,240 --> 00:27:59,520
better way to do this uh sweet um you're

732
00:27:59,520 --> 00:28:01,440
part of the reason why i submitted to

733
00:28:01,440 --> 00:28:02,880
this conference

734
00:28:02,880 --> 00:28:05,919
these are the areas of the of aosp that

735
00:28:05,919 --> 00:28:07,840
i've decided to patch

736
00:28:07,840 --> 00:28:09,760
but i'd be really curious to hear from

737
00:28:09,760 --> 00:28:11,919
anyone else if you have other ideas of

738
00:28:11,919 --> 00:28:13,679
different methods that can be used or

739
00:28:13,679 --> 00:28:15,520
different locations that we can apply

740
00:28:15,520 --> 00:28:18,080
patches in that kind of thing i'm very

741
00:28:18,080 --> 00:28:20,000
interested to hear that and my contact

742
00:28:20,000 --> 00:28:23,919
information is at the end of the slides

743
00:28:25,120 --> 00:28:27,039
so with as many disclosures as i've had

744
00:28:27,039 --> 00:28:28,880
i still wasn't really sure what to

745
00:28:28,880 --> 00:28:31,360
expect worst case i figured they'd try

746
00:28:31,360 --> 00:28:33,679
to stop the disclosure and

747
00:28:33,679 --> 00:28:36,240
oops i've wound up with a fbi party van

748
00:28:36,240 --> 00:28:37,840
outside my house and

749
00:28:37,840 --> 00:28:40,480
some maybe understandably angry exploit

750
00:28:40,480 --> 00:28:42,720
developers at my gateway

751
00:28:42,720 --> 00:28:45,679
well the reality wasn't quite that um

752
00:28:45,679 --> 00:28:47,760
they were the people at celebrate were

753
00:28:47,760 --> 00:28:49,760
very friendly and they worked to address

754
00:28:49,760 --> 00:28:51,840
the issues in a timely way

755
00:28:51,840 --> 00:28:53,200
i certainly wouldn't be afraid to

756
00:28:53,200 --> 00:28:54,640
disclose

757
00:28:54,640 --> 00:28:56,240
other issues that i come across to them

758
00:28:56,240 --> 00:28:57,360
again

759
00:28:57,360 --> 00:29:00,240
they they were a decent group of people

760
00:29:00,240 --> 00:29:02,799
um i also ended up getting nominated for

761
00:29:02,799 --> 00:29:05,760
some ponies um i got a couple cves

762
00:29:05,760 --> 00:29:08,880
issued for this and um also i was able

763
00:29:08,880 --> 00:29:10,799
to present for you folks here today so

764
00:29:10,799 --> 00:29:12,080
all in all i think it was a good

765
00:29:12,080 --> 00:29:14,080
research process

766
00:29:14,080 --> 00:29:14,799
and

767
00:29:14,799 --> 00:29:18,080
i was i was quite happy with it

768
00:29:18,640 --> 00:29:20,080
some of the future work i'll probably

769
00:29:20,080 --> 00:29:22,880
look into includes alohomora

770
00:29:22,880 --> 00:29:25,200
that was easily the least researched

771
00:29:25,200 --> 00:29:26,799
part of

772
00:29:26,799 --> 00:29:29,760
everything that i looked into so far

773
00:29:29,760 --> 00:29:32,559
i also have some ideas on how to detect

774
00:29:32,559 --> 00:29:34,799
and respond to the automated device

775
00:29:34,799 --> 00:29:36,799
detection feature that the ufed relies

776
00:29:36,799 --> 00:29:39,120
on when you plug it in the first thing

777
00:29:39,120 --> 00:29:40,960
that it tries to do is automatically

778
00:29:40,960 --> 00:29:42,799
identify what phone it's talking to and

779
00:29:42,799 --> 00:29:44,640
it has a particular algorithm that it

780
00:29:44,640 --> 00:29:47,120
goes through when doing that

781
00:29:47,120 --> 00:29:49,120
i also have equipment from a few other

782
00:29:49,120 --> 00:29:50,480
players in the market that i'll

783
00:29:50,480 --> 00:29:52,799
eventually open up and i'm always

784
00:29:52,799 --> 00:29:54,480
interested to hear if you have access to

785
00:29:54,480 --> 00:29:57,120
them as well

786
00:29:59,039 --> 00:30:02,000
so advisories are in the qr code

787
00:30:02,000 --> 00:30:03,200
thank you to everybody who helped make

788
00:30:03,200 --> 00:30:04,640
the research public

789
00:30:04,640 --> 00:30:07,200
celebrate the corelogic vulnerability

790
00:30:07,200 --> 00:30:09,120
disclosure board

791
00:30:09,120 --> 00:30:11,200
real special thanks to derek brown and

792
00:30:11,200 --> 00:30:12,559
hank

793
00:30:12,559 --> 00:30:15,039
josh hardin and clayton monroe

794
00:30:15,039 --> 00:30:16,480
they really went out of their way to

795
00:30:16,480 --> 00:30:18,000
help with the disclosure process and

796
00:30:18,000 --> 00:30:20,720
kind of getting things pushed through

797
00:30:20,720 --> 00:30:22,240
if you have any questions you can find

798
00:30:22,240 --> 00:30:25,760
me on efnet freenode netgarage or worst

799
00:30:25,760 --> 00:30:28,240
case level at corelogic.com thank you

800
00:30:28,240 --> 00:30:31,799
everybody for your time

