1
00:00:00,030 --> 00:00:05,730
so thank you<font color="#CCCCCC"> all for coming</font><font color="#E5E5E5"> today</font><font color="#CCCCCC"> I'll</font>

2
00:00:02,760 --> 00:00:07,798
be talking about<font color="#CCCCCC"> machi mal</font><font color="#E5E5E5"> an automated</font>

3
00:00:05,730 --> 00:00:12,870
framework<font color="#E5E5E5"> form of malware hunting</font><font color="#CCCCCC"> and</font>

4
00:00:07,799 --> 00:00:15,929
fun from<font color="#CCCCCC"> spy laps</font><font color="#E5E5E5"> so reason why we</font>

5
00:00:12,870 --> 00:00:18,150
<font color="#E5E5E5">implemented map a mal we see that</font><font color="#CCCCCC"> Makos</font>

6
00:00:15,929 --> 00:00:20,340
<font color="#CCCCCC">Maquis share is increasing</font><font color="#E5E5E5"> it made up</font>

7
00:00:18,150 --> 00:00:23,698
<font color="#E5E5E5">about</font><font color="#CCCCCC"> 9 percent</font><font color="#E5E5E5"> in total operating</font>

8
00:00:20,340 --> 00:00:27,060
system share<font color="#E5E5E5"> and there's an increasing</font>

9
00:00:23,699 --> 00:00:30,810
<font color="#CCCCCC">number of new malware it has grown</font><font color="#E5E5E5"> seven</font>

10
00:00:27,060 --> 00:00:35,640
<font color="#E5E5E5">hundred percent 2016 and more than</font><font color="#CCCCCC"> seven</font>

11
00:00:30,810 --> 00:00:38,519
<font color="#CCCCCC">hundred thousand instances</font><font color="#E5E5E5"> in 2017 also</font>

12
00:00:35,640 --> 00:00:40,800
increasing complexity of<font color="#CCCCCC"> muck threats we</font>

13
00:00:38,520 --> 00:00:42,600
already heard on the news that there<font color="#E5E5E5"> are</font>

14
00:00:40,800 --> 00:00:45,899
more<font color="#E5E5E5"> and more advanced persistent threat</font>

15
00:00:42,600 --> 00:00:48,899
<font color="#E5E5E5">evasive malware on Mac and even runs</font>

16
00:00:45,899 --> 00:00:51,809
somewhere on Mac<font color="#E5E5E5"> and there's a lot of</font>

17
00:00:48,899 --> 00:00:54,750
<font color="#E5E5E5">automated solution done for more hunting</font>

18
00:00:51,809 --> 00:00:57,690
on Windows or<font color="#E5E5E5"> Linux and even Android but</font>

19
00:00:54,750 --> 00:00:59,969
nobody ever talks about Mac and common

20
00:00:57,690 --> 00:01:01,800
techniques to analyze malware<font color="#CCCCCC"> using</font>

21
00:00:59,969 --> 00:01:05,220
sandbox technology are not<font color="#E5E5E5"> well</font>

22
00:01:01,800 --> 00:01:08,548
developed on Mac coach<font color="#E5E5E5"> and therefore it</font>

23
00:01:05,220 --> 00:01:11,789
motivates us<font color="#CCCCCC"> to develop a modern malware</font>

24
00:01:08,549 --> 00:01:14,850
analysis framework on<font color="#E5E5E5"> Mac and our</font>

25
00:01:11,790 --> 00:01:18,110
solution is to automate as much<font color="#E5E5E5"> as the</font>

26
00:01:14,850 --> 00:01:21,449
interactive analysis as possible<font color="#E5E5E5"> and</font>

27
00:01:18,110 --> 00:01:23,810
produce analysis reports describing

28
00:01:21,450 --> 00:01:27,119
<font color="#E5E5E5">exactly what it does when it run and</font>

29
00:01:23,810 --> 00:01:30,470
specifically<font color="#E5E5E5"> allow us to perform detail</font>

30
00:01:27,119 --> 00:01:34,799
analysis without any<font color="#E5E5E5"> human interaction</font>

31
00:01:30,470 --> 00:01:38,460
so common malware analytics technique

32
00:01:34,799 --> 00:01:40,880
for<font color="#E5E5E5"> Mac are static</font><font color="#CCCCCC"> aziz and dynamic aziz</font>

33
00:01:38,460 --> 00:01:43,589
however signature based approaches

34
00:01:40,880 --> 00:01:46,649
shortcomings<font color="#E5E5E5"> given the quality and</font>

35
00:01:43,590 --> 00:01:49,619
quantity<font color="#E5E5E5"> of today's malware and hybrid</font>

36
00:01:46,649 --> 00:01:52,920
<font color="#E5E5E5">energies are widely accepted solution to</font>

37
00:01:49,619 --> 00:01:56,310
cope with the issue and we evaluated<font color="#E5E5E5"> a</font>

38
00:01:52,920 --> 00:01:59,130
number of malware analysis solution such

39
00:01:56,310 --> 00:02:02,939
as<font color="#CCCCCC"> cuckoo sandbox virus</font><font color="#E5E5E5"> total episode</font>

40
00:01:59,130 --> 00:02:05,339
box for I met ammonia and eventually we

41
00:02:02,939 --> 00:02:07,500
chose cuckoo sandbox where cuckoo

42
00:02:05,340 --> 00:02:10,590
sandbox<font color="#E5E5E5"> is an open source</font><font color="#CCCCCC"> software for</font>

43
00:02:07,500 --> 00:02:13,430
automating analysis of suspicious files

44
00:02:10,590 --> 00:02:15,500
and it is modular<font color="#E5E5E5"> component</font>

45
00:02:13,430 --> 00:02:18,379
<font color="#E5E5E5">to monitor</font><font color="#CCCCCC"> the behavior of malicious</font>

46
00:02:15,500 --> 00:02:22,519
process while running in an isolated

47
00:02:18,379 --> 00:02:25,280
environment<font color="#E5E5E5"> so the very first</font><font color="#CCCCCC"> thing is</font>

48
00:02:22,519 --> 00:02:27,799
static analysis we implemented that

49
00:02:25,280 --> 00:02:30,379
<font color="#E5E5E5">feature by gathering feature</font><font color="#CCCCCC"> information</font>

50
00:02:27,799 --> 00:02:33,980
from mojo binary just<font color="#CCCCCC"> similar to other</font>

51
00:02:30,379 --> 00:02:36,739
binary<font color="#E5E5E5"> molasses platform so we gather</font>

52
00:02:33,980 --> 00:02:39,548
the<font color="#E5E5E5"> he</font><font color="#CCCCCC"> Delphi code data segment</font><font color="#E5E5E5"> shared</font>

53
00:02:36,739 --> 00:02:42,260
library load commands and see multiple

54
00:02:39,549 --> 00:02:44,629
<font color="#CCCCCC">for each of the</font><font color="#E5E5E5"> segments in</font><font color="#CCCCCC"> March binary</font>

55
00:02:42,260 --> 00:02:47,239
we extract information about the section

56
00:02:44,629 --> 00:02:50,899
and then we calculate<font color="#CCCCCC"> the segment</font>

57
00:02:47,239 --> 00:02:54,230
entropy to detect<font color="#E5E5E5"> pack or encrypted</font>

58
00:02:50,900 --> 00:02:56,629
<font color="#CCCCCC">assets and another information collected</font>

59
00:02:54,230 --> 00:02:58,939
and potentially significant for Annalise

60
00:02:56,629 --> 00:03:01,429
is the code signing certificate which

61
00:02:58,939 --> 00:03:04,280
can lead a malware<font color="#E5E5E5"> to an indicator of</font>

62
00:03:01,430 --> 00:03:06,739
<font color="#E5E5E5">compromise</font><font color="#CCCCCC"> and it would be</font><font color="#E5E5E5"> very helpful</font>

63
00:03:04,280 --> 00:03:10,310
<font color="#E5E5E5">for</font><font color="#CCCCCC"> analysts</font><font color="#E5E5E5"> to hunt</font><font color="#CCCCCC"> other sample</font>

64
00:03:06,739 --> 00:03:12,829
<font color="#E5E5E5">sharing the same</font><font color="#CCCCCC"> certificate and from</font>

65
00:03:10,310 --> 00:03:16,099
malware<font color="#E5E5E5"> author spot of view code signing</font>

66
00:03:12,829 --> 00:03:18,519
is very important for them<font color="#CCCCCC"> because lie</font>

67
00:03:16,099 --> 00:03:21,649
is nearly<font color="#CCCCCC"> impossible for</font><font color="#E5E5E5"> ordinary</font>

68
00:03:18,519 --> 00:03:24,829
victims to execute on solid boundaries

69
00:03:21,650 --> 00:03:28,519
<font color="#E5E5E5">because of the gatekeeper from</font><font color="#CCCCCC"> ATO as</font>

70
00:03:24,829 --> 00:03:31,359
<font color="#E5E5E5">Sierra and a large</font><font color="#CCCCCC"> number of software on</font>

71
00:03:28,519 --> 00:03:34,970
Mac mostly take the form of bsd-style

72
00:03:31,359 --> 00:03:38,419
<font color="#E5E5E5">where the packages store within a six</font>

73
00:03:34,970 --> 00:03:42,228
specific this image<font color="#E5E5E5"> dot I am</font><font color="#CCCCCC"> geo</font><font color="#E5E5E5"> dot dmg</font>

74
00:03:38,419 --> 00:03:45,859
and or mark application<font color="#CCCCCC"> files dot IPP</font>

75
00:03:42,229 --> 00:03:48,379
<font color="#E5E5E5">and the package contains other resources</font>

76
00:03:45,859 --> 00:03:51,409
including significant<font color="#CCCCCC"> information for</font>

77
00:03:48,379 --> 00:03:54,560
example<font color="#E5E5E5"> the</font><font color="#CCCCCC"> property list</font><font color="#E5E5E5"> the police and</font>

78
00:03:51,409 --> 00:03:57,228
<font color="#CCCCCC">that</font><font color="#E5E5E5"> police are the</font><font color="#CCCCCC"> XML</font><font color="#E5E5E5"> base files is to</font>

79
00:03:54,560 --> 00:04:00,560
store the<font color="#E5E5E5"> application configuration and</font>

80
00:03:57,229 --> 00:04:03,259
<font color="#E5E5E5">we extract and store</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> results that</font>

81
00:04:00,560 --> 00:04:07,970
can provide a very<font color="#CCCCCC"> good starting point</font>

82
00:04:03,259 --> 00:04:10,159
for investigating suspicious files about

83
00:04:07,970 --> 00:04:12,470
the dynamic analysis here is an overview

84
00:04:10,159 --> 00:04:15,858
<font color="#E5E5E5">design of our market</font><font color="#CCCCCC"> mal dynamic</font>

85
00:04:12,470 --> 00:04:18,168
analysis<font color="#E5E5E5"> and it can be divided into two</font>

86
00:04:15,859 --> 00:04:22,909
main parts<font color="#E5E5E5"> and their host analysis</font>

87
00:04:18,168 --> 00:04:25,070
machine<font color="#E5E5E5"> and mortar machine on the right</font>

88
00:04:22,909 --> 00:04:26,610
<font color="#E5E5E5">side</font><font color="#CCCCCC"> of the screen</font><font color="#E5E5E5"> this is the analysis</font>

89
00:04:25,070 --> 00:04:28,919
machine which<font color="#CCCCCC"> beaut</font>

90
00:04:26,610 --> 00:04:32,819
upon the<font color="#CCCCCC"> kuku sandbox the cuckoo front</font>

91
00:04:28,919 --> 00:04:35,669
<font color="#CCCCCC">end</font><font color="#E5E5E5"> and it have a web panel to interact</font>

92
00:04:32,819 --> 00:04:36,629
with<font color="#E5E5E5"> analyse and is stored the reports</font>

93
00:04:35,669 --> 00:04:39,479
<font color="#E5E5E5">storage</font>

94
00:04:36,629 --> 00:04:43,080
it also supports<font color="#CCCCCC"> elastic</font><font color="#E5E5E5"> search as well</font>

95
00:04:39,479 --> 00:04:46,530
<font color="#E5E5E5">as</font><font color="#CCCCCC"> Yarra and vice Toto</font><font color="#E5E5E5"> query and there</font>

96
00:04:43,080 --> 00:04:50,039
is an analyzer<font color="#E5E5E5"> in responsible for sample</font>

97
00:04:46,530 --> 00:04:52,888
distribution<font color="#CCCCCC"> and the behavior analysis</font>

98
00:04:50,039 --> 00:04:55,889
and<font color="#E5E5E5"> behavior signature and it can send</font>

99
00:04:52,889 --> 00:04:58,860
the samples to<font color="#E5E5E5"> multi multiple monitor</font>

100
00:04:55,889 --> 00:05:01,469
machine and in the<font color="#E5E5E5"> monitor machine in</font>

101
00:04:58,860 --> 00:05:04,379
the left side<font color="#E5E5E5"> the malware basically</font>

102
00:05:01,469 --> 00:05:06,990
running on the user space and in the

103
00:05:04,379 --> 00:05:09,599
user space<font color="#E5E5E5"> analysis agent to receive</font>

104
00:05:06,990 --> 00:05:12,599
<font color="#CCCCCC">samples from Alice's machine</font><font color="#E5E5E5"> and is also</font>

105
00:05:09,599 --> 00:05:17,430
communicated with the conus way on the

106
00:05:12,599 --> 00:05:21,029
<font color="#E5E5E5">kunais way which where we implement our</font>

107
00:05:17,430 --> 00:05:22,979
<font color="#CCCCCC">kunis way monitor and it can monitor the</font>

108
00:05:21,029 --> 00:05:25,259
system<font color="#CCCCCC"> code can monitor process</font>

109
00:05:22,979 --> 00:05:29,400
execution<font color="#CCCCCC"> vibration or network</font>

110
00:05:25,259 --> 00:05:31,529
activities and<font color="#CCCCCC"> kuku supports many</font>

111
00:05:29,400 --> 00:05:34,310
virtualization<font color="#CCCCCC"> monisha and we</font>

112
00:05:31,529 --> 00:05:38,430
<font color="#E5E5E5">successfully created a virtualized</font><font color="#CCCCCC"> Mac</font>

113
00:05:34,310 --> 00:05:41,490
instances on<font color="#E5E5E5"> VMware on VirtualBox</font><font color="#CCCCCC"> and on</font>

114
00:05:38,430 --> 00:05:43,319
<font color="#E5E5E5">emu so that the analysis</font><font color="#CCCCCC"> machine can be</font>

115
00:05:41,490 --> 00:05:45,449
on<font color="#E5E5E5"> whatever operating</font><font color="#CCCCCC"> system you want</font>

116
00:05:43,319 --> 00:05:49,529
but<font color="#E5E5E5"> the virtualized machine must be</font>

117
00:05:45,449 --> 00:05:52,349
<font color="#CCCCCC">running on Mac OS</font><font color="#E5E5E5"> and by the way any</font>

118
00:05:49,529 --> 00:05:53,940
<font color="#E5E5E5">sympathize are supported as long as</font>

119
00:05:52,349 --> 00:05:56,250
there are software<font color="#E5E5E5"> running on the</font>

120
00:05:53,940 --> 00:05:58,919
monitor machine<font color="#CCCCCC"> supported the</font><font color="#E5E5E5"> reason why</font>

121
00:05:56,250 --> 00:06:01,110
I mentioned about is because<font color="#E5E5E5"> is a method</font>

122
00:05:58,919 --> 00:06:04,889
<font color="#E5E5E5">for debugging and monitoring processes</font>

123
00:06:01,110 --> 00:06:07,500
<font color="#E5E5E5">is basically you start a program and</font>

124
00:06:04,889 --> 00:06:10,020
<font color="#E5E5E5">then immediately you instrumented that</font>

125
00:06:07,500 --> 00:06:13,620
program but it's sometimes fails<font color="#CCCCCC"> because</font>

126
00:06:10,020 --> 00:06:16,500
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the max</font><font color="#CCCCCC"> ember policy and in our</font>

127
00:06:13,620 --> 00:06:20,729
solution<font color="#CCCCCC"> the sample is executed by the</font>

128
00:06:16,500 --> 00:06:23,430
open<font color="#CCCCCC"> application</font><font color="#E5E5E5"> there's a default Phi</font>

129
00:06:20,729 --> 00:06:25,740
handler<font color="#E5E5E5"> on Mac and its mechanism is</font>

130
00:06:23,430 --> 00:06:28,110
similar<font color="#E5E5E5"> to how user open a file by</font>

131
00:06:25,740 --> 00:06:31,620
double click on it<font color="#E5E5E5"> and then the program</font>

132
00:06:28,110 --> 00:06:34,289
<font color="#CCCCCC">will decide which</font><font color="#E5E5E5"> guy application to</font>

133
00:06:31,620 --> 00:06:37,409
open<font color="#CCCCCC"> and it</font><font color="#E5E5E5"> supports almost</font><font color="#CCCCCC"> any phi</font>

134
00:06:34,289 --> 00:06:39,830
types<font color="#CCCCCC"> there four samples could be</font>

135
00:06:37,409 --> 00:06:44,780
<font color="#CCCCCC">office document can be pd</font>

136
00:06:39,830 --> 00:06:46,758
document or a per script<font color="#E5E5E5"> but the trouble</font>

137
00:06:44,780 --> 00:06:49,159
for<font color="#CCCCCC"> this double-click</font><font color="#E5E5E5"> is that open</font>

138
00:06:46,759 --> 00:06:52,340
spawns<font color="#E5E5E5"> a new process and</font><font color="#CCCCCC"> it's go to the</font>

139
00:06:49,159 --> 00:06:55,009
mark<font color="#CCCCCC"> Cisco interface mark in here is the</font>

140
00:06:52,340 --> 00:06:58,508
mandatory access control framework<font color="#E5E5E5"> and</font>

141
00:06:55,009 --> 00:07:03,979
if you try<font color="#E5E5E5"> to hook it in the user space</font>

142
00:06:58,509 --> 00:07:06,139
then normally it will fail<font color="#E5E5E5"> because it's</font>

143
00:07:03,979 --> 00:07:09,620
<font color="#E5E5E5">supposed to be checked by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> maxim box</font>

144
00:07:06,139 --> 00:07:11,690
and properly<font color="#E5E5E5"> it</font><font color="#CCCCCC"> would be rejected but we</font>

145
00:07:09,620 --> 00:07:13,930
still<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to process</font><font color="#E5E5E5"> try anyway in</font>

146
00:07:11,690 --> 00:07:15,919
order<font color="#CCCCCC"> to do the behavior tracing</font>

147
00:07:13,930 --> 00:07:18,669
fortunately with the<font color="#CCCCCC"> help of hooking</font>

148
00:07:15,919 --> 00:07:22,400
system calls in the kernel space and

149
00:07:18,669 --> 00:07:24,349
that sandbox mechanism doesn't<font color="#E5E5E5"> affect</font>

150
00:07:22,400 --> 00:07:26,929
our solution and then<font color="#CCCCCC"> my common</font>

151
00:07:24,349 --> 00:07:30,229
framework and<font color="#E5E5E5"> choice process spawned to</font>

152
00:07:26,930 --> 00:07:33,590
the open to launch<font color="#CCCCCC"> be too explicit for</font>

153
00:07:30,229 --> 00:07:38,090
services properly<font color="#E5E5E5"> why the trace and</font>

154
00:07:33,590 --> 00:07:41,000
<font color="#CCCCCC">Makoku sandbox</font><font color="#E5E5E5"> easily failed and other</font>

155
00:07:38,090 --> 00:07:44,960
archives like<font color="#CCCCCC"> the appellees image we</font>

156
00:07:41,000 --> 00:07:47,479
firstly<font color="#E5E5E5"> attach it via HDI util and then</font>

157
00:07:44,960 --> 00:07:51,770
we execute all<font color="#CCCCCC"> the application inside</font>

158
00:07:47,479 --> 00:07:54,500
<font color="#CCCCCC">attached volumes for cross-platform</font><font color="#E5E5E5"> our</font>

159
00:07:51,770 --> 00:07:58,370
<font color="#CCCCCC">variants using</font><font color="#E5E5E5"> scripting application</font>

160
00:07:54,500 --> 00:08:01,009
like Java<font color="#E5E5E5"> like Perl</font><font color="#CCCCCC"> or Python</font><font color="#E5E5E5"> then we</font>

161
00:07:58,370 --> 00:08:06,830
use their own interpreter to monitor

162
00:08:01,009 --> 00:08:09,949
their behavior<font color="#E5E5E5"> and about alko no space</font>

163
00:08:06,830 --> 00:08:12,680
monitor it is<font color="#E5E5E5"> motivated by previous</font>

164
00:08:09,949 --> 00:08:15,919
research onyx black cat by<font color="#CCCCCC"> Pedro</font><font color="#E5E5E5"> vilaça</font>

165
00:08:12,680 --> 00:08:19,900
<font color="#E5E5E5">for kernel system</font><font color="#CCCCCC"> Kosovo discovery and</font>

166
00:08:15,919 --> 00:08:24,049
<font color="#CCCCCC">grey fox</font><font color="#E5E5E5"> by Vincent van Meacham and</font>

167
00:08:19,900 --> 00:08:26,690
firstly mark<font color="#CCCCCC"> uma solve</font><font color="#E5E5E5"> the Kyocera</font><font color="#CCCCCC"> and</font>

168
00:08:24,050 --> 00:08:29,690
then it deactivates the kernel memory

169
00:08:26,690 --> 00:08:32,899
protection and the monitoring happened

170
00:08:29,690 --> 00:08:35,570
by hooking<font color="#E5E5E5"> into a set of system calls</font>

171
00:08:32,899 --> 00:08:38,570
for extracting<font color="#E5E5E5"> the behavior information</font>

172
00:08:35,570 --> 00:08:41,750
and that<font color="#CCCCCC"> set ups of system code can be</font>

173
00:08:38,570 --> 00:08:44,029
customized by the analyst and that<font color="#CCCCCC"> mode</font>

174
00:08:41,750 --> 00:08:46,160
<font color="#CCCCCC">view will intercept the</font><font color="#E5E5E5"> system calls and</font>

175
00:08:44,029 --> 00:08:48,500
collect corresponding<font color="#E5E5E5"> arguments and</font>

176
00:08:46,160 --> 00:08:51,260
therefore it<font color="#CCCCCC"> is possible to collect</font><font color="#E5E5E5"> drop</font>

177
00:08:48,500 --> 00:08:53,360
files who are running the binary<font color="#E5E5E5"> and by</font>

178
00:08:51,260 --> 00:08:55,339
<font color="#CCCCCC">tracing the process tree and</font><font color="#E5E5E5"> its</font>

179
00:08:53,360 --> 00:08:57,860
species of<font color="#E5E5E5"> these messages it helps</font>

180
00:08:55,339 --> 00:09:01,279
certify the shell commands<font color="#E5E5E5"> a species</font>

181
00:08:57,860 --> 00:09:03,529
network activity and<font color="#CCCCCC"> faxes</font><font color="#E5E5E5"> behavior for</font>

182
00:09:01,279 --> 00:09:06,860
example<font color="#CCCCCC"> a</font><font color="#E5E5E5"> malware tries to open a</font>

183
00:09:03,529 --> 00:09:09,140
network port<font color="#E5E5E5"> and if no communication at</font>

184
00:09:06,860 --> 00:09:12,170
<font color="#E5E5E5">top</font><font color="#CCCCCC"> lachemann</font><font color="#E5E5E5"> there won't be anything</font>

185
00:09:09,140 --> 00:09:14,779
<font color="#E5E5E5">captured by</font><font color="#CCCCCC"> that network sniffer</font><font color="#E5E5E5"> but</font>

186
00:09:12,170 --> 00:09:18,319
<font color="#E5E5E5">using our solution</font><font color="#CCCCCC"> obviously we can see</font>

187
00:09:14,779 --> 00:09:20,329
that kind<font color="#E5E5E5"> of listening for activity why</font>

188
00:09:18,320 --> 00:09:25,279
<font color="#E5E5E5">we're looking</font><font color="#CCCCCC"> inside the network system</font>

189
00:09:20,329 --> 00:09:27,469
<font color="#E5E5E5">collab and</font><font color="#CCCCCC"> also mark emma is able to</font>

190
00:09:25,279 --> 00:09:30,680
detect a<font color="#E5E5E5"> very safe technique and</font>

191
00:09:27,470 --> 00:09:32,420
mitigate them common anti debug

192
00:09:30,680 --> 00:09:34,670
techniques<font color="#E5E5E5"> are calling the</font><font color="#CCCCCC"> peach rays</font>

193
00:09:32,420 --> 00:09:37,040
are calling the system control system

194
00:09:34,670 --> 00:09:39,920
calls to detect<font color="#E5E5E5"> the debugging flaps and</font>

195
00:09:37,040 --> 00:09:42,410
<font color="#CCCCCC">the sky</font><font color="#E5E5E5"> of tricks won't influence our</font>

196
00:09:39,920 --> 00:09:47,449
<font color="#E5E5E5">kernel monitor components like</font><font color="#CCCCCC"> magma</font>

197
00:09:42,410 --> 00:09:49,699
<font color="#E5E5E5">however it will intercept and report</font>

198
00:09:47,450 --> 00:09:54,649
these activities for later investigation

199
00:09:49,700 --> 00:09:56,870
and for<font color="#E5E5E5"> anti Sembach mitigation it not</font>

200
00:09:54,649 --> 00:10:00,290
only hope<font color="#E5E5E5"> but on so patch inside the</font>

201
00:09:56,870 --> 00:10:04,300
kernel memory<font color="#E5E5E5"> on the fly to manipulate</font>

202
00:10:00,290 --> 00:10:08,000
the return<font color="#CCCCCC"> values the goal is that</font><font color="#E5E5E5"> we</font>

203
00:10:04,300 --> 00:10:10,339
gonna<font color="#CCCCCC"> cheat the malware</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we are</font>

204
00:10:08,000 --> 00:10:13,310
running<font color="#E5E5E5"> on a physical machine instead of</font>

205
00:10:10,339 --> 00:10:16,880
virtual<font color="#CCCCCC"> I machine for</font><font color="#E5E5E5"> example the system</font>

206
00:10:13,310 --> 00:10:20,268
<font color="#E5E5E5">integrated system integrity</font><font color="#CCCCCC"> protection</font>

207
00:10:16,880 --> 00:10:22,579
status process<font color="#E5E5E5"> named virtual device</font>

208
00:10:20,269 --> 00:10:23,890
information<font color="#CCCCCC"> such as</font><font color="#E5E5E5"> that displayed</font>

209
00:10:22,579 --> 00:10:27,199
<font color="#E5E5E5">resolution</font>

210
00:10:23,890 --> 00:10:30,230
virtual device information<font color="#CCCCCC"> like the</font>

211
00:10:27,199 --> 00:10:32,810
<font color="#CCCCCC">number of processor cores</font><font color="#E5E5E5"> the modern</font>

212
00:10:30,230 --> 00:10:37,550
name of the device we also patch<font color="#CCCCCC"> all of</font>

213
00:10:32,810 --> 00:10:39,859
<font color="#E5E5E5">that and we do patch the configuration</font>

214
00:10:37,550 --> 00:10:44,000
of the monitor machine to mitigate the

215
00:10:39,860 --> 00:10:47,360
<font color="#E5E5E5">technique for instant to patch the CPU</font>

216
00:10:44,000 --> 00:10:52,490
ID or the<font color="#CCCCCC"> virtual map</font><font color="#E5E5E5"> address footprint</font>

217
00:10:47,360 --> 00:10:54,410
<font color="#E5E5E5">and during the</font><font color="#CCCCCC"> analysis the sandbox</font>

218
00:10:52,490 --> 00:10:57,769
implements libraries for taking a

219
00:10:54,410 --> 00:10:59,600
screenshot of<font color="#E5E5E5"> desktop and this swing</font>

220
00:10:57,769 --> 00:11:02,899
shot are very helpful<font color="#CCCCCC"> for analysts</font><font color="#E5E5E5"> still</font>

221
00:10:59,600 --> 00:11:05,449
<font color="#E5E5E5">to review automated analysis and</font>

222
00:11:02,899 --> 00:11:06,550
recognize some<font color="#E5E5E5"> cases that needs human</font>

223
00:11:05,449 --> 00:11:09,439
interaction

224
00:11:06,550 --> 00:11:11,750
example like you<font color="#E5E5E5"> need a mouse click</font><font color="#CCCCCC"> to</font>

225
00:11:09,440 --> 00:11:15,380
confirm installation<font color="#E5E5E5"> or you need to type</font>

226
00:11:11,750 --> 00:11:17,509
password for super<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> privilege and on</font>

227
00:11:15,380 --> 00:11:21,410
the left<font color="#E5E5E5"> side of the screen this is the</font>

228
00:11:17,509 --> 00:11:24,319
authorization solver which automatically

229
00:11:21,410 --> 00:11:27,439
<font color="#E5E5E5">tie the super user password when needed</font>

230
00:11:24,319 --> 00:11:29,540
and<font color="#E5E5E5"> is used across library to detect</font>

231
00:11:27,440 --> 00:11:32,750
login window and then answer password

232
00:11:29,540 --> 00:11:35,029
using<font color="#E5E5E5"> keyboard events in the right side</font>

233
00:11:32,750 --> 00:11:37,940
of<font color="#CCCCCC"> the screen</font><font color="#E5E5E5"> this is also is the cost</font>

234
00:11:35,029 --> 00:11:40,130
library to<font color="#E5E5E5"> text screenshot and</font><font color="#CCCCCC"> then we</font>

235
00:11:37,940 --> 00:11:43,430
search for needle in the haystack<font color="#CCCCCC"> for</font>

236
00:11:40,130 --> 00:11:45,980
buttons we need for example<font color="#CCCCCC"> ok continue</font>

237
00:11:43,430 --> 00:11:47,959
<font color="#E5E5E5">next or done button and</font><font color="#CCCCCC"> so on and then</font>

238
00:11:45,980 --> 00:11:51,529
the software perform<font color="#E5E5E5"> a mouse click</font><font color="#CCCCCC"> by</font>

239
00:11:47,959 --> 00:11:53,000
using the quartz<font color="#E5E5E5"> Mouse event and now</font>

240
00:11:51,529 --> 00:11:55,130
that we<font color="#E5E5E5"> have seen how the</font><font color="#CCCCCC"> math email</font>

241
00:11:53,000 --> 00:11:56,240
works<font color="#CCCCCC"> I'd like to show you how to hunt</font>

242
00:11:55,130 --> 00:12:00,500
<font color="#CCCCCC">real Maui</font>

243
00:11:56,240 --> 00:12:03,560
in the white so by<font color="#E5E5E5"> testing our framework</font>

244
00:12:00,500 --> 00:12:05,750
we file<font color="#CCCCCC"> mother sec which was an example</font>

245
00:12:03,560 --> 00:12:07,880
<font color="#E5E5E5">of how we found</font><font color="#CCCCCC"> malware by</font><font color="#E5E5E5"> using our</font>

246
00:12:05,750 --> 00:12:09,889
framework in the white some of the

247
00:12:07,880 --> 00:12:12,319
samples were first discovered by

248
00:12:09,889 --> 00:12:15,139
malwarebytes and patrick water from

249
00:12:12,319 --> 00:12:17,329
<font color="#E5E5E5">objective-c in the last</font><font color="#CCCCCC"> augers</font><font color="#E5E5E5"> and by</font>

250
00:12:15,139 --> 00:12:20,720
testing on the framework<font color="#E5E5E5"> we discovered</font>

251
00:12:17,329 --> 00:12:22,699
more<font color="#E5E5E5"> than 100 of</font><font color="#CCCCCC"> sign of malicious</font>

252
00:12:20,720 --> 00:12:26,180
binary in the<font color="#E5E5E5"> Y belongs</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> whole</font>

253
00:12:22,699 --> 00:12:29,060
Edward campaign and we constructed a

254
00:12:26,180 --> 00:12:31,670
powerful signature that<font color="#CCCCCC"> combining</font><font color="#E5E5E5"> static</font>

255
00:12:29,060 --> 00:12:35,268
dynamic and<font color="#CCCCCC"> networked information to</font>

256
00:12:31,670 --> 00:12:38,360
detect malware and by not fixing the

257
00:12:35,269 --> 00:12:41,980
suspicious<font color="#E5E5E5"> behaviors such as the malware</font>

258
00:12:38,360 --> 00:12:45,019
trying to the to do evasion technique by

259
00:12:41,980 --> 00:12:46,550
detecting<font color="#CCCCCC"> the network driver MAC address</font>

260
00:12:45,019 --> 00:12:48,230
to see like whether<font color="#E5E5E5"> or not you're</font>

261
00:12:46,550 --> 00:12:52,219
running on a physical<font color="#E5E5E5"> machine or</font>

262
00:12:48,230 --> 00:12:55,189
virtualized machine<font color="#E5E5E5"> also we noticed a</font>

263
00:12:52,220 --> 00:12:58,069
signature that they plant<font color="#E5E5E5"> a persistent</font>

264
00:12:55,189 --> 00:13:01,370
indicator<font color="#E5E5E5"> namely</font><font color="#CCCCCC"> Monticello</font><font color="#E5E5E5"> Phyllis</font>

265
00:12:58,069 --> 00:13:04,790
we also construct a set of<font color="#CCCCCC"> Network</font>

266
00:13:01,370 --> 00:13:08,240
suspicious<font color="#CCCCCC"> domain and we construct a</font>

267
00:13:04,790 --> 00:13:11,149
static analysis that we see the

268
00:13:08,240 --> 00:13:13,160
developer called signers mostly<font color="#E5E5E5"> after</font>

269
00:13:11,149 --> 00:13:16,880
the<font color="#CCCCCC"> campaign's using a vietnamese</font>

270
00:13:13,160 --> 00:13:20,130
<font color="#CCCCCC">cosigner name and the interesting fact</font>

271
00:13:16,880 --> 00:13:22,830
is that how campaigns<font color="#E5E5E5"> stay undetected</font>

272
00:13:20,130 --> 00:13:25,610
for at least three<font color="#E5E5E5"> months before Apple</font>

273
00:13:22,830 --> 00:13:28,170
revoke those<font color="#CCCCCC"> certificates and silently</font>

274
00:13:25,610 --> 00:13:32,730
<font color="#E5E5E5">release an update we are a rule for</font>

275
00:13:28,170 --> 00:13:36,030
<font color="#E5E5E5">their</font><font color="#CCCCCC"> export egg and on a large scale on</font>

276
00:13:32,730 --> 00:13:38,040
a large scale<font color="#CCCCCC"> to have processes</font><font color="#E5E5E5"> more</font>

277
00:13:36,030 --> 00:13:40,530
than<font color="#E5E5E5"> two thousand malicious samples and</font>

278
00:13:38,040 --> 00:13:43,530
we<font color="#CCCCCC"> found that 85% of the collected</font>

279
00:13:40,530 --> 00:13:46,199
samples are adware<font color="#E5E5E5"> which dominated by</font>

280
00:13:43,530 --> 00:13:50,010
<font color="#E5E5E5">always expiry and</font><font color="#CCCCCC"> iOS it's much cheaper</font>

281
00:13:46,200 --> 00:13:52,470
<font color="#CCCCCC">and their purpose is to make</font><font color="#E5E5E5"> advertising</font>

282
00:13:50,010 --> 00:13:55,380
revenue for attacker by installing

283
00:13:52,470 --> 00:13:57,740
potential unwanted application<font color="#CCCCCC"> or</font>

284
00:13:55,380 --> 00:14:00,450
potential harmful application or

285
00:13:57,740 --> 00:14:02,700
redirect the victims to unwanted website

286
00:14:00,450 --> 00:14:05,160
and in my opinion<font color="#CCCCCC"> their widespread</font>

287
00:14:02,700 --> 00:14:09,270
<font color="#CCCCCC">because technically they are not virus</font>

288
00:14:05,160 --> 00:14:13,110
but<font color="#E5E5E5"> it can potentially perform malicious</font>

289
00:14:09,270 --> 00:14:15,300
activity later on and<font color="#E5E5E5"> after</font><font color="#CCCCCC"> analyzing</font>

290
00:14:13,110 --> 00:14:17,730
the sample set<font color="#CCCCCC"> the results retrieved</font>

291
00:14:15,300 --> 00:14:20,520
from<font color="#CCCCCC"> makkah mall were later post</font>

292
00:14:17,730 --> 00:14:23,640
processed through a classifier<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's</font>

293
00:14:20,520 --> 00:14:27,210
<font color="#CCCCCC">on</font><font color="#E5E5E5"> hybrid</font><font color="#CCCCCC"> Rouge</font><font color="#E5E5E5"> and so far we observe a</font>

294
00:14:23,640 --> 00:14:30,870
total of 86 different<font color="#E5E5E5"> mock malware</font>

295
00:14:27,210 --> 00:14:33,630
families and in 2017 and we<font color="#E5E5E5"> found that</font>

296
00:14:30,870 --> 00:14:38,670
half of<font color="#E5E5E5"> them</font><font color="#CCCCCC"> belonged to backdoor and</font>

297
00:14:33,630 --> 00:14:42,060
trojan and<font color="#E5E5E5"> by picking out</font><font color="#CCCCCC"> Marco smaller</font>

298
00:14:38,670 --> 00:14:46,020
family we have selected two sets of

299
00:14:42,060 --> 00:14:48,479
malware in 2016 in 2017<font color="#CCCCCC"> and here are the</font>

300
00:14:46,020 --> 00:14:51,510
heat maps where the reddish<font color="#CCCCCC"> color is</font>

301
00:14:48,480 --> 00:14:54,390
<font color="#CCCCCC">large values and the smaller values are</font>

302
00:14:51,510 --> 00:14:56,819
<font color="#E5E5E5">displayed by lighter color</font><font color="#CCCCCC"> and to hit</font>

303
00:14:54,390 --> 00:14:58,970
<font color="#E5E5E5">maps has been constructed with featuring</font>

304
00:14:56,820 --> 00:15:01,620
<font color="#CCCCCC">behavior on the horizontal Isis and</font>

305
00:14:58,970 --> 00:15:05,310
<font color="#E5E5E5">malware variant names on vertical Isis</font>

306
00:15:01,620 --> 00:15:07,800
<font color="#E5E5E5">and we see that map cause malware in</font>

307
00:15:05,310 --> 00:15:10,140
southern<font color="#CCCCCC"> seventeen demonstrate a drastic</font>

308
00:15:07,800 --> 00:15:12,979
<font color="#CCCCCC">improvement by using anti analytics</font>

309
00:15:10,140 --> 00:15:15,330
techniques including anti debug

310
00:15:12,980 --> 00:15:19,290
hibernation discover hardware

311
00:15:15,330 --> 00:15:23,580
specification or discover<font color="#E5E5E5"> security tools</font>

312
00:15:19,290 --> 00:15:25,949
<font color="#E5E5E5">running on the victim</font><font color="#CCCCCC"> machine previous</font>

313
00:15:23,580 --> 00:15:29,040
research in the field<font color="#CCCCCC"> claimed that mock</font>

314
00:15:25,950 --> 00:15:32,339
malware can be detected<font color="#CCCCCC"> by using</font><font color="#E5E5E5"> bash</font>

315
00:15:29,040 --> 00:15:33,089
shell commands detection or persistent

316
00:15:32,339 --> 00:15:35,879
attempt

317
00:15:33,089 --> 00:15:38,459
affection<font color="#CCCCCC"> but however we found</font><font color="#E5E5E5"> that some</font>

318
00:15:35,879 --> 00:15:41,160
variants never exhibit any persistent

319
00:15:38,459 --> 00:15:45,170
<font color="#CCCCCC">Assam</font><font color="#E5E5E5"> or shell commands such as ocean</font>

320
00:15:41,160 --> 00:15:47,100
Lotus occasions or<font color="#CCCCCC"> kay Ranger and</font>

321
00:15:45,170 --> 00:15:50,729
<font color="#CCCCCC">occasional</font><font color="#E5E5E5"> complex</font><font color="#CCCCCC"> are know for</font>

322
00:15:47,100 --> 00:15:56,879
<font color="#E5E5E5">participating in</font><font color="#CCCCCC"> apt</font><font color="#E5E5E5"> 28 targeting</font>

323
00:15:50,730 --> 00:16:01,829
individuals in the<font color="#CCCCCC"> aerospace industry</font><font color="#E5E5E5"> so</font>

324
00:15:56,879 --> 00:16:04,519
<font color="#E5E5E5">that for in conclusion we think that it</font>

325
00:16:01,829 --> 00:16:08,399
is<font color="#CCCCCC"> possible to automatically monitor and</font>

326
00:16:04,519 --> 00:16:11,069
<font color="#E5E5E5">analyze network traffic</font><font color="#CCCCCC"> Maui evasion</font>

327
00:16:08,399 --> 00:16:13,800
techniques<font color="#CCCCCC"> persistent methods by</font>

328
00:16:11,069 --> 00:16:16,680
operation from samples in a virtualized

329
00:16:13,800 --> 00:16:19,290
<font color="#CCCCCC">Mac environment and we</font><font color="#E5E5E5"> succeeded in</font>

330
00:16:16,680 --> 00:16:23,239
clarifying malware variants and<font color="#E5E5E5"> is</font>

331
00:16:19,290 --> 00:16:25,589
evolution on<font color="#E5E5E5"> necklace and we found an</font>

332
00:16:23,240 --> 00:16:27,990
undiscovered<font color="#E5E5E5"> map at</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> campaigns</font>

333
00:16:25,589 --> 00:16:31,470
including<font color="#E5E5E5"> legitimate apple developer</font>

334
00:16:27,990 --> 00:16:35,309
<font color="#E5E5E5">certificate we file other undetected</font>

335
00:16:31,470 --> 00:16:37,139
backdoor belong to<font color="#E5E5E5"> IP t32</font><font color="#CCCCCC"> Ocean Lotus</font>

336
00:16:35,309 --> 00:16:41,160
staggering<font color="#E5E5E5"> Vietnamese in Chinese</font>

337
00:16:37,139 --> 00:16:41,790
organization<font color="#E5E5E5"> and the framework is up on</font>

338
00:16:41,160 --> 00:16:44,160
github

339
00:16:41,790 --> 00:16:46,050
I hope one of<font color="#CCCCCC"> you in here could take and</font>

340
00:16:44,160 --> 00:16:48,120
<font color="#E5E5E5">look at my code and do something even</font>

341
00:16:46,050 --> 00:16:50,099
better<font color="#E5E5E5"> than dish and if you interested</font>

342
00:16:48,120 --> 00:16:52,439
<font color="#CCCCCC">in improving this</font><font color="#E5E5E5"> work I</font><font color="#CCCCCC"> think there</font>

343
00:16:50,100 --> 00:16:54,990
would<font color="#CCCCCC"> be a lot of things to</font><font color="#E5E5E5"> improve in</font>

344
00:16:52,439 --> 00:16:57,050
here and I<font color="#CCCCCC"> definitely don't think</font><font color="#E5E5E5"> that</font>

345
00:16:54,990 --> 00:17:00,420
<font color="#E5E5E5">my</font><font color="#CCCCCC"> solution is the best solution for map</font>

346
00:16:57,050 --> 00:17:02,579
malware hunting<font color="#E5E5E5"> but I think like</font><font color="#CCCCCC"> at the</font>

347
00:17:00,420 --> 00:17:05,849
moment<font color="#E5E5E5"> is possible that</font><font color="#CCCCCC"> our solution is</font>

348
00:17:02,579 --> 00:17:08,908
<font color="#E5E5E5">outperforming</font><font color="#CCCCCC"> existing open</font><font color="#E5E5E5"> solution at</font>

349
00:17:05,849 --> 00:17:11,490
the<font color="#CCCCCC"> moment and for future work it would</font>

350
00:17:08,909 --> 00:17:14,669
<font color="#E5E5E5">be interesting</font><font color="#CCCCCC"> to see mark among</font>

351
00:17:11,490 --> 00:17:21,260
<font color="#CCCCCC">combined with machine learning or bare</font>

352
00:17:14,669 --> 00:17:25,279
metal<font color="#E5E5E5"> analysis and IP icons monitor so</font>

353
00:17:21,260 --> 00:17:25,279
time system for Q&A

354
00:17:29,990 --> 00:17:38,030
so I think<font color="#E5E5E5"> that is thanks for joining me</font>

355
00:17:34,620 --> 00:17:38,030
[Music]

