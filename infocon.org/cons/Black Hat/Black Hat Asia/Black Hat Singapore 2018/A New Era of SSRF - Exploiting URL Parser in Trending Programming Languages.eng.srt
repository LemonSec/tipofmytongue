1
00:00:00,000 --> 00:00:06,060
hi<font color="#E5E5E5"> thanks thanks for coming this talk</font>

2
00:00:03,480 --> 00:00:10,530
will<font color="#CCCCCC"> be talked about my research</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> SS</font>

3
00:00:06,060 --> 00:00:14,960
<font color="#CCCCCC">RF and since this is</font><font color="#E5E5E5"> the only talk about</font>

4
00:00:10,530 --> 00:00:18,869
<font color="#CCCCCC">web security in brickhead</font><font color="#E5E5E5"> Asia</font>

5
00:00:14,960 --> 00:00:22,199
the first concept of<font color="#CCCCCC"> SS f was found 10</font>

6
00:00:18,869 --> 00:00:26,880
years ago<font color="#E5E5E5"> since then many exploitations</font>

7
00:00:22,199 --> 00:00:30,000
<font color="#CCCCCC">and medications were developed in</font><font color="#E5E5E5"> this</font>

8
00:00:26,880 --> 00:00:32,930
talk<font color="#E5E5E5"> I will introduce my fighting this</font>

9
00:00:30,000 --> 00:00:36,570
fight is are not only<font color="#E5E5E5"> able to bypass</font>

10
00:00:32,930 --> 00:00:40,790
<font color="#E5E5E5">existing</font><font color="#CCCCCC"> SS I've protections but also</font>

11
00:00:36,570 --> 00:00:44,520
leads to critical remote call exclusions

12
00:00:40,790 --> 00:00:48,379
also we will defecate studies in real

13
00:00:44,520 --> 00:00:54,989
web applications<font color="#E5E5E5"> and the demo and github</font>

14
00:00:48,379 --> 00:00:57,660
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> let's go an orange from Taiwan love</font>

15
00:00:54,989 --> 00:01:01,608
to prayer CTF enjoying bug bounty

16
00:00:57,660 --> 00:01:05,880
programs you can fight what sit here or

17
00:01:01,609 --> 00:01:08,790
availabilities<font color="#E5E5E5"> I find here and lucky</font>

18
00:01:05,880 --> 00:01:14,759
that<font color="#CCCCCC"> my company allow me</font><font color="#E5E5E5"> to do that</font>

19
00:01:08,790 --> 00:01:17,909
you know this need a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of time and now</font>

20
00:01:14,760 --> 00:01:20,909
working a security<font color="#E5E5E5"> start-up is many</font>

21
00:01:17,909 --> 00:01:25,080
<font color="#E5E5E5">staff</font><font color="#CCCCCC"> coal deathcore</font><font color="#E5E5E5"> is the most</font>

22
00:01:20,909 --> 00:01:28,290
professional<font color="#E5E5E5"> red team in Taiwan</font><font color="#CCCCCC"> I know</font>

23
00:01:25,080 --> 00:01:30,840
security<font color="#E5E5E5"> researcher</font><font color="#CCCCCC"> my job is fighting</font>

24
00:01:28,290 --> 00:01:36,299
the others and researching<font color="#E5E5E5"> the newest</font>

25
00:01:30,840 --> 00:01:36,869
<font color="#E5E5E5">exploit techniques for example with</font>

26
00:01:36,299 --> 00:01:40,409
wrist

27
00:01:36,869 --> 00:01:43,439
<font color="#CCCCCC">we recently fight to quit Kermode code</font>

28
00:01:40,409 --> 00:01:47,369
execution on the<font color="#CCCCCC"> most</font><font color="#E5E5E5"> popular mail</font>

29
00:01:43,439 --> 00:01:53,158
server<font color="#E5E5E5"> if you are interested read our</font>

30
00:01:47,369 --> 00:01:56,490
blog for details<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> remember of</font>

31
00:01:53,159 --> 00:01:59,689
change<font color="#CCCCCC"> alert</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> hit</font><font color="#E5E5E5"> Kong</font><font color="#CCCCCC"> head car is</font>

32
00:01:56,490 --> 00:02:03,658
the largest<font color="#E5E5E5"> hacker conference in Taiwan</font>

33
00:01:59,689 --> 00:02:10,250
by the way he<font color="#CCCCCC"> can</font><font color="#E5E5E5"> 2018 will take place</font>

34
00:02:03,659 --> 00:02:10,250
on<font color="#E5E5E5"> July</font><font color="#CCCCCC"> 28 and 29 welcome to join us</font>

35
00:02:11,510 --> 00:02:16,629
this

36
00:02:12,760 --> 00:02:20,859
our<font color="#E5E5E5"> agenda today</font><font color="#CCCCCC"> our girl is to make SS</font>

37
00:02:16,629 --> 00:02:24,879
I've read again first I will introduce

38
00:02:20,860 --> 00:02:26,760
<font color="#CCCCCC">SS</font><font color="#E5E5E5"> RF and start with some quick</font><font color="#CCCCCC"> phone</font>

39
00:02:24,879 --> 00:02:29,859
examples

40
00:02:26,760 --> 00:02:34,629
next<font color="#E5E5E5"> I will I will talk about my</font>

41
00:02:29,860 --> 00:02:38,079
findings<font color="#E5E5E5"> in both an attack surface on SS</font>

42
00:02:34,629 --> 00:02:41,319
I've bypassed<font color="#E5E5E5"> and a new attack vector</font>

43
00:02:38,079 --> 00:02:46,989
input<font color="#CCCCCC"> Coast</font><font color="#E5E5E5"> mongering that enhances the</font>

44
00:02:41,319 --> 00:02:50,369
<font color="#E5E5E5">existing SS RF by combining this we can</font>

45
00:02:46,989 --> 00:02:54,700
achieve more advanced<font color="#E5E5E5"> expectations or</font>

46
00:02:50,370 --> 00:02:59,590
compromise the server of<font color="#E5E5E5"> course we will</font>

47
00:02:54,700 --> 00:03:03,369
have<font color="#E5E5E5"> case studies and demo what is</font>

48
00:02:59,590 --> 00:03:08,139
assess RF<font color="#E5E5E5"> okay I know this is</font><font color="#CCCCCC"> Birkhead</font>

49
00:03:03,370 --> 00:03:11,379
<font color="#CCCCCC">Asha</font><font color="#E5E5E5"> not SS</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> 101 so I don't need to</font>

50
00:03:08,139 --> 00:03:18,340
talk about<font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of trivial introductions</font>

51
00:03:11,379 --> 00:03:21,099
<font color="#CCCCCC">I suppose you all know what SSI is</font><font color="#E5E5E5"> as I</font>

52
00:03:18,340 --> 00:03:26,260
<font color="#E5E5E5">said in a word it can bypass the</font>

53
00:03:21,099 --> 00:03:29,589
firewall<font color="#E5E5E5"> and touch your intranet so the</font>

54
00:03:26,260 --> 00:03:34,030
text the face is depended on<font color="#E5E5E5"> how big</font>

55
00:03:29,590 --> 00:03:39,419
your intranet<font color="#E5E5E5"> is the larger during the</font>

56
00:03:34,030 --> 00:03:43,810
price is the<font color="#CCCCCC"> more robust</font><font color="#E5E5E5"> SSR</font><font color="#CCCCCC"> F will be</font>

57
00:03:39,419 --> 00:03:48,099
for<font color="#CCCCCC"> example in a big company</font><font color="#E5E5E5"> there are</font>

58
00:03:43,810 --> 00:03:54,760
<font color="#E5E5E5">lots of stress to relatives elastic you</font>

59
00:03:48,099 --> 00:03:59,488
<font color="#CCCCCC">can pound by SS RF the next protocol</font>

60
00:03:54,760 --> 00:04:03,488
smuggling in SS RF it max<font color="#E5E5E5"> SS I've more</font>

61
00:03:59,489 --> 00:04:08,349
powerful there are several ways to

62
00:04:03,489 --> 00:04:13,629
smuggle protocols in USSR<font color="#E5E5E5"> F and each ray</font>

63
00:04:08,349 --> 00:04:15,010
has its limitation so<font color="#E5E5E5"> what protocol is</font>

64
00:04:13,629 --> 00:04:21,070
good to smuggler

65
00:04:15,010 --> 00:04:23,200
I have list here and you can<font color="#E5E5E5"> check</font><font color="#CCCCCC"> ok</font>

66
00:04:21,070 --> 00:04:25,040
<font color="#E5E5E5">our introduction part is over</font>

67
00:04:23,200 --> 00:04:28,280
<font color="#CCCCCC">shorted right</font>

68
00:04:25,040 --> 00:04:31,460
before we start our topic<font color="#E5E5E5"> I want to make</font>

69
00:04:28,280 --> 00:04:38,239
<font color="#E5E5E5">a survey how many people use Tyson</font>

70
00:04:31,460 --> 00:04:39,620
<font color="#E5E5E5">praise the rest of your hand well I want</font>

71
00:04:38,240 --> 00:04:42,230
<font color="#E5E5E5">to ask you a question</font>

72
00:04:39,620 --> 00:04:43,910
if you want to<font color="#CCCCCC"> assess</font><font color="#E5E5E5"> the web with Tyson</font>

73
00:04:42,230 --> 00:04:48,350
<font color="#E5E5E5">which library</font>

74
00:04:43,910 --> 00:04:51,890
do you prefer<font color="#CCCCCC"> I think the most Python</font>

75
00:04:48,350 --> 00:04:57,340
guys use<font color="#CCCCCC"> requests is</font><font color="#E5E5E5"> pure</font><font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> leap over</font>

76
00:04:51,890 --> 00:05:02,360
<font color="#CCCCCC">ulo</font><font color="#E5E5E5"> lip - let's</font><font color="#CCCCCC"> start</font><font color="#E5E5E5"> with a fun example</font>

77
00:04:57,340 --> 00:05:07,460
<font color="#E5E5E5">think about this URL the</font><font color="#CCCCCC"> red square is</font>

78
00:05:02,360 --> 00:05:12,770
<font color="#E5E5E5">the space so which address Tyson is</font>

79
00:05:07,460 --> 00:05:20,210
<font color="#CCCCCC">going to answers you have</font><font color="#E5E5E5"> five seconds</font>

80
00:05:12,770 --> 00:05:23,270
to<font color="#E5E5E5"> put insert in</font><font color="#CCCCCC"> your night okay here's</font>

81
00:05:20,210 --> 00:05:26,299
<font color="#E5E5E5">the</font><font color="#CCCCCC"> answer</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> even Tyson's</font>

82
00:05:23,270 --> 00:05:30,979
building libraries<font color="#CCCCCC"> traded send URL</font>

83
00:05:26,300 --> 00:05:35,450
differently URL Lib answers the blue pad

84
00:05:30,980 --> 00:05:41,270
and the<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> Lib to assess orange pad and</font>

85
00:05:35,450 --> 00:05:41,750
both green is<font color="#E5E5E5"> request s this sounds</font>

86
00:05:41,270 --> 00:05:44,990
crazy

87
00:05:41,750 --> 00:05:50,900
<font color="#CCCCCC">Tyson is really really hard I don't</font>

88
00:05:44,990 --> 00:05:54,920
<font color="#CCCCCC">understand Tyson another showcase</font><font color="#E5E5E5"> it is</font>

89
00:05:50,900 --> 00:05:59,179
easy to understand if they is the CRF

90
00:05:54,920 --> 00:06:04,580
<font color="#E5E5E5">injection in HTTP and we can smarter</font>

91
00:05:59,180 --> 00:06:08,360
other protocols but as you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> see for</font>

92
00:06:04,580 --> 00:06:12,940
<font color="#E5E5E5">the security concern most of SMTP</font>

93
00:06:08,360 --> 00:06:18,710
servers block the HTTP connection if

94
00:06:12,940 --> 00:06:23,990
server<font color="#E5E5E5"> finds the HTTP baton such as get</font>

95
00:06:18,710 --> 00:06:29,510
<font color="#CCCCCC">/ or post / in the incoming request the</font>

96
00:06:23,990 --> 00:06:34,090
server will cut off<font color="#CCCCCC"> the connection so as</font>

97
00:06:29,510 --> 00:06:37,090
n TV<font color="#E5E5E5"> has HTTP protocol and it things are</font>

98
00:06:34,090 --> 00:06:37,090
exploitable

99
00:06:38,169 --> 00:06:44,849
somebody might say you can use<font color="#CCCCCC"> Dover</font><font color="#E5E5E5"> we</font>

100
00:06:42,159 --> 00:06:49,419
are<font color="#E5E5E5"> not going to talk</font><font color="#CCCCCC"> about cover today</font>

101
00:06:44,849 --> 00:06:54,400
<font color="#E5E5E5">cover is good but what if there is</font><font color="#CCCCCC"> no</font>

102
00:06:49,419 --> 00:06:57,729
<font color="#E5E5E5">cover</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> all cover is too easy easy to</font>

103
00:06:54,400 --> 00:07:03,340
<font color="#CCCCCC">break and not</font><font color="#E5E5E5"> old programming language</font>

104
00:06:57,729 --> 00:07:08,409
supposed golfer but in<font color="#CCCCCC"> SSS</font>

105
00:07:03,340 --> 00:07:15,840
the HTTP always<font color="#CCCCCC"> exists so</font><font color="#E5E5E5"> we focused on</font>

106
00:07:08,409 --> 00:07:15,840
<font color="#CCCCCC">the attack scenario under HTTP and HTTPS</font>

107
00:07:16,979 --> 00:07:27,159
this<font color="#E5E5E5"> matter SMTP protocol over HTTP</font>

108
00:07:23,279 --> 00:07:33,219
<font color="#CCCCCC">HTTPS is the security protocol so the</font>

109
00:07:27,159 --> 00:07:37,089
payload will be encrypted<font color="#E5E5E5"> so</font><font color="#CCCCCC"> how let's</font>

110
00:07:33,219 --> 00:07:44,289
think let's think about a question<font color="#E5E5E5"> what</font>

111
00:07:37,089 --> 00:07:48,270
won't be encrypted in<font color="#CCCCCC"> SSL handshake the</font>

112
00:07:44,289 --> 00:07:55,719
answer is as an<font color="#CCCCCC"> I</font><font color="#E5E5E5"> southern an indication</font>

113
00:07:48,270 --> 00:07:59,889
<font color="#E5E5E5">we can send HTTP</font><font color="#CCCCCC"> request</font><font color="#E5E5E5"> UNPO 20 file to</font>

114
00:07:55,719 --> 00:08:04,899
bypass the limitation<font color="#CCCCCC"> smoger</font>

115
00:07:59,889 --> 00:08:07,199
<font color="#CCCCCC">s NTV over</font><font color="#E5E5E5"> SSL as an eye I</font><font color="#CCCCCC"> think no one</font>

116
00:08:04,899 --> 00:08:11,469
<font color="#E5E5E5">mentioned this before</font>

117
00:08:07,199 --> 00:08:14,560
during the SSL the hello messenger will

118
00:08:11,469 --> 00:08:17,589
be the handshake that exchange<font color="#E5E5E5"> the</font>

119
00:08:14,560 --> 00:08:22,990
metadata<font color="#E5E5E5"> between the server and the</font><font color="#CCCCCC"> cry</font>

120
00:08:17,589 --> 00:08:26,919
and<font color="#E5E5E5"> they say and they</font><font color="#CCCCCC"> is sni extension</font>

121
00:08:22,990 --> 00:08:32,740
which<font color="#CCCCCC"> Spurs if specified the remote host</font>

122
00:08:26,919 --> 00:08:36,968
name in this message<font color="#E5E5E5"> so what if we can</font>

123
00:08:32,740 --> 00:08:41,140
disrupt<font color="#E5E5E5"> the</font><font color="#CCCCCC"> host name yes</font><font color="#E5E5E5"> the yellow</font>

124
00:08:36,969 --> 00:08:44,649
<font color="#CCCCCC">squirrel this space</font><font color="#E5E5E5"> make it possible to</font>

125
00:08:41,140 --> 00:08:49,959
embed<font color="#CCCCCC"> our malicious payload</font><font color="#E5E5E5"> in the</font>

126
00:08:44,649 --> 00:08:51,880
domain<font color="#CCCCCC"> name so you can</font><font color="#E5E5E5"> see with the</font>

127
00:08:49,959 --> 00:08:55,510
space we can now

128
00:08:51,880 --> 00:08:58,689
<font color="#E5E5E5">jerk new lies and data in the domain</font>

129
00:08:55,510 --> 00:09:01,990
<font color="#CCCCCC">name</font><font color="#E5E5E5"> okay</font>

130
00:08:58,690 --> 00:09:08,530
hi<font color="#CCCCCC"> this works we used a trick in</font><font color="#E5E5E5"> Lina's</font>

131
00:09:01,990 --> 00:09:13,270
<font color="#CCCCCC">G Lipsy</font><font color="#E5E5E5"> and we will introduce later the</font>

132
00:09:08,530 --> 00:09:17,829
data separated by<font color="#E5E5E5"> a new lies is SMTP</font>

133
00:09:13,270 --> 00:09:23,280
protocol we smuggled our<font color="#CCCCCC"> Comment simply</font>

134
00:09:17,830 --> 00:09:23,280
request a SMTP server to<font color="#E5E5E5"> send a mail</font>

135
00:09:25,050 --> 00:09:33,579
this is the request and the<font color="#CCCCCC"> response in</font>

136
00:09:29,140 --> 00:09:39,360
<font color="#E5E5E5">plain text you can see there is no HTTP</font>

137
00:09:33,580 --> 00:09:42,790
patent such as get<font color="#E5E5E5"> / or post / here</font><font color="#CCCCCC"> and</font>

138
00:09:39,360 --> 00:09:48,220
the server still recognized our payload

139
00:09:42,790 --> 00:09:52,829
<font color="#CCCCCC">as the valid valid convened so we</font>

140
00:09:48,220 --> 00:09:56,820
exploit the exploitable successfully

141
00:09:52,830 --> 00:10:01,980
<font color="#E5E5E5">these two examples are interesting right</font>

142
00:09:56,820 --> 00:10:01,980
<font color="#E5E5E5">okay let's go to our main content I</font>

143
00:10:02,250 --> 00:10:11,920
<font color="#E5E5E5">think they may be lots of bugs on URL</font>

144
00:10:07,720 --> 00:10:17,410
<font color="#E5E5E5">passes so I decide a faster to fight</font>

145
00:10:11,920 --> 00:10:20,560
this<font color="#CCCCCC"> problem out the idea is simple</font><font color="#E5E5E5"> we</font>

146
00:10:17,410 --> 00:10:25,750
create<font color="#E5E5E5"> add several groups in your URL</font>

147
00:10:20,560 --> 00:10:29,010
and<font color="#E5E5E5"> fill with random</font><font color="#CCCCCC"> pies our fasting</font>

148
00:10:25,750 --> 00:10:33,570
model just<font color="#CCCCCC"> tests or language</font>

149
00:10:29,010 --> 00:10:37,540
implementations<font color="#E5E5E5"> and find a weird one</font>

150
00:10:33,570 --> 00:10:42,160
because<font color="#E5E5E5"> we</font><font color="#CCCCCC"> also fast the URL requests</font>

151
00:10:37,540 --> 00:10:46,000
her so we need to<font color="#CCCCCC"> ensure they are</font><font color="#E5E5E5"> all in</font>

152
00:10:42,160 --> 00:10:50,140
the local network<font color="#E5E5E5"> so we set up so we</font>

153
00:10:46,000 --> 00:10:53,500
also set up<font color="#E5E5E5"> a local DNS server and a</font>

154
00:10:50,140 --> 00:10:58,750
local<font color="#CCCCCC"> webserver and IP tables to speed</font>

155
00:10:53,500 --> 00:11:02,890
<font color="#E5E5E5">our order process</font><font color="#CCCCCC"> for example</font><font color="#E5E5E5"> for the</font>

156
00:10:58,750 --> 00:11:05,180
same<font color="#CCCCCC"> input every language return 1 to 7</font>

157
00:11:02,890 --> 00:11:08,540
<font color="#E5E5E5">the one the one the one</font>

158
00:11:05,180 --> 00:11:12,290
but<font color="#CCCCCC"> he'll return when to Savin that to</font>

159
00:11:08,540 --> 00:11:17,079
that<font color="#CCCCCC"> to that</font><font color="#E5E5E5"> to so we compare the result</font>

160
00:11:12,290 --> 00:11:20,240
and figure out the weird one<font color="#E5E5E5"> is pearl</font>

161
00:11:17,080 --> 00:11:25,580
they see this is a real<font color="#E5E5E5"> world list all</font>

162
00:11:20,240 --> 00:11:29,080
our our input<font color="#E5E5E5"> is 1 to 7</font>

163
00:11:25,580 --> 00:11:34,730
the steel the steel<font color="#E5E5E5"> the one backslash</font>

164
00:11:29,080 --> 00:11:37,840
semicolon at<font color="#CCCCCC"> venues 7.2 that 2.2</font><font color="#E5E5E5"> and you</font>

165
00:11:34,730 --> 00:11:42,380
can see the result<font color="#E5E5E5"> the URL passer on</font>

166
00:11:37,840 --> 00:11:45,500
<font color="#E5E5E5">JavaScript is different from others so</font>

167
00:11:42,380 --> 00:11:50,780
we can<font color="#E5E5E5"> put</font><font color="#CCCCCC"> more attentions on</font><font color="#E5E5E5"> why</font>

168
00:11:45,500 --> 00:11:53,990
<font color="#CCCCCC">JavaScript have these</font><font color="#E5E5E5"> behaviors I have a</font>

169
00:11:50,780 --> 00:11:58,189
release my faster and github you can

170
00:11:53,990 --> 00:12:00,440
<font color="#E5E5E5">find a source on github account / orange</font>

171
00:11:58,190 --> 00:12:08,090
<font color="#CCCCCC">tea tableau</font><font color="#E5E5E5"> painting URL</font>

172
00:12:00,440 --> 00:12:13,460
<font color="#E5E5E5">faster okay okay so let's look what</font>

173
00:12:08,090 --> 00:12:16,820
issues<font color="#E5E5E5"> we fight from my father today we</font>

174
00:12:13,460 --> 00:12:23,590
prepared<font color="#E5E5E5"> four sections to make SS I've</font>

175
00:12:16,820 --> 00:12:28,040
read again first<font color="#E5E5E5"> part URL passing issues</font>

176
00:12:23,590 --> 00:12:32,740
this<font color="#E5E5E5"> is all about</font><font color="#CCCCCC"> inconsistency between</font>

177
00:12:28,040 --> 00:12:38,390
<font color="#E5E5E5">the URL</font><font color="#CCCCCC"> pattern and the URL</font><font color="#E5E5E5"> request</font><font color="#CCCCCC"> her</font>

178
00:12:32,740 --> 00:12:43,550
it is common to fix a<font color="#E5E5E5"> SSI by</font><font color="#CCCCCC"> validating</font>

179
00:12:38,390 --> 00:12:50,600
the URL but validating a URL<font color="#E5E5E5"> is a hard</font>

180
00:12:43,550 --> 00:12:55,930
work while the spec of URL is defined in

181
00:12:50,600 --> 00:13:00,860
RFC<font color="#E5E5E5"> 396 but only in spec we saw</font>

182
00:12:55,930 --> 00:13:04,150
implementation guidelines but WG is the

183
00:13:00,860 --> 00:13:09,490
community trying to divide our modern

184
00:13:04,150 --> 00:13:12,319
implementation based on RFC<font color="#E5E5E5"> but in fact</font>

185
00:13:09,490 --> 00:13:16,910
programming language still preferred

186
00:13:12,320 --> 00:13:18,889
their own implementation<font color="#E5E5E5"> more so there</font>

187
00:13:16,910 --> 00:13:27,019
are lots of mistakes

188
00:13:18,889 --> 00:13:30,499
URL passes<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> I've see definer URL this</font>

189
00:13:27,019 --> 00:13:33,639
is the URL components defied in RFC

190
00:13:30,499 --> 00:13:38,540
<font color="#E5E5E5">three three nine eight six</font>

191
00:13:33,639 --> 00:13:45,439
they are totally bypass<font color="#CCCCCC"> skin authority</font>

192
00:13:38,540 --> 00:13:49,549
<font color="#E5E5E5">pass query and fragment and this is what</font>

193
00:13:45,439 --> 00:13:54,309
we<font color="#E5E5E5"> will cover today the skin Authority</font>

194
00:13:49,549 --> 00:14:00,799
and path for the skin we only care about

195
00:13:54,309 --> 00:14:04,069
<font color="#E5E5E5">attack scenario under HTTP and HTTPS</font><font color="#CCCCCC"> for</font>

196
00:14:00,799 --> 00:14:07,249
the authority and<font color="#E5E5E5"> pass there are two</font>

197
00:14:04,069 --> 00:14:11,660
<font color="#E5E5E5">contracts to understand and we will take</font>

198
00:14:07,249 --> 00:14:17,059
a look later<font color="#E5E5E5"> finally</font><font color="#CCCCCC"> as the curry and</font>

199
00:14:11,660 --> 00:14:19,100
fragment<font color="#CCCCCC"> I don't care this is the big</font>

200
00:14:17,059 --> 00:14:23,540
picture<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the problems we will mention</font>

201
00:14:19,100 --> 00:14:27,739
today<font color="#E5E5E5"> we classify the URL passing issue</font>

202
00:14:23,540 --> 00:14:31,809
into three tabs<font color="#CCCCCC"> pro injection host</font>

203
00:14:27,739 --> 00:14:35,559
injection and<font color="#E5E5E5"> pass injection so does</font>

204
00:14:31,809 --> 00:14:38,929
<font color="#CCCCCC">portico</font><font color="#E5E5E5"> sparkling</font><font color="#CCCCCC"> snogging and pest</font>

205
00:14:35,559 --> 00:14:45,699
<font color="#E5E5E5">smuggling our host and smuggling and as</font>

206
00:14:38,929 --> 00:14:49,730
<font color="#CCCCCC">I consider the following code in PHP the</font>

207
00:14:45,699 --> 00:14:54,709
<font color="#CCCCCC">code simply fetches the user provide the</font>

208
00:14:49,730 --> 00:14:58,129
URL in order to prevent<font color="#CCCCCC"> SS RF developers</font>

209
00:14:54,709 --> 00:15:04,549
use<font color="#E5E5E5"> the function pass URL to check</font>

210
00:14:58,129 --> 00:15:12,470
<font color="#CCCCCC">Twitter</font><font color="#E5E5E5"> the host and a valid</font><font color="#CCCCCC"> or not</font><font color="#E5E5E5"> so</font>

211
00:15:04,549 --> 00:15:18,350
if you provide 127.0.0.1<font color="#CCCCCC"> and 81 you will</font>

212
00:15:12,470 --> 00:15:19,929
not pass the check but how about<font color="#CCCCCC"> this</font>

213
00:15:18,350 --> 00:15:23,059
URL

214
00:15:19,929 --> 00:15:27,410
everyone knows : is the separator

215
00:15:23,059 --> 00:15:30,589
between the host and the<font color="#CCCCCC"> poll</font><font color="#E5E5E5"> I've seen</font>

216
00:15:27,410 --> 00:15:32,719
the<font color="#E5E5E5"> finest</font><font color="#CCCCCC"> baked but didn't say how to</font>

217
00:15:30,589 --> 00:15:37,220
implement

218
00:15:32,720 --> 00:15:42,380
so will this<font color="#E5E5E5"> : be interpreted from the</font>

219
00:15:37,220 --> 00:15:46,730
phone or<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> back it</font><font color="#CCCCCC"> is interesting</font>

220
00:15:42,380 --> 00:15:50,990
<font color="#E5E5E5">for this eval the</font><font color="#CCCCCC"> PHP function</font><font color="#E5E5E5"> pass the</font>

221
00:15:46,730 --> 00:15:54,980
URL<font color="#E5E5E5"> recognized 80s poll</font><font color="#CCCCCC"> number but</font>

222
00:15:50,990 --> 00:15:59,540
actually PHP read file fetches the<font color="#E5E5E5"> poll</font>

223
00:15:54,980 --> 00:16:03,140
number<font color="#E5E5E5"> by one two and one both pass the</font>

224
00:15:59,540 --> 00:16:07,150
<font color="#CCCCCC">URL and read file</font><font color="#E5E5E5"> the building function</font>

225
00:16:03,140 --> 00:16:10,990
in PHP<font color="#CCCCCC"> but their behaviors are very</font>

226
00:16:07,150 --> 00:16:16,360
<font color="#E5E5E5">distinct so we can use this</font>

227
00:16:10,990 --> 00:16:20,510
<font color="#E5E5E5">inconsistency to bypass the check and</font>

228
00:16:16,360 --> 00:16:26,960
how<font color="#E5E5E5"> about this URL</font><font color="#CCCCCC"> Google account</font><font color="#E5E5E5"> number</font>

229
00:16:20,510 --> 00:16:30,170
sign at<font color="#E5E5E5"> Abel become this is another</font>

230
00:16:26,960 --> 00:16:33,520
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> pass the URL will</font>

231
00:16:30,170 --> 00:16:39,530
<font color="#CCCCCC">recognize Google account</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> host name</font>

232
00:16:33,520 --> 00:16:43,760
but the read file fetches evil.com this

233
00:16:39,530 --> 00:16:48,290
URL<font color="#CCCCCC"> perfectly bypass all</font><font color="#E5E5E5"> the</font>

234
00:16:43,760 --> 00:16:53,840
restrictions<font color="#E5E5E5"> but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> occurs about which</font>

235
00:16:48,290 --> 00:16:57,079
behaviors is the right one last make

236
00:16:53,840 --> 00:16:59,300
<font color="#E5E5E5">let's make a little</font><font color="#CCCCCC"> survey if you think</font>

237
00:16:57,080 --> 00:17:04,610
<font color="#E5E5E5">Google account is the right one</font><font color="#CCCCCC"> please</font>

238
00:16:59,300 --> 00:17:06,859
raise your hand<font color="#CCCCCC"> okay I think that domain</font>

239
00:17:04,609 --> 00:17:10,819
a<font color="#E5E5E5"> vote account already told you the</font>

240
00:17:06,859 --> 00:17:13,849
answer several<font color="#E5E5E5"> programming language</font>

241
00:17:10,819 --> 00:17:19,520
service suffered from this<font color="#E5E5E5"> issue like</font>

242
00:17:13,849 --> 00:17:23,899
PHP<font color="#E5E5E5"> Java</font><font color="#CCCCCC"> CRO and pison according</font><font color="#E5E5E5"> to the</font>

243
00:17:19,520 --> 00:17:27,619
IFC<font color="#E5E5E5"> the authority</font><font color="#CCCCCC"> part is preceded by</font><font color="#E5E5E5"> a</font>

244
00:17:23,900 --> 00:17:32,870
double slash and is terminated by<font color="#CCCCCC"> the</font>

245
00:17:27,619 --> 00:17:39,560
<font color="#CCCCCC">next / so the</font><font color="#E5E5E5"> appropriate authority</font><font color="#CCCCCC"> part</font>

246
00:17:32,870 --> 00:17:42,159
is<font color="#CCCCCC"> Google takong</font><font color="#E5E5E5"> okay if you don't like</font>

247
00:17:39,560 --> 00:17:46,070
PHP<font color="#CCCCCC"> Lux exploit curl</font>

248
00:17:42,160 --> 00:17:51,590
<font color="#CCCCCC">Crowe is the world famous</font><font color="#E5E5E5"> library and</font>

249
00:17:46,070 --> 00:17:57,020
lots of language<font color="#CCCCCC"> bitings</font><font color="#E5E5E5"> think about how</font>

250
00:17:51,590 --> 00:18:04,939
curl<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> parade</font><font color="#E5E5E5"> this URL</font><font color="#CCCCCC"> f oo</font><font color="#E5E5E5"> at a</font>

251
00:17:57,020 --> 00:18:07,820
<font color="#E5E5E5">verdict on o88 google.com most passers</font>

252
00:18:04,940 --> 00:18:12,280
<font color="#E5E5E5">recognized</font><font color="#CCCCCC"> Google account of the valid</font>

253
00:18:07,820 --> 00:18:15,740
host name but curl<font color="#CCCCCC"> fetches a verdict on</font>

254
00:18:12,280 --> 00:18:19,340
the<font color="#E5E5E5"> inconsistency between the passer and</font>

255
00:18:15,740 --> 00:18:25,070
curl will also lead to security problems

256
00:18:19,340 --> 00:18:27,679
<font color="#CCCCCC">I think we all</font><font color="#E5E5E5"> agree that crow is</font><font color="#CCCCCC"> the</font>

257
00:18:25,070 --> 00:18:31,490
<font color="#CCCCCC">world famous library</font><font color="#E5E5E5"> with lots of</font>

258
00:18:27,680 --> 00:18:35,210
language bindings<font color="#E5E5E5"> therefore if an</font>

259
00:18:31,490 --> 00:18:39,440
application<font color="#E5E5E5"> use is</font><font color="#CCCCCC"> passed in library to</font>

260
00:18:35,210 --> 00:18:44,840
check<font color="#CCCCCC"> the URL</font><font color="#E5E5E5"> but fetch the resource by</font>

261
00:18:39,440 --> 00:18:49,340
curl<font color="#E5E5E5"> it might be valuable this</font><font color="#CCCCCC"> is very</font>

262
00:18:44,840 --> 00:18:55,159
common<font color="#E5E5E5"> in PHP because PHP building HTTP</font>

263
00:18:49,340 --> 00:18:58,909
library<font color="#CCCCCC"> sucks after I find</font><font color="#E5E5E5"> this issue</font>

264
00:18:55,160 --> 00:19:02,320
<font color="#CCCCCC">I quickly report to the curl security</font>

265
00:18:58,910 --> 00:19:06,770
team and their reply is in no time

266
00:19:02,320 --> 00:19:10,070
but while checking the<font color="#E5E5E5"> patch I find we</font>

267
00:19:06,770 --> 00:19:14,030
can simply<font color="#E5E5E5"> bypass the patch by an</font>

268
00:19:10,070 --> 00:19:18,110
additional space but this is not the

269
00:19:14,030 --> 00:19:19,610
<font color="#E5E5E5">fold of curl this</font><font color="#CCCCCC"> also use a feature in</font>

270
00:19:18,110 --> 00:19:26,300
Lina's<font color="#CCCCCC"> gilepsy</font>

271
00:19:19,610 --> 00:19:30,020
and we will talk about<font color="#E5E5E5"> later however I</font>

272
00:19:26,300 --> 00:19:33,500
think curl can be more strict so I

273
00:19:30,020 --> 00:19:37,040
report again but this time<font color="#E5E5E5"> coding</font>

274
00:19:33,500 --> 00:19:41,330
replied<font color="#CCCCCC"> Odinson verified that the curl</font>

275
00:19:37,040 --> 00:19:44,120
is 100% synthetically correct<font color="#E5E5E5"> it is</font>

276
00:19:41,330 --> 00:19:48,460
<font color="#CCCCCC">instead documented to work with Guerrero</font>

277
00:19:44,120 --> 00:19:51,020
<font color="#E5E5E5">Anderson that you passed correct include</font>

278
00:19:48,460 --> 00:19:55,220
so<font color="#E5E5E5"> girls think this is programmers</font>

279
00:19:51,020 --> 00:19:59,240
problem so this won't be fixed but

280
00:19:55,220 --> 00:19:59,900
previous patch<font color="#E5E5E5"> still applied uncurl</font><font color="#CCCCCC"> 7</font>

281
00:19:59,240 --> 00:20:05,990
that

282
00:19:59,900 --> 00:20:09,850
<font color="#E5E5E5">fortifying okay the next attack vector</font>

283
00:20:05,990 --> 00:20:14,390
is about a<font color="#E5E5E5"> Unicode failure and not sales</font>

284
00:20:09,850 --> 00:20:17,719
look at the<font color="#E5E5E5"> following code in order to</font>

285
00:20:14,390 --> 00:20:18,650
<font color="#CCCCCC">prevent</font><font color="#E5E5E5"> directly traversal the code</font>

286
00:20:17,720 --> 00:20:23,090
check

287
00:20:18,650 --> 00:20:26,510
there is note that that in the past<font color="#E5E5E5"> so</font>

288
00:20:23,090 --> 00:20:31,100
you can't answers the file<font color="#E5E5E5"> outside</font><font color="#CCCCCC"> the</font>

289
00:20:26,510 --> 00:20:34,840
sandbox<font color="#E5E5E5"> directory the question is if</font>

290
00:20:31,100 --> 00:20:41,959
there is<font color="#CCCCCC"> a password file on the web loot</font>

291
00:20:34,840 --> 00:20:46,730
<font color="#E5E5E5">how to answers the file the answer is</font>

292
00:20:41,960 --> 00:20:50,240
using the<font color="#E5E5E5"> Unicode symbol for with n this</font>

293
00:20:46,730 --> 00:20:57,800
URL<font color="#CCCCCC"> actually access the file</font><font color="#E5E5E5"> password on</font>

294
00:20:50,240 --> 00:21:01,490
the web<font color="#E5E5E5"> loot</font><font color="#CCCCCC"> okay-y</font><font color="#E5E5E5"> last esperan the</font>

295
00:20:57,800 --> 00:21:05,500
<font color="#CCCCCC">javascript internal process the</font><font color="#E5E5E5"> unicode</font>

296
00:21:01,490 --> 00:21:09,230
string of encoding ucs-2

297
00:21:05,500 --> 00:21:16,429
so the<font color="#E5E5E5"> unicode symbol and</font><font color="#CCCCCC"> AOP</font>

298
00:21:09,230 --> 00:21:20,300
represented in FF 2 e and the tricky

299
00:21:16,429 --> 00:21:25,280
thing is the<font color="#CCCCCC"> puffer string in HTTP</font><font color="#E5E5E5"> major</font>

300
00:21:20,300 --> 00:21:30,620
will for the pipe and<font color="#E5E5E5"> the FF will be</font>

301
00:21:25,280 --> 00:21:35,090
<font color="#E5E5E5">stripped and</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> remaining part is to e</font>

302
00:21:30,620 --> 00:21:38,689
the athlete of that the server will

303
00:21:35,090 --> 00:21:41,840
identify that that<font color="#E5E5E5"> pad slash is the</font>

304
00:21:38,690 --> 00:21:44,360
parent directory<font color="#E5E5E5"> so we can download</font><font color="#CCCCCC"> the</font>

305
00:21:41,840 --> 00:21:49,220
password file on the web load from

306
00:21:44,360 --> 00:21:55,330
remote server<font color="#E5E5E5"> the double flow with n is</font>

307
00:21:49,220 --> 00:22:00,800
<font color="#CCCCCC">new that</font><font color="#E5E5E5"> a slash in</font><font color="#CCCCCC"> node.js</font><font color="#E5E5E5"> HTTP major</font>

308
00:21:55,330 --> 00:22:05,290
<font color="#CCCCCC">what he'll this technique can be also</font>

309
00:22:00,800 --> 00:22:09,889
applied on podcast marine originally

310
00:22:05,290 --> 00:22:13,850
HTTP<font color="#CCCCCC"> mature prevents users from CRF</font>

311
00:22:09,890 --> 00:22:16,670
injection the HTTP module

312
00:22:13,850 --> 00:22:22,550
will encode the new<font color="#E5E5E5"> line as</font>

313
00:22:16,670 --> 00:22:28,420
percent-encoding<font color="#E5E5E5"> so if we inject new</font>

314
00:22:22,550 --> 00:22:28,419
<font color="#E5E5E5">line in the past our smuggling will fail</font>

315
00:22:29,020 --> 00:22:38,150
but<font color="#E5E5E5"> we can break the protection by</font>

316
00:22:32,300 --> 00:22:42,580
<font color="#CCCCCC">unicode symbol FF z OT</font><font color="#E5E5E5"> + FF</font><font color="#CCCCCC"> CoA</font><font color="#E5E5E5"> the</font>

317
00:22:38,150 --> 00:22:47,900
<font color="#E5E5E5">floor is - and the floor with asterisk</font>

318
00:22:42,580 --> 00:22:51,590
<font color="#E5E5E5">the HTTP major cannot look at any new</font>

319
00:22:47,900 --> 00:22:55,010
line in the past but output<font color="#E5E5E5"> still for</font>

320
00:22:51,590 --> 00:23:01,330
the<font color="#CCCCCC"> pide and strip the FF so our</font>

321
00:22:55,010 --> 00:23:04,100
<font color="#E5E5E5">protocols</font><font color="#CCCCCC"> mounting reproduce again</font><font color="#E5E5E5"> okay</font>

322
00:23:01,330 --> 00:23:07,879
next section is about<font color="#E5E5E5"> the features and</font>

323
00:23:04,100 --> 00:23:12,199
<font color="#CCCCCC">Lina's juleps the first this is the</font>

324
00:23:07,880 --> 00:23:17,360
weird feature in<font color="#E5E5E5"> an SS function get</font><font color="#CCCCCC"> host</font>

325
00:23:12,200 --> 00:23:21,740
<font color="#CCCCCC">by name by looking the source of Julius</font>

326
00:23:17,360 --> 00:23:25,879
see there is the<font color="#CCCCCC"> Kuhlman</font><font color="#E5E5E5"> convert an</font>

327
00:23:21,740 --> 00:23:30,580
<font color="#E5E5E5">ASCII string into an encoded domain name</font>

328
00:23:25,880 --> 00:23:37,250
as per<font color="#E5E5E5"> I've see one field sweep fight</font>

329
00:23:30,580 --> 00:23:40,100
but what is<font color="#CCCCCC"> FC when</font><font color="#E5E5E5"> Z OC fight the</font><font color="#CCCCCC"> IFC</font>

330
00:23:37,250 --> 00:23:44,600
when zo<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> a describes the detail of</font>

331
00:23:40,100 --> 00:23:47,020
the<font color="#CCCCCC"> domain since</font><font color="#E5E5E5"> turn and protocol but</font>

332
00:23:44,600 --> 00:23:50,689
the surprise is the domain since turn

333
00:23:47,020 --> 00:23:55,370
support decimal conversion<font color="#E5E5E5"> in get host</font>

334
00:23:50,690 --> 00:24:00,560
by name you can see the C program<font color="#E5E5E5"> the</font>

335
00:23:55,370 --> 00:24:05,870
result of all our backs -<font color="#E5E5E5"> fill 9 7 and</font>

336
00:24:00,560 --> 00:24:10,550
GE that<font color="#E5E5E5"> hit W is equal to the result of</font>

337
00:24:05,870 --> 00:24:13,100
<font color="#E5E5E5">orange that he W</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lovely creep grab the</font>

338
00:24:10,550 --> 00:24:17,000
<font color="#CCCCCC">leaners memcache but I didn't find</font>

339
00:24:13,100 --> 00:24:22,010
anything<font color="#E5E5E5"> related related to this weird</font>

340
00:24:17,000 --> 00:24:27,290
feature<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> this may be</font><font color="#E5E5E5"> useful when</font>

341
00:24:22,010 --> 00:24:31,430
by pasting<font color="#E5E5E5"> some</font><font color="#CCCCCC"> black list</font><font color="#E5E5E5"> protections</font>

342
00:24:27,290 --> 00:24:35,540
and the<font color="#CCCCCC"> source-code</font><font color="#E5E5E5"> showed that get</font><font color="#CCCCCC"> host</font>

343
00:24:31,430 --> 00:24:41,000
by<font color="#CCCCCC"> name will</font><font color="#E5E5E5"> remove the backslash that</font>

344
00:24:35,540 --> 00:24:44,030
is not following by digit<font color="#E5E5E5"> this is also a</font>

345
00:24:41,000 --> 00:24:48,950
good way to add<font color="#E5E5E5"> first get your domain</font>

346
00:24:44,030 --> 00:24:52,760
<font color="#E5E5E5">name with lots of back slashes you can</font>

347
00:24:48,950 --> 00:24:56,510
see<font color="#E5E5E5"> I bring</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> the host name to show</font>

348
00:24:52,760 --> 00:25:01,820
<font color="#E5E5E5">that the escaping process is done by</font><font color="#CCCCCC"> cat</font>

349
00:24:56,510 --> 00:25:05,540
host<font color="#E5E5E5"> by name the next feature is</font><font color="#CCCCCC"> about</font>

350
00:25:01,820 --> 00:25:08,330
<font color="#E5E5E5">the leaners get</font><font color="#CCCCCC"> Agers info</font><font color="#E5E5E5"> gate address</font>

351
00:25:05,540 --> 00:25:13,040
info will strip shredding rubbish

352
00:25:08,330 --> 00:25:16,699
<font color="#E5E5E5">followed</font><font color="#CCCCCC"> by a valid IP format and the</font>

353
00:25:13,040 --> 00:25:20,420
white space you can see the<font color="#E5E5E5"> C program</font>

354
00:25:16,700 --> 00:25:25,370
<font color="#E5E5E5">the domain</font><font color="#CCCCCC"> windows 7</font><font color="#E5E5E5"> that deal that deal</font>

355
00:25:20,420 --> 00:25:31,040
<font color="#E5E5E5">the</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> space</font><font color="#CCCCCC"> f o is valid and</font><font color="#E5E5E5"> return</font>

356
00:25:25,370 --> 00:25:32,949
when do<font color="#CCCCCC"> seven</font><font color="#E5E5E5"> the deal the deal</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> 1k</font>

357
00:25:31,040 --> 00:25:37,070
<font color="#CCCCCC">dangers info is a very fundamental</font>

358
00:25:32,950 --> 00:25:41,540
function in leaners for example the

359
00:25:37,070 --> 00:25:45,679
<font color="#CCCCCC">function get host by name</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> tyson sake</font>

360
00:25:41,540 --> 00:25:52,370
<font color="#CCCCCC">major relied on leaners gate address</font>

361
00:25:45,680 --> 00:25:56,870
info so the<font color="#CCCCCC"> CRF F all in the domain</font><font color="#E5E5E5"> name</font>

362
00:25:52,370 --> 00:26:01,399
will be removed<font color="#E5E5E5"> this makes it possible</font>

363
00:25:56,870 --> 00:26:08,629
<font color="#E5E5E5">to to to</font><font color="#CCCCCC"> to more complex attacks based</font>

364
00:26:01,400 --> 00:26:11,300
<font color="#E5E5E5">on the polluted domain name</font><font color="#CCCCCC"> okay let's</font>

365
00:26:08,630 --> 00:26:17,150
talk about<font color="#E5E5E5"> how to exploit these features</font>

366
00:26:11,300 --> 00:26:22,040
on URL<font color="#E5E5E5"> passes URL passes might recognize</font>

367
00:26:17,150 --> 00:26:26,330
all the authority part is hosting but

368
00:26:22,040 --> 00:26:32,240
HTTP requests hers<font color="#E5E5E5"> still fetch</font><font color="#CCCCCC"> Windows 7</font>

369
00:26:26,330 --> 00:26:36,010
<font color="#E5E5E5">that deal deal the one the percent 2509</font>

370
00:26:32,240 --> 00:26:40,530
<font color="#CCCCCC">is the spatial one and and</font><font color="#E5E5E5"> need more</font>

371
00:26:36,010 --> 00:26:45,060
explanations why double including books

372
00:26:40,530 --> 00:26:49,050
if after<font color="#CCCCCC"> digging some libraries</font><font color="#E5E5E5"> those we</font>

373
00:26:45,060 --> 00:26:53,129
find<font color="#E5E5E5"> that libraries such as</font><font color="#CCCCCC"> Pearl be</font>

374
00:26:49,050 --> 00:26:55,980
called the URL twice so this<font color="#E5E5E5"> pattern are</font>

375
00:26:53,130 --> 00:27:03,030
useful when breaking some<font color="#CCCCCC"> subdomain</font>

376
00:26:55,980 --> 00:27:06,270
<font color="#E5E5E5">checks and how to exploit an SS features</font>

377
00:27:03,030 --> 00:27:11,060
and protocol smuggling first<font color="#E5E5E5"> why this</font>

378
00:27:06,270 --> 00:27:16,940
<font color="#CCCCCC">walk</font><font color="#E5E5E5"> this is because that HTTP protocol</font>

379
00:27:11,060 --> 00:27:21,360
<font color="#E5E5E5">1.1 required the host header and most of</font>

380
00:27:16,940 --> 00:27:26,550
libraries embed the hostname into HTTP

381
00:27:21,360 --> 00:27:29,850
<font color="#CCCCCC">request so the idea</font><font color="#E5E5E5"> is if we can inject</font>

382
00:27:26,550 --> 00:27:36,330
<font color="#CCCCCC">new lines in the hostname we have the</font>

383
00:27:29,850 --> 00:27:39,600
ability to smuggle protocols in HTTP<font color="#CCCCCC"> for</font>

384
00:27:36,330 --> 00:27:42,060
example the data with new line in the

385
00:27:39,600 --> 00:27:42,659
<font color="#CCCCCC">host name will be recognized as</font><font color="#E5E5E5"> the</font>

386
00:27:42,060 --> 00:27:46,919
valid

387
00:27:42,660 --> 00:27:50,400
<font color="#E5E5E5">Ready's command you can see we smarter</font>

388
00:27:46,920 --> 00:27:55,500
<font color="#E5E5E5">the sled of command over</font><font color="#CCCCCC"> the HTTP</font>

389
00:27:50,400 --> 00:27:58,350
protocol by the way the sled<font color="#E5E5E5"> of is the</font>

390
00:27:55,500 --> 00:28:02,190
use is the useful comment that you can

391
00:27:58,350 --> 00:28:05,250
make<font color="#CCCCCC"> out of bound to fix this is a this</font>

392
00:28:02,190 --> 00:28:12,150
<font color="#CCCCCC">is very</font><font color="#E5E5E5"> useful trick when you are</font><font color="#CCCCCC"> facing</font>

393
00:28:05,250 --> 00:28:13,050
some polite SS RF<font color="#CCCCCC"> sni injection is also</font>

394
00:28:12,150 --> 00:28:17,430
the same idea

395
00:28:13,050 --> 00:28:20,659
<font color="#E5E5E5">during the SSL the SN I extension will</font>

396
00:28:17,430 --> 00:28:24,060
embed a<font color="#E5E5E5"> host</font><font color="#CCCCCC"> name in the holo-message ER</font>

397
00:28:20,660 --> 00:28:27,390
so if we if<font color="#CCCCCC"> we inject new</font><font color="#E5E5E5"> line in the</font>

398
00:28:24,060 --> 00:28:33,780
host<font color="#E5E5E5"> name</font><font color="#CCCCCC"> we can find all the common in</font>

399
00:28:27,390 --> 00:28:36,300
the encrypted message<font color="#E5E5E5"> let's break the</font>

400
00:28:33,780 --> 00:28:42,450
patch of<font color="#CCCCCC"> license CVE</font>

401
00:28:36,300 --> 00:28:45,750
<font color="#CCCCCC">- so 2016</font><font color="#E5E5E5"> 5 6 9 9</font><font color="#CCCCCC"> X s crlf injection in</font>

402
00:28:42,450 --> 00:28:51,090
the<font color="#E5E5E5"> function put header of major HTTP</font>

403
00:28:45,750 --> 00:28:54,450
<font color="#E5E5E5">lip it also affects both URL Lib and URL</font>

404
00:28:51,090 --> 00:29:00,689
Lib<font color="#E5E5E5"> - because they use HTTP lip</font>

405
00:28:54,450 --> 00:29:03,600
to construct<font color="#CCCCCC"> their HTTP request Ison use</font>

406
00:29:00,690 --> 00:29:07,710
a regular expression<font color="#CCCCCC"> to ensure there is</font>

407
00:29:03,600 --> 00:29:12,469
<font color="#E5E5E5">no new line in the</font><font color="#CCCCCC"> hater</font><font color="#E5E5E5"> otherwise it</font>

408
00:29:07,710 --> 00:29:16,380
will rest<font color="#E5E5E5"> an arrow but pison</font><font color="#CCCCCC"> mac</font><font color="#E5E5E5"> and</font>

409
00:29:12,470 --> 00:29:20,490
exception of the tape and space followed

410
00:29:16,380 --> 00:29:26,220
<font color="#E5E5E5">by the new line so we can break the page</font>

411
00:29:20,490 --> 00:29:28,560
<font color="#E5E5E5">by a leading space you can see with the</font>

412
00:29:26,220 --> 00:29:33,330
space the UI<font color="#CCCCCC"> low leap and</font><font color="#E5E5E5"> you either</font>

413
00:29:28,560 --> 00:29:36,300
<font color="#CCCCCC">leap to Avila Napo again</font><font color="#E5E5E5"> but this bring</font>

414
00:29:33,330 --> 00:29:39,870
out a<font color="#E5E5E5"> new problem there is one more</font>

415
00:29:36,300 --> 00:29:45,300
leading<font color="#E5E5E5"> space in our payload thus</font>

416
00:29:39,870 --> 00:29:48,060
protocol smuggling work on this way the

417
00:29:45,300 --> 00:29:51,750
answer is<font color="#E5E5E5"> yes thanks to</font><font color="#CCCCCC"> the reddest</font><font color="#E5E5E5"> and</font>

418
00:29:48,060 --> 00:29:54,260
main cast as you can see the sled of

419
00:29:51,750 --> 00:29:58,740
common<font color="#E5E5E5"> start with a leading space and</font>

420
00:29:54,260 --> 00:30:01,230
the server still replied<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so radius</font>

421
00:29:58,740 --> 00:30:01,830
and<font color="#E5E5E5"> main cash will strip the leading</font>

422
00:30:01,230 --> 00:30:08,240
space

423
00:30:01,830 --> 00:30:08,240
so our exploit so our expiry<font color="#E5E5E5"> works again</font>

424
00:30:09,920 --> 00:30:17,250
the last the<font color="#CCCCCC"> last neck the last attack</font>

425
00:30:13,380 --> 00:30:19,980
<font color="#E5E5E5">vector is about ID and main sender ID</font><font color="#CCCCCC"> ma</font>

426
00:30:17,250 --> 00:30:24,000
<font color="#E5E5E5">defined a standard of Unicode in</font>

427
00:30:19,980 --> 00:30:30,120
dominance<font color="#E5E5E5"> instant</font><font color="#CCCCCC"> the a true primary</font>

428
00:30:24,000 --> 00:30:35,010
version<font color="#E5E5E5"> of ID and</font><font color="#CCCCCC"> May 2003 and 2008</font><font color="#E5E5E5"> but</font>

429
00:30:30,120 --> 00:30:39,179
ID ma<font color="#E5E5E5"> 2000 a is too strict so most of</font>

430
00:30:35,010 --> 00:30:44,000
the passers<font color="#CCCCCC"> follow</font><font color="#E5E5E5"> the IDM a 2003 with</font>

431
00:30:39,180 --> 00:30:48,630
UTS<font color="#CCCCCC"> 46 transition the i-dna</font>

432
00:30:44,000 --> 00:30:52,560
<font color="#CCCCCC">cipolla of weird unicode transitions for</font>

433
00:30:48,630 --> 00:30:55,200
example the circled alphabet will be

434
00:30:52,560 --> 00:30:59,879
recognized as the valid<font color="#E5E5E5"> later in</font>

435
00:30:55,200 --> 00:31:03,720
dominance<font color="#E5E5E5"> in stone in</font><font color="#CCCCCC"> the único to the</font>

436
00:30:59,880 --> 00:31:07,980
old<font color="#CCCCCC"> Zod</font><font color="#E5E5E5"> the always joiner will be</font>

437
00:31:03,720 --> 00:31:12,750
removed in<font color="#E5E5E5"> ID ma 2003 with duty duty</font>

438
00:31:07,980 --> 00:31:16,380
<font color="#CCCCCC">46</font><font color="#E5E5E5"> transition so if the</font><font color="#CCCCCC"> parser and</font><font color="#E5E5E5"> the</font>

439
00:31:12,750 --> 00:31:19,260
request adult adopt different<font color="#E5E5E5"> IDM a</font>

440
00:31:16,380 --> 00:31:24,900
standard<font color="#E5E5E5"> it might be a security</font><font color="#CCCCCC"> comes</font>

441
00:31:19,260 --> 00:31:28,320
<font color="#CCCCCC">problem the verify example is the Latin</font>

442
00:31:24,900 --> 00:31:32,000
later<font color="#E5E5E5"> small shop ace this is a</font>

443
00:31:28,320 --> 00:31:37,230
<font color="#CCCCCC">JavaScript example you can run on your</font>

444
00:31:32,000 --> 00:31:41,700
<font color="#E5E5E5">process you can see the symbol in lower</font>

445
00:31:37,230 --> 00:31:45,419
caste is a<font color="#CCCCCC"> same</font><font color="#E5E5E5"> as itself but in</font>

446
00:31:41,700 --> 00:31:50,330
uppercase<font color="#E5E5E5"> it becomes a double capital is</font>

447
00:31:45,419 --> 00:31:54,960
in the<font color="#CCCCCC"> retraction</font><font color="#E5E5E5"> in browsers will go to</font>

448
00:31:50,330 --> 00:31:58,290
wordpress.com<font color="#E5E5E5"> this is very useful</font><font color="#CCCCCC"> when</font>

449
00:31:54,960 --> 00:32:04,440
braking sound blacklist<font color="#E5E5E5"> and we will give</font>

450
00:31:58,290 --> 00:32:09,570
a real case study later<font color="#E5E5E5"> okay</font>

451
00:32:04,440 --> 00:32:13,320
case studies this table<font color="#CCCCCC"> shows which</font>

452
00:32:09,570 --> 00:32:16,100
components<font color="#E5E5E5"> WordPress be bullied and</font><font color="#CCCCCC"> mybb</font>

453
00:32:13,320 --> 00:32:20,000
<font color="#CCCCCC">will to treat a</font><font color="#E5E5E5"> URL</font>

454
00:32:16,100 --> 00:32:23,370
the main concept of the bypass is

455
00:32:20,000 --> 00:32:26,760
fighting the different behaviors<font color="#E5E5E5"> among</font>

456
00:32:23,370 --> 00:32:30,989
the passer<font color="#CCCCCC"> the owners checker and the</font>

457
00:32:26,760 --> 00:32:35,690
requester if you find<font color="#CCCCCC"> one then you have</font>

458
00:32:30,990 --> 00:32:35,690
the<font color="#CCCCCC"> ability to bypass the restriction</font>

459
00:32:36,320 --> 00:32:43,649
this is the source of my<font color="#E5E5E5"> be be the first</font>

460
00:32:40,020 --> 00:32:48,780
bypass is not a new trick is<font color="#E5E5E5"> time of</font>

461
00:32:43,650 --> 00:32:51,630
<font color="#CCCCCC">check to tie off dues problem mybb</font><font color="#E5E5E5"> use</font>

462
00:32:48,780 --> 00:32:55,820
<font color="#E5E5E5">passive</font><font color="#CCCCCC"> area to check</font><font color="#E5E5E5"> whether the</font>

463
00:32:51,630 --> 00:33:00,809
<font color="#E5E5E5">hostname skin and pull a valid or not</font>

464
00:32:55,820 --> 00:33:05,490
<font color="#CCCCCC">and also use get host</font><font color="#E5E5E5"> binding to resolve</font>

465
00:33:00,809 --> 00:33:10,070
the<font color="#CCCCCC"> table to resolve the domain but to</font>

466
00:33:05,490 --> 00:33:14,280
<font color="#E5E5E5">ensure</font><font color="#CCCCCC"> that the ages is not impact least</font>

467
00:33:10,070 --> 00:33:19,439
<font color="#E5E5E5">now if the URL passed all the track my</font>

468
00:33:14,280 --> 00:33:20,820
<font color="#E5E5E5">BB will fetch the URL by curl the</font>

469
00:33:19,440 --> 00:33:26,580
problem is

470
00:33:20,820 --> 00:33:33,030
the stay<font color="#CCCCCC"> of Trek and the stay of use can</font>

471
00:33:26,580 --> 00:33:37,800
<font color="#CCCCCC">be different we can set up a DNA server</font>

472
00:33:33,030 --> 00:33:42,110
and lead the first query to a number at

473
00:33:37,800 --> 00:33:45,000
least ages<font color="#E5E5E5"> such as one that 2-3 the full</font>

474
00:33:42,110 --> 00:33:49,620
after we passed<font color="#E5E5E5"> the trick my baby will</font>

475
00:33:45,000 --> 00:33:53,160
fetch<font color="#E5E5E5"> the URL by curl the curl</font><font color="#CCCCCC"> will</font>

476
00:33:49,620 --> 00:33:56,669
create the domain name again<font color="#E5E5E5"> at the</font>

477
00:33:53,160 --> 00:33:59,100
<font color="#E5E5E5">moment we change the DNS record to</font><font color="#CCCCCC"> one</font>

478
00:33:56,670 --> 00:34:02,880
to<font color="#CCCCCC"> seven a seal the seal the one</font>

479
00:33:59,100 --> 00:34:05,969
so the stay in<font color="#CCCCCC"> check</font><font color="#E5E5E5"> is one that</font><font color="#CCCCCC"> 2-3</font><font color="#E5E5E5"> the</font>

480
00:34:02,880 --> 00:34:09,780
<font color="#CCCCCC">faux</font><font color="#E5E5E5"> but the stay in use is</font><font color="#CCCCCC"> one to seven</font>

481
00:34:05,970 --> 00:34:15,750
<font color="#E5E5E5">the CEO does the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> one so then we</font>

482
00:34:09,780 --> 00:34:18,870
<font color="#E5E5E5">can bypass the protection the next</font>

483
00:34:15,750 --> 00:34:21,929
bypass is about the support of IDM a

484
00:34:18,870 --> 00:34:25,080
standard<font color="#CCCCCC"> Kuro is a very intelligent</font>

485
00:34:21,929 --> 00:34:30,780
library which can automatically convert

486
00:34:25,080 --> 00:34:34,310
<font color="#CCCCCC">a global dominant to an IP ages but PHP</font>

487
00:34:30,780 --> 00:34:37,679
get hosts by name can't<font color="#CCCCCC"> these</font>

488
00:34:34,310 --> 00:34:42,299
<font color="#E5E5E5">inconsistency also leads to it also lead</font>

489
00:34:37,679 --> 00:34:45,540
to<font color="#E5E5E5"> the SS</font><font color="#CCCCCC"> dive bypass you can see for</font>

490
00:34:42,300 --> 00:34:49,530
the URL get<font color="#E5E5E5"> host by name will return</font>

491
00:34:45,540 --> 00:34:56,219
false and<font color="#E5E5E5"> pass the church but the curls</font>

492
00:34:49,530 --> 00:34:59,010
<font color="#CCCCCC">deal fetches 127.0.0.1 the last bypass</font>

493
00:34:56,219 --> 00:35:02,399
is the<font color="#E5E5E5"> inconsistency between the passer</font>

494
00:34:59,010 --> 00:35:05,700
<font color="#E5E5E5">and the requester we mentioned several</font>

495
00:35:02,400 --> 00:35:08,340
you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> arrow passing box</font><font color="#CCCCCC"> before by</font>

496
00:35:05,700 --> 00:35:11,490
using<font color="#E5E5E5"> this box</font><font color="#CCCCCC"> we can bypass all the</font>

497
00:35:08,340 --> 00:35:14,280
restrictions<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the numbers sign back</font>

498
00:35:11,490 --> 00:35:17,399
the past the<font color="#E5E5E5"> passive</font><font color="#CCCCCC"> REO</font><font color="#E5E5E5"> recognized</font>

499
00:35:14,280 --> 00:35:21,870
Google<font color="#E5E5E5"> account is host name but curl</font>

500
00:35:17,400 --> 00:35:25,410
<font color="#E5E5E5">fetch</font><font color="#CCCCCC"> 1:07 azile pass deal the one this</font>

501
00:35:21,870 --> 00:35:29,700
<font color="#E5E5E5">is handy but has been fixed</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> PHP one</font>

502
00:35:25,410 --> 00:35:32,339
<font color="#CCCCCC">toss deal that's 13 if you don't like</font>

503
00:35:29,700 --> 00:35:34,970
<font color="#E5E5E5">PHP you can still exploit the back in</font>

504
00:35:32,340 --> 00:35:39,540
curl and the result<font color="#E5E5E5"> is the same</font>

505
00:35:34,970 --> 00:35:42,890
this park is also<font color="#E5E5E5"> fixed in curl 7.15 fo</font>

506
00:35:39,540 --> 00:35:47,250
but most of the<font color="#CCCCCC"> petrous didn't keep up</font>

507
00:35:42,890 --> 00:35:50,098
for example the lip curl in the<font color="#CCCCCC"> version</font>

508
00:35:47,250 --> 00:35:53,820
in<font color="#CCCCCC"> Ubuntu in the</font><font color="#E5E5E5"> latest version of</font>

509
00:35:50,099 --> 00:35:56,220
Ubuntu is still<font color="#CCCCCC"> 7.50 to that one so I</font>

510
00:35:53,820 --> 00:36:00,210
think<font color="#E5E5E5"> most sinston are still on this</font>

511
00:35:56,220 --> 00:36:03,118
<font color="#E5E5E5">thread or you can use the space</font>

512
00:36:00,210 --> 00:36:06,060
technique we mentioned before<font color="#CCCCCC"> in this</font>

513
00:36:03,119 --> 00:36:08,390
issue and about<font color="#E5E5E5"> this issue curl won't</font>

514
00:36:06,060 --> 00:36:08,390
fix

515
00:36:08,930 --> 00:36:14,339
<font color="#E5E5E5">okay let's see our last case study</font>

516
00:36:11,190 --> 00:36:17,430
<font color="#CCCCCC">github in the price</font><font color="#E5E5E5"> github</font><font color="#CCCCCC"> Enterprise is</font>

517
00:36:14,339 --> 00:36:20,460
<font color="#CCCCCC">the local</font><font color="#E5E5E5"> version of github that</font><font color="#CCCCCC"> you can</font>

518
00:36:17,430 --> 00:36:24,270
deploy a whole github service in your

519
00:36:20,460 --> 00:36:27,060
<font color="#CCCCCC">private network</font><font color="#E5E5E5"> most of the code are</font>

520
00:36:24,270 --> 00:36:31,200
written in Ruby and rails and out first

521
00:36:27,060 --> 00:36:34,670
kid<font color="#E5E5E5"> the code base of github and price</font>

522
00:36:31,200 --> 00:36:37,980
seems<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> sent as github</font><font color="#E5E5E5"> account and</font>

523
00:36:34,670 --> 00:36:40,920
there is<font color="#E5E5E5"> an environment</font><font color="#CCCCCC"> valuable that</font>

524
00:36:37,980 --> 00:36:45,810
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can switch the mode from Enterprise</font>

525
00:36:40,920 --> 00:36:48,900
version<font color="#E5E5E5"> to the conversion so if you want</font>

526
00:36:45,810 --> 00:36:52,410
to<font color="#E5E5E5"> study the security and</font><font color="#CCCCCC"> github</font><font color="#E5E5E5"> I</font>

527
00:36:48,900 --> 00:36:57,180
highly<font color="#CCCCCC"> recommend github</font><font color="#E5E5E5"> Enterprise to</font>

528
00:36:52,410 --> 00:36:59,490
you in this<font color="#E5E5E5"> case I will show you a</font>

529
00:36:57,180 --> 00:37:02,040
beautiful<font color="#E5E5E5"> exploitation that</font><font color="#CCCCCC"> churned</font>

530
00:36:59,490 --> 00:37:05,640
<font color="#E5E5E5">forward and abilities into a critical</font>

531
00:37:02,040 --> 00:37:08,250
remote code execution<font color="#E5E5E5"> it also won the</font>

532
00:37:05,640 --> 00:37:12,810
best repo in github<font color="#E5E5E5"> third bug bounty</font>

533
00:37:08,250 --> 00:37:15,540
anniversary<font color="#CCCCCC"> by après in github</font>

534
00:37:12,810 --> 00:37:19,710
<font color="#CCCCCC">Enterprise I note each day is an</font>

535
00:37:15,540 --> 00:37:23,490
interesting feature called<font color="#CCCCCC"> web hook web</font>

536
00:37:19,710 --> 00:37:28,790
hook can define<font color="#E5E5E5"> a constant HTTP call</font>

537
00:37:23,490 --> 00:37:28,790
back when<font color="#CCCCCC"> specific get common</font><font color="#E5E5E5"> occurs</font>

538
00:37:29,150 --> 00:37:36,960
github<font color="#CCCCCC"> used Looby June 30 to fetch</font>

539
00:37:33,290 --> 00:37:41,759
external resource and prevent<font color="#E5E5E5"> the user</font>

540
00:37:36,960 --> 00:37:47,220
from<font color="#CCCCCC"> SSI by</font><font color="#E5E5E5"> June</font><font color="#CCCCCC"> valid I</font><font color="#E5E5E5"> restrict IP</font>

541
00:37:41,760 --> 00:37:47,820
addresses<font color="#CCCCCC"> but</font><font color="#E5E5E5"> ring seems to be just a</font>

542
00:37:47,220 --> 00:37:52,339
simple

543
00:37:47,820 --> 00:37:58,220
blacklist and can be<font color="#CCCCCC"> bypassed by a zero</font>

544
00:37:52,340 --> 00:37:58,220
Elena's the<font color="#E5E5E5"> zero stands for local host</font>

545
00:37:58,490 --> 00:38:07,859
<font color="#E5E5E5">so we got a SS I've now however we still</font>

546
00:38:03,330 --> 00:38:12,690
can do<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> right there are several</font>

547
00:38:07,860 --> 00:38:17,340
<font color="#CCCCCC">limitation in this SSI F such as</font><font color="#E5E5E5"> this SS</font>

548
00:38:12,690 --> 00:38:22,310
I've only a<font color="#CCCCCC"> loaded skin HTTP and HTTPS</font>

549
00:38:17,340 --> 00:38:26,550
<font color="#E5E5E5">and we can change the sting by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> co2</font>

550
00:38:22,310 --> 00:38:30,900
redirection this is also a post post

551
00:38:26,550 --> 00:38:35,700
<font color="#CCCCCC">based exercise we can and we can even</font>

552
00:38:30,900 --> 00:38:39,480
<font color="#E5E5E5">control the hater or the post data the</font>

553
00:38:35,700 --> 00:38:46,200
most important thing is there is no CRF

554
00:38:39,480 --> 00:38:49,650
injection in this SS<font color="#CCCCCC"> RF but we have a</font><font color="#E5E5E5"> SS</font>

555
00:38:46,200 --> 00:38:53,580
<font color="#CCCCCC">I've below with lots of limitation my</font>

556
00:38:49,650 --> 00:38:56,640
next idea is is there any service we<font color="#CCCCCC"> can</font>

557
00:38:53,580 --> 00:39:00,299
leverage it is a paid work

558
00:38:56,640 --> 00:39:02,990
there are several service inside an<font color="#CCCCCC"> aged</font>

559
00:39:00,300 --> 00:39:06,630
service based on different language

560
00:39:02,990 --> 00:39:10,859
implementation such as<font color="#E5E5E5"> c3 prosperous</font>

561
00:39:06,630 --> 00:39:14,550
<font color="#CCCCCC">goal and pison with a couple of days</font>

562
00:39:10,860 --> 00:39:19,500
digging<font color="#CCCCCC"> I find there is</font><font color="#E5E5E5"> a service</font><font color="#CCCCCC"> code</font>

563
00:39:14,550 --> 00:39:21,600
<font color="#E5E5E5">grave</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> untold a thousand birth</font>

564
00:39:19,500 --> 00:39:25,080
<font color="#E5E5E5">fried is</font><font color="#CCCCCC"> the highly</font><font color="#E5E5E5"> scalable and</font>

565
00:39:21,600 --> 00:39:29,549
<font color="#CCCCCC">real-time briefings instant</font><font color="#E5E5E5"> of course we</font>

566
00:39:25,080 --> 00:39:32,490
fight another SS<font color="#E5E5E5"> I've here the second</font>

567
00:39:29,550 --> 00:39:39,300
exercise is simple<font color="#CCCCCC"> clarify trust</font>

568
00:39:32,490 --> 00:39:42,689
<font color="#E5E5E5">fetch the URL from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> cat pyramid but</font>

569
00:39:39,300 --> 00:39:45,690
we should we<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> exercise now and we</font>

570
00:39:42,690 --> 00:39:51,990
can<font color="#CCCCCC"> combine these two</font><font color="#E5E5E5"> essays life into a</font>

571
00:39:45,690 --> 00:39:56,040
<font color="#CCCCCC">SSF execution and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> successfully</font><font color="#E5E5E5"> switch</font>

572
00:39:51,990 --> 00:39:58,910
a post based exercise into a<font color="#E5E5E5"> cat based</font>

573
00:39:56,040 --> 00:39:58,910
<font color="#E5E5E5">SSI</font>

574
00:40:00,480 --> 00:40:07,109
third<font color="#E5E5E5"> part is the</font><font color="#CCCCCC"> CRF injection and</font>

575
00:40:03,510 --> 00:40:10,800
great fight<font color="#E5E5E5"> as you can see the</font>

576
00:40:07,109 --> 00:40:15,630
implementation<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> second SS AF is</font>

577
00:40:10,800 --> 00:40:19,859
<font color="#CCCCCC">Pisan HTTP leap earlier we mentioned</font>

578
00:40:15,630 --> 00:40:26,190
<font color="#E5E5E5">that HTTP</font><font color="#CCCCCC"> Lake suffered from the RF</font>

579
00:40:19,859 --> 00:40:28,590
injection so who is the CRF<font color="#E5E5E5"> injection we</font>

580
00:40:26,190 --> 00:40:31,890
now have the ability<font color="#E5E5E5"> to smarter</font>

581
00:40:28,590 --> 00:40:39,660
protocols in this<font color="#CCCCCC"> as</font><font color="#E5E5E5"> as I've asked you</font>

582
00:40:31,890 --> 00:40:42,779
<font color="#CCCCCC">gentian however the next</font><font color="#E5E5E5"> problem is what</font>

583
00:40:39,660 --> 00:40:48,410
protocol the<font color="#E5E5E5"> I choose to smugger</font>

584
00:40:42,780 --> 00:40:51,390
<font color="#E5E5E5">I spend lots of time to find out how the</font>

585
00:40:48,410 --> 00:40:55,160
vulnerabilities can<font color="#CCCCCC"> be triggered if I</font>

586
00:40:51,390 --> 00:40:59,310
can control the radius or<font color="#E5E5E5"> memcached</font>

587
00:40:55,160 --> 00:41:04,140
<font color="#E5E5E5">while reviewing the sauce I am cursed</font>

588
00:40:59,310 --> 00:41:08,190
about<font color="#CCCCCC"> my key hub can</font><font color="#E5E5E5"> store Ruby object</font>

589
00:41:04,140 --> 00:41:12,690
in main cached after some digging

590
00:41:08,190 --> 00:41:16,410
I fight github use<font color="#E5E5E5"> Ruby Jean to store</font>

591
00:41:12,690 --> 00:41:20,790
the cache and the cache was wrapped by

592
00:41:16,410 --> 00:41:26,368
Masha<font color="#E5E5E5"> it's a good news to</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> everyone</font>

593
00:41:20,790 --> 00:41:29,970
knows<font color="#CCCCCC"> Masha is very dangerous so our</font>

594
00:41:26,369 --> 00:41:33,180
core is very<font color="#E5E5E5"> clear we use our SS I've</font>

595
00:41:29,970 --> 00:41:37,890
asked you<font color="#CCCCCC"> shenzhen to store malicious</font>

596
00:41:33,180 --> 00:41:42,660
loopy<font color="#E5E5E5"> object in</font><font color="#CCCCCC"> main cached</font><font color="#E5E5E5"> the next</font>

597
00:41:37,890 --> 00:41:45,859
time github<font color="#CCCCCC"> patches</font><font color="#E5E5E5"> the cache the Lu</font>

598
00:41:42,660 --> 00:41:51,029
<font color="#CCCCCC">bitching will</font><font color="#E5E5E5"> dis</font><font color="#CCCCCC"> arise</font><font color="#E5E5E5"> the data</font>

599
00:41:45,859 --> 00:41:55,319
automatically and the result is we<font color="#E5E5E5"> got a</font>

600
00:41:51,030 --> 00:42:00,060
<font color="#E5E5E5">remote code execution here is the final</font>

601
00:41:55,320 --> 00:42:03,960
payload there are several<font color="#E5E5E5"> paths the red</font>

602
00:42:00,060 --> 00:42:08,700
path is the 1st SS I've<font color="#E5E5E5"> bypass in</font>

603
00:42:03,960 --> 00:42:13,470
webhook combined<font color="#E5E5E5"> with the blue part the</font>

604
00:42:08,700 --> 00:42:13,980
<font color="#E5E5E5">2nd SS AF the yellow is</font><font color="#CCCCCC"> the main</font><font color="#E5E5E5"> cash</font>

605
00:42:13,470 --> 00:42:18,720
<font color="#CCCCCC">pot</font>

606
00:42:13,980 --> 00:42:26,280
we smuggled and the final dark blue paw

607
00:42:18,720 --> 00:42:30,089
is our malicious<font color="#E5E5E5"> rupee abjure in this</font>

608
00:42:26,280 --> 00:42:33,869
case we<font color="#CCCCCC"> asked you'd</font><font color="#E5E5E5"> the common IT pipe</font>

609
00:42:30,089 --> 00:42:38,820
<font color="#E5E5E5">orange uncie orange defeat a blue pot</font>

610
00:42:33,869 --> 00:42:42,560
one two three four five<font color="#CCCCCC"> in this</font><font color="#E5E5E5"> case a</font>

611
00:42:38,820 --> 00:42:46,230
<font color="#E5E5E5">word</font><font color="#CCCCCC"> $12,500</font><font color="#E5E5E5"> from github</font>

612
00:42:42,560 --> 00:42:50,210
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> let's watch the demo video remote</font>

613
00:42:46,230 --> 00:42:50,210
code execution<font color="#E5E5E5"> and github enterprise</font>

614
00:43:06,550 --> 00:43:13,360
okay this is github in the price it's

615
00:43:08,770 --> 00:43:17,080
very similar to github.com<font color="#E5E5E5"> the version</font>

616
00:43:13,360 --> 00:43:20,680
is<font color="#E5E5E5"> to that</font><font color="#CCCCCC"> 8r6</font><font color="#E5E5E5"> in order to add a web</font>

617
00:43:17,080 --> 00:43:26,980
hook<font color="#E5E5E5"> we open our profile repository and</font>

618
00:43:20,680 --> 00:43:34,779
settings click hooks<font color="#E5E5E5"> and service and add</font>

619
00:43:26,980 --> 00:43:43,390
a web hook<font color="#CCCCCC"> okay here is the</font><font color="#E5E5E5"> code back</font>

620
00:43:34,780 --> 00:43:56,320
<font color="#CCCCCC">URL we open our console and is our</font>

621
00:43:43,390 --> 00:43:57,910
exploit file and run<font color="#E5E5E5"> the expo</font><font color="#CCCCCC"> ii here is</font>

622
00:43:56,320 --> 00:44:01,030
our<font color="#E5E5E5"> exercised pelo</font>

623
00:43:57,910 --> 00:44:10,810
we pass the payload<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the github</font><font color="#E5E5E5"> in the</font>

624
00:44:01,030 --> 00:44:13,690
price<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> when we submit the phone the SI</font>

625
00:44:10,810 --> 00:44:18,310
size exclusion train will insert a

626
00:44:13,690 --> 00:44:23,380
malicious data to the main cast<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> we</font>

627
00:44:18,310 --> 00:44:27,730
listen<font color="#E5E5E5"> a poll on 1 2</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> 4 5 and what the</font>

628
00:44:23,380 --> 00:44:30,700
comment back the final step is to

629
00:44:27,730 --> 00:44:37,810
trigger the digitalization<font color="#CCCCCC"> we can search</font>

630
00:44:30,700 --> 00:44:41,430
a keyword<font color="#E5E5E5"> to trigger the</font><font color="#CCCCCC"> ze</font><font color="#E5E5E5"> ok as you</font>

631
00:44:37,810 --> 00:44:41,430
<font color="#CCCCCC">can see we</font><font color="#E5E5E5"> got a show</font>

632
00:45:00,520 --> 00:45:07,690
<font color="#E5E5E5">okay medications how to prevent such</font>

633
00:45:03,340 --> 00:45:10,960
attacks in SS I've from two aspects for

634
00:45:07,690 --> 00:45:14,800
<font color="#E5E5E5">application-layer use the only IP to</font>

635
00:45:10,960 --> 00:45:19,780
connect<font color="#E5E5E5"> and the remember don't reuse the</font>

636
00:45:14,800 --> 00:45:23,560
URL<font color="#CCCCCC"> that user provided</font><font color="#E5E5E5"> for network layer</font>

637
00:45:19,780 --> 00:45:27,340
use firewall or network policy to block

638
00:45:23,560 --> 00:45:30,690
<font color="#E5E5E5">internal traffic's there are also</font>

639
00:45:27,340 --> 00:45:35,350
projects that decide<font color="#CCCCCC"> to prevent you from</font>

640
00:45:30,690 --> 00:45:40,680
<font color="#E5E5E5">ssize attacks</font><font color="#CCCCCC"> safe curl</font><font color="#E5E5E5"> by finite over</font>

641
00:45:35,350 --> 00:45:43,960
the world kid by<font color="#CCCCCC"> jordan mail ok summary</font>

642
00:45:40,680 --> 00:45:48,100
first<font color="#E5E5E5"> we</font><font color="#CCCCCC"> introduce a new</font><font color="#E5E5E5"> attack surface</font>

643
00:45:43,960 --> 00:45:50,680
RSS I've bypassed<font color="#E5E5E5"> include the issue on</font>

644
00:45:48,100 --> 00:45:54,490
<font color="#E5E5E5">URL pastors and the inconsistency</font>

645
00:45:50,680 --> 00:45:56,799
<font color="#E5E5E5">between the idea</font><font color="#CCCCCC"> neighs dangers second</font>

646
00:45:54,490 --> 00:45:59,950
new attack vectors and protocol

647
00:45:56,800 --> 00:46:03,100
smuggling<font color="#E5E5E5"> we showed that</font><font color="#CCCCCC"> weird feature</font>

648
00:45:59,950 --> 00:46:07,270
<font color="#E5E5E5">on Lena's</font><font color="#CCCCCC"> Judy PC and the</font><font color="#E5E5E5"> Unicode</font>

649
00:46:03,100 --> 00:46:10,660
failure and<font color="#CCCCCC"> note says these issues can</font>

650
00:46:07,270 --> 00:46:13,830
inject malicious payload<font color="#E5E5E5"> in a valid HTTP</font>

651
00:46:10,660 --> 00:46:18,520
<font color="#E5E5E5">request to bypass the firewall and touch</font>

652
00:46:13,830 --> 00:46:21,790
the intranet<font color="#E5E5E5"> services the last we</font><font color="#CCCCCC"> keep</font>

653
00:46:18,520 --> 00:46:27,340
case studies and such<font color="#E5E5E5"> pison my BB and</font>

654
00:46:21,790 --> 00:46:29,140
github first<font color="#CCCCCC"> rock may be someone or I</font>

655
00:46:27,340 --> 00:46:33,450
can do in the future

656
00:46:29,140 --> 00:46:37,180
<font color="#E5E5E5">finding</font><font color="#CCCCCC"> Sameer URL pastor issues</font><font color="#E5E5E5"> on OS</font>

657
00:46:33,450 --> 00:46:41,410
modern browsers or cache server<font color="#E5E5E5"> or</font><font color="#CCCCCC"> proxy</font>

658
00:46:37,180 --> 00:46:43,359
server<font color="#CCCCCC"> ok this</font><font color="#E5E5E5"> is the end of my</font>

659
00:46:41,410 --> 00:46:46,270
presentation if<font color="#CCCCCC"> you had</font><font color="#E5E5E5"> further</font>

660
00:46:43,359 --> 00:46:49,359
questions<font color="#E5E5E5"> here is my contact information</font>

661
00:46:46,270 --> 00:46:51,700
<font color="#E5E5E5">orange at</font><font color="#CCCCCC"> chen jialuo</font><font color="#E5E5E5"> org or you can</font>

662
00:46:49,359 --> 00:46:55,090
find<font color="#E5E5E5"> me on twitter orange on the skull</font>

663
00:46:51,700 --> 00:46:57,460
<font color="#E5E5E5">base</font><font color="#CCCCCC"> v6 one thanks for staying with me</font>

664
00:46:55,090 --> 00:47:00,659
<font color="#E5E5E5">thanks</font>

665
00:46:57,460 --> 00:47:00,659
[Applause]

666
00:47:04,250 --> 00:47:13,640
or maybe<font color="#E5E5E5"> oh no Q&A if you have a further</font>

667
00:47:10,160 --> 00:47:17,890
question<font color="#CCCCCC"> you can contact</font><font color="#E5E5E5"> me yeah</font><font color="#CCCCCC"> I will</font>

668
00:47:13,640 --> 00:47:17,890
be here thank<font color="#CCCCCC"> you thank you</font>

