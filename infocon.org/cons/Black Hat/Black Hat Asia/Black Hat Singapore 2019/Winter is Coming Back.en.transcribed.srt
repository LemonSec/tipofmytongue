1
00:00:00,060 --> 00:00:05,310
thank you for everyone being here and

2
00:00:02,419 --> 00:00:07,798
it's good it's a great honor to be here

3
00:00:05,310 --> 00:00:09,809
to get my first black hat talk and I'm

4
00:00:07,799 --> 00:00:12,480
very excited standing here and hope that

5
00:00:09,809 --> 00:00:15,049
all of your guys can enjoy this talk so

6
00:00:12,480 --> 00:00:18,060
particularly the winter is coming back

7
00:00:15,049 --> 00:00:20,730
is to pay tribute to pay tribute to

8
00:00:18,060 --> 00:00:23,490
classics one of my favorite HBO

9
00:00:20,730 --> 00:00:26,640
television series The Game of Thrones so

10
00:00:23,490 --> 00:00:29,729
winter is coming is a motto of a main

11
00:00:26,640 --> 00:00:33,570
character the hosta so let me briefly

12
00:00:29,730 --> 00:00:36,270
introduce the speakers so I'm Z Jung

13
00:00:33,570 --> 00:00:38,430
from church almost a PhD student from

14
00:00:36,270 --> 00:00:40,710
the University of Louisville and the

15
00:00:38,430 --> 00:00:43,950
first speaker is a hunter

16
00:00:40,710 --> 00:00:47,280
he is the security research scientist or

17
00:00:43,950 --> 00:00:49,710
the biosecurity research lab is he

18
00:00:47,280 --> 00:00:53,820
sitting in the front in the first world

19
00:00:49,710 --> 00:00:56,460
and the third speaker is Sui Aleppo he

20
00:00:53,820 --> 00:00:59,850
is my supervisor and he is a principal

21
00:00:56,460 --> 00:01:02,280
research scientist with Cesaro Australia

22
00:00:59,850 --> 00:01:04,470
the last speaker each one has an

23
00:01:02,280 --> 00:01:08,939
associate professor at Florida State

24
00:01:04,470 --> 00:01:11,460
University so in the very first place I

25
00:01:08,939 --> 00:01:15,149
will briefly introduce the row hammer

26
00:01:11,460 --> 00:01:18,839
back and give give them most of the best

27
00:01:15,150 --> 00:01:21,180
software only defense against the row

28
00:01:18,840 --> 00:01:24,420
hammer attack and then we developed a

29
00:01:21,180 --> 00:01:27,869
proof concept and gived cave dream

30
00:01:24,420 --> 00:01:31,470
possible medications as well last we

31
00:01:27,869 --> 00:01:32,869
gave out some bytes of this talk so so

32
00:01:31,470 --> 00:01:35,520
what is real hammer

33
00:01:32,869 --> 00:01:39,780
literally speaking hammering your role

34
00:01:35,520 --> 00:01:42,899
is to frequently access a row so because

35
00:01:39,780 --> 00:01:45,090
because the density of the RAM zeros in

36
00:01:42,899 --> 00:01:48,000
the different modules okay

37
00:01:45,090 --> 00:01:51,720
increases significantly and this sales

38
00:01:48,000 --> 00:01:54,509
can intellectually interact with each

39
00:01:51,720 --> 00:01:57,630
other so by frequently accessed in a row

40
00:01:54,509 --> 00:02:01,670
can cause the electrical charge of each

41
00:01:57,630 --> 00:02:04,439
surges and roll the disturbance so let's

42
00:02:01,670 --> 00:02:07,110
firstly stuff into the background of the

43
00:02:04,439 --> 00:02:10,318
DRAM structure so the team is called the

44
00:02:07,110 --> 00:02:13,180
dual inline memory module and it has one

45
00:02:10,318 --> 00:02:15,849
or two racks corresponding to its

46
00:02:13,180 --> 00:02:18,549
or backside and the each rank has

47
00:02:15,849 --> 00:02:22,060
multiple chips and multiple chips make

48
00:02:18,549 --> 00:02:24,280
up multiple banks so the cost of RO

49
00:02:22,060 --> 00:02:27,430
hammer lies in the back a very basic

50
00:02:24,280 --> 00:02:31,870
unit for the memory access so on the

51
00:02:27,430 --> 00:02:34,780
right side of the picture we can say

52
00:02:31,870 --> 00:02:37,959
that each Bank has rows of sales and

53
00:02:34,780 --> 00:02:42,189
each cell consists of a competitor and

54
00:02:37,959 --> 00:02:43,930
access transistor so on the right side

55
00:02:42,189 --> 00:02:46,510
of the picture the walnut collects all

56
00:02:43,930 --> 00:02:49,419
the sales in within a row and the bill

57
00:02:46,510 --> 00:02:51,849
includes all the sales window :

58
00:02:49,419 --> 00:02:54,609
so both the walnut and Pilon have a

59
00:02:51,849 --> 00:02:57,189
direct impact on hollow how and how

60
00:02:54,609 --> 00:02:59,650
memory access is performed so for the

61
00:02:57,189 --> 00:03:02,680
memory access we have three primary

62
00:02:59,650 --> 00:03:06,310
steps the first step is to activate or

63
00:03:02,680 --> 00:03:08,290
open the row so specifically the the

64
00:03:06,310 --> 00:03:11,169
rows or one line is raised to a high

65
00:03:08,290 --> 00:03:13,929
voltage enabling the rows access

66
00:03:11,169 --> 00:03:17,079
transistors then this will collect the

67
00:03:13,930 --> 00:03:20,379
rows competitors to the pin line as such

68
00:03:17,079 --> 00:03:22,780
on the rows data will be read out into

69
00:03:20,379 --> 00:03:25,000
the row buffer in a same time the rows

70
00:03:22,780 --> 00:03:27,970
capacitors will be fully charged to be

71
00:03:25,000 --> 00:03:30,239
refreshed so in the second step the row

72
00:03:27,970 --> 00:03:33,689
buffer will satisfy the memory actual

73
00:03:30,239 --> 00:03:35,799
memory access as required so if a

74
00:03:33,689 --> 00:03:38,650
memorable if the memory access is

75
00:03:35,799 --> 00:03:42,250
completed or another memory memory

76
00:03:38,650 --> 00:03:45,370
access occurs in the same back the

77
00:03:42,250 --> 00:03:47,889
current will need to be closed so the

78
00:03:45,370 --> 00:03:50,949
rows were line used discharged to a low

79
00:03:47,889 --> 00:03:53,349
voltage disabling the rows access

80
00:03:50,949 --> 00:03:56,819
transistors and this what disconnect the

81
00:03:53,349 --> 00:03:59,379
rows competitors from the pin line so

82
00:03:56,819 --> 00:04:03,040
and in the meantime the row buffer will

83
00:03:59,379 --> 00:04:06,399
also be cleared so up to now everything

84
00:04:03,040 --> 00:04:08,739
seems going well but unfortunately the

85
00:04:06,400 --> 00:04:12,129
competitors of sales will lose charge

86
00:04:08,739 --> 00:04:14,620
over time and although all the rows of

87
00:04:12,129 --> 00:04:16,930
sales need to be refreshed or superior

88
00:04:14,620 --> 00:04:22,090
your time under the typical peer over

89
00:04:16,930 --> 00:04:24,250
time is 64 milliseconds so because those

90
00:04:22,089 --> 00:04:26,869
because the competitors will lose charge

91
00:04:24,250 --> 00:04:31,940
gradually and lead to be recharged or

92
00:04:26,870 --> 00:04:34,760
period time in 2014 King reported a key

93
00:04:31,940 --> 00:04:37,880
observation that freaking the opening

94
00:04:34,760 --> 00:04:41,180
rows and press 1 and n minus 1 will

95
00:04:37,880 --> 00:04:43,430
cause on P flip it flips in Rouen the P

96
00:04:41,180 --> 00:04:45,770
flip means that the wrote last some

97
00:04:43,430 --> 00:04:51,740
sales in Rouen have been permanently

98
00:04:45,770 --> 00:04:55,310
flipped from p0 to p1 or p1 to p0 so

99
00:04:51,740 --> 00:04:57,590
motivated by the Kings operation saebom

100
00:04:55,310 --> 00:04:59,360
from the Google was the first to

101
00:04:57,590 --> 00:05:01,340
compromise the Apocrypha colonel and

102
00:04:59,360 --> 00:05:07,460
again the colonel privilege by the means

103
00:05:01,340 --> 00:05:09,799
of low hammer so the critical the

104
00:05:07,460 --> 00:05:12,710
critical role hammer code written by the

105
00:05:09,800 --> 00:05:16,910
king is placed on the right side so we

106
00:05:12,710 --> 00:05:19,909
can say that - we assume that X is in

107
00:05:16,910 --> 00:05:23,060
row n plus 1 and the Y is in row and

108
00:05:19,910 --> 00:05:25,610
minus one to put into speed flips in

109
00:05:23,060 --> 00:05:29,180
Rouen we must access x and y in a loop

110
00:05:25,610 --> 00:05:32,479
and inside this loop we need to flash

111
00:05:29,180 --> 00:05:34,550
the X and a wise cache and also the row

112
00:05:32,479 --> 00:05:35,210
buffer also do a buffer where the x and

113
00:05:34,550 --> 00:05:38,870
y resides

114
00:05:35,210 --> 00:05:40,849
so to flash the CPU cache we can usually

115
00:05:38,870 --> 00:05:43,370
we can use the sell flash instruction

116
00:05:40,849 --> 00:05:45,830
alternatively we can use added we can

117
00:05:43,370 --> 00:05:50,180
stuff other data as cache to evict the

118
00:05:45,830 --> 00:05:53,120
target it has cache also to have a

119
00:05:50,180 --> 00:05:55,729
direct impact on the on the rollin we

120
00:05:53,120 --> 00:05:58,669
need to clear the row buffer thus as

121
00:05:55,729 --> 00:06:02,960
such we use we perform alternate axis of

122
00:05:58,669 --> 00:06:06,080
x and y and repeatedly so by the way on

123
00:06:02,960 --> 00:06:07,789
the line 6 the emphasis instruction is

124
00:06:06,080 --> 00:06:10,909
done with sensory 2 includes beef ribs

125
00:06:07,789 --> 00:06:15,349
and this is also pin this is also

126
00:06:10,910 --> 00:06:17,300
reported by the saebom so currently we

127
00:06:15,349 --> 00:06:20,360
have three existing wilheimer methods

128
00:06:17,300 --> 00:06:23,570
the first is double sorry row hammer so

129
00:06:20,360 --> 00:06:25,449
it hammers to rows on on each side of

130
00:06:23,570 --> 00:06:28,159
the target row and this method requires

131
00:06:25,449 --> 00:06:30,830
virtual to physical address mapping as

132
00:06:28,160 --> 00:06:33,740
well as the physical address to the RAM

133
00:06:30,830 --> 00:06:36,140
room the RAM row option the second is

134
00:06:33,740 --> 00:06:39,950
single side you hammer it randomly

135
00:06:36,140 --> 00:06:40,878
select a pair of addresses and it is

136
00:06:39,950 --> 00:06:43,219
likely fold up

137
00:06:40,879 --> 00:06:46,039
of juices are in the same back and thus

138
00:06:43,219 --> 00:06:48,558
clears a row buffer the last one is one

139
00:06:46,039 --> 00:06:51,949
location hammer it random is select two

140
00:06:48,559 --> 00:06:54,589
wild twist so you realize on the D run

141
00:06:51,949 --> 00:06:57,319
on memory controller to clear the row

142
00:06:54,589 --> 00:06:59,749
buffer so take the code okay as an

143
00:06:57,319 --> 00:07:02,659
example we can say that for double sided

144
00:06:59,749 --> 00:07:04,669
no humble x and y are adjacent to the

145
00:07:02,659 --> 00:07:07,580
target row for the single sided row

146
00:07:04,669 --> 00:07:10,188
humble either X or Y is adjacent to the

147
00:07:07,580 --> 00:07:12,679
target row so what is two methods in

148
00:07:10,189 --> 00:07:16,610
common is that x and y must be in the

149
00:07:12,679 --> 00:07:18,289
same pack so as to clear the robot then

150
00:07:16,610 --> 00:07:21,559
this requirement does not focus one

151
00:07:18,289 --> 00:07:24,469
location 100x is just adjacent to attack

152
00:07:21,559 --> 00:07:27,709
a row and the ramp controller is

153
00:07:24,469 --> 00:07:33,050
responsible for for the row buffer

154
00:07:27,709 --> 00:07:35,990
clearance so - magic - magic 8 the raw

155
00:07:33,050 --> 00:07:38,990
ham attack on numerous Mohammed defences

156
00:07:35,990 --> 00:07:41,719
has been have been proposed we have two

157
00:07:38,990 --> 00:07:45,619
categories the first is the first one is

158
00:07:41,719 --> 00:07:47,949
a Hardware difference this our solution

159
00:07:45,619 --> 00:07:51,139
the solutions this hardware solutions

160
00:07:47,949 --> 00:07:53,769
require the requires a hardware changes

161
00:07:51,139 --> 00:07:58,069
to the mega CD ROM modules so that

162
00:07:53,769 --> 00:08:00,110
that's why they are not practical so the

163
00:07:58,069 --> 00:08:02,089
hardware differences the first intuitive

164
00:08:00,110 --> 00:08:04,249
solution used to increase the row

165
00:08:02,089 --> 00:08:07,219
refreshing frequency from 62

166
00:08:04,249 --> 00:08:12,199
milliseconds as a mission before to 32

167
00:08:07,219 --> 00:08:14,149
milliseconds but but so this the idea

168
00:08:12,199 --> 00:08:18,110
behind the behind this solution is that

169
00:08:14,149 --> 00:08:20,539
an attacker can must activate to the

170
00:08:18,110 --> 00:08:25,459
road for many times so to select to

171
00:08:20,539 --> 00:08:28,009
induce P flips in adjacent rows so we

172
00:08:25,459 --> 00:08:31,490
increase the we increase the frequency

173
00:08:28,009 --> 00:08:33,438
so also as to refresh the rows as as

174
00:08:31,490 --> 00:08:36,860
soon as possible and this will prevent

175
00:08:33,438 --> 00:08:41,348
the rows from being the victim row from

176
00:08:36,860 --> 00:08:44,389
being perfect but however the well once

177
00:08:41,349 --> 00:08:44,959
when rahama exploit has has already

178
00:08:44,389 --> 00:08:47,180
succeed

179
00:08:44,959 --> 00:08:49,518
given the frequency of 32 milliseconds

180
00:08:47,180 --> 00:08:52,309
the second solution used to introduce

181
00:08:49,519 --> 00:08:54,810
error correcting code memory that's

182
00:08:52,309 --> 00:08:57,930
called the SSA SSA is able to

183
00:08:54,810 --> 00:08:58,758
correct 1p tables and detector double

184
00:08:57,930 --> 00:09:01,319
potatoes

185
00:08:58,759 --> 00:09:03,240
however the raw ham ibaka induced

186
00:09:01,319 --> 00:09:07,079
bountiful beef ribs and this cannot be

187
00:09:03,240 --> 00:09:09,480
properly detected by SSA and the third

188
00:09:07,079 --> 00:09:13,219
one is to apply probabilistic or chasin

189
00:09:09,480 --> 00:09:17,399
true activation so as a limb suggests

190
00:09:13,220 --> 00:09:19,199
para para is to intensive read intensive

191
00:09:17,399 --> 00:09:21,300
reading from a road will trigger an

192
00:09:19,199 --> 00:09:24,209
activation of its adjacent rows with a

193
00:09:21,300 --> 00:09:26,790
high probability and this will prevent

194
00:09:24,209 --> 00:09:28,979
the adjacent rows from being from

195
00:09:26,790 --> 00:09:35,309
linking charge or the mud for the mud

196
00:09:28,980 --> 00:09:37,649
fat at a much faster rate so the other

197
00:09:35,309 --> 00:09:39,809
one similarly we can use we can utilize

198
00:09:37,649 --> 00:09:42,569
the tacky rule refreshing capability to

199
00:09:39,809 --> 00:09:45,540
ask us a memory controller to refresh

200
00:09:42,569 --> 00:09:49,979
specified rows the last one used to

201
00:09:45,540 --> 00:09:51,899
specify maximum activation count so all

202
00:09:49,980 --> 00:09:54,689
of the last three methods require

203
00:09:51,899 --> 00:09:57,059
hardware changes to the legacy different

204
00:09:54,689 --> 00:09:59,370
modules so we come to the practical

205
00:09:57,059 --> 00:10:01,559
difference the software difference we

206
00:09:59,370 --> 00:10:06,990
also have two sub categories the first

207
00:10:01,559 --> 00:10:08,819
category is Hedgehog solutions but these

208
00:10:06,990 --> 00:10:11,389
solutions are primarily limited to

209
00:10:08,819 --> 00:10:14,759
preventing specific rule Hamel attacks

210
00:10:11,389 --> 00:10:16,800
which are utilized certain system

211
00:10:14,759 --> 00:10:18,959
features such as a peaceable peace table

212
00:10:16,800 --> 00:10:21,779
you used to translate to watch shows

213
00:10:18,959 --> 00:10:24,089
waste to a physical address but this

214
00:10:21,779 --> 00:10:26,370
page this interface has already been

215
00:10:24,089 --> 00:10:29,160
disabled for an unprivileged user and

216
00:10:26,370 --> 00:10:32,279
the pity map used to facilitate the

217
00:10:29,160 --> 00:10:35,430
table beside a row handle so we focus

218
00:10:32,279 --> 00:10:38,459
more on the general solutions firstly we

219
00:10:35,430 --> 00:10:41,279
analyze we use we use a binary code

220
00:10:38,459 --> 00:10:43,979
analysis to analyze common behaviors

221
00:10:41,279 --> 00:10:46,699
exposed in the new hambo exploits such

222
00:10:43,980 --> 00:10:50,610
as the high resolution timers and the

223
00:10:46,699 --> 00:10:52,998
cache flash instructions however on an

224
00:10:50,610 --> 00:10:56,399
attacker can introduce

225
00:10:52,999 --> 00:10:58,920
enclaves into it and by interesting to

226
00:10:56,399 --> 00:11:01,559
bypass the binary check or use on

227
00:10:58,920 --> 00:11:05,099
network package to trick remote rahama

228
00:11:01,559 --> 00:11:08,100
exploits the second one is to perform a

229
00:11:05,100 --> 00:11:11,640
complete row hammer test and then black

230
00:11:08,100 --> 00:11:13,770
all the vulnerable rows on one hand this

231
00:11:11,640 --> 00:11:16,199
solution can enumerate the warhammer

232
00:11:13,770 --> 00:11:19,770
back on the other hand this solution

233
00:11:16,200 --> 00:11:22,940
will renders more than 95 percent of the

234
00:11:19,770 --> 00:11:26,370
system memory unusable so it is also not

235
00:11:22,940 --> 00:11:30,060
practical the last one is to utilize the

236
00:11:26,370 --> 00:11:32,930
performance counter so as the row hammer

237
00:11:30,060 --> 00:11:35,010
will incur high cache miss rates

238
00:11:32,930 --> 00:11:37,520
intuitively we can use performance

239
00:11:35,010 --> 00:11:40,860
counters to observe the cache miss rate

240
00:11:37,520 --> 00:11:43,439
and when the cache miss rate which is a

241
00:11:40,860 --> 00:11:46,200
threshold a monitoring process can be

242
00:11:43,440 --> 00:11:49,740
triggered to check whether a real Rohan

243
00:11:46,200 --> 00:11:51,810
exploit is running but this method has

244
00:11:49,740 --> 00:11:56,250
false positives and the incurs high

245
00:11:51,810 --> 00:11:58,829
performance overhead so now we come to

246
00:11:56,250 --> 00:12:02,340
the most advanced software only defense

247
00:11:58,830 --> 00:12:05,100
cat please know that the tests different

248
00:12:02,340 --> 00:12:07,710
to two new differences emerged after our

249
00:12:05,100 --> 00:12:10,440
submission so we were taught talk about

250
00:12:07,710 --> 00:12:12,720
them in the medication section so from a

251
00:12:10,440 --> 00:12:15,210
high level cat is a physical isolation

252
00:12:12,720 --> 00:12:18,390
scheme just as it just like this picture

253
00:12:15,210 --> 00:12:21,390
shows and the island is split into two

254
00:12:18,390 --> 00:12:24,650
halves one half is physically isolated -

255
00:12:21,390 --> 00:12:27,000
from the other so for cat it divides

256
00:12:24,650 --> 00:12:30,810
divides the physical memory in two

257
00:12:27,000 --> 00:12:32,790
mutually exclusive partitions and views

258
00:12:30,810 --> 00:12:36,109
the ownership of each physical partition

259
00:12:32,790 --> 00:12:38,969
are single so as this picture shows and

260
00:12:36,110 --> 00:12:42,630
that the domain the domain has only

261
00:12:38,970 --> 00:12:44,820
access to its own partition a and any

262
00:12:42,630 --> 00:12:47,130
memory of any memory request from the

263
00:12:44,820 --> 00:12:49,380
from in the form an individual domain

264
00:12:47,130 --> 00:12:52,740
will be only served by its own partition

265
00:12:49,380 --> 00:12:55,980
so in a nutshell the single ownership

266
00:12:52,740 --> 00:13:01,290
means that each sacred domain has has

267
00:12:55,980 --> 00:13:03,060
access to its own partition so to its

268
00:13:01,290 --> 00:13:05,579
current to cut it our current

269
00:13:03,060 --> 00:13:07,829
implementation cut divides the physical

270
00:13:05,580 --> 00:13:13,260
memory into user and a kernel partition

271
00:13:07,830 --> 00:13:15,060
and under this role and this Guardian

272
00:13:13,260 --> 00:13:19,470
role is placed between these partitions

273
00:13:15,060 --> 00:13:21,930
so an EP flips introduced are induced by

274
00:13:19,470 --> 00:13:25,080
an attacker where only occur

275
00:13:21,930 --> 00:13:27,120
in her own partition sorry we're only

276
00:13:25,080 --> 00:13:30,960
occurred in her own partition the user

277
00:13:27,120 --> 00:13:33,210
partition and or in the or in the garden

278
00:13:30,960 --> 00:13:39,500
rose and this will make the beef ribs

279
00:13:33,210 --> 00:13:42,180
useless so cat is cat is only a software

280
00:13:39,500 --> 00:13:44,850
software only software software only

281
00:13:42,180 --> 00:13:47,339
approach with without a modification

282
00:13:44,850 --> 00:13:50,570
without Halloween modifications and it

283
00:13:47,339 --> 00:13:54,080
is particle to protect legacy systems

284
00:13:50,570 --> 00:13:57,750
for the more we can utilize care to

285
00:13:54,080 --> 00:14:00,510
build other fine grid domain isolation

286
00:13:57,750 --> 00:14:04,050
such as the puzzle and sandbox isolation

287
00:14:00,510 --> 00:14:06,330
and the privileged process and the

288
00:14:04,050 --> 00:14:10,410
regular process saturation and so on and

289
00:14:06,330 --> 00:14:15,500
so forth so eventually the cat the cat

290
00:14:10,410 --> 00:14:18,870
the cat at home catches the mouse Jerry

291
00:14:15,500 --> 00:14:22,980
so before we compromise the cat and its

292
00:14:18,870 --> 00:14:25,350
Samuraizer kissed key steps required for

293
00:14:22,980 --> 00:14:28,170
your hammer exploit firstly we need to

294
00:14:25,350 --> 00:14:30,480
fill up victim erode with sensitive data

295
00:14:28,170 --> 00:14:33,120
structures such as priests tables and

296
00:14:30,480 --> 00:14:36,209
next we position or tackle accessible

297
00:14:33,120 --> 00:14:39,420
rows adjacent to the victim row and last

298
00:14:36,209 --> 00:14:42,060
we perform the row handle if we can

299
00:14:39,420 --> 00:14:45,870
privilege escalation than we succeed so

300
00:14:42,060 --> 00:14:48,660
let's review all the differences so all

301
00:14:45,870 --> 00:14:50,339
the difference is about to cut are

302
00:14:48,660 --> 00:14:53,219
trying to matica is the first and the

303
00:14:50,339 --> 00:14:56,490
last step and the walls are trying all

304
00:14:53,220 --> 00:14:59,010
the emerge to used to live in emulate or

305
00:14:56,490 --> 00:15:02,400
detect through hammer back but for cat

306
00:14:59,010 --> 00:15:05,910
it is tolerant to low handle and it is

307
00:15:02,400 --> 00:15:07,319
trying to prevent the attack the victim

308
00:15:05,910 --> 00:15:12,000
role from being approached by the

309
00:15:07,320 --> 00:15:14,820
attacker accessible rows so for our

310
00:15:12,000 --> 00:15:19,649
attack will assume that the kernel is

311
00:15:14,820 --> 00:15:22,110
bug free and protected by cat so as such

312
00:15:19,649 --> 00:15:23,640
the user and the kernel isolation are

313
00:15:22,110 --> 00:15:27,390
isolated from each other

314
00:15:23,640 --> 00:15:29,550
so since since the condo is protected by

315
00:15:27,390 --> 00:15:32,730
cat we have no idea about where the

316
00:15:29,550 --> 00:15:35,310
vulnerable rows allocated in the kernel

317
00:15:32,730 --> 00:15:35,700
partition and the last is that we have

318
00:15:35,310 --> 00:15:40,709
though

319
00:15:35,700 --> 00:15:43,740
access to the page map so is it possible

320
00:15:40,710 --> 00:15:45,420
for us to rahama the con oh yes of

321
00:15:43,740 --> 00:15:50,310
course otherwise we wouldn't be able to

322
00:15:45,420 --> 00:15:53,370
stand here yeah so we we have we have

323
00:15:50,310 --> 00:15:56,579
listed the five key steps for successful

324
00:15:53,370 --> 00:15:59,160
rahama exploit the first is to clearly

325
00:15:56,580 --> 00:16:00,930
identify the cat's wickless and then

326
00:15:59,160 --> 00:16:03,060
abuse the victories to stealth

327
00:16:00,930 --> 00:16:05,099
reposition attacker accessible memory

328
00:16:03,060 --> 00:16:07,709
adjacent to the kernel objects in this

329
00:16:05,100 --> 00:16:10,650
case we use a page tables and the first

330
00:16:07,710 --> 00:16:13,230
step is to perform efficient single side

331
00:16:10,650 --> 00:16:15,420
ero humble because we have them we have

332
00:16:13,230 --> 00:16:18,120
low page map interface and the forth

333
00:16:15,420 --> 00:16:20,640
step is to verify whether exploitable

334
00:16:18,120 --> 00:16:21,930
beef ribs have occurred and if yes if

335
00:16:20,640 --> 00:16:25,110
flat we try again

336
00:16:21,930 --> 00:16:27,000
and the yes we have gained a prick or no

337
00:16:25,110 --> 00:16:28,950
privilege and design we can scan the

338
00:16:27,000 --> 00:16:32,940
color memory flush therapy and change

339
00:16:28,950 --> 00:16:35,640
user ID to zero so the main challenge is

340
00:16:32,940 --> 00:16:37,980
nice in the foot first three steps and

341
00:16:35,640 --> 00:16:42,720
then with and then next we talk about

342
00:16:37,980 --> 00:16:45,630
them in detail so in theory the single

343
00:16:42,720 --> 00:16:48,870
ownership dictated by cat does hold but

344
00:16:45,630 --> 00:16:50,990
in real wood in modern system the modern

345
00:16:48,870 --> 00:16:54,570
system view that ownership as dynamic

346
00:16:50,990 --> 00:16:58,560
particularly the tab ownership so what

347
00:16:54,570 --> 00:17:03,060
is tab ownership let's see this picture

348
00:16:58,560 --> 00:17:05,520
so the so the memory region X has has

349
00:17:03,060 --> 00:17:07,770
two owners the table the domain and

350
00:17:05,520 --> 00:17:10,530
domain B and the a similar situation

351
00:17:07,770 --> 00:17:13,710
also occurs to partition P the region Z

352
00:17:10,530 --> 00:17:15,899
so let's to illustrate the tab ownership

353
00:17:13,710 --> 00:17:20,100
we use a real world scenario to in a

354
00:17:15,900 --> 00:17:22,500
street so if let's regard the domain as

355
00:17:20,099 --> 00:17:26,000
a user to me the domain B as a cannot

356
00:17:22,500 --> 00:17:29,130
AMI so if user domain wants to perform a

357
00:17:26,000 --> 00:17:31,020
direct I'll write operation the atomic

358
00:17:29,130 --> 00:17:34,170
the cannot domain we allocated the

359
00:17:31,020 --> 00:17:37,710
region X 4 for the you determine to

360
00:17:34,170 --> 00:17:41,040
process data at this moment the region X

361
00:17:37,710 --> 00:17:44,070
it just has just a one owner the user to

362
00:17:41,040 --> 00:17:46,830
me but but when the Palawan Nakano

363
00:17:44,070 --> 00:17:48,570
domain access the region x to copy data

364
00:17:46,830 --> 00:17:51,090
into a device

365
00:17:48,570 --> 00:17:53,399
then at this time the region X the

366
00:17:51,090 --> 00:17:57,480
ownership of region X is converted into

367
00:17:53,399 --> 00:18:00,408
taboo so that's that's the that's where

368
00:17:57,480 --> 00:18:04,259
the table ownership comes from and

369
00:18:00,409 --> 00:18:07,919
actually an anniversary usually

370
00:18:04,259 --> 00:18:09,840
resulting in the user to me and she must

371
00:18:07,919 --> 00:18:12,720
get access to a high privilege memory

372
00:18:09,840 --> 00:18:16,379
region so as to perform a meaningful row

373
00:18:12,720 --> 00:18:20,490
hammer so the Regency is what we are

374
00:18:16,380 --> 00:18:24,659
interested to identify so for the photo

375
00:18:20,490 --> 00:18:27,929
user and the kernel domain we want to

376
00:18:24,659 --> 00:18:30,899
identify the region D and we turn such a

377
00:18:27,929 --> 00:18:33,480
region Z as a hammer abou so the user

378
00:18:30,899 --> 00:18:35,789
after condo for the folder for this

379
00:18:33,480 --> 00:18:38,669
model we have two types of double

380
00:18:35,789 --> 00:18:41,100
ownership and the first is a condo after

381
00:18:38,669 --> 00:18:46,230
user and the the second is user after

382
00:18:41,100 --> 00:18:48,360
condo so the region Z refers to a memory

383
00:18:46,230 --> 00:18:50,490
economy memory region that is initially

384
00:18:48,360 --> 00:18:53,758
owned by the kernel Toby and then the

385
00:18:50,490 --> 00:18:56,039
unit on banjo into ownership so this

386
00:18:53,759 --> 00:19:01,529
region this region Z is what an

387
00:18:56,039 --> 00:19:04,649
anniversary is interested to identify so

388
00:19:01,529 --> 00:19:07,289
we summarize the properties of hammer

389
00:19:04,649 --> 00:19:09,870
herbal buffer so the hammer the hammer

390
00:19:07,289 --> 00:19:12,779
blow memory is initially owned by the

391
00:19:09,870 --> 00:19:15,719
kernel and an unprivileged user can

392
00:19:12,779 --> 00:19:18,659
access this memory so the challenge is

393
00:19:15,720 --> 00:19:23,730
to identify the her mobile memory in the

394
00:19:18,659 --> 00:19:26,789
real world systems like the previous

395
00:19:23,730 --> 00:19:29,220
slide for the split island the bridge

396
00:19:26,789 --> 00:19:33,570
interface is introduced to counteract

397
00:19:29,220 --> 00:19:36,600
the physical isolation for similarly for

398
00:19:33,570 --> 00:19:40,230
the split partitions mm map interface

399
00:19:36,600 --> 00:19:44,070
can be abused to hammer the kernel

400
00:19:40,230 --> 00:19:47,009
partition so the kernel will allocated

401
00:19:44,070 --> 00:19:49,500
the region Z and map the region Z into

402
00:19:47,009 --> 00:19:53,070
the user domain by the means of mm map

403
00:19:49,500 --> 00:19:56,250
system call so at this time the region

404
00:19:53,070 --> 00:19:59,610
zip is potentially hammer abbu and this

405
00:19:56,250 --> 00:20:02,400
is and this gives us the hint we can

406
00:19:59,610 --> 00:20:06,419
search all the MMF operations for

407
00:20:02,400 --> 00:20:08,400
that have the high mobile memory so in

408
00:20:06,420 --> 00:20:10,890
this picture we can say that the number

409
00:20:08,400 --> 00:20:13,140
of ma map operations increases

410
00:20:10,890 --> 00:20:17,340
significantly as the newest kernel

411
00:20:13,140 --> 00:20:21,930
involves and therefore for specific UNIX

412
00:20:17,340 --> 00:20:24,679
kernel 4.1 Z 4.17 the device drivers

413
00:20:21,930 --> 00:20:28,410
however has a much higher number of

414
00:20:24,680 --> 00:20:31,500
Mmmbop operations and so it is highly

415
00:20:28,410 --> 00:20:36,390
likely for the device drivers having the

416
00:20:31,500 --> 00:20:38,910
high mobile memory so as a use case we

417
00:20:36,390 --> 00:20:41,940
have identified as society Nurik buffer

418
00:20:38,910 --> 00:20:46,440
in the nooks SSI subsystem as a hammer

419
00:20:41,940 --> 00:20:49,610
over memory so so up to now we have

420
00:20:46,440 --> 00:20:52,620
identified the casual weakness the next

421
00:20:49,610 --> 00:20:56,280
we have to stealthily position the

422
00:20:52,620 --> 00:20:59,010
hammer waffle X to page table and we

423
00:20:56,280 --> 00:21:02,030
have proposed a new technique the MA

424
00:20:59,010 --> 00:21:06,840
memory and patch to address this problem

425
00:21:02,030 --> 00:21:10,020
so for the New York's party locator it

426
00:21:06,840 --> 00:21:12,629
maintains multiple lists of blocks for

427
00:21:10,020 --> 00:21:15,059
four blocks that have the same list they

428
00:21:12,630 --> 00:21:17,160
have the same memory size and every

429
00:21:15,059 --> 00:21:19,740
block has a power of two number of pages

430
00:21:17,160 --> 00:21:22,020
and these pages are physically

431
00:21:19,740 --> 00:21:24,120
continuous so the attachment the

432
00:21:22,020 --> 00:21:26,940
attachment means that once the block is

433
00:21:24,120 --> 00:21:30,120
split into two equal blocks the split

434
00:21:26,940 --> 00:21:32,040
block has the same size other others for

435
00:21:30,120 --> 00:21:35,520
example this one has a smaller size as a

436
00:21:32,040 --> 00:21:39,659
smaller one and the unused sorry the

437
00:21:35,520 --> 00:21:43,830
unused speed proc on will be linked into

438
00:21:39,660 --> 00:21:46,620
the smaller block list so here you the

439
00:21:43,830 --> 00:21:50,189
question if hammer robo buffer and the

440
00:21:46,620 --> 00:21:52,800
page table share a random block like

441
00:21:50,190 --> 00:21:57,120
this one as a for sure adjacent to each

442
00:21:52,800 --> 00:21:59,190
other the answer is no cause to our

443
00:21:57,120 --> 00:22:03,169
choice and the physical choices do not

444
00:21:59,190 --> 00:22:08,040
imply torches and daram rows for example

445
00:22:03,170 --> 00:22:10,290
addresses 1 triple 0 and 0 0 if they are

446
00:22:08,040 --> 00:22:11,730
physically continuous but they are in

447
00:22:10,290 --> 00:22:12,560
the same row instead of two adjacent

448
00:22:11,730 --> 00:22:15,040
rows

449
00:22:12,560 --> 00:22:16,570
fortunately two

450
00:22:15,040 --> 00:22:19,750
and I notice and physical traces

451
00:22:16,570 --> 00:22:22,570
indicate two adjacent Iran Rose this is

452
00:22:19,750 --> 00:22:25,180
because that that um controller uses a

453
00:22:22,570 --> 00:22:31,629
most significant bits of a physical test

454
00:22:25,180 --> 00:22:33,640
to select a different row so with so we

455
00:22:31,630 --> 00:22:36,100
call the block that should be shared by

456
00:22:33,640 --> 00:22:38,770
the two objects as a target broke and

457
00:22:36,100 --> 00:22:40,659
the target book should contain the to

458
00:22:38,770 --> 00:22:43,360
contain the size of two adjacent rows

459
00:22:40,660 --> 00:22:46,630
and the any probe that has a larger size

460
00:22:43,360 --> 00:22:48,790
we call we causal record large broke and

461
00:22:46,630 --> 00:22:52,930
any block that has a smaller size we

462
00:22:48,790 --> 00:22:54,879
call a small block so to determine the

463
00:22:52,930 --> 00:22:58,780
size of target box we have three

464
00:22:54,880 --> 00:23:00,880
equations so the size of a target block

465
00:22:58,780 --> 00:23:04,600
should be should be twice size of all

466
00:23:00,880 --> 00:23:06,430
the rows per row index and although

467
00:23:04,600 --> 00:23:08,139
under the size of all the rows per row

468
00:23:06,430 --> 00:23:11,200
index is further determined by the

469
00:23:08,140 --> 00:23:13,780
number of teams the lambo packs per one

470
00:23:11,200 --> 00:23:20,980
team and the size of a single row in a

471
00:23:13,780 --> 00:23:24,460
single back so this this solve the this

472
00:23:20,980 --> 00:23:27,070
solve the problem of how this just solve

473
00:23:24,460 --> 00:23:31,870
the problem how we determine the target

474
00:23:27,070 --> 00:23:33,760
huggabug size and two and and as we have

475
00:23:31,870 --> 00:23:36,010
no knowledge about where the vulnerable

476
00:23:33,760 --> 00:23:38,530
locations in the kernel memory we have

477
00:23:36,010 --> 00:23:45,010
to place more peace table pages onto the

478
00:23:38,530 --> 00:23:48,129
target box so we abuse the MM map to

479
00:23:45,010 --> 00:23:50,680
page table allocation as well as we know

480
00:23:48,130 --> 00:23:53,380
the MA map is used to map a file or

481
00:23:50,680 --> 00:23:56,470
device into a memory and thus a bomb has

482
00:23:53,380 --> 00:24:00,400
abused this feature to control the page

483
00:23:56,470 --> 00:24:02,950
table allocation so specifically we

484
00:24:00,400 --> 00:24:06,190
create a memory map to region we create

485
00:24:02,950 --> 00:24:08,680
a memory map to region and user and the

486
00:24:06,190 --> 00:24:11,590
populated region by accessing like a

487
00:24:08,680 --> 00:24:14,230
right to read this region so the peace

488
00:24:11,590 --> 00:24:15,909
table pages will be allocated the page

489
00:24:14,230 --> 00:24:18,430
table pages will be allocated to

490
00:24:15,910 --> 00:24:21,970
translate the virtual addresses to

491
00:24:18,430 --> 00:24:23,650
physical traces so I in this poor during

492
00:24:21,970 --> 00:24:27,850
this period of time the pre table

493
00:24:23,650 --> 00:24:29,020
pages will be allocated so with all this

494
00:24:27,850 --> 00:24:31,000
knowledge in mind

495
00:24:29,020 --> 00:24:34,270
we are not without describes or key

496
00:24:31,000 --> 00:24:36,420
steps required for memory about

497
00:24:34,270 --> 00:24:39,760
technique so in this vehicle

498
00:24:36,420 --> 00:24:43,330
it shows the initial state of the kernel

499
00:24:39,760 --> 00:24:45,760
memory and the kernel memory also has

500
00:24:43,330 --> 00:24:48,129
has multiple lists of different blocks

501
00:24:45,760 --> 00:24:50,710
and the some spoke small blocks have

502
00:24:48,130 --> 00:24:53,290
already been allocated have already been

503
00:24:50,710 --> 00:24:57,520
allocated for like the labor cream

504
00:24:53,290 --> 00:24:59,200
buffer so if we want to share the target

505
00:24:57,520 --> 00:25:03,190
process between the two objects we have

506
00:24:59,200 --> 00:25:06,070
to train the small box first so in

507
00:25:03,190 --> 00:25:09,490
Figure P we join we exhausted all the

508
00:25:06,070 --> 00:25:12,820
small blocks using the pitch tables by

509
00:25:09,490 --> 00:25:16,690
the by the means of a map system call so

510
00:25:12,820 --> 00:25:19,060
after we exhausted the small blocks we

511
00:25:16,690 --> 00:25:21,130
can we start to allocate the table on

512
00:25:19,060 --> 00:25:24,280
the buffers and the peace tables from

513
00:25:21,130 --> 00:25:26,110
the target blocks and even and if the

514
00:25:24,280 --> 00:25:29,530
pistol and if the table and buffers

515
00:25:26,110 --> 00:25:32,020
complete its allocation we still we

516
00:25:29,530 --> 00:25:34,690
still continue to in the peace table

517
00:25:32,020 --> 00:25:37,180
allocation and here a specified memory

518
00:25:34,690 --> 00:25:43,090
threshold is reached so this will make

519
00:25:37,180 --> 00:25:45,070
our technique stealthy so after we

520
00:25:43,090 --> 00:25:46,959
position after positioning the attacker

521
00:25:45,070 --> 00:25:50,169
accessible rows adjacent to the page

522
00:25:46,960 --> 00:25:52,900
tables now we have on the last pub and

523
00:25:50,170 --> 00:25:56,800
to address no page map since nearly 4.0

524
00:25:52,900 --> 00:25:59,620
so with result for timing channel the

525
00:25:56,800 --> 00:26:01,210
there is a time channel either as the

526
00:25:59,620 --> 00:26:03,639
previous slides have also have already

527
00:26:01,210 --> 00:26:07,540
shown x and y are in different rows of

528
00:26:03,640 --> 00:26:10,240
the same back and the row buffer and

529
00:26:07,540 --> 00:26:13,270
inside this loop if we access x and y

530
00:26:10,240 --> 00:26:15,880
repeatedly on the row buffer will be

531
00:26:13,270 --> 00:26:19,120
repeatedly noted we loaded under cleaved

532
00:26:15,880 --> 00:26:21,820
so this will called the phenomenon the

533
00:26:19,120 --> 00:26:23,409
row come free cos x and y will have a

534
00:26:21,820 --> 00:26:26,710
higher access latency

535
00:26:23,410 --> 00:26:31,180
compared compared to if the x and y are

536
00:26:26,710 --> 00:26:33,490
in the eye in different backs so we we

537
00:26:31,180 --> 00:26:35,350
abused the route conflict to help us

538
00:26:33,490 --> 00:26:37,630
select addresses the line in the same

539
00:26:35,350 --> 00:26:41,199
back so we can perform an efficient

540
00:26:37,630 --> 00:26:42,919
single side ero hammer specifically we

541
00:26:41,200 --> 00:26:45,289
are we select a waveform

542
00:26:42,919 --> 00:26:48,169
that had in the same pack of different

543
00:26:45,289 --> 00:26:50,899
roles and another 1000 pairs that and

544
00:26:48,169 --> 00:26:54,649
data in different bags and the mayor the

545
00:26:50,899 --> 00:26:57,500
access latency respectively so in this

546
00:26:54,649 --> 00:27:01,010
time machine we can say that more than

547
00:26:57,500 --> 00:27:03,850
more than 92 percent of the modern 92%

548
00:27:01,010 --> 00:27:08,750
of the pairs in the TSP have more than

549
00:27:03,850 --> 00:27:11,209
360 cycles and more than 97% of the

550
00:27:08,750 --> 00:27:16,510
payers in the long TSP have less than

551
00:27:11,210 --> 00:27:19,820
360 cycles also in this deliver motion

552
00:27:16,510 --> 00:27:22,010
we can say that one thousand one hundred

553
00:27:19,820 --> 00:27:25,820
percent of the payers in the land in the

554
00:27:22,010 --> 00:27:28,730
P is P have both a 360 cycles and the

555
00:27:25,820 --> 00:27:32,629
most a 99% of the payers in the long TSP

556
00:27:28,730 --> 00:27:34,880
have less than 360 cycles so based on

557
00:27:32,630 --> 00:27:38,139
this latency we can select these

558
00:27:34,880 --> 00:27:38,139
addresses more wisely

559
00:27:38,350 --> 00:27:43,820
so the first prime the first three

560
00:27:41,210 --> 00:27:46,850
primer steps have been completed and now

561
00:27:43,820 --> 00:27:50,689
we need to verify whether exploit puppy

562
00:27:46,850 --> 00:27:53,750
flips have accrued so the idea of

563
00:27:50,690 --> 00:27:56,809
verification is like Assad and if I

564
00:27:53,750 --> 00:27:59,179
found an even a virtual page is no

565
00:27:56,809 --> 00:28:01,360
longer pointing to a physical page then

566
00:27:59,179 --> 00:28:03,679
we make and then we can make sure that a

567
00:28:01,360 --> 00:28:06,590
page table has been p-fleet

568
00:28:03,679 --> 00:28:10,100
and if we can find another page pointing

569
00:28:06,590 --> 00:28:11,689
to pointing to a page table page and it

570
00:28:10,100 --> 00:28:14,269
means that we have gained the cano

571
00:28:11,690 --> 00:28:17,960
privilege cause an exploitable page

572
00:28:14,269 --> 00:28:22,370
table means that we can write or read on

573
00:28:17,960 --> 00:28:24,559
access to all the physical memory so

574
00:28:22,370 --> 00:28:26,989
after that after that we can scan the

575
00:28:24,559 --> 00:28:31,210
kernel memory and change the user ID to

576
00:28:26,990 --> 00:28:34,760
0-2 so as to gain the route privilege

577
00:28:31,210 --> 00:28:37,130
so now let's show we were given more

578
00:28:34,760 --> 00:28:39,850
demo to show how we gain the privilege

579
00:28:37,130 --> 00:28:39,850
escalations

580
00:28:50,200 --> 00:28:58,690
so we have to we have to rats running on

581
00:28:55,600 --> 00:29:02,918
two separate CPU cycles call zero and

582
00:28:58,690 --> 00:29:04,779
the colon just tourists to Latin in an

583
00:29:02,919 --> 00:29:08,080
infinite loop and they are just for used

584
00:29:04,779 --> 00:29:12,730
to flush the gob and when we can the

585
00:29:08,080 --> 00:29:19,090
jute privilege no it's wrong our real

586
00:29:12,730 --> 00:29:22,830
Rohan will exploit so after after the

587
00:29:19,090 --> 00:29:26,830
small blocks are trained and we start to

588
00:29:22,830 --> 00:29:33,639
allocate the SCSI generic buffer as we

589
00:29:26,830 --> 00:29:35,918
are the stables and after memory

590
00:29:33,639 --> 00:29:48,129
threshold is reached we can start row

591
00:29:35,919 --> 00:29:50,980
hammering so after after row after row

592
00:29:48,129 --> 00:29:53,619
humming for like 39 times we can find

593
00:29:50,980 --> 00:29:56,619
our exploitable page table and we dump

594
00:29:53,619 --> 00:29:59,049
its first 8 entries and we can say that

595
00:29:56,619 --> 00:30:02,649
all the 8 entries conform to the PT

596
00:29:59,049 --> 00:30:06,668
format so now let's change in the way

597
00:30:02,649 --> 00:30:10,928
let's get the root privilege so the

598
00:30:06,669 --> 00:30:13,059
basic idea is that too we change we

599
00:30:10,929 --> 00:30:15,730
change the save the user ID effective

600
00:30:13,059 --> 00:30:18,279
user ID to real use ID and to the same

601
00:30:15,730 --> 00:30:21,489
thing to the group ID and then we can

602
00:30:18,279 --> 00:30:24,220
construct a key string composed of the 3

603
00:30:21,489 --> 00:30:28,359
same user ID and the same group ID and

604
00:30:24,220 --> 00:30:30,249
the when we change one country when we

605
00:30:28,359 --> 00:30:32,739
change one pretty country with a

606
00:30:30,249 --> 00:30:34,929
different physical always atif in a

607
00:30:32,739 --> 00:30:37,330
physical number the only we check

608
00:30:34,929 --> 00:30:43,600
whether the only mapped page has the

609
00:30:37,330 --> 00:30:48,090
same has a case string yes so so we can

610
00:30:43,600 --> 00:30:50,369
say that if yes we have found a matching

611
00:30:48,090 --> 00:30:52,359
so if yes we have found a matching

612
00:30:50,369 --> 00:30:54,999
structure we have done a matching

613
00:30:52,359 --> 00:30:58,480
structure of credential credential use

614
00:30:54,999 --> 00:31:03,730
where the user ID resides so we write

615
00:30:58,480 --> 00:31:05,880
three zeros we were three zeros into the

616
00:31:03,730 --> 00:31:08,800
three you tied the structures user ID

617
00:31:05,880 --> 00:31:11,200
the structures to use ID respectively

618
00:31:08,800 --> 00:31:13,750
and the check under you and design

619
00:31:11,200 --> 00:31:16,030
invoke the key ID function to check

620
00:31:13,750 --> 00:31:19,480
whether the car in the process you add

621
00:31:16,030 --> 00:31:23,379
user ID has been changed to zero so if

622
00:31:19,480 --> 00:31:25,780
if not we try again or we still we

623
00:31:23,380 --> 00:31:28,020
continue searching and the restore the

624
00:31:25,780 --> 00:31:31,690
we stole the current the current

625
00:31:28,020 --> 00:31:36,760
structures use ID to inspect to its

626
00:31:31,690 --> 00:31:40,090
original state and and by doing so we

627
00:31:36,760 --> 00:31:42,610
can by doing so we can change we can see

628
00:31:40,090 --> 00:31:45,250
that by doing so we can say that we can

629
00:31:42,610 --> 00:31:49,000
locate the current process user ID and

630
00:31:45,250 --> 00:31:52,900
change it to zero so during this process

631
00:31:49,000 --> 00:31:55,780
I need to explain that on the tour at

632
00:31:52,900 --> 00:31:57,940
the terminal part we have we have to

633
00:31:55,780 --> 00:32:02,740
flush the GOP because we change in the

634
00:31:57,940 --> 00:32:06,250
PD entry so mmm this is because I waited

635
00:32:02,740 --> 00:32:09,400
to switch the process between Co zero

636
00:32:06,250 --> 00:32:12,040
and : and considering that the tour rats

637
00:32:09,400 --> 00:32:15,160
are running on KO 0 and : once the

638
00:32:12,040 --> 00:32:19,180
current arohanui exploit has been

639
00:32:15,160 --> 00:32:21,340
scheduled on leave the call the contest

640
00:32:19,180 --> 00:32:25,210
which worker and disease which vehicle I

641
00:32:21,340 --> 00:32:27,610
automatic gob flush so in the end we can

642
00:32:25,210 --> 00:32:34,530
say that we have gained the suit

643
00:32:27,610 --> 00:32:34,530
privilege ok so that's all for tag

644
00:32:42,170 --> 00:32:48,260
so if someone thinks that disable us

645
00:32:46,070 --> 00:32:50,720
society nuke buffer is not enough to

646
00:32:48,260 --> 00:32:52,580
come to measure our attack we also we

647
00:32:50,720 --> 00:32:56,000
have also developed another exploitable

648
00:32:52,580 --> 00:32:58,310
briefed lips we have also developed

649
00:32:56,000 --> 00:33:00,020
another exploitable buffer the video

650
00:32:58,310 --> 00:33:03,620
buffer in the video phone in Excel

651
00:33:00,020 --> 00:33:09,370
system so actually we have other Hamel

652
00:33:03,620 --> 00:33:11,750
buffers in this directories so okay so

653
00:33:09,370 --> 00:33:14,389
in the next the lectures

654
00:33:11,750 --> 00:33:16,400
copying is about the medication so we

655
00:33:14,390 --> 00:33:18,890
have three possible medications the

656
00:33:16,400 --> 00:33:21,560
first it to allocate the tab on the

657
00:33:18,890 --> 00:33:24,670
buffer from user partition this is an

658
00:33:21,560 --> 00:33:27,560
intuitive solution and a lot and the

659
00:33:24,670 --> 00:33:31,160
other two differences in versed after

660
00:33:27,560 --> 00:33:32,810
submission to blackhead and all of this

661
00:33:31,160 --> 00:33:35,440
three solutions have their own

662
00:33:32,810 --> 00:33:38,950
limitations and are not effective enough

663
00:33:35,440 --> 00:33:41,180
for the first one we can say that if we

664
00:33:38,950 --> 00:33:43,760
allocated a double and buffer from the

665
00:33:41,180 --> 00:33:47,240
user partition this can prevent the

666
00:33:43,760 --> 00:33:49,580
kernel from being hammered however this

667
00:33:47,240 --> 00:33:52,460
will expose sensitive buffers to user

668
00:33:49,580 --> 00:33:54,710
space still not secure enough so for the

669
00:33:52,460 --> 00:33:59,410
second one it is published in OS tier

670
00:33:54,710 --> 00:34:01,430
2018 and the main idea used to separate

671
00:33:59,410 --> 00:34:03,320
separated the road

672
00:34:01,430 --> 00:34:09,440
the roads are contains data with to cut

673
00:34:03,320 --> 00:34:11,870
in rows so this method doesn't suffice

674
00:34:09,440 --> 00:34:14,270
from the road we matching and does not

675
00:34:11,870 --> 00:34:17,120
consider the case will be flips can

676
00:34:14,270 --> 00:34:20,540
occur in multiple rows the last one used

677
00:34:17,120 --> 00:34:25,699
to place is to place of stable pages and

678
00:34:20,540 --> 00:34:29,000
to sales in tier on private on just this

679
00:34:25,699 --> 00:34:34,580
method still suffers from the export

680
00:34:29,000 --> 00:34:36,649
puppy flips so uncommon work with the so

681
00:34:34,580 --> 00:34:39,319
can we break off them this is a question

682
00:34:36,649 --> 00:34:44,120
mark we think it is possible so please

683
00:34:39,320 --> 00:34:47,149
follow up our legs bahama talk so at

684
00:34:44,120 --> 00:34:51,710
last week about some parts physical

685
00:34:47,149 --> 00:34:54,589
isolation is powerful against current

686
00:34:51,710 --> 00:34:55,850
elohim attacks however it is hard to

687
00:34:54,590 --> 00:34:58,220
achieve in practice

688
00:34:55,850 --> 00:34:59,690
due to the taboo and buffers and this

689
00:34:58,220 --> 00:35:03,140
will make the rahama drugs still

690
00:34:59,690 --> 00:35:05,720
exploitable so mmm the tab on the

691
00:35:03,140 --> 00:35:09,200
buffers are for the sake of function

692
00:35:05,720 --> 00:35:12,230
performance and the functionality and it

693
00:35:09,200 --> 00:35:14,149
is challenging to remove them so even

694
00:35:12,230 --> 00:35:16,820
facing the user and the kernel physical

695
00:35:14,150 --> 00:35:20,450
isolation our exploit is still able to

696
00:35:16,820 --> 00:35:22,700
gain the to turn the condo privileges ok

697
00:35:20,450 --> 00:35:23,560
so that's what our talk thank you very

698
00:35:22,700 --> 00:35:31,339
much

699
00:35:23,560 --> 00:35:40,299
any questions this is our first first

700
00:35:31,340 --> 00:35:40,300
speaker eh on time so any questions

701
00:35:49,310 --> 00:35:53,750
oh you mean the a so attacking in the

702
00:35:52,130 --> 00:35:56,480
westerland's in the Yemen right

703
00:35:53,750 --> 00:36:01,670
could you attack the hypervisor or gain

704
00:35:56,480 --> 00:36:04,250
it make changes to currently this target

705
00:36:01,670 --> 00:36:05,990
for the colonel stop but for the hot

706
00:36:04,250 --> 00:36:08,030
weather like testing the para

707
00:36:05,990 --> 00:36:11,359
virtualized hot weather is as definitely

708
00:36:08,030 --> 00:36:14,180
it can work but for the forwards left

709
00:36:11,360 --> 00:36:18,320
like based on the in travail ET d and

710
00:36:14,180 --> 00:36:24,250
which he our staff this will be

711
00:36:18,320 --> 00:36:28,630
challenging intuitively speaking missing

712
00:36:24,250 --> 00:36:32,600
hot weather we need a table ownership

713
00:36:28,630 --> 00:36:37,280
that's very hot maybe not maybe Parton

714
00:36:32,600 --> 00:36:39,380
in impossible yeah but for the para

715
00:36:37,280 --> 00:36:42,110
virtualized environment he's suffering

716
00:36:39,380 --> 00:36:44,450
but for the forwards last environment if

717
00:36:42,110 --> 00:36:49,220
we have some pie reverse flyes that

718
00:36:44,450 --> 00:36:52,240
driver stopped me also may be possible

719
00:36:49,220 --> 00:36:56,089
but depends on the the rural environment

720
00:36:52,240 --> 00:36:58,549
if there are pure for forward slash

721
00:36:56,090 --> 00:37:00,790
environment I think this attack cannot

722
00:36:58,550 --> 00:37:00,790
happen

723
00:37:06,870 --> 00:37:19,540
yeah you get Mac yeah the open yeah

724
00:37:15,910 --> 00:37:23,200
trying hello hi

725
00:37:19,540 --> 00:37:25,509
so you mentioned trying to bypass the

726
00:37:23,200 --> 00:37:28,990
most advanced remember defense so did

727
00:37:25,510 --> 00:37:30,580
you also consider if the parts itself

728
00:37:28,990 --> 00:37:33,009
like most of the latest vendors they

729
00:37:30,580 --> 00:37:36,190
claim that their parts it's a freedom

730
00:37:33,010 --> 00:37:41,020
part itself are row hammer resistant so

731
00:37:36,190 --> 00:37:42,100
is it like I mean is that the most I

732
00:37:41,020 --> 00:37:44,380
mean if you consider about hardware

733
00:37:42,100 --> 00:37:46,180
software probably that is the most

734
00:37:44,380 --> 00:37:47,680
advanced difference what do you mean the

735
00:37:46,180 --> 00:37:50,200
most advanced software defense without

736
00:37:47,680 --> 00:37:50,680
altering hardware yeah that's a good

737
00:37:50,200 --> 00:37:52,899
question

738
00:37:50,680 --> 00:37:55,120
actually yes for the hardware

739
00:37:52,900 --> 00:37:56,740
differences there's how some limitations

740
00:37:55,120 --> 00:37:58,960
were alright at least in the slides

741
00:37:56,740 --> 00:38:02,799
currently this the most of the velocity

742
00:37:58,960 --> 00:38:06,600
is the software only solutions yes

743
00:38:02,800 --> 00:38:08,260
that's right yeah so like going forward

744
00:38:06,600 --> 00:38:10,839
for new devices

745
00:38:08,260 --> 00:38:13,540
I think vendors will be using the parts

746
00:38:10,840 --> 00:38:15,340
which are T RAM resistant so does this

747
00:38:13,540 --> 00:38:17,320
apply more to legacy products where

748
00:38:15,340 --> 00:38:19,480
there's not any option to change the

749
00:38:17,320 --> 00:38:23,650
DRAM part or even for forward-looking

750
00:38:19,480 --> 00:38:29,200
devices which have DRAM parts which are

751
00:38:23,650 --> 00:38:35,890
Oh hammer instant well such exploits be

752
00:38:29,200 --> 00:38:38,500
realizable I don't Kapaun yeah like for

753
00:38:35,890 --> 00:38:40,170
new devices having manufacturers will

754
00:38:38,500 --> 00:38:42,220
use the DRAM parts which are

755
00:38:40,170 --> 00:38:44,410
electrically no hammer resistant

756
00:38:42,220 --> 00:38:47,560
that's what the oh you memory vendors

757
00:38:44,410 --> 00:38:49,930
proclaim so have you explored those

758
00:38:47,560 --> 00:38:53,620
parts as well to mount such kind of

759
00:38:49,930 --> 00:38:56,259
attacks or yeah you mean if the hardware

760
00:38:53,620 --> 00:38:59,160
manufacturer fundamentally has fixed

761
00:38:56,260 --> 00:39:02,230
this trike from the lack of the team

762
00:38:59,160 --> 00:39:06,680
that that's definitely can

763
00:39:02,230 --> 00:39:10,720
completely stop this attack but until

764
00:39:06,680 --> 00:39:14,629
all the until now the all the existing

765
00:39:10,720 --> 00:39:18,680
the Durham staffs they cannot completely

766
00:39:14,630 --> 00:39:21,410
a so this problem actually they do to

767
00:39:18,680 --> 00:39:23,750
the high-density to Ohio increasing from

768
00:39:21,410 --> 00:39:27,109
gigabyte to the turbine so the density

769
00:39:23,750 --> 00:39:29,180
stuff maybe they need to significantly

770
00:39:27,110 --> 00:39:32,050
change the hardware structures to

771
00:39:29,180 --> 00:39:32,049
address this problem

772
00:39:43,000 --> 00:39:50,080
so okay nope

773
00:39:46,600 --> 00:39:50,080
any questions

774
00:39:52,590 --> 00:39:57,050
yeah I think those are thank you

775
00:39:57,460 --> 00:40:00,190
[Applause]

