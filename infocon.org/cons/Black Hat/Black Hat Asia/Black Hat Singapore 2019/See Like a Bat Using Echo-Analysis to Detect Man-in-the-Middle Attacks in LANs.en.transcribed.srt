1
00:00:00,000 --> 00:00:04,080
hi everybody my name is Sol mirskiy I am

2
00:00:02,460 --> 00:00:06,660
a cybersecurity researcher at ben-gurion

3
00:00:04,080 --> 00:00:07,919
University and today I'm going to show

4
00:00:06,660 --> 00:00:09,719
you a tool that we developed for

5
00:00:07,919 --> 00:00:12,660
detecting man the middle attacks in

6
00:00:09,719 --> 00:00:15,890
lands using echo analysis this work was

7
00:00:12,660 --> 00:00:21,990
co-authored by NorCal bow tie and

8
00:00:15,890 --> 00:00:23,580
Ivanovich so let's begin so why do we

9
00:00:21,990 --> 00:00:26,038
care about man the mental attacks in

10
00:00:23,580 --> 00:00:28,259
lands it sounds kind of archaic but the

11
00:00:26,039 --> 00:00:31,349
truth is it's actually quite a bit of a

12
00:00:28,260 --> 00:00:34,559
threat the reason is that they are easy

13
00:00:31,349 --> 00:00:37,590
to implement most cases hard to detect

14
00:00:34,559 --> 00:00:39,809
and still very useful tools for

15
00:00:37,590 --> 00:00:42,210
attackers for example they're a basic

16
00:00:39,809 --> 00:00:44,550
tool for performing reconnaissance you

17
00:00:42,210 --> 00:00:46,890
see them being used in lateral movement

18
00:00:44,550 --> 00:00:48,449
in apts and they're very effective

19
00:00:46,890 --> 00:00:51,120
because so many systems are

20
00:00:48,450 --> 00:00:54,329
misconfigured for example offices

21
00:00:51,120 --> 00:00:56,849
factories and hospitals and the list

22
00:00:54,329 --> 00:00:58,559
goes on let me tell you a bit of a story

23
00:00:56,850 --> 00:01:00,870
from one of the projects I've been

24
00:00:58,559 --> 00:01:03,570
working on recently I had to perform a

25
00:01:00,870 --> 00:01:06,869
pen test on a hospital where I wanted to

26
00:01:03,570 --> 00:01:10,380
capture medical scans being sent from a

27
00:01:06,869 --> 00:01:12,119
CT scanner to manipulate them now what I

28
00:01:10,380 --> 00:01:14,130
did was as I came to the hospital at

29
00:01:12,119 --> 00:01:16,320
night when the cleaning staff opened the

30
00:01:14,130 --> 00:01:17,580
doors and I went inside and the cleaning

31
00:01:16,320 --> 00:01:21,059
staff didn't mind at all that I was

32
00:01:17,580 --> 00:01:23,220
there and I went and found one of the CT

33
00:01:21,060 --> 00:01:26,400
scanners and I came and brought with me

34
00:01:23,220 --> 00:01:29,250
a small Raspberry Pi with two Ethernet

35
00:01:26,400 --> 00:01:31,710
ports I attached an extra and I plugged

36
00:01:29,250 --> 00:01:33,150
it in between the CT scanner and the

37
00:01:31,710 --> 00:01:36,059
rest of the network so that I could

38
00:01:33,150 --> 00:01:38,400
intercept all the traffic not only was I

39
00:01:36,060 --> 00:01:40,380
able to do this within 30 seconds but I

40
00:01:38,400 --> 00:01:42,119
was also able to capture all the CT

41
00:01:40,380 --> 00:01:44,250
scans which weren't encrypted by the way

42
00:01:42,119 --> 00:01:46,950
and within three minutes get the

43
00:01:44,250 --> 00:01:50,820
credentials of about 27 doctors in the

44
00:01:46,950 --> 00:01:53,100
hospital so this is just an example of

45
00:01:50,820 --> 00:01:55,020
why we still care about man mental

46
00:01:53,100 --> 00:01:56,729
attacks and lands and lands isn't just

47
00:01:55,020 --> 00:01:58,259
like once wishin if you host so you can

48
00:01:56,729 --> 00:02:01,610
actually have quite large lands with

49
00:01:58,259 --> 00:02:04,170
multiple switches and hundreds of hosts

50
00:02:01,610 --> 00:02:06,600
so let's talk about the different kinds

51
00:02:04,170 --> 00:02:09,239
of men in the middle attacks that you

52
00:02:06,600 --> 00:02:13,019
can find in the land the first kind is

53
00:02:09,239 --> 00:02:13,670
the classic kind where Eve is diverting

54
00:02:13,020 --> 00:02:16,220
traffic

55
00:02:13,670 --> 00:02:18,859
to her so that she can manipulate the

56
00:02:16,220 --> 00:02:20,569
packets or the content of the packets so

57
00:02:18,860 --> 00:02:22,069
the most classic example of this or

58
00:02:20,569 --> 00:02:23,149
implementation of this is ARP spoofing

59
00:02:22,069 --> 00:02:26,420
but there are many other techniques

60
00:02:23,150 --> 00:02:28,819
where how this can be done the second

61
00:02:26,420 --> 00:02:30,829
technique is called inline or referred

62
00:02:28,819 --> 00:02:33,440
to as inline manda mental attack where

63
00:02:30,830 --> 00:02:36,290
like you saw in the video the attacker

64
00:02:33,440 --> 00:02:38,060
places a device right inline of the wire

65
00:02:36,290 --> 00:02:40,130
and this is much harder to detect

66
00:02:38,060 --> 00:02:42,080
because that the attacker doesn't have

67
00:02:40,130 --> 00:02:45,590
to leave any forensic evidence in the

68
00:02:42,080 --> 00:02:47,390
packets they manipulate the last kind

69
00:02:45,590 --> 00:02:50,269
which we referred to as endpoint is

70
00:02:47,390 --> 00:02:52,069
where the attacker actually goes to a

71
00:02:50,269 --> 00:02:54,620
switch in the network and replaces it

72
00:02:52,069 --> 00:02:56,630
with his or her own switch that has been

73
00:02:54,620 --> 00:02:58,549
tampered with so it will can also

74
00:02:56,630 --> 00:03:00,380
perform manipulations on the traffic and

75
00:02:58,549 --> 00:03:03,890
this is the hardest form of man the

76
00:03:00,380 --> 00:03:05,660
middle attack in the land to detect so

77
00:03:03,890 --> 00:03:08,208
the current methods for detecting these

78
00:03:05,660 --> 00:03:09,920
men the middle attacks generally perform

79
00:03:08,209 --> 00:03:11,239
passive analysis and this means that

80
00:03:09,920 --> 00:03:12,260
they look at the packets are going over

81
00:03:11,239 --> 00:03:14,450
the networks to see if there's any

82
00:03:12,260 --> 00:03:16,429
evidence that there's a man in middle a

83
00:03:14,450 --> 00:03:17,839
play here now the problem with doing

84
00:03:16,430 --> 00:03:20,000
passive analysis is that they don't

85
00:03:17,840 --> 00:03:22,370
generalize the different attacks they're

86
00:03:20,000 --> 00:03:25,489
not portable and they can generate false

87
00:03:22,370 --> 00:03:27,410
positives so instead of doing passive

88
00:03:25,489 --> 00:03:30,260
sensing actually what we'd like to do is

89
00:03:27,410 --> 00:03:32,209
perform active sensing we'd like to send

90
00:03:30,260 --> 00:03:33,798
probes throughout the network and try a

91
00:03:32,209 --> 00:03:37,810
sense if there's any man in the middle

92
00:03:33,799 --> 00:03:40,840
out there how are we going to do that so

93
00:03:37,810 --> 00:03:43,910
imagine if you could see like a bat

94
00:03:40,840 --> 00:03:45,980
think of a room filled with objects a

95
00:03:43,910 --> 00:03:48,500
television a carpet pictures on the

96
00:03:45,980 --> 00:03:51,190
walls and you clap your hands and you

97
00:03:48,500 --> 00:03:53,600
listen to the echo how does that sound

98
00:03:51,190 --> 00:03:55,400
now remove all the objects from that

99
00:03:53,600 --> 00:03:57,950
room and clap your hands again

100
00:03:55,400 --> 00:04:00,109
what do you hear this sounds different

101
00:03:57,950 --> 00:04:02,540
right that's because the sound waves

102
00:04:00,109 --> 00:04:03,980
reverberate it off all the surfaces and

103
00:04:02,540 --> 00:04:06,890
the materials and the objects in the

104
00:04:03,980 --> 00:04:08,780
room and bounce back to you and capture

105
00:04:06,890 --> 00:04:12,950
was in essence a fingerprint of that

106
00:04:08,780 --> 00:04:14,480
room what I just referred to here is

107
00:04:12,950 --> 00:04:17,060
what is also called a linear

108
00:04:14,480 --> 00:04:19,399
time-invariant system and that clap has

109
00:04:17,060 --> 00:04:22,430
also referred to as a direct pulse and

110
00:04:19,399 --> 00:04:24,590
that echo is referred to as impulse

111
00:04:22,430 --> 00:04:26,710
response and here are a few examples of

112
00:04:24,590 --> 00:04:29,560
impulse responses in our

113
00:04:26,710 --> 00:04:32,888
sticks for a small cave a parking garage

114
00:04:29,560 --> 00:04:34,690
a large room and a church you can see

115
00:04:32,889 --> 00:04:36,520
that each of these impulse responses are

116
00:04:34,690 --> 00:04:38,440
unique to those rooms and as a matter of

117
00:04:36,520 --> 00:04:40,599
fact if you would even alter one thing

118
00:04:38,440 --> 00:04:42,610
in that room you can pick that up in the

119
00:04:40,599 --> 00:04:45,509
impulse response the vibrations will

120
00:04:42,610 --> 00:04:47,889
change and the fingerprint will change

121
00:04:45,509 --> 00:04:49,990
now the problem with using a direct

122
00:04:47,889 --> 00:04:52,770
pulse is not so good in populated

123
00:04:49,990 --> 00:04:55,270
environments and also it can be spoofed

124
00:04:52,770 --> 00:04:56,889
so what we're actually going to use is

125
00:04:55,270 --> 00:04:59,620
something called a maximum length

126
00:04:56,889 --> 00:05:01,840
sequence signal where we send this kind

127
00:04:59,620 --> 00:05:05,849
of noisy signal as you can see which is

128
00:05:01,840 --> 00:05:08,590
based off a random pseudo-random binary

129
00:05:05,849 --> 00:05:10,539
sequence generated by this feedback loop

130
00:05:08,590 --> 00:05:12,609
and what's special about this MLS

131
00:05:10,539 --> 00:05:14,229
sequence aside from all sorts of

132
00:05:12,610 --> 00:05:16,870
acoustic properties that we can actually

133
00:05:14,229 --> 00:05:18,849
capture the impulse response is that it

134
00:05:16,870 --> 00:05:20,409
works well in populated environments and

135
00:05:18,849 --> 00:05:21,820
it's much harder to spoof because every

136
00:05:20,409 --> 00:05:25,240
time we send out this pulse

137
00:05:21,820 --> 00:05:27,099
we can make it a new random signal now

138
00:05:25,240 --> 00:05:28,599
the only difference gene using this and

139
00:05:27,099 --> 00:05:30,520
our direct pulse is that we have to

140
00:05:28,599 --> 00:05:32,530
perform deconvolution on the echo to get

141
00:05:30,520 --> 00:05:33,969
out the impulse response but don't worry

142
00:05:32,530 --> 00:05:37,809
about all that math I'm going to leave

143
00:05:33,970 --> 00:05:40,570
that out you can trust me okay so how do

144
00:05:37,810 --> 00:05:42,909
we apply this to a LAN so Alice wants to

145
00:05:40,570 --> 00:05:44,830
protect her link with Bob so what she's

146
00:05:42,909 --> 00:05:47,320
going to do is she's going to probe that

147
00:05:44,830 --> 00:05:51,758
link by sending an intense burst of

148
00:05:47,320 --> 00:05:53,440
pings ICMP echo requests where each ping

149
00:05:51,759 --> 00:05:55,870
in that burst is going to be modulated

150
00:05:53,440 --> 00:05:57,969
according to the MLS sequence so if

151
00:05:55,870 --> 00:06:00,430
there's a one in that sequence she's

152
00:05:57,969 --> 00:06:03,940
going to send a ping with a maximum

153
00:06:00,430 --> 00:06:05,800
payload size of 1,500 bytes and if there

154
00:06:03,940 --> 00:06:08,740
is a zero in that sequence she's going

155
00:06:05,800 --> 00:06:13,330
to send a ping with a payload size of

156
00:06:08,740 --> 00:06:14,710
zero when Bob receives that signal he's

157
00:06:13,330 --> 00:06:17,139
going to automatically reply as you

158
00:06:14,710 --> 00:06:18,340
would in a ping and what Eve is going to

159
00:06:17,139 --> 00:06:20,139
do she's going to measure the round-trip

160
00:06:18,340 --> 00:06:22,989
times for each of those pings and as you

161
00:06:20,139 --> 00:06:25,090
can see the echo that Roz gets back

162
00:06:22,990 --> 00:06:27,009
reflects the original signal being sent

163
00:06:25,090 --> 00:06:29,198
which makes sense as you would imagine

164
00:06:27,009 --> 00:06:30,610
as you would expect from an echo but

165
00:06:29,199 --> 00:06:31,870
it's not the same as just taking the

166
00:06:30,610 --> 00:06:35,770
round-trip times over the network

167
00:06:31,870 --> 00:06:38,380
because all the hardware and certain

168
00:06:35,770 --> 00:06:40,330
physical defects in the in the system in

169
00:06:38,380 --> 00:06:41,680
algorithms and software we of

170
00:06:40,330 --> 00:06:45,340
all the switches and components

171
00:06:41,680 --> 00:06:48,400
including Bob along the way apply a

172
00:06:45,340 --> 00:06:50,830
dynamic effect on the echo that we

173
00:06:48,400 --> 00:06:54,039
receive for example here's an impulse

174
00:06:50,830 --> 00:06:55,659
response for two identical switches blue

175
00:06:54,039 --> 00:06:57,969
and red where you can see they are

176
00:06:55,659 --> 00:06:59,560
distinctly different and the reason is

177
00:06:57,969 --> 00:07:02,259
because during the manufacturing process

178
00:06:59,560 --> 00:07:03,490
of these switches certain defects find

179
00:07:02,259 --> 00:07:05,199
their way into the chips and causes

180
00:07:03,490 --> 00:07:07,750
slight changes in the way for example

181
00:07:05,199 --> 00:07:10,509
the the clock skew looks like and this

182
00:07:07,750 --> 00:07:12,129
also affects how the response of these

183
00:07:10,509 --> 00:07:13,419
packets will be processed and we can

184
00:07:12,129 --> 00:07:16,599
pick that up and we can differentiate

185
00:07:13,419 --> 00:07:18,430
between these devices so if Alice

186
00:07:16,599 --> 00:07:20,080
continues to probing this link she can

187
00:07:18,430 --> 00:07:21,280
get a nice profile of how the link

188
00:07:20,080 --> 00:07:23,349
between Alice and Bob should look like

189
00:07:21,280 --> 00:07:27,969
so that if Eve should ever come along

190
00:07:23,349 --> 00:07:30,280
that profile and there will be a clear

191
00:07:27,969 --> 00:07:32,409
indicator that something has changed in

192
00:07:30,280 --> 00:07:34,690
the network and that Eve has been been

193
00:07:32,409 --> 00:07:40,629
now tempering and eavesdropping on the

194
00:07:34,690 --> 00:07:42,279
traffic so with this approach we can

195
00:07:40,629 --> 00:07:43,599
actually detect every kind of man the

196
00:07:42,279 --> 00:07:46,300
middle attacking lands and the main

197
00:07:43,599 --> 00:07:48,400
reason for that is because by definition

198
00:07:46,300 --> 00:07:50,529
a man the middle has to first take a

199
00:07:48,400 --> 00:07:52,330
look at the packet to determine if he

200
00:07:50,529 --> 00:07:53,770
wants to manipulate it and only

201
00:07:52,330 --> 00:07:55,210
afterwards he can then decide to

202
00:07:53,770 --> 00:07:57,448
manipulate or not but the fact that he's

203
00:07:55,210 --> 00:08:00,549
already taken that packet and started to

204
00:07:57,449 --> 00:08:02,289
read it means that he's processing it

205
00:08:00,550 --> 00:08:03,669
with his electronics with his software

206
00:08:02,289 --> 00:08:05,710
and that's going to leave his

207
00:08:03,669 --> 00:08:07,210
fingerprint on the burst of packets that

208
00:08:05,710 --> 00:08:10,270
were sitting through the network so that

209
00:08:07,210 --> 00:08:12,430
means for traffic divergences just are

210
00:08:10,270 --> 00:08:14,229
poisoning in line man the middle attacks

211
00:08:12,430 --> 00:08:15,520
such as Network bridges or in point man

212
00:08:14,229 --> 00:08:18,580
the middle attacks all of these we can

213
00:08:15,520 --> 00:08:20,139
detect but of course I have to point out

214
00:08:18,580 --> 00:08:22,270
that we're not talking about passive

215
00:08:20,139 --> 00:08:24,009
wiretap where somebody connects directly

216
00:08:22,270 --> 00:08:25,839
onto the copper is just listening to the

217
00:08:24,009 --> 00:08:27,520
electronic signal because this isn't an

218
00:08:25,839 --> 00:08:31,539
Amanda middle attack there's no actual

219
00:08:27,520 --> 00:08:33,218
intervention happening so let's talk

220
00:08:31,539 --> 00:08:36,640
about the tool that we developed we call

221
00:08:33,219 --> 00:08:39,219
Vesper Vesper breaks down into three

222
00:08:36,640 --> 00:08:43,569
components the link prober the feature

223
00:08:39,219 --> 00:08:45,579
extractor and the host profiler first we

224
00:08:43,570 --> 00:08:47,620
select an IP address somewhere inside

225
00:08:45,579 --> 00:08:49,630
our land and we sit and we generate a

226
00:08:47,620 --> 00:08:51,880
random MLS sequence and we send an

227
00:08:49,630 --> 00:08:53,110
intense burst of these ping requests to

228
00:08:51,880 --> 00:08:55,540
there or to our hosts

229
00:08:53,110 --> 00:08:58,930
in parallel we also receive those

230
00:08:55,540 --> 00:09:01,510
responses and we extract three vectors X

231
00:08:58,930 --> 00:09:05,410
being the MLS sequence that we generated

232
00:09:01,510 --> 00:09:07,300
Y being the round-trip times and Z being

233
00:09:05,410 --> 00:09:10,630
the jitter the timing between the

234
00:09:07,300 --> 00:09:12,459
packets from these three vectors we

235
00:09:10,630 --> 00:09:14,860
summarize the entire probe into three

236
00:09:12,459 --> 00:09:17,290
values the first value is the average

237
00:09:14,860 --> 00:09:21,579
energy of the impulse response the

238
00:09:17,290 --> 00:09:23,709
second value is the average round-trip

239
00:09:21,579 --> 00:09:26,979
time the largest packets in that burst

240
00:09:23,709 --> 00:09:29,050
and the third value is the probability

241
00:09:26,980 --> 00:09:33,490
of that jitter distribution fitting

242
00:09:29,050 --> 00:09:35,319
previous probes that we've sent now once

243
00:09:33,490 --> 00:09:37,630
we have the summary of this probe we

244
00:09:35,320 --> 00:09:40,300
just look up a profile that we've made

245
00:09:37,630 --> 00:09:41,620
for this IP address using any classic

246
00:09:40,300 --> 00:09:43,689
anomaly detection algorithm we can

247
00:09:41,620 --> 00:09:46,300
determine whether this point those three

248
00:09:43,690 --> 00:09:47,410
values match that all the other probes

249
00:09:46,300 --> 00:09:49,599
that we've taken for this IP address

250
00:09:47,410 --> 00:09:51,579
before now there are many different

251
00:09:49,600 --> 00:09:54,519
anomaly detection algorithms you can use

252
00:09:51,579 --> 00:09:56,890
the one which we actually deployed and

253
00:09:54,519 --> 00:09:58,899
published in this tool is referred to as

254
00:09:56,890 --> 00:10:00,939
local outlier factor and I'll just give

255
00:09:58,899 --> 00:10:04,930
you a very high-level explanation

256
00:10:00,940 --> 00:10:07,120
explanation how this works so each point

257
00:10:04,930 --> 00:10:08,859
here for example let's say is a probe

258
00:10:07,120 --> 00:10:10,750
that I've made when I was trying to

259
00:10:08,860 --> 00:10:13,420
sample and try and understand how this

260
00:10:10,750 --> 00:10:17,290
link looks like or what this link looks

261
00:10:13,420 --> 00:10:19,269
like and the X and y-axis are showing

262
00:10:17,290 --> 00:10:21,430
the first and second features the third

263
00:10:19,269 --> 00:10:23,949
feature left out for simplicity when a

264
00:10:21,430 --> 00:10:26,319
new probe is made if falls out somewhere

265
00:10:23,949 --> 00:10:28,359
among these points and I take a look at

266
00:10:26,320 --> 00:10:30,490
the neighbors to understand if it's an

267
00:10:28,360 --> 00:10:31,690
outlier or not outlier meaning it's far

268
00:10:30,490 --> 00:10:33,760
away from all the other points so it's

269
00:10:31,690 --> 00:10:35,140
an anomaly in ly meaning it's close to

270
00:10:33,760 --> 00:10:36,670
all the other points within all the

271
00:10:35,140 --> 00:10:38,470
other points and therefore it's normal

272
00:10:36,670 --> 00:10:39,519
but it's sometimes not enough just to

273
00:10:38,470 --> 00:10:40,810
look at the neighbors we have to

274
00:10:39,519 --> 00:10:43,149
actually kind of measure what the

275
00:10:40,810 --> 00:10:45,760
density is around the other points to

276
00:10:43,149 --> 00:10:47,680
understand the context so for example in

277
00:10:45,760 --> 00:10:49,569
this case this is an in liar but if

278
00:10:47,680 --> 00:10:51,880
another probe is made and we see its way

279
00:10:49,570 --> 00:10:53,110
off with respect to the densities of all

280
00:10:51,880 --> 00:10:55,120
the other probes around us and we know

281
00:10:53,110 --> 00:10:58,600
that this is an outlier you can go check

282
00:10:55,120 --> 00:10:59,890
up on with how this is actually computed

283
00:10:58,600 --> 00:11:03,910
but I'm going to leave that out to keep

284
00:10:59,890 --> 00:11:05,800
it nice and simple all right so let's

285
00:11:03,910 --> 00:11:06,980
talk a bit about the evaluation so we

286
00:11:05,800 --> 00:11:08,990
took a look at three

287
00:11:06,980 --> 00:11:13,820
from the three different kinds of men

288
00:11:08,990 --> 00:11:15,680
middle attacks in lands and the first

289
00:11:13,820 --> 00:11:17,120
kind for endpoint men will attack we

290
00:11:15,680 --> 00:11:19,849
took a look at we implemented our

291
00:11:17,120 --> 00:11:21,769
poisoning for in line we took a look at

292
00:11:19,850 --> 00:11:23,600
a network bridge implemented by

293
00:11:21,769 --> 00:11:26,449
raspberry pi and a network bridge

294
00:11:23,600 --> 00:11:29,690
implemented by a regular one gigabit per

295
00:11:26,449 --> 00:11:32,180
second Ethernet switch and for the

296
00:11:29,690 --> 00:11:34,010
endpoint we tried different switches and

297
00:11:32,180 --> 00:11:36,319
we also tried identical switches see if

298
00:11:34,010 --> 00:11:37,339
we can determine if somebody swaps on

299
00:11:36,320 --> 00:11:41,600
are identical switch with another

300
00:11:37,339 --> 00:11:44,320
identical switch and now it's also

301
00:11:41,600 --> 00:11:46,940
important to note that we have to

302
00:11:44,320 --> 00:11:48,680
consider any traffic going over the

303
00:11:46,940 --> 00:11:50,180
network that may mess up our probes so

304
00:11:48,680 --> 00:11:52,339
we check you'll be tested our techniques

305
00:11:50,180 --> 00:11:53,839
in many different environments one

306
00:11:52,339 --> 00:11:55,910
environment being a surveillance network

307
00:11:53,839 --> 00:11:58,730
with seven switches and 13 network hosts

308
00:11:55,910 --> 00:12:01,069
the other being a server network with

309
00:11:58,730 --> 00:12:02,720
three switches and 61 servers and a

310
00:12:01,070 --> 00:12:05,300
large office and network with 14

311
00:12:02,720 --> 00:12:09,860
switches and over 300 Network hosts with

312
00:12:05,300 --> 00:12:13,069
multiple VLANs and optical uplinks so

313
00:12:09,860 --> 00:12:16,010
for the case of sending probes over one

314
00:12:13,069 --> 00:12:18,589
hop ie one intermediary switch we were

315
00:12:16,010 --> 00:12:20,810
able to detect the the different method

316
00:12:18,589 --> 00:12:22,760
middle attack at the ARP traffic

317
00:12:20,810 --> 00:12:25,459
diversion man middle attack quite easily

318
00:12:22,760 --> 00:12:28,370
in the different scenarios and same with

319
00:12:25,459 --> 00:12:31,310
the network bridge cases and we're also

320
00:12:28,370 --> 00:12:34,220
able to detect when a switch was swapped

321
00:12:31,310 --> 00:12:36,109
out with a different model and we're not

322
00:12:34,220 --> 00:12:37,130
only that were also able to detect when

323
00:12:36,110 --> 00:12:39,410
the switch was swapped out with the

324
00:12:37,130 --> 00:12:41,990
identical model and in some cases were

325
00:12:39,410 --> 00:12:43,760
also were able to detect when a port was

326
00:12:41,990 --> 00:12:45,589
changed so somebody swaps from one port

327
00:12:43,760 --> 00:12:47,630
to another just by the way that the

328
00:12:45,589 --> 00:12:50,329
hardware has been constructed and all

329
00:12:47,630 --> 00:12:52,069
those defects I mentioned prior this is

330
00:12:50,329 --> 00:12:54,739
the case of the port swapping doesn't

331
00:12:52,069 --> 00:12:56,930
always work but in most cases we found

332
00:12:54,740 --> 00:13:01,029
that was changing a switch with another

333
00:12:56,930 --> 00:13:04,689
switch does work in terms of detection

334
00:13:01,029 --> 00:13:06,829
now from multiple intermediary switches

335
00:13:04,690 --> 00:13:11,000
we actually tried attacking our

336
00:13:06,829 --> 00:13:12,649
secretary and we were able to detect the

337
00:13:11,000 --> 00:13:13,970
text during the day and the night so

338
00:13:12,649 --> 00:13:15,890
doesn't matter how much traffic was

339
00:13:13,970 --> 00:13:18,050
going over the network we are still able

340
00:13:15,890 --> 00:13:18,499
to determine that there was a man in the

341
00:13:18,050 --> 00:13:22,309
middle

342
00:13:18,499 --> 00:13:24,649
play and of course we also tried for the

343
00:13:22,309 --> 00:13:26,478
long haul over entire week of regular

344
00:13:24,649 --> 00:13:28,069
traffic in our environment and we were

345
00:13:26,479 --> 00:13:30,529
still able to detect the attacks as well

346
00:13:28,069 --> 00:13:32,779
however it in order to limit the number

347
00:13:30,529 --> 00:13:35,359
of false positives we had to apply a

348
00:13:32,779 --> 00:13:37,339
averaging window of about 15 seconds and

349
00:13:35,359 --> 00:13:39,799
you can always adjust this in the tool

350
00:13:37,339 --> 00:13:42,439
that we've published you can allow a

351
00:13:39,799 --> 00:13:45,289
larger averaging window where lower the

352
00:13:42,439 --> 00:13:46,728
false except a false alarm rate but it

353
00:13:45,289 --> 00:13:48,319
would also increase the detection delay

354
00:13:46,729 --> 00:13:52,279
so you have to consider the trade-off

355
00:13:48,319 --> 00:13:53,748
there so we're at black and we also have

356
00:13:52,279 --> 00:13:54,889
to consider the possibility of

357
00:13:53,749 --> 00:13:57,619
something's going to attack our tool

358
00:13:54,889 --> 00:14:00,679
right so let's talk about how an

359
00:13:57,619 --> 00:14:03,199
adversary can mess with us so there are

360
00:14:00,679 --> 00:14:06,279
four different ways in an adversary Eve

361
00:14:03,199 --> 00:14:09,589
can try and bypass or evade our

362
00:14:06,279 --> 00:14:11,179
detection the first kind is a naive

363
00:14:09,589 --> 00:14:13,339
approach is just simply let's drop all

364
00:14:11,179 --> 00:14:15,079
the ICMP requests I see being sent and

365
00:14:13,339 --> 00:14:16,579
that's very easy to detect because

366
00:14:15,079 --> 00:14:19,848
obviously I won't see a signal from Bob

367
00:14:16,579 --> 00:14:23,209
the second approach is spoofing and

368
00:14:19,849 --> 00:14:26,539
spoofing Eve will respond on behalf of

369
00:14:23,209 --> 00:14:28,339
Bob but what will happen here is that

370
00:14:26,539 --> 00:14:31,939
now the impulse response will capture

371
00:14:28,339 --> 00:14:34,039
the fingerprint of Eve and not of Bob so

372
00:14:31,939 --> 00:14:36,469
we'll be able to detect that the third

373
00:14:34,039 --> 00:14:39,109
approach is to perform a replay attack

374
00:14:36,470 --> 00:14:40,909
where Eve has a pre-recorded probe and

375
00:14:39,109 --> 00:14:43,819
she just replays that probe whenever she

376
00:14:40,909 --> 00:14:46,819
sees me probing and the problem with

377
00:14:43,819 --> 00:14:48,889
that is that Eve will leave her

378
00:14:46,819 --> 00:14:51,559
fingerprint on top of that impulse

379
00:14:48,889 --> 00:14:53,479
response again but not only that our MLS

380
00:14:51,559 --> 00:14:58,429
sequence is different every single time

381
00:14:53,479 --> 00:15:00,379
we change it and lastly if Eve decides

382
00:14:58,429 --> 00:15:02,329
that she really wants to bypass us she

383
00:15:00,379 --> 00:15:05,089
can develop her own dedicated hardware

384
00:15:02,329 --> 00:15:07,848
specifically designed to bypass our

385
00:15:05,089 --> 00:15:09,919
probes which what we'll do is every

386
00:15:07,849 --> 00:15:11,299
single time it sees an ICMP requests

387
00:15:09,919 --> 00:15:13,519
you'll soon that maybe there's a whole

388
00:15:11,299 --> 00:15:15,649
burst of ICMP requests going to happen

389
00:15:13,519 --> 00:15:17,419
right afterwards so it'll immediately

390
00:15:15,649 --> 00:15:19,399
switch over to connecting copper to

391
00:15:17,419 --> 00:15:21,889
copper so that we won't be able to

392
00:15:19,399 --> 00:15:23,479
detect her but even in this case she

393
00:15:21,889 --> 00:15:25,669
still needs to see that first packet

394
00:15:23,479 --> 00:15:28,159
which will cause some sort of delay and

395
00:15:25,669 --> 00:15:29,989
or possibly corrupt the second packet

396
00:15:28,159 --> 00:15:32,380
after that so we'll be able to detect

397
00:15:29,989 --> 00:15:34,670
her in most cases

398
00:15:32,380 --> 00:15:36,680
now I mentioned we extracted three

399
00:15:34,670 --> 00:15:38,569
features why not just one feature from

400
00:15:36,680 --> 00:15:40,640
every probe and the reason being is that

401
00:15:38,570 --> 00:15:42,650
every every feature is strong against

402
00:15:40,640 --> 00:15:45,290
detecting one kind of adversarial attack

403
00:15:42,650 --> 00:15:46,760
against Vesper but weak against others

404
00:15:45,290 --> 00:15:50,209
so all together they provide a nice

405
00:15:46,760 --> 00:15:56,150
strong coverage for protecting at Vesper

406
00:15:50,210 --> 00:15:57,590
against these kinds of attacks so let's

407
00:15:56,150 --> 00:15:59,689
look at some of these results so for

408
00:15:57,590 --> 00:16:01,390
replay there was no problem in detecting

409
00:15:59,690 --> 00:16:04,040
the attack because the MLS sequence

410
00:16:01,390 --> 00:16:06,410
bypass in most cases were able to detect

411
00:16:04,040 --> 00:16:08,240
it and for spoofing we actually took a

412
00:16:06,410 --> 00:16:09,560
look at hundreds of different devices a

413
00:16:08,240 --> 00:16:12,170
different operating system to the

414
00:16:09,560 --> 00:16:14,119
hardware and we also try differentiating

415
00:16:12,170 --> 00:16:16,790
between identical devices that we had we

416
00:16:14,120 --> 00:16:18,620
took 48 raspberry PI's and we tried to

417
00:16:16,790 --> 00:16:19,969
see if we could differentiate between

418
00:16:18,620 --> 00:16:22,880
them see if they each have a different

419
00:16:19,970 --> 00:16:25,070
fingerprint and it turns out for the

420
00:16:22,880 --> 00:16:26,660
assorted devices we almost instantly

421
00:16:25,070 --> 00:16:28,760
were able to determine that there was a

422
00:16:26,660 --> 00:16:31,010
spoof attack happening and for the

423
00:16:28,760 --> 00:16:32,810
raspberry PI's after about five minutes

424
00:16:31,010 --> 00:16:39,350
of probing we were able to differentiate

425
00:16:32,810 --> 00:16:42,199
between about 75% of them so if anybody

426
00:16:39,350 --> 00:16:46,160
wants to download our tool please go

427
00:16:42,200 --> 00:16:48,650
ahead and visit github there I put up a

428
00:16:46,160 --> 00:16:51,620
light version of Vesper or Vesper

429
00:16:48,650 --> 00:16:55,280
version 1.0 this versions been

430
00:16:51,620 --> 00:16:57,260
implemented in Python with a C++ scythe

431
00:16:55,280 --> 00:16:59,390
on wrapper because we need to be able to

432
00:16:57,260 --> 00:17:01,880
send the packets at a very high rapid

433
00:16:59,390 --> 00:17:04,010
rate and also use nanosecond precision

434
00:17:01,880 --> 00:17:06,290
timing so we wanted all the actual

435
00:17:04,010 --> 00:17:07,849
process of the probing to happen low

436
00:17:06,290 --> 00:17:09,500
level but everything else is all

437
00:17:07,849 --> 00:17:11,030
implement in Python so you can take a

438
00:17:09,500 --> 00:17:12,560
look at it see how it's implement and I

439
00:17:11,030 --> 00:17:16,010
get an understanding what we're doing

440
00:17:12,560 --> 00:17:18,950
there and the tool will let you monitor

441
00:17:16,010 --> 00:17:21,920
multiple IPS and also plot the anomaly

442
00:17:18,950 --> 00:17:23,930
scores for these IPS over time and it

443
00:17:21,920 --> 00:17:26,510
currently it's only implemented for

444
00:17:23,930 --> 00:17:29,900
Linux but I do plan to port it also for

445
00:17:26,510 --> 00:17:33,320
Windows as well it's a light version

446
00:17:29,900 --> 00:17:35,780
because it has been tuned for for every

447
00:17:33,320 --> 00:17:38,710
single kind of device and the reason is

448
00:17:35,780 --> 00:17:41,510
because the center sometimes has these

449
00:17:38,710 --> 00:17:43,160
certain qualities in terms of the what

450
00:17:41,510 --> 00:17:44,970
the performance of how well it can time

451
00:17:43,160 --> 00:17:47,670
the precision and

452
00:17:44,970 --> 00:17:49,560
so although pretty much every device

453
00:17:47,670 --> 00:17:51,210
that we tested on you can detect all

454
00:17:49,560 --> 00:17:52,740
these men and middle attacks for the

455
00:17:51,210 --> 00:17:54,900
extreme cases for let's say

456
00:17:52,740 --> 00:17:56,580
swapping out a switch with an identical

457
00:17:54,900 --> 00:17:59,430
switch we need really really high

458
00:17:56,580 --> 00:18:01,020
precision timing those cases you need to

459
00:17:59,430 --> 00:18:04,560
fine-tune the parameters of our

460
00:18:01,020 --> 00:18:06,629
algorithm to get it just so so the live

461
00:18:04,560 --> 00:18:09,120
version you won't be able to detect

462
00:18:06,630 --> 00:18:12,180
identical switches you probably will be

463
00:18:09,120 --> 00:18:13,320
able to detect the case of a switch

464
00:18:12,180 --> 00:18:16,050
being swapped out with a different

465
00:18:13,320 --> 00:18:17,850
switch and in the live version we won't

466
00:18:16,050 --> 00:18:22,710
be prompting it in any case of a

467
00:18:17,850 --> 00:18:24,990
detected adversarial attack in terms of

468
00:18:22,710 --> 00:18:27,900
deployment there are few ways you can

469
00:18:24,990 --> 00:18:29,850
deploy a Vesper the classic case just

470
00:18:27,900 --> 00:18:31,860
put Vesper on an end host and have it

471
00:18:29,850 --> 00:18:35,189
probe every single IP address in your

472
00:18:31,860 --> 00:18:37,379
range inside your LAN and the second

473
00:18:35,190 --> 00:18:39,150
case is where you put Vesper on your

474
00:18:37,380 --> 00:18:41,520
router and in this case Vesper will be

475
00:18:39,150 --> 00:18:43,230
able to protect any outbound Internet

476
00:18:41,520 --> 00:18:46,650
traffic if you think of the internet

477
00:18:43,230 --> 00:18:48,060
cafes scenario where some man the local

478
00:18:46,650 --> 00:18:50,160
man the Middle's trying to intercept the

479
00:18:48,060 --> 00:18:52,520
Internet traffic and before it goes out

480
00:18:50,160 --> 00:18:56,400
bound and vice versa

481
00:18:52,520 --> 00:18:58,530
in terms of train time we found it takes

482
00:18:56,400 --> 00:19:00,210
about one minute of probing once

483
00:18:58,530 --> 00:19:02,520
ascending one probe per second but you

484
00:19:00,210 --> 00:19:04,650
can always adjust this to you know

485
00:19:02,520 --> 00:19:10,170
increase the probe raid or decrease the

486
00:19:04,650 --> 00:19:13,290
other pro-grade accordingly so in

487
00:19:10,170 --> 00:19:15,000
summary in a land we can detect met a

488
00:19:13,290 --> 00:19:17,940
man in middle by bouncing virtual

489
00:19:15,000 --> 00:19:19,440
signals off hosts the approach detects

490
00:19:17,940 --> 00:19:21,780
all land-based men middle attacks

491
00:19:19,440 --> 00:19:23,760
regardless of the forensic evidence or

492
00:19:21,780 --> 00:19:26,700
the attack implementation whether it be

493
00:19:23,760 --> 00:19:30,270
ARP spoofing DNS spoofing a network and

494
00:19:26,700 --> 00:19:32,100
so on and it's portable since it's

495
00:19:30,270 --> 00:19:34,530
implemented in the software level you

496
00:19:32,100 --> 00:19:36,870
can port it to pretty much any system

497
00:19:34,530 --> 00:19:39,180
and it's robust to adversarial attacks

498
00:19:36,870 --> 00:19:41,340
if anybody wants to see a little bit

499
00:19:39,180 --> 00:19:42,660
deeper and how all the math behind this

500
00:19:41,340 --> 00:19:44,399
and how this all works you can please

501
00:19:42,660 --> 00:19:47,100
take please take a look at our white

502
00:19:44,400 --> 00:19:49,230
paper which should be also up on the

503
00:19:47,100 --> 00:19:51,600
black on the black hats webpage and

504
00:19:49,230 --> 00:19:54,560
please visit our github page as well

505
00:19:51,600 --> 00:19:54,560
thank you

506
00:19:59,060 --> 00:20:17,639
anybody have a questions yep yeah

507
00:20:14,580 --> 00:20:20,220
so the question was how sensitive Alison

508
00:20:17,640 --> 00:20:22,500
Bob is to CPU load so for example if

509
00:20:20,220 --> 00:20:24,390
alice is running different applications

510
00:20:22,500 --> 00:20:25,710
at different times or Bob is let's say a

511
00:20:24,390 --> 00:20:27,060
server that has different loads of

512
00:20:25,710 --> 00:20:29,160
different hours of the day how does it

513
00:20:27,060 --> 00:20:31,740
affect the response so that's a very

514
00:20:29,160 --> 00:20:33,480
good question and actually what we found

515
00:20:31,740 --> 00:20:36,660
is that it does it's not so effective

516
00:20:33,480 --> 00:20:38,850
well it doesn't change the response so

517
00:20:36,660 --> 00:20:40,950
much for example when we test in the

518
00:20:38,850 --> 00:20:42,870
server network I'm not going to go back

519
00:20:40,950 --> 00:20:44,310
to the slide but you saw there sometimes

520
00:20:42,870 --> 00:20:46,290
there's noise right sometimes there are

521
00:20:44,310 --> 00:20:48,000
probes where fallout is anomalies by

522
00:20:46,290 --> 00:20:49,530
accident false alarms this time most of

523
00:20:48,000 --> 00:20:52,200
the times that's fine that's because of

524
00:20:49,530 --> 00:20:54,840
those loads so what we do is we perform

525
00:20:52,200 --> 00:20:56,970
an averaging window over let's say a few

526
00:20:54,840 --> 00:20:59,520
probes five probes six probes which is

527
00:20:56,970 --> 00:21:02,220
like a few seconds to get an you know an

528
00:20:59,520 --> 00:21:03,930
average kind of consensus of is there

529
00:21:02,220 --> 00:21:08,700
actually anomaly here or not and that

530
00:21:03,930 --> 00:21:15,650
basically mitigates that issue any other

531
00:21:08,700 --> 00:21:20,939
questions okay thank you very much

532
00:21:15,650 --> 00:21:20,939
[Applause]

