1
00:00:02,320 --> 00:00:03,520
hi

2
00:00:03,520 --> 00:00:06,560
do we have any iphone or macbook users

3
00:00:06,560 --> 00:00:08,480
listening

4
00:00:08,480 --> 00:00:11,519
what about samsung galaxy amazon echo

5
00:00:11,519 --> 00:00:14,639
or raspberry pi users

6
00:00:14,639 --> 00:00:16,320
now i can't see you as we're streaming

7
00:00:16,320 --> 00:00:18,640
virtually but i'm pretty sure a lot of

8
00:00:18,640 --> 00:00:22,400
virtual hands were just raised

9
00:00:22,640 --> 00:00:25,279
now what if i told you that anyone could

10
00:00:25,279 --> 00:00:25,680
break

11
00:00:25,680 --> 00:00:29,519
into your encrypted wi-fi communication

12
00:00:29,519 --> 00:00:32,079
when you connect to a wpa2 protected

13
00:00:32,079 --> 00:00:34,079
encrypted wi-fi network

14
00:00:34,079 --> 00:00:36,719
then even without tls on the application

15
00:00:36,719 --> 00:00:37,360
layer

16
00:00:37,360 --> 00:00:39,120
no one should be able to read the data

17
00:00:39,120 --> 00:00:40,399
exchanged between

18
00:00:40,399 --> 00:00:42,840
your device and the wireless access

19
00:00:42,840 --> 00:00:44,239
point

20
00:00:44,239 --> 00:00:46,079
but that was not the case because your

21
00:00:46,079 --> 00:00:48,160
devices and not only those that i

22
00:00:48,160 --> 00:00:49,120
mentioned

23
00:00:49,120 --> 00:00:53,120
had this serious wi-fi vulnerability

24
00:00:53,360 --> 00:00:55,680
that was the discovery of eset's iot

25
00:00:55,680 --> 00:00:56,879
research team

26
00:00:56,879 --> 00:00:58,000
that's dedicated to finding

27
00:00:58,000 --> 00:01:00,239
vulnerabilities in popular devices used

28
00:01:00,239 --> 00:01:01,120
at home

29
00:01:01,120 --> 00:01:04,319
and in the enterprise we feel this type

30
00:01:04,319 --> 00:01:06,880
of research is really important

31
00:01:06,880 --> 00:01:09,040
we participated on a forester report

32
00:01:09,040 --> 00:01:11,280
that went out earlier this year

33
00:01:11,280 --> 00:01:13,360
and the conclusions were that consumer

34
00:01:13,360 --> 00:01:15,040
iot devices

35
00:01:15,040 --> 00:01:17,040
are expanding the enterprise attack

36
00:01:17,040 --> 00:01:18,320
surface

37
00:01:18,320 --> 00:01:20,799
now couple that with the fact that most

38
00:01:20,799 --> 00:01:24,080
consumer iot devices can be exploited

39
00:01:24,080 --> 00:01:27,840
and it's a disaster waiting to happen

40
00:01:28,080 --> 00:01:30,880
our iot research team found flaws in a

41
00:01:30,880 --> 00:01:31,520
bunch of

42
00:01:31,520 --> 00:01:34,960
different devices in smart cameras that

43
00:01:34,960 --> 00:01:37,759
allowed an unauthorized adversary to see

44
00:01:37,759 --> 00:01:39,200
whatever that camera saw

45
00:01:39,200 --> 00:01:43,119
you don't want that right in amazon echo

46
00:01:43,119 --> 00:01:46,000
in insecure smart home hubs by various

47
00:01:46,000 --> 00:01:48,079
different manufacturers

48
00:01:48,079 --> 00:01:50,159
and smart home hubs are the gateway to

49
00:01:50,159 --> 00:01:51,119
your whole home

50
00:01:51,119 --> 00:01:53,280
or potentially your your company if

51
00:01:53,280 --> 00:01:56,560
you're using them in a small home office

52
00:01:56,560 --> 00:01:59,680
and the

53
00:01:59,680 --> 00:02:02,640
effect of that depends on what's

54
00:02:02,640 --> 00:02:04,399
connected to that smart home so you can

55
00:02:04,399 --> 00:02:06,640
use your imagination

56
00:02:06,640 --> 00:02:08,878
but crook is our most impactful

57
00:02:08,878 --> 00:02:10,720
discovery yet

58
00:02:10,720 --> 00:02:13,280
that's because it goes beyond iot in the

59
00:02:13,280 --> 00:02:15,840
sense of cool smart gadgets like your

60
00:02:15,840 --> 00:02:17,280
smart watch

61
00:02:17,280 --> 00:02:20,480
or your smart toaster crook affected

62
00:02:20,480 --> 00:02:22,959
billions of wi-fi capable devices

63
00:02:22,959 --> 00:02:25,440
including your laptops tablets and

64
00:02:25,440 --> 00:02:27,840
phones

65
00:02:28,560 --> 00:02:30,879
i'm robert lipowski he sets senior

66
00:02:30,879 --> 00:02:32,000
malware researcher

67
00:02:32,000 --> 00:02:34,000
and my co-speaker today is stefan

68
00:02:34,000 --> 00:02:35,440
svodenchik

69
00:02:35,440 --> 00:02:38,080
hi he said's head of experimental

70
00:02:38,080 --> 00:02:39,920
research and detection

71
00:02:39,920 --> 00:02:42,720
but credit also goes to milos cermak who

72
00:02:42,720 --> 00:02:44,160
was the lead researcher behind this

73
00:02:44,160 --> 00:02:45,120
discovery

74
00:02:45,120 --> 00:02:46,800
as well as issa researcher martin

75
00:02:46,800 --> 00:02:49,440
kalosnik

76
00:02:49,680 --> 00:02:53,120
this and other types of threat research

77
00:02:53,120 --> 00:02:55,680
are in eset's dna and it goes hand in

78
00:02:55,680 --> 00:02:57,680
hand with our focus for the past 30

79
00:02:57,680 --> 00:03:00,319
years on proactive detection

80
00:03:00,319 --> 00:03:02,319
so this is our agenda for today we'll

81
00:03:02,319 --> 00:03:03,440
talk about crook

82
00:03:03,440 --> 00:03:07,120
what it is and how it works its impact

83
00:03:07,120 --> 00:03:09,440
how it can affect you and the security

84
00:03:09,440 --> 00:03:11,200
of your devices

85
00:03:11,200 --> 00:03:14,319
and what you can do about it also

86
00:03:14,319 --> 00:03:16,159
for the first time we're going to

87
00:03:16,159 --> 00:03:17,680
disclose our latest findings into

88
00:03:17,680 --> 00:03:18,959
vulnerabilities which

89
00:03:18,959 --> 00:03:23,680
aren't strictly crook but are similar

90
00:03:24,560 --> 00:03:27,200
now before we get into the specifics of

91
00:03:27,200 --> 00:03:29,200
the vulnerability and its impact

92
00:03:29,200 --> 00:03:31,280
let's quickly go over some wi-fi

93
00:03:31,280 --> 00:03:33,120
security basics which are needed to

94
00:03:33,120 --> 00:03:36,480
understand how crook works

95
00:03:36,799 --> 00:03:39,360
first i'm going to talk about wi-fi

96
00:03:39,360 --> 00:03:42,000
associations and disassociations

97
00:03:42,000 --> 00:03:45,120
and the four-way handshake so

98
00:03:45,120 --> 00:03:47,040
the first thing that happens when you

99
00:03:47,040 --> 00:03:49,840
connect your device to an access point

100
00:03:49,840 --> 00:03:52,239
is called the association basically a

101
00:03:52,239 --> 00:03:53,040
connection

102
00:03:53,040 --> 00:03:56,400
for our purpose when talking about crook

103
00:03:56,400 --> 00:03:58,159
we're mostly going to be interested in

104
00:03:58,159 --> 00:04:00,720
the reverse disassociation

105
00:04:00,720 --> 00:04:02,400
and these happen for a multitude of

106
00:04:02,400 --> 00:04:04,159
reasons they can

107
00:04:04,159 --> 00:04:05,920
actually occur naturally for example

108
00:04:05,920 --> 00:04:07,360
when a client

109
00:04:07,360 --> 00:04:10,159
roams from one wi-fi station to another

110
00:04:10,159 --> 00:04:10,560
and

111
00:04:10,560 --> 00:04:13,599
then we're talking about a reassociation

112
00:04:13,599 --> 00:04:15,840
or they happen manually simply when you

113
00:04:15,840 --> 00:04:17,519
turn off the wi-fi connection of your

114
00:04:17,519 --> 00:04:19,440
device

115
00:04:19,440 --> 00:04:21,000
all of these associations and

116
00:04:21,000 --> 00:04:22,720
disassociations are governed by

117
00:04:22,720 --> 00:04:23,680
so-called

118
00:04:23,680 --> 00:04:26,400
management frames and an important thing

119
00:04:26,400 --> 00:04:27,280
to note

120
00:04:27,280 --> 00:04:30,160
these are most often unauthenticated and

121
00:04:30,160 --> 00:04:31,440
unencrypted

122
00:04:31,440 --> 00:04:34,160
and also can be triggered manually what

123
00:04:34,160 --> 00:04:36,800
could go wrong

124
00:04:37,840 --> 00:04:40,240
the four-way handshake establishes

125
00:04:40,240 --> 00:04:40,960
secure

126
00:04:40,960 --> 00:04:44,000
wireless communication now without going

127
00:04:44,000 --> 00:04:46,000
into the technical details

128
00:04:46,000 --> 00:04:48,320
or the group key used for multicast and

129
00:04:48,320 --> 00:04:49,520
broadcast

130
00:04:49,520 --> 00:04:51,280
i'll just mention that the handshake

131
00:04:51,280 --> 00:04:52,720
serves two main purposes

132
00:04:52,720 --> 00:04:55,680
first it's authentication to ensure that

133
00:04:55,680 --> 00:04:56,639
the client is

134
00:04:56,639 --> 00:04:59,440
authorized to connect to the wi-fi for

135
00:04:59,440 --> 00:05:01,440
example knows the wi-fi password

136
00:05:01,440 --> 00:05:03,440
and secondly for confidentiality and

137
00:05:03,440 --> 00:05:04,960
integrity

138
00:05:04,960 --> 00:05:07,280
so a unique per session encryption key

139
00:05:07,280 --> 00:05:08,720
is constructed

140
00:05:08,720 --> 00:05:11,199
it's called the pairwise transient key

141
00:05:11,199 --> 00:05:13,199
the ptk

142
00:05:13,199 --> 00:05:16,400
and a part of that ptk is the tk

143
00:05:16,400 --> 00:05:18,880
which stands for temporal key and this

144
00:05:18,880 --> 00:05:20,639
is used to encrypt unicast data

145
00:05:20,639 --> 00:05:22,479
exchanged between the client

146
00:05:22,479 --> 00:05:25,600
and the access point

147
00:05:25,600 --> 00:05:27,360
so let's take a closer look at how that

148
00:05:27,360 --> 00:05:28,800
tk is used

149
00:05:28,800 --> 00:05:32,880
how encryption is done in wpa2 with ccmp

150
00:05:32,880 --> 00:05:34,639
which is the most ubiquitous standard

151
00:05:34,639 --> 00:05:35,840
today

152
00:05:35,840 --> 00:05:37,759
now i'm going to simplify the scheme not

153
00:05:37,759 --> 00:05:39,360
going into the details of

154
00:05:39,360 --> 00:05:42,800
counter mode and cbc mac uh here we have

155
00:05:42,800 --> 00:05:44,400
some plain text data

156
00:05:44,400 --> 00:05:47,280
that we are going to transmit and needs

157
00:05:47,280 --> 00:05:48,400
to be encrypted

158
00:05:48,400 --> 00:05:50,320
the cipher being used in this scheme is

159
00:05:50,320 --> 00:05:52,479
aes so we have that

160
00:05:52,479 --> 00:05:55,120
session key the tk which was established

161
00:05:55,120 --> 00:05:57,039
in the four-way handshake

162
00:05:57,039 --> 00:06:00,639
we have a so-called nonce a number which

163
00:06:00,639 --> 00:06:01,759
is only supposed to be

164
00:06:01,759 --> 00:06:04,160
used once this also includes the packet

165
00:06:04,160 --> 00:06:05,280
number

166
00:06:05,280 --> 00:06:06,960
these are used to generate the key

167
00:06:06,960 --> 00:06:08,720
stream that key stream

168
00:06:08,720 --> 00:06:11,520
is then xor with the plaintext data to

169
00:06:11,520 --> 00:06:12,080
get

170
00:06:12,080 --> 00:06:14,400
the encrypted data then along with the

171
00:06:14,400 --> 00:06:16,479
packet header this is then transmitted

172
00:06:16,479 --> 00:06:17,919
into the air

173
00:06:17,919 --> 00:06:20,000
and the decryption is the reverse and

174
00:06:20,000 --> 00:06:21,520
shiva will talk about

175
00:06:21,520 --> 00:06:24,560
that in his part

176
00:06:24,560 --> 00:06:26,880
so let now that we covered the basics

177
00:06:26,880 --> 00:06:28,319
let's get to the main part

178
00:06:28,319 --> 00:06:32,639
what is crook aka cve 2019

179
00:06:32,639 --> 00:06:36,080
15 15126

180
00:06:39,440 --> 00:06:41,440
this is a typical wi-fi connection

181
00:06:41,440 --> 00:06:42,560
between a device

182
00:06:42,560 --> 00:06:45,680
and an access point secured by the wpa2

183
00:06:45,680 --> 00:06:47,199
protocol

184
00:06:47,199 --> 00:06:49,120
the communication is encrypted using

185
00:06:49,120 --> 00:06:51,360
that tk the pairwise session key that

186
00:06:51,360 --> 00:06:53,520
was established in the handshake

187
00:06:53,520 --> 00:06:56,000
so even if someone else captures those

188
00:06:56,000 --> 00:06:56,960
wireless

189
00:06:56,960 --> 00:06:59,440
network packets flying through the air

190
00:06:59,440 --> 00:07:01,120
they wouldn't be able to decrypt them

191
00:07:01,120 --> 00:07:02,160
and read the content

192
00:07:02,160 --> 00:07:05,440
right well the crook vulnerability

193
00:07:05,440 --> 00:07:08,000
breaks that

194
00:07:08,000 --> 00:07:09,680
here's an example of how an attacker

195
00:07:09,680 --> 00:07:12,160
could exploit the bug

196
00:07:12,160 --> 00:07:15,039
they could transmit a crafted

197
00:07:15,039 --> 00:07:16,000
disassociation

198
00:07:16,000 --> 00:07:18,000
frame addressed to the victim the victim

199
00:07:18,000 --> 00:07:19,599
device accepts it

200
00:07:19,599 --> 00:07:22,319
and disassociates and data transmission

201
00:07:22,319 --> 00:07:24,400
stops

202
00:07:24,400 --> 00:07:26,560
up to this point everything happened as

203
00:07:26,560 --> 00:07:28,720
it should have

204
00:07:28,720 --> 00:07:31,840
but after that disassociation one last

205
00:07:31,840 --> 00:07:34,240
fragment of data is transmitted

206
00:07:34,240 --> 00:07:36,240
only this time as you can see it's

207
00:07:36,240 --> 00:07:37,919
encrypted with an all zero

208
00:07:37,919 --> 00:07:41,360
trans uh transient key and the attacker

209
00:07:41,360 --> 00:07:42,560
can intercept it

210
00:07:42,560 --> 00:07:46,080
and easily decrypt the content

211
00:07:46,080 --> 00:07:48,879
so how was all that possible well to

212
00:07:48,879 --> 00:07:49,599
answer that

213
00:07:49,599 --> 00:07:52,639
let's rewind and

214
00:07:52,639 --> 00:07:54,720
take a closer look under the hood of

215
00:07:54,720 --> 00:07:58,720
that vulnerable device

216
00:07:58,720 --> 00:08:01,599
spoiler alert this is the culprit behind

217
00:08:01,599 --> 00:08:02,240
crook

218
00:08:02,240 --> 00:08:05,199
a full mac wi-fi chip by the way this

219
00:08:05,199 --> 00:08:08,240
particular one is from an amazon kindle

220
00:08:08,240 --> 00:08:10,479
and it's only an eighth of an inch wide

221
00:08:10,479 --> 00:08:12,560
so taking this photograph was

222
00:08:12,560 --> 00:08:15,599
took a bit of an effort stereo tell us

223
00:08:15,599 --> 00:08:18,639
more about these chips

224
00:08:25,759 --> 00:08:29,039
so uh every mobile device your phone

225
00:08:29,039 --> 00:08:31,199
your laptop your smart watch

226
00:08:31,199 --> 00:08:32,880
which doesn't stop reminding you that

227
00:08:32,880 --> 00:08:34,399
you're gonna probably die tomorrow if

228
00:08:34,399 --> 00:08:37,039
you don't make those 10 000 steps today

229
00:08:37,039 --> 00:08:38,958
and even your intelligent vacuum cleaner

230
00:08:38,958 --> 00:08:40,719
if there ever be intelligent enough to

231
00:08:40,719 --> 00:08:42,320
vacuum properly

232
00:08:42,320 --> 00:08:44,959
everything has its own wi-fi chip which

233
00:08:44,959 --> 00:08:47,519
handles all the wi-fi communication

234
00:08:47,519 --> 00:08:49,120
in all reasons mobile device is a full

235
00:08:49,120 --> 00:08:51,680
mag chip tend to be the most used kind

236
00:08:51,680 --> 00:08:53,279
of chips in the market

237
00:08:53,279 --> 00:08:56,080
full max offer better performance in

238
00:08:56,080 --> 00:08:57,519
terms of power consumption

239
00:08:57,519 --> 00:08:59,360
and speed and they are easier to

240
00:08:59,360 --> 00:09:02,720
integrate in complete products

241
00:09:02,720 --> 00:09:05,200
this is a block diagram of one of them

242
00:09:05,200 --> 00:09:07,360
as you can see it's fairly complicated

243
00:09:07,360 --> 00:09:09,040
this one also includes the bluetooth

244
00:09:09,040 --> 00:09:11,680
part but we won't bother with it

245
00:09:11,680 --> 00:09:13,360
we'll look only at the small part of it

246
00:09:13,360 --> 00:09:14,880
which manages the whole wifi

247
00:09:14,880 --> 00:09:17,360
encryption

248
00:09:18,240 --> 00:09:22,000
and this

249
00:09:22,000 --> 00:09:24,399
where the magic happens this is a mac

250
00:09:24,399 --> 00:09:26,160
layer short for media access control

251
00:09:26,160 --> 00:09:27,120
architecture

252
00:09:27,120 --> 00:09:28,560
these are the small parts which handle

253
00:09:28,560 --> 00:09:30,320
all the communication encryption

254
00:09:30,320 --> 00:09:32,240
buffers are used to store order

255
00:09:32,240 --> 00:09:33,360
communication frames

256
00:09:33,360 --> 00:09:34,880
for the time they are being encrypted or

257
00:09:34,880 --> 00:09:37,360
decrypted the transmit engine

258
00:09:37,360 --> 00:09:39,519
constitutes the transmit data to and

259
00:09:39,519 --> 00:09:40,959
from the transmit buffer

260
00:09:40,959 --> 00:09:42,480
receive engine does the same for the

261
00:09:42,480 --> 00:09:44,000
receive buffer

262
00:09:44,000 --> 00:09:45,760
the web engine encapsulates all the

263
00:09:45,760 --> 00:09:47,519
hardware accelerators to perform the

264
00:09:47,519 --> 00:09:48,240
encryption

265
00:09:48,240 --> 00:09:50,800
and encryption it implements all cypher

266
00:09:50,800 --> 00:09:52,959
algorithms

267
00:09:52,959 --> 00:09:57,920
s wep wpa wpa2

268
00:09:57,920 --> 00:10:00,480
psm is a microcontroller that is highly

269
00:10:00,480 --> 00:10:01,360
optimized

270
00:10:01,360 --> 00:10:03,680
for flow control operation it's also it

271
00:10:03,680 --> 00:10:05,360
also determines

272
00:10:05,360 --> 00:10:07,279
based on the frame type and association

273
00:10:07,279 --> 00:10:09,120
information the appropriate cipher

274
00:10:09,120 --> 00:10:12,240
algorithm to be used

275
00:10:13,040 --> 00:10:15,440
so how the encryption goes as robert

276
00:10:15,440 --> 00:10:16,880
explained before

277
00:10:16,880 --> 00:10:18,480
every time a device is connected or

278
00:10:18,480 --> 00:10:20,640
reconnected to an access point

279
00:10:20,640 --> 00:10:23,120
after authentication and association a

280
00:10:23,120 --> 00:10:25,200
session encryption key is generated

281
00:10:25,200 --> 00:10:26,560
which is then used for all the

282
00:10:26,560 --> 00:10:32,079
encryption until the session ends

283
00:10:32,079 --> 00:10:36,320
transit buffer is being

284
00:10:36,320 --> 00:10:38,320
filled with data frames which need to be

285
00:10:38,320 --> 00:10:39,440
send out

286
00:10:39,440 --> 00:10:42,720
web engine encrypts the data per frame

287
00:10:42,720 --> 00:10:44,560
with the generated encryption key and

288
00:10:44,560 --> 00:10:48,160
the transit engine sends them away

289
00:10:49,120 --> 00:10:50,800
so what happens after the association

290
00:10:50,800 --> 00:10:52,399
occurs

291
00:10:52,399 --> 00:10:54,079
the disassociation frame comes through

292
00:10:54,079 --> 00:10:56,320
the receive engine to receive buffer

293
00:10:56,320 --> 00:10:58,399
state machine evaluates the frame and

294
00:10:58,399 --> 00:10:59,440
sends the information

295
00:10:59,440 --> 00:11:02,560
up the ladder there the information is

296
00:11:02,560 --> 00:11:03,519
interpreted as

297
00:11:03,519 --> 00:11:05,839
okay we are about to disconnect let's

298
00:11:05,839 --> 00:11:08,160
drop all the encryption keys

299
00:11:08,160 --> 00:11:10,160
a command to drop generated session

300
00:11:10,160 --> 00:11:12,720
encryption key is then send

301
00:11:12,720 --> 00:11:14,399
since in computing you don't erase

302
00:11:14,399 --> 00:11:15,760
anything properly

303
00:11:15,760 --> 00:11:18,800
you just replace it with zeros decision

304
00:11:18,800 --> 00:11:20,959
encryption key is after dissociation

305
00:11:20,959 --> 00:11:24,239
overwritten by zeros

306
00:11:24,800 --> 00:11:26,839
here comes the term all zero encryption

307
00:11:26,839 --> 00:11:29,440
key this is expected behavior

308
00:11:29,440 --> 00:11:31,440
as no further data is supposed to be

309
00:11:31,440 --> 00:11:33,600
transmitted after the association

310
00:11:33,600 --> 00:11:35,200
and it stays that way until a new

311
00:11:35,200 --> 00:11:36,720
session is generated

312
00:11:36,720 --> 00:11:38,880
after the new reassociation and the new

313
00:11:38,880 --> 00:11:40,240
four-way handshake

314
00:11:40,240 --> 00:11:43,279
but until that happens the transmit

315
00:11:43,279 --> 00:11:45,839
buffer still may contain data the

316
00:11:45,839 --> 00:11:47,760
transmit engine needs to send them away

317
00:11:47,760 --> 00:11:51,680
and continues to do so as usual

318
00:11:51,680 --> 00:11:53,440
so all data which were left in that

319
00:11:53,440 --> 00:11:55,040
buffer after dissociation

320
00:11:55,040 --> 00:11:57,839
occurred are now sent away encrypted

321
00:11:57,839 --> 00:12:01,600
with an all zero encryption key

322
00:12:05,200 --> 00:12:07,680
so when you can grab these frames you

323
00:12:07,680 --> 00:12:09,279
can easily decrypt them into plugin text

324
00:12:09,279 --> 00:12:10,240
data

325
00:12:10,240 --> 00:12:13,680
you know the encryption algorithm

326
00:12:13,760 --> 00:12:16,959
you know the encryption key

327
00:12:17,120 --> 00:12:20,320
you get the nouns from the header

328
00:12:20,320 --> 00:12:25,839
and you can easily decrypt them then

329
00:12:26,480 --> 00:12:28,560
the question is how do you identify

330
00:12:28,560 --> 00:12:30,560
these particular frames in the air

331
00:12:30,560 --> 00:12:33,920
the answer is simple you don't you just

332
00:12:33,920 --> 00:12:35,600
try to decrypt everything you see with

333
00:12:35,600 --> 00:12:36,720
an all zero key

334
00:12:36,720 --> 00:12:38,800
and those frames which after decryption

335
00:12:38,800 --> 00:12:40,480
match binary pattern of the plaintext

336
00:12:40,480 --> 00:12:41,600
data frames

337
00:12:41,600 --> 00:12:44,720
which is something like aaa03

338
00:12:44,720 --> 00:12:46,639
those are the ones which are formerly

339
00:12:46,639 --> 00:12:49,839
encrypted within all zero key

340
00:12:49,839 --> 00:12:51,920
one can ask how much data can you

341
00:12:51,920 --> 00:12:54,480
decrypt after one disassociation

342
00:12:54,480 --> 00:12:56,639
well the transit buffer has a memory

343
00:12:56,639 --> 00:12:58,480
space of 32 kilobytes

344
00:12:58,480 --> 00:13:00,800
for comparison one kilobyte is a couple

345
00:13:00,800 --> 00:13:02,480
of hundred words of plain text

346
00:13:02,480 --> 00:13:06,160
so 32 kilobytes will be about 10 to 20

347
00:13:06,160 --> 00:13:08,639
000 words which is quite a few pages of

348
00:13:08,639 --> 00:13:10,079
a book

349
00:13:10,079 --> 00:13:13,120
but you must understand that the buffer

350
00:13:13,120 --> 00:13:15,200
isn't always full when the dissociation

351
00:13:15,200 --> 00:13:16,000
happens

352
00:13:16,000 --> 00:13:20,800
it really depends on the timing

353
00:13:20,800 --> 00:13:22,399
so what can an attacker do with this

354
00:13:22,399 --> 00:13:24,720
vulnerability well there are two ways to

355
00:13:24,720 --> 00:13:26,399
an adversary can eavesdrop on these

356
00:13:26,399 --> 00:13:30,560
frames a passive one and an active one

357
00:13:30,560 --> 00:13:33,360
let's begin with the passive one as was

358
00:13:33,360 --> 00:13:34,720
already mentioned

359
00:13:34,720 --> 00:13:36,880
the disassociation occurs naturally

360
00:13:36,880 --> 00:13:38,320
moving around

361
00:13:38,320 --> 00:13:40,320
changing access points low signal

362
00:13:40,320 --> 00:13:41,600
strength

363
00:13:41,600 --> 00:13:44,720
or just due to single interference most

364
00:13:44,720 --> 00:13:46,320
of the time you won't even notice

365
00:13:46,320 --> 00:13:47,839
because of the quick subsequent

366
00:13:47,839 --> 00:13:49,440
reassociation

367
00:13:49,440 --> 00:13:51,600
so let's do the math since this issue

368
00:13:51,600 --> 00:13:53,440
concerns many wi-fi chips

369
00:13:53,440 --> 00:13:55,360
somewhere where there are many of these

370
00:13:55,360 --> 00:13:57,199
mobile devices in one place

371
00:13:57,199 --> 00:13:59,680
like a workspace for example there

372
00:13:59,680 --> 00:14:01,600
should be a lot of them vulnerable

373
00:14:01,600 --> 00:14:03,440
combining with the fact that natural

374
00:14:03,440 --> 00:14:05,680
dissociation occurs quite often

375
00:14:05,680 --> 00:14:07,600
there should be all zero cryptotrains

376
00:14:07,600 --> 00:14:09,360
just flying around

377
00:14:09,360 --> 00:14:14,000
and yes they are so let's grab them

378
00:14:14,480 --> 00:14:16,240
so what do you think have we tried to

379
00:14:16,240 --> 00:14:18,480
eavesdrow at our workplace

380
00:14:18,480 --> 00:14:21,199
of course we did because you know

381
00:14:21,199 --> 00:14:22,959
sticking your own into things of people

382
00:14:22,959 --> 00:14:26,079
you know is always interesting

383
00:14:26,079 --> 00:14:29,040
and what did you saw first we saw all

384
00:14:29,040 --> 00:14:30,720
vulnerable devices and access points to

385
00:14:30,720 --> 00:14:32,480
which they are connecting

386
00:14:32,480 --> 00:14:35,120
but then after decryption we saw what

387
00:14:35,120 --> 00:14:37,360
kind of data are actually exposed

388
00:14:37,360 --> 00:14:40,720
dns requests tcp http requests

389
00:14:40,720 --> 00:14:43,279
website that people owed you name it

390
00:14:43,279 --> 00:14:44,720
actually everything

391
00:14:44,720 --> 00:14:47,600
that wasn't tls encrypted because that's

392
00:14:47,600 --> 00:14:49,360
another layer of encryption on the ip

393
00:14:49,360 --> 00:14:51,680
level

394
00:14:52,800 --> 00:14:55,920
now when we identified all vulnerable

395
00:14:55,920 --> 00:14:56,720
devices

396
00:14:56,720 --> 00:14:59,519
we can get them to drop even more than

397
00:14:59,519 --> 00:15:02,079
they would normally give up for free

398
00:15:02,079 --> 00:15:04,480
how i can trigger this association

399
00:15:04,480 --> 00:15:05,440
between them

400
00:15:05,440 --> 00:15:12,399
and their access points wherever i want

401
00:15:12,399 --> 00:15:14,959
and again

402
00:15:16,800 --> 00:15:19,359
and again

403
00:15:22,720 --> 00:15:25,360
and just like captain america i can do

404
00:15:25,360 --> 00:15:28,160
this all day

405
00:15:28,160 --> 00:15:29,440
and this is the most dangerous thing

406
00:15:29,440 --> 00:15:31,440
about this vulnerability because now you

407
00:15:31,440 --> 00:15:31,920
can gather

408
00:15:31,920 --> 00:15:34,000
these partial information let me get one

409
00:15:34,000 --> 00:15:35,920
thing straight the nature of the data

410
00:15:35,920 --> 00:15:37,759
frames which are eventually only a zero

411
00:15:37,759 --> 00:15:38,560
key

412
00:15:38,560 --> 00:15:40,480
encrypted and can be eventually

413
00:15:40,480 --> 00:15:41,759
decrypted to plaintext

414
00:15:41,759 --> 00:15:44,800
is quite random it really depends on the

415
00:15:44,800 --> 00:15:46,800
timing of the dissociation

416
00:15:46,800 --> 00:15:49,600
but if you can now invoke it over and

417
00:15:49,600 --> 00:15:50,480
over again

418
00:15:50,480 --> 00:15:52,880
the vulnerability will manifest will

419
00:15:52,880 --> 00:15:54,000
manifest itself

420
00:15:54,000 --> 00:15:57,120
over and over again and now you're in

421
00:15:57,120 --> 00:15:58,880
the information gathering business

422
00:15:58,880 --> 00:16:01,040
just waiting until something interesting

423
00:16:01,040 --> 00:16:02,079
pops out

424
00:16:02,079 --> 00:16:09,839
and it always does

425
00:16:14,560 --> 00:16:17,120
as much as i enjoyed those animations

426
00:16:17,120 --> 00:16:19,120
let's demonstrate that this stuff really

427
00:16:19,120 --> 00:16:20,399
works

428
00:16:20,399 --> 00:16:22,959
so we prepared a little demo in our lab

429
00:16:22,959 --> 00:16:25,279
so you can see the attack in action

430
00:16:25,279 --> 00:16:27,199
we're going to use a wireless adapter in

431
00:16:27,199 --> 00:16:29,120
a so-called monitor mode

432
00:16:29,120 --> 00:16:30,720
now some of you that played around with

433
00:16:30,720 --> 00:16:32,240
wireshark

434
00:16:32,240 --> 00:16:34,560
are surely familiar with promiscuous

435
00:16:34,560 --> 00:16:36,480
mode which is also used for packet

436
00:16:36,480 --> 00:16:37,440
sniffing

437
00:16:37,440 --> 00:16:39,680
monitor mode is similar but it allows

438
00:16:39,680 --> 00:16:41,920
packets to be captured without having to

439
00:16:41,920 --> 00:16:44,720
be associated with an access point

440
00:16:44,720 --> 00:16:47,279
in other words an attacker can carry out

441
00:16:47,279 --> 00:16:49,440
this attack without knowing the wi-fi

442
00:16:49,440 --> 00:16:50,639
password

443
00:16:50,639 --> 00:16:54,800
okay so this is our would be victim

444
00:16:54,800 --> 00:16:57,600
uses his phone is connected to our work

445
00:16:57,600 --> 00:16:58,160
wi-fi

446
00:16:58,160 --> 00:17:01,440
see work wi-fi and

447
00:17:01,440 --> 00:17:03,440
they're gonna check on their smart home

448
00:17:03,440 --> 00:17:04,880
so

449
00:17:04,880 --> 00:17:08,000
connect to the smart home

450
00:17:08,000 --> 00:17:12,400
command interface enters

451
00:17:12,400 --> 00:17:15,439
his credentials

452
00:17:17,039 --> 00:17:20,640
clicks on login and if those credentials

453
00:17:20,640 --> 00:17:23,439
were correct which they were

454
00:17:23,439 --> 00:17:26,480
in a moment he's connected

455
00:17:26,480 --> 00:17:30,640
and can check up on his smart home

456
00:17:30,640 --> 00:17:34,320
see how his nuclear power plant

457
00:17:34,320 --> 00:17:37,360
is doing turn it on off

458
00:17:37,360 --> 00:17:39,520
whatever now let's switch over to the

459
00:17:39,520 --> 00:17:40,480
perspective

460
00:17:40,480 --> 00:17:43,919
of the attacker so

461
00:17:43,919 --> 00:17:47,440
the attacker has prepared his script for

462
00:17:47,440 --> 00:17:48,880
invoking crook

463
00:17:48,880 --> 00:17:51,440
uh the parameters there are the victim's

464
00:17:51,440 --> 00:17:52,480
mac address which

465
00:17:52,480 --> 00:17:55,440
was uh would have to be known in a

466
00:17:55,440 --> 00:17:57,280
different way and also

467
00:17:57,280 --> 00:18:00,320
that wi-fi that targeted wi-fi ssid

468
00:18:00,320 --> 00:18:02,320
and know that as i mentioned earlier

469
00:18:02,320 --> 00:18:04,880
doesn't need to know the wi-fi password

470
00:18:04,880 --> 00:18:08,400
uh as you can see uh some packets

471
00:18:08,400 --> 00:18:11,120
were captured and we're letting the

472
00:18:11,120 --> 00:18:11,840
script run

473
00:18:11,840 --> 00:18:15,039
so it's running continuously so uh we're

474
00:18:15,039 --> 00:18:16,880
continuing to

475
00:18:16,880 --> 00:18:20,559
capture more packets now let's go back

476
00:18:20,559 --> 00:18:23,200
and see what happened over there so in

477
00:18:23,200 --> 00:18:24,080
the beginning

478
00:18:24,080 --> 00:18:26,880
we sent out that the script sent out

479
00:18:26,880 --> 00:18:29,840
that disassociation frame to the victim

480
00:18:29,840 --> 00:18:32,080
uh now we can see that the victim

481
00:18:32,080 --> 00:18:33,840
reconnected to that wi-fi so the

482
00:18:33,840 --> 00:18:36,000
disassociation frame was accepted and

483
00:18:36,000 --> 00:18:38,559
and it worked and now we figured that

484
00:18:38,559 --> 00:18:40,160
the device is vulnerable

485
00:18:40,160 --> 00:18:42,320
because we were able to successfully

486
00:18:42,320 --> 00:18:43,520
decrypt

487
00:18:43,520 --> 00:18:45,679
uh this packet as shitevo mentioned this

488
00:18:45,679 --> 00:18:46,559
is that

489
00:18:46,559 --> 00:18:50,160
uh magic identifier aaaa03

490
00:18:50,160 --> 00:18:51,919
and now we can see we can read it in

491
00:18:51,919 --> 00:18:54,480
plain text that we were able to

492
00:18:54,480 --> 00:18:58,720
uh with an all zero key

493
00:18:58,720 --> 00:19:01,039
this packet now he's rolled around

494
00:19:01,039 --> 00:19:03,200
there's another packet

495
00:19:03,200 --> 00:19:05,039
we can choose whichever one is

496
00:19:05,039 --> 00:19:06,240
interesting

497
00:19:06,240 --> 00:19:09,600
is useful for our needs and more packets

498
00:19:09,600 --> 00:19:13,520
continue coming in so let's select

499
00:19:13,520 --> 00:19:18,160
this one this http packet

500
00:19:18,480 --> 00:19:22,240
wireshark helps us

501
00:19:22,240 --> 00:19:25,440
parse some of those fields over there so

502
00:19:25,440 --> 00:19:26,000
let's

503
00:19:26,000 --> 00:19:27,840
let's select that session id so this

504
00:19:27,840 --> 00:19:29,360
particular one contains

505
00:19:29,360 --> 00:19:31,679
the session id copy to the clipboard

506
00:19:31,679 --> 00:19:34,559
switch over to our browser

507
00:19:34,559 --> 00:19:38,240
and then the attacker is able without

508
00:19:38,240 --> 00:19:39,520
knowing the password

509
00:19:39,520 --> 00:19:41,200
to the smart home interface without

510
00:19:41,200 --> 00:19:44,240
knowing password to the wi-fi

511
00:19:44,240 --> 00:19:47,520
able to connect to that interface

512
00:19:47,520 --> 00:19:52,000
and do whatever malicious mischief

513
00:19:52,000 --> 00:19:54,240
and we will be releasing that testing

514
00:19:54,240 --> 00:19:55,840
script that we used

515
00:19:55,840 --> 00:20:00,399
in the demo on our github after the

516
00:20:04,840 --> 00:20:07,840
presentation

517
00:20:07,919 --> 00:20:10,559
uh but that's not all here's a different

518
00:20:10,559 --> 00:20:11,520
scenario

519
00:20:11,520 --> 00:20:13,360
where it's the access point that is

520
00:20:13,360 --> 00:20:16,559
susceptible to this vulnerability

521
00:20:16,559 --> 00:20:19,679
similarly to the previous example an

522
00:20:19,679 --> 00:20:21,520
attacker would be able to intercept and

523
00:20:21,520 --> 00:20:23,200
encrypt private data that was being

524
00:20:23,200 --> 00:20:24,720
addressed from the access point to your

525
00:20:24,720 --> 00:20:25,840
decline device

526
00:20:25,840 --> 00:20:27,360
even if your client device wasn't

527
00:20:27,360 --> 00:20:29,039
vulnerable itself

528
00:20:29,039 --> 00:20:31,280
he can still get information about your

529
00:20:31,280 --> 00:20:32,080
connection

530
00:20:32,080 --> 00:20:34,080
directly from the access point the

531
00:20:34,080 --> 00:20:36,000
difference is only

532
00:20:36,000 --> 00:20:38,880
that he will get to see only responses

533
00:20:38,880 --> 00:20:39,520
now

534
00:20:39,520 --> 00:20:42,559
dns and http responses for example or a

535
00:20:42,559 --> 00:20:43,760
document being sent

536
00:20:43,760 --> 00:20:47,039
to wi-fi printer the fact that wireless

537
00:20:47,039 --> 00:20:49,120
routers and access points are also

538
00:20:49,120 --> 00:20:51,039
affected by this vulnerability

539
00:20:51,039 --> 00:20:53,039
greatly increases the scope of the

540
00:20:53,039 --> 00:20:54,960
attack

541
00:20:54,960 --> 00:20:57,120
and it's also more difficult to protect

542
00:20:57,120 --> 00:20:58,960
protect against it

543
00:20:58,960 --> 00:21:01,280
since the security of access points is

544
00:21:01,280 --> 00:21:02,000
typically beyond

545
00:21:02,000 --> 00:21:05,200
your control a solution to this is to

546
00:21:05,200 --> 00:21:07,000
treat even

547
00:21:07,000 --> 00:21:10,480
wpa2 protected networks as insecure

548
00:21:10,480 --> 00:21:12,960
and make sure you always use encryption

549
00:21:12,960 --> 00:21:14,240
on the ip level

550
00:21:14,240 --> 00:21:17,840
tls or vpn

551
00:21:28,080 --> 00:21:31,120
crook affected devices with cypress and

552
00:21:31,120 --> 00:21:31,760
broadcom

553
00:21:31,760 --> 00:21:34,080
wi-fi chips and these chips are really

554
00:21:34,080 --> 00:21:36,080
prevalent

555
00:21:36,080 --> 00:21:38,000
these are just the examples of devices

556
00:21:38,000 --> 00:21:39,679
we confirmed to have been vulnerable

557
00:21:39,679 --> 00:21:41,760
in our lab but we know there were many

558
00:21:41,760 --> 00:21:44,000
more and the total number of

559
00:21:44,000 --> 00:21:47,919
affected devices was well over a billion

560
00:21:47,919 --> 00:21:49,679
when we were doing our initial crook

561
00:21:49,679 --> 00:21:51,440
testing last year

562
00:21:51,440 --> 00:21:53,039
we did not see the vulnerability

563
00:21:53,039 --> 00:21:55,200
manifest itself on devices with wi-fi

564
00:21:55,200 --> 00:21:56,960
chips from other manufacturers like

565
00:21:56,960 --> 00:21:57,679
qualcomm

566
00:21:57,679 --> 00:22:01,200
realtek raylink or mediatek but we later

567
00:22:01,200 --> 00:22:03,280
found out that some of those companies

568
00:22:03,280 --> 00:22:03,679
had

569
00:22:03,679 --> 00:22:06,159
other similar issues and stefan will

570
00:22:06,159 --> 00:22:09,679
tell you more about that in a minute

571
00:22:10,720 --> 00:22:13,280
so what happened after that discovery

572
00:22:13,280 --> 00:22:14,640
well we work with

573
00:22:14,640 --> 00:22:16,400
the affected manufacturers through a

574
00:22:16,400 --> 00:22:18,960
responsible disclosure process

575
00:22:18,960 --> 00:22:21,679
and considering the complexity of the

576
00:22:21,679 --> 00:22:22,080
bug

577
00:22:22,080 --> 00:22:24,480
and the two-step patching process

578
00:22:24,480 --> 00:22:25,120
involving

579
00:22:25,120 --> 00:22:27,840
chip manufacturers and then oems or

580
00:22:27,840 --> 00:22:29,520
device manufacturers

581
00:22:29,520 --> 00:22:31,520
we agreed on a longer than usual grace

582
00:22:31,520 --> 00:22:35,200
period of a 120 days

583
00:22:35,200 --> 00:22:37,600
as far as we know most major vendors

584
00:22:37,600 --> 00:22:40,880
have released patches

585
00:22:40,880 --> 00:22:43,200
now not only would it be difficult for

586
00:22:43,200 --> 00:22:45,039
us to communicate with

587
00:22:45,039 --> 00:22:47,200
every individual device manufacturer

588
00:22:47,200 --> 00:22:49,280
that could possibly be using

589
00:22:49,280 --> 00:22:51,919
these chips in their devices it would

590
00:22:51,919 --> 00:22:53,360
also be impossible

591
00:22:53,360 --> 00:22:55,520
i mean there is no public comprehensive

592
00:22:55,520 --> 00:22:57,200
list

593
00:22:57,200 --> 00:22:59,679
clients of broadcom and cypress that's

594
00:22:59,679 --> 00:23:01,679
proprietary information of broadcom and

595
00:23:01,679 --> 00:23:02,799
cyprus

596
00:23:02,799 --> 00:23:05,679
and they didn't tell us so what we did

597
00:23:05,679 --> 00:23:06,960
in order to ensure that

598
00:23:06,960 --> 00:23:09,039
all possibly affected parties became

599
00:23:09,039 --> 00:23:10,880
aware of the bug

600
00:23:10,880 --> 00:23:14,000
was we work with ikasi an organization

601
00:23:14,000 --> 00:23:15,919
that helps coordinate such complicated

602
00:23:15,919 --> 00:23:17,200
disclosures

603
00:23:17,200 --> 00:23:18,640
and we strongly encourage other

604
00:23:18,640 --> 00:23:20,720
researchers in similar situations to do

605
00:23:20,720 --> 00:23:23,840
so they were very helpful

606
00:23:25,679 --> 00:23:27,840
now i'm going to go back in time and

607
00:23:27,840 --> 00:23:29,919
explain how our research started

608
00:23:29,919 --> 00:23:31,840
but more importantly the connections to

609
00:23:31,840 --> 00:23:34,559
previous work

610
00:23:35,280 --> 00:23:38,320
i'm sure for a lot of you all of this

611
00:23:38,320 --> 00:23:40,640
probably reminds you of other weaknesses

612
00:23:40,640 --> 00:23:42,720
in wpa2 from the past

613
00:23:42,720 --> 00:23:46,559
such as crack crack being short for key

614
00:23:46,559 --> 00:23:48,480
re-installation attacks

615
00:23:48,480 --> 00:23:50,960
was researched from 2017 by matthew

616
00:23:50,960 --> 00:23:52,080
fanhoff

617
00:23:52,080 --> 00:23:53,760
which he also presented at blackhat

618
00:23:53,760 --> 00:23:56,240
europe 2017.

619
00:23:56,240 --> 00:23:58,799
and the point with crack as the acronym

620
00:23:58,799 --> 00:24:00,000
suggests

621
00:24:00,000 --> 00:24:02,400
it's all about reinstalling an already

622
00:24:02,400 --> 00:24:04,320
in-use encryption key

623
00:24:04,320 --> 00:24:06,240
but resetting that nonce that i

624
00:24:06,240 --> 00:24:09,200
mentioned in the beginning

625
00:24:09,440 --> 00:24:11,120
and in the beginning of our research we

626
00:24:11,120 --> 00:24:13,279
discovered that amazon echo the first

627
00:24:13,279 --> 00:24:14,400
generation

628
00:24:14,400 --> 00:24:17,440
was vulnerable to crack so we did

629
00:24:17,440 --> 00:24:20,240
responsible disclosure and while amazon

630
00:24:20,240 --> 00:24:21,919
was working on the patch

631
00:24:21,919 --> 00:24:24,000
we were looking into the second

632
00:24:24,000 --> 00:24:26,080
generation of echo

633
00:24:26,080 --> 00:24:28,000
now the second generation was not

634
00:24:28,000 --> 00:24:31,360
vulnerable to the original crack attack

635
00:24:31,360 --> 00:24:34,320
but it was vulnerable to a modification

636
00:24:34,320 --> 00:24:36,400
of that attack

637
00:24:36,400 --> 00:24:38,880
and this modification led to an all-zero

638
00:24:38,880 --> 00:24:41,039
key being installed

639
00:24:41,039 --> 00:24:44,840
and the cause of that was you guessed it

640
00:24:44,840 --> 00:24:48,159
crook so we continued

641
00:24:48,159 --> 00:24:50,559
our discussions with amazon we continued

642
00:24:50,559 --> 00:24:52,159
our research

643
00:24:52,159 --> 00:24:54,320
until we came to realize that the

644
00:24:54,320 --> 00:24:56,559
problem was actually in the wi-fi chip

645
00:24:56,559 --> 00:24:57,919
itself

646
00:24:57,919 --> 00:25:00,559
in the case of this device the chip by

647
00:25:00,559 --> 00:25:01,840
cyprus

648
00:25:01,840 --> 00:25:04,240
now cyprus bought the iot division of

649
00:25:04,240 --> 00:25:05,919
broadcom

650
00:25:05,919 --> 00:25:08,320
and from our perspective or from the

651
00:25:08,320 --> 00:25:10,640
perspective of the crook vulnerability

652
00:25:10,640 --> 00:25:13,440
the chips are basically the same but

653
00:25:13,440 --> 00:25:14,799
since broadcom chips

654
00:25:14,799 --> 00:25:16,880
were so widespread even more so than

655
00:25:16,880 --> 00:25:18,159
cyprus

656
00:25:18,159 --> 00:25:20,480
that's when we realized the scale of

657
00:25:20,480 --> 00:25:22,960
this vulnerability

658
00:25:22,960 --> 00:25:25,360
and that's how cracking amazon echo

659
00:25:25,360 --> 00:25:29,840
brought us to discovering crook

660
00:25:30,320 --> 00:25:33,520
i put together this table to explain how

661
00:25:33,520 --> 00:25:34,159
the two

662
00:25:34,159 --> 00:25:37,600
are related and how they differ

663
00:25:37,600 --> 00:25:39,840
both of them could lead to similar

664
00:25:39,840 --> 00:25:40,640
outcomes

665
00:25:40,640 --> 00:25:43,279
unauthorized decryption of encrypted

666
00:25:43,279 --> 00:25:45,120
wireless traffic

667
00:25:45,120 --> 00:25:48,880
but they're also two separate issues

668
00:25:48,880 --> 00:25:51,919
crack is an attack an

669
00:25:51,919 --> 00:25:54,960
exploit and crook as we've explained is

670
00:25:54,960 --> 00:25:57,440
a vulnerability a bug

671
00:25:57,440 --> 00:26:00,240
the point with crack is that a nonce is

672
00:26:00,240 --> 00:26:02,880
being reused to acquire the key stream

673
00:26:02,880 --> 00:26:04,799
with crook it's about data being

674
00:26:04,799 --> 00:26:05,919
encrypted with an

675
00:26:05,919 --> 00:26:09,360
all zero session key crack is triggered

676
00:26:09,360 --> 00:26:11,520
during that four-way handshake

677
00:26:11,520 --> 00:26:13,159
crook is triggered after a

678
00:26:13,159 --> 00:26:15,840
disassociation

679
00:26:15,840 --> 00:26:19,039
as far as the impact crack affected most

680
00:26:19,039 --> 00:26:20,960
wi-fi capable devices because it was

681
00:26:20,960 --> 00:26:21,840
about the

682
00:26:21,840 --> 00:26:25,520
protocols themselves crook affected

683
00:26:25,520 --> 00:26:28,640
most most widespread wi-fi chips out

684
00:26:28,640 --> 00:26:32,080
there by broadcom and cyprus

685
00:26:32,320 --> 00:26:34,960
now the most severe manifestation of

686
00:26:34,960 --> 00:26:36,159
crack

687
00:26:36,159 --> 00:26:39,919
is the installation of an all-zero key

688
00:26:39,919 --> 00:26:43,039
and crook is also one of the possible

689
00:26:43,039 --> 00:26:44,000
reasons why

690
00:26:44,000 --> 00:26:46,240
encryption with an all-zero key can

691
00:26:46,240 --> 00:26:48,159
happen so that's something they have in

692
00:26:48,159 --> 00:26:52,240
common too

693
00:26:52,240 --> 00:26:54,640
i mentioned that our initial scripts for

694
00:26:54,640 --> 00:26:56,080
testing crook didn't reveal the

695
00:26:56,080 --> 00:26:57,200
vulnerability on

696
00:26:57,200 --> 00:27:00,720
other chipsets than broadcom or cypress

697
00:27:00,720 --> 00:27:03,440
that was true but we did find something

698
00:27:03,440 --> 00:27:04,640
nevertheless

699
00:27:04,640 --> 00:27:07,840
and stefan will tell you more

700
00:27:12,720 --> 00:27:16,240
so after our former rsa presentation in

701
00:27:16,240 --> 00:27:17,120
february

702
00:27:17,120 --> 00:27:18,799
the issue was brought to attention of

703
00:27:18,799 --> 00:27:21,039
many other chipset manufacturers

704
00:27:21,039 --> 00:27:23,120
one of the chips we were looking into

705
00:27:23,120 --> 00:27:25,200
aside from broadcom and cyprus were from

706
00:27:25,200 --> 00:27:26,240
qualcomm

707
00:27:26,240 --> 00:27:28,480
our investigation found that their wifi

708
00:27:28,480 --> 00:27:29,919
chips are also vulnerable

709
00:27:29,919 --> 00:27:32,840
but the exploit manifests itself

710
00:27:32,840 --> 00:27:35,840
differently

711
00:27:36,159 --> 00:27:38,399
this is via shark log of a residual

712
00:27:38,399 --> 00:27:39,919
frame after the association

713
00:27:39,919 --> 00:27:42,480
was invoked on a qualcomm router as you

714
00:27:42,480 --> 00:27:43,919
can see

715
00:27:43,919 --> 00:27:46,960
protected flag is true and the frame

716
00:27:46,960 --> 00:27:49,440
appears to have a ccemp parameter

717
00:27:49,440 --> 00:27:51,840
but the data aren't encrypted at all as

718
00:27:51,840 --> 00:27:53,039
they should be

719
00:27:53,039 --> 00:27:55,919
this frame is an icmp echo from ping

720
00:27:55,919 --> 00:27:58,320
command

721
00:27:58,720 --> 00:28:02,000
we reported this this the issue to them

722
00:28:02,000 --> 00:28:03,279
and they approached it as a crook

723
00:28:03,279 --> 00:28:05,120
variant and assigned

724
00:28:05,120 --> 00:28:09,520
cve 2020 3702

725
00:28:09,520 --> 00:28:13,279
the affected chip was qca 9531

726
00:28:13,279 --> 00:28:14,799
which is a highly integrated and

727
00:28:14,799 --> 00:28:16,399
feature-rich system-on-chip

728
00:28:16,399 --> 00:28:19,760
for advanced wi-fi platforms

729
00:28:19,760 --> 00:28:22,799
it is used mainly in network routers

730
00:28:22,799 --> 00:28:24,480
they resolved the issue with updating

731
00:28:24,480 --> 00:28:27,440
their proprietary linux driver in july

732
00:28:27,440 --> 00:28:29,440
the only problem is that not all devices

733
00:28:29,440 --> 00:28:30,799
with qualcomm chips

734
00:28:30,799 --> 00:28:33,360
use this proprietary driver in some

735
00:28:33,360 --> 00:28:34,320
cases

736
00:28:34,320 --> 00:28:38,399
open source linux drivers are also used

737
00:28:38,399 --> 00:28:41,600
such as upstream adh9k

738
00:28:41,600 --> 00:28:44,960
driver for example so a word of caution

739
00:28:44,960 --> 00:28:46,399
that these may or may not be

740
00:28:46,399 --> 00:28:48,880
patched yet the good news is the new

741
00:28:48,880 --> 00:28:50,960
mobile devices with integrated

742
00:28:50,960 --> 00:28:53,600
system on chips specific specifically

743
00:28:53,600 --> 00:28:56,240
for android and windows on snapdragon

744
00:28:56,240 --> 00:28:58,720
should be not affected by this issue

745
00:28:58,720 --> 00:29:01,200
other widespread wi-fi chips that were

746
00:29:01,200 --> 00:29:04,000
that we looked into were from mediatek

747
00:29:04,000 --> 00:29:06,080
we observed a vulnerable behavior very

748
00:29:06,080 --> 00:29:07,039
similar to the one

749
00:29:07,039 --> 00:29:09,679
observed on qualcomm devices on an older

750
00:29:09,679 --> 00:29:10,960
asus router

751
00:29:10,960 --> 00:29:13,520
but what was far more interesting we

752
00:29:13,520 --> 00:29:14,559
observed it

753
00:29:14,559 --> 00:29:16,159
on the current microsoft azure sphere

754
00:29:16,159 --> 00:29:18,679
development kit which uses mediatek

755
00:29:18,679 --> 00:29:22,159
mt-3630 microcontroller

756
00:29:22,159 --> 00:29:25,039
the mt-3620 is a highly integrated

757
00:29:25,039 --> 00:29:26,080
performance iot

758
00:29:26,080 --> 00:29:29,279
mcu with the high level of security

759
00:29:29,279 --> 00:29:31,200
necessary for modern robust internet

760
00:29:31,200 --> 00:29:33,520
connected devices

761
00:29:33,520 --> 00:29:35,200
it targets wide range of iot

762
00:29:35,200 --> 00:29:37,520
applications including smart homes

763
00:29:37,520 --> 00:29:40,159
commercial industrial and many other

764
00:29:40,159 --> 00:29:42,640
domains

765
00:29:42,880 --> 00:29:44,399
we've contacted mediatek about this

766
00:29:44,399 --> 00:29:46,960
discovery discovered vulnerabilities

767
00:29:46,960 --> 00:29:49,840
mediatek has informed us that they aware

768
00:29:49,840 --> 00:29:50,960
of the issue

769
00:29:50,960 --> 00:29:54,080
and reviewed all wi-fi products and the

770
00:29:54,080 --> 00:29:55,840
corresponding software patches to

771
00:29:55,840 --> 00:29:57,360
impacted projects

772
00:29:57,360 --> 00:29:58,559
have been released to different

773
00:29:58,559 --> 00:30:01,679
customers around march and april already

774
00:30:01,679 --> 00:30:03,279
a separate question remains whether all

775
00:30:03,279 --> 00:30:05,200
device manufacturers have implemented

776
00:30:05,200 --> 00:30:07,440
these patches

777
00:30:07,440 --> 00:30:10,799
with regard to other sphere mt3620

778
00:30:10,799 --> 00:30:12,559
the patch should be integrated into the

779
00:30:12,559 --> 00:30:16,399
latest operational system update

780
00:30:16,720 --> 00:30:18,399
and how the one liberty manifested

781
00:30:18,399 --> 00:30:19,919
itself on mediatek devices

782
00:30:19,919 --> 00:30:22,480
very similar as on the qualcomm devices

783
00:30:22,480 --> 00:30:24,240
this is a very sharp lock

784
00:30:24,240 --> 00:30:26,880
of a residual frame after dissociation

785
00:30:26,880 --> 00:30:27,760
was invoked on

786
00:30:27,760 --> 00:30:31,200
azure sphere mt-3620

787
00:30:31,200 --> 00:30:33,520
as you can see the protected flag is set

788
00:30:33,520 --> 00:30:35,279
through

789
00:30:35,279 --> 00:30:37,600
but the frame doesn't have any ccmp

790
00:30:37,600 --> 00:30:39,760
parameters

791
00:30:39,760 --> 00:30:42,799
and the beginning of the data is falsely

792
00:30:42,799 --> 00:30:46,799
identified as a wep header

793
00:30:46,799 --> 00:30:49,679
here we didn't use icmp echo because of

794
00:30:49,679 --> 00:30:51,600
the device limitations

795
00:30:51,600 --> 00:30:53,679
but an application which sends udp

796
00:30:53,679 --> 00:30:56,240
frames with a simple pattern

797
00:30:56,240 --> 00:31:05,840
as you can see the frame isn't encrypted

798
00:31:07,760 --> 00:31:10,879
okay let's wrap up

799
00:31:11,360 --> 00:31:14,320
first a hat tip to matthew fanhof whose

800
00:31:14,320 --> 00:31:16,000
great research on crack

801
00:31:16,000 --> 00:31:18,720
brought us here in the first place then

802
00:31:18,720 --> 00:31:20,159
to all these companies

803
00:31:20,159 --> 00:31:22,559
with whom the cooperation went really

804
00:31:22,559 --> 00:31:23,679
smoothly

805
00:31:23,679 --> 00:31:25,440
and they responded to our disclosures

806
00:31:25,440 --> 00:31:26,720
professionally

807
00:31:26,720 --> 00:31:29,360
especially amazon the joint effort

808
00:31:29,360 --> 00:31:31,200
trying to get to the bottom of what was

809
00:31:31,200 --> 00:31:32,159
going on

810
00:31:32,159 --> 00:31:35,519
was stellar and there are a lot of other

811
00:31:35,519 --> 00:31:37,600
companies with whom we did not have

812
00:31:37,600 --> 00:31:40,000
that much cooperation but they also

813
00:31:40,000 --> 00:31:41,760
handled the situation well released

814
00:31:41,760 --> 00:31:44,399
patches and so on

815
00:31:44,399 --> 00:31:45,840
and we've been providing links to any

816
00:31:45,840 --> 00:31:48,000
security advisories we could find

817
00:31:48,000 --> 00:31:51,279
to our crook web page so what are the

818
00:31:51,279 --> 00:31:53,919
takeaways for you

819
00:31:53,919 --> 00:31:56,240
the source of crook and the other

820
00:31:56,240 --> 00:31:58,080
related vulnerabilities

821
00:31:58,080 --> 00:32:01,200
is the wi-fi chip now fortunately you

822
00:32:01,200 --> 00:32:02,559
don't have to go

823
00:32:02,559 --> 00:32:04,240
and replace the chips on all your

824
00:32:04,240 --> 00:32:06,799
devices how would you do that

825
00:32:06,799 --> 00:32:09,120
and you don't have to be throwing away

826
00:32:09,120 --> 00:32:11,200
your iphones either

827
00:32:11,200 --> 00:32:12,960
um no you can mitigate the

828
00:32:12,960 --> 00:32:15,039
vulnerabilities with a firmware or

829
00:32:15,039 --> 00:32:17,120
driver update

830
00:32:17,120 --> 00:32:19,919
the obvious advice that arose from our

831
00:32:19,919 --> 00:32:21,919
initial crook discovery was

832
00:32:21,919 --> 00:32:24,480
make sure that all of your devices with

833
00:32:24,480 --> 00:32:26,320
broadcom or cypress chips

834
00:32:26,320 --> 00:32:29,279
are running the latest software versions

835
00:32:29,279 --> 00:32:31,360
now that device has its limitations

836
00:32:31,360 --> 00:32:32,960
though first

837
00:32:32,960 --> 00:32:35,519
as a regular user you often have no way

838
00:32:35,519 --> 00:32:36,240
of knowing

839
00:32:36,240 --> 00:32:39,840
what vendor made the chip in your device

840
00:32:39,840 --> 00:32:43,039
and secondly as it turned out

841
00:32:43,039 --> 00:32:45,600
other similar vulnerabilities affected

842
00:32:45,600 --> 00:32:48,159
chips by other manufacturers

843
00:32:48,159 --> 00:32:51,440
so we're going back to the almighty

844
00:32:51,440 --> 00:32:52,159
advice

845
00:32:52,159 --> 00:32:54,080
just better to make sure to keep all of

846
00:32:54,080 --> 00:32:57,039
your devices up to date

847
00:32:57,039 --> 00:32:58,799
and it goes for access points and wi-fi

848
00:32:58,799 --> 00:33:00,320
routers too

849
00:33:00,320 --> 00:33:02,880
because as stable talked about crook

850
00:33:02,880 --> 00:33:03,679
affects those

851
00:33:03,679 --> 00:33:09,200
too and it also affects wpa2 enterprise

852
00:33:09,200 --> 00:33:11,440
now in case you're a manufacturer of

853
00:33:11,440 --> 00:33:13,919
wi-fi capable devices yourself

854
00:33:13,919 --> 00:33:15,360
and you're hearing about crook for the

855
00:33:15,360 --> 00:33:17,919
first time i highly recommend you get in

856
00:33:17,919 --> 00:33:19,840
touch with the wi-fi alliance

857
00:33:19,840 --> 00:33:23,200
and your chip manufacturer

858
00:33:23,200 --> 00:33:26,480
a final general note many of those

859
00:33:26,480 --> 00:33:27,840
devices

860
00:33:27,840 --> 00:33:30,240
we talked about that were vulnerable

861
00:33:30,240 --> 00:33:31,919
like smartphones

862
00:33:31,919 --> 00:33:33,360
they get over-the-air updates

863
00:33:33,360 --> 00:33:35,919
automatically or the user is at least

864
00:33:35,919 --> 00:33:38,159
prompted to install them

865
00:33:38,159 --> 00:33:41,120
but others like some wi-fi routers for

866
00:33:41,120 --> 00:33:41,840
example

867
00:33:41,840 --> 00:33:44,159
need to be updated manually and this is

868
00:33:44,159 --> 00:33:45,840
often problematic

869
00:33:45,840 --> 00:33:48,320
it could lead to attack scenarios like

870
00:33:48,320 --> 00:33:48,880
those

871
00:33:48,880 --> 00:33:51,919
stefan talked about and this is cause

872
00:33:51,919 --> 00:33:54,240
for concern in normal situations

873
00:33:54,240 --> 00:33:56,320
but even more so when more people are

874
00:33:56,320 --> 00:33:57,519
working from home

875
00:33:57,519 --> 00:34:01,840
due to covet 19. so these are employees

876
00:34:01,840 --> 00:34:04,640
accessing corporate resources that are

877
00:34:04,640 --> 00:34:06,159
responsible for their own

878
00:34:06,159 --> 00:34:09,199
home wi-fi security so crook is

879
00:34:09,199 --> 00:34:11,359
something that company csos definitely

880
00:34:11,359 --> 00:34:14,879
need to be paying attention to

881
00:34:16,079 --> 00:34:17,918
for more technical details on the crook

882
00:34:17,918 --> 00:34:19,280
vulnerability check out

883
00:34:19,280 --> 00:34:22,480
our research paper for up-to-date

884
00:34:22,480 --> 00:34:23,280
information

885
00:34:23,280 --> 00:34:26,079
frequently asked questions the script

886
00:34:26,079 --> 00:34:27,760
that we used in the demo

887
00:34:27,760 --> 00:34:30,239
and links to vendor advisories go to

888
00:34:30,239 --> 00:34:31,839
this web page we created

889
00:34:31,839 --> 00:34:35,839
dedicated to crook

890
00:34:36,239 --> 00:34:38,719
thank you for watching do make sure to

891
00:34:38,719 --> 00:34:40,960
check out our lab's twitter account

892
00:34:40,960 --> 00:34:44,199
at eset research and our blog we leave

893
00:34:44,199 --> 00:34:45,679
security.com

894
00:34:45,679 --> 00:34:48,399
for the latest research updates and now

895
00:34:48,399 --> 00:34:49,040
we will take

896
00:34:49,040 --> 00:34:53,520
questions if there are any

